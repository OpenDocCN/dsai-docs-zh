- en: Polynomials Manipulation Module Reference
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多项式操作模块参考
- en: Original text：[https://docs.sympy.org/latest/modules/polys/reference.html](https://docs.sympy.org/latest/modules/polys/reference.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/polys/reference.html](https://docs.sympy.org/latest/modules/polys/reference.html)
- en: Polynomial manipulation algorithms and algebraic objects.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式操作算法和代数对象。
- en: See [Polynomial Manipulation](index.html#polys-docs) for an index of documentation
    for the polys module and [Basic functionality of the module](basics.html#polys-basics)
    for an introductory explanation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看[多项式操作](index.html#polys-docs)以获取 polys 模块文档的索引和[模块的基本功能](basics.html#polys-basics)以获取简介性说明。
- en: Basic polynomial manipulation functions
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本多项式操作函数
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Efficiently transform an expression into a polynomial.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 将表达式有效地转换为多项式。
- en: Examples
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Construct a polynomial from an expression.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 从表达式构造一个多项式。
- en: '[PRE4]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Construct polynomials from expressions.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 从表达式构造多项式。
- en: '[PRE5]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Return the degree of `f` in the given variable.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 在给定变量中的次数。
- en: The degree of 0 is negative infinity.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 0 的次数为负无穷大。
- en: Examples
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE6]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: See also
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.polys.polytools.Poly.total_degree`](#sympy.polys.polytools.Poly.total_degree
    "sympy.polys.polytools.Poly.total_degree"), [`degree_list`](#sympy.polys.polytools.degree_list
    "sympy.polys.polytools.degree_list")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.Poly.total_degree`](#sympy.polys.polytools.Poly.total_degree
    "sympy.polys.polytools.Poly.total_degree")，[`degree_list`](#sympy.polys.polytools.degree_list
    "sympy.polys.polytools.degree_list")'
- en: '[PRE8]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Return a list of degrees of `f` in all variables.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 在所有变量中的次数列表。
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Return the leading coefficient of `f`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多项式 `f` 的首项系数。
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE12]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Return the leading monomial of `f`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的首项单项式。
- en: Examples
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE15]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Return the leading term of `f`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的首项。
- en: Examples
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE18]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Compute polynomial pseudo-division of `f` and `g`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式 `f` 和 `g` 的伪除法。
- en: Examples
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE21]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Compute polynomial pseudo-remainder of `f` and `g`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式 `f` 和 `g` 的伪余数。
- en: Examples
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE24]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Compute polynomial pseudo-quotient of `f` and `g`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式 `f` 和 `g` 的精确伪商。
- en: Examples
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE27]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Compute polynomial exact pseudo-quotient of `f` and `g`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式 `f` 和 `g` 的精确伪商。
- en: Examples
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE30]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Compute polynomial division of `f` and `g`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式 `f` 和 `g` 的除法。
- en: Examples
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE34]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Compute polynomial remainder of `f` and `g`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式 `f` 和 `g` 的余数。
- en: Examples
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE37]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Compute polynomial quotient of `f` and `g`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式 `f` 和 `g` 的商。
- en: Examples
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE40]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Compute polynomial exact quotient of `f` and `g`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式 `f` 和 `g` 的精确商。
- en: Examples
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE43]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Half extended Euclidean algorithm of `f` and `g`.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 和 `g` 的半扩展欧几里德算法。'
- en: Returns `(s, h)` such that `h = gcd(f, g)` and `s*f = h (mod g)`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `(s, h)`，使得 `h = gcd(f, g)` 和 `s*f = h (mod g)`。
- en: Examples
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE47]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Extended Euclidean algorithm of `f` and `g`.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 和 `g` 的扩展欧几里德算法。'
- en: Returns `(s, t, h)` such that `h = gcd(f, g)` and `s*f + t*g = h`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `(s, t, h)`，使得 `h = gcd(f, g)` 和 `s*f + t*g = h`。
- en: Examples
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE50]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Invert `f` modulo `g` when possible.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能时对 `f` 模 `g` 取倒数。
- en: Examples
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE53]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'For more efficient inversion of Rationals, use the [`sympy.core.intfunc.mod_inverse`](../core.html#sympy.core.intfunc.mod_inverse
    "sympy.core.intfunc.mod_inverse") function:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要更高效地求有理数的倒数，请使用[`sympy.core.intfunc.mod_inverse`](../core.html#sympy.core.intfunc.mod_inverse
    "sympy.core.intfunc.mod_inverse")函数：
- en: '[PRE56]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: See also
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.core.intfunc.mod_inverse`](../core.html#sympy.core.intfunc.mod_inverse
    "sympy.core.intfunc.mod_inverse")'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.core.intfunc.mod_inverse`](../core.html#sympy.core.intfunc.mod_inverse
    "sympy.core.intfunc.mod_inverse")'
- en: '[PRE57]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Compute subresultant PRS of `f` and `g`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的子结果 PRS。
- en: Examples
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE58]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Compute resultant of `f` and `g`.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的结果多项式。
- en: Examples
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE61]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Compute discriminant of `f`.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的判别式。
- en: Examples
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE64]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Remove GCD of terms from `f`.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 移除 `f` 中项的最大公因式。
- en: If the `deep` flag is True, then the arguments of `f` will have terms_gcd applied
    to them.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `deep` 标志为 True，则 `f` 的参数将应用 `terms_gcd` 到它们。
- en: If a fraction is factored out of `f` and `f` is an Add, then an unevaluated
    Mul will be returned so that automatic simplification does not redistribute it.
    The hint `clear`, when set to False, can be used to prevent such factoring when
    all coefficients are not fractions.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果从 `f` 中分离出一个分数，并且 `f` 是一个加法表达式，则会返回一个未求值的乘法表达式，以避免自动化简时重新分配它。当 `clear` 标志设置为
    False 时，可以防止这种分离，前提是所有系数都不是分数。
- en: Examples
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE67]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'The default action of polys routines is to expand the expression given to them.
    terms_gcd follows this behavior:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: polys 程序的默认操作是展开给定的表达式。`terms_gcd` 遵循此行为：
- en: '[PRE68]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'If this is not desired then the hint `expand` can be set to False. In this
    case the expression will be treated as though it were comprised of one or more
    terms:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不需要这样做，则可以将提示 `expand` 设置为 False。在这种情况下，该表达式将被视为由一个或多个项组成：
- en: '[PRE69]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'In order to traverse factors of a Mul or the arguments of other functions,
    the `deep` hint can be used:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 为了遍历 `Mul` 的因子或其他函数的参数，可以使用 `deep` 提示：
- en: '[PRE70]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Rationals are factored out by default:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 有理数默认被分解出来：
- en: '[PRE71]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Only the y-term had a coefficient that was a fraction; if one does not want
    to factor out the 1/2 in cases like this, the flag `clear` can be set to False:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 只有 `y` 项的系数是分数；如果不想在这种情况下因式分解 `1/2`，可以将标志 `clear` 设为 `False`：
- en: '[PRE72]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'The `clear` flag is ignored if all coefficients are fractions:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有系数都是分数，则忽略 `clear` 标志：
- en: '[PRE73]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: See also
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.core.exprtools.gcd_terms`](../core.html#sympy.core.exprtools.gcd_terms
    "sympy.core.exprtools.gcd_terms"), [`sympy.core.exprtools.factor_terms`](../core.html#sympy.core.exprtools.factor_terms
    "sympy.core.exprtools.factor_terms")'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.core.exprtools.gcd_terms`](../core.html#sympy.core.exprtools.gcd_terms
    "sympy.core.exprtools.gcd_terms"), [`sympy.core.exprtools.factor_terms`](../core.html#sympy.core.exprtools.factor_terms
    "sympy.core.exprtools.factor_terms")'
- en: '[PRE74]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Compute GCD and cofactors of `f` and `g`.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的最大公约数及其余因子。
- en: Returns polynomials `(h, cff, cfg)` such that `h = gcd(f, g)`, and `cff = quo(f,
    h)` and `cfg = quo(g, h)` are, so called, cofactors of `f` and `g`.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多项式 `(h, cff, cfg)`，使得 `h = gcd(f, g)`，`cff = quo(f, h)` 和 `cfg = quo(g, h)`
    是所谓的 `f` 和 `g` 的余因子。
- en: Examples
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE75]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Compute GCD of `f` and `g`.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的最大公约数。
- en: Examples
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE78]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Compute GCD of a list of polynomials.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式列表的最大公约数。
- en: Examples
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE81]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Compute LCM of `f` and `g`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的最小公倍数。
- en: Examples
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE84]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Compute LCM of a list of polynomials.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式列表的最小公倍数。
- en: Examples
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE87]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Reduce `f` modulo a constant `p`.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 对常数 `p` 取模。
- en: Examples
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE90]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Divide all coefficients of `f` by `LC(f)`.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 的所有系数除以 `LC(f)`。
- en: Examples
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE93]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Compute GCD of coefficients of `f`.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的系数的最大公约数。
- en: Examples
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE96]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Compute content and the primitive form of `f`.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的内容和原始形式。
- en: Examples
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE99]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'Expansion is performed by default:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 默认执行展开：
- en: '[PRE102]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: Set `expand` to False to shut this off. Note that the extraction will not be
    recursive; use the as_content_primitive method for recursive, non-destructive
    Rational extraction.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `expand` 设置为 `False` 可关闭此功能。请注意，提取将不会递归进行；使用 `as_content_primitive` 方法进行递归、非破坏性有理数提取。
- en: '[PRE103]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Compute functional composition `f(g)`.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 计算函数组合 `f(g)`。
- en: Examples
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE106]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Compute functional decomposition of `f`.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的函数分解。
- en: Examples
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE109]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[PRE110]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: Compute Sturm sequence of `f`.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的斯图姆序列。
- en: Examples
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE112]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Compute a list of greatest factorial factors of `f`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的最大阶乘因式列表。
- en: Note that the input to ff() and rf() should be Poly instances to use the definitions
    here.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`ff()` 和 `rf()` 的输入应为 `Poly` 实例，以使用这里的定义。
- en: Examples
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE115]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '[PRE122]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Compute greatest factorial factorization of `f`.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的最大阶乘因式分解。
- en: '[PRE123]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Compute square-free norm of `f`.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的平方自由规范。
- en: Returns `s`, `f`, `r`, such that `g(x) = f(x-sa)` and `r(x) = Norm(g(x))` is
    a square-free polynomial over `K`, where `a` is the algebraic extension of the
    ground domain.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `s`，`f`，`r`，使得 `g(x) = f(x-sa)` 和 `r(x) = Norm(g(x))` 是 `K` 上的平方自由多项式，其中
    `a` 是基域的代数扩展。
- en: Examples
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE124]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '[PRE125]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: '[PRE126]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: Compute square-free part of `f`.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的平方自由部分。
- en: Examples
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE127]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '[PRE129]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Compute a list of square-free factors of `f`.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的平方自由因式列表。
- en: Examples
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE130]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '[PRE131]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '[PRE132]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Compute square-free factorization of `f`.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的平方自由因式分解。
- en: Examples
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE133]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[PRE134]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: '[PRE135]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: Compute a list of irreducible factors of `f`.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的不可约因式列表。
- en: Examples
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE136]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: '[PRE137]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '[PRE138]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: Compute the factorization of expression, `f`, into irreducibles. (To factor
    an integer into primes, use `factorint`.)
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 计算表达式 `f` 的因式分解为不可约因式。（要将整数因式分解为质数，请使用 `factorint`。）
- en: 'There two modes implemented: symbolic and formal. If `f` is not an instance
    of [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly") and generators
    are not specified, then the former mode is used. Otherwise, the formal mode is
    used.'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种实现模式：符号模式和形式模式。如果 `f` 不是 [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    的实例，并且未指定生成器，则使用前者模式。否则，使用形式模式。
- en: In symbolic mode, [`factor()`](#sympy.polys.polytools.factor "sympy.polys.polytools.factor")
    will traverse the expression tree and factor its components without any prior
    expansion, unless an instance of [`Add`](../core.html#sympy.core.add.Add "sympy.core.add.Add")
    is encountered (in this case formal factorization is used). This way [`factor()`](#sympy.polys.polytools.factor
    "sympy.polys.polytools.factor") can handle large or symbolic exponents.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在符号模式下，[`factor()`](#sympy.polys.polytools.factor "sympy.polys.polytools.factor")
    将遍历表达式树并分解其组件，不进行先前的展开，除非遇到 [`Add`](../core.html#sympy.core.add.Add "sympy.core.add.Add")
    的实例（在这种情况下使用形式分解）。这样 [`factor()`](#sympy.polys.polytools.factor "sympy.polys.polytools.factor")
    可以处理大或符号指数。
- en: 'By default, the factorization is computed over the rationals. To factor over
    other domain, e.g. an algebraic or finite field, use appropriate options: `extension`,
    `modulus` or `domain`.'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，因子分解是在有理数上计算的。要在其他域上进行因子分解，例如代数或有限域，请使用适当的选项：`extension`、`modulus` 或 `domain`。
- en: Examples
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE139]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '[PRE140]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: '[PRE141]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: '[PRE142]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: '[PRE143]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'By default, factor deals with an expression as a whole:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，因子处理整个表达式：
- en: '[PRE144]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'If the `deep` flag is True then subexpressions will be factored:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `deep` 标志为 True 则将分解子表达式：
- en: '[PRE145]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: If the `fraction` flag is False then rational expressions will not be combined.
    By default it is True.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `fraction` 标志为 False，则不会合并有理表达式。默认为 True。
- en: '[PRE146]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: See also
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.ntheory.factor_.factorint`](../ntheory.html#sympy.ntheory.factor_.factorint
    "sympy.ntheory.factor_.factorint")'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.ntheory.factor_.factorint`](../ntheory.html#sympy.ntheory.factor_.factorint
    "sympy.ntheory.factor_.factorint")'
- en: '[PRE147]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Compute isolating intervals for roots of `f`.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的根的隔离区间。
- en: Examples
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE148]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: '[PRE150]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Refine an isolating interval of a root to the given precision.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 将根的隔离区间精确化到给定的精度。
- en: Examples
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE151]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: '[PRE152]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: Return the number of roots of `f` in `[inf, sup]` interval.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在 `[inf, sup]` 区间内 `f` 的根数。
- en: If one of `inf` or `sup` is complex, it will return the number of roots in the
    complex rectangle with corners at `inf` and `sup`.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `inf` 或 `sup` 中的一个是复数，则将返回在以 `inf` 和 `sup` 为角的复数矩形中的根数。
- en: Examples
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE154]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: '[PRE155]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: Returns the real and complex roots of `f` with multiplicities.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的实数和复数根及其重数。
- en: 'Parameters:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")
    or [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr") 或
    [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")'
- en: A univariate polynomial with rational (or `Float`) coefficients.
  id: totrans-286
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一元有理（或 `Float`）系数的多项式。
- en: '**multiple** : `bool` (default `True`).'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '**multiple**：`bool`（默认为 `True`）。'
- en: Whether to return a `list` of roots or a list of root/multiplicity pairs.
  id: totrans-288
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 是否返回根的 `list` 或根/重数对的列表。
- en: '**radicals** : `bool` (default `True`)'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '**radicals**：`bool`（默认为 `True`）'
- en: Use simple radical formulae rather than [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf") for some irrational roots.
  id: totrans-290
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于一些无理根，使用简单的根式公式而不是 [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf")。
- en: 'Returns:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: A list of [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")
    (usually [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf"))
    representing
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr") 的列表（通常是
    [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf")）表示'
- en: the roots is returned with each root repeated according to its multiplicity
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的根根据其重数重复显示每个根
- en: as a root of `f`. The roots are always uniquely ordered with real roots
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 `f` 的根。根总是以实根唯一的顺序排列
- en: coming before complex roots. The real roots are in increasing order.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在复数根之前。实根按增加顺序排列。
- en: Complex roots are ordered by increasing real part and then increasing
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 复数根按递增的实部和递增的顺序排列
- en: imaginary part.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 虚部。
- en: If `multiple=False` is passed then a list of root/multiplicity pairs is
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递 `multiple=False` 则会返回根/重数对的列表
- en: returned instead.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 替代返回。
- en: If `radicals=False` is passed then all roots will be represented as
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递 `radicals=False` 则所有根将表示为
- en: either rational numbers or [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf").
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 要么是有理数，要么是 [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf")。
- en: Explanation
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Finds all real and complex roots of a univariate polynomial with rational coefficients
    of any degree exactly. The roots are represented in the form given by [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof"). This is equivalent to using [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof") to find each of the indexed roots.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 准确找到具有任意次有理系数的一元多项式的所有实数和复数根。根据 [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof") 给出的形式表示根。这等同于使用 [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof") 找到每个索引根。
- en: Examples
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE157]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '[PRE158]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'Simple radical formulae are used in some cases but the cubic and quartic formulae
    are avoided. Instead most non-rational roots will be represented as [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf"):'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下使用简单的根式公式，但避免使用三次和四次公式。相反，大多数非有理根将表示为 [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf")：
- en: '[PRE159]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 'All roots of any polynomial with rational coefficients of any degree can be
    represented using [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf").
    The use of [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf")
    bypasses limitations on the availability of radical formulae for quintic and higher
    degree polynomials _[1]:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 任何次数的有理系数多项式的所有根都可以用 [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf") 表示。 使用 [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf") 可以绕过关于五次及更高次多项式根式公式可用性的限制 _[1]：
- en: '[PRE160]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: 'Irrational algebraic or transcendental coefficients cannot currently be handled
    by [`all_roots()`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")
    (or [`rootof()`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")
    more generally):'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 目前无法处理无理代数或超越系数 [`all_roots()`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")（或一般上更广义的
    [`rootof()`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")）：
- en: '[PRE161]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'In the case of algebraic or transcendental coefficients [`ground_roots()`](#sympy.polys.polytools.ground_roots
    "sympy.polys.polytools.ground_roots") might be able to find some roots by factorisation:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 对于代数或超越系数，[`ground_roots()`](#sympy.polys.polytools.ground_roots "sympy.polys.polytools.ground_roots")
    可能能够通过因式分解找到一些根：
- en: '[PRE162]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: 'If the coefficients are numeric then [`nroots()`](#sympy.polys.polytools.nroots
    "sympy.polys.polytools.nroots") can be used to find all roots approximately:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系数是数值的，则可以使用[`nroots()`](#sympy.polys.polytools.nroots "sympy.polys.polytools.nroots")来找到所有根的近似值：
- en: '[PRE163]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: 'If the coefficients are symbolic then [`sympy.polys.polyroots.roots()`](#sympy.polys.polyroots.roots
    "sympy.polys.polyroots.roots") or [`ground_roots()`](#sympy.polys.polytools.ground_roots
    "sympy.polys.polytools.ground_roots") should be used instead:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系数是符号的，则应使用[`sympy.polys.polyroots.roots()`](#sympy.polys.polyroots.roots
    "sympy.polys.polyroots.roots")或[`ground_roots()`](#sympy.polys.polytools.ground_roots
    "sympy.polys.polytools.ground_roots")：
- en: '[PRE164]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: See also
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Poly.all_roots`](#sympy.polys.polytools.Poly.all_roots "sympy.polys.polytools.Poly.all_roots")'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Poly.all_roots`](#sympy.polys.polytools.Poly.all_roots "sympy.polys.polytools.Poly.all_roots")'
- en: The underlying [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    method used by [`all_roots()`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots").
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '[`all_roots()`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")
    使用的底层 [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly") 方法。'
- en: '[`rootof`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rootof`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")'
- en: Compute a single numbered root of a univariate polynomial.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 计算单个一元多项式的编号根。
- en: '[`real_roots`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '[`real_roots`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")'
- en: Compute all the real roots using [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof").
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [`rootof()`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")
    计算所有实根。
- en: '[`ground_roots`](#sympy.polys.polytools.ground_roots "sympy.polys.polytools.ground_roots")'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ground_roots`](#sympy.polys.polytools.ground_roots "sympy.polys.polytools.ground_roots")'
- en: Compute some roots in the ground domain by factorisation.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 通过因式分解计算地域域中的一些根。
- en: '[`nroots`](#sympy.polys.polytools.nroots "sympy.polys.polytools.nroots")'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nroots`](#sympy.polys.polytools.nroots "sympy.polys.polytools.nroots")'
- en: Compute all roots using approximate numerical techniques.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 使用近似数值技术计算所有根。
- en: '[`sympy.polys.polyroots.roots`](#sympy.polys.polyroots.roots "sympy.polys.polyroots.roots")'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polyroots.roots`](#sympy.polys.polyroots.roots "sympy.polys.polyroots.roots")'
- en: Compute symbolic expressions for roots using radical formulae.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 使用根式公式计算根的符号表达式。
- en: References
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R808](#id1)]'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R808](#id1)]'
- en: '[https://en.wikipedia.org/wiki/Abel%E2%80%93Ruffini_theorem](https://en.wikipedia.org/wiki/Abel%E2%80%93Ruffini_theorem)'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Abel%E2%80%93Ruffini_theorem](https://en.wikipedia.org/wiki/Abel%E2%80%93Ruffini_theorem)'
- en: '[PRE165]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: Returns the real roots of `f` with multiplicities.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的实根及其重数。
- en: 'Parameters:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")
    or [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr") 或
    [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")'
- en: A univariate polynomial with rational (or `Float`) coefficients.
  id: totrans-339
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一元有理（或`Float`）系数的多项式。
- en: '**multiple** : `bool` (default `True`).'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '**多重**：`bool`（默认`True`）。'
- en: Whether to return a `list` of roots or a list of root/multiplicity pairs.
  id: totrans-341
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 是否返回根的列表或根/重数对列表。
- en: '**radicals** : `bool` (default `True`)'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '**根式**：`bool`（默认`True`）'
- en: Use simple radical formulae rather than [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf") for some irrational roots.
  id: totrans-343
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于一些无理根，使用简单的根式公式而不是[`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf")。
- en: 'Returns:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: A list of [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")
    (usually [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf"))
    representing
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")列表（通常为[`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf")）表示
- en: the real roots is returned. The roots are arranged in increasing order and
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 返回实根。 根据增加顺序排列的根和
- en: are repeated according to their multiplicities as roots of `f`.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 根据它们作为`f`的根的重数重复。
- en: If `multiple=False` is passed then a list of root/multiplicity pairs is
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递了`multiple=False`，则将返回根/重数对列表
- en: returned instead.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 返回。
- en: If `radicals=False` is passed then all roots will be represented as
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递了`radicals=False`，则所有根将表示为
- en: either rational numbers or [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf").
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 要么有理数，要么[`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf")。
- en: Explanation
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Finds all real roots of a univariate polynomial with rational coefficients of
    any degree exactly. The roots are represented in the form given by [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof"). This is equivalent to using [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof") or [`all_roots()`](#sympy.polys.polytools.all_roots
    "sympy.polys.polytools.all_roots") and filtering out only the real roots. However
    if only the real roots are needed then [`real_roots()`](#sympy.polys.polytools.real_roots
    "sympy.polys.polytools.real_roots") is more efficient than [`all_roots()`](#sympy.polys.polytools.all_roots
    "sympy.polys.polytools.all_roots") because it computes only the real roots and
    avoids costly complex root isolation routines.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 找到具有任意次数有理系数的一元多项式的所有实根。 根据[`rootof()`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")给出的形式表示根。
    这相当于使用[`rootof()`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")或[`all_roots()`](#sympy.polys.polytools.all_roots
    "sympy.polys.polytools.all_roots")并仅过滤出实根。 但是，如果只需要实根，则[`real_roots()`](#sympy.polys.polytools.real_roots
    "sympy.polys.polytools.real_roots")比[`all_roots()`](#sympy.polys.polytools.all_roots
    "sympy.polys.polytools.all_roots")更有效，因为它仅计算实根，并避免昂贵的复数根隔离程序。
- en: Examples
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE166]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '[PRE167]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'Real roots of any polynomial with rational coefficients of any degree can be
    represented using [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf"):'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 任何次数的具有有理系数的多项式的实根可以使用[`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf")表示：
- en: '[PRE168]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: All rational roots will be returned as rational numbers. Roots of some simple
    factors will be expressed using radical or other formulae (unless `radicals=False`
    is passed). All other roots will be expressed as [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf").
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 所有有理根将作为有理数返回。 一些简单因子的根将使用根式或其他公式表示（除非传递了`radicals=False`）。 所有其他根将表示为[`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf
    "sympy.polys.rootoftools.ComplexRootOf")。
- en: '[PRE169]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 'All returned root expressions will numerically evaluate to real numbers with
    no imaginary part. This is in contrast to the expressions generated by the cubic
    or quartic formulae as used by [`roots()`](#sympy.polys.polyroots.roots "sympy.polys.polyroots.roots")
    which suffer from casus irreducibilis [[R809]](#r809):'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的所有根表达式将数值评估为没有虚部的实数。 这与由[`roots()`](#sympy.polys.polyroots.roots "sympy.polys.polyroots.roots")使用的三次或四次公式生成的表达式形成对比，这些表达式受到由casus
    irreducibilis引起的影响[[R809]](#r809)：
- en: '[PRE170]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: 'Using [`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")
    is equivalent to using [`all_roots()`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")
    (or [`rootof()`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof"))
    and filtering out only the real roots:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")等同于使用[`all_roots()`](#sympy.polys.polytools.all_roots
    "sympy.polys.polytools.all_roots")（或[`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof")）并仅过滤出实根：
- en: '[PRE171]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: If only the real roots are wanted then using [`real_roots()`](#sympy.polys.polytools.real_roots
    "sympy.polys.polytools.real_roots") is faster than using [`all_roots()`](#sympy.polys.polytools.all_roots
    "sympy.polys.polytools.all_roots"). Using [`real_roots()`](#sympy.polys.polytools.real_roots
    "sympy.polys.polytools.real_roots") avoids complex root isolation which can be
    a lot slower than real root isolation especially for polynomials of high degree
    which typically have many more complex roots than real roots.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只想要实根，则使用 [`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")
    比使用 [`all_roots()`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")
    更快。使用 [`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")
    避免了复杂根的隔离，后者在处理高阶多项式时通常比实根隔离要慢得多，因为高阶多项式通常有比实根多得多的复杂根。
- en: 'Irrational algebraic or transcendental coefficients cannot be handled by [`real_roots()`](#sympy.polys.polytools.real_roots
    "sympy.polys.polytools.real_roots") (or [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof") more generally):'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 无法处理无理代数或超越系数的 [`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")（或更一般地
    [`rootof()`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")）：
- en: '[PRE172]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: 'In the case of algebraic or transcendental coefficients [`ground_roots()`](#sympy.polys.polytools.ground_roots
    "sympy.polys.polytools.ground_roots") might be able to find some roots by factorisation:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 对于代数或超越系数的情况，[`ground_roots()`](#sympy.polys.polytools.ground_roots "sympy.polys.polytools.ground_roots")
    可能通过因式分解找到一些根：
- en: '[PRE173]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: 'If the coefficients are numeric then [`nroots()`](#sympy.polys.polytools.nroots
    "sympy.polys.polytools.nroots") can be used to find all roots approximately:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系数是数字的话，可以使用 [`nroots()`](#sympy.polys.polytools.nroots "sympy.polys.polytools.nroots")
    大致找出所有根：
- en: '[PRE174]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: If the coefficients are symbolic then [`sympy.polys.polyroots.roots()`](#sympy.polys.polyroots.roots
    "sympy.polys.polyroots.roots") or [`ground_roots()`](#sympy.polys.polytools.ground_roots
    "sympy.polys.polytools.ground_roots") should be used instead.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系数是符号的话，则应使用 [`sympy.polys.polyroots.roots()`](#sympy.polys.polyroots.roots
    "sympy.polys.polyroots.roots") 或 [`ground_roots()`](#sympy.polys.polytools.ground_roots
    "sympy.polys.polytools.ground_roots")。
- en: '[PRE175]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: See also
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`Poly.real_roots`](#sympy.polys.polytools.Poly.real_roots "sympy.polys.polytools.Poly.real_roots")'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Poly.real_roots`](#sympy.polys.polytools.Poly.real_roots "sympy.polys.polytools.Poly.real_roots")'
- en: The underlying [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    method used by [`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots").
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '[`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")
    使用的底层 [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly") 方法。'
- en: '[`rootof`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rootof`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")'
- en: Compute a single numbered root of a univariate polynomial.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 计算单个多项式的编号根。
- en: '[`all_roots`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '[`all_roots`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")'
- en: Compute all real and non-real roots using [`rootof()`](#sympy.polys.rootoftools.rootof
    "sympy.polys.rootoftools.rootof").
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [`rootof()`](#sympy.polys.rootoftools.rootof "sympy.polys.rootoftools.rootof")
    计算所有实根和非实根。
- en: '[`ground_roots`](#sympy.polys.polytools.ground_roots "sympy.polys.polytools.ground_roots")'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ground_roots`](#sympy.polys.polytools.ground_roots "sympy.polys.polytools.ground_roots")'
- en: Compute some roots in the ground domain by factorisation.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 通过因式分解在基域中计算一些根。
- en: '[`nroots`](#sympy.polys.polytools.nroots "sympy.polys.polytools.nroots")'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nroots`](#sympy.polys.polytools.nroots "sympy.polys.polytools.nroots")'
- en: Compute all roots using approximate numerical techniques.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 使用近似数值技术计算所有根。
- en: '[`sympy.polys.polyroots.roots`](#sympy.polys.polyroots.roots "sympy.polys.polyroots.roots")'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polyroots.roots`](#sympy.polys.polyroots.roots "sympy.polys.polyroots.roots")'
- en: Compute symbolic expressions for roots using radical formulae.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 使用根式公式计算 `f` 的根。
- en: References
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[R809] ([1](#id2),[2](#id3))'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '[R809] ([1](#id2),[2](#id3))'
- en: '[https://en.wikipedia.org/wiki/Casus_irreducibilis](https://en.wikipedia.org/wiki/Casus_irreducibilis)'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Casus_irreducibilis](https://en.wikipedia.org/wiki/Casus_irreducibilis)'
- en: '[PRE176]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: Compute numerical approximations of roots of `f`.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数值近似方法计算 `f` 的根。
- en: Examples
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE177]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: '[PRE178]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: '[PRE179]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: Compute roots of `f` by factorization in the ground domain.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 通过因式分解在基域中计算 `f` 的根。
- en: Examples
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE180]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: '[PRE181]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '[PRE182]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: Construct a polynomial with n-th powers of roots of `f`.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个多项式，其根的 n 次方是 `f` 的根。
- en: Examples
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE183]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: '[PRE184]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: '[PRE185]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: '[PRE186]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: '[PRE187]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: '[PRE188]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: Cancel common factors in a rational function `f`.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 取消有理函数 `f` 中的公因子。
- en: Examples
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE189]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: '[PRE190]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: 'Note: due to automatic distribution of Rationals, a sum divided by an integer
    will appear as a sum. To recover a rational form use \(together\) on the result:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '注意: 由于有理数的自动分布，由整数除以和会显示为和。要恢复有理数形式，请在结果上使用\(\text{together}\)：'
- en: '[PRE191]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: '[PRE192]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: Reduces a polynomial `f` modulo a set of polynomials `G`.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 将多项式`f`减少为一组多项式`G`的模。
- en: Given a polynomial `f` and a set of polynomials `G = (g_1, ..., g_n)`, computes
    a set of quotients `q = (q_1, ..., q_n)` and the remainder `r` such that `f =
    q_1*g_1 + ... + q_n*g_n + r`, where `r` vanishes or `r` is a completely reduced
    polynomial with respect to `G`.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 给定多项式`f`和一组多项式`G = (g_1, ..., g_n)`，计算一组商`q = (q_1, ..., q_n)`和余数`r`，使得`f =
    q_1*g_1 + ... + q_n*g_n + r`，其中`r`消失或者`r`是相对于`G`完全归约的多项式。
- en: Examples
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE193]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: '[PRE194]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: '[PRE195]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: Computes the reduced Groebner basis for a set of polynomials.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 计算一组多项式的简化格罗布纳基。
- en: Use the `order` argument to set the monomial ordering that will be used to compute
    the basis. Allowed orders are `lex`, `grlex` and `grevlex`. If no order is specified,
    it defaults to `lex`.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`order`参数设置用于计算基础的单项式顺序。允许的顺序有`lex`、`grlex`和`grevlex`。如果未指定顺序，则默认为`lex`。
- en: For more information on Groebner bases, see the references and the docstring
    of [`solve_poly_system()`](../solvers/solvers.html#sympy.solvers.polysys.solve_poly_system
    "sympy.solvers.polysys.solve_poly_system").
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 有关格罗布纳基的更多信息，请参见参考文献和[`solve_poly_system()`](../solvers/solvers.html#sympy.solvers.polysys.solve_poly_system
    "sympy.solvers.polysys.solve_poly_system")的文档字符串。
- en: Examples
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Example taken from [1].
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 示例来自[1]。
- en: '[PRE196]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: '[PRE197]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: '[PRE198]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: By default, an improved implementation of the Buchberger algorithm is used.
    Optionally, an implementation of the F5B algorithm can be used. The algorithm
    can be set using the `method` flag or with the [`sympy.polys.polyconfig.setup()`](internals.html#sympy.polys.polyconfig.setup
    "sympy.polys.polyconfig.setup") function.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，使用改进后的布赫伯格算法的实现。可选择使用F5B算法的实现。可以使用`method`标志或[`sympy.polys.polyconfig.setup()`](internals.html#sympy.polys.polyconfig.setup
    "sympy.polys.polyconfig.setup")函数来设置算法。
- en: '[PRE199]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: '[PRE200]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: References
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[Buchberger01]](literature.html#buchberger01)'
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Buchberger01]](literature.html#buchberger01)'
- en: '[[Cox97]](literature.html#cox97)'
  id: totrans-435
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Cox97]](literature.html#cox97)'
- en: '[PRE201]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE201]'
- en: Checks if the ideal generated by a Groebner basis is zero-dimensional.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 检查由格罗布纳基生成的理想是否是零维的。
- en: The algorithm checks if the set of monomials not divisible by the leading monomial
    of any element of `F` is bounded.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法检查不可被`F`的任何元素的主导单项式整除的单项式集是否有界。
- en: References
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: David A. Cox, John B. Little, Donal O’Shea. Ideals, Varieties and Algorithms,
    3rd edition, p. 230
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: David A. Cox, John B. Little, Donal O’Shea. 理想、变量与算法, 第三版, 第230页
- en: '[PRE202]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE202]'
- en: Generic class for representing and operating on polynomial expressions.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 用于表示和操作多项式表达式的通用类。
- en: See [Polynomial Manipulation](index.html#polys-docs) for general documentation.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[多项式操作](index.html#polys-docs)以获取通用文档。
- en: Poly is a subclass of Basic rather than Expr but instances can be converted
    to Expr with the [`as_expr()`](#sympy.polys.polytools.Poly.as_expr "sympy.polys.polytools.Poly.as_expr")
    method.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: Poly是Basic的子类而不是Expr，但实例可以使用[`as_expr()`](#sympy.polys.polytools.Poly.as_expr
    "sympy.polys.polytools.Poly.as_expr")方法转换为Expr。
- en: 'Deprecated since version 1.6: Combining Poly with non-Poly objects in binary
    operations is deprecated. Explicitly convert both objects to either Poly or Expr
    first. See [Mixing Poly and non-polynomial expressions in binary operations](../../explanation/active-deprecations.html#deprecated-poly-nonpoly-binary-operations).'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '自版本1.6起已弃用: 在二元操作中，将Poly与非Poly对象结合使用已弃用。请先明确将两个对象都转换为Poly或Expr。参见[在二元操作中混合Poly和非多项式表达式](../../explanation/active-deprecations.html#deprecated-poly-nonpoly-binary-operations)。'
- en: Examples
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE203]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE203]'
- en: 'Create a univariate polynomial:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个单变量多项式：
- en: '[PRE204]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE204]'
- en: 'Create a univariate polynomial with specific domain:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个带有特定定义域的单变量多项式：
- en: '[PRE205]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE205]'
- en: 'Create a multivariate polynomial:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个多变量多项式：
- en: '[PRE206]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE206]'
- en: 'Create a univariate polynomial, where y is a constant:'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个单变量多项式，其中`y`是一个常数：
- en: '[PRE207]'
  id: totrans-455
  prefs: []
  type: TYPE_PRE
  zh: '[PRE207]'
- en: 'You can evaluate the above polynomial as a function of y:'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将上述多项式作为`y`的函数进行评估：
- en: '[PRE208]'
  id: totrans-457
  prefs: []
  type: TYPE_PRE
  zh: '[PRE208]'
- en: See also
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`sympy.core.expr.Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.core.expr.Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
- en: '[PRE209]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE209]'
- en: Returns the last non-zero coefficient of `f`.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的最后一个非零系数。
- en: Examples
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE210]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE210]'
- en: '[PRE211]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE211]'
- en: '[PRE212]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE212]'
- en: Returns the last non-zero monomial of `f`.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的最后一个非零单项式。
- en: Examples
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE213]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE213]'
- en: '[PRE214]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE214]'
- en: '[PRE215]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE215]'
- en: Returns the last non-zero term of `f`.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的最后一个非零项。
- en: Examples
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE216]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE216]'
- en: '[PRE217]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE217]'
- en: '[PRE218]'
  id: totrans-475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE218]'
- en: Returns the leading coefficient of `f`.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的主导系数。
- en: Examples
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE219]'
  id: totrans-478
  prefs: []
  type: TYPE_PRE
  zh: '[PRE219]'
- en: '[PRE220]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE220]'
- en: '[PRE221]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE221]'
- en: Returns the leading monomial of `f`.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的主导单项式。
- en: The Leading monomial signifies the monomial having the highest power of the
    principal generator in the expression f.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 主导单项式表示表达式 `f` 中主生成器的最高幂次的单项式。
- en: Examples
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE222]'
  id: totrans-484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE222]'
- en: '[PRE223]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE223]'
- en: '[PRE224]'
  id: totrans-486
  prefs: []
  type: TYPE_PRE
  zh: '[PRE224]'
- en: Returns the leading term of `f`.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的主导项。
- en: The Leading term signifies the term having the highest power of the principal
    generator in the expression f along with its coefficient.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 主导项表示表达式 `f` 中主生成器的最高幂次的项及其系数。
- en: Examples
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE225]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE225]'
- en: '[PRE226]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE226]'
- en: '[PRE227]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE227]'
- en: Returns the trailing coefficient of `f`.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的尾部系数。
- en: Examples
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE228]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE228]'
- en: '[PRE229]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE229]'
- en: '[PRE230]'
  id: totrans-497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE230]'
- en: Make all coefficients in `f` positive.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 使 `f` 中的所有系数为正。
- en: Examples
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE231]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE231]'
- en: '[PRE232]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE232]'
- en: '[PRE233]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE233]'
- en: Add two polynomials `f` and `g`.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 添加两个多项式 `f` 和 `g`。
- en: Examples
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE234]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE234]'
- en: '[PRE235]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE235]'
- en: '[PRE236]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE236]'
- en: '[PRE237]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE237]'
- en: Add an element of the ground domain to `f`.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 向 `f` 添加基础域的元素。
- en: Examples
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE238]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE238]'
- en: '[PRE239]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE239]'
- en: '[PRE240]'
  id: totrans-513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE240]'
- en: Returns all coefficients from a univariate polynomial `f`.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 返回单变量多项式 `f` 的所有系数。
- en: Examples
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE241]'
  id: totrans-516
  prefs: []
  type: TYPE_PRE
  zh: '[PRE241]'
- en: '[PRE242]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE242]'
- en: '[PRE243]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE243]'
- en: Returns all monomials from a univariate polynomial `f`.
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 返回单变量多项式 `f` 的所有单项式。
- en: Examples
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE244]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE244]'
- en: '[PRE245]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE245]'
- en: See also
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`all_terms`](#sympy.polys.polytools.Poly.all_terms "sympy.polys.polytools.Poly.all_terms")'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '[`all_terms`](#sympy.polys.polytools.Poly.all_terms "sympy.polys.polytools.Poly.all_terms")'
- en: '[PRE246]'
  id: totrans-525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE246]'
- en: Return a list of real and complex roots with multiplicities.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有重数的实数和复数根的列表。
- en: See [`all_roots()`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")
    for more explanation.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 更多说明见 [`all_roots()`](#sympy.polys.polytools.all_roots "sympy.polys.polytools.all_roots")。
- en: Examples
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE247]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE247]'
- en: '[PRE248]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE248]'
- en: '[PRE249]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE249]'
- en: Returns all terms from a univariate polynomial `f`.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 返回单变量多项式 `f` 的所有项。
- en: Examples
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE250]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE250]'
- en: '[PRE251]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE251]'
- en: '[PRE252]'
  id: totrans-536
  prefs: []
  type: TYPE_PRE
  zh: '[PRE252]'
- en: Switch to a `dict` representation.
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到 `dict` 表示。
- en: Examples
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE253]'
  id: totrans-539
  prefs: []
  type: TYPE_PRE
  zh: '[PRE253]'
- en: '[PRE254]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE254]'
- en: '[PRE255]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE255]'
- en: Convert a Poly instance to an Expr instance.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Poly 实例转换为 Expr 实例。
- en: Examples
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE256]'
  id: totrans-544
  prefs: []
  type: TYPE_PRE
  zh: '[PRE256]'
- en: '[PRE257]'
  id: totrans-545
  prefs: []
  type: TYPE_PRE
  zh: '[PRE257]'
- en: '[PRE258]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE258]'
- en: '[PRE259]'
  id: totrans-547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE259]'
- en: Switch to a `list` representation.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到 `list` 表示。
- en: '[PRE260]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE260]'
- en: Converts `self` to a polynomial or returns `None`.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `self` 转换为多项式或返回 `None`。
- en: '[PRE261]'
  id: totrans-551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE261]'
- en: '[PRE262]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE262]'
- en: '[PRE263]'
  id: totrans-553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE263]'
- en: '[PRE264]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE264]'
- en: '[PRE265]'
  id: totrans-555
  prefs: []
  type: TYPE_PRE
  zh: '[PRE265]'
- en: Cancel common factors in a rational function `f/g`.
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 取消有理函数 `f/g` 中的公共因子。
- en: Examples
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE266]'
  id: totrans-558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE266]'
- en: '[PRE267]'
  id: totrans-559
  prefs: []
  type: TYPE_PRE
  zh: '[PRE267]'
- en: '[PRE268]'
  id: totrans-560
  prefs: []
  type: TYPE_PRE
  zh: '[PRE268]'
- en: '[PRE269]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE269]'
- en: Clear denominators, but keep the ground domain.
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 清除分母，但保留基础域。
- en: Examples
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE270]'
  id: totrans-564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE270]'
- en: '[PRE271]'
  id: totrans-565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE271]'
- en: '[PRE272]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE272]'
- en: '[PRE273]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE273]'
- en: Returns the coefficient of `monom` in `f` if there, else None.
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在，则返回 `f` 中 `monom` 的系数，否则返回 `None`。
- en: Examples
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE274]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE274]'
- en: '[PRE275]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE275]'
- en: '[PRE276]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE276]'
- en: 'Note that `Expr.coeff()` behaves differently, collecting terms if possible;
    the Poly must be converted to an Expr to use that method, however:'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 `Expr.coeff()` 的行为不同，如果可能的话会收集项；但是必须将 Poly 转换为 Expr 才能使用该方法：
- en: '[PRE277]'
  id: totrans-574
  prefs: []
  type: TYPE_PRE
  zh: '[PRE277]'
- en: See also
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`nth`](#sympy.polys.polytools.Poly.nth "sympy.polys.polytools.Poly.nth")'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nth`](#sympy.polys.polytools.Poly.nth "sympy.polys.polytools.Poly.nth")'
- en: more efficient query using exponents of the monomial’s generators
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 使用单项式生成器的指数进行更高效的查询
- en: '[PRE278]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE278]'
- en: Returns all non-zero coefficients from `f` in lex order.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 中所有非零系数的字典顺序。
- en: Examples
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE279]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE279]'
- en: '[PRE280]'
  id: totrans-582
  prefs: []
  type: TYPE_PRE
  zh: '[PRE280]'
- en: See also
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`all_coeffs`](#sympy.polys.polytools.Poly.all_coeffs "sympy.polys.polytools.Poly.all_coeffs"),
    [`coeff_monomial`](#sympy.polys.polytools.Poly.coeff_monomial "sympy.polys.polytools.Poly.coeff_monomial"),
    [`nth`](#sympy.polys.polytools.Poly.nth "sympy.polys.polytools.Poly.nth")'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: '[`all_coeffs`](#sympy.polys.polytools.Poly.all_coeffs "sympy.polys.polytools.Poly.all_coeffs"),
    [`coeff_monomial`](#sympy.polys.polytools.Poly.coeff_monomial "sympy.polys.polytools.Poly.coeff_monomial"),
    [`nth`](#sympy.polys.polytools.Poly.nth "sympy.polys.polytools.Poly.nth")'
- en: '[PRE281]'
  id: totrans-585
  prefs: []
  type: TYPE_PRE
  zh: '[PRE281]'
- en: Returns the GCD of `f` and `g` and their cofactors.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 和 `g` 的最大公因式及其余项。
- en: Returns polynomials `(h, cff, cfg)` such that `h = gcd(f, g)`, and `cff = quo(f,
    h)` and `cfg = quo(g, h)` are, so called, cofactors of `f` and `g`.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多项式 `f` 的最大公因式 `(h, cff, cfg)`，使得 `h = gcd(f, g)`，并且 `cff = quo(f, h)` 和 `cfg
    = quo(g, h)` 是称为 `f` 和 `g` 的余式。
- en: Examples
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE282]'
  id: totrans-589
  prefs: []
  type: TYPE_PRE
  zh: '[PRE282]'
- en: '[PRE283]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE283]'
- en: '[PRE284]'
  id: totrans-591
  prefs: []
  type: TYPE_PRE
  zh: '[PRE284]'
- en: Computes the functional composition of `f` and `g`.
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的函数复合。
- en: Examples
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE285]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE285]'
- en: '[PRE286]'
  id: totrans-595
  prefs: []
  type: TYPE_PRE
  zh: '[PRE286]'
- en: '[PRE287]'
  id: totrans-596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE287]'
- en: Returns the GCD of polynomial coefficients.
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多项式系数的最大公因式。
- en: Examples
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE288]'
  id: totrans-599
  prefs: []
  type: TYPE_PRE
  zh: '[PRE288]'
- en: '[PRE289]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE289]'
- en: '[PRE290]'
  id: totrans-601
  prefs: []
  type: TYPE_PRE
  zh: '[PRE290]'
- en: Return the number of roots of `f` in `[inf, sup]` interval.
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 在 `[inf, sup]` 区间内的根数。
- en: Examples
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE291]'
  id: totrans-604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE291]'
- en: '[PRE292]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE292]'
- en: '[PRE293]'
  id: totrans-606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE293]'
- en: Computes a functional decomposition of `f`.
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的函数分解。
- en: Examples
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE294]'
  id: totrans-609
  prefs: []
  type: TYPE_PRE
  zh: '[PRE294]'
- en: '[PRE295]'
  id: totrans-610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE295]'
- en: '[PRE296]'
  id: totrans-611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE296]'
- en: Reduce degree of `f` by mapping `x_i**m` to `y_i`.
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 `x_i**m` 映射到 `y_i` 来减少 `f` 的次数。
- en: Examples
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE297]'
  id: totrans-614
  prefs: []
  type: TYPE_PRE
  zh: '[PRE297]'
- en: '[PRE298]'
  id: totrans-615
  prefs: []
  type: TYPE_PRE
  zh: '[PRE298]'
- en: '[PRE299]'
  id: totrans-616
  prefs: []
  type: TYPE_PRE
  zh: '[PRE299]'
- en: Returns degree of `f` in `x_j`.
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 在 `x_j` 中的次数。
- en: The degree of 0 is negative infinity.
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: 0 的次数为负无穷大。
- en: Examples
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE300]'
  id: totrans-620
  prefs: []
  type: TYPE_PRE
  zh: '[PRE300]'
- en: '[PRE301]'
  id: totrans-621
  prefs: []
  type: TYPE_PRE
  zh: '[PRE301]'
- en: '[PRE302]'
  id: totrans-622
  prefs: []
  type: TYPE_PRE
  zh: '[PRE302]'
- en: Returns a list of degrees of `f`.
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的次数列表。
- en: Examples
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE303]'
  id: totrans-625
  prefs: []
  type: TYPE_PRE
  zh: '[PRE303]'
- en: '[PRE304]'
  id: totrans-626
  prefs: []
  type: TYPE_PRE
  zh: '[PRE304]'
- en: '[PRE305]'
  id: totrans-627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE305]'
- en: Computes partial derivative of `f`.
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的偏导数。
- en: Examples
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE306]'
  id: totrans-630
  prefs: []
  type: TYPE_PRE
  zh: '[PRE306]'
- en: '[PRE307]'
  id: totrans-631
  prefs: []
  type: TYPE_PRE
  zh: '[PRE307]'
- en: '[PRE308]'
  id: totrans-632
  prefs: []
  type: TYPE_PRE
  zh: '[PRE308]'
- en: '[PRE309]'
  id: totrans-633
  prefs: []
  type: TYPE_PRE
  zh: '[PRE309]'
- en: Computes the discriminant of `f`.
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的判别式。
- en: Examples
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE310]'
  id: totrans-636
  prefs: []
  type: TYPE_PRE
  zh: '[PRE310]'
- en: '[PRE311]'
  id: totrans-637
  prefs: []
  type: TYPE_PRE
  zh: '[PRE311]'
- en: '[PRE312]'
  id: totrans-638
  prefs: []
  type: TYPE_PRE
  zh: '[PRE312]'
- en: Compute the *dispersion* of polynomials.
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式的*离散度*。
- en: 'For two polynomials \(f(x)\) and \(g(x)\) with \(\deg f > 0\) and \(\deg g
    > 0\) the dispersion \(\operatorname{dis}(f, g)\) is defined as:'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 对于两个多项式 \(f(x)\) 和 \(g(x)\)，其中 \(\deg f > 0\) 和 \(\deg g > 0\)，离散度 \(\operatorname{dis}(f,
    g)\) 定义为：
- en: \[\begin{split}\operatorname{dis}(f, g) & := \max\{ J(f,g) \cup \{0\} \} \\
    & = \max\{ \{a \in \mathbb{N} | \gcd(f(x), g(x+a)) \neq 1\} \cup \{0\} \}\end{split}\]
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\operatorname{dis}(f, g) & := \max\{ J(f,g) \cup \{0\} \} \\
    & = \max\{ \{a \in \mathbb{N} | \gcd(f(x), g(x+a)) \neq 1\} \cup \{0\} \}\end{split}\]
- en: and for a single polynomial \(\operatorname{dis}(f) := \operatorname{dis}(f,
    f)\).
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单个多项式 \(\operatorname{dis}(f) := \operatorname{dis}(f, f)\)。
- en: Examples
  id: totrans-643
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE313]'
  id: totrans-644
  prefs: []
  type: TYPE_PRE
  zh: '[PRE313]'
- en: 'Dispersion set and dispersion of a simple polynomial:'
  id: totrans-645
  prefs: []
  type: TYPE_NORMAL
  zh: 简单多项式的离散集和离散：
- en: '[PRE314]'
  id: totrans-646
  prefs: []
  type: TYPE_PRE
  zh: '[PRE314]'
- en: 'Note that the definition of the dispersion is not symmetric:'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，离散的定义不对称：
- en: '[PRE315]'
  id: totrans-648
  prefs: []
  type: TYPE_PRE
  zh: '[PRE315]'
- en: 'Computing the dispersion also works over field extensions:'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: 计算离散也适用于域扩展：
- en: '[PRE316]'
  id: totrans-650
  prefs: []
  type: TYPE_PRE
  zh: '[PRE316]'
- en: 'We can even perform the computations for polynomials having symbolic coefficients:'
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以为具有符号系数的多项式执行计算：
- en: '[PRE317]'
  id: totrans-652
  prefs: []
  type: TYPE_PRE
  zh: '[PRE317]'
- en: See also
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`dispersionset`](#sympy.polys.polytools.Poly.dispersionset "sympy.polys.polytools.Poly.dispersionset")'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dispersionset`](#sympy.polys.polytools.Poly.dispersionset "sympy.polys.polytools.Poly.dispersionset")'
- en: References
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[ManWright94]](literature.html#manwright94)'
  id: totrans-656
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[ManWright94]](literature.html#manwright94)'
- en: '[[Koepf98]](literature.html#koepf98)'
  id: totrans-657
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Koepf98]](literature.html#koepf98)'
- en: '[[Abramov71]](literature.html#abramov71)'
  id: totrans-658
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Abramov71]](literature.html#abramov71)'
- en: '[[Man93]](literature.html#man93)'
  id: totrans-659
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Man93]](literature.html#man93)'
- en: '[PRE318]'
  id: totrans-660
  prefs: []
  type: TYPE_PRE
  zh: '[PRE318]'
- en: Compute the *dispersion set* of two polynomials.
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 计算两个多项式的 *离散集*。
- en: 'For two polynomials \(f(x)\) and \(g(x)\) with \(\deg f > 0\) and \(\deg g
    > 0\) the dispersion set \(\operatorname{J}(f, g)\) is defined as:'
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 对于两个多项式 \(f(x)\) 和 \(g(x)\)，其中 \(\deg f > 0\) 和 \(\deg g > 0\)，定义了离散集合 \(\operatorname{J}(f,
    g)\) 如下：
- en: \[\begin{split}\operatorname{J}(f, g) & := \{a \in \mathbb{N}_0 | \gcd(f(x),
    g(x+a)) \neq 1\} \\ & = \{a \in \mathbb{N}_0 | \deg \gcd(f(x), g(x+a)) \geq 1\}\end{split}\]
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\operatorname{J}(f, g) & := \{a \in \mathbb{N}_0 | \gcd(f(x),
    g(x+a)) \neq 1\} \\ & = \{a \in \mathbb{N}_0 | \deg \gcd(f(x), g(x+a)) \geq 1\}\end{split}\]
- en: For a single polynomial one defines \(\operatorname{J}(f) := \operatorname{J}(f,
    f)\).
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单个多项式，定义为 \(\operatorname{J}(f) := \operatorname{J}(f, f)\)。
- en: Examples
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE319]'
  id: totrans-666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE319]'
- en: 'Dispersion set and dispersion of a simple polynomial:'
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 简单多项式的离散集和离散：
- en: '[PRE320]'
  id: totrans-668
  prefs: []
  type: TYPE_PRE
  zh: '[PRE320]'
- en: 'Note that the definition of the dispersion is not symmetric:'
  id: totrans-669
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，离散的定义不对称：
- en: '[PRE321]'
  id: totrans-670
  prefs: []
  type: TYPE_PRE
  zh: '[PRE321]'
- en: 'Computing the dispersion also works over field extensions:'
  id: totrans-671
  prefs: []
  type: TYPE_NORMAL
  zh: 计算离散也适用于域扩展：
- en: '[PRE322]'
  id: totrans-672
  prefs: []
  type: TYPE_PRE
  zh: '[PRE322]'
- en: 'We can even perform the computations for polynomials having symbolic coefficients:'
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以为具有符号系数的多项式执行计算：
- en: '[PRE323]'
  id: totrans-674
  prefs: []
  type: TYPE_PRE
  zh: '[PRE323]'
- en: See also
  id: totrans-675
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`dispersion`](#sympy.polys.polytools.Poly.dispersion "sympy.polys.polytools.Poly.dispersion")'
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dispersion`](#sympy.polys.polytools.Poly.dispersion "sympy.polys.polytools.Poly.dispersion")'
- en: References
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[ManWright94]](literature.html#manwright94)'
  id: totrans-678
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[ManWright94]](literature.html#manwright94)'
- en: '[[Koepf98]](literature.html#koepf98)'
  id: totrans-679
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Koepf98]](literature.html#koepf98)'
- en: '[[Abramov71]](literature.html#abramov71)'
  id: totrans-680
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Abramov71]](literature.html#abramov71)'
- en: '[[Man93]](literature.html#man93)'
  id: totrans-681
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Man93]](literature.html#man93)'
- en: '[PRE324]'
  id: totrans-682
  prefs: []
  type: TYPE_PRE
  zh: '[PRE324]'
- en: Polynomial division with remainder of `f` by `g`.
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 `g` 对 `f` 进行多项式除法的余数。
- en: Examples
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE325]'
  id: totrans-685
  prefs: []
  type: TYPE_PRE
  zh: '[PRE325]'
- en: '[PRE326]'
  id: totrans-686
  prefs: []
  type: TYPE_PRE
  zh: '[PRE326]'
- en: '[PRE327]'
  id: totrans-687
  prefs: []
  type: TYPE_PRE
  zh: '[PRE327]'
- en: '[PRE328]'
  id: totrans-688
  prefs: []
  type: TYPE_PRE
  zh: '[PRE328]'
- en: Get the ground domain of a [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly") 的地面域。
- en: 'Returns:'
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`Domain`](domainsref.html#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain"):'
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Domain`](domainsref.html#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain"):'
- en: Ground domain of the [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly").
  id: totrans-692
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly") 的地面域。'
- en: Examples
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE329]'
  id: totrans-694
  prefs: []
  type: TYPE_PRE
  zh: '[PRE329]'
- en: '[PRE330]'
  id: totrans-695
  prefs: []
  type: TYPE_PRE
  zh: '[PRE330]'
- en: Eject selected generators into the ground domain.
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 将选定的生成器弹出到地面域。
- en: Examples
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE331]'
  id: totrans-698
  prefs: []
  type: TYPE_PRE
  zh: '[PRE331]'
- en: '[PRE332]'
  id: totrans-699
  prefs: []
  type: TYPE_PRE
  zh: '[PRE332]'
- en: '[PRE333]'
  id: totrans-700
  prefs: []
  type: TYPE_PRE
  zh: '[PRE333]'
- en: '[PRE334]'
  id: totrans-701
  prefs: []
  type: TYPE_PRE
  zh: '[PRE334]'
- en: Evaluate `f` at `a` in the given variable.
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定变量中的 `a` 处评估 `f`。
- en: Examples
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE335]'
  id: totrans-704
  prefs: []
  type: TYPE_PRE
  zh: '[PRE335]'
- en: '[PRE336]'
  id: totrans-705
  prefs: []
  type: TYPE_PRE
  zh: '[PRE336]'
- en: '[PRE337]'
  id: totrans-706
  prefs: []
  type: TYPE_PRE
  zh: '[PRE337]'
- en: '[PRE338]'
  id: totrans-707
  prefs: []
  type: TYPE_PRE
  zh: '[PRE338]'
- en: '[PRE339]'
  id: totrans-708
  prefs: []
  type: TYPE_PRE
  zh: '[PRE339]'
- en: '[PRE340]'
  id: totrans-709
  prefs: []
  type: TYPE_PRE
  zh: '[PRE340]'
- en: '[PRE341]'
  id: totrans-710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE341]'
- en: Remove unnecessary generators from `f`.
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `f` 中移除不必要的生成器。
- en: Examples
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE342]'
  id: totrans-713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE342]'
- en: '[PRE343]'
  id: totrans-714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE343]'
- en: '[PRE344]'
  id: totrans-715
  prefs: []
  type: TYPE_PRE
  zh: '[PRE344]'
- en: Computes polynomial exact quotient of `f` by `g`.
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 与 `g` 的多项式精确商。
- en: Examples
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE345]'
  id: totrans-718
  prefs: []
  type: TYPE_PRE
  zh: '[PRE345]'
- en: '[PRE346]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE346]'
- en: '[PRE347]'
  id: totrans-720
  prefs: []
  type: TYPE_PRE
  zh: '[PRE347]'
- en: '[PRE348]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE348]'
- en: Exact quotient of `f` by a an element of the ground domain.
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 精确地通过地面域中的一个元素 `f` 的商。
- en: Examples
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE349]'
  id: totrans-724
  prefs: []
  type: TYPE_PRE
  zh: '[PRE349]'
- en: '[PRE350]'
  id: totrans-725
  prefs: []
  type: TYPE_PRE
  zh: '[PRE350]'
- en: '[PRE351]'
  id: totrans-726
  prefs: []
  type: TYPE_PRE
  zh: '[PRE351]'
- en: '[PRE352]'
  id: totrans-727
  prefs: []
  type: TYPE_PRE
  zh: '[PRE352]'
- en: Returns a list of irreducible factors of `f`.
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的不可约因子列表。
- en: Examples
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE353]'
  id: totrans-730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE353]'
- en: '[PRE354]'
  id: totrans-731
  prefs: []
  type: TYPE_PRE
  zh: '[PRE354]'
- en: '[PRE355]'
  id: totrans-732
  prefs: []
  type: TYPE_PRE
  zh: '[PRE355]'
- en: '[PRE356]'
  id: totrans-733
  prefs: []
  type: TYPE_PRE
  zh: '[PRE356]'
- en: Returns a list of irreducible factors of `f`.
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的不可约因子列表。
- en: Examples
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE357]'
  id: totrans-736
  prefs: []
  type: TYPE_PRE
  zh: '[PRE357]'
- en: '[PRE358]'
  id: totrans-737
  prefs: []
  type: TYPE_PRE
  zh: '[PRE358]'
- en: '[PRE359]'
  id: totrans-738
  prefs: []
  type: TYPE_PRE
  zh: '[PRE359]'
- en: '[PRE360]'
  id: totrans-739
  prefs: []
  type: TYPE_PRE
  zh: '[PRE360]'
- en: Free symbols of a polynomial expression.
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式表达式的自由符号。
- en: Examples
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE361]'
  id: totrans-742
  prefs: []
  type: TYPE_PRE
  zh: '[PRE361]'
- en: '[PRE362]'
  id: totrans-743
  prefs: []
  type: TYPE_PRE
  zh: '[PRE362]'
- en: '[PRE363]'
  id: totrans-744
  prefs: []
  type: TYPE_PRE
  zh: '[PRE363]'
- en: Free symbols of the domain of `self`.
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: '`self` 域的自由符号。'
- en: Examples
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE364]'
  id: totrans-747
  prefs: []
  type: TYPE_PRE
  zh: '[PRE364]'
- en: '[PRE365]'
  id: totrans-748
  prefs: []
  type: TYPE_PRE
  zh: '[PRE365]'
- en: '[PRE366]'
  id: totrans-749
  prefs: []
  type: TYPE_PRE
  zh: '[PRE366]'
- en: Construct a polynomial from a `dict`.
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个 `dict` 构造一个多项式。
- en: '[PRE367]'
  id: totrans-751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE367]'
- en: Construct a polynomial from an expression.
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: 从表达式构造一个多项式。
- en: '[PRE368]'
  id: totrans-753
  prefs: []
  type: TYPE_PRE
  zh: '[PRE368]'
- en: Construct a polynomial from a `list`.
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个 `list` 构造一个多项式。
- en: '[PRE369]'
  id: totrans-755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE369]'
- en: Construct a polynomial from a polynomial.
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个多项式构造一个多项式。
- en: '[PRE370]'
  id: totrans-757
  prefs: []
  type: TYPE_PRE
  zh: '[PRE370]'
- en: Compute the Galois group of this polynomial.
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 计算此多项式的 Galois 群。
- en: Examples
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE371]'
  id: totrans-760
  prefs: []
  type: TYPE_PRE
  zh: '[PRE371]'
- en: See also
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.polys.numberfields.galoisgroups.galois_group`](numberfields.html#sympy.polys.numberfields.galoisgroups.galois_group
    "sympy.polys.numberfields.galoisgroups.galois_group")'
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.numberfields.galoisgroups.galois_group`](numberfields.html#sympy.polys.numberfields.galoisgroups.galois_group
    "sympy.polys.numberfields.galoisgroups.galois_group")'
- en: '[PRE372]'
  id: totrans-763
  prefs: []
  type: TYPE_PRE
  zh: '[PRE372]'
- en: Returns the polynomial GCD of `f` and `g`.
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 和 `g` 的多项式最大公因式。
- en: Examples
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE373]'
  id: totrans-766
  prefs: []
  type: TYPE_PRE
  zh: '[PRE373]'
- en: '[PRE374]'
  id: totrans-767
  prefs: []
  type: TYPE_PRE
  zh: '[PRE374]'
- en: '[PRE375]'
  id: totrans-768
  prefs: []
  type: TYPE_PRE
  zh: '[PRE375]'
- en: Extended Euclidean algorithm of `f` and `g`.
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展欧几里得算法应用于 `f` 和 `g`。
- en: Returns `(s, t, h)` such that `h = gcd(f, g)` and `s*f + t*g = h`.
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `(s, t, h)`，使得 `h = gcd(f, g)` 和 `s*f + t*g = h`。
- en: Examples
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE376]'
  id: totrans-772
  prefs: []
  type: TYPE_PRE
  zh: '[PRE376]'
- en: '[PRE377]'
  id: totrans-773
  prefs: []
  type: TYPE_PRE
  zh: '[PRE377]'
- en: '[PRE378]'
  id: totrans-774
  prefs: []
  type: TYPE_PRE
  zh: '[PRE378]'
- en: '[PRE379]'
  id: totrans-775
  prefs: []
  type: TYPE_PRE
  zh: '[PRE379]'
- en: Return the principal generator.
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: 返回主要生成元。
- en: Examples
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE380]'
  id: totrans-778
  prefs: []
  type: TYPE_PRE
  zh: '[PRE380]'
- en: '[PRE381]'
  id: totrans-779
  prefs: []
  type: TYPE_PRE
  zh: '[PRE381]'
- en: '[PRE382]'
  id: totrans-780
  prefs: []
  type: TYPE_PRE
  zh: '[PRE382]'
- en: Get the ground domain of `f`.
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 `f` 的底域。
- en: '[PRE383]'
  id: totrans-782
  prefs: []
  type: TYPE_PRE
  zh: '[PRE383]'
- en: Get the modulus of `f`.
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: 获取 `f` 的模。
- en: Examples
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE384]'
  id: totrans-785
  prefs: []
  type: TYPE_PRE
  zh: '[PRE384]'
- en: '[PRE385]'
  id: totrans-786
  prefs: []
  type: TYPE_PRE
  zh: '[PRE385]'
- en: '[PRE386]'
  id: totrans-787
  prefs: []
  type: TYPE_PRE
  zh: '[PRE386]'
- en: Computes greatest factorial factorization of `f`.
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的最大阶乘分解。
- en: Examples
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE387]'
  id: totrans-790
  prefs: []
  type: TYPE_PRE
  zh: '[PRE387]'
- en: '[PRE388]'
  id: totrans-791
  prefs: []
  type: TYPE_PRE
  zh: '[PRE388]'
- en: '[PRE389]'
  id: totrans-792
  prefs: []
  type: TYPE_PRE
  zh: '[PRE389]'
- en: '[PRE390]'
  id: totrans-793
  prefs: []
  type: TYPE_PRE
  zh: '[PRE390]'
- en: Compute roots of `f` by factorization in the ground domain.
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在底域中进行因式分解计算 `f` 的根。
- en: Examples
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE391]'
  id: totrans-796
  prefs: []
  type: TYPE_PRE
  zh: '[PRE391]'
- en: '[PRE392]'
  id: totrans-797
  prefs: []
  type: TYPE_PRE
  zh: '[PRE392]'
- en: '[PRE393]'
  id: totrans-798
  prefs: []
  type: TYPE_PRE
  zh: '[PRE393]'
- en: Half extended Euclidean algorithm of `f` and `g`.
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 和 `g` 的半扩展欧几里得算法。'
- en: Returns `(s, h)` such that `h = gcd(f, g)` and `s*f = h (mod g)`.
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `(s, h)`，使得 `h = gcd(f, g)` 和 `s*f = h (mod g)`。
- en: Examples
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE394]'
  id: totrans-802
  prefs: []
  type: TYPE_PRE
  zh: '[PRE394]'
- en: '[PRE395]'
  id: totrans-803
  prefs: []
  type: TYPE_PRE
  zh: '[PRE395]'
- en: '[PRE396]'
  id: totrans-804
  prefs: []
  type: TYPE_PRE
  zh: '[PRE396]'
- en: '[PRE397]'
  id: totrans-805
  prefs: []
  type: TYPE_PRE
  zh: '[PRE397]'
- en: Return `True` if `Poly(f, *gens)` retains ground domain.
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `Poly(f, *gens)` 保留底域，则返回 `True`。
- en: Examples
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE398]'
  id: totrans-808
  prefs: []
  type: TYPE_PRE
  zh: '[PRE398]'
- en: '[PRE399]'
  id: totrans-809
  prefs: []
  type: TYPE_PRE
  zh: '[PRE399]'
- en: '[PRE400]'
  id: totrans-810
  prefs: []
  type: TYPE_PRE
  zh: '[PRE400]'
- en: Returns the homogeneous order of `f`.
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的齐次阶数。
- en: A homogeneous polynomial is a polynomial whose all monomials with non-zero coefficients
    have the same total degree. This degree is the homogeneous order of `f`. If you
    only want to check if a polynomial is homogeneous, then use [`Poly.is_homogeneous()`](#sympy.polys.polytools.Poly.is_homogeneous
    "sympy.polys.polytools.Poly.is_homogeneous").
  id: totrans-812
  prefs: []
  type: TYPE_NORMAL
  zh: 齐次多项式是所有非零系数的单项式具有相同总次数的多项式。这个次数就是 `f` 的齐次阶数。如果你只想检查一个多项式是否是齐次的，则使用 [`Poly.is_homogeneous()`](#sympy.polys.polytools.Poly.is_homogeneous
    "sympy.polys.polytools.Poly.is_homogeneous")。
- en: Examples
  id: totrans-813
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE401]'
  id: totrans-814
  prefs: []
  type: TYPE_PRE
  zh: '[PRE401]'
- en: '[PRE402]'
  id: totrans-815
  prefs: []
  type: TYPE_PRE
  zh: '[PRE402]'
- en: '[PRE403]'
  id: totrans-816
  prefs: []
  type: TYPE_PRE
  zh: '[PRE403]'
- en: Returns the homogeneous polynomial of `f`.
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的齐次多项式。
- en: A homogeneous polynomial is a polynomial whose all monomials with non-zero coefficients
    have the same total degree. If you only want to check if a polynomial is homogeneous,
    then use [`Poly.is_homogeneous()`](#sympy.polys.polytools.Poly.is_homogeneous
    "sympy.polys.polytools.Poly.is_homogeneous"). If you want not only to check if
    a polynomial is homogeneous but also compute its homogeneous order, then use [`Poly.homogeneous_order()`](#sympy.polys.polytools.Poly.homogeneous_order
    "sympy.polys.polytools.Poly.homogeneous_order").
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: 齐次多项式是所有非零系数的单项式具有相同总次数的多项式。如果你只想检查一个多项式是否是齐次的，则使用 [`Poly.is_homogeneous()`](#sympy.polys.polytools.Poly.is_homogeneous
    "sympy.polys.polytools.Poly.is_homogeneous")。如果你不仅想检查一个多项式是否是齐次的，还想计算其齐次阶数，请使用
    [`Poly.homogeneous_order()`](#sympy.polys.polytools.Poly.homogeneous_order "sympy.polys.polytools.Poly.homogeneous_order")。
- en: Examples
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE404]'
  id: totrans-820
  prefs: []
  type: TYPE_PRE
  zh: '[PRE404]'
- en: '[PRE405]'
  id: totrans-821
  prefs: []
  type: TYPE_PRE
  zh: '[PRE405]'
- en: '[PRE406]'
  id: totrans-822
  prefs: []
  type: TYPE_PRE
  zh: '[PRE406]'
- en: Inject ground domain generators into `f`.
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 将底域生成元注入到 `f` 中。
- en: Examples
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE407]'
  id: totrans-825
  prefs: []
  type: TYPE_PRE
  zh: '[PRE407]'
- en: '[PRE408]'
  id: totrans-826
  prefs: []
  type: TYPE_PRE
  zh: '[PRE408]'
- en: '[PRE409]'
  id: totrans-827
  prefs: []
  type: TYPE_PRE
  zh: '[PRE409]'
- en: '[PRE410]'
  id: totrans-828
  prefs: []
  type: TYPE_PRE
  zh: '[PRE410]'
- en: Computes indefinite integral of `f`.
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的不定积分。
- en: Examples
  id: totrans-830
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE411]'
  id: totrans-831
  prefs: []
  type: TYPE_PRE
  zh: '[PRE411]'
- en: '[PRE412]'
  id: totrans-832
  prefs: []
  type: TYPE_PRE
  zh: '[PRE412]'
- en: '[PRE413]'
  id: totrans-833
  prefs: []
  type: TYPE_PRE
  zh: '[PRE413]'
- en: '[PRE414]'
  id: totrans-834
  prefs: []
  type: TYPE_PRE
  zh: '[PRE414]'
- en: Compute isolating intervals for roots of `f`.
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的根的隔离区间。
- en: For real roots the Vincent-Akritas-Strzebonski (VAS) continued fractions method
    is used.
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: 对于实根，使用文森特-阿克里塔斯-斯特泽邦斯基（VAS）连分数法。
- en: Examples
  id: totrans-837
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE415]'
  id: totrans-838
  prefs: []
  type: TYPE_PRE
  zh: '[PRE415]'
- en: '[PRE416]'
  id: totrans-839
  prefs: []
  type: TYPE_PRE
  zh: '[PRE416]'
- en: References
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[PRE417]'
  id: totrans-841
  prefs: []
  type: TYPE_PRE
  zh: '[PRE417]'
- en: Invert `f` modulo `g` when possible.
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: 在可能时对 `f` 模 `g` 反演。
- en: Examples
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE418]'
  id: totrans-844
  prefs: []
  type: TYPE_PRE
  zh: '[PRE418]'
- en: '[PRE419]'
  id: totrans-845
  prefs: []
  type: TYPE_PRE
  zh: '[PRE419]'
- en: '[PRE420]'
  id: totrans-846
  prefs: []
  type: TYPE_PRE
  zh: '[PRE420]'
- en: '[PRE421]'
  id: totrans-847
  prefs: []
  type: TYPE_PRE
  zh: '[PRE421]'
- en: Returns `True` if `f` is a cyclotomic polnomial.
  id: totrans-848
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 是一个周期多项式。
- en: Examples
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE422]'
  id: totrans-850
  prefs: []
  type: TYPE_PRE
  zh: '[PRE422]'
- en: '[PRE423]'
  id: totrans-851
  prefs: []
  type: TYPE_PRE
  zh: '[PRE423]'
- en: '[PRE424]'
  id: totrans-852
  prefs: []
  type: TYPE_PRE
  zh: '[PRE424]'
- en: '[PRE425]'
  id: totrans-853
  prefs: []
  type: TYPE_PRE
  zh: '[PRE425]'
- en: '[PRE426]'
  id: totrans-854
  prefs: []
  type: TYPE_PRE
  zh: '[PRE426]'
- en: '[PRE427]'
  id: totrans-855
  prefs: []
  type: TYPE_PRE
  zh: '[PRE427]'
- en: Returns `True` if `f` is an element of the ground domain.
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 是底域的元素。
- en: Examples
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE428]'
  id: totrans-858
  prefs: []
  type: TYPE_PRE
  zh: '[PRE428]'
- en: '[PRE429]'
  id: totrans-859
  prefs: []
  type: TYPE_PRE
  zh: '[PRE429]'
- en: '[PRE430]'
  id: totrans-860
  prefs: []
  type: TYPE_PRE
  zh: '[PRE430]'
- en: Returns `True` if `f` is a homogeneous polynomial.
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 是一个齐次多项式。
- en: A homogeneous polynomial is a polynomial whose all monomials with non-zero coefficients
    have the same total degree. If you want not only to check if a polynomial is homogeneous
    but also compute its homogeneous order, then use [`Poly.homogeneous_order()`](#sympy.polys.polytools.Poly.homogeneous_order
    "sympy.polys.polytools.Poly.homogeneous_order").
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: 齐次多项式是所有非零系数的单项式具有相同总次数的多项式。如果你不仅想检查一个多项式是否是齐次的，还想计算其齐次阶数，请使用 [`Poly.homogeneous_order()`](#sympy.polys.polytools.Poly.homogeneous_order
    "sympy.polys.polytools.Poly.homogeneous_order")。
- en: Examples
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE431]'
  id: totrans-864
  prefs: []
  type: TYPE_PRE
  zh: '[PRE431]'
- en: '[PRE432]'
  id: totrans-865
  prefs: []
  type: TYPE_PRE
  zh: '[PRE432]'
- en: '[PRE433]'
  id: totrans-866
  prefs: []
  type: TYPE_PRE
  zh: '[PRE433]'
- en: Returns `True` if `f` has no factors over its domain.
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 在其域上没有因子。
- en: Examples
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE434]'
  id: totrans-869
  prefs: []
  type: TYPE_PRE
  zh: '[PRE434]'
- en: '[PRE435]'
  id: totrans-870
  prefs: []
  type: TYPE_PRE
  zh: '[PRE435]'
- en: '[PRE436]'
  id: totrans-871
  prefs: []
  type: TYPE_PRE
  zh: '[PRE436]'
- en: Returns `True` if `f` is linear in all its variables.
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 在所有变量中是线性的。
- en: Examples
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE437]'
  id: totrans-874
  prefs: []
  type: TYPE_PRE
  zh: '[PRE437]'
- en: '[PRE438]'
  id: totrans-875
  prefs: []
  type: TYPE_PRE
  zh: '[PRE438]'
- en: '[PRE439]'
  id: totrans-876
  prefs: []
  type: TYPE_PRE
  zh: '[PRE439]'
- en: Returns `True` if the leading coefficient of `f` is one.
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 的首项系数为一。
- en: Examples
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE440]'
  id: totrans-879
  prefs: []
  type: TYPE_PRE
  zh: '[PRE440]'
- en: '[PRE441]'
  id: totrans-880
  prefs: []
  type: TYPE_PRE
  zh: '[PRE441]'
- en: '[PRE442]'
  id: totrans-881
  prefs: []
  type: TYPE_PRE
  zh: '[PRE442]'
- en: Returns `True` if `f` is zero or has only one term.
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 是零或仅有一个项。
- en: Examples
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE443]'
  id: totrans-884
  prefs: []
  type: TYPE_PRE
  zh: '[PRE443]'
- en: '[PRE444]'
  id: totrans-885
  prefs: []
  type: TYPE_PRE
  zh: '[PRE444]'
- en: '[PRE445]'
  id: totrans-886
  prefs: []
  type: TYPE_PRE
  zh: '[PRE445]'
- en: Returns `True` if `f` is a multivariate polynomial.
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 是一个多变量多项式。
- en: Examples
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE446]'
  id: totrans-889
  prefs: []
  type: TYPE_PRE
  zh: '[PRE446]'
- en: '[PRE447]'
  id: totrans-890
  prefs: []
  type: TYPE_PRE
  zh: '[PRE447]'
- en: '[PRE448]'
  id: totrans-891
  prefs: []
  type: TYPE_PRE
  zh: '[PRE448]'
- en: Returns `True` if `f` is a unit polynomial.
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `True` 如果 `f` 是一个单位多项式。
- en: Examples
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE449]'
  id: totrans-894
  prefs: []
  type: TYPE_PRE
  zh: '[PRE449]'
- en: '[PRE450]'
  id: totrans-895
  prefs: []
  type: TYPE_PRE
  zh: '[PRE450]'
- en: '[PRE451]'
  id: totrans-896
  prefs: []
  type: TYPE_PRE
  zh: '[PRE451]'
- en: Returns `True` if GCD of the coefficients of `f` is one.
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 的系数的最大公约数是一，则返回 `True`。
- en: Examples
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE452]'
  id: totrans-899
  prefs: []
  type: TYPE_PRE
  zh: '[PRE452]'
- en: '[PRE453]'
  id: totrans-900
  prefs: []
  type: TYPE_PRE
  zh: '[PRE453]'
- en: '[PRE454]'
  id: totrans-901
  prefs: []
  type: TYPE_PRE
  zh: '[PRE454]'
- en: Returns `True` if `f` is quadratic in all its variables.
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 在所有变量上都是二次的，则返回 `True`。
- en: Examples
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE455]'
  id: totrans-904
  prefs: []
  type: TYPE_PRE
  zh: '[PRE455]'
- en: '[PRE456]'
  id: totrans-905
  prefs: []
  type: TYPE_PRE
  zh: '[PRE456]'
- en: '[PRE457]'
  id: totrans-906
  prefs: []
  type: TYPE_PRE
  zh: '[PRE457]'
- en: Returns `True` if `f` is a square-free polynomial.
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是一个无平方因子的多项式，则返回 `True`。
- en: Examples
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE458]'
  id: totrans-909
  prefs: []
  type: TYPE_PRE
  zh: '[PRE458]'
- en: '[PRE459]'
  id: totrans-910
  prefs: []
  type: TYPE_PRE
  zh: '[PRE459]'
- en: '[PRE460]'
  id: totrans-911
  prefs: []
  type: TYPE_PRE
  zh: '[PRE460]'
- en: Returns `True` if `f` is a univariate polynomial.
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是一元多项式，则返回 `True`。
- en: Examples
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE461]'
  id: totrans-914
  prefs: []
  type: TYPE_PRE
  zh: '[PRE461]'
- en: '[PRE462]'
  id: totrans-915
  prefs: []
  type: TYPE_PRE
  zh: '[PRE462]'
- en: '[PRE463]'
  id: totrans-916
  prefs: []
  type: TYPE_PRE
  zh: '[PRE463]'
- en: Returns `True` if `f` is a zero polynomial.
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是零多项式，则返回 `True`。
- en: Examples
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE464]'
  id: totrans-919
  prefs: []
  type: TYPE_PRE
  zh: '[PRE464]'
- en: '[PRE465]'
  id: totrans-920
  prefs: []
  type: TYPE_PRE
  zh: '[PRE465]'
- en: '[PRE466]'
  id: totrans-921
  prefs: []
  type: TYPE_PRE
  zh: '[PRE466]'
- en: Returns l1 norm of `f`.
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的 l1 范数。
- en: Examples
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE467]'
  id: totrans-924
  prefs: []
  type: TYPE_PRE
  zh: '[PRE467]'
- en: '[PRE468]'
  id: totrans-925
  prefs: []
  type: TYPE_PRE
  zh: '[PRE468]'
- en: '[PRE469]'
  id: totrans-926
  prefs: []
  type: TYPE_PRE
  zh: '[PRE469]'
- en: Returns polynomial LCM of `f` and `g`.
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 和 `g` 的多项式最小公倍数。
- en: Examples
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE470]'
  id: totrans-929
  prefs: []
  type: TYPE_PRE
  zh: '[PRE470]'
- en: '[PRE471]'
  id: totrans-930
  prefs: []
  type: TYPE_PRE
  zh: '[PRE471]'
- en: '[PRE472]'
  id: totrans-931
  prefs: []
  type: TYPE_PRE
  zh: '[PRE472]'
- en: Returns the number of non-zero terms in `f`.
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 中非零项的数量。
- en: Examples
  id: totrans-933
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE473]'
  id: totrans-934
  prefs: []
  type: TYPE_PRE
  zh: '[PRE473]'
- en: '[PRE474]'
  id: totrans-935
  prefs: []
  type: TYPE_PRE
  zh: '[PRE474]'
- en: '[PRE475]'
  id: totrans-936
  prefs: []
  type: TYPE_PRE
  zh: '[PRE475]'
- en: Convert algebraic coefficients to rationals.
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: 将代数系数转换为有理数。
- en: Examples
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE476]'
  id: totrans-939
  prefs: []
  type: TYPE_PRE
  zh: '[PRE476]'
- en: '[PRE477]'
  id: totrans-940
  prefs: []
  type: TYPE_PRE
  zh: '[PRE477]'
- en: '[PRE478]'
  id: totrans-941
  prefs: []
  type: TYPE_PRE
  zh: '[PRE478]'
- en: Remove dummy generators from `f` that are to the left of specified `gen` in
    the generators as ordered. When `gen` is an integer, it refers to the generator
    located at that position within the tuple of generators of `f`.
  id: totrans-942
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `f` 中删除左边指定的 `gen` 生成器的虚拟生成器。当 `gen` 是整数时，它指的是 `f` 的生成器元组中位于该位置的生成器。
- en: Examples
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE479]'
  id: totrans-944
  prefs: []
  type: TYPE_PRE
  zh: '[PRE479]'
- en: '[PRE480]'
  id: totrans-945
  prefs: []
  type: TYPE_PRE
  zh: '[PRE480]'
- en: '[PRE481]'
  id: totrans-946
  prefs: []
  type: TYPE_PRE
  zh: '[PRE481]'
- en: Turn any univariate polynomial over [QQ](domainsref.html#qq) or [ZZ](domainsref.html#zz)
    into a monic polynomial over [ZZ](domainsref.html#zz), by scaling the roots as
    necessary.
  id: totrans-947
  prefs: []
  type: TYPE_NORMAL
  zh: 将任意一元多项式在 [QQ](domainsref.html#qq) 或 [ZZ](domainsref.html#zz) 上转换为 [ZZ](domainsref.html#zz)
    上的首一多项式，必要时通过缩放根来进行。
- en: 'Returns:'
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Pair `(g, c)`
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: 对偶 `(g, c)`
- en: g is the polynomial
  id: totrans-950
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`g` 是多项式。'
- en: ''
  id: totrans-951
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: c is the integer by which the roots had to be scaled
  id: totrans-952
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: c 是根必须缩放的整数
- en: Explanation
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This operation can be performed whether or not *f* is irreducible; when it is,
    this can be understood as determining an algebraic integer generating the same
    field as a root of *f*.
  id: totrans-954
  prefs: []
  type: TYPE_NORMAL
  zh: 无论 *f* 是否是不可约的，都可以执行此操作；当 *f* 是不可约的时，可以理解为确定一个生成与 *f* 的根相同的域的代数整数。
- en: Examples
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE482]'
  id: totrans-956
  prefs: []
  type: TYPE_PRE
  zh: '[PRE482]'
- en: '[PRE483]'
  id: totrans-957
  prefs: []
  type: TYPE_PRE
  zh: '[PRE483]'
- en: Match expression from Poly. See Basic.match()
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: 匹配 Poly 中的表达式。参见 Basic.match()
- en: '[PRE484]'
  id: totrans-959
  prefs: []
  type: TYPE_PRE
  zh: '[PRE484]'
- en: Returns maximum norm of `f`.
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的最大范数。
- en: Examples
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE485]'
  id: totrans-962
  prefs: []
  type: TYPE_PRE
  zh: '[PRE485]'
- en: '[PRE486]'
  id: totrans-963
  prefs: []
  type: TYPE_PRE
  zh: '[PRE486]'
- en: '[PRE487]'
  id: totrans-964
  prefs: []
  type: TYPE_PRE
  zh: '[PRE487]'
- en: Divides all coefficients by `LC(f)`.
  id: totrans-965
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有系数除以 `LC(f)`。
- en: Examples
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE488]'
  id: totrans-967
  prefs: []
  type: TYPE_PRE
  zh: '[PRE488]'
- en: '[PRE489]'
  id: totrans-968
  prefs: []
  type: TYPE_PRE
  zh: '[PRE489]'
- en: '[PRE490]'
  id: totrans-969
  prefs: []
  type: TYPE_PRE
  zh: '[PRE490]'
- en: '[PRE491]'
  id: totrans-970
  prefs: []
  type: TYPE_PRE
  zh: '[PRE491]'
- en: Returns all non-zero monomials from `f` in lex order.
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的所有非零单项式按词典序。
- en: Examples
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE492]'
  id: totrans-973
  prefs: []
  type: TYPE_PRE
  zh: '[PRE492]'
- en: '[PRE493]'
  id: totrans-974
  prefs: []
  type: TYPE_PRE
  zh: '[PRE493]'
- en: See also
  id: totrans-975
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`all_monoms`](#sympy.polys.polytools.Poly.all_monoms "sympy.polys.polytools.Poly.all_monoms")'
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: '[`all_monoms`](#sympy.polys.polytools.Poly.all_monoms "sympy.polys.polytools.Poly.all_monoms")：'
- en: '[PRE494]'
  id: totrans-977
  prefs: []
  type: TYPE_PRE
  zh: '[PRE494]'
- en: Multiply two polynomials `f` and `g`.
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: 将两个多项式 `f` 和 `g` 相乘。
- en: Examples
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE495]'
  id: totrans-980
  prefs: []
  type: TYPE_PRE
  zh: '[PRE495]'
- en: '[PRE496]'
  id: totrans-981
  prefs: []
  type: TYPE_PRE
  zh: '[PRE496]'
- en: '[PRE497]'
  id: totrans-982
  prefs: []
  type: TYPE_PRE
  zh: '[PRE497]'
- en: '[PRE498]'
  id: totrans-983
  prefs: []
  type: TYPE_PRE
  zh: '[PRE498]'
- en: Multiply `f` by a an element of the ground domain.
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 乘以地面域的元素。
- en: Examples
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE499]'
  id: totrans-986
  prefs: []
  type: TYPE_PRE
  zh: '[PRE499]'
- en: '[PRE500]'
  id: totrans-987
  prefs: []
  type: TYPE_PRE
  zh: '[PRE500]'
- en: '[PRE501]'
  id: totrans-988
  prefs: []
  type: TYPE_PRE
  zh: '[PRE501]'
- en: Negate all coefficients in `f`.
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 的所有系数取反。
- en: Examples
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE502]'
  id: totrans-991
  prefs: []
  type: TYPE_PRE
  zh: '[PRE502]'
- en: '[PRE503]'
  id: totrans-992
  prefs: []
  type: TYPE_PRE
  zh: '[PRE503]'
- en: '[PRE504]'
  id: totrans-993
  prefs: []
  type: TYPE_PRE
  zh: '[PRE504]'
- en: '[PRE505]'
  id: totrans-994
  prefs: []
  type: TYPE_PRE
  zh: '[PRE505]'
- en: Construct [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    instance from raw representation.
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: 从原始表示构造 [`Poly`](#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly") 实例。
- en: '[PRE506]'
  id: totrans-996
  prefs: []
  type: TYPE_PRE
  zh: '[PRE506]'
- en: Computes the product, `Norm(f)`, of the conjugates of a polynomial `f` defined
    over a number field `K`.
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: 计算定义在数域 `K` 上的多项式 `f` 共轭的乘积 `Norm(f)`。
- en: Examples
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE507]'
  id: totrans-999
  prefs: []
  type: TYPE_PRE
  zh: '[PRE507]'
- en: '[PRE508]'
  id: totrans-1000
  prefs: []
  type: TYPE_PRE
  zh: '[PRE508]'
- en: A polynomial over a quadratic extension. Two conjugates x - a and x + a.
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
  zh: 二次扩展上的多项式。两个共轭根 x - a 和 x + a。
- en: '[PRE509]'
  id: totrans-1002
  prefs: []
  type: TYPE_PRE
  zh: '[PRE509]'
- en: A polynomial over a quartic extension. Four conjugates x - a, x - a, x + a and
    x + a.
  id: totrans-1003
  prefs: []
  type: TYPE_NORMAL
  zh: 四次扩展上的多项式。四个共轭根 x - a, x - a, x + a 和 x + a。
- en: '[PRE510]'
  id: totrans-1004
  prefs: []
  type: TYPE_PRE
  zh: '[PRE510]'
- en: '[PRE511]'
  id: totrans-1005
  prefs: []
  type: TYPE_PRE
  zh: '[PRE511]'
- en: Compute numerical approximations of roots of `f`.
  id: totrans-1006
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的根的数值近似。
- en: 'Parameters:'
  id: totrans-1007
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n … the number of digits to calculate**'
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: '**n … 计算的数字位数**'
- en: '**maxsteps … the maximum number of iterations to do**'
  id: totrans-1009
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxsteps … 最大迭代次数**'
- en: '**If the accuracy `n` cannot be reached in `maxsteps`, it will raise an**'
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果在 `maxsteps` 中无法达到精度 `n`，它将引发异常**'
- en: '**exception. You need to rerun with higher maxsteps.**'
  id: totrans-1011
  prefs: []
  type: TYPE_NORMAL
  zh: '**exception. 需要使用更高的 maxsteps 重新运行。**'
- en: Examples
  id: totrans-1012
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE512]'
  id: totrans-1013
  prefs: []
  type: TYPE_PRE
  zh: '[PRE512]'
- en: '[PRE513]'
  id: totrans-1014
  prefs: []
  type: TYPE_PRE
  zh: '[PRE513]'
- en: '[PRE514]'
  id: totrans-1015
  prefs: []
  type: TYPE_PRE
  zh: '[PRE514]'
- en: Returns the `n`-th coefficient of `f` where `N` are the exponents of the generators
    in the term of interest.
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的第 `n` 个系数，其中 `N` 是感兴趣项中生成器的指数。
- en: Examples
  id: totrans-1017
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE515]'
  id: totrans-1018
  prefs: []
  type: TYPE_PRE
  zh: '[PRE515]'
- en: '[PRE516]'
  id: totrans-1019
  prefs: []
  type: TYPE_PRE
  zh: '[PRE516]'
- en: See also
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`coeff_monomial`](#sympy.polys.polytools.Poly.coeff_monomial "sympy.polys.polytools.Poly.coeff_monomial")'
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: '[`coeff_monomial`](#sympy.polys.polytools.Poly.coeff_monomial "sympy.polys.polytools.Poly.coeff_monomial")：'
- en: '[PRE517]'
  id: totrans-1022
  prefs: []
  type: TYPE_PRE
  zh: '[PRE517]'
- en: Construct a polynomial with n-th powers of roots of `f`.
  id: totrans-1023
  prefs: []
  type: TYPE_NORMAL
  zh: 用 `f` 的根的 n 次幂构造一个多项式。
- en: Examples
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE518]'
  id: totrans-1025
  prefs: []
  type: TYPE_PRE
  zh: '[PRE518]'
- en: '[PRE519]'
  id: totrans-1026
  prefs: []
  type: TYPE_PRE
  zh: '[PRE519]'
- en: '[PRE520]'
  id: totrans-1027
  prefs: []
  type: TYPE_PRE
  zh: '[PRE520]'
- en: '[PRE521]'
  id: totrans-1028
  prefs: []
  type: TYPE_PRE
  zh: '[PRE521]'
- en: Return one polynomial with `self`’s properties.
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有 `self` 属性的一个多项式。
- en: '[PRE522]'
  id: totrans-1030
  prefs: []
  type: TYPE_PRE
  zh: '[PRE522]'
- en: Polynomial pseudo-division of `f` by `g`.
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 除以 `g` 的多项式伪除法。'
- en: Examples
  id: totrans-1032
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE523]'
  id: totrans-1033
  prefs: []
  type: TYPE_PRE
  zh: '[PRE523]'
- en: '[PRE524]'
  id: totrans-1034
  prefs: []
  type: TYPE_PRE
  zh: '[PRE524]'
- en: '[PRE525]'
  id: totrans-1035
  prefs: []
  type: TYPE_PRE
  zh: '[PRE525]'
- en: Create a Poly out of the given representation.
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: 用给定的表示创建一个 Poly。
- en: Examples
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE526]'
  id: totrans-1038
  prefs: []
  type: TYPE_PRE
  zh: '[PRE526]'
- en: '[PRE527]'
  id: totrans-1039
  prefs: []
  type: TYPE_PRE
  zh: '[PRE527]'
- en: '[PRE528]'
  id: totrans-1040
  prefs: []
  type: TYPE_PRE
  zh: '[PRE528]'
- en: '[PRE529]'
  id: totrans-1041
  prefs: []
  type: TYPE_PRE
  zh: '[PRE529]'
- en: '[PRE530]'
  id: totrans-1042
  prefs: []
  type: TYPE_PRE
  zh: '[PRE530]'
- en: Polynomial exact pseudo-quotient of `f` by `g`.
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 除以 `g` 的多项式精确伪商。'
- en: Examples
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE531]'
  id: totrans-1045
  prefs: []
  type: TYPE_PRE
  zh: '[PRE531]'
- en: '[PRE532]'
  id: totrans-1046
  prefs: []
  type: TYPE_PRE
  zh: '[PRE532]'
- en: '[PRE533]'
  id: totrans-1047
  prefs: []
  type: TYPE_PRE
  zh: '[PRE533]'
- en: '[PRE534]'
  id: totrans-1048
  prefs: []
  type: TYPE_PRE
  zh: '[PRE534]'
- en: Raise `f` to a non-negative power `n`.
  id: totrans-1049
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 提升到非负幂 `n`。
- en: Examples
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE535]'
  id: totrans-1051
  prefs: []
  type: TYPE_PRE
  zh: '[PRE535]'
- en: '[PRE536]'
  id: totrans-1052
  prefs: []
  type: TYPE_PRE
  zh: '[PRE536]'
- en: '[PRE537]'
  id: totrans-1053
  prefs: []
  type: TYPE_PRE
  zh: '[PRE537]'
- en: '[PRE538]'
  id: totrans-1054
  prefs: []
  type: TYPE_PRE
  zh: '[PRE538]'
- en: Polynomial pseudo-quotient of `f` by `g`.
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 除以 `g` 的多项式伪商。'
- en: See the Caveat note in the function prem(f, g).
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见函数 prem(f, g) 中的注意事项。
- en: Examples
  id: totrans-1057
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE539]'
  id: totrans-1058
  prefs: []
  type: TYPE_PRE
  zh: '[PRE539]'
- en: '[PRE540]'
  id: totrans-1059
  prefs: []
  type: TYPE_PRE
  zh: '[PRE540]'
- en: '[PRE541]'
  id: totrans-1060
  prefs: []
  type: TYPE_PRE
  zh: '[PRE541]'
- en: '[PRE542]'
  id: totrans-1061
  prefs: []
  type: TYPE_PRE
  zh: '[PRE542]'
- en: Polynomial pseudo-remainder of `f` by `g`.
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式伪余数 `f` 除以 `g`。
- en: 'Caveat: The function prem(f, g, x) can be safely used to compute'
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：函数 prem(f, g, x) 可以安全地用于计算。
- en: in Z[x] _only_ subresultant polynomial remainder sequences (prs’s).
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Z[x] _only_ 中的子结果多项式余数序列 (PRS)。
- en: To safely compute Euclidean and Sturmian prs’s in Z[x] employ anyone of the
    corresponding functions found in the module sympy.polys.subresultants_qq_zz. The
    functions in the module with suffix _pg compute prs’s in Z[x] employing rem(f,
    g, x), whereas the functions with suffix _amv compute prs’s in Z[x] employing
    rem_z(f, g, x).
  id: totrans-1065
  prefs: []
  type: TYPE_NORMAL
  zh: 若要在 Z[x] 中安全地计算欧几里德和斯图米尔PRS，请使用模块 sympy.polys.subresultants_qq_zz 中找到的相应函数之一。带有后缀
    _pg 的模块函数使用 rem(f, g, x) 在 Z[x] 中计算PRS，而带有后缀 _amv 的函数使用 rem_z(f, g, x) 在 Z[x]
    中计算PRS。
- en: The function rem_z(f, g, x) differs from prem(f, g, x) in that to compute the
    remainder polynomials in Z[x] it premultiplies the divident times the absolute
    value of the leading coefficient of the divisor raised to the power degree(f,
    x) - degree(g, x) + 1.
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 rem_z(f, g, x) 不同于 prem(f, g, x)，因为它在计算Z[x]中的余式多项式时，将被除数预乘以除数的绝对值的次数，即 degree(f,
    x) - degree(g, x) + 1。
- en: Examples
  id: totrans-1067
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE543]'
  id: totrans-1068
  prefs: []
  type: TYPE_PRE
  zh: '[PRE543]'
- en: '[PRE544]'
  id: totrans-1069
  prefs: []
  type: TYPE_PRE
  zh: '[PRE544]'
- en: '[PRE545]'
  id: totrans-1070
  prefs: []
  type: TYPE_PRE
  zh: '[PRE545]'
- en: Returns the content and a primitive form of `f`.
  id: totrans-1071
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的内容和原始形式。
- en: Examples
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE546]'
  id: totrans-1073
  prefs: []
  type: TYPE_PRE
  zh: '[PRE546]'
- en: '[PRE547]'
  id: totrans-1074
  prefs: []
  type: TYPE_PRE
  zh: '[PRE547]'
- en: '[PRE548]'
  id: totrans-1075
  prefs: []
  type: TYPE_PRE
  zh: '[PRE548]'
- en: Computes polynomial quotient of `f` by `g`.
  id: totrans-1076
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 除以 `g` 的多项式商。
- en: Examples
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE549]'
  id: totrans-1078
  prefs: []
  type: TYPE_PRE
  zh: '[PRE549]'
- en: '[PRE550]'
  id: totrans-1079
  prefs: []
  type: TYPE_PRE
  zh: '[PRE550]'
- en: '[PRE551]'
  id: totrans-1080
  prefs: []
  type: TYPE_PRE
  zh: '[PRE551]'
- en: '[PRE552]'
  id: totrans-1081
  prefs: []
  type: TYPE_PRE
  zh: '[PRE552]'
- en: Quotient of `f` by a an element of the ground domain.
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 除以基本定义域元素的商。'
- en: Examples
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE553]'
  id: totrans-1084
  prefs: []
  type: TYPE_PRE
  zh: '[PRE553]'
- en: '[PRE554]'
  id: totrans-1085
  prefs: []
  type: TYPE_PRE
  zh: '[PRE554]'
- en: '[PRE555]'
  id: totrans-1086
  prefs: []
  type: TYPE_PRE
  zh: '[PRE555]'
- en: '[PRE556]'
  id: totrans-1087
  prefs: []
  type: TYPE_PRE
  zh: '[PRE556]'
- en: Clear denominators in a rational function `f/g`.
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: 清除有理函数 `f/g` 中的分母。
- en: Examples
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE557]'
  id: totrans-1090
  prefs: []
  type: TYPE_PRE
  zh: '[PRE557]'
- en: '[PRE558]'
  id: totrans-1091
  prefs: []
  type: TYPE_PRE
  zh: '[PRE558]'
- en: '[PRE559]'
  id: totrans-1092
  prefs: []
  type: TYPE_PRE
  zh: '[PRE559]'
- en: '[PRE560]'
  id: totrans-1093
  prefs: []
  type: TYPE_PRE
  zh: '[PRE560]'
- en: '[PRE561]'
  id: totrans-1094
  prefs: []
  type: TYPE_PRE
  zh: '[PRE561]'
- en: Return a list of real roots with multiplicities.
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: 返回带有重数的实根列表。
- en: See [`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")
    for more explanation.
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: 参见 [`real_roots()`](#sympy.polys.polytools.real_roots "sympy.polys.polytools.real_roots")
    以获取更多解释。
- en: Examples
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE562]'
  id: totrans-1098
  prefs: []
  type: TYPE_PRE
  zh: '[PRE562]'
- en: '[PRE563]'
  id: totrans-1099
  prefs: []
  type: TYPE_PRE
  zh: '[PRE563]'
- en: '[PRE564]'
  id: totrans-1100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE564]'
- en: Refine an isolating interval of a root to the given precision.
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
  zh: 优化根的隔离区间至指定精度。
- en: Examples
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE565]'
  id: totrans-1103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE565]'
- en: '[PRE566]'
  id: totrans-1104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE566]'
- en: '[PRE567]'
  id: totrans-1105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE567]'
- en: Computes the polynomial remainder of `f` by `g`.
  id: totrans-1106
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 除以 `g` 的多项式余数。
- en: Examples
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE568]'
  id: totrans-1108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE568]'
- en: '[PRE569]'
  id: totrans-1109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE569]'
- en: '[PRE570]'
  id: totrans-1110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE570]'
- en: '[PRE571]'
  id: totrans-1111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE571]'
- en: Efficiently apply new order of generators.
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: 高效应用新的生成器顺序。
- en: Examples
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE572]'
  id: totrans-1114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE572]'
- en: '[PRE573]'
  id: totrans-1115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE573]'
- en: '[PRE574]'
  id: totrans-1116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE574]'
- en: Replace `x` with `y` in generators list.
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
  zh: 在生成器列表中用 `y` 替换 `x`。
- en: Examples
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE575]'
  id: totrans-1119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE575]'
- en: '[PRE576]'
  id: totrans-1120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE576]'
- en: '[PRE577]'
  id: totrans-1121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE577]'
- en: Computes the resultant of `f` and `g` via PRS.
  id: totrans-1122
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的结果通过PRS。
- en: If includePRS=True, it includes the subresultant PRS in the result. Because
    the PRS is used to calculate the resultant, this is more efficient than calling
    [`subresultants()`](#sympy.polys.polytools.subresultants "sympy.polys.polytools.subresultants")
    separately.
  id: totrans-1123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 includePRS=True，则在结果中包含子结果PRS。因为PRS用于计算结果，所以这比单独调用 [`subresultants()`](#sympy.polys.polytools.subresultants
    "sympy.polys.polytools.subresultants") 更有效。
- en: Examples
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE578]'
  id: totrans-1125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE578]'
- en: '[PRE579]'
  id: totrans-1126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE579]'
- en: '[PRE580]'
  id: totrans-1127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE580]'
- en: '[PRE581]'
  id: totrans-1128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE581]'
- en: Recalculate the ground domain of a polynomial.
  id: totrans-1129
  prefs: []
  type: TYPE_NORMAL
  zh: 重新计算多项式的基本定义域。
- en: Examples
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE582]'
  id: totrans-1131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE582]'
- en: '[PRE583]'
  id: totrans-1132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE583]'
- en: '[PRE584]'
  id: totrans-1133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE584]'
- en: '[PRE585]'
  id: totrans-1134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE585]'
- en: Compute `f**(-1)` mod `x**n`.
  id: totrans-1135
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f**(-1)` mod `x**n`.
- en: Examples
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE586]'
  id: totrans-1137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE586]'
- en: '[PRE587]'
  id: totrans-1138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE587]'
- en: '[PRE588]'
  id: totrans-1139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE588]'
- en: '[PRE589]'
  id: totrans-1140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE589]'
- en: '[PRE590]'
  id: totrans-1141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE590]'
- en: '[PRE591]'
  id: totrans-1142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE591]'
- en: Get an indexed root of a polynomial.
  id: totrans-1143
  prefs: []
  type: TYPE_NORMAL
  zh: 获取多项式的索引根。
- en: Examples
  id: totrans-1144
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE592]'
  id: totrans-1145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE592]'
- en: '[PRE593]'
  id: totrans-1146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE593]'
- en: '[PRE594]'
  id: totrans-1147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE594]'
- en: '[PRE595]'
  id: totrans-1148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE595]'
- en: '[PRE596]'
  id: totrans-1149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE596]'
- en: Decide whether two roots of this polynomial are equal.
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
  zh: 决定该多项式的两个根是否相等。
- en: 'Raises:'
  id: totrans-1151
  prefs: []
  type: TYPE_NORMAL
  zh: '抛出:'
- en: '**DomainError**'
  id: totrans-1152
  prefs: []
  type: TYPE_NORMAL
  zh: '**域错误**'
- en: If the domain of the polynomial is not [ZZ](domainsref.html#zz), [QQ](domainsref.html#qq),
    [RR](domainsref.html#rr), or [CC](domainsref.html#cc).
  id: totrans-1153
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果多项式的定义域不是 [ZZ](domainsref.html#zz), [QQ](domainsref.html#qq), [RR](domainsref.html#rr),
    或 [CC](domainsref.html#cc)。
- en: '**MultivariatePolynomialError**'
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
  zh: '**多变量多项式错误**'
- en: If the polynomial is not univariate.
  id: totrans-1155
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果多项式不是单变量的。
- en: '**PolynomialError**'
  id: totrans-1156
  prefs: []
  type: TYPE_NORMAL
  zh: '**多项式错误**'
- en: If the polynomial is of degree < 2.
  id: totrans-1157
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果多项式的次数 < 2。
- en: Examples
  id: totrans-1158
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE597]'
  id: totrans-1159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE597]'
- en: '[PRE598]'
  id: totrans-1160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE598]'
- en: Set the ground domain of `f`.
  id: totrans-1161
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 `f` 的基本定义域。
- en: '[PRE599]'
  id: totrans-1162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE599]'
- en: Set the modulus of `f`.
  id: totrans-1163
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 `f` 的模数。
- en: Examples
  id: totrans-1164
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE600]'
  id: totrans-1165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE600]'
- en: '[PRE601]'
  id: totrans-1166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE601]'
- en: '[PRE602]'
  id: totrans-1167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE602]'
- en: Efficiently compute Taylor shift `f(x + a)`.
  id: totrans-1168
  prefs: []
  type: TYPE_NORMAL
  zh: 高效计算泰勒移位 `f(x + a)`。
- en: Examples
  id: totrans-1169
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE603]'
  id: totrans-1170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE603]'
- en: '[PRE604]'
  id: totrans-1171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE604]'
- en: See also
  id: totrans-1172
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`shift_list`](#sympy.polys.polytools.Poly.shift_list "sympy.polys.polytools.Poly.shift_list")'
  id: totrans-1173
  prefs: []
  type: TYPE_NORMAL
  zh: '[`shift_list`](#sympy.polys.polytools.Poly.shift_list "sympy.polys.polytools.Poly.shift_list")'
- en: Analogous method for multivariate polynomials.
  id: totrans-1174
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量多项式的类似方法。
- en: '[PRE605]'
  id: totrans-1175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE605]'
- en: Efficiently compute Taylor shift `f(X + A)`.
  id: totrans-1176
  prefs: []
  type: TYPE_NORMAL
  zh: 高效计算泰勒移位 `f(X + A)`。
- en: Examples
  id: totrans-1177
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE606]'
  id: totrans-1178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE606]'
- en: '[PRE607]'
  id: totrans-1179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE607]'
- en: See also
  id: totrans-1180
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`shift`](#sympy.polys.polytools.Poly.shift "sympy.polys.polytools.Poly.shift")'
  id: totrans-1181
  prefs: []
  type: TYPE_NORMAL
  zh: '[`shift`](#sympy.polys.polytools.Poly.shift "sympy.polys.polytools.Poly.shift")'
- en: Analogous method for univariate polynomials.
  id: totrans-1182
  prefs: []
  type: TYPE_NORMAL
  zh: 单变量多项式的类似方法。
- en: '[PRE608]'
  id: totrans-1183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE608]'
- en: Take a continuous subsequence of terms of `f`.
  id: totrans-1184
  prefs: []
  type: TYPE_NORMAL
  zh: 取 `f` 的连续子序列。
- en: '[PRE609]'
  id: totrans-1185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE609]'
- en: Returns a list of square-free factors of `f`.
  id: totrans-1186
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的无平方因子列表。
- en: Examples
  id: totrans-1187
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE610]'
  id: totrans-1188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE610]'
- en: '[PRE611]'
  id: totrans-1189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE611]'
- en: '[PRE612]'
  id: totrans-1190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE612]'
- en: '[PRE613]'
  id: totrans-1191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE613]'
- en: '[PRE614]'
  id: totrans-1192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE614]'
- en: Returns a list of square-free factors of `f`.
  id: totrans-1193
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的无平方因子列表。
- en: Examples
  id: totrans-1194
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE615]'
  id: totrans-1195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE615]'
- en: '[PRE616]'
  id: totrans-1196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE616]'
- en: '[PRE617]'
  id: totrans-1197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE617]'
- en: '[PRE618]'
  id: totrans-1198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE618]'
- en: '[PRE619]'
  id: totrans-1199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE619]'
- en: Computes square-free norm of `f`.
  id: totrans-1200
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的无平方法则。
- en: Returns `s`, `f`, `r`, such that `g(x) = f(x-sa)` and `r(x) = Norm(g(x))` is
    a square-free polynomial over `K`, where `a` is the algebraic extension of the
    ground domain.
  id: totrans-1201
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `s`、`f`、`r`，使得 `g(x) = f(x-sa)` 和 `r(x) = Norm(g(x))` 是在 `K` 上的一个无平方多项式，其中
    `a` 是地域域的代数扩展。
- en: Examples
  id: totrans-1202
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE620]'
  id: totrans-1203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE620]'
- en: '[PRE621]'
  id: totrans-1204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE621]'
- en: '[PRE622]'
  id: totrans-1205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE622]'
- en: '[PRE623]'
  id: totrans-1206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE623]'
- en: Computes square-free part of `f`.
  id: totrans-1207
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的无平方部分。
- en: Examples
  id: totrans-1208
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE624]'
  id: totrans-1209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE624]'
- en: '[PRE625]'
  id: totrans-1210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE625]'
- en: '[PRE626]'
  id: totrans-1211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE626]'
- en: Square a polynomial `f`.
  id: totrans-1212
  prefs: []
  type: TYPE_NORMAL
  zh: 对多项式 `f` 进行平方。
- en: Examples
  id: totrans-1213
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE627]'
  id: totrans-1214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE627]'
- en: '[PRE628]'
  id: totrans-1215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE628]'
- en: '[PRE629]'
  id: totrans-1216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE629]'
- en: '[PRE630]'
  id: totrans-1217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE630]'
- en: Computes the Sturm sequence of `f`.
  id: totrans-1218
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的斯图姆序列。
- en: Examples
  id: totrans-1219
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE631]'
  id: totrans-1220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE631]'
- en: '[PRE632]'
  id: totrans-1221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE632]'
- en: '[PRE633]'
  id: totrans-1222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE633]'
- en: Subtract two polynomials `f` and `g`.
  id: totrans-1223
  prefs: []
  type: TYPE_NORMAL
  zh: 减去两个多项式 `f` 和 `g`。
- en: Examples
  id: totrans-1224
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE634]'
  id: totrans-1225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE634]'
- en: '[PRE635]'
  id: totrans-1226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE635]'
- en: '[PRE636]'
  id: totrans-1227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE636]'
- en: '[PRE637]'
  id: totrans-1228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE637]'
- en: Subtract an element of the ground domain from `f`.
  id: totrans-1229
  prefs: []
  type: TYPE_NORMAL
  zh: 从地域域的元素中减去 `f`。
- en: Examples
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE638]'
  id: totrans-1231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE638]'
- en: '[PRE639]'
  id: totrans-1232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE639]'
- en: '[PRE640]'
  id: totrans-1233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE640]'
- en: Computes the subresultant PRS of `f` and `g`.
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的子结果 PRS。
- en: Examples
  id: totrans-1235
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE641]'
  id: totrans-1236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE641]'
- en: '[PRE642]'
  id: totrans-1237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE642]'
- en: '[PRE643]'
  id: totrans-1238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE643]'
- en: Returns all non-zero terms from `f` in lex order.
  id: totrans-1239
  prefs: []
  type: TYPE_NORMAL
  zh: 按词典顺序返回 `f` 的所有非零项。
- en: Examples
  id: totrans-1240
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE644]'
  id: totrans-1241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE644]'
- en: '[PRE645]'
  id: totrans-1242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE645]'
- en: See also
  id: totrans-1243
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`all_terms`](#sympy.polys.polytools.Poly.all_terms "sympy.polys.polytools.Poly.all_terms")'
  id: totrans-1244
  prefs: []
  type: TYPE_NORMAL
  zh: '[`all_terms`](#sympy.polys.polytools.Poly.all_terms "sympy.polys.polytools.Poly.all_terms")'
- en: '[PRE646]'
  id: totrans-1245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE646]'
- en: Remove GCD of terms from the polynomial `f`.
  id: totrans-1246
  prefs: []
  type: TYPE_NORMAL
  zh: 从多项式 `f` 中移除项的最大公因子。
- en: Examples
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE647]'
  id: totrans-1248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE647]'
- en: '[PRE648]'
  id: totrans-1249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE648]'
- en: '[PRE649]'
  id: totrans-1250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE649]'
- en: Apply a function to all terms of `f`.
  id: totrans-1251
  prefs: []
  type: TYPE_NORMAL
  zh: 对 `f` 的所有项应用函数。
- en: Examples
  id: totrans-1252
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE650]'
  id: totrans-1253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE650]'
- en: '[PRE651]'
  id: totrans-1254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE651]'
- en: '[PRE652]'
  id: totrans-1255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE652]'
- en: '[PRE653]'
  id: totrans-1256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE653]'
- en: Make the ground domain exact.
  id: totrans-1257
  prefs: []
  type: TYPE_NORMAL
  zh: 使地域域变得精确。
- en: Examples
  id: totrans-1258
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE654]'
  id: totrans-1259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE654]'
- en: '[PRE655]'
  id: totrans-1260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE655]'
- en: '[PRE656]'
  id: totrans-1261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE656]'
- en: Make the ground domain a field.
  id: totrans-1262
  prefs: []
  type: TYPE_NORMAL
  zh: 使地域域成为一个域。
- en: Examples
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE657]'
  id: totrans-1264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE657]'
- en: '[PRE658]'
  id: totrans-1265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE658]'
- en: '[PRE659]'
  id: totrans-1266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE659]'
- en: Make the ground domain a ring.
  id: totrans-1267
  prefs: []
  type: TYPE_NORMAL
  zh: 使地域域成为一个环。
- en: Examples
  id: totrans-1268
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE660]'
  id: totrans-1269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE660]'
- en: '[PRE661]'
  id: totrans-1270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE661]'
- en: '[PRE662]'
  id: totrans-1271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE662]'
- en: Returns the total degree of `f`.
  id: totrans-1272
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的总次数。
- en: Examples
  id: totrans-1273
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE663]'
  id: totrans-1274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE663]'
- en: '[PRE664]'
  id: totrans-1275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE664]'
- en: '[PRE665]'
  id: totrans-1276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE665]'
- en: Efficiently evaluate the functional transformation `q**n * f(p/q)`.
  id: totrans-1277
  prefs: []
  type: TYPE_NORMAL
  zh: 高效地评估函数变换 `q**n * f(p/q)`。
- en: Examples
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE666]'
  id: totrans-1279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE666]'
- en: '[PRE667]'
  id: totrans-1280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE667]'
- en: '[PRE668]'
  id: totrans-1281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE668]'
- en: Reduce `f` modulo a constant `p`.
  id: totrans-1282
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `f` 模化为常数 `p` 的余数。
- en: Examples
  id: totrans-1283
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE669]'
  id: totrans-1284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE669]'
- en: '[PRE670]'
  id: totrans-1285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE670]'
- en: '[PRE671]'
  id: totrans-1286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE671]'
- en: Make `f` and `g` belong to the same domain.
  id: totrans-1287
  prefs: []
  type: TYPE_NORMAL
  zh: 使 `f` 和 `g` 属于相同的地域域。
- en: Examples
  id: totrans-1288
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE672]'
  id: totrans-1289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE672]'
- en: '[PRE673]'
  id: totrans-1290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE673]'
- en: '[PRE674]'
  id: totrans-1291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE674]'
- en: '[PRE675]'
  id: totrans-1292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE675]'
- en: '[PRE676]'
  id: totrans-1293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE676]'
- en: '[PRE677]'
  id: totrans-1294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE677]'
- en: Return unit polynomial with `self`’s properties.
  id: totrans-1295
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `self` 属性相同的单位多项式。
- en: '[PRE678]'
  id: totrans-1296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE678]'
- en: Return zero polynomial with `self`’s properties.
  id: totrans-1297
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与 `self` 属性相同的零多项式。
- en: '[PRE679]'
  id: totrans-1298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE679]'
- en: Class for representing pure polynomials.
  id: totrans-1299
  prefs: []
  type: TYPE_NORMAL
  zh: 用于表示纯多项式的类。
- en: '[PRE680]'
  id: totrans-1300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE680]'
- en: Free symbols of a polynomial.
  id: totrans-1301
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式的自由符号。
- en: Examples
  id: totrans-1302
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE681]'
  id: totrans-1303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE681]'
- en: '[PRE682]'
  id: totrans-1304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE682]'
- en: '[PRE683]'
  id: totrans-1305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE683]'
- en: Represents a reduced Groebner basis.
  id: totrans-1306
  prefs: []
  type: TYPE_NORMAL
  zh: 表示简化的 Groebner 基础。
- en: '[PRE684]'
  id: totrans-1307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE684]'
- en: Check if `poly` belongs the ideal generated by `self`.
  id: totrans-1308
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 `poly` 是否属于由 `self` 生成的理想。
- en: Examples
  id: totrans-1309
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE685]'
  id: totrans-1310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE685]'
- en: '[PRE686]'
  id: totrans-1311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE686]'
- en: '[PRE687]'
  id: totrans-1312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE687]'
- en: '[PRE688]'
  id: totrans-1313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE688]'
- en: Convert a Groebner basis from one ordering to another.
  id: totrans-1314
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个 Groebner 基础从一种排序转换到另一种排序。
- en: The FGLM algorithm converts reduced Groebner bases of zero-dimensional ideals
    from one ordering to another. This method is often used when it is infeasible
    to compute a Groebner basis with respect to a particular ordering directly.
  id: totrans-1315
  prefs: []
  type: TYPE_NORMAL
  zh: FGLM 算法将零维理想的简化 Groebner 基从一种排序转换到另一种排序。 当直接计算与特定排序相关的 Groebner 基不可行时，通常使用此方法。
- en: Examples
  id: totrans-1316
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE689]'
  id: totrans-1317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE689]'
- en: '[PRE690]'
  id: totrans-1318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE690]'
- en: '[PRE691]'
  id: totrans-1319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE691]'
- en: References
  id: totrans-1320
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R810](#id26)]'
  id: totrans-1321
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R810](#id26)]'
- en: J.C. Faugere, P. Gianni, D. Lazard, T. Mora (1994). Efficient Computation of
    Zero-dimensional Groebner Bases by Change of Ordering
  id: totrans-1322
  prefs: []
  type: TYPE_NORMAL
  zh: J.C. Faugere, P. Gianni, D. Lazard, T. Mora (1994). Efficient Computation of
    Zero-dimensional Groebner Bases by Change of Ordering
- en: '[PRE692]'
  id: totrans-1323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE692]'
- en: Checks if the ideal generated by a Groebner basis is zero-dimensional.
  id: totrans-1324
  prefs: []
  type: TYPE_NORMAL
  zh: 检查由 Groebner 基生成的理想是否是零维的。
- en: The algorithm checks if the set of monomials not divisible by the leading monomial
    of any element of `F` is bounded.
  id: totrans-1325
  prefs: []
  type: TYPE_NORMAL
  zh: 算法检查 `F` 的任何元素的领导单项式不可整除的单项式集是否是有界的。
- en: References
  id: totrans-1326
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: David A. Cox, John B. Little, Donal O’Shea. Ideals, Varieties and Algorithms,
    3rd edition, p. 230
  id: totrans-1327
  prefs: []
  type: TYPE_NORMAL
  zh: David A. Cox, John B. Little, Donal O’Shea. Ideals, Varieties and Algorithms,
    第3版, p. 230
- en: '[PRE693]'
  id: totrans-1328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE693]'
- en: Reduces a polynomial modulo a Groebner basis.
  id: totrans-1329
  prefs: []
  type: TYPE_NORMAL
  zh: 将多项式模化为 Groebner 基的余数。
- en: Given a polynomial `f` and a set of polynomials `G = (g_1, ..., g_n)`, computes
    a set of quotients `q = (q_1, ..., q_n)` and the remainder `r` such that `f =
    q_1*f_1 + ... + q_n*f_n + r`, where `r` vanishes or `r` is a completely reduced
    polynomial with respect to `G`.
  id: totrans-1330
  prefs: []
  type: TYPE_NORMAL
  zh: 给定多项式 `f` 和一组多项式 `G = (g_1, ..., g_n)`，计算商集 `q = (q_1, ..., q_n)` 和余项 `r`，使得
    `f = q_1*f_1 + ... + q_n*f_n + r`，其中 `r` 为零或者相对于 `G` 完全约简的多项式。
- en: Examples
  id: totrans-1331
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE694]'
  id: totrans-1332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE694]'
- en: '[PRE695]'
  id: totrans-1333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE695]'
- en: '[PRE696]'
  id: totrans-1334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE696]'
- en: '[PRE697]'
  id: totrans-1335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE697]'
- en: Extra polynomial manipulation functions
  id: totrans-1336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外的多项式操作函数
- en: '[PRE698]'
  id: totrans-1337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE698]'
- en: Rewrite a polynomial in terms of elementary symmetric polynomials.
  id: totrans-1338
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个多项式重写为基本对称多项式的形式。
- en: A symmetric polynomial is a multivariate polynomial that remains invariant under
    any variable permutation, i.e., if \(f = f(x_1, x_2, \dots, x_n)\), then \(f =
    f(x_{i_1}, x_{i_2}, \dots, x_{i_n})\), where \((i_1, i_2, \dots, i_n)\) is a permutation
    of \((1, 2, \dots, n)\) (an element of the group \(S_n\)).
  id: totrans-1339
  prefs: []
  type: TYPE_NORMAL
  zh: 对称多项式是一个多元多项式，在任何变量置换下保持不变，即如果 \(f = f(x_1, x_2, \dots, x_n)\)，那么 \(f = f(x_{i_1},
    x_{i_2}, \dots, x_{i_n})\)，其中 \((i_1, i_2, \dots, i_n)\) 是 \((1, 2, \dots, n)\)
    的一个排列（即 \(S_n\) 群的一个元素）。
- en: Returns a tuple of symmetric polynomials `(f1, f2, ..., fn)` such that `f =
    f1 + f2 + ... + fn`.
  id: totrans-1340
  prefs: []
  type: TYPE_NORMAL
  zh: 返回对称多项式元组 `(f1, f2, ..., fn)`，使得 `f = f1 + f2 + ... + fn`。
- en: Examples
  id: totrans-1341
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE699]'
  id: totrans-1342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE699]'
- en: '[PRE700]'
  id: totrans-1343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE700]'
- en: '[PRE701]'
  id: totrans-1344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE701]'
- en: '[PRE702]'
  id: totrans-1345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE702]'
- en: '[PRE703]'
  id: totrans-1346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE703]'
- en: '[PRE704]'
  id: totrans-1347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE704]'
- en: Rewrite a polynomial in Horner form.
  id: totrans-1348
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个多项式重写为 Horner 形式。
- en: Among other applications, evaluation of a polynomial at a point is optimal when
    it is applied using the Horner scheme ([1]).
  id: totrans-1349
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他应用中，使用Horner方案([1])来在点处求多项式的值是最优的。
- en: Examples
  id: totrans-1350
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE705]'
  id: totrans-1351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE705]'
- en: '[PRE706]'
  id: totrans-1352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE706]'
- en: '[PRE707]'
  id: totrans-1353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE707]'
- en: '[PRE708]'
  id: totrans-1354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE708]'
- en: '[PRE709]'
  id: totrans-1355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE709]'
- en: '[PRE710]'
  id: totrans-1356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE710]'
- en: References
  id: totrans-1357
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[1] - [https://en.wikipedia.org/wiki/Horner_scheme](https://en.wikipedia.org/wiki/Horner_scheme)'
  id: totrans-1358
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] - [https://en.wikipedia.org/wiki/Horner_scheme](https://en.wikipedia.org/wiki/Horner_scheme)'
- en: '[PRE711]'
  id: totrans-1359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE711]'
- en: Construct an interpolating polynomial for the data points evaluated at point
    x (which can be symbolic or numeric).
  id: totrans-1360
  prefs: []
  type: TYPE_NORMAL
  zh: 为数据点在点x处插值多项式。
- en: Examples
  id: totrans-1361
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE712]'
  id: totrans-1362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE712]'
- en: 'A list is interpreted as though it were paired with a range starting from 1:'
  id: totrans-1363
  prefs: []
  type: TYPE_NORMAL
  zh: 列表被解释为与从1开始的范围配对：
- en: '[PRE713]'
  id: totrans-1364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE713]'
- en: 'This can be made explicit by giving a list of coordinates:'
  id: totrans-1365
  prefs: []
  type: TYPE_NORMAL
  zh: 通过提供坐标列表来明确表示：
- en: '[PRE714]'
  id: totrans-1366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE714]'
- en: 'The (x, y) coordinates can also be given as keys and values of a dictionary
    (and the points need not be equispaced):'
  id: totrans-1367
  prefs: []
  type: TYPE_NORMAL
  zh: (x, y)坐标也可以作为字典的键和值给出（且点不需要等间距）：
- en: '[PRE715]'
  id: totrans-1368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE715]'
- en: 'If the interpolation is going to be used only once then the value of interest
    can be passed instead of passing a symbol:'
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插值仅会被使用一次，那么可以传递感兴趣的值而不是传递符号：
- en: '[PRE716]'
  id: totrans-1370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE716]'
- en: 'Symbolic coordinates are also supported:'
  id: totrans-1371
  prefs: []
  type: TYPE_NORMAL
  zh: 符号坐标也受支持：
- en: '[PRE717]'
  id: totrans-1372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE717]'
- en: '[PRE718]'
  id: totrans-1373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE718]'
- en: Generate Viete’s formulas for `f`.
  id: totrans-1374
  prefs: []
  type: TYPE_NORMAL
  zh: 为`f`生成Vieta公式。
- en: Examples
  id: totrans-1375
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE719]'
  id: totrans-1376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE719]'
- en: '[PRE720]'
  id: totrans-1377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE720]'
- en: '[PRE721]'
  id: totrans-1378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE721]'
- en: Domain constructors
  id: totrans-1379
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 域构造器
- en: '[PRE722]'
  id: totrans-1380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE722]'
- en: Construct a minimal domain for a list of expressions.
  id: totrans-1381
  prefs: []
  type: TYPE_NORMAL
  zh: 构建表达式列表的最小域。
- en: 'Parameters:'
  id: totrans-1382
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**obj: list or dict**'
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
  zh: '**obj: 列表或字典**'
- en: The expressions to build a domain for.
  id: totrans-1384
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于构建域的表达式。
- en: '****args: keyword arguments**'
  id: totrans-1385
  prefs: []
  type: TYPE_NORMAL
  zh: '****args: 关键字参数**'
- en: Options that affect the choice of domain.
  id: totrans-1386
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 影响域选择的选项。
- en: 'Returns:'
  id: totrans-1387
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '(K, elements): Domain and list of domain elements'
  id: totrans-1388
  prefs: []
  type: TYPE_NORMAL
  zh: '(K, elements): 域及其域元素列表'
- en: The domain K that can represent the expressions and the list or dict of domain
    elements representing the same expressions as elements of K.
  id: totrans-1389
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 能表示表达式的域K，以及表示同一表达式为K元素的列表或字典。
- en: Explanation
  id: totrans-1390
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Given a list of normal SymPy expressions (of type [`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")) `construct_domain` will find a minimal [`Domain`](domainsref.html#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain") that can represent those expressions. The
    expressions will be converted to elements of the domain and both the domain and
    the domain elements are returned.
  id: totrans-1391
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一组正常的SymPy表达式（类型为[`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")），`construct_domain`将找到能表示这些表达式的最小[`Domain`](domainsref.html#sympy.polys.domains.domain.Domain
    "sympy.polys.domains.domain.Domain")。表达式将被转换为域的元素，并返回域和域元素。
- en: Examples
  id: totrans-1392
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Given a list of [`Integer`](../core.html#sympy.core.numbers.Integer "sympy.core.numbers.Integer")
    `construct_domain` will return the domain [ZZ](domainsref.html#zz) and a list
    of integers as elements of [ZZ](domainsref.html#zz).
  id: totrans-1393
  prefs: []
  type: TYPE_NORMAL
  zh: 给定[`Integer`](../core.html#sympy.core.numbers.Integer "sympy.core.numbers.Integer")列表`construct_domain`将返回域[ZZ](domainsref.html#zz)，以及作为[ZZ](domainsref.html#zz)元素的整数列表。
- en: '[PRE723]'
  id: totrans-1394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE723]'
- en: If there are any [`Rational`](../core.html#sympy.core.numbers.Rational "sympy.core.numbers.Rational")
    then [QQ](domainsref.html#qq) is returned instead.
  id: totrans-1395
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在[`Rational`](../core.html#sympy.core.numbers.Rational "sympy.core.numbers.Rational")，则返回[QQ](domainsref.html#qq)。
- en: '[PRE724]'
  id: totrans-1396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE724]'
- en: If there are symbols then a polynomial ring [K[x]](domainsref.html#k-x) is returned.
  id: totrans-1397
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在符号，则返回一个多项式环[K[x]](domainsref.html#k-x)。
- en: '[PRE725]'
  id: totrans-1398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE725]'
- en: If any symbols appear with negative powers then a rational function field [K(x)](domainsref.html#id11)
    will be returned.
  id: totrans-1399
  prefs: []
  type: TYPE_NORMAL
  zh: 如果任何符号具有负指数，则将返回一个有理函数域[K(x)](domainsref.html#id11)。
- en: '[PRE726]'
  id: totrans-1400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE726]'
- en: Irrational algebraic numbers will result in the [EX](domainsref.html#ex) domain
    by default. The keyword argument `extension=True` leads to the construction of
    an algebraic number field [QQ<a>](domainsref.html#qq-a).
  id: totrans-1401
  prefs: []
  type: TYPE_NORMAL
  zh: 无理数代数会默认返回[EX](domainsref.html#ex)域。关键字参数`extension=True`会导致构造代数数域[QQ<a>](domainsref.html#qq-a)。
- en: '[PRE727]'
  id: totrans-1402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE727]'
- en: See also
  id: totrans-1403
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`Domain`](domainsref.html#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain"),
    [`Expr`](../core.html#sympy.core.expr.Expr "sympy.core.expr.Expr")'
  id: totrans-1404
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Domain`](domainsref.html#sympy.polys.domains.domain.Domain "sympy.polys.domains.domain.Domain")，[`Expr`](../core.html#sympy.core.expr.Expr
    "sympy.core.expr.Expr")'
- en: Monomials encoded as tuples
  id: totrans-1405
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单项式编码为元组
- en: '[PRE728]'
  id: totrans-1406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE728]'
- en: Class representing a monomial, i.e. a product of powers.
  id: totrans-1407
  prefs: []
  type: TYPE_NORMAL
  zh: 表示单项式的类，即幂的乘积。
- en: '[PRE729]'
  id: totrans-1408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE729]'
- en: Convert a monomial instance to a SymPy expression.
  id: totrans-1409
  prefs: []
  type: TYPE_NORMAL
  zh: 将单项式实例转换为SymPy表达式。
- en: '[PRE730]'
  id: totrans-1410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE730]'
- en: Greatest common divisor of monomials.
  id: totrans-1411
  prefs: []
  type: TYPE_NORMAL
  zh: 单项式的最大公因子。
- en: '[PRE731]'
  id: totrans-1412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE731]'
- en: Least common multiple of monomials.
  id: totrans-1413
  prefs: []
  type: TYPE_NORMAL
  zh: 单项式的最小公倍数。
- en: '[PRE732]'
  id: totrans-1414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE732]'
- en: '`max_degrees` and `min_degrees` are either both integers or both lists. Unless
    otherwise specified, `min_degrees` is either `0` or `[0, ..., 0]`.'
  id: totrans-1415
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_degrees` 和 `min_degrees` 都是整数或列表。除非另有说明，否则 `min_degrees` 要么是 `0` 要么是 `[0,
    ..., 0]`。'
- en: A generator of all monomials `monom` is returned, such that either `min_degree
    <= total_degree(monom) <= max_degree`, or `min_degrees[i] <= degree_list(monom)[i]
    <= max_degrees[i]`, for all `i`.
  id: totrans-1416
  prefs: []
  type: TYPE_NORMAL
  zh: 返回所有单项式 `monom` 的生成器，使得 `min_degree <= total_degree(monom) <= max_degree`，或对于所有
    `i`，`min_degrees[i] <= degree_list(monom)[i] <= max_degrees[i]`。
- en: Case I. `max_degrees` And `min_degrees` Are Both Integers
  id: totrans-1417
  prefs: []
  type: TYPE_NORMAL
  zh: 情况 I. `max_degrees` 和 `min_degrees` 都是整数
- en: 'Given a set of variables \(V\) and a min_degree \(N\) and a max_degree \(M\)
    generate a set of monomials of degree less than or equal to \(N\) and greater
    than or equal to \(M\). The total number of monomials in commutative variables
    is huge and is given by the following formula if \(M = 0\):'
  id: totrans-1418
  prefs: []
  type: TYPE_NORMAL
  zh: 给定变量集合 \(V\) 和最小次数 \(N\) 以及最大次数 \(M\)，生成次数小于等于 \(N\) 且大于等于 \(M\) 的单项式集合。在可交换变量的情况下，单项式的总数巨大，并由以下公式给出，如果
    \(M = 0\)：
- en: \[\frac{(\#V + N)!}{\#V! N!}\]
  id: totrans-1419
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \[\frac{(\#V + N)!}{\#V! N!}\]
- en: For example if we would like to generate a dense polynomial of a total degree
    \(N = 50\) and \(M = 0\), which is the worst case, in 5 variables, assuming that
    exponents and all of coefficients are 32-bit long and stored in an array we would
    need almost 80 GiB of memory! Fortunately most polynomials, that we will encounter,
    are sparse.
  id: totrans-1420
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们想生成一个总次数为 \(N = 50\)，\(M = 0\) 的密集多项式，这是最坏的情况，在5个变量中，假设指数和所有系数都是32位长，并存储在一个数组中，我们将需要接近80
    GiB 的内存！幸运的是，我们将遇到的大多数多项式都是稀疏的。
- en: 'Consider monomials in commutative variables \(x\) and \(y\) and non-commutative
    variables \(a\) and \(b\):'
  id: totrans-1421
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑在可交换变量 \(x\) 和 \(y\) 中以及非交换变量 \(a\) 和 \(b\) 中的单项式：
- en: '[PRE733]'
  id: totrans-1422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE733]'
- en: Case Ii. `max_degrees` And `min_degrees` Are Both Lists
  id: totrans-1423
  prefs: []
  type: TYPE_NORMAL
  zh: 情况 II. `max_degrees` 和 `min_degrees` 都是列表
- en: 'If `max_degrees = [d_1, ..., d_n]` and `min_degrees = [e_1, ..., e_n]`, the
    number of monomials generated is:'
  id: totrans-1424
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `max_degrees = [d_1, ..., d_n]` 和 `min_degrees = [e_1, ..., e_n]`，生成的单项式数量为：
- en: \[(d_1 - e_1 + 1) (d_2 - e_2 + 1) \cdots (d_n - e_n + 1)\]
  id: totrans-1425
  prefs: []
  type: TYPE_NORMAL
  zh: \[(d_1 - e_1 + 1) (d_2 - e_2 + 1) \cdots (d_n - e_n + 1)\]
- en: Let us generate all monomials `monom` in variables \(x\) and \(y\) such that
    `[1, 2][i] <= degree_list(monom)[i] <= [2, 4][i]`, `i = 0, 1`
  id: totrans-1426
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们生成所有变量为 \(x\) 和 \(y\) 的单项式 `monom`，使得 `[1, 2][i] <= degree_list(monom)[i]
    <= [2, 4][i]`，其中 `i = 0, 1`
- en: '[PRE734]'
  id: totrans-1427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE734]'
- en: '[PRE735]'
  id: totrans-1428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE735]'
- en: Computes the number of monomials.
  id: totrans-1429
  prefs: []
  type: TYPE_NORMAL
  zh: 计算单项式的数量。
- en: 'The number of monomials is given by the following formula:'
  id: totrans-1430
  prefs: []
  type: TYPE_NORMAL
  zh: 单项式的数量由以下公式给出：
- en: \[\frac{(\#V + N)!}{\#V! N!}\]
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{(\#V + N)!}{\#V! N!}\]
- en: where \(N\) is a total degree and \(V\) is a set of variables.
  id: totrans-1432
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(N\) 是总次数，\(V\) 是变量集合。
- en: Examples
  id: totrans-1433
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE736]'
  id: totrans-1434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE736]'
- en: '[PRE737]'
  id: totrans-1435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE737]'
- en: '[PRE738]'
  id: totrans-1436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE738]'
- en: '[PRE739]'
  id: totrans-1437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE739]'
- en: Orderings of monomials
  id: totrans-1438
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单项式的排列顺序
- en: '[PRE740]'
  id: totrans-1439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE740]'
- en: Base class for monomial orderings.
  id: totrans-1440
  prefs: []
  type: TYPE_NORMAL
  zh: 单项式排序的基类。
- en: '[PRE741]'
  id: totrans-1441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE741]'
- en: Lexicographic order of monomials.
  id: totrans-1442
  prefs: []
  type: TYPE_NORMAL
  zh: 单项式的词典序。
- en: '[PRE742]'
  id: totrans-1443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE742]'
- en: Graded lexicographic order of monomials.
  id: totrans-1444
  prefs: []
  type: TYPE_NORMAL
  zh: 单项式的分级字典序。
- en: '[PRE743]'
  id: totrans-1445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE743]'
- en: Reversed graded lexicographic order of monomials.
  id: totrans-1446
  prefs: []
  type: TYPE_NORMAL
  zh: 单项式的逆分级字典序。
- en: Formal manipulation of roots of polynomials
  id: totrans-1447
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多项式根的形式推导
- en: '[PRE744]'
  id: totrans-1448
  prefs: []
  type: TYPE_PRE
  zh: '[PRE744]'
- en: An indexed root of a univariate polynomial.
  id: totrans-1449
  prefs: []
  type: TYPE_NORMAL
  zh: 一元多项式的索引根。
- en: Returns either a [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf")
    object or an explicit expression involving radicals.
  id: totrans-1450
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个 [`ComplexRootOf`](#sympy.polys.rootoftools.ComplexRootOf "sympy.polys.rootoftools.ComplexRootOf")
    对象或涉及根式的显式表达式。
- en: 'Parameters:'
  id: totrans-1451
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**f** : Expr'
  id: totrans-1452
  prefs: []
  type: TYPE_NORMAL
  zh: '**f** : 表达式'
- en: Univariate polynomial.
  id: totrans-1453
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一元多项式。
- en: '**x** : Symbol, optional'
  id: totrans-1454
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** : 符号，可选'
- en: Generator for `f`.
  id: totrans-1455
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 生成 `f` 的生成器。
- en: '**index** : int or Integer'
  id: totrans-1456
  prefs: []
  type: TYPE_NORMAL
  zh: '**index** : int 或 Integer'
- en: '**radicals** : bool'
  id: totrans-1457
  prefs: []
  type: TYPE_NORMAL
  zh: '**radicals** : bool'
- en: Return a radical expression if possible.
  id: totrans-1458
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果可能，返回一个根式表达式。
- en: '**expand** : bool'
  id: totrans-1459
  prefs: []
  type: TYPE_NORMAL
  zh: '**expand** : bool'
- en: Expand `f`.
  id: totrans-1460
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 展开 `f`。
- en: '[PRE745]'
  id: totrans-1461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE745]'
- en: Represents a root of a univariate polynomial.
  id: totrans-1462
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一元多项式的根。
- en: Base class for roots of different kinds of polynomials. Only complex roots are
    currently supported.
  id: totrans-1463
  prefs: []
  type: TYPE_NORMAL
  zh: 不同类型多项式根的基类。目前仅支持复数根。
- en: '[PRE746]'
  id: totrans-1464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE746]'
- en: Represents an indexed complex root of a polynomial.
  id: totrans-1465
  prefs: []
  type: TYPE_NORMAL
  zh: 表示多项式的索引复数根。
- en: 'Roots of a univariate polynomial separated into disjoint real or complex intervals
    and indexed in a fixed order:'
  id: totrans-1466
  prefs: []
  type: TYPE_NORMAL
  zh: 将一元多项式的根分离成不相交的实数或复数区间，并按固定顺序进行索引：
- en: real roots come first and are sorted in increasing order;
  id: totrans-1467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实根先来，按增加顺序排序；
- en: complex roots come next and are sorted primarily by increasing real part, secondarily
    by increasing imaginary part.
  id: totrans-1468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复数根接下来，并按照增加的实部和次要地按增加的虚部排序。
- en: Currently only rational coefficients are allowed. Can be imported as `CRootOf`.
    To avoid confusion, the generator must be a Symbol.
  id: totrans-1469
  prefs: []
  type: TYPE_NORMAL
  zh: 目前只允许有理系数。可以导入为 `CRootOf`。为了避免混淆，生成器必须是一个符号。
- en: Examples
  id: totrans-1470
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE747]'
  id: totrans-1471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE747]'
- en: 'CRootOf is a way to reference a particular root of a polynomial. If there is
    a rational root, it will be returned:'
  id: totrans-1472
  prefs: []
  type: TYPE_NORMAL
  zh: CRootOf是引用多项式特定根的一种方式。如果有有理根，则将返回它：
- en: '[PRE748]'
  id: totrans-1473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE748]'
- en: 'Whether roots involving radicals are returned or not depends on whether the
    `radicals` flag is true (which is set to True with rootof):'
  id: totrans-1474
  prefs: []
  type: TYPE_NORMAL
  zh: 是否返回涉及根式的根取决于`radicals`标志是否为真（在`rootof`中设为True）：
- en: '[PRE749]'
  id: totrans-1475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE749]'
- en: 'The following cannot be expressed in terms of radicals:'
  id: totrans-1476
  prefs: []
  type: TYPE_NORMAL
  zh: 以下不能用根式表达：
- en: '[PRE750]'
  id: totrans-1477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE750]'
- en: The root bounds can be seen, however, and they are used by the evaluation methods
    to get numerical approximations for the root.
  id: totrans-1478
  prefs: []
  type: TYPE_NORMAL
  zh: 可见根边界，它们被评估方法用于获取根的数值近似。
- en: '[PRE751]'
  id: totrans-1479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE751]'
- en: The evalf method refines the width of the root bounds until it guarantees that
    any decimal approximation within those bounds will satisfy the desired precision.
    It then stores the refined interval so subsequent requests at or below the requested
    precision will not have to recompute the root bounds and will return very quickly.
  id: totrans-1480
  prefs: []
  type: TYPE_NORMAL
  zh: '`evalf`方法会细化根的边界宽度，直到保证这些边界内的任何小数近似都满足所需的精度。然后，它会存储细化后的区间，因此在请求的精度范围内，后续请求不必重新计算根的边界，会非常快速地返回。'
- en: Before evaluation above, the interval was
  id: totrans-1481
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述评估之前，区间是
- en: '[PRE752]'
  id: totrans-1482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE752]'
- en: After evaluation it is now
  id: totrans-1483
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估之后，现在是
- en: '[PRE753]'
  id: totrans-1484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE753]'
- en: 'To reset all intervals for a given polynomial, the [`_reset()`](#sympy.polys.rootoftools.ComplexRootOf._reset
    "sympy.polys.rootoftools.ComplexRootOf._reset") method can be called from any
    CRootOf instance of the polynomial:'
  id: totrans-1485
  prefs: []
  type: TYPE_NORMAL
  zh: 要重置给定多项式的所有区间，可以从多项式的任何CRootOf实例调用[`_reset()`](#sympy.polys.rootoftools.ComplexRootOf._reset
    "sympy.polys.rootoftools.ComplexRootOf._reset")方法：
- en: '[PRE754]'
  id: totrans-1486
  prefs: []
  type: TYPE_PRE
  zh: '[PRE754]'
- en: The [`eval_approx()`](#sympy.polys.rootoftools.ComplexRootOf.eval_approx "sympy.polys.rootoftools.ComplexRootOf.eval_approx")
    method will also find the root to a given precision but the interval is not modified
    unless the search for the root fails to converge within the root bounds. And the
    secant method is used to find the root. (The `evalf` method uses bisection and
    will always update the interval.)
  id: totrans-1487
  prefs: []
  type: TYPE_NORMAL
  zh: '[`eval_approx()`](#sympy.polys.rootoftools.ComplexRootOf.eval_approx "sympy.polys.rootoftools.ComplexRootOf.eval_approx")方法也会按所需精度找到根，但除非在根边界内搜索失败以收敛，否则不会修改区间。使用弦割法找到根。（`evalf`方法使用二分法，并始终更新区间。）'
- en: '[PRE755]'
  id: totrans-1488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE755]'
- en: 'The interval needed to be slightly updated to find that root:'
  id: totrans-1489
  prefs: []
  type: TYPE_NORMAL
  zh: 需要稍微更新区间以找到该根：
- en: '[PRE756]'
  id: totrans-1490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE756]'
- en: The `evalf_rational` will compute a rational approximation of the root to the
    desired accuracy or precision.
  id: totrans-1491
  prefs: []
  type: TYPE_NORMAL
  zh: '`evalf_rational`会计算根的有理近似，以达到所需的准确度或精度。'
- en: '[PRE757]'
  id: totrans-1492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE757]'
- en: '[PRE758]'
  id: totrans-1493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE758]'
- en: Notes
  id: totrans-1494
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Although a PurePoly can be constructed from a non-symbol generator RootOf instances
    of non-symbols are disallowed to avoid confusion over what root is being represented.
  id: totrans-1495
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然可以从非符号生成器RootOf实例构造PurePoly，但不允许使用非符号来避免对所表示的根的混淆。
- en: '[PRE759]'
  id: totrans-1496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE759]'
- en: See also
  id: totrans-1497
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`eval_approx`](#sympy.polys.rootoftools.ComplexRootOf.eval_approx "sympy.polys.rootoftools.ComplexRootOf.eval_approx"),
    [`eval_rational`](#sympy.polys.rootoftools.ComplexRootOf.eval_rational "sympy.polys.rootoftools.ComplexRootOf.eval_rational")'
  id: totrans-1498
  prefs: []
  type: TYPE_NORMAL
  zh: '[`eval_approx`](#sympy.polys.rootoftools.ComplexRootOf.eval_approx "sympy.polys.rootoftools.ComplexRootOf.eval_approx")，[`eval_rational`](#sympy.polys.rootoftools.ComplexRootOf.eval_rational
    "sympy.polys.rootoftools.ComplexRootOf.eval_rational")'
- en: '[PRE760]'
  id: totrans-1499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE760]'
- en: Get real and complex roots of a composite polynomial.
  id: totrans-1500
  prefs: []
  type: TYPE_NORMAL
  zh: 获取复合多项式的实根和复根。
- en: '[PRE761]'
  id: totrans-1501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE761]'
- en: Map initial complex root index to an index in a factor where the root belongs.
  id: totrans-1502
  prefs: []
  type: TYPE_NORMAL
  zh: 将初始复根索引映射到根所属因子中的索引。
- en: '[PRE762]'
  id: totrans-1503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE762]'
- en: Make complex isolating intervals disjoint and sort roots.
  id: totrans-1504
  prefs: []
  type: TYPE_NORMAL
  zh: 使复数隔离区间不相交并排序根。
- en: '[PRE763]'
  id: totrans-1505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE763]'
- en: Count the number of real or complex roots with multiplicities.
  id: totrans-1506
  prefs: []
  type: TYPE_NORMAL
  zh: 计算具有重数的实根或复根的数量。
- en: '[PRE764]'
  id: totrans-1507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE764]'
- en: Ensure that our poly has entries in the complexes cache.
  id: totrans-1508
  prefs: []
  type: TYPE_NORMAL
  zh: 确保我们的多项式在复数缓存中有条目。
- en: '[PRE765]'
  id: totrans-1509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE765]'
- en: Ensure that our poly has entries in the reals cache.
  id: totrans-1510
  prefs: []
  type: TYPE_NORMAL
  zh: 确保我们的多项式在实数缓存中有条目。
- en: '[PRE766]'
  id: totrans-1511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE766]'
- en: Evaluate this complex root to the given precision.
  id: totrans-1512
  prefs: []
  type: TYPE_NORMAL
  zh: 对给定精度评估此复根。
- en: '[PRE767]'
  id: totrans-1513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE767]'
- en: Return `True` if the root is imaginary.
  id: totrans-1514
  prefs: []
  type: TYPE_NORMAL
  zh: 如果根是虚数则返回`True`。
- en: '[PRE768]'
  id: totrans-1515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE768]'
- en: Return `True` if the root is real.
  id: totrans-1516
  prefs: []
  type: TYPE_NORMAL
  zh: 如果根是实数则返回`True`。
- en: '[PRE769]'
  id: totrans-1517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE769]'
- en: Compute complex root isolating intervals for a list of factors.
  id: totrans-1518
  prefs: []
  type: TYPE_NORMAL
  zh: 为一组因子计算复数根隔离区间。
- en: '[PRE770]'
  id: totrans-1519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE770]'
- en: Get complex root isolating intervals for a square-free factor.
  id: totrans-1520
  prefs: []
  type: TYPE_NORMAL
  zh: 获取一个无平方因子的复数根隔离区间。
- en: '[PRE771]'
  id: totrans-1521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE771]'
- en: Internal function for retrieving isolation interval from cache.
  id: totrans-1522
  prefs: []
  type: TYPE_NORMAL
  zh: 从缓存中检索隔离区间的内部函数。
- en: '[PRE772]'
  id: totrans-1523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE772]'
- en: Compute real root isolating intervals for a list of factors.
  id: totrans-1524
  prefs: []
  type: TYPE_NORMAL
  zh: 为一组因子计算实根隔离区间。
- en: '[PRE773]'
  id: totrans-1525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE773]'
- en: Get real root isolating intervals for a square-free factor.
  id: totrans-1526
  prefs: []
  type: TYPE_NORMAL
  zh: 获取一个无平方因子的实根隔离区间。
- en: '[PRE774]'
  id: totrans-1527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE774]'
- en: Return postprocessed roots of specified kind.
  id: totrans-1528
  prefs: []
  type: TYPE_NORMAL
  zh: 返回指定类型的后处理根。
- en: '[PRE775]'
  id: totrans-1529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE775]'
- en: Get a root of a composite polynomial by index.
  id: totrans-1530
  prefs: []
  type: TYPE_NORMAL
  zh: 按索引获取复合多项式的一个根。
- en: '[PRE776]'
  id: totrans-1531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE776]'
- en: Construct new `CRootOf` object from raw data.
  id: totrans-1532
  prefs: []
  type: TYPE_NORMAL
  zh: 从原始数据构造新的`CRootOf`对象。
- en: '[PRE777]'
  id: totrans-1533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE777]'
- en: Return the root if it is trivial or a `CRootOf` object.
  id: totrans-1534
  prefs: []
  type: TYPE_NORMAL
  zh: 如果根是微不足道的或者是`CRootOf`对象，则返回根。
- en: '[PRE778]'
  id: totrans-1535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE778]'
- en: Take heroic measures to make `poly` compatible with `CRootOf`.
  id: totrans-1536
  prefs: []
  type: TYPE_NORMAL
  zh: 采取英雄般的措施使`poly`与`CRootOf`兼容。
- en: '[PRE779]'
  id: totrans-1537
  prefs: []
  type: TYPE_PRE
  zh: '[PRE779]'
- en: Get real roots of a composite polynomial.
  id: totrans-1538
  prefs: []
  type: TYPE_NORMAL
  zh: 获取复合多项式的实根。
- en: '[PRE780]'
  id: totrans-1539
  prefs: []
  type: TYPE_PRE
  zh: '[PRE780]'
- en: Map initial real root index to an index in a factor where the root belongs.
  id: totrans-1540
  prefs: []
  type: TYPE_NORMAL
  zh: 将初始实根索引映射到根所属因子的索引。
- en: '[PRE781]'
  id: totrans-1541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE781]'
- en: Make real isolating intervals disjoint and sort roots.
  id: totrans-1542
  prefs: []
  type: TYPE_NORMAL
  zh: 使实数隔离区间不重叠并排序根。
- en: '[PRE782]'
  id: totrans-1543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE782]'
- en: return complexes such that no bounding rectangles of non-conjugate roots would
    intersect. In addition, assure that neither ay nor by is 0 to guarantee that non-real
    roots are distinct from real roots in terms of the y-bounds.
  id: totrans-1544
  prefs: []
  type: TYPE_NORMAL
  zh: 返回复数，使非共轭根的包围矩形不相交。此外，确保ay和by都不为0，以确保非实根在y边界上与实根有所不同。
- en: '[PRE783]'
  id: totrans-1545
  prefs: []
  type: TYPE_PRE
  zh: '[PRE783]'
- en: Reset all intervals
  id: totrans-1546
  prefs: []
  type: TYPE_NORMAL
  zh: 重置所有区间
- en: '[PRE784]'
  id: totrans-1547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE784]'
- en: Compute roots in linear, quadratic and binomial cases.
  id: totrans-1548
  prefs: []
  type: TYPE_NORMAL
  zh: 在线性、二次和二项情况下计算根。
- en: '[PRE785]'
  id: totrans-1549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE785]'
- en: Internal function for updating isolation interval in cache.
  id: totrans-1550
  prefs: []
  type: TYPE_NORMAL
  zh: 更新缓存中隔离区间的内部函数。
- en: '[PRE786]'
  id: totrans-1551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE786]'
- en: Get real and complex roots of a polynomial.
  id: totrans-1552
  prefs: []
  type: TYPE_NORMAL
  zh: 获取多项式的实根和复根。
- en: '[PRE787]'
  id: totrans-1553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE787]'
- en: Reset cache for reals and complexes.
  id: totrans-1554
  prefs: []
  type: TYPE_NORMAL
  zh: 重置实数和复数的缓存。
- en: The intervals used to approximate a root instance are updated as needed. When
    a request is made to see the intervals, the most current values are shown. \(clear_cache\)
    will reset all CRootOf instances back to their original state.
  id: totrans-1555
  prefs: []
  type: TYPE_NORMAL
  zh: 用于近似根实例的区间根据需要进行更新。当请求查看区间时，显示最新的值。\(clear_cache\)将所有`CRootOf`实例重置为其原始状态。
- en: See also
  id: totrans-1556
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`_reset`](#sympy.polys.rootoftools.ComplexRootOf._reset "sympy.polys.rootoftools.ComplexRootOf._reset")'
  id: totrans-1557
  prefs: []
  type: TYPE_NORMAL
  zh: '[`_reset`](#sympy.polys.rootoftools.ComplexRootOf._reset "sympy.polys.rootoftools.ComplexRootOf._reset")'
- en: '[PRE788]'
  id: totrans-1558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE788]'
- en: Evaluate this complex root to the given precision.
  id: totrans-1559
  prefs: []
  type: TYPE_NORMAL
  zh: 对给定精度评估此复根。
- en: This uses secant method and root bounds are used to both generate an initial
    guess and to check that the root returned is valid. If ever the method converges
    outside the root bounds, the bounds will be made smaller and updated.
  id: totrans-1560
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法使用割线法，根边界用于生成初始猜测并检查返回的根是否有效。如果方法在根边界外收敛，边界将变小并更新。
- en: '[PRE789]'
  id: totrans-1561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE789]'
- en: Return a Rational approximation of `self` that has real and imaginary component
    approximations that are within `dx` and `dy` of the true values, respectively.
    Alternatively, `n` digits of precision can be specified.
  id: totrans-1562
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`self`的有理数近似，其实部和虚部近似值分别在`dx`和`dy`内。或者，可以指定`n`位精度。
- en: The interval is refined with bisection and is sure to converge. The root bounds
    are updated when the refinement is complete so recalculation at the same or lesser
    precision will not have to repeat the refinement and should be much faster.
  id: totrans-1563
  prefs: []
  type: TYPE_NORMAL
  zh: 通过二分法细化区间，并确保收敛。当细化完成时更新根的边界，因此在相同或更低的精度下重新计算不需要重复细化，应该会快得多。
- en: 'The following example first obtains Rational approximation to 1e-8 accuracy
    for all roots of the 4-th order Legendre polynomial. Since the roots are all less
    than 1, this will ensure the decimal representation of the approximation will
    be correct (including rounding) to 6 digits:'
  id: totrans-1564
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例首先获得4阶Legendre多项式所有根的1e-8精度的有理数近似。由于所有根都小于1，这将确保近似的十进制表示（包括四舍五入）正确到6位小数：
- en: '[PRE790]'
  id: totrans-1565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE790]'
- en: 'It is not necessary to a two-step calculation, however: the decimal representation
    can be computed directly:'
  id: totrans-1566
  prefs: []
  type: TYPE_NORMAL
  zh: 不必进行两步计算，然而：可以直接计算十进制表示：
- en: '[PRE791]'
  id: totrans-1567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE791]'
- en: '[PRE792]'
  id: totrans-1568
  prefs: []
  type: TYPE_PRE
  zh: '[PRE792]'
- en: Get real roots of a polynomial.
  id: totrans-1569
  prefs: []
  type: TYPE_NORMAL
  zh: 获取多项式的实根。
- en: '[PRE793]'
  id: totrans-1570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE793]'
- en: Represents a sum of all roots of a univariate polynomial.
  id: totrans-1571
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一元多项式所有根的和。
- en: '[PRE794]'
  id: totrans-1572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE794]'
- en: Construct new `RootSum` instance.
  id: totrans-1573
  prefs: []
  type: TYPE_NORMAL
  zh: 构造新的`RootSum`实例。
- en: Symbolic root-finding algorithms
  id: totrans-1574
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 符号根查找算法
- en: '[PRE795]'
  id: totrans-1575
  prefs: []
  type: TYPE_PRE
  zh: '[PRE795]'
- en: Computes symbolic roots of a univariate polynomial.
  id: totrans-1576
  prefs: []
  type: TYPE_NORMAL
  zh: 计算一元多项式的符号根。
- en: Given a univariate polynomial f with symbolic coefficients (or a list of the
    polynomial’s coefficients), returns a dictionary with its roots and their multiplicities.
  id: totrans-1577
  prefs: []
  type: TYPE_NORMAL
  zh: 给定具有符号系数的一元多项式f（或多项式系数的列表），返回包含其根及其重数的字典。
- en: Only roots expressible via radicals will be returned. To get a complete set
    of roots use RootOf class or numerical methods instead. By default cubic and quartic
    formulas are used in the algorithm. To disable them because of unreadable output
    set `cubics=False` or `quartics=False` respectively. If cubic roots are real but
    are expressed in terms of complex numbers (casus irreducibilis [1]) the `trig`
    flag can be set to True to have the solutions returned in terms of cosine and
    inverse cosine functions.
  id: totrans-1578
  prefs: []
  type: TYPE_NORMAL
  zh: 只有可以用根式表达的根将被返回。要获得完整的根集，请改用RootOf类或数值方法。默认情况下，算法中使用三次和四次公式。要禁用它们以避免不可读的输出，请设置`cubics=False`或`quartics=False`。如果三次根是实数但表达为复数形式（casus
    irreducibilis [1]），则可以将`trig`标志设置为True，以便将解以余弦和反余弦函数的形式返回。
- en: 'To get roots from a specific domain set the `filter` flag with one of the following
    specifiers: Z, Q, R, I, C. By default all roots are returned (this is equivalent
    to setting `filter=''C''`).'
  id: totrans-1579
  prefs: []
  type: TYPE_NORMAL
  zh: 要从特定域获取根，使用`filter`标志并设置以下其中之一的说明符：Z，Q，R，I，C。默认情况下返回所有根（相当于设置`filter='C'`）。
- en: By default a dictionary is returned giving a compact result in case of multiple
    roots. However to get a list containing all those roots set the `multiple` flag
    to True; the list will have identical roots appearing next to each other in the
    result. (For a given Poly, the all_roots method will give the roots in sorted
    numerical order.)
  id: totrans-1580
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，返回一个字典，给出多根的紧凑结果。但是，要获取包含所有这些根的列表，请将`multiple`标志设置为True；该列表将在结果中相同的根旁边出现。（对于给定的Poly，all_roots方法将以排序的数值顺序给出根。）
- en: If the `strict` flag is True, `UnsolvableFactorError` will be raised if the
    roots found are known to be incomplete (because some roots are not expressible
    in radicals).
  id: totrans-1581
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`strict`标志为True，则如果找到的根已知不完整（因为某些根无法用根式表达），将引发`UnsolvableFactorError`。
- en: Examples
  id: totrans-1582
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE796]'
  id: totrans-1583
  prefs: []
  type: TYPE_PRE
  zh: '[PRE796]'
- en: '[PRE797]'
  id: totrans-1584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE797]'
- en: '[PRE798]'
  id: totrans-1585
  prefs: []
  type: TYPE_PRE
  zh: '[PRE798]'
- en: '[PRE799]'
  id: totrans-1586
  prefs: []
  type: TYPE_PRE
  zh: '[PRE799]'
- en: '[PRE800]'
  id: totrans-1587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE800]'
- en: '[PRE801]'
  id: totrans-1588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE801]'
- en: '[PRE802]'
  id: totrans-1589
  prefs: []
  type: TYPE_PRE
  zh: '[PRE802]'
- en: '`roots` will only return roots expressible in radicals. If the given polynomial
    has some or all of its roots inexpressible in radicals, the result of `roots`
    will be incomplete or empty respectively.'
  id: totrans-1590
  prefs: []
  type: TYPE_NORMAL
  zh: '`roots`只会返回可以用根式表达的根。如果给定的多项式有部分或全部根不能用根式表达，则`roots`的结果将分别是不完整或空的。'
- en: 'Example where result is incomplete:'
  id: totrans-1591
  prefs: []
  type: TYPE_NORMAL
  zh: 结果不完整的示例：
- en: '[PRE803]'
  id: totrans-1592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE803]'
- en: In this case, the polynomial has an unsolvable quintic factor whose roots cannot
    be expressed by radicals. The polynomial has a rational root (due to the factor
    \((x-1)\)), which is returned since `roots` always finds all rational roots.
  id: totrans-1593
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，多项式有一个无法解决的五次因子，其根无法用根式表达。由于总是能找到所有有理根，因此返回了一个有理根（因为因子\((x-1)\)），该根由`roots`返回。
- en: 'Example where result is empty:'
  id: totrans-1594
  prefs: []
  type: TYPE_NORMAL
  zh: 结果为空的示例：
- en: '[PRE804]'
  id: totrans-1595
  prefs: []
  type: TYPE_PRE
  zh: '[PRE804]'
- en: Here, the polynomial has no roots expressible in radicals, so `roots` returns
    an empty dictionary.
  id: totrans-1596
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，多项式没有可以用根式表达的根，因此`roots`返回一个空字典。
- en: The result produced by `roots` is complete if and only if the sum of the multiplicity
    of each root is equal to the degree of the polynomial. If strict=True, UnsolvableFactorError
    will be raised if the result is incomplete.
  id: totrans-1597
  prefs: []
  type: TYPE_NORMAL
  zh: 函数`roots`的结果仅当每个根的重数之和等于多项式的次数时才是完整的。如果`strict=True`，则如果结果不完整，将引发`UnsolvableFactorError`。
- en: 'The result can be be checked for completeness as follows:'
  id: totrans-1598
  prefs: []
  type: TYPE_NORMAL
  zh: 结果可以通过以下方式检查完整性：
- en: '[PRE805]'
  id: totrans-1599
  prefs: []
  type: TYPE_PRE
  zh: '[PRE805]'
- en: References
  id: totrans-1600
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R811](#id27)]'
  id: totrans-1601
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R811](#id27)]'
- en: '[https://en.wikipedia.org/wiki/Cubic_equation#Trigonometric_and_hyperbolic_solutions](https://en.wikipedia.org/wiki/Cubic_equation#Trigonometric_and_hyperbolic_solutions)'
  id: totrans-1602
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Cubic_equation#Trigonometric_and_hyperbolic_solutions](https://en.wikipedia.org/wiki/Cubic_equation#Trigonometric_and_hyperbolic_solutions)'
- en: Special polynomials
  id: totrans-1603
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特殊多项式
- en: '[PRE806]'
  id: totrans-1604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE806]'
- en: Generates n-th Swinnerton-Dyer polynomial in \(x\).
  id: totrans-1605
  prefs: []
  type: TYPE_NORMAL
  zh: 生成\(x\)的第\(n\)个Swinnerton-Dyer多项式。
- en: 'Parameters:'
  id: totrans-1606
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1607
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: \(n\) decides the order of polynomial
  id: totrans-1608
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(n\)决定多项式的阶数
- en: '**x** : optional'
  id: totrans-1609
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1610
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: '`polys=True` returns an expression, otherwise (default) returns an expression.'
  id: totrans-1611
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`polys=True`返回一个表达式，否则（默认）返回一个表达式。'
- en: '[PRE807]'
  id: totrans-1612
  prefs: []
  type: TYPE_PRE
  zh: '[PRE807]'
- en: Construct Lagrange interpolating polynomial for `n` data points. If a sequence
    of values are given for `X` and `Y` then the first `n` values will be used.
  id: totrans-1613
  prefs: []
  type: TYPE_NORMAL
  zh: 构造拉格朗日插值多项式以适应`n`个数据点。如果为`X`和`Y`给出了一系列值，则将使用前`n`个值。
- en: '[PRE808]'
  id: totrans-1614
  prefs: []
  type: TYPE_PRE
  zh: '[PRE808]'
- en: Generates cyclotomic polynomial of order \(n\) in \(x\).
  id: totrans-1615
  prefs: []
  type: TYPE_NORMAL
  zh: 生成\(x\)的阶为\(n\)的旋轮多项式。
- en: 'Parameters:'
  id: totrans-1616
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1617
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: \(n\) decides the order of polynomial
  id: totrans-1618
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(n\)决定多项式的阶数
- en: '**x** : optional'
  id: totrans-1619
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1620
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: '`polys=True` returns an expression, otherwise (default) returns an expression.'
  id: totrans-1621
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`polys=True`返回一个表达式，否则（默认）返回一个表达式。'
- en: '[PRE809]'
  id: totrans-1622
  prefs: []
  type: TYPE_PRE
  zh: '[PRE809]'
- en: Generates symmetric polynomial of order \(n\).
  id: totrans-1623
  prefs: []
  type: TYPE_NORMAL
  zh: 生成阶为\(n\)的对称多项式。
- en: 'Parameters:'
  id: totrans-1624
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**polys: bool, optional (default: False)**'
  id: totrans-1625
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys: bool, optional (default: False)**'
- en: Returns a Poly object when `polys=True`, otherwise (default) returns an expression.
  id: totrans-1626
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当`polys=True`时返回一个多项式对象，否则（默认）返回一个表达式。
- en: '[PRE810]'
  id: totrans-1627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE810]'
- en: Generates a polynomial of degree `n` with coefficients in `[inf, sup]`.
  id: totrans-1628
  prefs: []
  type: TYPE_NORMAL
  zh: 生成一个系数在`[inf, sup]`内的阶数为`n`的多项式。
- en: 'Parameters:'
  id: totrans-1629
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**'
  id: totrans-1630
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**'
- en: \(x\) is the independent term of polynomial
  id: totrans-1631
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(x\)是多项式的独立项
- en: '**n** : int'
  id: totrans-1632
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: \(n\) decides the order of polynomial
  id: totrans-1633
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(n\)决定多项式的阶数
- en: '**inf**'
  id: totrans-1634
  prefs: []
  type: TYPE_NORMAL
  zh: '**inf**'
- en: Lower limit of range in which coefficients lie
  id: totrans-1635
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系数所在范围的下限
- en: '**sup**'
  id: totrans-1636
  prefs: []
  type: TYPE_NORMAL
  zh: '**sup**'
- en: Upper limit of range in which coefficients lie
  id: totrans-1637
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系数所在范围的上限
- en: '**domain** : optional'
  id: totrans-1638
  prefs: []
  type: TYPE_NORMAL
  zh: '**domain**：可选'
- en: Decides what ring the coefficients are supposed to belong. Default is set to
    Integers.
  id: totrans-1639
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 决定系数应属于哪个环。默认设置为整数。
- en: '**polys** : bool, optional'
  id: totrans-1640
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: '`polys=True` returns an expression, otherwise (default) returns an expression.'
  id: totrans-1641
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`polys=True`返回一个表达式，否则（默认）返回一个表达式。'
- en: Orthogonal polynomials
  id: totrans-1642
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 正交多项式
- en: '[PRE811]'
  id: totrans-1643
  prefs: []
  type: TYPE_PRE
  zh: '[PRE811]'
- en: Generates the Chebyshev polynomial of the first kind \(T_n(x)\).
  id: totrans-1644
  prefs: []
  type: TYPE_NORMAL
  zh: 生成第一类Chebyshev多项式\(T_n(x)\)。
- en: 'Parameters:'
  id: totrans-1645
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1646
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1647
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1648
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1649
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1650
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，返回一个多项式，否则（默认）返回一个表达式。
- en: '[PRE812]'
  id: totrans-1651
  prefs: []
  type: TYPE_PRE
  zh: '[PRE812]'
- en: Generates the Chebyshev polynomial of the second kind \(U_n(x)\).
  id: totrans-1652
  prefs: []
  type: TYPE_NORMAL
  zh: 生成第二类Chebyshev多项式\(U_n(x)\)。
- en: 'Parameters:'
  id: totrans-1653
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1654
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1655
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1656
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1657
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1658
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，返回一个多项式，否则（默认）返回一个表达式。
- en: '[PRE813]'
  id: totrans-1659
  prefs: []
  type: TYPE_PRE
  zh: '[PRE813]'
- en: Generates the Gegenbauer polynomial \(C_n^{(a)}(x)\).
  id: totrans-1660
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Gegenbauer多项式\(C_n^{(a)}(x)\)。
- en: 'Parameters:'
  id: totrans-1661
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1662
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1663
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1664
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**a**'
  id: totrans-1665
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**'
- en: Decides minimal domain for the list of coefficients.
  id: totrans-1666
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 决定系数列表的最小定义域。
- en: '**polys** : bool, optional'
  id: totrans-1667
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1668
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，返回一个多项式，否则（默认）返回一个表达式。
- en: '[PRE814]'
  id: totrans-1669
  prefs: []
  type: TYPE_PRE
  zh: '[PRE814]'
- en: Generates the Hermite polynomial \(H_n(x)\).
  id: totrans-1670
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Hermite多项式\(H_n(x)\)。
- en: 'Parameters:'
  id: totrans-1671
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1672
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1673
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1674
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1675
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1676
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，返回一个多项式，否则（默认）返回一个表达式。
- en: '[PRE815]'
  id: totrans-1677
  prefs: []
  type: TYPE_PRE
  zh: '[PRE815]'
- en: Generates the probabilist’s Hermite polynomial \(He_n(x)\).
  id: totrans-1678
  prefs: []
  type: TYPE_NORMAL
  zh: 生成概率论的Hermite多项式\(He_n(x)\)。
- en: 'Parameters:'
  id: totrans-1679
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1680
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1681
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1682
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1683
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1684
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，返回一个多项式，否则（默认）返回一个表达式。
- en: '[PRE816]'
  id: totrans-1685
  prefs: []
  type: TYPE_PRE
  zh: '[PRE816]'
- en: Generates the Jacobi polynomial \(P_n^{(a,b)}(x)\).
  id: totrans-1686
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Jacobi多项式\(P_n^{(a,b)}(x)\)。
- en: 'Parameters:'
  id: totrans-1687
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1688
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1689
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**a**'
  id: totrans-1690
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**'
- en: Lower limit of minimal domain for the list of coefficients.
  id: totrans-1691
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系数列表的最小定义域的下限。
- en: '**b**'
  id: totrans-1692
  prefs: []
  type: TYPE_NORMAL
  zh: '**b**'
- en: Upper limit of minimal domain for the list of coefficients.
  id: totrans-1693
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 系数列表的最小定义域的上限。
- en: '**x** : optional'
  id: totrans-1694
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1695
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1696
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，返回一个多项式，否则（默认）返回一个表达式。
- en: '[PRE817]'
  id: totrans-1697
  prefs: []
  type: TYPE_PRE
  zh: '[PRE817]'
- en: Generates the Legendre polynomial \(P_n(x)\).
  id: totrans-1698
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Legendre多项式\(P_n(x)\)。
- en: 'Parameters:'
  id: totrans-1699
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1700
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1701
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1702
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1703
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1704
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，返回一个多项式，否则（默认）返回一个表达式。
- en: '[PRE818]'
  id: totrans-1705
  prefs: []
  type: TYPE_PRE
  zh: '[PRE818]'
- en: Generates the Laguerre polynomial \(L_n^{(\alpha)}(x)\).
  id: totrans-1706
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Laguerre多项式\(L_n^{(\alpha)}(x)\)。
- en: 'Parameters:'
  id: totrans-1707
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1708
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1709
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1710
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**alpha** : optional'
  id: totrans-1711
  prefs: []
  type: TYPE_NORMAL
  zh: '**alpha**：可选'
- en: Decides minimal domain for the list of coefficients.
  id: totrans-1712
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 决定系数列表的最小定义域。
- en: '**polys** : bool, optional'
  id: totrans-1713
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1714
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，返回一个多项式，否则（默认）返回一个表达式。
- en: '[PRE819]'
  id: totrans-1715
  prefs: []
  type: TYPE_PRE
  zh: '[PRE819]'
- en: Coefficients for the spherical Bessel functions.
  id: totrans-1716
  prefs: []
  type: TYPE_NORMAL
  zh: 球形贝塞尔函数的系数。
- en: These are only needed in the jn() function.
  id: totrans-1717
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在jn()函数中需要这些。
- en: 'The coefficients are calculated from:'
  id: totrans-1718
  prefs: []
  type: TYPE_NORMAL
  zh: 系数由以下计算：
- en: fn(0, z) = 1/z fn(1, z) = 1/z**2 fn(n-1, z) + fn(n+1, z) == (2*n+1)/z * fn(n,
    z)
  id: totrans-1719
  prefs: []
  type: TYPE_NORMAL
  zh: fn(0, z) = 1/z fn(1, z) = 1/z**2 fn(n-1, z) + fn(n+1, z) == (2*n+1)/z * fn(n,
    z)
- en: 'Parameters:'
  id: totrans-1720
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1721
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: Degree of the polynomial.
  id: totrans-1722
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1723
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**：可选'
- en: '**polys** : bool, optional'
  id: totrans-1724
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys**：布尔型，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1725
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，则返回一个Poly，否则（默认）返回一个表达式。
- en: Examples
  id: totrans-1726
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE820]'
  id: totrans-1727
  prefs: []
  type: TYPE_PRE
  zh: '[PRE820]'
- en: Appell sequences
  id: totrans-1728
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Appell序列
- en: '[PRE821]'
  id: totrans-1729
  prefs: []
  type: TYPE_PRE
  zh: '[PRE821]'
- en: Generates the Bernoulli polynomial \(\operatorname{B}_n(x)\).
  id: totrans-1730
  prefs: []
  type: TYPE_NORMAL
  zh: 生成伯努利多项式 \(\operatorname{B}_n(x)\)。
- en: \(\operatorname{B}_n(x)\) is the unique polynomial satisfying
  id: totrans-1731
  prefs: []
  type: TYPE_NORMAL
  zh: \(\operatorname{B}_n(x)\)是满足以下唯一性质的多项式：
- en: \[\int_{x}^{x+1} \operatorname{B}_n(t) \,dt = x^n.\]
  id: totrans-1732
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{x}^{x+1} \operatorname{B}_n(t) \,dt = x^n.\]
- en: Based on this, we have for nonnegative integer \(s\) and integer \(a\) and \(b\)
  id: totrans-1733
  prefs: []
  type: TYPE_NORMAL
  zh: 基于此，我们对非负整数\(s\)和整数\(a\)和\(b\)有：
- en: \[\sum_{k=a}^{b} k^s = \frac{\operatorname{B}_{s+1}(b+1) - \operatorname{B}_{s+1}(a)}{s+1}\]
  id: totrans-1734
  prefs: []
  type: TYPE_NORMAL
  zh: \[\sum_{k=a}^{b} k^s = \frac{\operatorname{B}_{s+1}(b+1) - \operatorname{B}_{s+1}(a)}{s+1}\]
- en: which is related to Jakob Bernoulli’s original motivation for introducing the
    Bernoulli numbers, the values of these polynomials at \(x = 1\).
  id: totrans-1735
  prefs: []
  type: TYPE_NORMAL
  zh: 这与Jakob Bernoulli引入伯努利数的最初动机有关，这些多项式在\(x = 1\)处的值。
- en: 'Parameters:'
  id: totrans-1736
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1737
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 整数'
- en: Degree of the polynomial.
  id: totrans-1738
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1739
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** : 可选'
- en: '**polys** : bool, optional'
  id: totrans-1740
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys** : 布尔值，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1741
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，则返回一个Poly，否则（默认）返回一个表达式。
- en: Examples
  id: totrans-1742
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE822]'
  id: totrans-1743
  prefs: []
  type: TYPE_PRE
  zh: '[PRE822]'
- en: '[PRE823]'
  id: totrans-1744
  prefs: []
  type: TYPE_PRE
  zh: '[PRE823]'
- en: '[PRE824]'
  id: totrans-1745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE824]'
- en: See also
  id: totrans-1746
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.functions.combinatorial.numbers.bernoulli`](../functions/combinatorial.html#sympy.functions.combinatorial.numbers.bernoulli
    "sympy.functions.combinatorial.numbers.bernoulli")'
  id: totrans-1747
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.combinatorial.numbers.bernoulli`](../functions/combinatorial.html#sympy.functions.combinatorial.numbers.bernoulli
    "sympy.functions.combinatorial.numbers.bernoulli")'
- en: References
  id: totrans-1748
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R812](#id28)]'
  id: totrans-1749
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R812](#id28)]'
- en: '[https://en.wikipedia.org/wiki/Bernoulli_polynomials](https://en.wikipedia.org/wiki/Bernoulli_polynomials)'
  id: totrans-1750
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Bernoulli_polynomials](https://en.wikipedia.org/wiki/Bernoulli_polynomials)'
- en: '[PRE825]'
  id: totrans-1751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE825]'
- en: Generates the central Bernoulli polynomial \(\operatorname{B}_n^c(x)\).
  id: totrans-1752
  prefs: []
  type: TYPE_NORMAL
  zh: 生成中心伯努利多项式 \(\operatorname{B}_n^c(x)\)。
- en: 'These are scaled and shifted versions of the plain Bernoulli polynomials, done
    in such a way that \(\operatorname{B}_n^c(x)\) is an even or odd function for
    even or odd \(n\) respectively:'
  id: totrans-1753
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是普通伯努利多项式的缩放和平移版本，以便\(\operatorname{B}_n^c(x)\)分别为偶函数或奇函数，对应于偶数或奇数的\(n\)：
- en: \[\operatorname{B}_n^c(x) = 2^n \operatorname{B}_n \left(\frac{x+1}{2}\right)\]
  id: totrans-1754
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{B}_n^c(x) = 2^n \operatorname{B}_n \left(\frac{x+1}{2}\right)\]
- en: 'Parameters:'
  id: totrans-1755
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1756
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 整数'
- en: Degree of the polynomial.
  id: totrans-1757
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1758
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** : 可选'
- en: '**polys** : bool, optional'
  id: totrans-1759
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys** : 布尔值，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1760
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，则返回一个Poly，否则（默认）返回一个表达式。
- en: '[PRE826]'
  id: totrans-1761
  prefs: []
  type: TYPE_PRE
  zh: '[PRE826]'
- en: Generates the Genocchi polynomial \(\operatorname{G}_n(x)\).
  id: totrans-1762
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Genocchi多项式 \(\operatorname{G}_n(x)\)。
- en: '\(\operatorname{G}_n(x)\) is twice the difference between the plain and central
    Bernoulli polynomials, so has degree \(n-1\):'
  id: totrans-1763
  prefs: []
  type: TYPE_NORMAL
  zh: \(\operatorname{G}_n(x)\)是普通和中心伯努利多项式之差的两倍，因此次数为\(n-1\)：
- en: \[\operatorname{G}_n(x) = 2 (\operatorname{B}_n(x) - \operatorname{B}_n^c(x))\]
  id: totrans-1764
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{G}_n(x) = 2 (\operatorname{B}_n(x) - \operatorname{B}_n^c(x))\]
- en: The factor of 2 in the definition endows \(\operatorname{G}_n(x)\) with integer
    coefficients.
  id: totrans-1765
  prefs: []
  type: TYPE_NORMAL
  zh: 定义中的因子2赋予\(\operatorname{G}_n(x)\)整数系数。
- en: 'Parameters:'
  id: totrans-1766
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1767
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 整数'
- en: Degree of the polynomial plus one.
  id: totrans-1768
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数加一。
- en: '**x** : optional'
  id: totrans-1769
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** : 可选'
- en: '**polys** : bool, optional'
  id: totrans-1770
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys** : 布尔值，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1771
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，则返回一个Poly，否则（默认）返回一个表达式。
- en: See also
  id: totrans-1772
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.functions.combinatorial.numbers.genocchi`](../functions/combinatorial.html#sympy.functions.combinatorial.numbers.genocchi
    "sympy.functions.combinatorial.numbers.genocchi")'
  id: totrans-1773
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.combinatorial.numbers.genocchi`](../functions/combinatorial.html#sympy.functions.combinatorial.numbers.genocchi
    "sympy.functions.combinatorial.numbers.genocchi")'
- en: '[PRE827]'
  id: totrans-1774
  prefs: []
  type: TYPE_PRE
  zh: '[PRE827]'
- en: Generates the Euler polynomial \(\operatorname{E}_n(x)\).
  id: totrans-1775
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Euler多项式 \(\operatorname{E}_n(x)\)。
- en: 'These are scaled and reindexed versions of the Genocchi polynomials:'
  id: totrans-1776
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是Genocchi多项式的缩放和重新索引版本：
- en: \[\operatorname{E}_n(x) = -\frac{\operatorname{G}_{n+1}(x)}{n+1}\]
  id: totrans-1777
  prefs: []
  type: TYPE_NORMAL
  zh: \[\operatorname{E}_n(x) = -\frac{\operatorname{G}_{n+1}(x)}{n+1}\]
- en: 'Parameters:'
  id: totrans-1778
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1779
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 整数'
- en: Degree of the polynomial.
  id: totrans-1780
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1781
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** : 可选'
- en: '**polys** : bool, optional'
  id: totrans-1782
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys** : 布尔值，可选'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1783
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为真，则返回一个Poly，否则（默认）返回一个表达式。
- en: See also
  id: totrans-1784
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.functions.combinatorial.numbers.euler`](../functions/combinatorial.html#sympy.functions.combinatorial.numbers.euler
    "sympy.functions.combinatorial.numbers.euler")'
  id: totrans-1785
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.combinatorial.numbers.euler`](../functions/combinatorial.html#sympy.functions.combinatorial.numbers.euler
    "sympy.functions.combinatorial.numbers.euler")'
- en: '[PRE828]'
  id: totrans-1786
  prefs: []
  type: TYPE_PRE
  zh: '[PRE828]'
- en: Generates the Andre polynomial \(\mathcal{A}_n(x)\).
  id: totrans-1787
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Andre多项式 \(\mathcal{A}_n(x)\)。
- en: This is the Appell sequence where the constant coefficients form the sequence
    of Euler numbers `euler(n)`. As such they have integer coefficients and parities
    matching the parity of \(n\).
  id: totrans-1788
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Appell序列，其中常数系数形成欧拉数序列`euler(n)`。因此它们具有整数系数，并且与\( n \)的奇偶性匹配。
- en: Luschny calls these the *Swiss-knife polynomials* because their values at 0
    and 1 can be simply transformed into both the Bernoulli and Euler numbers. Here
    they are called the Andre polynomials because \(|\mathcal{A}_n(n\bmod 2)|\) for
    \(n \ge 0\) generates what Luschny calls the *Andre numbers*, A000111 in the OEIS.
  id: totrans-1789
  prefs: []
  type: TYPE_NORMAL
  zh: Luschny称之为*瑞士军刀多项式*，因为它们在0和1处的值可以简单地转化为伯努利数和欧拉数。在这里它们被称为Andre多项式，因为对于\( n \ge
    0 \)，\( |\mathcal{A}_n(n\bmod 2)| \)生成了Luschny所称的*Andre数*，在OEIS中是A000111。
- en: 'Parameters:'
  id: totrans-1790
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : int'
  id: totrans-1791
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : int'
- en: Degree of the polynomial.
  id: totrans-1792
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式的次数。
- en: '**x** : optional'
  id: totrans-1793
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** : optional'
- en: '**polys** : bool, optional'
  id: totrans-1794
  prefs: []
  type: TYPE_NORMAL
  zh: '**polys** : bool, optional'
- en: If True, return a Poly, otherwise (default) return an expression.
  id: totrans-1795
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为True，则返回Poly，否则（默认）返回一个表达式。
- en: Examples
  id: totrans-1796
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE829]'
  id: totrans-1797
  prefs: []
  type: TYPE_PRE
  zh: '[PRE829]'
- en: '[PRE830]'
  id: totrans-1798
  prefs: []
  type: TYPE_PRE
  zh: '[PRE830]'
- en: '[PRE831]'
  id: totrans-1799
  prefs: []
  type: TYPE_PRE
  zh: '[PRE831]'
- en: See also
  id: totrans-1800
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.functions.combinatorial.numbers.andre`](../functions/combinatorial.html#sympy.functions.combinatorial.numbers.andre
    "sympy.functions.combinatorial.numbers.andre")'
  id: totrans-1801
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.functions.combinatorial.numbers.andre`](../functions/combinatorial.html#sympy.functions.combinatorial.numbers.andre
    "sympy.functions.combinatorial.numbers.andre")'
- en: References
  id: totrans-1802
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R813](#id29)]'
  id: totrans-1803
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R813](#id29)]'
- en: Peter Luschny, “An introduction to the Bernoulli function”, [https://arxiv.org/abs/2009.06743](https://arxiv.org/abs/2009.06743)
  id: totrans-1804
  prefs: []
  type: TYPE_NORMAL
  zh: Peter Luschny，“伯努利函数简介”，[https://arxiv.org/abs/2009.06743](https://arxiv.org/abs/2009.06743)
- en: Manipulation of rational functions
  id: totrans-1805
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作有理函数
- en: '[PRE832]'
  id: totrans-1806
  prefs: []
  type: TYPE_PRE
  zh: '[PRE832]'
- en: Denest and combine rational expressions using symbolic methods.
  id: totrans-1807
  prefs: []
  type: TYPE_NORMAL
  zh: 使用符号方法去除并组合有理表达式。
- en: This function takes an expression or a container of expressions and puts it
    (them) together by denesting and combining rational subexpressions. No heroic
    measures are taken to minimize degree of the resulting numerator and denominator.
    To obtain completely reduced expression use [`cancel()`](#sympy.polys.polytools.cancel
    "sympy.polys.polytools.cancel"). However, [`together()`](#sympy.polys.rationaltools.together
    "sympy.polys.rationaltools.together") can preserve as much as possible of the
    structure of the input expression in the output (no expansion is performed).
  id: totrans-1808
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数接受表达式或表达式容器，并通过去除嵌套和组合有理子表达式将其放在一起。不会采取英雄般的措施来最小化生成的分子和分母的次数。要获取完全简化的表达式，请使用[`cancel()`](#sympy.polys.polytools.cancel
    "sympy.polys.polytools.cancel")。然而，[`together()`](#sympy.polys.rationaltools.together
    "sympy.polys.rationaltools.together")可以尽可能地保留输入表达式的结构（不会执行扩展）。
- en: A wide variety of objects can be put together including lists, tuples, sets,
    relational objects, integrals and others. It is also possible to transform interior
    of function applications, by setting `deep` flag to `True`.
  id: totrans-1809
  prefs: []
  type: TYPE_NORMAL
  zh: 可以组合多种对象，包括列表、元组、集合、关系对象、积分等。还可以通过将`deep`标志设置为`True`来转换函数应用的内部。
- en: By definition, [`together()`](#sympy.polys.rationaltools.together "sympy.polys.rationaltools.together")
    is a complement to [`apart()`](#sympy.polys.partfrac.apart "sympy.polys.partfrac.apart"),
    so `apart(together(expr))` should return expr unchanged. Note however, that [`together()`](#sympy.polys.rationaltools.together
    "sympy.polys.rationaltools.together") uses only symbolic methods, so it might
    be necessary to use [`cancel()`](#sympy.polys.polytools.cancel "sympy.polys.polytools.cancel")
    to perform algebraic simplification and minimize degree of the numerator and denominator.
  id: totrans-1810
  prefs: []
  type: TYPE_NORMAL
  zh: 根据定义，[`together()`](#sympy.polys.rationaltools.together "sympy.polys.rationaltools.together")是[`apart()`](#sympy.polys.partfrac.apart
    "sympy.polys.partfrac.apart")的补充，因此`apart(together(expr))`应该返回未改变的表达式。然而，请注意，[`together()`](#sympy.polys.rationaltools.together
    "sympy.polys.rationaltools.together")仅使用符号方法，因此可能需要使用[`cancel()`](#sympy.polys.polytools.cancel
    "sympy.polys.polytools.cancel")进行代数化简并最小化分子和分母的次数。
- en: Examples
  id: totrans-1811
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE833]'
  id: totrans-1812
  prefs: []
  type: TYPE_PRE
  zh: '[PRE833]'
- en: '[PRE834]'
  id: totrans-1813
  prefs: []
  type: TYPE_PRE
  zh: '[PRE834]'
- en: '[PRE835]'
  id: totrans-1814
  prefs: []
  type: TYPE_PRE
  zh: '[PRE835]'
- en: '[PRE836]'
  id: totrans-1815
  prefs: []
  type: TYPE_PRE
  zh: '[PRE836]'
- en: '[PRE837]'
  id: totrans-1816
  prefs: []
  type: TYPE_PRE
  zh: '[PRE837]'
- en: '[PRE838]'
  id: totrans-1817
  prefs: []
  type: TYPE_PRE
  zh: '[PRE838]'
- en: '[PRE839]'
  id: totrans-1818
  prefs: []
  type: TYPE_PRE
  zh: '[PRE839]'
- en: Partial fraction decomposition
  id: totrans-1819
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部分分解
- en: '[PRE840]'
  id: totrans-1820
  prefs: []
  type: TYPE_PRE
  zh: '[PRE840]'
- en: Compute partial fraction decomposition of a rational function.
  id: totrans-1821
  prefs: []
  type: TYPE_NORMAL
  zh: 计算有理函数的部分分解。
- en: 'Given a rational function `f`, computes the partial fraction decomposition
    of `f`. Two algorithms are available: One is based on the undertermined coefficients
    method, the other is Bronstein’s full partial fraction decomposition algorithm.'
  id: totrans-1822
  prefs: []
  type: TYPE_NORMAL
  zh: 给定有理函数`f`，计算`f`的部分分解。有两种算法可用：一种基于未知系数方法，另一种是Bronstein的完全部分分解算法。
- en: The undetermined coefficients method (selected by `full=False`) uses polynomial
    factorization (and therefore accepts the same options as factor) for the denominator.
    Per default it works over the rational numbers, therefore decomposition of denominators
    with non-rational roots (e.g. irrational, complex roots) is not supported by default
    (see options of factor).
  id: totrans-1823
  prefs: []
  type: TYPE_NORMAL
  zh: 使用未知系数法（通过 `full=False` 选择）使用多项式因式分解（因此接受与因子相同的选项）用于分母。默认情况下它在有理数上工作，因此不支持具有非有理根（例如无理数，复根）的分母的分解（参见因子的选项）。
- en: Bronstein’s algorithm can be selected by using `full=True` and allows a decomposition
    of denominators with non-rational roots. A human-readable result can be obtained
    via `doit()` (see examples below).
  id: totrans-1824
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `full=True` 可选择 Bronstein 算法，并允许分解具有非有理根的分母。可以通过 `doit()` 获得一个易于理解的结果（见下面的示例）。
- en: Examples
  id: totrans-1825
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE841]'
  id: totrans-1826
  prefs: []
  type: TYPE_PRE
  zh: '[PRE841]'
- en: 'By default, using the undetermined coefficients method:'
  id: totrans-1827
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，使用待定系数法：
- en: '[PRE842]'
  id: totrans-1828
  prefs: []
  type: TYPE_PRE
  zh: '[PRE842]'
- en: 'The undetermined coefficients method does not provide a result when the denominators
    roots are not rational:'
  id: totrans-1829
  prefs: []
  type: TYPE_NORMAL
  zh: 当分母的根不是有理数时，待定系数法不会给出结果：
- en: '[PRE843]'
  id: totrans-1830
  prefs: []
  type: TYPE_PRE
  zh: '[PRE843]'
- en: 'You can choose Bronstein’s algorithm by setting `full=True`:'
  id: totrans-1831
  prefs: []
  type: TYPE_NORMAL
  zh: 通过设置 `full=True` 可选择 Bronstein 的算法：
- en: '[PRE844]'
  id: totrans-1832
  prefs: []
  type: TYPE_PRE
  zh: '[PRE844]'
- en: 'Calling `doit()` yields a human-readable result:'
  id: totrans-1833
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 `doit()` 会产生一个易于理解的结果：
- en: '[PRE845]'
  id: totrans-1834
  prefs: []
  type: TYPE_PRE
  zh: '[PRE845]'
- en: See also
  id: totrans-1835
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`apart_list`](#sympy.polys.partfrac.apart_list "sympy.polys.partfrac.apart_list"),
    [`assemble_partfrac_list`](#sympy.polys.partfrac.assemble_partfrac_list "sympy.polys.partfrac.assemble_partfrac_list")'
  id: totrans-1836
  prefs: []
  type: TYPE_NORMAL
  zh: '[`apart_list`](#sympy.polys.partfrac.apart_list "sympy.polys.partfrac.apart_list"),
    [`assemble_partfrac_list`](#sympy.polys.partfrac.assemble_partfrac_list "sympy.polys.partfrac.assemble_partfrac_list")'
- en: '[PRE846]'
  id: totrans-1837
  prefs: []
  type: TYPE_PRE
  zh: '[PRE846]'
- en: Compute partial fraction decomposition of a rational function and return the
    result in structured form.
  id: totrans-1838
  prefs: []
  type: TYPE_NORMAL
  zh: 计算有理函数的部分分解，并以结构化形式返回结果。
- en: 'Given a rational function `f` compute the partial fraction decomposition of
    `f`. Only Bronstein’s full partial fraction decomposition algorithm is supported
    by this method. The return value is highly structured and perfectly suited for
    further algorithmic treatment rather than being human-readable. The function returns
    a tuple holding three elements:'
  id: totrans-1839
  prefs: []
  type: TYPE_NORMAL
  zh: 给定有理函数 `f`，计算 `f` 的部分分解。此方法仅支持 Bronstein 的完全部分分解算法。返回值结构化且非常适合进一步的算法处理，而不是易于理解的人类阅读。函数返回一个包含三个元素的元组：
- en: The first item is the common coefficient, free of the variable \(x\) used for
    decomposition. (It is an element of the base field \(K\).)
  id: totrans-1840
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一项是通用系数，不涉及用于分解的变量 \(x\)。（它是基础域 \(K\) 的元素。）
- en: The second item is the polynomial part of the decomposition. This can be the
    zero polynomial. (It is an element of \(K[x]\).)
  id: totrans-1841
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二项是分解的多项式部分。这可以是零多项式。（它是 \(K[x]\) 的元素。）
- en: 'The third part itself is a list of quadruples. Each quadruple has the following
    elements in this order:'
  id: totrans-1842
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三部分本身是一个四元组列表。每个四元组按照以下顺序具有以下元素：
- en: The (not necessarily irreducible) polynomial \(D\) whose roots \(w_i\) appear
    in the linear denominator of a bunch of related fraction terms. (This item can
    also be a list of explicit roots. However, at the moment `apart_list` never returns
    a result this way, but the related `assemble_partfrac_list` function accepts this
    format as input.)
  id: totrans-1843
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个相关分式项的线性分母中出现的根 \(w_i\) 的多项式 \(D\)（不一定是不可约的）。（该项也可以是显式根的列表。然而，目前 `apart_list`
    从未以这种方式返回结果，但相关的 `assemble_partfrac_list` 函数接受此格式作为输入。）
- en: The numerator of the fraction, written as a function of the root \(w\)
  id: totrans-1844
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分数的分子，写成关于根 \(w\) 的函数
- en: The linear denominator of the fraction *excluding its power exponent*, written
    as a function of the root \(w\).
  id: totrans-1845
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分数的线性分母 *不包括其幂指数*，写成根 \(w\) 的函数。
- en: The power to which the denominator has to be raised.
  id: totrans-1846
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分母必须提升的幂。
- en: On can always rebuild a plain expression by using the function `assemble_partfrac_list`.
  id: totrans-1847
  prefs: []
  type: TYPE_NORMAL
  zh: 可以始终通过使用函数 `assemble_partfrac_list` 重建简单表达式。
- en: Examples
  id: totrans-1848
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'A first example:'
  id: totrans-1849
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个例子：
- en: '[PRE847]'
  id: totrans-1850
  prefs: []
  type: TYPE_PRE
  zh: '[PRE847]'
- en: '[PRE848]'
  id: totrans-1851
  prefs: []
  type: TYPE_PRE
  zh: '[PRE848]'
- en: '[PRE849]'
  id: totrans-1852
  prefs: []
  type: TYPE_PRE
  zh: '[PRE849]'
- en: 'Second example:'
  id: totrans-1853
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个例子：
- en: '[PRE850]'
  id: totrans-1854
  prefs: []
  type: TYPE_PRE
  zh: '[PRE850]'
- en: '[PRE851]'
  id: totrans-1855
  prefs: []
  type: TYPE_PRE
  zh: '[PRE851]'
- en: 'Another example, showing symbolic parameters:'
  id: totrans-1856
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子，展示符号参数：
- en: '[PRE852]'
  id: totrans-1857
  prefs: []
  type: TYPE_PRE
  zh: '[PRE852]'
- en: '[PRE853]'
  id: totrans-1858
  prefs: []
  type: TYPE_PRE
  zh: '[PRE853]'
- en: 'This example is taken from Bronstein’s original paper:'
  id: totrans-1859
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例摘自 Bronstein 的原始论文：
- en: '[PRE854]'
  id: totrans-1860
  prefs: []
  type: TYPE_PRE
  zh: '[PRE854]'
- en: '[PRE855]'
  id: totrans-1861
  prefs: []
  type: TYPE_PRE
  zh: '[PRE855]'
- en: See also
  id: totrans-1862
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`apart`](#sympy.polys.partfrac.apart "sympy.polys.partfrac.apart"), [`assemble_partfrac_list`](#sympy.polys.partfrac.assemble_partfrac_list
    "sympy.polys.partfrac.assemble_partfrac_list")'
  id: totrans-1863
  prefs: []
  type: TYPE_NORMAL
  zh: '[`apart`](#sympy.polys.partfrac.apart "sympy.polys.partfrac.apart"), [`assemble_partfrac_list`](#sympy.polys.partfrac.assemble_partfrac_list
    "sympy.polys.partfrac.assemble_partfrac_list")'
- en: References
  id: totrans-1864
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R814](#id31)]'
  id: totrans-1865
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R814](#id31)]'
- en: '[[Bronstein93]](literature.html#bronstein93)'
  id: totrans-1866
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Bronstein93]](literature.html#bronstein93)'
- en: '[PRE856]'
  id: totrans-1867
  prefs: []
  type: TYPE_PRE
  zh: '[PRE856]'
- en: Reassemble a full partial fraction decomposition from a structured result obtained
    by the function `apart_list`.
  id: totrans-1868
  prefs: []
  type: TYPE_NORMAL
  zh: 通过函数 `apart_list` 获得的结构化结果重新组装完整的部分分数分解。
- en: Examples
  id: totrans-1869
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'This example is taken from Bronstein’s original paper:'
  id: totrans-1870
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例取自Bronstein的原始论文：
- en: '[PRE857]'
  id: totrans-1871
  prefs: []
  type: TYPE_PRE
  zh: '[PRE857]'
- en: '[PRE858]'
  id: totrans-1872
  prefs: []
  type: TYPE_PRE
  zh: '[PRE858]'
- en: '[PRE859]'
  id: totrans-1873
  prefs: []
  type: TYPE_PRE
  zh: '[PRE859]'
- en: 'If we happen to know some roots we can provide them easily inside the structure:'
  id: totrans-1874
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们恰好知道一些根，则可以轻松地在结构内提供它们：
- en: '[PRE860]'
  id: totrans-1875
  prefs: []
  type: TYPE_PRE
  zh: '[PRE860]'
- en: '[PRE861]'
  id: totrans-1876
  prefs: []
  type: TYPE_PRE
  zh: '[PRE861]'
- en: '[PRE862]'
  id: totrans-1877
  prefs: []
  type: TYPE_PRE
  zh: '[PRE862]'
- en: '[PRE863]'
  id: totrans-1878
  prefs: []
  type: TYPE_PRE
  zh: '[PRE863]'
- en: '[PRE864]'
  id: totrans-1879
  prefs: []
  type: TYPE_PRE
  zh: '[PRE864]'
- en: See also
  id: totrans-1880
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`apart`](#sympy.polys.partfrac.apart "sympy.polys.partfrac.apart"), [`apart_list`](#sympy.polys.partfrac.apart_list
    "sympy.polys.partfrac.apart_list")'
  id: totrans-1881
  prefs: []
  type: TYPE_NORMAL
  zh: '[`apart`](#sympy.polys.partfrac.apart "sympy.polys.partfrac.apart"), [`apart_list`](#sympy.polys.partfrac.apart_list
    "sympy.polys.partfrac.apart_list")'
- en: Dispersion of Polynomials
  id: totrans-1882
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多项式的分散
- en: '[PRE865]'
  id: totrans-1883
  prefs: []
  type: TYPE_PRE
  zh: '[PRE865]'
- en: Compute the *dispersion set* of two polynomials.
  id: totrans-1884
  prefs: []
  type: TYPE_NORMAL
  zh: 计算两个多项式的*分散集*。
- en: 'For two polynomials \(f(x)\) and \(g(x)\) with \(\deg f > 0\) and \(\deg g
    > 0\) the dispersion set \(\operatorname{J}(f, g)\) is defined as:'
  id: totrans-1885
  prefs: []
  type: TYPE_NORMAL
  zh: 对于两个多项式 \(f(x)\) 和 \(g(x)\)，其中 \(\deg f > 0\) 和 \(\deg g > 0\)，分散集 \(\operatorname{J}(f,
    g)\) 定义如下：
- en: \[\begin{split}\operatorname{J}(f, g) & := \{a \in \mathbb{N}_0 | \gcd(f(x),
    g(x+a)) \neq 1\} \\ & = \{a \in \mathbb{N}_0 | \deg \gcd(f(x), g(x+a)) \geq 1\}\end{split}\]
  id: totrans-1886
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\operatorname{J}(f, g) & := \{a \in \mathbb{N}_0 | \gcd(f(x),
    g(x+a)) \neq 1\} \\ & = \{a \in \mathbb{N}_0 | \deg \gcd(f(x), g(x+a)) \geq 1\}\end{split}\]
- en: For a single polynomial one defines \(\operatorname{J}(f) := \operatorname{J}(f,
    f)\).
  id: totrans-1887
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单个多项式，定义为 \(\operatorname{J}(f) := \operatorname{J}(f, f)\)。
- en: Examples
  id: totrans-1888
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE866]'
  id: totrans-1889
  prefs: []
  type: TYPE_PRE
  zh: '[PRE866]'
- en: 'Dispersion set and dispersion of a simple polynomial:'
  id: totrans-1890
  prefs: []
  type: TYPE_NORMAL
  zh: 简单多项式的分散集和分散度：
- en: '[PRE867]'
  id: totrans-1891
  prefs: []
  type: TYPE_PRE
  zh: '[PRE867]'
- en: 'Note that the definition of the dispersion is not symmetric:'
  id: totrans-1892
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意分散的定义不对称：
- en: '[PRE868]'
  id: totrans-1893
  prefs: []
  type: TYPE_PRE
  zh: '[PRE868]'
- en: 'Computing the dispersion also works over field extensions:'
  id: totrans-1894
  prefs: []
  type: TYPE_NORMAL
  zh: 分散计算也适用于域扩展：
- en: '[PRE869]'
  id: totrans-1895
  prefs: []
  type: TYPE_PRE
  zh: '[PRE869]'
- en: 'We can even perform the computations for polynomials having symbolic coefficients:'
  id: totrans-1896
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以为具有符号系数的多项式执行计算：
- en: '[PRE870]'
  id: totrans-1897
  prefs: []
  type: TYPE_PRE
  zh: '[PRE870]'
- en: See also
  id: totrans-1898
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`dispersion`](#sympy.polys.dispersion.dispersion "sympy.polys.dispersion.dispersion")'
  id: totrans-1899
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dispersion`](#sympy.polys.dispersion.dispersion "sympy.polys.dispersion.dispersion")'
- en: References
  id: totrans-1900
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R815](#id36)]'
  id: totrans-1901
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R815](#id36)]'
- en: '[[ManWright94]](literature.html#manwright94)'
  id: totrans-1902
  prefs: []
  type: TYPE_NORMAL
  zh: '[[ManWright94]](literature.html#manwright94)'
- en: '[[R816](#id37)]'
  id: totrans-1903
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R816](#id37)]'
- en: '[[Koepf98]](literature.html#koepf98)'
  id: totrans-1904
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Koepf98]](literature.html#koepf98)'
- en: '[[R817](#id38)]'
  id: totrans-1905
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R817](#id38)]'
- en: '[[Abramov71]](literature.html#abramov71)'
  id: totrans-1906
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Abramov71]](literature.html#abramov71)'
- en: '[[R818](#id39)]'
  id: totrans-1907
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R818](#id39)]'
- en: '[[Man93]](literature.html#man93)'
  id: totrans-1908
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Man93]](literature.html#man93)'
- en: '[PRE871]'
  id: totrans-1909
  prefs: []
  type: TYPE_PRE
  zh: '[PRE871]'
- en: Compute the *dispersion* of polynomials.
  id: totrans-1910
  prefs: []
  type: TYPE_NORMAL
  zh: 计算多项式的*分散*。
- en: 'For two polynomials \(f(x)\) and \(g(x)\) with \(\deg f > 0\) and \(\deg g
    > 0\) the dispersion \(\operatorname{dis}(f, g)\) is defined as:'
  id: totrans-1911
  prefs: []
  type: TYPE_NORMAL
  zh: 对于两个多项式 \(f(x)\) 和 \(g(x)\)，其中 \(\deg f > 0\) 和 \(\deg g > 0\)，分散 \(\operatorname{dis}(f,
    g)\) 定义如下：
- en: \[\begin{split}\operatorname{dis}(f, g) & := \max\{ J(f,g) \cup \{0\} \} \\
    & = \max\{ \{a \in \mathbb{N} | \gcd(f(x), g(x+a)) \neq 1\} \cup \{0\} \}\end{split}\]
  id: totrans-1912
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\operatorname{dis}(f, g) & := \max\{ J(f,g) \cup \{0\} \} \\
    & = \max\{ \{a \in \mathbb{N} | \gcd(f(x), g(x+a)) \neq 1\} \cup \{0\} \}\end{split}\]
- en: and for a single polynomial \(\operatorname{dis}(f) := \operatorname{dis}(f,
    f)\). Note that we make the definition \(\max\{\} := -\infty\).
  id: totrans-1913
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单个多项式 \(\operatorname{dis}(f) := \operatorname{dis}(f, f)\)，请注意我们定义 \(\max\{\}
    := -\infty\)。
- en: Examples
  id: totrans-1914
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE872]'
  id: totrans-1915
  prefs: []
  type: TYPE_PRE
  zh: '[PRE872]'
- en: 'Dispersion set and dispersion of a simple polynomial:'
  id: totrans-1916
  prefs: []
  type: TYPE_NORMAL
  zh: 简单多项式的分散集和分散度：
- en: '[PRE873]'
  id: totrans-1917
  prefs: []
  type: TYPE_PRE
  zh: '[PRE873]'
- en: 'Note that the definition of the dispersion is not symmetric:'
  id: totrans-1918
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意分散的定义不对称：
- en: '[PRE874]'
  id: totrans-1919
  prefs: []
  type: TYPE_PRE
  zh: '[PRE874]'
- en: The maximum of an empty set is defined to be \(-\infty\) as seen in this example.
  id: totrans-1920
  prefs: []
  type: TYPE_NORMAL
  zh: 空集的最大值定义为 \(-\infty\)，如本例所示。
- en: 'Computing the dispersion also works over field extensions:'
  id: totrans-1921
  prefs: []
  type: TYPE_NORMAL
  zh: 分散计算也适用于域扩展：
- en: '[PRE875]'
  id: totrans-1922
  prefs: []
  type: TYPE_PRE
  zh: '[PRE875]'
- en: 'We can even perform the computations for polynomials having symbolic coefficients:'
  id: totrans-1923
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以为具有符号系数的多项式执行计算：
- en: '[PRE876]'
  id: totrans-1924
  prefs: []
  type: TYPE_PRE
  zh: '[PRE876]'
- en: See also
  id: totrans-1925
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`dispersionset`](#sympy.polys.dispersion.dispersionset "sympy.polys.dispersion.dispersionset")'
  id: totrans-1926
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dispersionset`](#sympy.polys.dispersion.dispersionset "sympy.polys.dispersion.dispersionset")'
- en: References
  id: totrans-1927
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R819](#id44)]'
  id: totrans-1928
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R819](#id44)]'
- en: '[[ManWright94]](literature.html#manwright94)'
  id: totrans-1929
  prefs: []
  type: TYPE_NORMAL
  zh: '[[ManWright94]](literature.html#manwright94)'
- en: '[[R820](#id45)]'
  id: totrans-1930
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R820](#id45)]'
- en: '[[Koepf98]](literature.html#koepf98)'
  id: totrans-1931
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Koepf98]](literature.html#koepf98)'
- en: '[[R821](#id46)]'
  id: totrans-1932
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R821](#id46)]'
- en: '[[Abramov71]](literature.html#abramov71)'
  id: totrans-1933
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Abramov71]](literature.html#abramov71)'
- en: '[[R822](#id47)]'
  id: totrans-1934
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R822](#id47)]'
- en: '[[Man93]](literature.html#man93)'
  id: totrans-1935
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Man93]](literature.html#man93)'
