["```py\nscipy.stats.geninvgauss = <scipy.stats._continuous_distns.geninvgauss_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import geninvgauss\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> p, b = 2.3, 1.5\n>>> mean, var, skew, kurt = geninvgauss.stats(p, b, moments='mvsk') \n```", "```py\n>>> x = np.linspace(geninvgauss.ppf(0.01, p, b),\n...                 geninvgauss.ppf(0.99, p, b), 100)\n>>> ax.plot(x, geninvgauss.pdf(x, p, b),\n...        'r-', lw=5, alpha=0.6, label='geninvgauss pdf') \n```", "```py\n>>> rv = geninvgauss(p, b)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = geninvgauss.ppf([0.001, 0.5, 0.999], p, b)\n>>> np.allclose([0.001, 0.5, 0.999], geninvgauss.cdf(vals, p, b))\nTrue \n```", "```py\n>>> r = geninvgauss.rvs(p, b, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]