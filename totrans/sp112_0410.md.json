["```py\nscipy.ndimage.grey_erosion(input, size=None, footprint=None, structure=None, output=None, mode='reflect', cval=0.0, origin=0)\n```", "```py\n>>> from scipy import ndimage\n>>> import numpy as np\n>>> a = np.zeros((7,7), dtype=int)\n>>> a[1:6, 1:6] = 3\n>>> a[4,4] = 2; a[2,3] = 1\n>>> a\narray([[0, 0, 0, 0, 0, 0, 0],\n [0, 3, 3, 3, 3, 3, 0],\n [0, 3, 3, 1, 3, 3, 0],\n [0, 3, 3, 3, 3, 3, 0],\n [0, 3, 3, 3, 2, 3, 0],\n [0, 3, 3, 3, 3, 3, 0],\n [0, 0, 0, 0, 0, 0, 0]])\n>>> ndimage.grey_erosion(a, size=(3,3))\narray([[0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 1, 1, 1, 0, 0],\n [0, 0, 1, 1, 1, 0, 0],\n [0, 0, 3, 2, 2, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0]])\n>>> footprint = ndimage.generate_binary_structure(2, 1)\n>>> footprint\narray([[False,  True, False],\n [ True,  True,  True],\n [False,  True, False]], dtype=bool)\n>>> # Diagonally-connected elements are not considered neighbors\n>>> ndimage.grey_erosion(a, footprint=footprint)\narray([[0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 1, 1, 1, 0, 0],\n [0, 0, 3, 1, 2, 0, 0],\n [0, 0, 3, 2, 2, 0, 0],\n [0, 0, 0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0, 0, 0]]) \n```"]