- en: scipy.ndimage.distance_transform_edt
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.distance_transform_edt.html#scipy.ndimage.distance_transform_edt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.distance_transform_edt.html#scipy.ndimage.distance_transform_edt)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Exact Euclidean distance transform.
  prefs: []
  type: TYPE_NORMAL
- en: This function calculates the distance transform of the *input*, by replacing
    each foreground (non-zero) element, with its shortest distance to the background
    (any zero-valued element).
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the distance transform, the feature transform can be calculated.
    In this case the index of the closest background element to each foreground element
    is returned in a separate array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: 'Input data to transform. Can be any type but will be converted into binary:
    1 wherever input equates to True, 0 elsewhere.'
  prefs: []
  type: TYPE_NORMAL
- en: '**sampling**float, or sequence of float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Spacing of elements along each dimension. If a sequence, must be of length equal
    to the input rank; if a single number, this is used for all axes. If not specified,
    a grid spacing of unity is implied.
  prefs: []
  type: TYPE_NORMAL
- en: '**return_distances**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to calculate the distance transform. Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**return_indices**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to calculate the feature transform. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**distances**float64 ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An output array to store the calculated distance transform, instead of returning
    it. *return_distances* must be True. It must be the same shape as *input*.
  prefs: []
  type: TYPE_NORMAL
- en: '**indices**int32 ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An output array to store the calculated feature transform, instead of returning
    it. *return_indicies* must be True. Its shape must be *(input.ndim,) + input.shape*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**distances**float64 ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The calculated distance transform. Returned only when *return_distances* is
    True and *distances* is not supplied. It will have the same shape as the input
    array.
  prefs: []
  type: TYPE_NORMAL
- en: '**indices**int32 ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The calculated feature transform. It has an input-shaped array for each dimension
    of the input. See example below. Returned only when *return_indices* is True and
    *indices* is not supplied.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The Euclidean distance transform gives values of the Euclidean distance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: where b[i] is the background point (value 0) with the smallest Euclidean distance
    to input points x[i], and n is the number of dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'With a sampling of 2 units along x, 1 along y:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Asking for indices as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'With arrays provided for inplace outputs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
