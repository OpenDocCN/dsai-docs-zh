- en: 'Ultralytics Docs: Using YOLOv8 with SAHI for Sliced Inference'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`docs.ultralytics.com/guides/sahi-tiled-inference/`](https://docs.ultralytics.com/guides/sahi-tiled-inference/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Welcome to the Ultralytics documentation on how to use YOLOv8 with [SAHI](https://github.com/obss/sahi)
    (Slicing Aided Hyper Inference). This comprehensive guide aims to furnish you
    with all the essential knowledge you'll need to implement SAHI alongside YOLOv8\.
    We'll deep-dive into what SAHI is, why sliced inference is critical for large-scale
    applications, and how to integrate these functionalities with YOLOv8 for enhanced
    object detection performance.
  prefs: []
  type: TYPE_NORMAL
- en: '![SAHI Sliced Inference Overview](img/65c11a31ad118924bd1e837ef4e51bc3.png)'
  prefs: []
  type: TYPE_IMG
- en: Introduction to SAHI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SAHI (Slicing Aided Hyper Inference) is an innovative library designed to optimize
    object detection algorithms for large-scale and high-resolution imagery. Its core
    functionality lies in partitioning images into manageable slices, running object
    detection on each slice, and then stitching the results back together. SAHI is
    compatible with a range of object detection models, including the YOLO series,
    thereby offering flexibility while ensuring optimized use of computational resources.
  prefs: []
  type: TYPE_NORMAL
- en: '[`www.youtube.com/embed/tq3FU_QczxE`](https://www.youtube.com/embed/tq3FU_QczxE)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Watch:** Inference with SAHI (Slicing Aided Hyper Inference) using Ultralytics
    YOLOv8'
  prefs: []
  type: TYPE_NORMAL
- en: Key Features of SAHI
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Seamless Integration**: SAHI integrates effortlessly with YOLO models, meaning
    you can start slicing and detecting without a lot of code modification.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource Efficiency**: By breaking down large images into smaller parts,
    SAHI optimizes the memory usage, allowing you to run high-quality detection on
    hardware with limited resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**High Accuracy**: SAHI maintains the detection accuracy by employing smart
    algorithms to merge overlapping detection boxes during the stitching process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is Sliced Inference?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sliced Inference refers to the practice of subdividing a large or high-resolution
    image into smaller segments (slices), conducting object detection on these slices,
    and then recompiling the slices to reconstruct the object locations on the original
    image. This technique is invaluable in scenarios where computational resources
    are limited or when working with extremely high-resolution images that could otherwise
    lead to memory issues.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits of Sliced Inference
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Reduced Computational Burden**: Smaller image slices are faster to process,
    and they consume less memory, enabling smoother operation on lower-end hardware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Preserved Detection Quality**: Since each slice is treated independently,
    there is no reduction in the quality of object detection, provided the slices
    are large enough to capture the objects of interest.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enhanced Scalability**: The technique allows for object detection to be more
    easily scaled across different sizes and resolutions of images, making it ideal
    for a wide range of applications from satellite imagery to medical diagnostics.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| YOLOv8 without SAHI | YOLOv8 with SAHI |'
  prefs: []
  type: TYPE_TB
- en: '| ![YOLOv8 without SAHI](img/2182fc3f50cbcdd723070a8763b9a04c.png) | ![YOLOv8
    with SAHI](img/327e16cf9414789c9fe1bda2515fd2c9.png) |'
  prefs: []
  type: TYPE_TB
- en: Installation and Preparation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To get started, install the latest versions of SAHI and Ultralytics:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Import Modules and Download Resources
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here''s how to import the necessary modules and download a YOLOv8 model and
    some test images:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Standard Inference with YOLOv8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Instantiate the Model
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can instantiate a YOLOv8 model for object detection like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Perform Standard Prediction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Perform standard inference using an image path or a numpy image.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Visualize Results
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Export and visualize the predicted bounding boxes and masks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Sliced Inference with YOLOv8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform sliced inference by specifying the slice dimensions and overlap ratios:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Handling Prediction Results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'SAHI provides a `PredictionResult` object, which can be converted into various
    annotation formats:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Batch Prediction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For batch prediction on a directory of images:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: That's it! Now you're equipped to use YOLOv8 with SAHI for both standard and
    sliced inference.
  prefs: []
  type: TYPE_NORMAL
- en: Citations and Acknowledgments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you use SAHI in your research or development work, please cite the original
    SAHI paper and acknowledge the authors:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We extend our thanks to the SAHI research group for creating and maintaining
    this invaluable resource for the computer vision community. For more information
    about SAHI and its creators, visit the [SAHI GitHub repository](https://github.com/obss/sahi).
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How can I integrate YOLOv8 with SAHI for sliced inference in object detection?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Integrating Ultralytics YOLOv8 with SAHI (Slicing Aided Hyper Inference) for
    sliced inference optimizes your object detection tasks on high-resolution images
    by partitioning them into manageable slices. This approach improves memory usage
    and ensures high detection accuracy. To get started, you need to install the ultralytics
    and sahi libraries:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, download a YOLOv8 model and test images:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: For more detailed instructions, refer to our Sliced Inference guide.
  prefs: []
  type: TYPE_NORMAL
- en: Why should I use SAHI with YOLOv8 for object detection on large images?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Using SAHI with Ultralytics YOLOv8 for object detection on large images offers
    several benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reduced Computational Burden**: Smaller slices are faster to process and
    consume less memory, making it feasible to run high-quality detections on hardware
    with limited resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Maintained Detection Accuracy**: SAHI uses intelligent algorithms to merge
    overlapping boxes, preserving the detection quality.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enhanced Scalability**: By scaling object detection tasks across different
    image sizes and resolutions, SAHI becomes ideal for various applications, such
    as satellite imagery analysis and medical diagnostics.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn more about the benefits of sliced inference in our documentation.
  prefs: []
  type: TYPE_NORMAL
- en: Can I visualize prediction results when using YOLOv8 with SAHI?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Yes, you can visualize prediction results when using YOLOv8 with SAHI. Here''s
    how you can export and visualize the results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: This command will save the visualized predictions to the specified directory
    and you can then load the image to view it in your notebook or application. For
    a detailed guide, check out the Standard Inference section.
  prefs: []
  type: TYPE_NORMAL
- en: What features does SAHI offer for improving YOLOv8 object detection?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'SAHI (Slicing Aided Hyper Inference) offers several features that complement
    Ultralytics YOLOv8 for object detection:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Seamless Integration**: SAHI easily integrates with YOLO models, requiring
    minimal code adjustments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource Efficiency**: It partitions large images into smaller slices, which
    optimizes memory usage and speed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**High Accuracy**: By effectively merging overlapping detection boxes during
    the stitching process, SAHI maintains high detection accuracy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a deeper understanding, read about SAHI's key features.
  prefs: []
  type: TYPE_NORMAL
- en: How do I handle large-scale inference projects using YOLOv8 and SAHI?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To handle large-scale inference projects using YOLOv8 and SAHI, follow these
    best practices:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Install Required Libraries**: Ensure that you have the latest versions of
    ultralytics and sahi.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Configure Sliced Inference**: Determine the optimal slice dimensions and
    overlap ratios for your specific project.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Run Batch Predictions**: Use SAHI''s capabilities to perform batch predictions
    on a directory of images, which improves efficiency.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Example for batch prediction:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: For more detailed steps, visit our section on Batch Prediction.
  prefs: []
  type: TYPE_NORMAL
