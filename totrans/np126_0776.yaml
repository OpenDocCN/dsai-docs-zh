- en: numpy.ma.argsort
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.argsort.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.argsort.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return an ndarray of indices that sort the array along the specified axis. Masked
    values are filled beforehand to *fill_value*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to sort. If None, the default, the flattened array is used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.13.0: Previously, the default was documented to be -1,
    but that was in error. At some future date, the default will change to -1, as
    originally intended. Until then, the axis should be given explicitly when `arr.ndim
    > 1`, to avoid a FutureWarning.'
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**{‘quicksort’, ‘mergesort’, ‘heapsort’, ‘stable’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The sorting algorithm used.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**list, optional'
  prefs: []
  type: TYPE_NORMAL
- en: When *a* is an array with fields defined, this argument specifies which fields
    to compare first, second, etc. Not all fields need be specified.
  prefs: []
  type: TYPE_NORMAL
- en: '**endwith**{True, False}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether missing values (if any) should be treated as the largest values (True)
    or the smallest values (False) When the array contains unmasked values at the
    same extremes of the datatype, the ordering of these values and the masked values
    is undefined.
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**scalar or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value used internally for the masked values. If `fill_value` is not None, it
    supersedes `endwith`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**index_array**ndarray, int'
  prefs: []
  type: TYPE_NORMAL
- en: Array of indices that sort *a* along the specified axis. In other words, `a[index_array]`
    yields a sorted *a*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ma.MaskedArray.sort`](numpy.ma.MaskedArray.sort.html#numpy.ma.MaskedArray.sort
    "numpy.ma.MaskedArray.sort")'
  prefs: []
  type: TYPE_NORMAL
- en: Describes sorting algorithms used.
  prefs: []
  type: TYPE_NORMAL
- en: '[`lexsort`](numpy.lexsort.html#numpy.lexsort "numpy.lexsort")'
  prefs: []
  type: TYPE_NORMAL
- en: Indirect stable sort with multiple keys.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.ndarray.sort`](numpy.ndarray.sort.html#numpy.ndarray.sort "numpy.ndarray.sort")'
  prefs: []
  type: TYPE_NORMAL
- en: Inplace sort.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See [`sort`](numpy.sort.html#numpy.sort "numpy.sort") for notes on the different
    sorting algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
