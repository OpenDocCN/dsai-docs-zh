["```py\nscipy.special.huber(delta, r, out=None) = <ufunc 'huber'>\n```", "```py\n>>> import numpy as np\n>>> from scipy.special import huber\n>>> import matplotlib.pyplot as plt \n```", "```py\n>>> huber(1., 2.)\n1.5 \n```", "```py\n>>> huber([1., 3., 5.], 4.)\narray([3.5, 7.5, 8\\. ]) \n```", "```py\n>>> huber(2., np.array([1., 1.5, 3.]))\narray([0.5  , 1.125, 4\\.   ]) \n```", "```py\n>>> r = np.array([1., 2.5, 8., 10.])\n>>> deltas = np.array([[1.], [5.], [9.]])\n>>> print(r.shape, deltas.shape)\n(4,) (3, 1) \n```", "```py\n>>> huber(deltas, r)\narray([[ 0.5  ,  2\\.   ,  7.5  ,  9.5  ],\n [ 0.5  ,  3.125, 27.5  , 37.5  ],\n [ 0.5  ,  3.125, 32\\.   , 49.5  ]]) \n```", "```py\n>>> x = np.linspace(-4, 4, 500)\n>>> deltas = [1, 2, 3]\n>>> linestyles = [\"dashed\", \"dotted\", \"dashdot\"]\n>>> fig, ax = plt.subplots()\n>>> combined_plot_parameters = list(zip(deltas, linestyles))\n>>> for delta, style in combined_plot_parameters:\n...     ax.plot(x, huber(delta, x), label=f\"$\\delta={delta}$\", ls=style)\n>>> ax.legend(loc=\"upper center\")\n>>> ax.set_xlabel(\"$x$\")\n>>> ax.set_title(\"Huber loss function $h_{\\delta}(x)$\")\n>>> ax.set_xlim(-4, 4)\n>>> ax.set_ylim(0, 8)\n>>> plt.show() \n```"]