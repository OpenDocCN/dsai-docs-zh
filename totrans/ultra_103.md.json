["```py\n`nvidia-smi` \n```", "```py\n`# Add NVIDIA package repositories curl  -s  -L  https://nvidia.github.io/nvidia-docker/gpgkey  |  sudo  apt-key  add  - distribution=$(lsb_release  -cs) curl  -s  -L  https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list  |  sudo  tee  /etc/apt/sources.list.d/nvidia-docker.list  # Install NVIDIA Docker runtime sudo  apt-get  update sudo  apt-get  install  -y  nvidia-docker2  # Restart Docker service to apply changes sudo  systemctl  restart  docker` \n```", "```py\n`docker  info  |  grep  -i  runtime` \n```", "```py\n`# Set image name as a variable t=ultralytics/ultralytics:latest  # Pull the latest Ultralytics image from Docker Hub sudo  docker  pull  $t` \n```", "```py\n`# Run with all GPUs sudo  docker  run  -it  --ipc=host  $t` \n```", "```py\n`# Run with all GPUs sudo  docker  run  -it  --ipc=host  --gpus  all  $t  # Run specifying which GPUs to use sudo  docker  run  -it  --ipc=host  --gpus  '\"device=2,3\"'  $t` \n```", "```py\n`# Run with all GPUs sudo  docker  run  -it  --ipc=host  $t` \n```", "```py\n`# Run with all GPUs sudo  docker  run  -it  --ipc=host  --gpus  all  $t  # Run specifying which GPUs to use sudo  docker  run  -it  --ipc=host  --gpus  '\"device=2,3\"'  $t` \n```", "```py\n`# Mount a local directory into the container sudo  docker  run  -it  --ipc=host  --gpus  all  -v  /path/on/host:/path/in/container  $t` \n```", "```py\n`env  |  grep  -E  -i  'x11|xorg|wayland'` \n```", "```py\n``If you're using GPUs, you can add the `--gpus all` flag to the command.`` \n```", "```py\n`xhost  +local:docker  &&  docker  run  -e  DISPLAY=$DISPLAY  \\ -v  /tmp/.X11-unix:/tmp/.X11-unix  \\ -v  ~/.Xauthority:/root/.Xauthority  \\ -it  --ipc=host  $t` \n```", "```py\n`xhost  +local:docker  &&  docker  run  -e  DISPLAY=$DISPLAY  \\ -v  $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY  \\ --net=host  -it  --ipc=host  $t` \n```", "```py\n`yolo  predict  model=yolov8n.pt  show=True` \n```", "```py\n`xhost  -local:docker` \n```", "```py\n`sudo  docker  pull  ultralytics/ultralytics:latest` \n```", "```py\n`sudo  docker  run  -it  --ipc=host  --gpus  all  ultralytics/ultralytics:latest` \n```", "```py\n`xhost  +local:docker  &&  docker  run  -e  DISPLAY=$DISPLAY  \\ -v  /tmp/.X11-unix:/tmp/.X11-unix  \\ -v  ~/.Xauthority:/root/.Xauthority  \\ -it  --ipc=host  ultralytics/ultralytics:latest` \n```", "```py\n`xhost  +local:docker  &&  docker  run  -e  DISPLAY=$DISPLAY  \\ -v  $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY  \\ --net=host  -it  --ipc=host  ultralytics/ultralytics:latest` \n```", "```py\n`sudo  docker  run  -it  --ipc=host  --gpus  all  -v  /path/on/host:/path/in/container  ultralytics/ultralytics:latest` \n```"]