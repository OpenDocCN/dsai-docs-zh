- en: scipy.signal.lp2hp_zpk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lp2hp_zpk.html#scipy.signal.lp2hp_zpk](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lp2hp_zpk.html#scipy.signal.lp2hp_zpk)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Transform a lowpass filter prototype to a highpass filter.
  prefs: []
  type: TYPE_NORMAL
- en: Return an analog high-pass filter with cutoff frequency *wo* from an analog
    low-pass filter prototype with unity cutoff frequency, using zeros, poles, and
    gain (‘zpk’) representation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Zeros of the analog filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**p**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Poles of the analog filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**k**float'
  prefs: []
  type: TYPE_NORMAL
- en: System gain of the analog filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**wo**float'
  prefs: []
  type: TYPE_NORMAL
- en: Desired cutoff, as angular frequency (e.g., rad/s). Defaults to no change.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Zeros of the transformed high-pass filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**p**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Poles of the transformed high-pass filter transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**k**float'
  prefs: []
  type: TYPE_NORMAL
- en: System gain of the transformed high-pass filter.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`lp2lp_zpk`](scipy.signal.lp2lp_zpk.html#scipy.signal.lp2lp_zpk "scipy.signal.lp2lp_zpk"),
    [`lp2bp_zpk`](scipy.signal.lp2bp_zpk.html#scipy.signal.lp2bp_zpk "scipy.signal.lp2bp_zpk"),
    [`lp2bs_zpk`](scipy.signal.lp2bs_zpk.html#scipy.signal.lp2bs_zpk "scipy.signal.lp2bs_zpk"),
    [`bilinear`](scipy.signal.bilinear.html#scipy.signal.bilinear "scipy.signal.bilinear")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`lp2hp`](scipy.signal.lp2hp.html#scipy.signal.lp2hp "scipy.signal.lp2hp")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This is derived from the s-plane substitution
  prefs: []
  type: TYPE_NORMAL
- en: \[s \rightarrow \frac{\omega_0}{s}\]
  prefs: []
  type: TYPE_NORMAL
- en: This maintains symmetry of the lowpass and highpass responses on a logarithmic
    scale.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.1.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Use the ‘zpk’ (Zero-Pole-Gain) representation of a lowpass filter to transform
    it to a highpass filter with a cutoff frequency wo.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
