- en: scipy.stats.rice
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.rice.html#scipy.stats.rice](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.rice.html#scipy.stats.rice)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A Rice continuous random variable.
  prefs: []
  type: TYPE_NORMAL
- en: As an instance of the [`rv_continuous`](scipy.stats.rv_continuous.html#scipy.stats.rv_continuous
    "scipy.stats.rv_continuous") class, [`rice`](#scipy.stats.rice "scipy.stats.rice")
    object inherits from it a collection of generic methods (see below for the full
    list), and completes them with details specific for this particular distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The probability density function for [`rice`](#scipy.stats.rice "scipy.stats.rice")
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[f(x, b) = x \exp(- \frac{x^2 + b^2}{2}) I_0(x b)\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(x >= 0\), \(b > 0\). \(I_0\) is the modified Bessel function of order
    zero ([`scipy.special.i0`](scipy.special.i0.html#scipy.special.i0 "scipy.special.i0")).
  prefs: []
  type: TYPE_NORMAL
- en: '[`rice`](#scipy.stats.rice "scipy.stats.rice") takes `b` as a shape parameter
    for \(b\).'
  prefs: []
  type: TYPE_NORMAL
- en: The probability density above is defined in the “standardized” form. To shift
    and/or scale the distribution use the `loc` and `scale` parameters. Specifically,
    `rice.pdf(x, b, loc, scale)` is identically equivalent to `rice.pdf(y, b) / scale`
    with `y = (x - loc) / scale`. Note that shifting the location of a distribution
    does not make it a “noncentral” distribution; noncentral generalizations of some
    distributions are available in separate classes.
  prefs: []
  type: TYPE_NORMAL
- en: The Rice distribution describes the length, \(r\), of a 2-D vector with components
    \((U+u, V+v)\), where \(U, V\) are constant, \(u, v\) are independent Gaussian
    random variables with standard deviation \(s\). Let \(R = \sqrt{U^2 + V^2}\).
    Then the pdf of \(r\) is `rice.pdf(x, R/s, scale=s)`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the first four moments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Display the probability density function (`pdf`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, the distribution object can be called (as a function) to fix
    the shape, location and scale parameters. This returns a “frozen” RV object holding
    the given parameters fixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Freeze the distribution and display the frozen `pdf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Check accuracy of `cdf` and `ppf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate random numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'And compare the histogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-rice-1.png](../Images/1bd3cb2e601b6a5fc889087829c31040.png)'
  prefs: []
  type: TYPE_IMG
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **rvs(b, loc=0, scale=1, size=1, random_state=None)** | Random variates.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **pdf(x, b, loc=0, scale=1)** | Probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(x, b, loc=0, scale=1)** | Log of the probability density function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **cdf(x, b, loc=0, scale=1)** | Cumulative distribution function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logcdf(x, b, loc=0, scale=1)** | Log of the cumulative distribution function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **sf(x, b, loc=0, scale=1)** | Survival function (also defined as `1 - cdf`,
    but *sf* is sometimes more accurate). |'
  prefs: []
  type: TYPE_TB
- en: '| **logsf(x, b, loc=0, scale=1)** | Log of the survival function. |'
  prefs: []
  type: TYPE_TB
- en: '| **ppf(q, b, loc=0, scale=1)** | Percent point function (inverse of `cdf`
    — percentiles). |'
  prefs: []
  type: TYPE_TB
- en: '| **isf(q, b, loc=0, scale=1)** | Inverse survival function (inverse of `sf`).
    |'
  prefs: []
  type: TYPE_TB
- en: '| **moment(order, b, loc=0, scale=1)** | Non-central moment of the specified
    order. |'
  prefs: []
  type: TYPE_TB
- en: '| **stats(b, loc=0, scale=1, moments=’mv’)** | Mean(‘m’), variance(‘v’), skew(‘s’),
    and/or kurtosis(‘k’). |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(b, loc=0, scale=1)** | (Differential) entropy of the RV. |'
  prefs: []
  type: TYPE_TB
- en: '| **fit(data)** | Parameter estimates for generic data. See [scipy.stats.rv_continuous.fit](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.fit.html#scipy.stats.rv_continuous.fit)
    for detailed documentation of the keyword arguments. |'
  prefs: []
  type: TYPE_TB
- en: '| **expect(func, args=(b,), loc=0, scale=1, lb=None, ub=None, conditional=False,
    **kwds)** | Expected value of a function (of one argument) with respect to the
    distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **median(b, loc=0, scale=1)** | Median of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **mean(b, loc=0, scale=1)** | Mean of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **var(b, loc=0, scale=1)** | Variance of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **std(b, loc=0, scale=1)** | Standard deviation of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **interval(confidence, b, loc=0, scale=1)** | Confidence interval with equal
    areas around the median. |'
  prefs: []
  type: TYPE_TB
