- en: numpy.ma.MaskedArray.filled
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.filled.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.filled.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return a copy of self, with masked values filled with a given value. **However**,
    if there are no masked values to fill, self will be returned instead as an ndarray.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The value to use for invalid entries. Can be scalar or non-scalar. If non-scalar,
    the resulting ndarray must be broadcastable over input array. Default is None,
    in which case, the [`fill_value`](../maskedarray.baseclass.html#numpy.ma.MaskedArray.fill_value
    "numpy.ma.MaskedArray.fill_value") attribute of the array is used instead.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**filled_array**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: A copy of `self` with invalid entries replaced by *fill_value* (be it the function
    argument or the attribute of `self`), or `self` itself as an ndarray if there
    are no invalid entries to be replaced.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The result is **not** a MaskedArray!
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Subclassing is preserved. This means that if, e.g., the data part of the masked
    array is a recarray, [`filled`](#numpy.ma.MaskedArray.filled "numpy.ma.MaskedArray.filled")
    returns a recarray:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
