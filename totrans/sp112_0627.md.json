["```py\nscipy.signal.zpk2sos(z, p, k, pairing=None, *, analog=False)\n```", "```py\n>>> from scipy import signal\n>>> import numpy as np\n>>> z, p, k = signal.ellip(6, 0.087, 90, 1000/(0.5*8000), output='zpk') \n```", "```py\n>>> sos = signal.zpk2sos(z, p, k) \n```", "```py\n>>> sos[:, :3]\narray([[0.0014152 , 0.00248677, 0.0014152 ],\n [1\\.        , 0.72976874, 1\\.        ],\n [1\\.        , 0.17607852, 1\\.        ]]) \n```", "```py\n>>> sos[:, 3:]\narray([[ 1\\.        , -1.32544025,  0.46989976],\n [ 1\\.        , -1.26118294,  0.62625924],\n [ 1\\.        , -1.2570723 ,  0.8619958 ]]) \n```", "```py\n>>> z1 = np.array([-1, -0.5-0.5j, -0.5+0.5j])\n>>> p1 = np.array([0.75, 0.8+0.1j, 0.8-0.1j]) \n```", "```py\n>>> signal.zpk2sos(z1, p1, 1)\narray([[ 1\\.  ,  1\\.  ,  0.5 ,  1\\.  , -0.75,  0\\.  ],\n [ 1\\.  ,  1\\.  ,  0\\.  ,  1\\.  , -1.6 ,  0.65]]) \n```", "```py\n>>> signal.zpk2sos(z1, p1, 1, pairing='keep_odd')\narray([[ 1\\.  ,  1\\.  ,  0\\.  ,  1\\.  , -0.75,  0\\.  ],\n [ 1\\.  ,  1\\.  ,  0.5 ,  1\\.  , -1.6 ,  0.65]]) \n```", "```py\n>>> signal.zpk2sos(z1, p1, 1, pairing='minimal')\narray([[ 0\\.  ,  1\\.  ,  1\\.  ,  0\\.  ,  1\\.  , -0.75],\n [ 1\\.  ,  1\\.  ,  0.5 ,  1\\.  , -1.6 ,  0.65]]) \n```"]