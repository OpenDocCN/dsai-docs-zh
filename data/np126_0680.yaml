- en: numpy.ma.vstack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ma.vstack
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.vstack.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.vstack.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.vstack.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.vstack.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: vstack
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: vstack
- en: Stack arrays in sequence vertically (row wise).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着序列垂直（按行）堆叠数组。
- en: This is equivalent to concatenation along the first axis after 1-D arrays of
    shape *(N,)* have been reshaped to *(1,N)*. Rebuilds arrays divided by [`vsplit`](numpy.vsplit.html#numpy.vsplit
    "numpy.vsplit").
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当于在将形状为*(N,)*的1-D数组重塑为*(1,N)*后沿第一个轴进行串联。通过[`vsplit`](numpy.vsplit.html#numpy.vsplit
    "numpy.vsplit")重新构建数组。
- en: This function makes most sense for arrays with up to 3 dimensions. For instance,
    for pixel-data with a height (first axis), width (second axis), and r/g/b channels
    (third axis). The functions [`concatenate`](numpy.concatenate.html#numpy.concatenate
    "numpy.concatenate"), [`stack`](numpy.stack.html#numpy.stack "numpy.stack") and
    [`block`](numpy.block.html#numpy.block "numpy.block") provide more general stacking
    and concatenation operations.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数对最多具有3个维度的数组最有意义。例如，对于具有高度（第一个轴）、宽度（第二个轴）和r/g/b通道（第三个轴）的像素数据。函数[`concatenate`](numpy.concatenate.html#numpy.concatenate
    "numpy.concatenate")、[`stack`](numpy.stack.html#numpy.stack "numpy.stack")和[`block`](numpy.block.html#numpy.block
    "numpy.block")提供了更通用的堆叠和串联操作。
- en: '`np.row_stack` is an alias for [`vstack`](numpy.vstack.html#numpy.vstack "numpy.vstack").
    They are the same function.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.row_stack`是[`vstack`](numpy.vstack.html#numpy.vstack "numpy.vstack")的别名。它们是相同的函数。'
- en: 'Parameters:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**tup**sequence of ndarrays'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**元组**ndarrays序列'
- en: The arrays must have the same shape along all but the first axis. 1-D arrays
    must have the same length.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所有轴上的形状必须相同，除了第一个轴。1-D数组必须具有相同的长度。
- en: '**dtype**str or dtype'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据类型**str或dtype'
- en: If provided, the destination array will have this dtype. Cannot be provided
    together with *out*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了，目标数组将具有此数据类型。不能与*out*一起提供。
- en: '**.. versionadded:: 1.24**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**.. 版本新增:: 1.24**'
- en: '**casting**{‘no’, ‘equiv’, ‘safe’, ‘same_kind’, ‘unsafe’}, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**转换**{‘no’, ‘equiv’, ‘safe’, ‘same_kind’, ‘unsafe’}，可选'
- en: Controls what kind of data casting may occur. Defaults to ‘same_kind’.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 控制可能发生的数据转换类型。默认为‘same_kind’。
- en: '**.. versionadded:: 1.24**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**.. 版本新增:: 1.24**'
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**stacked**ndarray'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**堆叠**ndarray'
- en: The array formed by stacking the given arrays, will be at least 2-D.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 由给定数组堆叠而成的数组至少为2-D。
- en: See also
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`concatenate`](numpy.concatenate.html#numpy.concatenate "numpy.concatenate")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`concatenate`](numpy.concatenate.html#numpy.concatenate "numpy.concatenate")'
- en: Join a sequence of arrays along an existing axis.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着现有轴连接一系列数组。
- en: '[`stack`](numpy.stack.html#numpy.stack "numpy.stack")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`stack`](numpy.stack.html#numpy.stack "numpy.stack")'
- en: Join a sequence of arrays along a new axis.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着新轴连接一系列数组。
- en: '[`block`](numpy.block.html#numpy.block "numpy.block")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`block`](numpy.block.html#numpy.block "numpy.block")'
- en: Assemble an nd-array from nested lists of blocks.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 从嵌套块的列表中组装一个nd-array。
- en: '[`hstack`](numpy.hstack.html#numpy.hstack "numpy.hstack")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`hstack`](numpy.hstack.html#numpy.hstack "numpy.hstack")'
- en: Stack arrays in sequence horizontally (column wise).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着序列水平（列）堆叠数组。
- en: '[`dstack`](numpy.dstack.html#numpy.dstack "numpy.dstack")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dstack`](numpy.dstack.html#numpy.dstack "numpy.dstack")'
- en: Stack arrays in sequence depth wise (along third axis).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着第三个轴深度堆叠数组。
- en: '[`column_stack`](numpy.column_stack.html#numpy.column_stack "numpy.column_stack")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`column_stack`](numpy.column_stack.html#numpy.column_stack "numpy.column_stack")'
- en: Stack 1-D arrays as columns into a 2-D array.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 将1-D数组堆叠为列，形成2-D数组。
- en: '[`vsplit`](numpy.vsplit.html#numpy.vsplit "numpy.vsplit")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`vsplit`](numpy.vsplit.html#numpy.vsplit "numpy.vsplit")'
- en: Split an array into multiple sub-arrays vertically (row-wise).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 将数组垂直（按行）分割为多个子数组。
- en: Notes
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The function is applied to both the _data and the _mask, if any.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有的话，该函数将应用于_data和_mask。
- en: Examples
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
