- en: pandas.array
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas 数组
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.array.html](https://pandas.pydata.org/docs/reference/api/pandas.array.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://pandas.pydata.org/docs/reference/api/pandas.array.html](https://pandas.pydata.org/docs/reference/api/pandas.array.html)'
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Create an array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个数组。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**data**Sequence of objects'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**data**对象序列'
- en: The scalars inside data should be instances of the scalar type for dtype. It’s
    expected that data represents a 1-dimensional array of data.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 数据中的标量应该是数据类型的实例。预期数据表示一维数据数组。
- en: When data is an Index or Series, the underlying array will be extracted from
    data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据是索引或 Series 时，将从数据中提取基础数组。
- en: '**dtype**str, np.dtype, or ExtensionDtype, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**str、np.dtype 或者 ExtensionDtype，可选'
- en: The dtype to use for the array. This may be a NumPy dtype or an extension type
    registered with pandas using [`pandas.api.extensions.register_extension_dtype()`](pandas.api.extensions.register_extension_dtype.html#pandas.api.extensions.register_extension_dtype
    "pandas.api.extensions.register_extension_dtype").
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的数据类型。可以是 NumPy 的数据类型或者使用 [`pandas.api.extensions.register_extension_dtype()`](pandas.api.extensions.register_extension_dtype.html#pandas.api.extensions.register_extension_dtype
    "pandas.api.extensions.register_extension_dtype") 注册到 pandas 中的扩展类型。
- en: 'If not specified, there are two possibilities:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定，则有两种可能性：
- en: When data is a [`Series`](pandas.Series.html#pandas.Series "pandas.Series"),
    [`Index`](pandas.Index.html#pandas.Index "pandas.Index"), or `ExtensionArray`,
    the dtype will be taken from the data.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当数据是一个 [`Series`](pandas.Series.html#pandas.Series "pandas.Series")、[`Index`](pandas.Index.html#pandas.Index
    "pandas.Index") 或者 `ExtensionArray` 时，数据类型将从数据中获取。
- en: Otherwise, pandas will attempt to infer the dtype from the data.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 否则，pandas 将尝试从数据中推断数据类型。
- en: Note that when data is a NumPy array, `data.dtype` is *not* used for inferring
    the array type. This is because NumPy cannot represent all the types of data that
    can be held in extension arrays.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当数据是 NumPy 数组时，`data.dtype` *不会* 用于推断数组类型。这是因为 NumPy 无法表示扩展数组中可以保存的所有数据类型。
- en: Currently, pandas will infer an extension dtype for sequences of
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，pandas 会为对象序列推断一个扩展数据类型。
- en: '| Scalar Type | Array Type |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 标量类型 | 数组类型 |'
- en: '| --- | --- |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [`pandas.Interval`](pandas.Interval.html#pandas.Interval "pandas.Interval")
    | [`pandas.arrays.IntervalArray`](pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`pandas.Interval`](pandas.Interval.html#pandas.Interval "pandas.Interval")
    | [`pandas.arrays.IntervalArray`](pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") |'
- en: '| [`pandas.Period`](pandas.Period.html#pandas.Period "pandas.Period") | [`pandas.arrays.PeriodArray`](pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`pandas.Period`](pandas.Period.html#pandas.Period "pandas.Period") | [`pandas.arrays.PeriodArray`](pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") |'
- en: '| [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)") | [`pandas.arrays.DatetimeArray`](pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(在 Python v3.12 中)") | [`pandas.arrays.DatetimeArray`](pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") |'
- en: '| [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(in Python v3.12)") | [`pandas.arrays.TimedeltaArray`](pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray") |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`datetime.timedelta`](https://docs.python.org/3/library/datetime.html#datetime.timedelta
    "(在 Python v3.12 中)") | [`pandas.arrays.TimedeltaArray`](pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray") |'
- en: '| [`int`](https://docs.python.org/3/library/functions.html#int "(in Python
    v3.12)") | [`pandas.arrays.IntegerArray`](pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`int`](https://docs.python.org/3/library/functions.html#int "(在 Python v3.12
    中)") | [`pandas.arrays.IntegerArray`](pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") |'
- en: '| [`float`](https://docs.python.org/3/library/functions.html#float "(in Python
    v3.12)") | [`pandas.arrays.FloatingArray`](pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray") |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`float`](https://docs.python.org/3/library/functions.html#float "(在 Python
    v3.12 中)") | [`pandas.arrays.FloatingArray`](pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray") |'
- en: '| [`str`](https://docs.python.org/3/library/stdtypes.html#str "(in Python v3.12)")
    | [`pandas.arrays.StringArray`](pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") or [`pandas.arrays.ArrowStringArray`](pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray") |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`str`](https://docs.python.org/3/library/stdtypes.html#str "(in Python v3.12)")
    | [`pandas.arrays.StringArray`](pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") 或 [`pandas.arrays.ArrowStringArray`](pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray") |'
- en: '| [`bool`](https://docs.python.org/3/library/functions.html#bool "(in Python
    v3.12)") | [`pandas.arrays.BooleanArray`](pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray") |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`bool`](https://docs.python.org/3/library/functions.html#bool "(in Python
    v3.12)") | [`pandas.arrays.BooleanArray`](pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray") |'
- en: The ExtensionArray created when the scalar type is [`str`](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)") is determined by `pd.options.mode.string_storage` if the
    dtype is not explicitly given.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当 dtype 没有明确给出时，标量类型为 [`str`](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)") 时创建的 ExtensionArray 受 `pd.options.mode.string_storage` 的影响。
- en: For all other cases, NumPy’s usual inference rules will be used.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他所有情况，将使用 NumPy 的通常推理规则。
- en: '**copy**bool, default True'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**copy**bool，默认为 True'
- en: Whether to copy the data, even if not necessary. Depending on the type of data,
    creating the new array may require copying data, even if `copy=False`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 是否复制数据，即使不必要。根据数据类型，即使 `copy=False`，创建新数组也可能需要复制数据。
- en: 'Returns:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: ExtensionArray
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ExtensionArray
- en: The newly created array.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 新创建的数组。
- en: 'Raises:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: ValueError
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: When data is not 1-dimensional.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据不是 1 维时。
- en: See also
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`numpy.array`](https://numpy.org/doc/stable/reference/generated/numpy.array.html#numpy.array
    "(in NumPy v1.26)")'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.array`](https://numpy.org/doc/stable/reference/generated/numpy.array.html#numpy.array
    "(in NumPy v1.26)")'
- en: Construct a NumPy array.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个 NumPy 数组。
- en: '[`Series`](pandas.Series.html#pandas.Series "pandas.Series")'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series`](pandas.Series.html#pandas.Series "pandas.Series")'
- en: Construct a pandas Series.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个 Pandas Series。
- en: '[`Index`](pandas.Index.html#pandas.Index "pandas.Index")'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Index`](pandas.Index.html#pandas.Index "pandas.Index")'
- en: Construct a pandas Index.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个 pandas Index。
- en: '[`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray")'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray")'
- en: ExtensionArray wrapping a NumPy array.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 包装 NumPy 数组的 ExtensionArray。
- en: '[`Series.array`](pandas.Series.array.html#pandas.Series.array "pandas.Series.array")'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.array`](pandas.Series.array.html#pandas.Series.array "pandas.Series.array")'
- en: Extract the array stored within a Series.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Series 中提取存储的数组。
- en: Notes
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Omitting the dtype argument means pandas will attempt to infer the best array
    type from the values in the data. As new array types are added by pandas and 3rd
    party libraries, the “best” array type may change. We recommend specifying dtype
    to ensure that
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 省略 dtype 参数意味着 Pandas 将尝试从数据中推断出最佳数组类型。随着 Pandas 和第三方库添加新的数组类型，"最佳" 数组类型可能会更改。我们建议指定
    dtype 以确保
- en: the correct array type for the data is returned
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回数据的正确数组类型
- en: the returned array type doesn’t change as new extension types are added by pandas
    and third-party libraries
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回的数组类型不会随着 pandas 和第三方库添加新的扩展类型而改变
- en: Additionally, if the underlying memory representation of the returned array
    matters, we recommend specifying the dtype as a concrete object rather than a
    string alias or allowing it to be inferred. For example, a future version of pandas
    or a 3rd-party library may include a dedicated ExtensionArray for string data.
    In this event, the following would no longer return a [`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") backed by a NumPy array.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，如果返回数组的底层内存表示很重要，则建议将 dtype 指定为具体对象，而不是字符串别名或允许推断。例如，Pandas 的未来版本或第三方库可能会包含专用于字符串数据的
    ExtensionArray。在这种情况下，以下内容将不再返回由 NumPy 数组支持的 [`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray")。
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This would instead return the new ExtensionArray dedicated for string data.
    If you really need the new array to be backed by a NumPy array, specify that in
    the dtype.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，将返回专用于字符串数据的新 ExtensionArray。如果您真的需要新数组由 NumPy 数组支持，请在 dtype 中指定。
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Finally, Pandas has arrays that mostly overlap with NumPy
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Pandas 的数组与 NumPy 大部分重叠。
- en: '[`arrays.DatetimeArray`](pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")'
  id: totrans-55
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`arrays.DatetimeArray`](pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")'
- en: ''
  id: totrans-56
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-57
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`arrays.TimedeltaArray`](pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")'
  id: totrans-58
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`arrays.TimedeltaArray`](pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")'
- en: When data with a `datetime64[ns]` or `timedelta64[ns]` dtype is passed, pandas
    will always return a `DatetimeArray` or `TimedeltaArray` rather than a `NumpyExtensionArray`.
    This is for symmetry with the case of timezone-aware data, which NumPy does not
    natively support.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当传递了`datetime64[ns]`或`timedelta64[ns]`数据类型的数据时，pandas将始终返回`DatetimeArray`或`TimedeltaArray`而不是`NumpyExtensionArray`。这是为了与有时区意识的数据情况保持对称，NumPy本身不支持这种情况。
- en: '[PRE3]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Examples
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: If a dtype is not specified, pandas will infer the best dtype from the values.
    See the description of dtype for the types pandas infers for.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定dtype，pandas将从值中推断出最佳dtype。查看pandas为其推断的类型的dtype的描述。
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You can use the string alias for dtype
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用dtype的字符串别名。
- en: '[PRE11]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Or specify the actual dtype
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 或者指定实际的数据类型。
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If pandas does not infer a dedicated extension type a [`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray") is returned.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果pandas没有推断出专用的扩展类型，将返回[`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray")。
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: As mentioned in the “Notes” section, new extension types may be added in the
    future (by pandas or 3rd party libraries), causing the return value to no longer
    be a [`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray"). Specify the dtype as a NumPy dtype if you
    need to ensure there’s no future change in behavior.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如“注意”部分所述，未来可能会添加新的扩展类型（由pandas或第三方库添加），这将导致返回值不再是[`arrays.NumpyExtensionArray`](pandas.arrays.NumpyExtensionArray.html#pandas.arrays.NumpyExtensionArray
    "pandas.arrays.NumpyExtensionArray")。如果您需要确保未来行为没有更改，请将dtype指定为NumPy dtype。
- en: '[PRE14]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: data must be 1-dimensional. A ValueError is raised when the input has the wrong
    dimensionality.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 数据必须是1维的。当输入的维度错误时，将引发ValueError。
- en: '[PRE15]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
