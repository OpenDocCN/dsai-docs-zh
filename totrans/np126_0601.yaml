- en: numpy.allclose
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.allclose.html](https://numpy.org/doc/1.26/reference/generated/numpy.allclose.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Returns True if two arrays are element-wise equal within a tolerance.
  prefs: []
  type: TYPE_NORMAL
- en: The tolerance values are positive, typically very small numbers. The relative
    difference (*rtol* * abs(*b*)) and the absolute difference *atol* are added together
    to compare against the absolute difference between *a* and *b*.
  prefs: []
  type: TYPE_NORMAL
- en: NaNs are treated as equal if they are in the same place and if `equal_nan=True`.
    Infs are treated as equal if they are in the same place and of the same sign in
    both arrays.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a, b**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input arrays to compare.
  prefs: []
  type: TYPE_NORMAL
- en: '**rtol**float'
  prefs: []
  type: TYPE_NORMAL
- en: The relative tolerance parameter (see Notes).
  prefs: []
  type: TYPE_NORMAL
- en: '**atol**float'
  prefs: []
  type: TYPE_NORMAL
- en: The absolute tolerance parameter (see Notes).
  prefs: []
  type: TYPE_NORMAL
- en: '**equal_nan**bool'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to compare NaN’s as equal. If True, NaN’s in *a* will be considered
    equal to NaN’s in *b* in the output array.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**allclose**bool'
  prefs: []
  type: TYPE_NORMAL
- en: Returns True if the two arrays are equal within the given tolerance; False otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`isclose`](numpy.isclose.html#numpy.isclose "numpy.isclose"), [`all`](numpy.all.html#numpy.all
    "numpy.all"), [`any`](numpy.any.html#numpy.any "numpy.any"), [`equal`](numpy.equal.html#numpy.equal
    "numpy.equal")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If the following equation is element-wise True, then allclose returns True.
  prefs: []
  type: TYPE_NORMAL
- en: absolute(*a* - *b*) <= (*atol* + *rtol* * absolute(*b*))
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The above equation is not symmetric in *a* and *b*, so that `allclose(a, b)`
    might be different from `allclose(b, a)` in some rare cases.
  prefs: []
  type: TYPE_NORMAL
- en: The comparison of *a* and *b* uses standard broadcasting, which means that *a*
    and *b* need not have the same shape in order for `allclose(a, b)` to evaluate
    to True. The same is true for [`equal`](numpy.equal.html#numpy.equal "numpy.equal")
    but not [`array_equal`](numpy.array_equal.html#numpy.array_equal "numpy.array_equal").
  prefs: []
  type: TYPE_NORMAL
- en: '[`allclose`](#numpy.allclose "numpy.allclose") is not defined for non-numeric
    data types. *bool* is considered a numeric data-type for this purpose.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
