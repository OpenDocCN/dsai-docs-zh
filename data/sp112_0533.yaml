- en: scipy.signal.savgol_filter
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.savgol_filter
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.savgol_filter.html#scipy.signal.savgol_filter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.savgol_filter.html#scipy.signal.savgol_filter)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.savgol_filter.html#scipy.signal.savgol_filter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.savgol_filter.html#scipy.signal.savgol_filter)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Apply a Savitzky-Golay filter to an array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对数组应用Savitzky-Golay滤波器。
- en: This is a 1-D filter. If *x* has dimension greater than 1, *axis* determines
    the axis along which the filter is applied.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个1-D滤波器。如果*x*的维度大于1，则*axis*确定应用滤波器的轴。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: The data to be filtered. If *x* is not a single or double precision floating
    point array, it will be converted to type `numpy.float64` before filtering.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要过滤的数据。如果*x*不是单精度或双精度浮点数组，则在过滤之前将其转换为`numpy.float64`类型。
- en: '**window_length**int'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**window_length**int'
- en: The length of the filter window (i.e., the number of coefficients). If *mode*
    is ‘interp’, *window_length* must be less than or equal to the size of *x*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 滤波窗口的长度（即系数的数量）。如果*mode*为‘interp’，*window_length*必须小于或等于*x*的大小。
- en: '**polyorder**int'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**polyorder**int'
- en: The order of the polynomial used to fit the samples. *polyorder* must be less
    than *window_length*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 用于拟合样本的多项式的阶数。*polyorder*必须小于*window_length*。
- en: '**deriv**int, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**deriv**int，可选'
- en: The order of the derivative to compute. This must be a nonnegative integer.
    The default is 0, which means to filter the data without differentiating.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算的导数阶数。这必须是非负整数。默认值为0，表示在不进行微分的情况下过滤数据。
- en: '**delta**float, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**delta**float，可选'
- en: The spacing of the samples to which the filter will be applied. This is only
    used if deriv > 0\. Default is 1.0.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 应用过滤器的样本间距。仅在deriv > 0时使用。默认值为1.0。
- en: '**axis**int, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int，可选'
- en: The axis of the array *x* along which the filter is to be applied. Default is
    -1.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要应用过滤器的数组*x*的轴。默认值为-1。
- en: '**mode**str, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**str，可选'
- en: Must be ‘mirror’, ‘constant’, ‘nearest’, ‘wrap’ or ‘interp’. This determines
    the type of extension to use for the padded signal to which the filter is applied.
    When *mode* is ‘constant’, the padding value is given by *cval*. See the Notes
    for more details on ‘mirror’, ‘constant’, ‘wrap’, and ‘nearest’. When the ‘interp’
    mode is selected (the default), no extension is used. Instead, a degree *polyorder*
    polynomial is fit to the last *window_length* values of the edges, and this polynomial
    is used to evaluate the last *window_length // 2* output values.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 必须为‘mirror’、‘constant’、‘nearest’、‘wrap’或‘interp’。这决定了要用于填充信号的填充类型。当*mode*为‘constant’时，填充值由*cval*给出。有关‘mirror’、‘constant’、‘wrap’和‘nearest’的更多详细信息，请参阅注释。当选择‘interp’模式（默认情况下）时，不使用扩展。相反，对边缘的最后*window_length*个值拟合一个*polyorder*次多项式，并使用此多项式来评估最后*window_length
    // 2*个输出值。
- en: '**cval**scalar, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**cval**scalar，可选'
- en: Value to fill past the edges of the input if *mode* is ‘constant’. Default is
    0.0.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*mode*为‘constant’，则在输入的边缘之外填充的值。默认值为0.0。
- en: 'Returns:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**ndarray, same shape as *x*'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**ndarray，与*x*相同的形状'
- en: The filtered data.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤后的数据。
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`savgol_coeffs`](scipy.signal.savgol_coeffs.html#scipy.signal.savgol_coeffs
    "scipy.signal.savgol_coeffs")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`savgol_coeffs`](scipy.signal.savgol_coeffs.html#scipy.signal.savgol_coeffs
    "scipy.signal.savgol_coeffs")'
- en: Notes
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'Details on the *mode* options:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*mode*选项的详细信息：'
- en: '‘mirror’:'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ‘mirror’：
- en: ''
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Repeats the values at the edges in reverse order. The value closest to the edge
    is not included.
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 以相反顺序重复边缘处的值。不包括最接近边缘的值。
- en: ''
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '‘nearest’:'
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ‘nearest’：
- en: ''
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The extension contains the nearest input value.
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 扩展包含最接近的输入值。
- en: ''
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '‘constant’:'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ‘constant’：
- en: ''
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The extension contains the value given by the *cval* argument.
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 扩展包含由*cval*参数给出的值。
- en: ''
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '‘wrap’:'
  id: totrans-41
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ‘wrap’：
- en: ''
  id: totrans-42
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The extension contains the values from the other end of the array.
  id: totrans-43
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 扩展包含数组另一端的值。
- en: 'For example, if the input is [1, 2, 3, 4, 5, 6, 7, 8], and *window_length*
    is 7, the following shows the extended data for the various *mode* options (assuming
    *cval* is 0):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果输入为[1, 2, 3, 4, 5, 6, 7, 8]，*window_length*为7，则以下显示了各种*mode*选项的扩展数据（假设*cval*为0）：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: New in version 0.14.0.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本0.14.0开始。
- en: Examples
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Filter with a window length of 5 and a degree 2 polynomial. Use the defaults
    for all other parameters.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用窗口长度为5和二次多项式进行滤波。对所有其他参数使用默认值。
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Note that the last five values in x are samples of a parabola, so when mode=’interp’
    (the default) is used with polyorder=2, the last three values are unchanged. Compare
    that to, for example, *mode=’nearest’*:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，x 中的最后五个值是抛物线的样本，因此当 mode=’interp’（默认情况）与 polyorder=2 结合使用时，最后三个值保持不变。与 *mode=’nearest’*
    相比，例如：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
