- en: scipy.special.log_expit
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.special.log_expit
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.log_expit.html#scipy.special.log_expit](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.log_expit.html#scipy.special.log_expit)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.log_expit.html#scipy.special.log_expit](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.log_expit.html#scipy.special.log_expit)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Logarithm of the logistic sigmoid function.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑 sigmoid 函数的对数。
- en: The SciPy implementation of the logistic sigmoid function is [`scipy.special.expit`](scipy.special.expit.html#scipy.special.expit
    "scipy.special.expit"), so this function is called `log_expit`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy 的逻辑 sigmoid 函数的实现是 [`scipy.special.expit`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.expit.html#scipy.special.expit)，因此这个函数被称为
    `log_expit`。
- en: The function is mathematically equivalent to `log(expit(x))`, but is formulated
    to avoid loss of precision for inputs with large (positive or negative) magnitude.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数在数学上等价于 `log(expit(x))`，但其表达式被设计为避免在输入具有大的（正或负）幅度时失去精度。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** 数组样式'
- en: The values to apply `log_expit` to element-wise.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要对每个元素应用 `log_expit` 的值。
- en: '**out**ndarray, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**out** ndarray，可选'
- en: Optional output array for the function results
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 函数结果的可选输出数组
- en: 'Returns:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**scalar or ndarray'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**out** 标量或 ndarray'
- en: The computed values, an ndarray of the same shape as `x`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 计算出的值，一个与 `x` 形状相同的 ndarray。
- en: See also
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`expit`](scipy.special.expit.html#scipy.special.expit "scipy.special.expit")'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`expit`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.expit.html#scipy.special.expit)'
- en: Notes
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: As a ufunc, `log_expit` takes a number of optional keyword arguments. For more
    information see [ufuncs](https://docs.scipy.org/doc/numpy/reference/ufuncs.html)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个 ufunc，`log_expit` 接受多个可选的关键字参数。更多信息请参见 [ufuncs](https://docs.scipy.org/doc/numpy/reference/ufuncs.html)
- en: New in version 1.8.0.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.8.0 中引入。
- en: Examples
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Large negative values:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 大的负值：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that `expit(-1000)` returns 0, so the naive implementation `log(expit(-1000))`
    return `-inf`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`expit(-1000)` 返回 0，所以朴素实现 `log(expit(-1000))` 返回 `-inf`。
- en: 'Large positive values:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 大的正值：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Compare that to the naive implementation:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 将其与朴素实现进行比较：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The first value is accurate to only 3 digits, and the larger inputs lose all
    precision and return 0.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个值只准确到小数点后三位，更大的输入则失去所有精度并返回 0。
