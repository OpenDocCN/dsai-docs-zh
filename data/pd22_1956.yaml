- en: Version 0.19.0 (October 2, 2016)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 版本 0.19.0（2016年10月2日）
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.19.0.html](https://pandas.pydata.org/docs/whatsnew/v0.19.0.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.19.0.html](https://pandas.pydata.org/docs/whatsnew/v0.19.0.html)
- en: This is a major release from 0.18.1 and includes number of API changes, several
    new features, enhancements, and performance improvements along with a large number
    of bug fixes. We recommend that all users upgrade to this version.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从 0.18.1 开始的一个重大发布，包括许多 API 更改，几个新功能，增强功能和性能改进以及大量的错误修复。我们建议所有用户升级到此版本。
- en: 'Highlights include:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 主要亮点包括：
- en: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") for asof-style time-series joining, see [here](#whatsnew-0190-enhancements-asof-merge)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") 用于 asof 风格的时间序列连接，请参见[此处](#whatsnew-0190-enhancements-asof-merge)'
- en: '`.rolling()` is now time-series aware, see [here](#whatsnew-0190-enhancements-rolling-ts)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.rolling()` 现在具有时间序列的意识，请参见[此处](#whatsnew-0190-enhancements-rolling-ts)'
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now supports parsing `Categorical` data, see [here](#whatsnew-0190-enhancements-read-csv-categorical)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    现在支持解析`Categorical`数据，请参见[此处](#whatsnew-0190-enhancements-read-csv-categorical)'
- en: A function `union_categorical()` has been added for combining categoricals,
    see [here](#whatsnew-0190-enhancements-union-categoricals)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了一个函数`union_categorical()`用于组合分类变量，请参见[此处](#whatsnew-0190-enhancements-union-categoricals)
- en: '`PeriodIndex` now has its own `period` dtype, and changed to be more consistent
    with other `Index` classes. See [here](#whatsnew-0190-api-period)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PeriodIndex` 现在具有自己的 `period` dtype，并且更改为与其他 `Index` 类更一致。请参见[此处](#whatsnew-0190-api-period)'
- en: Sparse data structures gained enhanced support of `int` and `bool` dtypes, see
    [here](#whatsnew-0190-sparse)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏数据结构增强了对`int`和`bool` dtypes的支持，请参见[此处](#whatsnew-0190-sparse)
- en: Comparison operations with `Series` no longer ignores the index, see [here](#whatsnew-0190-api-series-ops)
    for an overview of the API changes.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 的比较操作不再忽略索引，请参见[此处](#whatsnew-0190-api-series-ops)以了解 API 更改的概述。'
- en: Introduction of a pandas development API for utility functions, see [here](#whatsnew-0190-dev-api).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 引入了 pandas 开发 API 用于实用函数，请参见[此处](#whatsnew-0190-dev-api)。
- en: Deprecation of `Panel4D` and `PanelND`. We recommend to represent these types
    of n-dimensional data with the [xarray package](http://xarray.pydata.org/en/stable/).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弃用 `Panel4D` 和 `PanelND`。我们建议使用[xarray package](http://xarray.pydata.org/en/stable/)来表示这些类型的
    n 维数据。
- en: Removal of the previously deprecated modules `pandas.io.data`, `pandas.io.wb`,
    `pandas.tools.rplot`.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除以前弃用的模块 `pandas.io.data`，`pandas.io.wb`，`pandas.tools.rplot`。
- en: Warning
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: pandas >= 0.19.0 will no longer silence numpy ufunc warnings upon import, see
    [here](#whatsnew-0190-errstate).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: pandas >= 0.19.0 不再在导入时消除 numpy ufunc 警告，请参见[此处](#whatsnew-0190-errstate)。
- en: What’s new in v0.19.0
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: v0.19.0 中的新内容
- en: '[New features](#new-features)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[新功能](#new-features)'
- en: '[Function `merge_asof` for asof-style time-series joining](#function-merge-asof-for-asof-style-time-series-joining)'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[函数`merge_asof`用于 asof 风格的时间序列连接](#function-merge-asof-for-asof-style-time-series-joining)'
- en: '[Method `.rolling()` is now time-series aware](#method-rolling-is-now-time-series-aware)'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法`.rolling()`现在具有时间序列的意识](#method-rolling-is-now-time-series-aware)'
- en: '[Method `read_csv` has improved support for duplicate column names](#method-read-csv-has-improved-support-for-duplicate-column-names)'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法`read_csv`对重复列名的支持改进](#method-read-csv-has-improved-support-for-duplicate-column-names)'
- en: '[Method `read_csv` supports parsing `Categorical` directly](#method-read-csv-supports-parsing-categorical-directly)'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法`read_csv`支持直接解析`Categorical`](#method-read-csv-supports-parsing-categorical-directly)'
- en: '[Categorical concatenation](#categorical-concatenation)'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分类拼接](#categorical-concatenation)'
- en: '[Semi-month offsets](#semi-month-offsets)'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[半月偏移量](#semi-month-offsets)'
- en: '[New Index methods](#new-index-methods)'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[新的索引方法](#new-index-methods)'
- en: '[Google BigQuery enhancements](#google-bigquery-enhancements)'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Google BigQuery 增强功能](#google-bigquery-enhancements)'
- en: '[Fine-grained NumPy errstate](#fine-grained-numpy-errstate)'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[细粒度的 NumPy errstate](#fine-grained-numpy-errstate)'
- en: '[Method `get_dummies` now returns integer dtypes](#method-get-dummies-now-returns-integer-dtypes)'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法`get_dummies`现在返回整数 dtypes](#method-get-dummies-now-returns-integer-dtypes)'
- en: '[Downcast values to smallest possible dtype in `to_numeric`](#downcast-values-to-smallest-possible-dtype-in-to-numeric)'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[将值转换为`to_numeric`中可能的最小 dtype](#downcast-values-to-smallest-possible-dtype-in-to-numeric)'
- en: '[pandas development API](#pandas-development-api)'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[pandas 开发 API](#pandas-development-api)'
- en: '[Other enhancements](#other-enhancements)'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他增强功能](#other-enhancements)'
- en: '[API changes](#api-changes)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[API 更改](#api-changes)'
- en: '[`Series.tolist()` will now return Python types](#series-tolist-will-now-return-python-types)'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.tolist()`现在将返回Python类型](#series-tolist-will-now-return-python-types)'
- en: '[`Series` operators for different indexes](#series-operators-for-different-indexes)'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series`在不同索引上的运算符](#series-operators-for-different-indexes)'
- en: '[Arithmetic operators](#arithmetic-operators)'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[算术运算符](#arithmetic-operators)'
- en: '[Comparison operators](#comparison-operators)'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[比较运算符](#comparison-operators)'
- en: '[Logical operators](#logical-operators)'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[逻辑运算符](#logical-operators)'
- en: '[Flexible comparison methods](#flexible-comparison-methods)'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[灵活的比较方法](#flexible-comparison-methods)'
- en: '[`Series` type promotion on assignment](#series-type-promotion-on-assignment)'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series`赋值时类型提升](#series-type-promotion-on-assignment)'
- en: '[Function `.to_datetime()` changes](#function-to-datetime-changes)'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[函数`.to_datetime()`变更](#function-to-datetime-changes)'
- en: '[Merging changes](#merging-changes)'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[合并变更](#merging-changes)'
- en: '[Method `.describe()` changes](#method-describe-changes)'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方法`.describe()`的变更](#method-describe-changes)'
- en: '[`Period` changes](#period-changes)'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Period`变更](#period-changes)'
- en: '[The `PeriodIndex` now has `period` dtype](#the-periodindex-now-has-period-dtype)'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`PeriodIndex`现在具有`period` dtype](#the-periodindex-now-has-period-dtype)'
- en: '[`Period(''NaT'')` now returns `pd.NaT`](#period-nat-now-returns-pd-nat)'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Period(''NaT'')`现在返回`pd.NaT`](#period-nat-now-returns-pd-nat)'
- en: '[`PeriodIndex.values` now returns array of `Period` object](#periodindex-values-now-returns-array-of-period-object)'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`PeriodIndex.values`现在返回`Period`对象数组](#periodindex-values-now-returns-array-of-period-object)'
- en: '[Index `+` / `-` no longer used for set operations](#index-no-longer-used-for-set-operations)'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[索引`+` / `-`不再用于集合操作](#index-no-longer-used-for-set-operations)'
- en: '[`Index.difference` and `.symmetric_difference` changes](#index-difference-and-symmetric-difference-changes)'
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Index.difference`和`.symmetric_difference`变更](#index-difference-and-symmetric-difference-changes)'
- en: '[`Index.unique` consistently returns `Index`](#index-unique-consistently-returns-index)'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Index.unique`一致返回`Index`](#index-unique-consistently-returns-index)'
- en: '[`MultiIndex` constructors, `groupby` and `set_index` preserve categorical
    dtypes](#multiindex-constructors-groupby-and-set-index-preserve-categorical-dtypes)'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`MultiIndex`构造函数，`groupby`和`set_index`保留分类dtype](#multiindex-constructors-groupby-and-set-index-preserve-categorical-dtypes)'
- en: '[Function `read_csv` will progressively enumerate chunks](#function-read-csv-will-progressively-enumerate-chunks)'
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[函数`read_csv`将逐步枚举块](#function-read-csv-will-progressively-enumerate-chunks)'
- en: '[Sparse changes](#sparse-changes)'
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[稀疏变更](#sparse-changes)'
- en: '[Types `int64` and `bool` support enhancements](#types-int64-and-bool-support-enhancements)'
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[类型`int64`和`bool`支持增强](#types-int64-and-bool-support-enhancements)'
- en: '[Operators now preserve dtypes](#operators-now-preserve-dtypes)'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[运算符现在保留dtypes](#operators-now-preserve-dtypes)'
- en: '[Other sparse fixes](#other-sparse-fixes)'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他稀疏修复](#other-sparse-fixes)'
- en: '[Indexer dtype changes](#indexer-dtype-changes)'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[索引器dtype变更](#indexer-dtype-changes)'
- en: '[Other API changes](#other-api-changes)'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他API更改](#other-api-changes)'
- en: '[Deprecations](#deprecations)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[弃用](#deprecations)'
- en: '[Removal of prior version deprecations/changes](#removal-of-prior-version-deprecations-changes)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[删除先前版本的弃用/更改](#removal-of-prior-version-deprecations-changes)'
- en: '[Performance improvements](#performance-improvements)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[性能改进](#performance-improvements)'
- en: '[Bug fixes](#bug-fixes)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[错误修复](#bug-fixes)'
- en: '[Contributors](#contributors)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[贡献者](#contributors)'
- en: '## New features'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '## 新功能'
- en: '### Function `merge_asof` for asof-style time-series joining'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '### 函数`merge_asof`用于asof风格的时间序列连接'
- en: A long-time requested feature has been added through the [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") function, to support asof style joining of time-series ([GH
    1870](https://github.com/pandas-dev/pandas/issues/1870), [GH 13695](https://github.com/pandas-dev/pandas/issues/13695),
    [GH 13709](https://github.com/pandas-dev/pandas/issues/13709), [GH 13902](https://github.com/pandas-dev/pandas/issues/13902)).
    Full documentation is [here](../user_guide/merging.html#merging-merge-asof).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof")函数添加了一个长期请求的功能，支持asof风格的时间序列连接（[GH 1870](https://github.com/pandas-dev/pandas/issues/1870)，[GH
    13695](https://github.com/pandas-dev/pandas/issues/13695)，[GH 13709](https://github.com/pandas-dev/pandas/issues/13709)，[GH
    13902](https://github.com/pandas-dev/pandas/issues/13902)）。完整文档在[这里](../user_guide/merging.html#merging-merge-asof)。
- en: The [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") performs an asof merge, which is similar to a left-join except
    that we match on nearest key rather than equal keys.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof")函数执行asof合并，类似于左连接，只是我们匹配最近的键而不是相等的键。'
- en: '[PRE0]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We typically want to match exactly when possible, and use the most recent value
    otherwise.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常希望尽可能精确匹配，并在可能时使用最新值。
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We can also match rows ONLY with prior data, and not an exact match.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以仅与先前数据匹配行，而不是完全匹配。
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In a typical time-series example, we have `trades` and `quotes` and we want
    to `asof-join` them. This also illustrates using the `by` parameter to group data
    before merging.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的时间序列示例中，我们有`trades`和`quotes`，我们想要`asof-join`它们。这也说明了在合并之前对数据进行分组的`by`参数的使用。
- en: '[PRE3]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: An asof merge joins on the `on`, typically a datetimelike field, which is ordered,
    and in this case we are using a grouper in the `by` field. This is like a left-outer
    join, except that forward filling happens automatically taking the most recent
    non-NaN value.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`asof`合并在`on`上进行，通常是一个日期时间字段，它是有序的，在这种情况下，我们在`by`字段中使用了一个分组器。这类似于左外连接，但是前向填充会自动发生，取最近的非NaN值。'
- en: '[PRE5]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This returns a merged DataFrame with the entries in the same order as the original
    left passed DataFrame (`trades` in this case), with the fields of the `quotes`
    merged.  ### Method `.rolling()` is now time-series aware'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '这将返回一个合并的DataFrame，其中条目与原始左传DataFrame（在本例中是`trades`）的顺序相同，字段为合并的`quotes`。  ###
    方法`.rolling()`现在具有时间序列意识'
- en: '`.rolling()` objects are now time-series aware and can accept a time-series
    offset (or convertible) for the `window` argument ([GH 13327](https://github.com/pandas-dev/pandas/issues/13327),
    [GH 12995](https://github.com/pandas-dev/pandas/issues/12995)). See the full documentation
    [here](../user_guide/window.html#window-generic).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`.rolling()`对象现在具有时间序列意识，并且可以接受时间序列偏移（或可转换为其）作为`window`参数（[GH 13327](https://github.com/pandas-dev/pandas/issues/13327)，[GH
    12995](https://github.com/pandas-dev/pandas/issues/12995)）。请参阅完整文档[此处](../user_guide/window.html#window-generic)。'
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This is a regular frequency index. Using an integer window parameter works to
    roll along the window frequency.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个常规频率索引。使用整数窗口参数沿窗口频率滚动有效。
- en: '[PRE7]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Specifying an offset allows a more intuitive specification of the rolling frequency.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 指定偏移量允许更直观地指定滚动频率。
- en: '[PRE8]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Using a non-regular, but still monotonic index, rolling with an integer window
    does not impart any special calculation.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用非常规但仍然单调的索引，使用整数窗口滚动不会产生任何特殊的计算。
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Using the time-specification generates variable windows for this sparse data.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用时间规范为这些稀疏数据生成可变窗口。
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Furthermore, we now allow an optional `on` parameter to specify a column (rather
    than the default of the index) in a DataFrame.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们现在允许可选的`on`参数来指定DataFrame中的列（而不是默认的索引）。
- en: '[PRE11]  ### Method `read_csv` has improved support for duplicate column names'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE11]  ### 方法`read_csv`已经改进了对重复列名的支持'
- en: '[Duplicate column names](../user_guide/io.html#io-dupe-names) are now supported
    in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    whether they are in the file or passed in as the `names` parameter ([GH 7160](https://github.com/pandas-dev/pandas/issues/7160),
    [GH 9424](https://github.com/pandas-dev/pandas/issues/9424))'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '[重复列名](../user_guide/io.html#io-dupe-names)现在在[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")中得到支持，无论它们是在文件中还是作为`names`参数传递（[GH 7160](https://github.com/pandas-dev/pandas/issues/7160)，[GH
    9424](https://github.com/pandas-dev/pandas/issues/9424)）'
- en: '[PRE12]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**Previous behavior**:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**：'
- en: '[PRE13]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The first `a` column contained the same data as the second `a` column, when
    it should have contained the values `[0, 3]`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个`a`列包含了与第二个`a`列相同的数据，而它应该包含值`[0, 3]`。
- en: '**New behavior**:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE14]  ### Method `read_csv` supports parsing `Categorical` directly'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE14]  ### 方法`read_csv`直接支持解析`Categorical`'
- en: The [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    function now supports parsing a `Categorical` column when specified as a dtype
    ([GH 10153](https://github.com/pandas-dev/pandas/issues/10153)). Depending on
    the structure of the data, this can result in a faster parse time and lower memory
    usage compared to converting to `Categorical` after parsing. See the io [docs
    here](../user_guide/io.html#io-categorical).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定为dtype时，[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")函数现在支持解析`Categorical`列（[GH 10153](https://github.com/pandas-dev/pandas/issues/10153)）。根据数据的结构，这可以导致比解析后转换为`Categorical`更快的解析时间和更低的内存使用率。请参阅此处的io[文档](../user_guide/io.html#io-categorical)。
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Individual columns can be parsed as a `Categorical` using a dict specification
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用字典规范将各个列解析为`Categorical`
- en: '[PRE16]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The resulting categories will always be parsed as strings (object dtype). If
    the categories are numeric they can be converted using the [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") function, or as appropriate, another converter such as [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime").
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 结果类别将始终被解析为字符串（object dtype）。如果类别是数字，则可以使用[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")函数进行转换，或者使用其他适当的转换器，如[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")。
- en: '[PRE17]  ### Categorical concatenation'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE17]  ### 类别连接'
- en: A function `union_categoricals()` has been added for combining categoricals,
    see [Unioning Categoricals](../user_guide/categorical.html#categorical-union)
    ([GH 13361](https://github.com/pandas-dev/pandas/issues/13361), [GH 13763](https://github.com/pandas-dev/pandas/issues/13763),
    [GH 13846](https://github.com/pandas-dev/pandas/issues/13846), [GH 14173](https://github.com/pandas-dev/pandas/issues/14173))
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已添加一个名为 `union_categoricals()` 的函数，用于组合类别，参见[类别组合](../user_guide/categorical.html#categorical-union)（[GH
    13361](https://github.com/pandas-dev/pandas/issues/13361)、[GH 13763](https://github.com/pandas-dev/pandas/issues/13763)、[GH
    13846](https://github.com/pandas-dev/pandas/issues/13846)、[GH 14173](https://github.com/pandas-dev/pandas/issues/14173)）。
- en: '[PRE18]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '`concat` and `append` now can concat `category` dtypes with different `categories`
    as `object` dtype ([GH 13524](https://github.com/pandas-dev/pandas/issues/13524))'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`concat` 和 `append` 现在可以将不同 `categories` 的 `category` 数据类型连接为 `object` 数据类型（[GH
    13524](https://github.com/pandas-dev/pandas/issues/13524)）。'
- en: '[PRE19]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**Previous behavior**:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE20]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**New behavior**:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE21]  ### Semi-month offsets'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE21]  ### 半月偏移'
- en: pandas has gained new frequency offsets, `SemiMonthEnd` (‘SM’) and `SemiMonthBegin`
    (‘SMS’). These provide date offsets anchored (by default) to the 15th and end
    of month, and 15th and 1st of month respectively. ([GH 1543](https://github.com/pandas-dev/pandas/issues/1543))
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 现在增加了新的频率偏移，`SemiMonthEnd`（‘SM’）和 `SemiMonthBegin`（‘SMS’）。这些提供了默认情况下锚定到月份的
    15 日和月底，以及分别锚定到月份的 15 日和月初的日期偏移（[GH 1543](https://github.com/pandas-dev/pandas/issues/1543)）。
- en: '[PRE22]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**SemiMonthEnd**:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**半月末**:'
- en: '[PRE23]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '**SemiMonthBegin**:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**半月初**:'
- en: '[PRE24]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Using the anchoring suffix, you can also specify the day of month to use instead
    of the 15th.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 使用定位后缀，您还可以指定要使用的月份的日期，而不是 15 日。
- en: '[PRE25]  ### New Index methods'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE25]  ### 新的索引方法'
- en: The following methods and options are added to `Index`, to be more consistent
    with the `Series` and `DataFrame` API.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 下列方法和选项已添加到 `Index` 中，以使其与 `Series` 和 `DataFrame` API 更加一致。
- en: '`Index` now supports the `.where()` function for same shape indexing ([GH 13170](https://github.com/pandas-dev/pandas/issues/13170))'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index` 现在支持 `.where()` 函数进行相同形状的索引（[GH 13170](https://github.com/pandas-dev/pandas/issues/13170)）。'
- en: '[PRE26]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '`Index` now supports `.dropna()` to exclude missing values ([GH 6194](https://github.com/pandas-dev/pandas/issues/6194))'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index` 现在支持 `.dropna()` 以排除缺失值（[GH 6194](https://github.com/pandas-dev/pandas/issues/6194)）。'
- en: '[PRE27]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: For `MultiIndex`, values are dropped if any level is missing by default. Specifying
    `how='all'` only drops values where all levels are missing.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `MultiIndex`，默认情况下，如果任何级别缺失，则会删除值。指定 `how='all'` 仅在所有级别都缺失时才删除值。
- en: '[PRE28]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '`Index` now supports `.str.extractall()` which returns a `DataFrame`, see the
    [docs here](../user_guide/text.html#text-extractall) ([GH 10008](https://github.com/pandas-dev/pandas/issues/10008),
    [GH 13156](https://github.com/pandas-dev/pandas/issues/13156))'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index` 现在支持 `.str.extractall()`，返回一个 `DataFrame`，请参阅[这里的文档](../user_guide/text.html#text-extractall)（[GH
    10008](https://github.com/pandas-dev/pandas/issues/10008)、[GH 13156](https://github.com/pandas-dev/pandas/issues/13156)）。'
- en: '[PRE29]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '`Index.astype()` now accepts an optional boolean argument `copy`, which allows
    optional copying if the requirements on dtype are satisfied ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))  ###
    Google BigQuery enhancements'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.astype()` 现在接受一个可选的布尔参数 `copy`，如果满足 dtype 的要求，则允许可选复制（[GH 13209](https://github.com/pandas-dev/pandas/issues/13209)）  ###
    Google BigQuery 增强'
- en: The [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    method has gained the `dialect` argument to allow users to specify whether to
    use BigQuery’s legacy SQL or BigQuery’s standard SQL. See the [docs](https://pandas-gbq.readthedocs.io/en/latest/reading.html)
    for more details ([GH 13615](https://github.com/pandas-dev/pandas/issues/13615)).
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    方法已经增加了 `dialect` 参数，允许用户指定是否使用 BigQuery 的传统 SQL 或 BigQuery 的标准 SQL。有关更多详情，请参阅[文档](https://pandas-gbq.readthedocs.io/en/latest/reading.html)（[GH
    13615](https://github.com/pandas-dev/pandas/issues/13615)）。'
- en: 'The [`to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") method now allows the DataFrame column order to differ
    from the destination table schema ([GH 11359](https://github.com/pandas-dev/pandas/issues/11359)).  ###
    Fine-grained NumPy errstate'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") 方法现在允许 DataFrame 列顺序与目标表模式不同 ([GH 11359](https://github.com/pandas-dev/pandas/issues/11359)).  ###
    细粒度的 NumPy errstate'
- en: Previous versions of pandas would permanently silence numpy’s ufunc error handling
    when `pandas` was imported. pandas did this in order to silence the warnings that
    would arise from using numpy ufuncs on missing data, which are usually represented
    as `NaN` s. Unfortunately, this silenced legitimate warnings arising in non-pandas
    code in the application. Starting with 0.19.0, pandas will use the `numpy.errstate`
    context manager to silence these warnings in a more fine-grained manner, only
    around where these operations are actually used in the pandas code base. ([GH
    13109](https://github.com/pandas-dev/pandas/issues/13109), [GH 13145](https://github.com/pandas-dev/pandas/issues/13145))
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的 pandas 版本中，当导入 `pandas` 时，会永久性地关闭 numpy 的 ufunc 错误处理。pandas 这样做是为了消除使用
    numpy ufuncs 处理缺失数据时产生的警告，这些数据通常表示为 `NaN`。不幸的是，这样做会消除应用程序中非 pandas 代码中出现的合法警告。从
    0.19.0 开始，pandas 将使用 `numpy.errstate` 上下文管理器以更精细的方式消除这些警告，仅在 pandas 代码库中实际使用这些操作的地方附近。([GH
    13109](https://github.com/pandas-dev/pandas/issues/13109), [GH 13145](https://github.com/pandas-dev/pandas/issues/13145))
- en: 'After upgrading pandas, you may see *new* `RuntimeWarnings` being issued from
    your code. These are likely legitimate, and the underlying cause likely existed
    in the code when using previous versions of pandas that simply silenced the warning.
    Use [numpy.errstate](https://numpy.org/doc/stable/reference/generated/numpy.errstate.html)
    around the source of the `RuntimeWarning` to control how these conditions are
    handled.  ### Method `get_dummies` now returns integer dtypes'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 升级 pandas 后，你可能会看到*新的* `RuntimeWarnings` 从你的代码中发出。这些很可能是合法的，并且在使用之前版本的 pandas
    时存在于代码中的潜在原因只是简单地消除了警告。在 `RuntimeWarning` 的源代码周围使用 [numpy.errstate](https://numpy.org/doc/stable/reference/generated/numpy.errstate.html)
    来控制如何处理这些条件。### 方法 `get_dummies` 现在返回整数数据类型
- en: The `pd.get_dummies` function now returns dummy-encoded columns as small integers,
    rather than floats ([GH 8725](https://github.com/pandas-dev/pandas/issues/8725)).
    This should provide an improved memory footprint.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`pd.get_dummies` 函数现在返回小整数编码的列，而不是浮点数 ([GH 8725](https://github.com/pandas-dev/pandas/issues/8725))。这应该提供了更好的内存占用。'
- en: '**Previous behavior**:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE30]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '**New behavior**:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE31]  ### Downcast values to smallest possible dtype in `to_numeric`'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE31]  ### 将值下转为可能的最小 dtype 在 `to_numeric`'
- en: '`pd.to_numeric()` now accepts a `downcast` parameter, which will downcast the
    data if possible to smallest specified numerical dtype ([GH 13352](https://github.com/pandas-dev/pandas/issues/13352))'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`pd.to_numeric()` 现在接受一个 `downcast` 参数，如果可能的话将数据下转为指定的最小数值 dtype ([GH 13352](https://github.com/pandas-dev/pandas/issues/13352))'
- en: '[PRE32]  ### pandas development API'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE32]  ### pandas 开发 API'
- en: As part of making pandas API more uniform and accessible in the future, we have
    created a standard sub-package of pandas, `pandas.api` to hold public API’s. We
    are starting by exposing type introspection functions in `pandas.api.types`. More
    sub-packages and officially sanctioned API’s will be published in future versions
    of pandas ([GH 13147](https://github.com/pandas-dev/pandas/issues/13147), [GH
    13634](https://github.com/pandas-dev/pandas/issues/13634))
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 作为使 pandas API 在未来更加统一和易于访问的一部分，我们创建了一个标准的 pandas 子包，`pandas.api`，用于保存公共 API。我们首先在
    `pandas.api.types` 中公开了类型内省函数。将来的 pandas 版本中将发布更多子包和官方认可的 API ([GH 13147](https://github.com/pandas-dev/pandas/issues/13147),
    [GH 13634](https://github.com/pandas-dev/pandas/issues/13634))
- en: 'The following are now part of this API:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 以下内容现已成为此 API 的一部分：
- en: '[PRE33]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Note
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Calling these functions from the internal module `pandas.core.common` will
    now show a `DeprecationWarning` ([GH 13990](https://github.com/pandas-dev/pandas/issues/13990))  ###
    Other enhancements'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '从内部模块 `pandas.core.common` 调用这些函数现在会显示一个 `DeprecationWarning` ([GH 13990](https://github.com/pandas-dev/pandas/issues/13990))  ###
    其他增强功能'
- en: '`Timestamp` can now accept positional and keyword parameters similar to `datetime.datetime()`
    ([GH 10758](https://github.com/pandas-dev/pandas/issues/10758), [GH 11630](https://github.com/pandas-dev/pandas/issues/11630))'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp` 现在可以接受类似于 `datetime.datetime()` 的位置和关键字参数 ([GH 10758](https://github.com/pandas-dev/pandas/issues/10758),
    [GH 11630](https://github.com/pandas-dev/pandas/issues/11630))'
- en: '[PRE34]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The `.resample()` function now accepts a `on=` or `level=` parameter for resampling
    on a datetimelike column or `MultiIndex` level ([GH 13500](https://github.com/pandas-dev/pandas/issues/13500))
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.resample()` 函数现在接受 `on=` 或 `level=` 参数，用于在日期时间列或 `MultiIndex` 级别上重新采样 ([GH
    13500](https://github.com/pandas-dev/pandas/issues/13500))。'
- en: '[PRE35]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The `.get_credentials()` method of `GbqConnector` can now first try to fetch
    [the application default credentials](https://developers.google.com/identity/protocols/application-default-credentials).
    See the docs for more details ([GH 13577](https://github.com/pandas-dev/pandas/issues/13577)).
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GbqConnector` 的 `.get_credentials()` 方法现在可以首先尝试获取 [应用程序默认凭据](https://developers.google.com/identity/protocols/application-default-credentials)。有关更多详细信息，请参阅文档
    ([GH 13577](https://github.com/pandas-dev/pandas/issues/13577))。'
- en: The `.tz_localize()` method of `DatetimeIndex` and `Timestamp` has gained the
    `errors` keyword, so you can potentially coerce nonexistent timestamps to `NaT`.
    The default behavior remains to raising a `NonExistentTimeError` ([GH 13057](https://github.com/pandas-dev/pandas/issues/13057))
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DatetimeIndex` 和 `Timestamp` 的 `.tz_localize()` 方法现在具有 `errors` 关键字，因此您可以将不存在的时间戳可能强制转换为
    `NaT`。默认行为仍然是引发 `NonExistentTimeError` ([GH 13057](https://github.com/pandas-dev/pandas/issues/13057))。'
- en: '`.to_hdf/read_hdf()` now accept path objects (e.g. `pathlib.Path`, `py.path.local`)
    for the file path ([GH 11773](https://github.com/pandas-dev/pandas/issues/11773))'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_hdf/read_hdf()` 现在接受路径对象（例如 `pathlib.Path`、`py.path.local`）作为文件路径 ([GH
    11773](https://github.com/pandas-dev/pandas/issues/11773))。'
- en: The `pd.read_csv()` with `engine='python'` has gained support for the `decimal`
    ([GH 12933](https://github.com/pandas-dev/pandas/issues/12933)), `na_filter` ([GH
    13321](https://github.com/pandas-dev/pandas/issues/13321)) and the `memory_map`
    option ([GH 13381](https://github.com/pandas-dev/pandas/issues/13381)).
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `engine='python'` 的 `pd.read_csv()` 现在支持 `decimal` ([GH 12933](https://github.com/pandas-dev/pandas/issues/12933))、`na_filter`
    ([GH 13321](https://github.com/pandas-dev/pandas/issues/13321)) 以及 `memory_map`
    选项。
- en: Consistent with the Python API, `pd.read_csv()` will now interpret `+inf` as
    positive infinity ([GH 13274](https://github.com/pandas-dev/pandas/issues/13274))
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 Python API 一致，`pd.read_csv()` 现在会将 `+inf` 解释为正无穷 ([GH 13274](https://github.com/pandas-dev/pandas/issues/13274))。
- en: The `pd.read_html()` has gained support for the `na_values`, `converters`, `keep_default_na`
    options ([GH 13461](https://github.com/pandas-dev/pandas/issues/13461))
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_html()` 现在支持 `na_values`、`converters`、`keep_default_na` 选项 ([GH 13461](https://github.com/pandas-dev/pandas/issues/13461))。'
- en: '`Categorical.astype()` now accepts an optional boolean argument `copy`, effective
    when dtype is categorical ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Categorical.astype()` 现在接受一个可选的布尔参数 `copy`，当 dtype 是 categorical 时有效 ([GH
    13209](https://github.com/pandas-dev/pandas/issues/13209))。'
- en: '`DataFrame` has gained the `.asof()` method to return the last non-NaN values
    according to the selected subset ([GH 13358](https://github.com/pandas-dev/pandas/issues/13358))'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame` 现在具有 `.asof()` 方法，根据所选子集返回最后一个非 NaN 值 ([GH 13358](https://github.com/pandas-dev/pandas/issues/13358))。'
- en: The `DataFrame` constructor will now respect key ordering if a list of `OrderedDict`
    objects are passed in ([GH 13304](https://github.com/pandas-dev/pandas/issues/13304))
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果传入的是 `OrderedDict` 对象列表，则 `DataFrame` 构造函数现在会遵循键排序 ([GH 13304](https://github.com/pandas-dev/pandas/issues/13304))。
- en: '`pd.read_html()` has gained support for the `decimal` option ([GH 12907](https://github.com/pandas-dev/pandas/issues/12907))'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_html()` 现在支持 `decimal` 选项 ([GH 12907](https://github.com/pandas-dev/pandas/issues/12907))。'
- en: '`Series` has gained the properties `.is_monotonic`, `.is_monotonic_increasing`,
    `.is_monotonic_decreasing`, similar to `Index` ([GH 13336](https://github.com/pandas-dev/pandas/issues/13336))'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 现在具有 `.is_monotonic`、`.is_monotonic_increasing`、`.is_monotonic_decreasing`
    属性，类似于 `Index` ([GH 13336](https://github.com/pandas-dev/pandas/issues/13336))。'
- en: '`DataFrame.to_sql()` now allows a single value as the SQL type for all columns
    ([GH 11886](https://github.com/pandas-dev/pandas/issues/11886)).'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_sql()` 现在允许将单个值作为所有列的 SQL 类型 ([GH 11886](https://github.com/pandas-dev/pandas/issues/11886))。'
- en: '`Series.append` now supports the `ignore_index` option ([GH 13677](https://github.com/pandas-dev/pandas/issues/13677))'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.append` 现在支持 `ignore_index` 选项 ([GH 13677](https://github.com/pandas-dev/pandas/issues/13677))。'
- en: '`.to_stata()` and `StataWriter` can now write variable labels to Stata dta
    files using a dictionary to make column names to labels ([GH 13535](https://github.com/pandas-dev/pandas/issues/13535),
    [GH 13536](https://github.com/pandas-dev/pandas/issues/13536))'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_stata()` 和 `StataWriter` 现在可以使用字典将列名转换为标签，将变量标签写入 Stata dta 文件 ([GH 13535](https://github.com/pandas-dev/pandas/issues/13535),
    [GH 13536](https://github.com/pandas-dev/pandas/issues/13536))。'
- en: '`.to_stata()` and `StataWriter` will automatically convert `datetime64[ns]`
    columns to Stata format `%tc`, rather than raising a `ValueError` ([GH 12259](https://github.com/pandas-dev/pandas/issues/12259))'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_stata()` 和 `StataWriter` 现在会自动将 `datetime64[ns]` 列转换为 Stata 格式 `%tc`，而不是引发
    `ValueError` ([GH 12259](https://github.com/pandas-dev/pandas/issues/12259))'
- en: '`read_stata()` and `StataReader` raise with a more explicit error message when
    reading Stata files with repeated value labels when `convert_categoricals=True`
    ([GH 13923](https://github.com/pandas-dev/pandas/issues/13923))'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 `convert_categoricals=True` 时，`read_stata()` 和 `StataReader` 在读取具有重复值标签的 Stata
    文件时引发更明确的错误消息 ([GH 13923](https://github.com/pandas-dev/pandas/issues/13923))
- en: '`DataFrame.style` will now render sparsified MultiIndexes ([GH 11655](https://github.com/pandas-dev/pandas/issues/11655))'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.style` 现在会渲染稀疏的 MultiIndexes ([GH 11655](https://github.com/pandas-dev/pandas/issues/11655))'
- en: '`DataFrame.style` will now show column level names (e.g. `DataFrame.columns.names`)
    ([GH 13775](https://github.com/pandas-dev/pandas/issues/13775))'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.style` 现在会显示列级别的名称（例如 `DataFrame.columns.names`）([GH 13775](https://github.com/pandas-dev/pandas/issues/13775))'
- en: '`DataFrame` has gained support to re-order the columns based on the values
    in a row using `df.sort_values(by=''...'', axis=1)` ([GH 10806](https://github.com/pandas-dev/pandas/issues/10806))'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame` 已支持根据行中的值重新排序列使用 `df.sort_values(by=''...'', axis=1)` ([GH 10806](https://github.com/pandas-dev/pandas/issues/10806))'
- en: '[PRE37]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Added documentation to [I/O](../user_guide/io.html#io-dtypes) regarding the
    perils of reading in columns with mixed dtypes and how to handle it ([GH 13746](https://github.com/pandas-dev/pandas/issues/13746))
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了关于读取具有混合数据类型的列以及如何处理的文档信息 [I/O](../user_guide/io.html#io-dtypes) ([GH 13746](https://github.com/pandas-dev/pandas/issues/13746))
- en: '[`to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now has a `border` argument to control the value in
    the opening `<table>` tag. The default is the value of the `html.border` option,
    which defaults to 1\. This also affects the notebook HTML repr, but since Jupyter’s
    CSS includes a border-width attribute, the visual effect is the same. ([GH 11563](https://github.com/pandas-dev/pandas/issues/11563)).'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") 现在具有 `border` 参数来控制开放的 `<table>` 标签中的值。默认值是 `html.border`
    选项的值，默认为 1。这也会影响笔记本的 HTML 表示，但由于 Jupyter 的 CSS 包含一个 border-width 属性，视觉效果是相同的。([GH
    11563](https://github.com/pandas-dev/pandas/issues/11563)).'
- en: Raise `ImportError` in the sql functions when `sqlalchemy` is not installed
    and a connection string is used ([GH 11920](https://github.com/pandas-dev/pandas/issues/11920)).
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用连接字符串时，sql 函数将在未安装 `sqlalchemy` 时引发 `ImportError` ([GH 11920](https://github.com/pandas-dev/pandas/issues/11920)).
- en: Compatibility with matplotlib 2.0\. Older versions of pandas should also work
    with matplotlib 2.0 ([GH 13333](https://github.com/pandas-dev/pandas/issues/13333))
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 matplotlib 2.0 的兼容性。旧版本的 pandas 也应该与 matplotlib 2.0 兼容 ([GH 13333](https://github.com/pandas-dev/pandas/issues/13333))
- en: '`Timestamp`, `Period`, `DatetimeIndex`, `PeriodIndex` and `.dt` accessor have
    gained a `.is_leap_year` property to check whether the date belongs to a leap
    year. ([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp`、`Period`、`DatetimeIndex`、`PeriodIndex` 和 `.dt` 访问器现在具有 `.is_leap_year`
    属性，用于检查日期是否属于闰年。([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
- en: '`astype()` will now accept a dict of column name to data types mapping as the
    `dtype` argument. ([GH 12086](https://github.com/pandas-dev/pandas/issues/12086))'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`astype()` 现在将接受一个列名到数据类型映射的字典作为 `dtype` 参数。([GH 12086](https://github.com/pandas-dev/pandas/issues/12086))'
- en: The `pd.read_json` and `DataFrame.to_json` has gained support for reading and
    writing json lines with `lines` option see [Line delimited json](../user_guide/io.html#io-jsonl)
    ([GH 9180](https://github.com/pandas-dev/pandas/issues/9180))
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_json` 和 `DataFrame.to_json` 现在已支持使用 `lines` 选项读取和写入 json 行，请参阅 [Line
    delimited json](../user_guide/io.html#io-jsonl) ([GH 9180](https://github.com/pandas-dev/pandas/issues/9180))'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now supports the true_values and false_values keyword arguments
    ([GH 13347](https://github.com/pandas-dev/pandas/issues/13347))'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 现在支持 true_values 和 false_values 关键字参数 ([GH 13347](https://github.com/pandas-dev/pandas/issues/13347))'
- en: '`groupby()` will now accept a scalar and a single-element list for specifying
    `level` on a non-`MultiIndex` grouper. ([GH 13907](https://github.com/pandas-dev/pandas/issues/13907))'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby()` 现在将接受一个标量和一个单元素列表来指定非 `MultiIndex` 分组器上的 `level`。([GH 13907](https://github.com/pandas-dev/pandas/issues/13907))'
- en: Non-convertible dates in an excel date column will be returned without conversion
    and the column will be `object` dtype, rather than raising an exception ([GH 10001](https://github.com/pandas-dev/pandas/issues/10001)).
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Excel 日期列中存在不可转换的日期时，将返回未转换的日期，并且列将是 `object` 类型，而不是引发异常 ([GH 10001](https://github.com/pandas-dev/pandas/issues/10001))。
- en: '`pd.Timedelta(None)` is now accepted and will return `NaT`, mirroring `pd.Timestamp`
    ([GH 13687](https://github.com/pandas-dev/pandas/issues/13687))'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Timedelta(None)` 现在被接受，并将返回 `NaT`，与 `pd.Timestamp` 相同 ([GH 13687](https://github.com/pandas-dev/pandas/issues/13687))'
- en: '`pd.read_stata()` can now handle some format 111 files, which are produced
    by SAS when generating Stata dta files ([GH 11526](https://github.com/pandas-dev/pandas/issues/11526))'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_stata()` 现在可以处理一些格式为 111 的文件，这些文件是由 SAS 生成 Stata dta 文件时产生的 ([GH 11526](https://github.com/pandas-dev/pandas/issues/11526))'
- en: '`Series` and `Index` now support `divmod` which will return a tuple of series
    or indices. This behaves like a standard binary operator with regards to broadcasting
    rules ([GH 14208](https://github.com/pandas-dev/pandas/issues/14208)).  ## API
    changes'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 和 `Index` 现在支持 `divmod`，将返回一个系列或索引的元组。这与广播规则相关的标准二元运算符的行为相同 ([GH 14208](https://github.com/pandas-dev/pandas/issues/14208))。  ##
    API 变更'
- en: '`Series.tolist()` will now return Python types'
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Series.tolist()` 现在会返回 Python 类型'
- en: '`Series.tolist()` will now return Python types in the output, mimicking NumPy
    `.tolist()` behavior ([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.tolist()` 现在会返回 Python 类型的输出，模仿 NumPy 的 `.tolist()` 行为 ([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))'
- en: '[PRE38]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '**Previous behavior**:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE39]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '**New behavior**:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE40]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '### `Series` operators for different indexes'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '### 不同索引的 `Series` 运算符'
- en: Following `Series` operators have been changed to make all operators consistent,
    including `DataFrame` ([GH 1134](https://github.com/pandas-dev/pandas/issues/1134),
    [GH 4581](https://github.com/pandas-dev/pandas/issues/4581), [GH 13538](https://github.com/pandas-dev/pandas/issues/13538))
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 `Series` 运算符已更改，以使所有运算符保持一致，包括 `DataFrame` ([GH 1134](https://github.com/pandas-dev/pandas/issues/1134),
    [GH 4581](https://github.com/pandas-dev/pandas/issues/4581), [GH 13538](https://github.com/pandas-dev/pandas/issues/13538))
- en: '`Series` comparison operators now raise `ValueError` when `index` are different.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 `index` 不同时，`Series` 比较运算符现在会引发 `ValueError`。
- en: '`Series` logical operators align both `index` of left and right hand side.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 逻辑运算符会对齐左右两侧的 `index`。'
- en: Warning
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Until 0.18.1, comparing `Series` with the same length, would succeed even if
    the `.index` are different (the result ignores `.index`). As of 0.19.0, this will
    raises `ValueError` to be more strict. This section also describes how to keep
    previous behavior or align different indexes, using the flexible comparison methods
    like `.eq`.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 直到 0.18.1 版本，比较具有相同长度的 `Series`，即使 `.index` 不同也会成功（结果忽略 `.index`）。从 0.19.0 版本开始，这将引发
    `ValueError` 以更加严格。本节还描述了如何保留先前行为或对齐不同索引，使用像 `.eq` 这样的灵活比较方法。
- en: 'As a result, `Series` and `DataFrame` operators behave as below:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`Series` 和 `DataFrame` 运算符的行为如下：
- en: Arithmetic operators
  id: totrans-197
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 算术运算符
- en: Arithmetic operators align both `index` (no changes).
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 算术运算符会对齐 `index`（无更改）。
- en: '[PRE41]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Comparison operators
  id: totrans-200
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 比较运算符
- en: Comparison operators raise `ValueError` when `.index` are different.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `.index` 不同时，比较运算符会引发 `ValueError`。
- en: '**Previous behavior** (`Series`):'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为** (`Series`):'
- en: '`Series` compared values ignoring the `.index` as long as both had the same
    length:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series` 比较值会忽略 `.index`，只要两者长度相同：'
- en: '[PRE42]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '**New behavior** (`Series`):'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为** (`Series`):'
- en: '[PRE43]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Note
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To achieve the same result as previous versions (compare values based on locations
    ignoring `.index`), compare both `.values`.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现与以前版本相同的结果（基于位置比较值，忽略 `.index`），请比较 `.values`。
- en: '[PRE44]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'If you want to compare `Series` aligning its `.index`, see flexible comparison
    methods section below:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '如果要比较 `Series` 并对齐其 `.index`，请参见下面的灵活比较方法部分:'
- en: '[PRE45]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '**Current behavior** (`DataFrame`, no change):'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为** (`DataFrame`，无变化):'
- en: '[PRE46]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Logical operators
  id: totrans-214
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 逻辑运算符
- en: Logical operators align both `.index` of left and right hand side.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑运算符会对齐左右两侧的 `.index`。
- en: '**Previous behavior** (`Series`), only left hand side `index` was kept:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为** (`Series`)，仅保留左侧 `index`:'
- en: '[PRE47]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '**New behavior** (`Series`):'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为** (`Series`):'
- en: '[PRE48]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Note
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`Series` logical operators fill a `NaN` result with `False`.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series` 逻辑运算符将 `NaN` 结果填充为 `False`。'
- en: Note
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'To achieve the same result as previous versions (compare values based on only
    left hand side index), you can use `reindex_like`:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '要实现与以前版本相同的结果（仅基于左侧索引比较值），您可以使用 `reindex_like`:'
- en: '[PRE49]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '**Current behavior** (`DataFrame`, no change):'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为** (`DataFrame`，无变化):'
- en: '[PRE50]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Flexible comparison methods
  id: totrans-227
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 灵活比较方法
- en: '`Series` flexible comparison methods like `eq`, `ne`, `le`, `lt`, `ge` and
    `gt` now align both `index`. Use these operators if you want to compare two `Series`
    which has the different `index`.'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series` 灵活的比较方法如 `eq`、`ne`、`le`、`lt`、`ge` 和 `gt` 现在会对齐两个 `index`。如果要比较具有不同
    `index` 的两个 `Series`，请使用这些运算符。'
- en: '[PRE51]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Previously, this worked the same as comparison operators (see above).  ###
    `Series` type promotion on assignment'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，这与比较运算符的行为相同（见上文）。### `Series` 类型的赋值推广
- en: A `Series` will now correctly promote its dtype for assignment with incompat
    values to the current dtype ([GH 13234](https://github.com/pandas-dev/pandas/issues/13234))
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `Series` 与不兼容值进行赋值时，现在将正确推广其 dtype 到当前 dtype ([GH 13234](https://github.com/pandas-dev/pandas/issues/13234))
- en: '[PRE52]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '**Previous behavior**:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE53]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '**New behavior**:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE54]  ### Function `.to_datetime()` changes'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE54] ### 函数 `.to_datetime()` 变更'
- en: Previously if `.to_datetime()` encountered mixed integers/floats and strings,
    but no datetimes with `errors='coerce'` it would convert all to `NaT`.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，如果 `.to_datetime()` 遇到混合的整数/浮点数和字符串，但没有日期时间且 `errors='coerce'`，它会将所有内容转换为
    `NaT`。
- en: '**Previous behavior**:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE55]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '**Current behavior**:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**:'
- en: This will now convert integers/floats with the default unit of `ns`.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将整数/浮点数转换为默认单位 `ns`。
- en: '[PRE56]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Bug fixes related to `.to_datetime()`:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '与 `.to_datetime()` 相关的 Bug 修复:'
- en: Bug in `pd.to_datetime()` when passing integers or floats, and no `unit` and
    `errors='coerce'` ([GH 13180](https://github.com/pandas-dev/pandas/issues/13180)).
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传递整数或浮点数时，以及没有 `unit` 和 `errors='coerce'` 时，`pd.to_datetime()` 中存在错误 ([GH 13180](https://github.com/pandas-dev/pandas/issues/13180))。
- en: Bug in `pd.to_datetime()` when passing invalid data types (e.g. bool); will
    now respect the `errors` keyword ([GH 13176](https://github.com/pandas-dev/pandas/issues/13176))
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.to_datetime()` 在传递无效数据类型（例如布尔值）时存在错误；现在将遵守 `errors` 关键字 ([GH 13176](https://github.com/pandas-dev/pandas/issues/13176))'
- en: Bug in `pd.to_datetime()` which overflowed on `int8`, and `int16` dtypes ([GH
    13451](https://github.com/pandas-dev/pandas/issues/13451))
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.to_datetime()` 中存在 Bug，当 `int8` 和 `int16` dtypes 溢出时 ([GH 13451](https://github.com/pandas-dev/pandas/issues/13451))
- en: Bug in `pd.to_datetime()` raise `AttributeError` with `NaN` and the other string
    is not valid when `errors='ignore'` ([GH 12424](https://github.com/pandas-dev/pandas/issues/12424))
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.to_datetime()` 中存在 Bug，在 `errors='ignore'` 时引发 `AttributeError`，并且另一个字符串无效时
    ([GH 12424](https://github.com/pandas-dev/pandas/issues/12424))
- en: 'Bug in `pd.to_datetime()` did not cast floats correctly when `unit` was specified,
    resulting in truncated datetime ([GH 13834](https://github.com/pandas-dev/pandas/issues/13834))  ###
    Merging changes'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '当指定 `unit` 时，`pd.to_datetime()` 中的 Bug 未正确转换浮点数，导致截断的日期时间 ([GH 13834](https://github.com/pandas-dev/pandas/issues/13834))
    ### 合并变更'
- en: Merging will now preserve the dtype of the join keys ([GH 8596](https://github.com/pandas-dev/pandas/issues/8596))
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 合并现在将保留连接键的 dtype ([GH 8596](https://github.com/pandas-dev/pandas/issues/8596))
- en: '[PRE57]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '**Previous behavior**:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE58]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '**New behavior**:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: We are able to preserve the join keys
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够保留连接键
- en: '[PRE59]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Of course if you have missing values that are introduced, then the resulting
    dtype will be upcast, which is unchanged from previous.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果引入了缺失值，那么结果的 dtype 将被提升，这与以前相同。
- en: '[PRE60]  ### Method `.describe()` changes'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE60] ### 方法 `.describe()` 变更'
- en: Percentile identifiers in the index of a `.describe()` output will now be rounded
    to the least precision that keeps them distinct ([GH 13104](https://github.com/pandas-dev/pandas/issues/13104))
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `.describe()` 输出的索引中的百分位数标识符现在将四舍五入为保持它们不同的最小精度 ([GH 13104](https://github.com/pandas-dev/pandas/issues/13104))
- en: '[PRE61]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '**Previous behavior**:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: The percentiles were rounded to at most one decimal place, which could raise
    `ValueError` for a data frame if the percentiles were duplicated.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 百分位数最多四舍五入到一位小数点，如果数据框中的百分位数重复，可能会引发 `ValueError`。
- en: '[PRE62]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '**New behavior**:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE63]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Furthermore:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '此外:'
- en: Passing duplicated `percentiles` will now raise a `ValueError`.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递重复的 `percentiles` 现在会引发 `ValueError`。
- en: 'Bug in `.describe()` on a DataFrame with a mixed-dtype column index, which
    would previously raise a `TypeError` ([GH 13288](https://github.com/pandas-dev/pandas/issues/13288))  ###
    `Period` changes'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在具有混合类型列索引的 DataFrame 上调用 `.describe()` 时存在 Bug，以前会引发 `TypeError` ([GH 13288](https://github.com/pandas-dev/pandas/issues/13288))
    ### `Period` 变更'
- en: The `PeriodIndex` now has `period` dtype
  id: totrans-268
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 现在 `PeriodIndex` 具有 `period` dtype
- en: '`PeriodIndex` now has its own `period` dtype. The `period` dtype is a pandas
    extension dtype like `category` or the [timezone aware dtype](../user_guide/timeseries.html#timeseries-timezone-series)
    (`datetime64[ns, tz]`) ([GH 13941](https://github.com/pandas-dev/pandas/issues/13941)).
    As a consequence of this change, `PeriodIndex` no longer has an integer dtype:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`PeriodIndex`现在有自己的`period` dtype。`period` dtype是一种类似于`category`或[时区感知dtype](../user_guide/timeseries.html#timeseries-timezone-series)（`datetime64[ns,
    tz]`）的pandas扩展dtype ([GH 13941](https://github.com/pandas-dev/pandas/issues/13941))。由于这个变化的结果，`PeriodIndex`不再具有整数dtype：'
- en: '**Previous behavior**:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE64]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '**New behavior**:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE65]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '#### `Period(''NaT'')` now returns `pd.NaT`'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `Period(''NaT'')` 现在返回 `pd.NaT`'
- en: Previously, `Period` has its own `Period('NaT')` representation different from
    `pd.NaT`. Now `Period('NaT')` has been changed to return `pd.NaT`. ([GH 12759](https://github.com/pandas-dev/pandas/issues/12759),
    [GH 13582](https://github.com/pandas-dev/pandas/issues/13582))
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，`Period`有自己的`Period('NaT')`表示，与`pd.NaT`不同。现在`Period('NaT')`已更改为返回`pd.NaT`。([GH
    12759](https://github.com/pandas-dev/pandas/issues/12759)，[GH 13582](https://github.com/pandas-dev/pandas/issues/13582))
- en: '**Previous behavior**:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE66]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '**New behavior**:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: These result in `pd.NaT` without providing `freq` option.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 这些导致 `pd.NaT` 而不提供 `freq` 选项。
- en: '[PRE67]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: To be compatible with `Period` addition and subtraction, `pd.NaT` now supports
    addition and subtraction with `int`. Previously it raised `ValueError`.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与`Period`的加法和减法兼容，`pd.NaT`现在支持与`int`的加法和减法。以前会引发`ValueError`。
- en: '**Previous behavior**:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE68]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '**New behavior**:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE69]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '`PeriodIndex.values` now returns array of `Period` object'
  id: totrans-286
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`PeriodIndex.values` 现在返回 `Period` 对象的数组'
- en: '`.values` is changed to return an array of `Period` objects, rather than an
    array of integers ([GH 13988](https://github.com/pandas-dev/pandas/issues/13988)).'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '`.values` 已更改为返回`Period`对象的数组，而不是整数数组 ([GH 13988](https://github.com/pandas-dev/pandas/issues/13988))。'
- en: '**Previous behavior**:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE70]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '**New behavior**:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE71]  ### Index `+` / `-` no longer used for set operations'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE71]  ### 索引 `+` / `-` 不再用于集合操作'
- en: Addition and subtraction of the base Index type and of DatetimeIndex (not the
    numeric index types) previously performed set operations (set union and difference).
    This behavior was already deprecated since 0.15.0 (in favor using the specific
    `.union()` and `.difference()` methods), and is now disabled. When possible, `+`
    and `-` are now used for element-wise operations, for example for concatenating
    strings or subtracting datetimes ([GH 8227](https://github.com/pandas-dev/pandas/issues/8227),
    [GH 14127](https://github.com/pandas-dev/pandas/issues/14127)).
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基本的索引类型和DatetimeIndex（不是数值索引类型）的加法和减法，以前执行的是集合操作（集合并和差）。此行为自0.15.0版本起已经被弃用（推荐使用特定的`.union()`和`.difference()`方法），现在已被禁用。现在尽可能使用`+`和`-`进行逐元素操作，例如连接字符串或减去日期时间（[GH
    8227](https://github.com/pandas-dev/pandas/issues/8227)，[GH 14127](https://github.com/pandas-dev/pandas/issues/14127))。
- en: 'Previous behavior:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的行为：
- en: '[PRE72]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '**New behavior**: the same operation will now perform element-wise addition:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：同样的操作现在将执行逐元素加法：'
- en: '[PRE73]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Note that numeric Index objects already performed element-wise operations. For
    example, the behavior of adding two integer Indexes is unchanged. The base `Index`
    is now made consistent with this behavior.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，数值索引对象已经执行了逐元素操作。例如，两个整数索引相加的行为不变。基本的 `Index` 现在与此行为保持一致。
- en: '[PRE74]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Further, because of this change, it is now possible to subtract two DatetimeIndex
    objects resulting in a TimedeltaIndex:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于这个变化，现在可以减去两个DatetimeIndex对象，结果为TimedeltaIndex：
- en: '**Previous behavior**:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE75]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '**New behavior**:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE76]  ### `Index.difference` and `.symmetric_difference` changes'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE76]  ### `Index.difference` 和 `.symmetric_difference` 更改'
- en: '`Index.difference` and `Index.symmetric_difference` will now, more consistently,
    treat `NaN` values as any other values. ([GH 13514](https://github.com/pandas-dev/pandas/issues/13514))'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.difference` 和 `Index.symmetric_difference` 现在将更一致地将 `NaN` 值视为任何其他值。
    ([GH 13514](https://github.com/pandas-dev/pandas/issues/13514))'
- en: '[PRE77]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '**Previous behavior**:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE78]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '**New behavior**:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE79]  ### `Index.unique` consistently returns `Index`'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE79]  ### `Index.unique` 一致地返回 `Index`'
- en: '`Index.unique()` now returns unique values as an `Index` of the appropriate
    `dtype`. ([GH 13395](https://github.com/pandas-dev/pandas/issues/13395)). Previously,
    most `Index` classes returned `np.ndarray`, and `DatetimeIndex`, `TimedeltaIndex`
    and `PeriodIndex` returned `Index` to keep metadata like timezone.'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.unique()` 现在返回适当 `dtype` 的唯一值作为 `Index`。([GH 13395](https://github.com/pandas-dev/pandas/issues/13395))。以前，大多数
    `Index` 类返回 `np.ndarray`，而 `DatetimeIndex`、`TimedeltaIndex` 和 `PeriodIndex` 返回
    `Index` 来保留元数据，如时区。'
- en: '**Previous behavior**:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE80]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '**New behavior**:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE81]  ### `MultiIndex` constructors, `groupby` and `set_index` preserve
    categorical dtypes'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE81]  ### `MultiIndex` 构造函数、`groupby` 和 `set_index` 保留分类 `dtype`'
- en: '`MultiIndex.from_arrays` and `MultiIndex.from_product` will now preserve categorical
    dtype in `MultiIndex` levels ([GH 13743](https://github.com/pandas-dev/pandas/issues/13743),
    [GH 13854](https://github.com/pandas-dev/pandas/issues/13854)).'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiIndex.from_arrays` 和 `MultiIndex.from_product` 现在会在 `MultiIndex` 级别中保留分类
    dtype ([GH 13743](https://github.com/pandas-dev/pandas/issues/13743), [GH 13854](https://github.com/pandas-dev/pandas/issues/13854))。'
- en: '[PRE82]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '**Previous behavior**:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE83]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '**New behavior**: the single level is now a `CategoricalIndex`:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：单个级别现在是 `CategoricalIndex`：'
- en: '[PRE84]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: An analogous change has been made to `MultiIndex.from_product`. As a consequence,
    `groupby` and `set_index` also preserve categorical dtypes in indexes
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiIndex.from_product` 也进行了类似的更改。因此，`groupby` 和 `set_index` 也会保留索引中的分类 `dtype`。'
- en: '[PRE85]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '**Previous behavior**:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE86]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '**New behavior**:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE87]  ### Function `read_csv` will progressively enumerate chunks'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE87]  ### 函数 `read_csv` 将逐步枚举块'
- en: When [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    is called with `chunksize=n` and without specifying an index, each chunk used
    to have an independently generated index from `0` to `n-1`. They are now given
    instead a progressive index, starting from `0` for the first chunk, from `n` for
    the second, and so on, so that, when concatenated, they are identical to the result
    of calling [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") without the `chunksize=` argument ([GH 12185](https://github.com/pandas-dev/pandas/issues/12185)).
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 `chunksize=n` 调用 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 时，如果不指定索引，每个块以前都会有一个独立生成的索引，从 `0` 到 `n-1`。现在，它们分别被赋予一个递进的索引，从第一个块的
    `0` 开始，从第二个块的 `n` 开始，以此类推，这样，当连接时，它们与使用 [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 调用时的结果相同，而不带 `chunksize=` 参数 ([GH 12185](https://github.com/pandas-dev/pandas/issues/12185))。
- en: '[PRE88]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '**Previous behavior**:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE89]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '**New behavior**:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE90]  ### Sparse changes'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE90]  ### 稀疏数据变更'
- en: These changes allow pandas to handle sparse data with more dtypes, and for work
    to make a smoother experience with data handling.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 这些更改使 pandas 能够处理更多的稀疏数据 `dtype`，并且使数据处理的体验更加流畅。
- en: Types `int64` and `bool` support enhancements
  id: totrans-334
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`int64` 和 `bool` 类型支持增强'
- en: Sparse data structures now gained enhanced support of `int64` and `bool` `dtype`
    ([GH 667](https://github.com/pandas-dev/pandas/issues/667), [GH 13849](https://github.com/pandas-dev/pandas/issues/13849)).
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在增强了对 `int64` 和 `bool` `dtype` 的支持 ([GH 667](https://github.com/pandas-dev/pandas/issues/667),
    [GH 13849](https://github.com/pandas-dev/pandas/issues/13849))。
- en: Previously, sparse data were `float64` dtype by default, even if all inputs
    were of `int` or `bool` dtype. You had to specify `dtype` explicitly to create
    sparse data with `int64` dtype. Also, `fill_value` had to be specified explicitly
    because the default was `np.nan` which doesn’t appear in `int64` or `bool` data.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，默认情况下稀疏数据为 `float64` dtype，即使所有输入都是 `int` 或 `bool` dtype。您必须显式指定 `dtype`
    来创建具有 `int64` dtype 的稀疏数据。此外，必须显式指定 `fill_value`，因为默认值为 `np.nan`，而 `int64` 或 `bool`
    数据中不包含它。
- en: '[PRE91]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: As of v0.19.0, sparse data keeps the input dtype, and uses more appropriate
    `fill_value` defaults (`0` for `int64` dtype, `False` for `bool` dtype).
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 从 v0.19.0 开始，稀疏数据保持输入 `dtype`，并使用更合适的 `fill_value` 默认值（`int64` dtype 为 `0`，`bool`
    dtype 为 `False`）。
- en: '[PRE92]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: See the [docs](../user_guide/sparse.html#sparse-dtype) for more details.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详细信息，请参阅[文档](../user_guide/sparse.html#sparse-dtype)。
- en: Operators now preserve dtypes
  id: totrans-341
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 运算符现在保留 `dtype`
- en: Sparse data structure now can preserve `dtype` after arithmetic ops ([GH 13848](https://github.com/pandas-dev/pandas/issues/13848))
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在可以在算术操作后保留 `dtype` ([GH 13848](https://github.com/pandas-dev/pandas/issues/13848))
- en: '[PRE93]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Sparse data structure now support `astype` to convert internal `dtype` ([GH
    13900](https://github.com/pandas-dev/pandas/issues/13900))
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在稀疏数据结构支持 `astype` 来转换内部 `dtype` ([GH 13900](https://github.com/pandas-dev/pandas/issues/13900))
- en: '[PRE94]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '`astype` fails if data contains values which cannot be converted to specified
    `dtype`. Note that the limitation is applied to `fill_value` which default is
    `np.nan`.'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '如果数据包含无法转换为指定 `dtype` 的值，则 `astype` 会失败。请注意，此限制适用于默认为 `np.nan` 的 `fill_value`。 '
- en: '[PRE95]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Other sparse fixes
  id: totrans-348
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 其他稀疏修复
- en: Subclassed `SparseDataFrame` and `SparseSeries` now preserve class types when
    slicing or transposing. ([GH 13787](https://github.com/pandas-dev/pandas/issues/13787))
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子类化的 `SparseDataFrame` 和 `SparseSeries` 现在在切片或转置时保留类类型。([GH 13787](https://github.com/pandas-dev/pandas/issues/13787))
- en: '`SparseArray` with `bool` dtype now supports logical (bool) operators ([GH
    14000](https://github.com/pandas-dev/pandas/issues/14000))'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray` 的 `bool` 类型现在支持逻辑（bool）运算符（[GH 14000](https://github.com/pandas-dev/pandas/issues/14000)）'
- en: Bug in `SparseSeries` with `MultiIndex` `[]` indexing may raise `IndexError`
    ([GH 13144](https://github.com/pandas-dev/pandas/issues/13144))
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有 `MultiIndex` 的 `SparseSeries` 中 `[]` 索引可能会引发 `IndexError` 的 bug（[GH 13144](https://github.com/pandas-dev/pandas/issues/13144)）
- en: Bug in `SparseSeries` with `MultiIndex` `[]` indexing result may have normal
    `Index` ([GH 13144](https://github.com/pandas-dev/pandas/issues/13144))
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有 `MultiIndex` 的 `SparseSeries` 中 `[]` 索引的结果可能具有正常的 `Index` 的 bug（[GH 13144](https://github.com/pandas-dev/pandas/issues/13144)）
- en: Bug in `SparseDataFrame` in which `axis=None` did not default to `axis=0` ([GH
    13048](https://github.com/pandas-dev/pandas/issues/13048))
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFrame` 中的一个 bug，`axis=None` 没有默认为 `axis=0`（[GH 13048](https://github.com/pandas-dev/pandas/issues/13048)）'
- en: Bug in `SparseSeries` and `SparseDataFrame` creation with `object` dtype may
    raise `TypeError` ([GH 11633](https://github.com/pandas-dev/pandas/issues/11633))
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `object` dtype 创建 `SparseSeries` 和 `SparseDataFrame` 可能会引发 `TypeError` 的
    bug（[GH 11633](https://github.com/pandas-dev/pandas/issues/11633)）
- en: Bug in `SparseDataFrame` doesn’t respect passed `SparseArray` or `SparseSeries`
    ‘s dtype and `fill_value` ([GH 13866](https://github.com/pandas-dev/pandas/issues/13866))
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFrame` 中的一个 bug，不遵守传递的 `SparseArray` 或 `SparseSeries` 的 dtype 和
    `fill_value`（[GH 13866](https://github.com/pandas-dev/pandas/issues/13866)）'
- en: Bug in `SparseArray` and `SparseSeries` don’t apply ufunc to `fill_value` ([GH
    13853](https://github.com/pandas-dev/pandas/issues/13853))
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray` 和 `SparseSeries` 中不将 ufunc 应用于 `fill_value` 的 bug（[GH 13853](https://github.com/pandas-dev/pandas/issues/13853)）'
- en: Bug in `SparseSeries.abs` incorrectly keeps negative `fill_value` ([GH 13853](https://github.com/pandas-dev/pandas/issues/13853))
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries.abs` 中的一个 bug，错误地保留了负的 `fill_value`（[GH 13853](https://github.com/pandas-dev/pandas/issues/13853)）'
- en: Bug in single row slicing on multi-type `SparseDataFrame` s, types were previously
    forced to float ([GH 13917](https://github.com/pandas-dev/pandas/issues/13917))
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多类型 `SparseDataFrame` 上进行单行切片的 bug，之前类型被强制转换为浮点数（[GH 13917](https://github.com/pandas-dev/pandas/issues/13917)）
- en: Bug in `SparseSeries` slicing changes integer dtype to float ([GH 8292](https://github.com/pandas-dev/pandas/issues/8292))
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries` 切片中的一个 bug，将整数类型转换为浮点数（[GH 8292](https://github.com/pandas-dev/pandas/issues/8292)）'
- en: Bug in `SparseDataFarme` comparison ops may raise `TypeError` ([GH 13001](https://github.com/pandas-dev/pandas/issues/13001))
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFarme` 中比较操作可能会引发 `TypeError` 的 bug（[GH 13001](https://github.com/pandas-dev/pandas/issues/13001)）'
- en: Bug in `SparseDataFarme.isnull` raises `ValueError` ([GH 8276](https://github.com/pandas-dev/pandas/issues/8276))
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFarme.isnull` 中引发 `ValueError` 的 bug（[GH 8276](https://github.com/pandas-dev/pandas/issues/8276)）'
- en: Bug in `SparseSeries` representation with `bool` dtype may raise `IndexError`
    ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有 `bool` dtype 的 `SparseSeries` 表示可能会引发 `IndexError` 的 bug（[GH 13110](https://github.com/pandas-dev/pandas/issues/13110)）
- en: Bug in `SparseSeries` and `SparseDataFrame` of `bool` or `int64` dtype may display
    its values like `float64` dtype ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bool` 或 `int64` dtype 的 `SparseSeries` 和 `SparseDataFrame` 中可能会显示其值为 `float64`
    dtype 的 bug（[GH 13110](https://github.com/pandas-dev/pandas/issues/13110)）'
- en: Bug in sparse indexing using `SparseArray` with `bool` dtype may return incorrect
    result ([GH 13985](https://github.com/pandas-dev/pandas/issues/13985))
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `bool` dtype 的 `SparseArray` 进行稀疏索引可能返回不正确的结果的 bug（[GH 13985](https://github.com/pandas-dev/pandas/issues/13985)）
- en: Bug in `SparseArray` created from `SparseSeries` may lose `dtype` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 `SparseSeries` 创建的 `SparseArray` 可能会丢失 `dtype` 的 bug（[GH 13999](https://github.com/pandas-dev/pandas/issues/13999)）
- en: 'Bug in `SparseSeries` comparison with dense returns normal `Series` rather
    than `SparseSeries` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))  ###
    Indexer dtype changes'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries` 与密集数据比较返回正常的 `Series` 而不是 `SparseSeries` 的 bug（[GH 13999](https://github.com/pandas-dev/pandas/issues/13999）###
    索引器 dtype 更改'
- en: Note
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This change only affects 64 bit python running on Windows, and only affects
    relatively advanced indexing operations
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 此更改仅影响在 Windows 上运行的 64 位 python，并且仅影响相对高级的索引操作
- en: Methods such as `Index.get_indexer` that return an indexer array, coerce that
    array to a “platform int”, so that it can be directly used in 3rd party library
    operations like `numpy.take`. Previously, a platform int was defined as `np.int_`
    which corresponds to a C integer, but the correct type, and what is being used
    now, is `np.intp`, which corresponds to the C integer size that can hold a pointer
    ([GH 3033](https://github.com/pandas-dev/pandas/issues/3033), [GH 13972](https://github.com/pandas-dev/pandas/issues/13972)).
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.get_indexer` 等返回索引器数组的方法会将该数组强制转换为“平台整数”，以便可以直接在第三方库操作中使用，如 `numpy.take`。以前，平台整数被定义为
    `np.int_`，它对应于 C 整数，但正确的类型，现在使用的是 `np.intp`，它对应于可以容纳指针的 C 整数大小（[GH 3033](https://github.com/pandas-dev/pandas/issues/3033)，[GH
    13972](https://github.com/pandas-dev/pandas/issues/13972)）。'
- en: These types are the same on many platform, but for 64 bit python on Windows,
    `np.int_` is 32 bits, and `np.intp` is 64 bits. Changing this behavior improves
    performance for many operations on that platform.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类型在许多平台上是相同的，但对于 Windows 上的 64 位 Python，`np.int_` 是 32 位，而 `np.intp` 是 64
    位。更改此行为可以提高该平台上许多操作的性能。
- en: '**Previous behavior**:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE96]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '**New behavior**:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE97]  ### Other API changes'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE97]  ### 其他 API 更改'
- en: '`Timestamp.to_pydatetime` will issue a `UserWarning` when `warn=True`, and
    the instance has a non-zero number of nanoseconds, previously this would print
    a message to stdout ([GH 14101](https://github.com/pandas-dev/pandas/issues/14101)).'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 `Timestamp.to_pydatetime` 的 `warn=True`，并且实例具有非零纳秒数，则会发出 `UserWarning` 警告，以前会在标准输出中打印消息（[GH
    14101](https://github.com/pandas-dev/pandas/issues/14101)）。
- en: '`Series.unique()` with datetime and timezone now returns return array of `Timestamp`
    with timezone ([GH 13565](https://github.com/pandas-dev/pandas/issues/13565)).'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.unique()` 对于日期时间和时区现在返回带有时区的 `Timestamp` 数组（[GH 13565](https://github.com/pandas-dev/pandas/issues/13565)）。'
- en: '`Panel.to_sparse()` will raise a `NotImplementedError` exception when called
    ([GH 13778](https://github.com/pandas-dev/pandas/issues/13778)).'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用 `Panel.to_sparse()` 时将引发 `NotImplementedError` 异常（[GH 13778](https://github.com/pandas-dev/pandas/issues/13778)）。
- en: '`Index.reshape()` will raise a `NotImplementedError` exception when called
    ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882)).'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用 `Index.reshape()` 时将引发 `NotImplementedError` 异常（[GH 12882](https://github.com/pandas-dev/pandas/issues/12882)）。
- en: '`.filter()` enforces mutual exclusion of the keyword arguments ([GH 12399](https://github.com/pandas-dev/pandas/issues/12399)).'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.filter()` 强制互斥关键字参数（[GH 12399](https://github.com/pandas-dev/pandas/issues/12399)）。'
- en: '`eval`’s upcasting rules for `float32` types have been updated to be more consistent
    with NumPy’s rules. New behavior will not upcast to `float64` if you multiply
    a pandas `float32` object by a scalar float64 ([GH 12388](https://github.com/pandas-dev/pandas/issues/12388)).'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eval` 的 `float32` 类型的升级规则已更新，以使其更符合 NumPy 的规则。如果将 pandas 的 `float32` 对象乘以标量
    `float64`，则新行为不会升级为 `float64`（[GH 12388](https://github.com/pandas-dev/pandas/issues/12388)）。'
- en: An `UnsupportedFunctionCall` error is now raised if NumPy ufuncs like `np.mean`
    are called on groupby or resample objects ([GH 12811](https://github.com/pandas-dev/pandas/issues/12811)).
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在 groupby 或 resample 对象上调用 NumPy ufuncs 如 `np.mean`，则会引发 `UnsupportedFunctionCall`
    错误（[GH 12811](https://github.com/pandas-dev/pandas/issues/12811)）。
- en: '`__setitem__` will no longer apply a callable rhs as a function instead of
    storing it. Call `where` directly to get the previous behavior ([GH 13299](https://github.com/pandas-dev/pandas/issues/13299)).'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__setitem__` 将不再将可调用的 rhs 应用为函数而不是存储它。直接调用 `where` 以获得以前的行为（[GH 13299](https://github.com/pandas-dev/pandas/issues/13299)）。'
- en: Calls to `.sample()` will respect the random seed set via `numpy.random.seed(n)`
    ([GH 13161](https://github.com/pandas-dev/pandas/issues/13161))
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 `.sample()` 的调用将尊重通过 `numpy.random.seed(n)` 设置的随机种子（[GH 13161](https://github.com/pandas-dev/pandas/issues/13161)）
- en: '`Styler.apply` is now more strict about the outputs your function must return.
    For `axis=0` or `axis=1`, the output shape must be identical. For `axis=None`,
    the output must be a DataFrame with identical columns and index labels ([GH 13222](https://github.com/pandas-dev/pandas/issues/13222)).'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Styler.apply` 对于你的函数必须返回的输出现在更加严格。对于 `axis=0` 或 `axis=1`，输出形状必须相同。对于 `axis=None`，输出必须是具有相同列和索引标签的
    DataFrame（[GH 13222](https://github.com/pandas-dev/pandas/issues/13222)）。'
- en: '`Float64Index.astype(int)` will now raise `ValueError` if `Float64Index` contains
    `NaN` values ([GH 13149](https://github.com/pandas-dev/pandas/issues/13149))'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Float64Index.astype(int)` 现在会在 `Float64Index` 包含 `NaN` 值时引发 `ValueError`（[GH
    13149](https://github.com/pandas-dev/pandas/issues/13149)）'
- en: '`TimedeltaIndex.astype(int)` and `DatetimeIndex.astype(int)` will now return
    `Int64Index` instead of `np.array` ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimedeltaIndex.astype(int)`和`DatetimeIndex.astype(int)`现在将返回`Int64Index`而不是`np.array`（[GH
    13209](https://github.com/pandas-dev/pandas/issues/13209))'
- en: Passing `Period` with multiple frequencies to normal `Index` now returns `Index`
    with `object` dtype ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将多频率传递给正常的`Index`现在返回具有`object`数据类型的`Index`（[GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
- en: '`PeriodIndex.fillna` with `Period` has different freq now coerces to `object`
    dtype ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`Period`的`PeriodIndex.fillna`现在强制转换为`object`数据类型（[GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
- en: Faceted boxplots from `DataFrame.boxplot(by=col)` now return a `Series` when
    `return_type` is not None. Previously these returned an `OrderedDict`. Note that
    when `return_type=None`, the default, these still return a 2-D NumPy array ([GH
    12216](https://github.com/pandas-dev/pandas/issues/12216), [GH 7096](https://github.com/pandas-dev/pandas/issues/7096)).
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`DataFrame.boxplot(by=col)`生成的分面箱线图现在在`return_type`不为 None 时返回一个`Series`。以前这些返回一个`OrderedDict`。请注意，当`return_type=None`时，默认情况下，这些仍然返回一个
    2-D NumPy 数组（[GH 12216](https://github.com/pandas-dev/pandas/issues/12216), [GH
    7096](https://github.com/pandas-dev/pandas/issues/7096)).
- en: '`pd.read_hdf` will now raise a `ValueError` instead of `KeyError`, if a mode
    other than `r`, `r+` and `a` is supplied. ([GH 13623](https://github.com/pandas-dev/pandas/issues/13623))'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果提供的模式不是`r`、`r+`和`a`，`pd.read_hdf`现在将引发`ValueError`而不是`KeyError`。([GH 13623](https://github.com/pandas-dev/pandas/issues/13623))
- en: '`pd.read_csv()`, `pd.read_table()`, and `pd.read_hdf()` raise the builtin `FileNotFoundError`
    exception for Python 3.x when called on a nonexistent file; this is back-ported
    as `IOError` in Python 2.x ([GH 14086](https://github.com/pandas-dev/pandas/issues/14086))'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在不存在的文件上调用`pd.read_csv()`、`pd.read_table()`和`pd.read_hdf()`时，Python 3.x现在会引发内置的`FileNotFoundError`异常；这在
    Python 2.x 中被回退为`IOError`（[GH 14086](https://github.com/pandas-dev/pandas/issues/14086))
- en: More informative exceptions are passed through the csv parser. The exception
    type would now be the original exception type instead of `CParserError` ([GH 13652](https://github.com/pandas-dev/pandas/issues/13652)).
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更具信息性的异常将通过 csv 解析器传递。异常类型现在将是原始异常类型，而不是`CParserError`（[GH 13652](https://github.com/pandas-dev/pandas/issues/13652)).
- en: '`pd.read_csv()` in the C engine will now issue a `ParserWarning` or raise a
    `ValueError` when `sep` encoded is more than one character long ([GH 14065](https://github.com/pandas-dev/pandas/issues/14065))'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 C 引擎中，`pd.read_csv()`现在在`sep`编码超过一个字符长时会发出`ParserWarning`或引发`ValueError`（[GH
    14065](https://github.com/pandas-dev/pandas/issues/14065))
- en: '`DataFrame.values` will now return `float64` with a `DataFrame` of mixed `int64`
    and `uint64` dtypes, conforming to `np.find_common_type` ([GH 10364](https://github.com/pandas-dev/pandas/issues/10364),
    [GH 13917](https://github.com/pandas-dev/pandas/issues/13917))'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.values`现在将返回`float64`，其中包含混合`int64`和`uint64`数据类型的`DataFrame`，符合`np.find_common_type`（[GH
    10364](https://github.com/pandas-dev/pandas/issues/10364), [GH 13917](https://github.com/pandas-dev/pandas/issues/13917))'
- en: '`.groupby.groups` will now return a dictionary of `Index` objects, rather than
    a dictionary of `np.ndarray` or `lists` ([GH 14293](https://github.com/pandas-dev/pandas/issues/14293))  ##
    Deprecations'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.groupby.groups`现在将返回`Index`对象的字典，而不是`np.ndarray`或`lists`的字典（[GH 14293](https://github.com/pandas-dev/pandas/issues/14293))  ##
    弃用'
- en: '`Series.reshape` and `Categorical.reshape` have been deprecated and will be
    removed in a subsequent release ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882),
    [GH 12882](https://github.com/pandas-dev/pandas/issues/12882))'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.reshape`和`Categorical.reshape`已被弃用，并将在随后的版本中移除（[GH 12882](https://github.com/pandas-dev/pandas/issues/12882),
    [GH 12882](https://github.com/pandas-dev/pandas/issues/12882))'
- en: '`PeriodIndex.to_datetime` has been deprecated in favor of `PeriodIndex.to_timestamp`
    ([GH 8254](https://github.com/pandas-dev/pandas/issues/8254))'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PeriodIndex.to_datetime`已被弃用，推荐使用`PeriodIndex.to_timestamp`（[GH 8254](https://github.com/pandas-dev/pandas/issues/8254))'
- en: '`Timestamp.to_datetime` has been deprecated in favor of `Timestamp.to_pydatetime`
    ([GH 8254](https://github.com/pandas-dev/pandas/issues/8254))'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp.to_datetime`已被弃用，推荐使用`Timestamp.to_pydatetime`（[GH 8254](https://github.com/pandas-dev/pandas/issues/8254))'
- en: '`Index.to_datetime` and `DatetimeIndex.to_datetime` have been deprecated in
    favor of `pd.to_datetime` ([GH 8254](https://github.com/pandas-dev/pandas/issues/8254))'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index.to_datetime`和`DatetimeIndex.to_datetime`已被弃用，推荐使用`pd.to_datetime`（[GH
    8254](https://github.com/pandas-dev/pandas/issues/8254))'
- en: '`pandas.core.datetools` module has been deprecated and will be removed in a
    subsequent release ([GH 14094](https://github.com/pandas-dev/pandas/issues/14094))'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.core.datetools` 模块已被弃用，并将在随后的版本中移除 ([GH 14094](https://github.com/pandas-dev/pandas/issues/14094))'
- en: '`SparseList` has been deprecated and will be removed in a future version ([GH
    13784](https://github.com/pandas-dev/pandas/issues/13784))'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseList` 已被弃用，并将在将来的版本中移除 ([GH 13784](https://github.com/pandas-dev/pandas/issues/13784))'
- en: '`DataFrame.to_html()` and `DataFrame.to_latex()` have dropped the `colSpace`
    parameter in favor of `col_space` ([GH 13857](https://github.com/pandas-dev/pandas/issues/13857))'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_html()` 和 `DataFrame.to_latex()` 已经移除了 `colSpace` 参数，改用 `col_space`
    ([GH 13857](https://github.com/pandas-dev/pandas/issues/13857))'
- en: '`DataFrame.to_sql()` has deprecated the `flavor` parameter, as it is superfluous
    when SQLAlchemy is not installed ([GH 13611](https://github.com/pandas-dev/pandas/issues/13611))'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_sql()` 已经弃用 `flavor` 参数，因为在未安装 SQLAlchemy 时它是多余的 ([GH 13611](https://github.com/pandas-dev/pandas/issues/13611))'
- en: 'Deprecated `read_csv` keywords:'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弃用的 `read_csv` 关键词：
- en: '`compact_ints` and `use_unsigned` have been deprecated and will be removed
    in a future version ([GH 13320](https://github.com/pandas-dev/pandas/issues/13320))'
  id: totrans-405
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compact_ints` 和 `use_unsigned` 已被弃用，并将在将来的版本中移除 ([GH 13320](https://github.com/pandas-dev/pandas/issues/13320))'
- en: '`buffer_lines` has been deprecated and will be removed in a future version
    ([GH 13360](https://github.com/pandas-dev/pandas/issues/13360))'
  id: totrans-406
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`buffer_lines` 已被弃用，并将在将来的版本中移除 ([GH 13360](https://github.com/pandas-dev/pandas/issues/13360))'
- en: '`as_recarray` has been deprecated and will be removed in a future version ([GH
    13373](https://github.com/pandas-dev/pandas/issues/13373))'
  id: totrans-407
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`as_recarray` 已经被弃用，并将在将来的版本中移除 ([GH 13373](https://github.com/pandas-dev/pandas/issues/13373))'
- en: '`skip_footer` has been deprecated in favor of `skipfooter` and will be removed
    in a future version ([GH 13349](https://github.com/pandas-dev/pandas/issues/13349))'
  id: totrans-408
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`skip_footer` 已被弃用，推荐使用 `skipfooter`，并将在将来的版本中移除 ([GH 13349](https://github.com/pandas-dev/pandas/issues/13349))'
- en: top-level `pd.ordered_merge()` has been renamed to `pd.merge_ordered()` and
    the original name will be removed in a future version ([GH 13358](https://github.com/pandas-dev/pandas/issues/13358))
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶层 `pd.ordered_merge()` 已重命名为 `pd.merge_ordered()`，原始名称将在将来的版本中移除 ([GH 13358](https://github.com/pandas-dev/pandas/issues/13358))
- en: '`Timestamp.offset` property (and named arg in the constructor), has been deprecated
    in favor of `freq` ([GH 12160](https://github.com/pandas-dev/pandas/issues/12160))'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp.offset` 属性（以及构造函数中的命名参数）已被弃用，推荐使用 `freq` ([GH 12160](https://github.com/pandas-dev/pandas/issues/12160))'
- en: '`pd.tseries.util.pivot_annual` is deprecated. Use `pivot_table` as alternative,
    an example is [here](../user_guide/cookbook.html#cookbook-pivot) ([GH 736](https://github.com/pandas-dev/pandas/issues/736))'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.tseries.util.pivot_annual` 已被弃用。使用 `pivot_table` 作为替代方法，一个示例在[这里](../user_guide/cookbook.html#cookbook-pivot)
    ([GH 736](https://github.com/pandas-dev/pandas/issues/736))'
- en: '`pd.tseries.util.isleapyear` has been deprecated and will be removed in a subsequent
    release. Datetime-likes now have a `.is_leap_year` property ([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.tseries.util.isleapyear` 已被弃用，并将在随后的版本中移除。Datetime-likes 现在具有 `.is_leap_year`
    属性 ([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
- en: '`Panel4D` and `PanelND` constructors are deprecated and will be removed in
    a future version. The recommended way to represent these types of n-dimensional
    data are with the [xarray package](http://xarray.pydata.org/en/stable/). pandas
    provides a `to_xarray()` method to automate this conversion ([GH 13564](https://github.com/pandas-dev/pandas/issues/13564)).'
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Panel4D` 和 `PanelND` 构造函数已被弃用，并将在将来的版本中移除。推荐的表示这些类型的 n-维数据的方法是使用 [xarray 包](http://xarray.pydata.org/en/stable/)。pandas
    提供了 `to_xarray()` 方法来自动执行此转换 ([GH 13564](https://github.com/pandas-dev/pandas/issues/13564))。'
- en: '`pandas.tseries.frequencies.get_standard_freq` is deprecated. Use `pandas.tseries.frequencies.to_offset(freq).rule_code`
    instead ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.tseries.frequencies.get_standard_freq` 已被弃用。使用 `pandas.tseries.frequencies.to_offset(freq).rule_code`
    代替 ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))'
- en: '`pandas.tseries.frequencies.to_offset`’s `freqstr` keyword is deprecated in
    favor of `freq` ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.tseries.frequencies.to_offset` 的 `freqstr` 关键词已被弃用，改用 `freq` ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))'
- en: '`Categorical.from_array` has been deprecated and will be removed in a future
    version ([GH 13854](https://github.com/pandas-dev/pandas/issues/13854))  ## Removal
    of prior version deprecations/changes'
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Categorical.from_array` 已被弃用，并将在将来的版本中移除 ([GH 13854](https://github.com/pandas-dev/pandas/issues/13854))  ##
    移除之前版本的弃用/更改'
- en: The `SparsePanel` class has been removed ([GH 13778](https://github.com/pandas-dev/pandas/issues/13778))
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparsePanel`类已删除（[GH 13778](https://github.com/pandas-dev/pandas/issues/13778)）'
- en: The `pd.sandbox` module has been removed in favor of the external library `pandas-qt`
    ([GH 13670](https://github.com/pandas-dev/pandas/issues/13670))
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.sandbox`模块已删除，改为使用外部库`pandas-qt`（[GH 13670](https://github.com/pandas-dev/pandas/issues/13670)）'
- en: The `pandas.io.data` and `pandas.io.wb` modules are removed in favor of the
    [pandas-datareader package](https://github.com/pydata/pandas-datareader) ([GH
    13724](https://github.com/pandas-dev/pandas/issues/13724)).
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.io.data`和`pandas.io.wb`模块已删除，改为使用[pandas-datareader包](https://github.com/pydata/pandas-datareader)（[GH
    13724](https://github.com/pandas-dev/pandas/issues/13724)）'
- en: The `pandas.tools.rplot` module has been removed in favor of the [seaborn package](https://github.com/mwaskom/seaborn)
    ([GH 13855](https://github.com/pandas-dev/pandas/issues/13855))
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.tools.rplot`模块已删除，改为使用[seaborn包](https://github.com/mwaskom/seaborn)（[GH
    13855](https://github.com/pandas-dev/pandas/issues/13855)）'
- en: '`DataFrame.to_csv()` has dropped the `engine` parameter, as was deprecated
    in 0.17.1 ([GH 11274](https://github.com/pandas-dev/pandas/issues/11274), [GH
    13419](https://github.com/pandas-dev/pandas/issues/13419))'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_csv()`已删除`engine`参数，自0.17.1起已弃用（[GH 11274](https://github.com/pandas-dev/pandas/issues/11274)，[GH
    13419](https://github.com/pandas-dev/pandas/issues/13419)）'
- en: '`DataFrame.to_dict()` has dropped the `outtype` parameter in favor of `orient`
    ([GH 13627](https://github.com/pandas-dev/pandas/issues/13627), [GH 8486](https://github.com/pandas-dev/pandas/issues/8486))'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_dict()`已删除`outtype`参数，改为使用`orient`（[GH 13627](https://github.com/pandas-dev/pandas/issues/13627)，[GH
    8486](https://github.com/pandas-dev/pandas/issues/8486)）'
- en: '`pd.Categorical` has dropped setting of the `ordered` attribute directly in
    favor of the `set_ordered` method ([GH 13671](https://github.com/pandas-dev/pandas/issues/13671))'
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Categorical`已删除直接设置`ordered`属性，改为使用`set_ordered`方法（[GH 13671](https://github.com/pandas-dev/pandas/issues/13671)）'
- en: '`pd.Categorical` has dropped the `levels` attribute in favor of `categories`
    ([GH 8376](https://github.com/pandas-dev/pandas/issues/8376))'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Categorical`已删除`levels`属性，改为使用`categories`（[GH 8376](https://github.com/pandas-dev/pandas/issues/8376)）'
- en: '`DataFrame.to_sql()` has dropped the `mysql` option for the `flavor` parameter
    ([GH 13611](https://github.com/pandas-dev/pandas/issues/13611))'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_sql()`已删除`flavor`参数中的`mysql`选项（[GH 13611](https://github.com/pandas-dev/pandas/issues/13611)）'
- en: '`Panel.shift()` has dropped the `lags` parameter in favor of `periods` ([GH
    14041](https://github.com/pandas-dev/pandas/issues/14041))'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Panel.shift()`已删除`lags`参数，改为使用`periods`（[GH 14041](https://github.com/pandas-dev/pandas/issues/14041)）'
- en: '`pd.Index` has dropped the `diff` method in favor of `difference` ([GH 13669](https://github.com/pandas-dev/pandas/issues/13669))'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Index`已删除`diff`方法，改为使用`difference`（[GH 13669](https://github.com/pandas-dev/pandas/issues/13669)）'
- en: '`pd.DataFrame` has dropped the `to_wide` method in favor of `to_panel` ([GH
    14039](https://github.com/pandas-dev/pandas/issues/14039))'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.DataFrame`已删除`to_wide`方法，改为使用`to_panel`（[GH 14039](https://github.com/pandas-dev/pandas/issues/14039)）'
- en: '`Series.to_csv` has dropped the `nanRep` parameter in favor of `na_rep` ([GH
    13804](https://github.com/pandas-dev/pandas/issues/13804))'
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.to_csv`已删除`nanRep`参数，改为使用`na_rep`（[GH 13804](https://github.com/pandas-dev/pandas/issues/13804)）'
- en: '`Series.xs`, `DataFrame.xs`, `Panel.xs`, `Panel.major_xs`, and `Panel.minor_xs`
    have dropped the `copy` parameter ([GH 13781](https://github.com/pandas-dev/pandas/issues/13781))'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.xs`、`DataFrame.xs`、`Panel.xs`、`Panel.major_xs`和`Panel.minor_xs`已删除`copy`参数（[GH
    13781](https://github.com/pandas-dev/pandas/issues/13781)）'
- en: '`str.split` has dropped the `return_type` parameter in favor of `expand` ([GH
    13701](https://github.com/pandas-dev/pandas/issues/13701))'
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`str.split`已删除`return_type`参数，改为使用`expand`（[GH 13701](https://github.com/pandas-dev/pandas/issues/13701)）'
- en: Removal of the legacy time rules (offset aliases), deprecated since 0.17.0 (this
    has been alias since 0.8.0) ([GH 13590](https://github.com/pandas-dev/pandas/issues/13590),
    [GH 13868](https://github.com/pandas-dev/pandas/issues/13868)). Now legacy time
    rules raises `ValueError`. For the list of currently supported offsets, see [here](../user_guide/timeseries.html#timeseries-offset-aliases).
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自0.17.0起，已删除遗留时间规则（偏移别名），此前已弃用（自0.8.0以来已是别名）（[GH 13590](https://github.com/pandas-dev/pandas/issues/13590)，[GH
    13868](https://github.com/pandas-dev/pandas/issues/13868)）。现在遗留时间规则会引发`ValueError`。当前支持的偏移列表，请参见[这里](../user_guide/timeseries.html#timeseries-offset-aliases)。
- en: The default value for the `return_type` parameter for `DataFrame.plot.box` and
    `DataFrame.boxplot` changed from `None` to `"axes"`. These methods will now return
    a matplotlib axes by default instead of a dictionary of artists. See [here](../user_guide/visualization.html#visualization-box-return)
    ([GH 6581](https://github.com/pandas-dev/pandas/issues/6581)).
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.plot.box`和`DataFrame.boxplot`的`return_type`参数的默认值从`None`更改为`"axes"`。这些方法现在默认返回matplotlib
    axes而不是艺术家字典。参见[这里](../user_guide/visualization.html#visualization-box-return)（[GH
    6581](https://github.com/pandas-dev/pandas/issues/6581)）'
- en: 'The `tquery` and `uquery` functions in the `pandas.io.sql` module are removed
    ([GH 5950](https://github.com/pandas-dev/pandas/issues/5950)).  ## Performance
    improvements'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.io.sql`模块中的`tquery`和`uquery`函数已删除（[GH 5950](https://github.com/pandas-dev/pandas/issues/5950)）  ##
    性能改进'
- en: Improved performance of sparse `IntIndex.intersect` ([GH 13082](https://github.com/pandas-dev/pandas/issues/13082))
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了稀疏`IntIndex.intersect`的性能（[GH 13082](https://github.com/pandas-dev/pandas/issues/13082)）
- en: Improved performance of sparse arithmetic with `BlockIndex` when the number
    of blocks are large, though recommended to use `IntIndex` in such cases ([GH 13082](https://github.com/pandas-dev/pandas/issues/13082))
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当块数量较多时，使用`BlockIndex`可以提高稀疏算术性能，尽管在这种情况下建议使用`IntIndex`（[GH 13082](https://github.com/pandas-dev/pandas/issues/13082)）
- en: Improved performance of `DataFrame.quantile()` as it now operates per-block
    ([GH 11623](https://github.com/pandas-dev/pandas/issues/11623))
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.quantile()`的性能改进，现在它是按块操作的（[GH 11623](https://github.com/pandas-dev/pandas/issues/11623)）'
- en: Improved performance of float64 hash table operations, fixing some very slow
    indexing and groupby operations in python 3 ([GH 13166](https://github.com/pandas-dev/pandas/issues/13166),
    [GH 13334](https://github.com/pandas-dev/pandas/issues/13334))
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Python 3中改进了float64哈希表操作的性能，修复了一些非常慢的索引和groupby操作（[GH 13166](https://github.com/pandas-dev/pandas/issues/13166)，[GH
    13334](https://github.com/pandas-dev/pandas/issues/13334)）
- en: Improved performance of `DataFrameGroupBy.transform` ([GH 12737](https://github.com/pandas-dev/pandas/issues/12737))
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了`DataFrameGroupBy.transform`的性能（[GH 12737](https://github.com/pandas-dev/pandas/issues/12737)）
- en: Improved performance of `Index` and `Series` `.duplicated` ([GH 10235](https://github.com/pandas-dev/pandas/issues/10235))
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了`Index`和`Series`的`.duplicated`的性能（[GH 10235](https://github.com/pandas-dev/pandas/issues/10235)）
- en: Improved performance of `Index.difference` ([GH 12044](https://github.com/pandas-dev/pandas/issues/12044))
  id: totrans-441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了`Index.difference`的性能（[GH 12044](https://github.com/pandas-dev/pandas/issues/12044)）
- en: Improved performance of `RangeIndex.is_monotonic_increasing` and `is_monotonic_decreasing`
    ([GH 13749](https://github.com/pandas-dev/pandas/issues/13749))
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了`RangeIndex.is_monotonic_increasing`和`is_monotonic_decreasing`的性能（[GH 13749](https://github.com/pandas-dev/pandas/issues/13749)）
- en: Improved performance of datetime string parsing in `DatetimeIndex` ([GH 13692](https://github.com/pandas-dev/pandas/issues/13692))
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DatetimeIndex`中改进了日期时间字符串解析的性能（[GH 13692](https://github.com/pandas-dev/pandas/issues/13692)）
- en: Improved performance of hashing `Period` ([GH 12817](https://github.com/pandas-dev/pandas/issues/12817))
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了`Period`的哈希性能（[GH 12817](https://github.com/pandas-dev/pandas/issues/12817)）
- en: Improved performance of `factorize` of datetime with timezone ([GH 13750](https://github.com/pandas-dev/pandas/issues/13750))
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了带时区的日期时间的`factorize`性能（[GH 13750](https://github.com/pandas-dev/pandas/issues/13750)）
- en: Improved performance of by lazily creating indexing hashtables on larger Indexes
    ([GH 14266](https://github.com/pandas-dev/pandas/issues/14266))
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在更大的索引上懒惰地创建索引哈希表来改进了性能（[GH 14266](https://github.com/pandas-dev/pandas/issues/14266)）
- en: Improved performance of `groupby.groups` ([GH 14293](https://github.com/pandas-dev/pandas/issues/14293))
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了`groupby.groups`的性能（[GH 14293](https://github.com/pandas-dev/pandas/issues/14293)）
- en: 'Unnecessary materializing of a MultiIndex when introspecting for memory usage
    ([GH 14308](https://github.com/pandas-dev/pandas/issues/14308))  ## Bug fixes'
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在内省内存使用量时，不必要地实例化MultiIndex（[GH 14308](https://github.com/pandas-dev/pandas/issues/14308)）  ##
    错误修复'
- en: Bug in `groupby().shift()`, which could cause a segfault or corruption in rare
    circumstances when grouping by columns with missing values ([GH 13813](https://github.com/pandas-dev/pandas/issues/13813))
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby().shift()`中的错误，在按列分组时出现缺失值时，可能导致段错误或数据损坏（[GH 13813](https://github.com/pandas-dev/pandas/issues/13813)）'
- en: Bug in `groupby().cumsum()` calculating `cumprod` when `axis=1`. ([GH 13994](https://github.com/pandas-dev/pandas/issues/13994))
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`groupby().cumsum()`中存在错误，当`axis=1`时，计算`cumprod`。（[GH 13994](https://github.com/pandas-dev/pandas/issues/13994)）
- en: Bug in `pd.to_timedelta()` in which the `errors` parameter was not being respected
    ([GH 13613](https://github.com/pandas-dev/pandas/issues/13613))
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.to_timedelta()`中的错误，在这里`errors`参数未被尊重（[GH 13613](https://github.com/pandas-dev/pandas/issues/13613)）'
- en: Bug in `io.json.json_normalize()`, where non-ascii keys raised an exception
    ([GH 13213](https://github.com/pandas-dev/pandas/issues/13213))
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `io.json.json_normalize()` 中，非 ASCII 键引发异常存在错误（[GH 13213](https://github.com/pandas-dev/pandas/issues/13213)）
- en: Bug when passing a not-default-indexed `Series` as `xerr` or `yerr` in `.plot()`
    ([GH 11858](https://github.com/pandas-dev/pandas/issues/11858))
  id: totrans-453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.plot()` 中将非默认索引的 `Series` 作为 `xerr` 或 `yerr` 传递时存在错误（[GH 11858](https://github.com/pandas-dev/pandas/issues/11858)）
- en: Bug in area plot draws legend incorrectly if subplot is enabled or legend is
    moved after plot (matplotlib 1.5.0 is required to draw area plot legend properly)
    ([GH 9161](https://github.com/pandas-dev/pandas/issues/9161), [GH 13544](https://github.com/pandas-dev/pandas/issues/13544))
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在区域图绘制中，如果启用了子图或在绘图后移动图例，则图例会被错误地绘制（需要 matplotlib 1.5.0 正确绘制区域图图例）（[GH 9161](https://github.com/pandas-dev/pandas/issues/9161),
    [GH 13544](https://github.com/pandas-dev/pandas/issues/13544)）
- en: Bug in `DataFrame` assignment with an object-dtyped `Index` where the resultant
    column is mutable to the original object. ([GH 13522](https://github.com/pandas-dev/pandas/issues/13522))
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用对象数据类型 `Index` 进行 `DataFrame` 赋值时存在错误，导致结果列对原始对象可变（[GH 13522](https://github.com/pandas-dev/pandas/issues/13522)）
- en: Bug in matplotlib `AutoDataFormatter`; this restores the second scaled formatting
    and re-adds micro-second scaled formatting ([GH 13131](https://github.com/pandas-dev/pandas/issues/13131))
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 matplotlib `AutoDataFormatter` 中存在错误；这恢复了第二个缩放格式和重新添加了微秒缩放格式（[GH 13131](https://github.com/pandas-dev/pandas/issues/13131)）
- en: Bug in selection from a `HDFStore` with a fixed format and `start` and/or `stop`
    specified will now return the selected range ([GH 8287](https://github.com/pandas-dev/pandas/issues/8287))
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有固定格式和指定 `start` 和/或 `stop` 的 `HDFStore` 中进行选择时，现在将返回所选范围（[GH 8287](https://github.com/pandas-dev/pandas/issues/8287)）
- en: Bug in `Categorical.from_codes()` where an unhelpful error was raised when an
    invalid `ordered` parameter was passed in ([GH 14058](https://github.com/pandas-dev/pandas/issues/14058))
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Categorical.from_codes()` 中传递无效的 `ordered` 参数时引发了一个无用的错误（[GH 14058](https://github.com/pandas-dev/pandas/issues/14058)）
- en: Bug in `Series` construction from a tuple of integers on windows not returning
    default dtype (int64) ([GH 13646](https://github.com/pandas-dev/pandas/issues/13646))
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上从整数元组构建 `Series` 时未返回默认数据类型（int64）存在错误（[GH 13646](https://github.com/pandas-dev/pandas/issues/13646)）
- en: Bug in `TimedeltaIndex` addition with a Datetime-like object where addition
    overflow was not being caught ([GH 14068](https://github.com/pandas-dev/pandas/issues/14068))
  id: totrans-460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `TimedeltaIndex` 添加日期时间对象时，未捕获溢出错误存在错误（[GH 14068](https://github.com/pandas-dev/pandas/issues/14068)）
- en: Bug in `.groupby(..).resample(..)` when the same object is called multiple times
    ([GH 13174](https://github.com/pandas-dev/pandas/issues/13174))
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多次调用相同对象时，`.groupby(..).resample(..)` 存在错误（[GH 13174](https://github.com/pandas-dev/pandas/issues/13174)）
- en: Bug in `.to_records()` when index name is a unicode string ([GH 13172](https://github.com/pandas-dev/pandas/issues/13172))
  id: totrans-462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在索引名称为 Unicode 字符串时，`.to_records()` 存在错误（[GH 13172](https://github.com/pandas-dev/pandas/issues/13172)）
- en: Bug in calling `.memory_usage()` on object which doesn’t implement ([GH 12924](https://github.com/pandas-dev/pandas/issues/12924))
  id: totrans-463
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在未实现对象上调用 `.memory_usage()` 存在错误（[GH 12924](https://github.com/pandas-dev/pandas/issues/12924)）
- en: Regression in `Series.quantile` with nans (also shows up in `.median()` and
    `.describe()` ); furthermore now names the `Series` with the quantile ([GH 13098](https://github.com/pandas-dev/pandas/issues/13098),
    [GH 13146](https://github.com/pandas-dev/pandas/issues/13146))
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.quantile` 中存在 nan 值的回归问题（也出现在 `.median()` 和 `.describe()` 中）；此外，现在使用分位数对
    `Series` 进行命名（[GH 13098](https://github.com/pandas-dev/pandas/issues/13098), [GH
    13146](https://github.com/pandas-dev/pandas/issues/13146)）'
- en: Bug in `SeriesGroupBy.transform` with datetime values and missing groups ([GH
    13191](https://github.com/pandas-dev/pandas/issues/13191))
  id: totrans-465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有日期时间值和缺失组的 `SeriesGroupBy.transform` 中存在错误（[GH 13191](https://github.com/pandas-dev/pandas/issues/13191)）
- en: Bug where empty `Series` were incorrectly coerced in datetime-like numeric operations
    ([GH 13844](https://github.com/pandas-dev/pandas/issues/13844))
  id: totrans-466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空 `Series` 在日期时间类似的数值操作中被错误地强制转换存在错误（[GH 13844](https://github.com/pandas-dev/pandas/issues/13844)）
- en: Bug in `Categorical` constructor when passed a `Categorical` containing datetimes
    with timezones ([GH 14190](https://github.com/pandas-dev/pandas/issues/14190))
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传递包含带时区的日期时间的 `Categorical` 时存在错误（[GH 14190](https://github.com/pandas-dev/pandas/issues/14190)）
- en: Bug in `Series.str.extractall()` with `str` index raises `ValueError` ([GH 13156](https://github.com/pandas-dev/pandas/issues/13156))
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.str.extractall()` 中的 `str` 索引存在错误引发 `ValueError`（[GH 13156](https://github.com/pandas-dev/pandas/issues/13156)）'
- en: Bug in `Series.str.extractall()` with single group and quantifier ([GH 13382](https://github.com/pandas-dev/pandas/issues/13382))
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在带有单个组和量词的 `Series.str.extractall()` 中出现的 bug（[GH 13382](https://github.com/pandas-dev/pandas/issues/13382)）。
- en: Bug in `DatetimeIndex` and `Period` subtraction raises `ValueError` or `AttributeError`
    rather than `TypeError` ([GH 13078](https://github.com/pandas-dev/pandas/issues/13078))
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DatetimeIndex` 和 `Period` 相减时引发 `ValueError` 或 `AttributeError` 而不是 `TypeError`
    的 bug（[GH 13078](https://github.com/pandas-dev/pandas/issues/13078)）。
- en: Bug in `Index` and `Series` created with `NaN` and `NaT` mixed data may not
    have `datetime64` dtype ([GH 13324](https://github.com/pandas-dev/pandas/issues/13324))
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在创建带有 `NaN` 和 `NaT` 混合数据的 `Index` 和 `Series` 时可能没有 `datetime64` dtype 的 bug（[GH
    13324](https://github.com/pandas-dev/pandas/issues/13324)）。
- en: Bug in `Index` and `Series` may ignore `np.datetime64('nat')` and `np.timdelta64('nat')`
    to infer dtype ([GH 13324](https://github.com/pandas-dev/pandas/issues/13324))
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Index` 和 `Series` 可能会忽略 `np.datetime64('nat')` 和 `np.timdelta64('nat')` 来推断
    dtype 时出现的 bug（[GH 13324](https://github.com/pandas-dev/pandas/issues/13324)）。
- en: Bug in `PeriodIndex` and `Period` subtraction raises `AttributeError` ([GH 13071](https://github.com/pandas-dev/pandas/issues/13071))
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `PeriodIndex` 和 `Period` 相减时引发 `AttributeError` 的 bug（[GH 13071](https://github.com/pandas-dev/pandas/issues/13071)）。
- en: Bug in `PeriodIndex` construction returning a `float64` index in some circumstances
    ([GH 13067](https://github.com/pandas-dev/pandas/issues/13067))
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些情况下返回一个 `float64` 索引的 `PeriodIndex` 构造中出现的 bug（[GH 13067](https://github.com/pandas-dev/pandas/issues/13067)）。
- en: Bug in `.resample(..)` with a `PeriodIndex` not changing its `freq` appropriately
    when empty ([GH 13067](https://github.com/pandas-dev/pandas/issues/13067))
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用 `PeriodIndex` 时，当为空时不适当地更改其 `freq` 的 `.resample(..)` 中出现的 bug（[GH 13067](https://github.com/pandas-dev/pandas/issues/13067)）。
- en: Bug in `.resample(..)` with a `PeriodIndex` not retaining its type or name with
    an empty `DataFrame` appropriately when empty ([GH 13212](https://github.com/pandas-dev/pandas/issues/13212))
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用 `PeriodIndex` 时，当为空时不适当地保留其类型或名称的 `.resample(..)` 中出现的 bug（[GH 13212](https://github.com/pandas-dev/pandas/issues/13212)）。
- en: Bug in `groupby(..).apply(..)` when the passed function returns scalar values
    per group ([GH 13468](https://github.com/pandas-dev/pandas/issues/13468)).
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用`groupby(..).apply(..)`时出现的 bug，当传递的函数每组返回标量值时（[GH 13468](https://github.com/pandas-dev/pandas/issues/13468)）。
- en: Bug in `groupby(..).resample(..)` where passing some keywords would raise an
    exception ([GH 13235](https://github.com/pandas-dev/pandas/issues/13235))
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用`groupby(..).resample(..)`时出现的 bug，传递某些关键字会引发异常（[GH 13235](https://github.com/pandas-dev/pandas/issues/13235)）。
- en: Bug in `.tz_convert` on a tz-aware `DateTimeIndex` that relied on index being
    sorted for correct results ([GH 13306](https://github.com/pandas-dev/pandas/issues/13306))
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在依赖索引排序以获得正确结果的 tz-aware `DateTimeIndex` 上执行 `.tz_convert` 时出现的 bug（[GH 13306](https://github.com/pandas-dev/pandas/issues/13306)）。
- en: Bug in `.tz_localize` with `dateutil.tz.tzlocal` may return incorrect result
    ([GH 13583](https://github.com/pandas-dev/pandas/issues/13583))
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用 `dateutil.tz.tzlocal` 的 `.tz_localize` 中可能返回不正确结果的 bug（[GH 13583](https://github.com/pandas-dev/pandas/issues/13583)）。
- en: Bug in `DatetimeTZDtype` dtype with `dateutil.tz.tzlocal` cannot be regarded
    as valid dtype ([GH 13583](https://github.com/pandas-dev/pandas/issues/13583))
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用 `dateutil.tz.tzlocal` 的 `DatetimeTZDtype` dtype 时无法被视为有效 dtype 的 bug（[GH
    13583](https://github.com/pandas-dev/pandas/issues/13583)）。
- en: Bug in `pd.read_hdf()` where attempting to load an HDF file with a single dataset,
    that had one or more categorical columns, failed unless the key argument was set
    to the name of the dataset. ([GH 13231](https://github.com/pandas-dev/pandas/issues/13231))
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用`pd.read_hdf()`时的 bug，尝试加载一个只有一个数据集且有一个或多个分类列的 HDF 文件会失败，除非将 key 参数设置为数据集的名称（[GH
    13231](https://github.com/pandas-dev/pandas/issues/13231)）。
- en: Bug in `.rolling()` that allowed a negative integer window in construction of
    the `Rolling()` object, but would later fail on aggregation ([GH 13383](https://github.com/pandas-dev/pandas/issues/13383))
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.rolling()` 中允许使用负整数窗口构造 `Rolling()` 对象的 bug，但后来在聚合时会失败（[GH 13383](https://github.com/pandas-dev/pandas/issues/13383)）。
- en: Bug in `Series` indexing with tuple-valued data and a numeric index ([GH 13509](https://github.com/pandas-dev/pandas/issues/13509))
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用元组值数据和数值索引的 `Series` 索引时出现的 bug（[GH 13509](https://github.com/pandas-dev/pandas/issues/13509)）。
- en: Bug in printing `pd.DataFrame` where unusual elements with the `object` dtype
    were causing segfaults ([GH 13717](https://github.com/pandas-dev/pandas/issues/13717))
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在打印 `pd.DataFrame` 时，具有 `object` dtype 的不寻常元素导致段错误的 bug（[GH 13717](https://github.com/pandas-dev/pandas/issues/13717)）。
- en: Bug in ranking `Series` which could result in segfaults ([GH 13445](https://github.com/pandas-dev/pandas/issues/13445))
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在排名 `Series` 时可能导致段错误的 bug（[GH 13445](https://github.com/pandas-dev/pandas/issues/13445)）。
- en: Bug in various index types, which did not propagate the name of passed index
    ([GH 12309](https://github.com/pandas-dev/pandas/issues/12309))
  id: totrans-487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种索引类型中的错误，未传递传入索引的名称（[GH 12309](https://github.com/pandas-dev/pandas/issues/12309)）
- en: Bug in `DatetimeIndex`, which did not honour the `copy=True` ([GH 13205](https://github.com/pandas-dev/pandas/issues/13205))
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DatetimeIndex` 中的错误，未能遵守 `copy=True`（[GH 13205](https://github.com/pandas-dev/pandas/issues/13205)）'
- en: Bug in `DatetimeIndex.is_normalized` returns incorrectly for normalized date_range
    in case of local timezones ([GH 13459](https://github.com/pandas-dev/pandas/issues/13459))
  id: totrans-489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DatetimeIndex.is_normalized` 中的错误会在本地时区的标准化 `date_range` 的情况下返回错误结果（[GH 13459](https://github.com/pandas-dev/pandas/issues/13459)）'
- en: Bug in `pd.concat` and `.append` may coerces `datetime64` and `timedelta` to
    `object` dtype containing python built-in `datetime` or `timedelta` rather than
    `Timestamp` or `Timedelta` ([GH 13626](https://github.com/pandas-dev/pandas/issues/13626))
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.concat` 和 `.append` 中可能将 `datetime64` 和 `timedelta` 强制转换为包含 Python 内置 `datetime`
    或 `timedelta` 而不是 `Timestamp` 或 `Timedelta` 的 `object` 类型（[GH 13626](https://github.com/pandas-dev/pandas/issues/13626)）'
- en: Bug in `PeriodIndex.append` may raises `AttributeError` when the result is `object`
    dtype ([GH 13221](https://github.com/pandas-dev/pandas/issues/13221))
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PeriodIndex.append` 中的错误可能在结果为 `object` 类型时引发 `AttributeError`（[GH 13221](https://github.com/pandas-dev/pandas/issues/13221)）'
- en: Bug in `CategoricalIndex.append` may accept normal `list` ([GH 13626](https://github.com/pandas-dev/pandas/issues/13626))
  id: totrans-492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CategoricalIndex.append` 中的错误可能接受普通的 `list`（[GH 13626](https://github.com/pandas-dev/pandas/issues/13626)）'
- en: Bug in `pd.concat` and `.append` with the same timezone get reset to UTC ([GH
    7795](https://github.com/pandas-dev/pandas/issues/7795))
  id: totrans-493
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.concat` 和 `.append` 中相同时区的错误被重置为 UTC（[GH 7795](https://github.com/pandas-dev/pandas/issues/7795)）'
- en: Bug in `Series` and `DataFrame` `.append` raises `AmbiguousTimeError` if data
    contains datetime near DST boundary ([GH 13626](https://github.com/pandas-dev/pandas/issues/13626))
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 和 `DataFrame` 中的 `.append` 在数据包含接近 DST 边界的日期时间时引发 `AmbiguousTimeError`（[GH
    13626](https://github.com/pandas-dev/pandas/issues/13626)）'
- en: Bug in `DataFrame.to_csv()` in which float values were being quoted even though
    quotations were specified for non-numeric values only ([GH 12922](https://github.com/pandas-dev/pandas/issues/12922),
    [GH 13259](https://github.com/pandas-dev/pandas/issues/13259))
  id: totrans-495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_csv()` 中的错误，即使只为非数字值指定引号，浮点值也会被引用（[GH 12922](https://github.com/pandas-dev/pandas/issues/12922)，[GH
    13259](https://github.com/pandas-dev/pandas/issues/13259)）'
- en: Bug in `DataFrame.describe()` raising `ValueError` with only boolean columns
    ([GH 13898](https://github.com/pandas-dev/pandas/issues/13898))
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.describe()` 中引发 `ValueError` 仅包含布尔列时（[GH 13898](https://github.com/pandas-dev/pandas/issues/13898)）'
- en: Bug in `MultiIndex` slicing where extra elements were returned when level is
    non-unique ([GH 12896](https://github.com/pandas-dev/pandas/issues/12896))
  id: totrans-497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiIndex` 切片中，当级别不唯一时返回额外元素的错误（[GH 12896](https://github.com/pandas-dev/pandas/issues/12896)）'
- en: Bug in `.str.replace` does not raise `TypeError` for invalid replacement ([GH
    13438](https://github.com/pandas-dev/pandas/issues/13438))
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.str.replace` 中的错误未对无效替换引发 `TypeError`（[GH 13438](https://github.com/pandas-dev/pandas/issues/13438)）'
- en: Bug in `MultiIndex.from_arrays` which didn’t check for input array lengths matching
    ([GH 13599](https://github.com/pandas-dev/pandas/issues/13599))
  id: totrans-499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiIndex.from_arrays` 中未检查输入数组长度是否匹配的错误（[GH 13599](https://github.com/pandas-dev/pandas/issues/13599)）'
- en: Bug in `cartesian_product` and `MultiIndex.from_product` which may raise with
    empty input arrays ([GH 12258](https://github.com/pandas-dev/pandas/issues/12258))
  id: totrans-500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cartesian_product` 和 `MultiIndex.from_product` 中可能由于空输入数组而引发错误（[GH 12258](https://github.com/pandas-dev/pandas/issues/12258)）'
- en: Bug in `pd.read_csv()` which may cause a segfault or corruption when iterating
    in large chunks over a stream/file under rare circumstances ([GH 13703](https://github.com/pandas-dev/pandas/issues/13703))
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_csv()` 中，在极少情况下在流/文件上大块迭代时可能导致段错误或损坏（[GH 13703](https://github.com/pandas-dev/pandas/issues/13703)）'
- en: Bug in `pd.read_csv()` which caused errors to be raised when a dictionary containing
    scalars is passed in for `na_values` ([GH 12224](https://github.com/pandas-dev/pandas/issues/12224))
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_csv()` 中的错误导致在为 `na_values` 传入包含标量的字典时引发错误（[GH 12224](https://github.com/pandas-dev/pandas/issues/12224)）'
- en: Bug in `pd.read_csv()` which caused BOM files to be incorrectly parsed by not
    ignoring the BOM ([GH 4793](https://github.com/pandas-dev/pandas/issues/4793))
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_csv()` 中的错误导致 BOM 文件被错误解析而不忽略 BOM（[GH 4793](https://github.com/pandas-dev/pandas/issues/4793)）'
- en: Bug in `pd.read_csv()` with `engine='python'` which raised errors when a numpy
    array was passed in for `usecols` ([GH 12546](https://github.com/pandas-dev/pandas/issues/12546))
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_csv()` 中使用 `engine=''python''` 时，当传入 numpy 数组作为 `usecols` 时引发错误（[GH
    12546](https://github.com/pandas-dev/pandas/issues/12546)）'
- en: Bug in `pd.read_csv()` where the index columns were being incorrectly parsed
    when parsed as dates with a `thousands` parameter ([GH 14066](https://github.com/pandas-dev/pandas/issues/14066))
  id: totrans-505
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，当以日期形式解析时，使用`thousands`参数时，索引列被错误解析（[GH 14066](https://github.com/pandas-dev/pandas/issues/14066)）
- en: Bug in `pd.read_csv()` with `engine='python'` in which `NaN` values weren’t
    being detected after data was converted to numeric values ([GH 13314](https://github.com/pandas-dev/pandas/issues/13314))
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，使用`engine='python'`时，数据转换为数值后未检测到`NaN`值（[GH 13314](https://github.com/pandas-dev/pandas/issues/13314)）
- en: Bug in `pd.read_csv()` in which the `nrows` argument was not properly validated
    for both engines ([GH 10476](https://github.com/pandas-dev/pandas/issues/10476))
  id: totrans-507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，`nrows`参数在两种引擎中都没有得到正确验证（[GH 10476](https://github.com/pandas-dev/pandas/issues/10476)）
- en: Bug in `pd.read_csv()` with `engine='python'` in which infinities of mixed-case
    forms were not being interpreted properly ([GH 13274](https://github.com/pandas-dev/pandas/issues/13274))
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，使用`engine='python'`时，混合大小写形式的无穷大未被正确解释（[GH 13274](https://github.com/pandas-dev/pandas/issues/13274)）
- en: Bug in `pd.read_csv()` with `engine='python'` in which trailing `NaN` values
    were not being parsed ([GH 13320](https://github.com/pandas-dev/pandas/issues/13320))
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，使用`engine='python'`时，未解析尾随的`NaN`值（[GH 13320](https://github.com/pandas-dev/pandas/issues/13320)）
- en: Bug in `pd.read_csv()` with `engine='python'` when reading from a `tempfile.TemporaryFile`
    on Windows with Python 3 ([GH 13398](https://github.com/pandas-dev/pandas/issues/13398))
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，使用`engine='python'`时，在Windows上使用Python 3读取`tempfile.TemporaryFile`时（[GH
    13398](https://github.com/pandas-dev/pandas/issues/13398)）
- en: Bug in `pd.read_csv()` that prevents `usecols` kwarg from accepting single-byte
    unicode strings ([GH 13219](https://github.com/pandas-dev/pandas/issues/13219))
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，阻止`usecols`参数接受单字节unicode字符串（[GH 13219](https://github.com/pandas-dev/pandas/issues/13219)）
- en: Bug in `pd.read_csv()` that prevents `usecols` from being an empty set ([GH
    13402](https://github.com/pandas-dev/pandas/issues/13402))
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，阻止`usecols`为空集合（[GH 13402](https://github.com/pandas-dev/pandas/issues/13402)）
- en: Bug in `pd.read_csv()` in the C engine where the NULL character was not being
    parsed as NULL ([GH 14012](https://github.com/pandas-dev/pandas/issues/14012))
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`的C引擎中存在一个bug，NULL字符未被解析为NULL（[GH 14012](https://github.com/pandas-dev/pandas/issues/14012)）
- en: Bug in `pd.read_csv()` with `engine='c'` in which NULL `quotechar` was not accepted
    even though `quoting` was specified as `None` ([GH 13411](https://github.com/pandas-dev/pandas/issues/13411))
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，使用`engine='c'`时，即使`quoting`指定为`None`，也不接受NULL `quotechar`（[GH
    13411](https://github.com/pandas-dev/pandas/issues/13411)）
- en: Bug in `pd.read_csv()` with `engine='c'` in which fields were not properly cast
    to float when quoting was specified as non-numeric ([GH 13411](https://github.com/pandas-dev/pandas/issues/13411))
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，使用`engine='c'`时，当引号指定为非数字时，字段未正确转换为浮点数（[GH 13411](https://github.com/pandas-dev/pandas/issues/13411)）
- en: Bug in `pd.read_csv()` in Python 2.x with non-UTF8 encoded, multi-character
    separated data ([GH 3404](https://github.com/pandas-dev/pandas/issues/3404))
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Python 2.x中存在一个bug，`pd.read_csv()`无法处理非UTF8编码的多字符分隔数据（[GH 3404](https://github.com/pandas-dev/pandas/issues/3404)）
- en: Bug in `pd.read_csv()`, where aliases for utf-xx (e.g. UTF-xx, UTF_xx, utf_xx)
    raised UnicodeDecodeError ([GH 13549](https://github.com/pandas-dev/pandas/issues/13549))
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv()`中存在一个bug，当utf-xx的别名（例如UTF-xx, UTF_xx, utf_xx）时，引发UnicodeDecodeError（[GH
    13549](https://github.com/pandas-dev/pandas/issues/13549)）
- en: Bug in `pd.read_csv`, `pd.read_table`, `pd.read_fwf`, `pd.read_stata` and `pd.read_sas`
    where files were opened by parsers but not closed if both `chunksize` and `iterator`
    were `None`. ([GH 13940](https://github.com/pandas-dev/pandas/issues/13940))
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_csv`、`pd.read_table`、`pd.read_fwf`、`pd.read_stata`和`pd.read_sas`中存在一个bug，如果`chunksize`和`iterator`都是`None`，则解析器打开文件但不关闭文件。([GH
    13940](https://github.com/pandas-dev/pandas/issues/13940))
- en: Bug in `StataReader`, `StataWriter`, `XportReader` and `SAS7BDATReader` where
    a file was not properly closed when an error was raised. ([GH 13940](https://github.com/pandas-dev/pandas/issues/13940))
  id: totrans-519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`StataReader`、`StataWriter`、`XportReader`和`SAS7BDATReader`中存在一个bug，当出现错误时，文件未被正确关闭。([GH
    13940](https://github.com/pandas-dev/pandas/issues/13940))
- en: Bug in `pd.pivot_table()` where `margins_name` is ignored when `aggfunc` is
    a list ([GH 13354](https://github.com/pandas-dev/pandas/issues/13354))
  id: totrans-520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.pivot_table()`中存在一个bug，当`aggfunc`是一个列表时，`margins_name`被忽略（[GH 13354](https://github.com/pandas-dev/pandas/issues/13354)）
- en: Bug in `pd.Series.str.zfill`, `center`, `ljust`, `rjust`, and `pad` when passing
    non-integers, did not raise `TypeError` ([GH 13598](https://github.com/pandas-dev/pandas/issues/13598))
  id: totrans-521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Series.str.zfill`、`center`、`ljust`、`rjust` 和 `pad` 中的 Bug，当传递非整数时，不会引发
    `TypeError`（[GH 13598](https://github.com/pandas-dev/pandas/issues/13598)）'
- en: Bug in checking for any null objects in a `TimedeltaIndex`, which always returned
    `True` ([GH 13603](https://github.com/pandas-dev/pandas/issues/13603))
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `TimedeltaIndex` 中检查是否有任何空对象的 Bug，始终返回 `True`（[GH 13603](https://github.com/pandas-dev/pandas/issues/13603)）
- en: Bug in `Series` arithmetic raises `TypeError` if it contains datetime-like as
    `object` dtype ([GH 13043](https://github.com/pandas-dev/pandas/issues/13043))
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 算术中的 Bug，如果包含类似日期时间的 `object` 数据类型，则引发 `TypeError`（[GH 13043](https://github.com/pandas-dev/pandas/issues/13043)）'
- en: Bug `Series.isnull()` and `Series.notnull()` ignore `Period('NaT')` ([GH 13737](https://github.com/pandas-dev/pandas/issues/13737))
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.isnull()` 和 `Series.notnull()` 中的 Bug 忽略了 `Period(''NaT'')`（[GH 13737](https://github.com/pandas-dev/pandas/issues/13737)）'
- en: Bug `Series.fillna()` and `Series.dropna()` don’t affect to `Period('NaT')`
    ([GH 13737](https://github.com/pandas-dev/pandas/issues/13737)
  id: totrans-525
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.fillna()` 和 `Series.dropna()` 中的 Bug 不会影响到 `Period(''NaT'')`（[GH 13737](https://github.com/pandas-dev/pandas/issues/13737)）'
- en: Bug in `.fillna(value=np.nan)` incorrectly raises `KeyError` on a `category`
    dtyped `Series` ([GH 14021](https://github.com/pandas-dev/pandas/issues/14021))
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.fillna(value=np.nan)` 中的 Bug 在类别数据类型的 `Series` 上错误地引发 `KeyError`（[GH 14021](https://github.com/pandas-dev/pandas/issues/14021)）'
- en: Bug in extension dtype creation where the created types were not is/identical
    ([GH 13285](https://github.com/pandas-dev/pandas/issues/13285))
  id: totrans-527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展数据类型创建中的 Bug，创建的类型不是/不相同（[GH 13285](https://github.com/pandas-dev/pandas/issues/13285)）
- en: Bug in `.resample(..)` where incorrect warnings were triggered by IPython introspection
    ([GH 13618](https://github.com/pandas-dev/pandas/issues/13618))
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.resample(..)` 中的 Bug，IPython 内省触发了不正确的警告（[GH 13618](https://github.com/pandas-dev/pandas/issues/13618)）'
- en: Bug in `NaT` - `Period` raises `AttributeError` ([GH 13071](https://github.com/pandas-dev/pandas/issues/13071))
  id: totrans-529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NaT` - `Period` 中的 Bug 引发 `AttributeError`（[GH 13071](https://github.com/pandas-dev/pandas/issues/13071)）'
- en: Bug in `Series` comparison may output incorrect result if rhs contains `NaT`
    ([GH 9005](https://github.com/pandas-dev/pandas/issues/9005))
  id: totrans-530
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 比较中的 Bug，如果 rhs 包含 `NaT`，可能输出不正确的结果（[GH 9005](https://github.com/pandas-dev/pandas/issues/9005)）'
- en: Bug in `Series` and `Index` comparison may output incorrect result if it contains
    `NaT` with `object` dtype ([GH 13592](https://github.com/pandas-dev/pandas/issues/13592))
  id: totrans-531
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 和 `Index` 比较中的 Bug，如果包含 `object` 数据类型的 `NaT`，可能输出不正确的结果（[GH 13592](https://github.com/pandas-dev/pandas/issues/13592)）'
- en: Bug in `Period` addition raises `TypeError` if `Period` is on right hand side
    ([GH 13069](https://github.com/pandas-dev/pandas/issues/13069))
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Period` 加法中的 Bug 如果 `Period` 在右侧，则引发 `TypeError`（[GH 13069](https://github.com/pandas-dev/pandas/issues/13069)）'
- en: Bug in `Period` and `Series` or `Index` comparison raises `TypeError` ([GH 13200](https://github.com/pandas-dev/pandas/issues/13200))
  id: totrans-533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Period` 和 `Series` 或 `Index` 比较中的 Bug 引发 `TypeError`（[GH 13200](https://github.com/pandas-dev/pandas/issues/13200)）'
- en: Bug in `pd.set_eng_float_format()` that would prevent NaN and Inf from formatting
    ([GH 11981](https://github.com/pandas-dev/pandas/issues/11981))
  id: totrans-534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.set_eng_float_format()` 中的 Bug，会阻止 NaN 和 Inf 进行格式化（[GH 11981](https://github.com/pandas-dev/pandas/issues/11981)）'
- en: Bug in `.unstack` with `Categorical` dtype resets `.ordered` to `True` ([GH
    13249](https://github.com/pandas-dev/pandas/issues/13249))
  id: totrans-535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.unstack` 中的 Bug，具有 `Categorical` 数据类型会重置 `.ordered` 为 `True`（[GH 13249](https://github.com/pandas-dev/pandas/issues/13249)）'
- en: Clean some compile time warnings in datetime parsing ([GH 13607](https://github.com/pandas-dev/pandas/issues/13607))
  id: totrans-536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清除一些在日期时间解析中的编译时警告（[GH 13607](https://github.com/pandas-dev/pandas/issues/13607)）
- en: Bug in `factorize` raises `AmbiguousTimeError` if data contains datetime near
    DST boundary ([GH 13750](https://github.com/pandas-dev/pandas/issues/13750))
  id: totrans-537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`factorize` 中的 Bug 如果数据中包含接近 DST 边界的日期时间，则会引发 `AmbiguousTimeError`（[GH 13750](https://github.com/pandas-dev/pandas/issues/13750)）'
- en: Bug in `.set_index` raises `AmbiguousTimeError` if new index contains DST boundary
    and multi levels ([GH 12920](https://github.com/pandas-dev/pandas/issues/12920))
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.set_index` 中的 Bug 如果新索引包含 DST 边界和多级，则引发 `AmbiguousTimeError`（[GH 12920](https://github.com/pandas-dev/pandas/issues/12920)）'
- en: Bug in `.shift` raises `AmbiguousTimeError` if data contains datetime near DST
    boundary ([GH 13926](https://github.com/pandas-dev/pandas/issues/13926))
  id: totrans-539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.shift` 中的 Bug 如果数据中包含接近 DST 边界的日期时间，则会引发 `AmbiguousTimeError`（[GH 13926](https://github.com/pandas-dev/pandas/issues/13926)）'
- en: Bug in `pd.read_hdf()` returns incorrect result when a `DataFrame` with a `categorical`
    column and a query which doesn’t match any values ([GH 13792](https://github.com/pandas-dev/pandas/issues/13792))
  id: totrans-540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_hdf()` 中的 Bug，在不匹配任何值的查询下，返回了不正确的结果，当 `DataFrame` 具有 `categorical`
    列时（[GH 13792](https://github.com/pandas-dev/pandas/issues/13792)）'
- en: Bug in `.iloc` when indexing with a non lexsorted MultiIndex ([GH 13797](https://github.com/pandas-dev/pandas/issues/13797))
  id: totrans-541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用非 lexsorted MultiIndex 进行索引时，`.iloc`中存在一个bug（[GH 13797](https://github.com/pandas-dev/pandas/issues/13797)）
- en: Bug in `.loc` when indexing with date strings in a reverse sorted `DatetimeIndex`
    ([GH 14316](https://github.com/pandas-dev/pandas/issues/14316))
  id: totrans-542
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用日期字符串在逆向排序的`DatetimeIndex`中进行索引时，`.loc`可能存��bug（[GH 14316](https://github.com/pandas-dev/pandas/issues/14316)）
- en: Bug in `Series` comparison operators when dealing with zero dim NumPy arrays
    ([GH 13006](https://github.com/pandas-dev/pandas/issues/13006))
  id: totrans-543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在处理零维NumPy数组时，`Series`比较运算符可能存在bug（[GH 13006](https://github.com/pandas-dev/pandas/issues/13006)）
- en: Bug in `.combine_first` may return incorrect `dtype` ([GH 7630](https://github.com/pandas-dev/pandas/issues/7630),
    [GH 10567](https://github.com/pandas-dev/pandas/issues/10567))
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.combine_first`中的一个bug可能会返回不正确的`dtype`（[GH 7630](https://github.com/pandas-dev/pandas/issues/7630)，[GH
    10567](https://github.com/pandas-dev/pandas/issues/10567)）'
- en: Bug in `groupby` where `apply` returns different result depending on whether
    first result is `None` or not ([GH 12824](https://github.com/pandas-dev/pandas/issues/12824))
  id: totrans-545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby`中的一个bug，`apply`的返回结果取决于第一个结果是否为`None`（[GH 12824](https://github.com/pandas-dev/pandas/issues/12824)）'
- en: Bug in `groupby(..).nth()` where the group key is included inconsistently if
    called after `.head()/.tail()` ([GH 12839](https://github.com/pandas-dev/pandas/issues/12839))
  id: totrans-546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby(..).nth()`中的一个bug，如果在`.head()/.tail()`之后调用，组键会不一致地包含在内（[GH 12839](https://github.com/pandas-dev/pandas/issues/12839)）'
- en: Bug in `.to_html`, `.to_latex` and `.to_string` silently ignore custom datetime
    formatter passed through the `formatters` key word ([GH 10690](https://github.com/pandas-dev/pandas/issues/10690))
  id: totrans-547
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_html`、`.to_latex`和`.to_string`中存在一个bug，通过`formatters`关键字传递的自定义日期时间格式化程序会被静默忽略（[GH
    10690](https://github.com/pandas-dev/pandas/issues/10690)）'
- en: Bug in `DataFrame.iterrows()`, not yielding a `Series` subclasse if defined
    ([GH 13977](https://github.com/pandas-dev/pandas/issues/13977))
  id: totrans-548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DataFrame.iterrows()`中，如果定义了`Series`子类，则不会产生bug（[GH 13977](https://github.com/pandas-dev/pandas/issues/13977)）
- en: Bug in `pd.to_numeric` when `errors='coerce'` and input contains non-hashable
    objects ([GH 13324](https://github.com/pandas-dev/pandas/issues/13324))
  id: totrans-549
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.to_numeric`中存在一个bug，当`errors='coerce'`且输入包含不可哈希对象时（[GH 13324](https://github.com/pandas-dev/pandas/issues/13324)）
- en: Bug in invalid `Timedelta` arithmetic and comparison may raise `ValueError`
    rather than `TypeError` ([GH 13624](https://github.com/pandas-dev/pandas/issues/13624))
  id: totrans-550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在无效的`Timedelta`算术和比较中可能会引发`ValueError`而不是`TypeError`的bug（[GH 13624](https://github.com/pandas-dev/pandas/issues/13624)）
- en: Bug in invalid datetime parsing in `to_datetime` and `DatetimeIndex` may raise
    `TypeError` rather than `ValueError` ([GH 11169](https://github.com/pandas-dev/pandas/issues/11169),
    [GH 11287](https://github.com/pandas-dev/pandas/issues/11287))
  id: totrans-551
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`to_datetime`和`DatetimeIndex`中无效的日期时间解析可能会引发`TypeError`而不是`ValueError`的bug（[GH
    11169](https://github.com/pandas-dev/pandas/issues/11169)，[GH 11287](https://github.com/pandas-dev/pandas/issues/11287)）
- en: Bug in `Index` created with tz-aware `Timestamp` and mismatched `tz` option
    incorrectly coerces timezone ([GH 13692](https://github.com/pandas-dev/pandas/issues/13692))
  id: totrans-552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用tz-aware `Timestamp`和不匹配的`tz`选项创建`Index`时，可能会错误地强制转换时区的bug（[GH 13692](https://github.com/pandas-dev/pandas/issues/13692)）
- en: Bug in `DatetimeIndex` with nanosecond frequency does not include timestamp
    specified with `end` ([GH 13672](https://github.com/pandas-dev/pandas/issues/13672))
  id: totrans-553
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在纳秒频率的`DatetimeIndex`中，指定`end`的时间戳可能不包括在内的bug（[GH 13672](https://github.com/pandas-dev/pandas/issues/13672)）
- en: Bug in `Series` when setting a slice with a `np.timedelta64` ([GH 14155](https://github.com/pandas-dev/pandas/issues/14155))
  id: totrans-554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用`np.timedelta64`设置切片时，`Series`可能存在bug（[GH 14155](https://github.com/pandas-dev/pandas/issues/14155)）
- en: Bug in `Index` raises `OutOfBoundsDatetime` if `datetime` exceeds `datetime64[ns]`
    bounds, rather than coercing to `object` dtype ([GH 13663](https://github.com/pandas-dev/pandas/issues/13663))
  id: totrans-555
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`Index`中，如果`datetime`超出`datetime64[ns]`边界，则会引发`OutOfBoundsDatetime`，而不是强制转换为`object`
    dtype的bug（[GH 13663](https://github.com/pandas-dev/pandas/issues/13663)）
- en: Bug in `Index` may ignore specified `datetime64` or `timedelta64` passed as
    `dtype` ([GH 13981](https://github.com/pandas-dev/pandas/issues/13981))
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`Index`中可能会忽略指定的`datetime64`或`timedelta64`作为`dtype`传递的bug（[GH 13981](https://github.com/pandas-dev/pandas/issues/13981)）
- en: Bug in `RangeIndex` can be created without no arguments rather than raises `TypeError`
    ([GH 13793](https://github.com/pandas-dev/pandas/issues/13793))
  id: totrans-557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以创建没有参数的`RangeIndex`，而不是引发`TypeError`的bug（[GH 13793](https://github.com/pandas-dev/pandas/issues/13793)）
- en: Bug in `.value_counts()` raises `OutOfBoundsDatetime` if data exceeds `datetime64[ns]`
    bounds ([GH 13663](https://github.com/pandas-dev/pandas/issues/13663))
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`.value_counts()`中，如果数据超出`datetime64[ns]`边界，则会引发`OutOfBoundsDatetime`的bug（[GH
    13663](https://github.com/pandas-dev/pandas/issues/13663)）
- en: Bug in `DatetimeIndex` may raise `OutOfBoundsDatetime` if input `np.datetime64`
    has other unit than `ns` ([GH 9114](https://github.com/pandas-dev/pandas/issues/9114))
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DatetimeIndex`中存在错误，如果输入的`np.datetime64`单位不是`ns`，可能会引发`OutOfBoundsDatetime`（[GH
    9114](https://github.com/pandas-dev/pandas/issues/9114)）。
- en: Bug in `Series` creation with `np.datetime64` which has other unit than `ns`
    as `object` dtype results in incorrect values ([GH 13876](https://github.com/pandas-dev/pandas/issues/13876))
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用具有非`ns`单位的`np.datetime64`创建Series时存在错误，结果为`object` dtype会得到不正确的值（[GH 13876](https://github.com/pandas-dev/pandas/issues/13876)）。
- en: Bug in `resample` with timedelta data where data was casted to float ([GH 13119](https://github.com/pandas-dev/pandas/issues/13119)).
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在带有时间数据的`resample`中存在错误，数据被强制转换为浮点数（[GH 13119](https://github.com/pandas-dev/pandas/issues/13119)）。
- en: Bug in `pd.isnull()` `pd.notnull()` raise `TypeError` if input datetime-like
    has other unit than `ns` ([GH 13389](https://github.com/pandas-dev/pandas/issues/13389))
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.isnull()` 和 `pd.notnull()` 存在错误，如果输入的类似日期时间的对象单位不是`ns`，会引发`TypeError`（[GH
    13389](https://github.com/pandas-dev/pandas/issues/13389)）。'
- en: Bug in `pd.merge()` may raise `TypeError` if input datetime-like has other unit
    than `ns` ([GH 13389](https://github.com/pandas-dev/pandas/issues/13389))
  id: totrans-563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.merge()`中存在错误，如果输入的类似日期时间的对象单位不是`ns`，可能会引发`TypeError`（[GH 13389](https://github.com/pandas-dev/pandas/issues/13389)）。
- en: Bug in `HDFStore`/`read_hdf()` discarded `DatetimeIndex.name` if `tz` was set
    ([GH 13884](https://github.com/pandas-dev/pandas/issues/13884))
  id: totrans-564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`HDFStore`/`read_hdf()`中存在错误，如果设置了`tz`，会丢弃`DatetimeIndex.name`（[GH 13884](https://github.com/pandas-dev/pandas/issues/13884)）。
- en: Bug in `Categorical.remove_unused_categories()` changes `.codes` dtype to platform
    int ([GH 13261](https://github.com/pandas-dev/pandas/issues/13261))
  id: totrans-565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`Categorical.remove_unused_categories()`中存在错误，会将`.codes`的dtype更改为平台整数（[GH 13261](https://github.com/pandas-dev/pandas/issues/13261)）。
- en: Bug in `groupby` with `as_index=False` returns all NaN’s when grouping on multiple
    columns including a categorical one ([GH 13204](https://github.com/pandas-dev/pandas/issues/13204))
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`groupby`中，使用`as_index=False`在包括分类变量的多个列进行分组时，返回全部NaN时存在错误（[GH 13204](https://github.com/pandas-dev/pandas/issues/13204)）。
- en: Bug in `df.groupby(...)[...]` where getitem with `Int64Index` raised an error
    ([GH 13731](https://github.com/pandas-dev/pandas/issues/13731))
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`df.groupby(...)[...]`中存在错误，使用`Int64Index`进行getitem时会引发错误（[GH 13731](https://github.com/pandas-dev/pandas/issues/13731)）。
- en: Bug in the CSS classes assigned to `DataFrame.style` for index names. Previously
    they were assigned `"col_heading level<n> col<c>"` where `n` was the number of
    levels + 1\. Now they are assigned `"index_name level<n>"`, where `n` is the correct
    level for that MultiIndex.
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于`DataFrame.style`分配给索引名称的CSS类存在错误。之前它们被分配为`"col_heading level<n> col<c>"`，其中`n`是级别数加1。现在它们被分配为`"index_name
    level<n>"`，其中`n`是该MultiIndex的正确级别。
- en: 'Bug where `pd.read_gbq()` could throw `ImportError: No module named discovery`
    as a result of a naming conflict with another python package called apiclient
    ([GH 13454](https://github.com/pandas-dev/pandas/issues/13454))'
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在`pd.read_gbq()`中存在错误，可能会引发`ImportError: No module named discovery`，因为与另一个名为apiclient的Python包发生命名冲突（[GH
    13454](https://github.com/pandas-dev/pandas/issues/13454)）。'
- en: Bug in `Index.union` returns an incorrect result with a named empty index ([GH
    13432](https://github.com/pandas-dev/pandas/issues/13432))
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`Index.union`中存在错误，使用具有命名空索引时返回不正确的结果（[GH 13432](https://github.com/pandas-dev/pandas/issues/13432)）。
- en: Bugs in `Index.difference` and `DataFrame.join` raise in Python3 when using
    mixed-integer indexes ([GH 13432](https://github.com/pandas-dev/pandas/issues/13432),
    [GH 12814](https://github.com/pandas-dev/pandas/issues/12814))
  id: totrans-571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`Index.difference`和`DataFrame.join`中存在错误，在使用混合整数索引时，Python3中可能会引发错误（[GH 13432](https://github.com/pandas-dev/pandas/issues/13432)，[GH
    12814](https://github.com/pandas-dev/pandas/issues/12814)）。
- en: Bug in subtract tz-aware `datetime.datetime` from tz-aware `datetime64` series
    ([GH 14088](https://github.com/pandas-dev/pandas/issues/14088))
  id: totrans-572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在从具有时区信息的`datetime.datetime`中减去具有时区信息的`datetime64`系列时存在错误（[GH 14088](https://github.com/pandas-dev/pandas/issues/14088)）。
- en: Bug in `.to_excel()` when DataFrame contains a MultiIndex which contains a label
    with a NaN value ([GH 13511](https://github.com/pandas-dev/pandas/issues/13511))
  id: totrans-573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DataFrame.contains`中存在错误，当DataFrame包含具有NaN值的MultiIndex时（[GH 13511](https://github.com/pandas-dev/pandas/issues/13511)）。
- en: Bug in invalid frequency offset string like “D1”, “-2-3H” may not raise `ValueError`
    ([GH 13930](https://github.com/pandas-dev/pandas/issues/13930))
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在无效的频率偏移字符串（如“D1”，“-2-3H”）可能不会引发`ValueError`（[GH 13930](https://github.com/pandas-dev/pandas/issues/13930)）。
- en: Bug in `concat` and `groupby` for hierarchical frames with `RangeIndex` levels
    ([GH 13542](https://github.com/pandas-dev/pandas/issues/13542)).
  id: totrans-575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有`RangeIndex`级别的分层框架的`concat`和`groupby`存在错误（[GH 13542](https://github.com/pandas-dev/pandas/issues/13542)）。
- en: Bug in `Series.str.contains()` for Series containing only `NaN` values of `object`
    dtype ([GH 14171](https://github.com/pandas-dev/pandas/issues/14171))
  id: totrans-576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.str.contains()` 中的一个 bug，用于只包含 `NaN` 值的 `object` dtype Series（[GH 14171](https://github.com/pandas-dev/pandas/issues/14171)）'
- en: Bug in `agg()` function on groupby dataframe changes dtype of `datetime64[ns]`
    column to `float64` ([GH 12821](https://github.com/pandas-dev/pandas/issues/12821))
  id: totrans-577
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 groupby 数据框的 `agg()` 函数中存在一个 bug，会将 `datetime64[ns]` 列的 dtype 更改为 `float64`（[GH
    12821](https://github.com/pandas-dev/pandas/issues/12821)）
- en: Bug in using NumPy ufunc with `PeriodIndex` to add or subtract integer raise
    `IncompatibleFrequency`. Note that using standard operator like `+` or `-` is
    recommended, because standard operators use more efficient path ([GH 13980](https://github.com/pandas-dev/pandas/issues/13980))
  id: totrans-578
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 NumPy ufunc 与 `PeriodIndex` 进行整数加法或减法时引发 `IncompatibleFrequency` 的一个 bug。请注意，推荐使用标准运算符（如
    `+` 或 `-`），因为标准运算符使用更高效的路径（[GH 13980](https://github.com/pandas-dev/pandas/issues/13980)）
- en: Bug in operations on `NaT` returning `float` instead of `datetime64[ns]` ([GH
    12941](https://github.com/pandas-dev/pandas/issues/12941))
  id: totrans-579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `NaT` 上进行操作的一个 bug，返回 `float` 而不是 `datetime64[ns]`（[GH 12941](https://github.com/pandas-dev/pandas/issues/12941)）
- en: Bug in `Series` flexible arithmetic methods (like `.add()`) raises `ValueError`
    when `axis=None` ([GH 13894](https://github.com/pandas-dev/pandas/issues/13894))
  id: totrans-580
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 的灵活算术方法（如 `.add()`）中的一个 bug，在 `axis=None` 时引发 `ValueError`（[GH 13894](https://github.com/pandas-dev/pandas/issues/13894)）'
- en: Bug in `DataFrame.to_csv()` with `MultiIndex` columns in which a stray empty
    line was added ([GH 6618](https://github.com/pandas-dev/pandas/issues/6618))
  id: totrans-581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有 `MultiIndex` 列的 `DataFrame.to_csv()` 中添加了一个多余的空行（[GH 6618](https://github.com/pandas-dev/pandas/issues/6618)）
- en: Bug in `DatetimeIndex`, `TimedeltaIndex` and `PeriodIndex.equals()` may return
    `True` when input isn’t `Index` but contains the same values ([GH 13107](https://github.com/pandas-dev/pandas/issues/13107))
  id: totrans-582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DatetimeIndex`、`TimedeltaIndex` 和 `PeriodIndex.equals()` 中的一个 bug，当输入不是 `Index`
    但包含相同值时，可能会返回 `True`（[GH 13107](https://github.com/pandas-dev/pandas/issues/13107)）'
- en: Bug in assignment against datetime with timezone may not work if it contains
    datetime near DST boundary ([GH 14146](https://github.com/pandas-dev/pandas/issues/14146))
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有时区的日期时间上进行赋值的一个 bug，如果包含接近 DST 边界的日期时间，则可能不起作用（[GH 14146](https://github.com/pandas-dev/pandas/issues/14146)）
- en: Bug in `pd.eval()` and `HDFStore` query truncating long float literals with
    python 2 ([GH 14241](https://github.com/pandas-dev/pandas/issues/14241))
  id: totrans-584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.eval()` 和 `HDFStore` 查询中的一个 bug，在 python 2 中截断长浮点文字（[GH 14241](https://github.com/pandas-dev/pandas/issues/14241)）'
- en: Bug in `Index` raises `KeyError` displaying incorrect column when column is
    not in the df and columns contains duplicate values ([GH 13822](https://github.com/pandas-dev/pandas/issues/13822))
  id: totrans-585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index` 中的一个 bug，在 df 中不存在列且列包含重复值时，引发 `KeyError` 并显示不正确的列名（[GH 13822](https://github.com/pandas-dev/pandas/issues/13822)）'
- en: Bug in `Period` and `PeriodIndex` creating wrong dates when frequency has combined
    offset aliases ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))
  id: totrans-586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在创建 `Period` 和 `PeriodIndex` 时，当频率具有组合偏移别名时，可能会生成错误的日期（[GH 13874](https://github.com/pandas-dev/pandas/issues/13874)）
- en: Bug in `.to_string()` when called with an integer `line_width` and `index=False`
    raises an UnboundLocalError exception because `idx` referenced before assignment.
  id: totrans-587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当以整数 `line_width` 和 `index=False` 调用 `.to_string()` 时，会引发 UnboundLocalError
    异常，因为在赋值之前引用了 `idx`。
- en: Bug in `eval()` where the `resolvers` argument would not accept a list ([GH
    14095](https://github.com/pandas-dev/pandas/issues/14095))
  id: totrans-588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eval()` 中存在的一个 bug，即 `resolvers` 参数不接受列表（[GH 14095](https://github.com/pandas-dev/pandas/issues/14095)）'
- en: Bugs in `stack`, `get_dummies`, `make_axis_dummies` which don’t preserve categorical
    dtypes in (multi)indexes ([GH 13854](https://github.com/pandas-dev/pandas/issues/13854))
  id: totrans-589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stack`、`get_dummies`、`make_axis_dummies` 中存在的 bug，不会在（多重）索引中保留分类 dtype（[GH
    13854](https://github.com/pandas-dev/pandas/issues/13854)）'
- en: '`PeriodIndex` can now accept `list` and `array` which contains `pd.NaT` ([GH
    13430](https://github.com/pandas-dev/pandas/issues/13430))'
  id: totrans-590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PeriodIndex` 现在可以接受包含 `pd.NaT` 的 `list` 和 `array`（[GH 13430](https://github.com/pandas-dev/pandas/issues/13430)）'
- en: Bug in `df.groupby` where `.median()` returns arbitrary values if grouped dataframe
    contains empty bins ([GH 13629](https://github.com/pandas-dev/pandas/issues/13629))
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`df.groupby` 中的一个 bug，如果分组的数据框包含空的 bin，则 `.median()` 返回任意值（[GH 13629](https://github.com/pandas-dev/pandas/issues/13629)）'
- en: 'Bug in `Index.copy()` where `name` parameter was ignored ([GH 14302](https://github.com/pandas-dev/pandas/issues/14302))  ##
    Contributors'
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index.copy()` 中的一个 bug，会忽略 `name` 参数（[GH 14302](https://github.com/pandas-dev/pandas/issues/14302)）'
- en: A total of 117 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有 117 人为此版本提交了补丁。 带有 “+” 的人表示首次为其贡献了补丁。
- en: Adrien Emery +
  id: totrans-594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adrien Emery +
- en: Alex Alekseyev
  id: totrans-595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Alekseyev
- en: Alex Vig +
  id: totrans-596
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Vig +
- en: Allen Riddell +
  id: totrans-597
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Allen Riddell +
- en: Amol +
  id: totrans-598
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amol +
- en: Amol Agrawal +
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amol Agrawal +
- en: Andy R. Terrel +
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Andy R. Terrel +
- en: Anthonios Partheniou
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anthonios Partheniou
- en: Ben Kandel +
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ben Kandel +
- en: Bob Baxley +
  id: totrans-603
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bob Baxley +
- en: Brett Rosen +
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Brett Rosen +
- en: Camilo Cota +
  id: totrans-605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Camilo Cota +
- en: Chris
  id: totrans-606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris
- en: Chris Grinolds
  id: totrans-607
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Grinolds
- en: Chris Warth
  id: totrans-608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Warth
- en: Christian Hudon
  id: totrans-609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christian Hudon
- en: Christopher C. Aycock
  id: totrans-610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christopher C. Aycock
- en: Daniel Siladji +
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Daniel Siladji +
- en: Douglas McNeil
  id: totrans-612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Douglas McNeil
- en: Drewrey Lupton +
  id: totrans-613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drewrey Lupton +
- en: Eduardo Blancas Reyes +
  id: totrans-614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eduardo Blancas Reyes +
- en: Elliot Marsden +
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elliot Marsden +
- en: Evan Wright
  id: totrans-616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Evan Wright
- en: Felix Marczinowski +
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Felix Marczinowski +
- en: Francis T. O’Donovan
  id: totrans-618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Francis T. O’Donovan
- en: Geraint Duck +
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Geraint Duck +
- en: Giacomo Ferroni +
  id: totrans-620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giacomo Ferroni +
- en: Grant Roch +
  id: totrans-621
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Grant Roch +
- en: Gábor Lipták
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gábor Lipták
- en: Haleemur Ali +
  id: totrans-623
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Haleemur Ali +
- en: Hassan Shamim +
  id: totrans-624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hassan Shamim +
- en: Iulius Curt +
  id: totrans-625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Iulius Curt +
- en: Ivan Nazarov +
  id: totrans-626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ivan Nazarov +
- en: Jeff Reback
  id: totrans-627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeff Reback
- en: Jeffrey Gerard +
  id: totrans-628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeffrey Gerard +
- en: Jenn Olsen +
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jenn Olsen +
- en: Jim Crist
  id: totrans-630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jim Crist
- en: Joe Jevnik
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joe Jevnik
- en: John Evans +
  id: totrans-632
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John Evans +
- en: John Freeman
  id: totrans-633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John Freeman
- en: John Liekezer +
  id: totrans-634
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John Liekezer +
- en: John W. O’Brien
  id: totrans-635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John W. O’Brien
- en: John Zwinck +
  id: totrans-636
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John Zwinck +
- en: Johnny Gill +
  id: totrans-637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Johnny Gill +
- en: Jordan Erenrich +
  id: totrans-638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jordan Erenrich +
- en: Joris Van den Bossche
  id: totrans-639
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joris Van den Bossche
- en: Josh Howes +
  id: totrans-640
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Josh Howes +
- en: Jozef Brandys +
  id: totrans-641
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jozef Brandys +
- en: Ka Wo Chen
  id: totrans-642
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ka Wo Chen
- en: Kamil Sindi +
  id: totrans-643
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kamil Sindi +
- en: Kerby Shedden
  id: totrans-644
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerby Shedden
- en: Kernc +
  id: totrans-645
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kernc +
- en: Kevin Sheppard
  id: totrans-646
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kevin Sheppard
- en: Matthieu Brucher +
  id: totrans-647
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matthieu Brucher +
- en: Maximilian Roos
  id: totrans-648
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maximilian Roos
- en: Michael Scherer +
  id: totrans-649
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Michael Scherer +
- en: Mike Graham +
  id: totrans-650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mike Graham +
- en: Mortada Mehyar
  id: totrans-651
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mortada Mehyar
- en: Muhammad Haseeb Tariq +
  id: totrans-652
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Muhammad Haseeb Tariq +
- en: Nate George +
  id: totrans-653
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nate George +
- en: Neil Parley +
  id: totrans-654
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Neil Parley +
- en: Nicolas Bonnotte
  id: totrans-655
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nicolas Bonnotte
- en: OXPHOS
  id: totrans-656
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OXPHOS
- en: Pan Deng / Zora +
  id: totrans-657
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pan Deng / Zora +
- en: Paul +
  id: totrans-658
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paul +
- en: Paul Mestemaker +
  id: totrans-659
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paul Mestemaker +
- en: Pauli Virtanen
  id: totrans-660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pauli Virtanen
- en: Pawel Kordek +
  id: totrans-661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pawel Kordek +
- en: Pietro Battiston
  id: totrans-662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pietro Battiston
- en: Piotr Jucha +
  id: totrans-663
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Piotr Jucha +
- en: Ravi Kumar Nimmi +
  id: totrans-664
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ravi Kumar Nimmi +
- en: Robert Gieseke
  id: totrans-665
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robert Gieseke
- en: Robert Kern +
  id: totrans-666
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robert Kern +
- en: Roger Thomas
  id: totrans-667
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Roger Thomas
- en: Roy Keyes +
  id: totrans-668
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Roy Keyes +
- en: Russell Smith +
  id: totrans-669
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Russell Smith +
- en: Sahil Dua +
  id: totrans-670
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sahil Dua +
- en: Sanjiv Lobo +
  id: totrans-671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sanjiv Lobo +
- en: Sašo Stanovnik +
  id: totrans-672
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sašo Stanovnik +
- en: Shawn Heide +
  id: totrans-673
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shawn Heide +
- en: Sinhrks
  id: totrans-674
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sinhrks
- en: Stephen Kappel +
  id: totrans-675
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stephen Kappel +
- en: Steve Choi +
  id: totrans-676
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Steve Choi +
- en: Stewart Henderson +
  id: totrans-677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stewart Henderson +
- en: Sudarshan Konge +
  id: totrans-678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sudarshan Konge +
- en: Thomas A Caswell
  id: totrans-679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Thomas A Caswell
- en: Tom Augspurger
  id: totrans-680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tom Augspurger
- en: Tom Bird +
  id: totrans-681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tom Bird +
- en: Uwe Hoffmann +
  id: totrans-682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Uwe Hoffmann +
- en: WillAyd +
  id: totrans-683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WillAyd +
- en: Xiang Zhang +
  id: totrans-684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xiang Zhang +
- en: YG-Riku +
  id: totrans-685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: YG-Riku +
- en: Yadunandan +
  id: totrans-686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yadunandan +
- en: Yaroslav Halchenko
  id: totrans-687
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yaroslav Halchenko
- en: Yuichiro Kaneko +
  id: totrans-688
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yuichiro Kaneko +
- en: adneu
  id: totrans-689
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: adneu
- en: agraboso +
  id: totrans-690
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: agraboso +
- en: babakkeyvani +
  id: totrans-691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: babakkeyvani +
- en: c123w +
  id: totrans-692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: c123w +
- en: chris-b1
  id: totrans-693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: chris-b1
- en: cmazzullo +
  id: totrans-694
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cmazzullo +
- en: conquistador1492 +
  id: totrans-695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: conquistador1492 +
- en: cr3 +
  id: totrans-696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cr3 +
- en: dsm054
  id: totrans-697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dsm054
- en: gfyoung
  id: totrans-698
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gfyoung
- en: harshul1610 +
  id: totrans-699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: harshul1610 +
- en: iamsimha +
  id: totrans-700
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iamsimha +
- en: jackieleng +
  id: totrans-701
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jackieleng +
- en: mpuels +
  id: totrans-702
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mpuels +
- en: pijucha +
  id: totrans-703
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pijucha +
- en: priyankjain +
  id: totrans-704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: priyankjain +
- en: sinhrks
  id: totrans-705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sinhrks
- en: wcwagner +
  id: totrans-706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: wcwagner +
- en: yui-knk +
  id: totrans-707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: yui-knk +
- en: zhangjinjie +
  id: totrans-708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: zhangjinjie +
- en: znmean +
  id: totrans-709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: znmean +
- en: '颜发才（Yan Facai） +  ## New features'
  id: totrans-710
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '颜发才（Yan Facai） +  ## 新功能'
- en: '### Function `merge_asof` for asof-style time-series joining'
  id: totrans-711
  prefs: []
  type: TYPE_NORMAL
  zh: '### 函数 `merge_asof` 用于 asof 风格的时间序列连接'
- en: A long-time requested feature has been added through the [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") function, to support asof style joining of time-series ([GH
    1870](https://github.com/pandas-dev/pandas/issues/1870), [GH 13695](https://github.com/pandas-dev/pandas/issues/13695),
    [GH 13709](https://github.com/pandas-dev/pandas/issues/13709), [GH 13902](https://github.com/pandas-dev/pandas/issues/13902)).
    Full documentation is [here](../user_guide/merging.html#merging-merge-asof).
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") 函数，我们添加了一个长期请求的功能，以支持时间序列的 asof 风格连接 ([GH 1870](https://github.com/pandas-dev/pandas/issues/1870),
    [GH 13695](https://github.com/pandas-dev/pandas/issues/13695), [GH 13709](https://github.com/pandas-dev/pandas/issues/13709),
    [GH 13902](https://github.com/pandas-dev/pandas/issues/13902))。完整文档在 [这里](../user_guide/merging.html#merging-merge-asof)。
- en: The [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") performs an asof merge, which is similar to a left-join except
    that we match on nearest key rather than equal keys.
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") 执行 asof 合并，类似于左连接，但我们匹配最近的键而不是相等的键。'
- en: '[PRE98]'
  id: totrans-714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: We typically want to match exactly when possible, and use the most recent value
    otherwise.
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常希望尽可能精确匹配，并在不可能时使用最近的值。
- en: '[PRE99]'
  id: totrans-716
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: We can also match rows ONLY with prior data, and not an exact match.
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以仅匹配具有先前数据而不是精确匹配的行。
- en: '[PRE100]'
  id: totrans-718
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: In a typical time-series example, we have `trades` and `quotes` and we want
    to `asof-join` them. This also illustrates using the `by` parameter to group data
    before merging.
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的时间序列示例中，我们有 `trades` 和 `quotes`，我们希望将它们进行 `asof-join`。这还说明了在合并之前使用 `by`
    参数对数据进行分组。
- en: '[PRE101]'
  id: totrans-720
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: An asof merge joins on the `on`, typically a datetimelike field, which is ordered,
    and in this case we are using a grouper in the `by` field. This is like a left-outer
    join, except that forward filling happens automatically taking the most recent
    non-NaN value.
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: asof合并在`on`上进行，通常是一个有序的日期时间字段，在本例中我们在`by`字段中使用了一个分组器。这类似于左外连接，只是自动进行前向填充，取最近的非NaN值。
- en: '[PRE103]'
  id: totrans-723
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'This returns a merged DataFrame with the entries in the same order as the original
    left passed DataFrame (`trades` in this case), with the fields of the `quotes`
    merged.  ### Method `.rolling()` is now time-series aware'
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: '这将返回一个合并的DataFrame，其条目的顺序与原始的左侧传递的DataFrame相同（在本例中是`trades`），其中`quotes`的字段被合并。  ###
    方法 `.rolling()` 现在支持时间序列'
- en: '`.rolling()` objects are now time-series aware and can accept a time-series
    offset (or convertible) for the `window` argument ([GH 13327](https://github.com/pandas-dev/pandas/issues/13327),
    [GH 12995](https://github.com/pandas-dev/pandas/issues/12995)). See the full documentation
    [here](../user_guide/window.html#window-generic).'
  id: totrans-725
  prefs: []
  type: TYPE_NORMAL
  zh: '`.rolling()` 对象现在具有时间序列意识，并且可以接受时间序列偏移（或可转换的）作为`window`参数（[GH 13327](https://github.com/pandas-dev/pandas/issues/13327),
    [GH 12995](https://github.com/pandas-dev/pandas/issues/12995)）。查看完整文档 [here](../user_guide/window.html#window-generic)。'
- en: '[PRE104]'
  id: totrans-726
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: This is a regular frequency index. Using an integer window parameter works to
    roll along the window frequency.
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个常规频率索引。使用整数窗口参数可以按窗口频率滚动。
- en: '[PRE105]'
  id: totrans-728
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Specifying an offset allows a more intuitive specification of the rolling frequency.
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 指定偏移量可以更直观地指定滚动频率。
- en: '[PRE106]'
  id: totrans-730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Using a non-regular, but still monotonic index, rolling with an integer window
    does not impart any special calculation.
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: 使用非常规但仍然单调的索引，使用整数窗口进行滚动不会产生任何特殊的计算。
- en: '[PRE107]'
  id: totrans-732
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Using the time-specification generates variable windows for this sparse data.
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 使用时间规范为稀疏数据生成可变窗口。
- en: '[PRE108]'
  id: totrans-734
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Furthermore, we now allow an optional `on` parameter to specify a column (rather
    than the default of the index) in a DataFrame.
  id: totrans-735
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们现在允许一个可选的`on`参数来指定DataFrame中的列（而不是默认的索引）。
- en: '[PRE109]  ### Method `read_csv` has improved support for duplicate column names'
  id: totrans-736
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE109]  ### 方法 `read_csv` 对重复列名的支持有所改进'
- en: '[Duplicate column names](../user_guide/io.html#io-dupe-names) are now supported
    in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    whether they are in the file or passed in as the `names` parameter ([GH 7160](https://github.com/pandas-dev/pandas/issues/7160),
    [GH 9424](https://github.com/pandas-dev/pandas/issues/9424))'
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: '[重复列名](../user_guide/io.html#io-dupe-names) 现在在[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")中得到支持，无论它们是否在文件中或作为`names`参数传递（[GH 7160](https://github.com/pandas-dev/pandas/issues/7160),
    [GH 9424](https://github.com/pandas-dev/pandas/issues/9424)）'
- en: '[PRE110]'
  id: totrans-738
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '**Previous behavior**:'
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE111]'
  id: totrans-740
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: The first `a` column contained the same data as the second `a` column, when
    it should have contained the values `[0, 3]`.
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个`a`列包含与第二个`a`列相同的数据，而应该包含值`[0, 3]`。
- en: '**New behavior**:'
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE112]  ### Method `read_csv` supports parsing `Categorical` directly'
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE112]  ### 方法 `read_csv` 直接支持解析 `Categorical`'
- en: The [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    function now supports parsing a `Categorical` column when specified as a dtype
    ([GH 10153](https://github.com/pandas-dev/pandas/issues/10153)). Depending on
    the structure of the data, this can result in a faster parse time and lower memory
    usage compared to converting to `Categorical` after parsing. See the io [docs
    here](../user_guide/io.html#io-categorical).
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定为dtype时，[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") 函数现在支持解析`Categorical`列（[GH 10153](https://github.com/pandas-dev/pandas/issues/10153)）。根据数据的结构，这可能导致比解析后转换为`Categorical`更快的解析时间和更低的内存使用。在这里查看io
    [文档](../user_guide/io.html#io-categorical)。
- en: '[PRE113]'
  id: totrans-745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Individual columns can be parsed as a `Categorical` using a dict specification
  id: totrans-746
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用字典规范将单个列解析为 `Categorical`。
- en: '[PRE114]'
  id: totrans-747
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Note
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The resulting categories will always be parsed as strings (object dtype). If
    the categories are numeric they can be converted using the [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") function, or as appropriate, another converter such as [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime").
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: 结果类别将始终被解析为字符串（对象dtype）。如果类别是数值型的，则可以使用[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") 函数进行转换，或者根据需要使用另一个转换器，如 [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")。
- en: '[PRE115]  ### Categorical concatenation'
  id: totrans-750
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE115]  ### 分类连接'
- en: A function `union_categoricals()` has been added for combining categoricals,
    see [Unioning Categoricals](../user_guide/categorical.html#categorical-union)
    ([GH 13361](https://github.com/pandas-dev/pandas/issues/13361), [GH 13763](https://github.com/pandas-dev/pandas/issues/13763),
    [GH 13846](https://github.com/pandas-dev/pandas/issues/13846), [GH 14173](https://github.com/pandas-dev/pandas/issues/14173))
  id: totrans-751
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了一个用于合并分类的函数`union_categoricals()`，请参阅[Unioning Categoricals](../user_guide/categorical.html#categorical-union)
    ([GH 13361](https://github.com/pandas-dev/pandas/issues/13361), [GH 13763](https://github.com/pandas-dev/pandas/issues/13763),
    [GH 13846](https://github.com/pandas-dev/pandas/issues/13846), [GH 14173](https://github.com/pandas-dev/pandas/issues/14173))
- en: '[PRE116]'
  id: totrans-752
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '`concat` and `append` now can concat `category` dtypes with different `categories`
    as `object` dtype ([GH 13524](https://github.com/pandas-dev/pandas/issues/13524))'
  id: totrans-753
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`concat` 和 `append` 现在可以将具有不同 `categories` 的 `category` dtypes 连接为 `object`
    dtype ([GH 13524](https://github.com/pandas-dev/pandas/issues/13524))'
- en: '[PRE117]'
  id: totrans-754
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '**Previous behavior**:'
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE118]'
  id: totrans-756
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '**New behavior**:'
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE119]  ### Semi-month offsets'
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE119]  ### 半月偏移量'
- en: pandas has gained new frequency offsets, `SemiMonthEnd` (‘SM’) and `SemiMonthBegin`
    (‘SMS’). These provide date offsets anchored (by default) to the 15th and end
    of month, and 15th and 1st of month respectively. ([GH 1543](https://github.com/pandas-dev/pandas/issues/1543))
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 增加了新的频率偏移量，`SemiMonthEnd`（'SM'）和 `SemiMonthBegin`（'SMS'）。 这些提供了默认锚定到月中（15号）和月底，以及月初（1号）和15号的日期偏移量。
    ([GH 1543](https://github.com/pandas-dev/pandas/issues/1543))
- en: '[PRE120]'
  id: totrans-760
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '**SemiMonthEnd**:'
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: '**SemiMonthEnd**:'
- en: '[PRE121]'
  id: totrans-762
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '**SemiMonthBegin**:'
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: '**SemiMonthBegin**:'
- en: '[PRE122]'
  id: totrans-764
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Using the anchoring suffix, you can also specify the day of month to use instead
    of the 15th.
  id: totrans-765
  prefs: []
  type: TYPE_NORMAL
  zh: 使用锚定后缀，您还可以指定使用月中的某一天，而不是15号。
- en: '[PRE123]  ### New Index methods'
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE123]  ### 新的索引方法'
- en: The following methods and options are added to `Index`, to be more consistent
    with the `Series` and `DataFrame` API.
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的方法和选项已添加到`Index`中，以使其与`Series`和`DataFrame`API更一致。
- en: '`Index` now supports the `.where()` function for same shape indexing ([GH 13170](https://github.com/pandas-dev/pandas/issues/13170))'
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index`现在支持`.where()`函数进行相同形状的索引 ([GH 13170](https://github.com/pandas-dev/pandas/issues/13170))'
- en: '[PRE124]'
  id: totrans-769
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '`Index` now supports `.dropna()` to exclude missing values ([GH 6194](https://github.com/pandas-dev/pandas/issues/6194))'
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index`现在支持`.dropna()`以排除缺失值 ([GH 6194](https://github.com/pandas-dev/pandas/issues/6194))'
- en: '[PRE125]'
  id: totrans-771
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: For `MultiIndex`, values are dropped if any level is missing by default. Specifying
    `how='all'` only drops values where all levels are missing.
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`MultiIndex`，默认情况下，如果任何级别缺失，则会删除值。 指定`how='all'`仅在所有级别都缺失时删除值。
- en: '[PRE126]'
  id: totrans-773
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '`Index` now supports `.str.extractall()` which returns a `DataFrame`, see the
    [docs here](../user_guide/text.html#text-extractall) ([GH 10008](https://github.com/pandas-dev/pandas/issues/10008),
    [GH 13156](https://github.com/pandas-dev/pandas/issues/13156))'
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index`现在支持`.str.extractall()`，返回一个`DataFrame`，请参阅[这里的文档](../user_guide/text.html#text-extractall)
    ([GH 10008](https://github.com/pandas-dev/pandas/issues/10008), [GH 13156](https://github.com/pandas-dev/pandas/issues/13156))'
- en: '[PRE127]'
  id: totrans-775
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '`Index.astype()` now accepts an optional boolean argument `copy`, which allows
    optional copying if the requirements on dtype are satisfied ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))  ###
    Google BigQuery enhancements'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.astype()`现在接受一个可选的布尔参数`copy`，如果满足dtype的要求，则允许可选复制 ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))  ###
    Google BigQuery 增强功能'
- en: The [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    method has gained the `dialect` argument to allow users to specify whether to
    use BigQuery’s legacy SQL or BigQuery’s standard SQL. See the [docs](https://pandas-gbq.readthedocs.io/en/latest/reading.html)
    for more details ([GH 13615](https://github.com/pandas-dev/pandas/issues/13615)).
  id: totrans-777
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq) 方法增加了`dialect`参数，允许用户指定使用
    BigQuery 的传统 SQL 还是 BigQuery 的标准 SQL。 有关更多详细信息，请参阅[文档](https://pandas-gbq.readthedocs.io/en/latest/reading.html)
    ([GH 13615](https://github.com/pandas-dev/pandas/issues/13615)).'
- en: 'The [`to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") method now allows the DataFrame column order to differ
    from the destination table schema ([GH 11359](https://github.com/pandas-dev/pandas/issues/11359)).  ###
    Fine-grained NumPy errstate'
  id: totrans-778
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq)
    方法现在允许 DataFrame 列顺序与目标表模式不同 ([GH 11359](https://github.com/pandas-dev/pandas/issues/11359)).  ###
    细粒度的 NumPy 错误状态'
- en: Previous versions of pandas would permanently silence numpy’s ufunc error handling
    when `pandas` was imported. pandas did this in order to silence the warnings that
    would arise from using numpy ufuncs on missing data, which are usually represented
    as `NaN` s. Unfortunately, this silenced legitimate warnings arising in non-pandas
    code in the application. Starting with 0.19.0, pandas will use the `numpy.errstate`
    context manager to silence these warnings in a more fine-grained manner, only
    around where these operations are actually used in the pandas code base. ([GH
    13109](https://github.com/pandas-dev/pandas/issues/13109), [GH 13145](https://github.com/pandas-dev/pandas/issues/13145))
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: 以前的 pandas 版本在导入`pandas`时会永久性地关闭 numpy 的 ufunc 错误处理。pandas 这样做是为了消除使用 numpy
    ufuncs 处理缺失数据（通常表示为`NaN`）时会出现的警告。不幸的是，这样会消除应用程序中非 pandas 代码中出现的合法警告。从 0.19.0 开始，pandas
    将使用`numpy.errstate`上下文管理器以更精细的方式消除这些警告，仅在 pandas 代码库中实际使用这些操作的地方周围。（[GH 13109](https://github.com/pandas-dev/pandas/issues/13109),
    [GH 13145](https://github.com/pandas-dev/pandas/issues/13145))
- en: 'After upgrading pandas, you may see *new* `RuntimeWarnings` being issued from
    your code. These are likely legitimate, and the underlying cause likely existed
    in the code when using previous versions of pandas that simply silenced the warning.
    Use [numpy.errstate](https://numpy.org/doc/stable/reference/generated/numpy.errstate.html)
    around the source of the `RuntimeWarning` to control how these conditions are
    handled.  ### Method `get_dummies` now returns integer dtypes'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: '升级 pandas 后，您可能会看到您的代码发出*新的*`RuntimeWarnings`。这很可能是合法的，而且在使用以前版本的 pandas 时存在的潜在原因可能只是简单地消除了警告。在`RuntimeWarning`的源代码周围使用[numpy.errstate](https://numpy.org/doc/stable/reference/generated/numpy.errstate.html)来控制如何处理这些条件。  ###
    方法`get_dummies`现在返回整数数据类���'
- en: The `pd.get_dummies` function now returns dummy-encoded columns as small integers,
    rather than floats ([GH 8725](https://github.com/pandas-dev/pandas/issues/8725)).
    This should provide an improved memory footprint.
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: '`pd.get_dummies`函数现在返回编码为小整数的虚拟列，而不是浮点数。([GH 8725](https://github.com/pandas-dev/pandas/issues/8725))
    这应该提供更好的内存占用。'
- en: '**Previous behavior**:'
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE128]'
  id: totrans-783
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '**New behavior**:'
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE129]  ### Downcast values to smallest possible dtype in `to_numeric`'
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE129]  ### 将值降级为`to_numeric`中可能的最小数据类型'
- en: '`pd.to_numeric()` now accepts a `downcast` parameter, which will downcast the
    data if possible to smallest specified numerical dtype ([GH 13352](https://github.com/pandas-dev/pandas/issues/13352))'
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: '`pd.to_numeric()`现在接受一个`downcast`参数，如果可能的话将数据降级为指定的最小数值数据类型。([GH 13352](https://github.com/pandas-dev/pandas/issues/13352))'
- en: '[PRE130]  ### pandas development API'
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE130]  ### pandas 开发 API'
- en: As part of making pandas API more uniform and accessible in the future, we have
    created a standard sub-package of pandas, `pandas.api` to hold public API’s. We
    are starting by exposing type introspection functions in `pandas.api.types`. More
    sub-packages and officially sanctioned API’s will be published in future versions
    of pandas ([GH 13147](https://github.com/pandas-dev/pandas/issues/13147), [GH
    13634](https://github.com/pandas-dev/pandas/issues/13634))
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 作为未来使 pandas API 更统一和易于访问的一部分，我们创建了一个标准的 pandas 子包`pandas.api`来保存公共 API。我们首先在`pandas.api.types`中公开类型内省函数。更多子包和官方认可的
    API 将在未来版本的 pandas 中发布。([GH 13147](https://github.com/pandas-dev/pandas/issues/13147),
    [GH 13634](https://github.com/pandas-dev/pandas/issues/13634))
- en: 'The following are now part of this API:'
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 以下现在是这个 API 的一部分：
- en: '[PRE131]'
  id: totrans-790
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: Note
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'Calling these functions from the internal module `pandas.core.common` will
    now show a `DeprecationWarning` ([GH 13990](https://github.com/pandas-dev/pandas/issues/13990))  ###
    Other enhancements'
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: '从内部模块`pandas.core.common`调用这些函数现在会显示一个`DeprecationWarning`。([GH 13990](https://github.com/pandas-dev/pandas/issues/13990))  ###
    其他增强功能'
- en: '`Timestamp` can now accept positional and keyword parameters similar to `datetime.datetime()`
    ([GH 10758](https://github.com/pandas-dev/pandas/issues/10758), [GH 11630](https://github.com/pandas-dev/pandas/issues/11630))'
  id: totrans-793
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp` 现在可以接受类似于`datetime.datetime()`的位置参数和关键字参数。([GH 10758](https://github.com/pandas-dev/pandas/issues/10758),
    [GH 11630](https://github.com/pandas-dev/pandas/issues/11630))'
- en: '[PRE132]'
  id: totrans-794
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE132]'
- en: The `.resample()` function now accepts a `on=` or `level=` parameter for resampling
    on a datetimelike column or `MultiIndex` level ([GH 13500](https://github.com/pandas-dev/pandas/issues/13500))
  id: totrans-795
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.resample()`函数现在接受`on=`或`level=`参数，用于在日期时间列或`MultiIndex`级别上重新采样。([GH 13500](https://github.com/pandas-dev/pandas/issues/13500))'
- en: '[PRE133]'
  id: totrans-796
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[PRE134]'
  id: totrans-797
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE134]'
- en: The `.get_credentials()` method of `GbqConnector` can now first try to fetch
    [the application default credentials](https://developers.google.com/identity/protocols/application-default-credentials).
    See the docs for more details ([GH 13577](https://github.com/pandas-dev/pandas/issues/13577)).
  id: totrans-798
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GbqConnector`的`.get_credentials()`方法现在可以首先尝试获取[应用程序默认凭据](https://developers.google.com/identity/protocols/application-default-credentials)。更多细节请参阅文档（[GH
    13577](https://github.com/pandas-dev/pandas/issues/13577)）'
- en: The `.tz_localize()` method of `DatetimeIndex` and `Timestamp` has gained the
    `errors` keyword, so you can potentially coerce nonexistent timestamps to `NaT`.
    The default behavior remains to raising a `NonExistentTimeError` ([GH 13057](https://github.com/pandas-dev/pandas/issues/13057))
  id: totrans-799
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DatetimeIndex`和`Timestamp`的`.tz_localize()`方法现在具有`errors`关键字，因此您可以将不存在的时间戳潜在地强制转换为`NaT`。默认行为仍然是引发`NonExistentTimeError`（[GH
    13057](https://github.com/pandas-dev/pandas/issues/13057)）'
- en: '`.to_hdf/read_hdf()` now accept path objects (e.g. `pathlib.Path`, `py.path.local`)
    for the file path ([GH 11773](https://github.com/pandas-dev/pandas/issues/11773))'
  id: totrans-800
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_hdf/read_hdf()`现在接受路径对象（例如`pathlib.Path`、`py.path.local`）作为文件路径（[GH 11773](https://github.com/pandas-dev/pandas/issues/11773)）'
- en: The `pd.read_csv()` with `engine='python'` has gained support for the `decimal`
    ([GH 12933](https://github.com/pandas-dev/pandas/issues/12933)), `na_filter` ([GH
    13321](https://github.com/pandas-dev/pandas/issues/13321)) and the `memory_map`
    option ([GH 13381](https://github.com/pandas-dev/pandas/issues/13381)).
  id: totrans-801
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`engine='python'`的`pd.read_csv()`现在支持`decimal`（[GH 12933](https://github.com/pandas-dev/pandas/issues/12933)）、`na_filter`（[GH
    13321](https://github.com/pandas-dev/pandas/issues/13321)）和`memory_map`选项（[GH
    13381](https://github.com/pandas-dev/pandas/issues/13381)）
- en: Consistent with the Python API, `pd.read_csv()` will now interpret `+inf` as
    positive infinity ([GH 13274](https://github.com/pandas-dev/pandas/issues/13274))
  id: totrans-802
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与Python API一致，`pd.read_csv()`现在将`+inf`解释为正无穷大（[GH 13274](https://github.com/pandas-dev/pandas/issues/13274)）
- en: The `pd.read_html()` has gained support for the `na_values`, `converters`, `keep_default_na`
    options ([GH 13461](https://github.com/pandas-dev/pandas/issues/13461))
  id: totrans-803
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_html()`现在支持`na_values`、`converters`、`keep_default_na`选项（[GH 13461](https://github.com/pandas-dev/pandas/issues/13461)）'
- en: '`Categorical.astype()` now accepts an optional boolean argument `copy`, effective
    when dtype is categorical ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
  id: totrans-804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Categorical.astype()`现在接受一个可选的布尔参数`copy`，当dtype为分类时生效（[GH 13209](https://github.com/pandas-dev/pandas/issues/13209)）'
- en: '`DataFrame` has gained the `.asof()` method to return the last non-NaN values
    according to the selected subset ([GH 13358](https://github.com/pandas-dev/pandas/issues/13358))'
  id: totrans-805
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame`现在具有`.asof()`方法，根据所选子集返回最后一个非NaN值（[GH 13358](https://github.com/pandas-dev/pandas/issues/13358)）'
- en: The `DataFrame` constructor will now respect key ordering if a list of `OrderedDict`
    objects are passed in ([GH 13304](https://github.com/pandas-dev/pandas/issues/13304))
  id: totrans-806
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果传入一组`OrderedDict`对象，`DataFrame`构造函数现在将尊重键的顺序（[GH 13304](https://github.com/pandas-dev/pandas/issues/13304)）
- en: '`pd.read_html()` has gained support for the `decimal` option ([GH 12907](https://github.com/pandas-dev/pandas/issues/12907))'
  id: totrans-807
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_html()`现在支持`decimal`选项（[GH 12907](https://github.com/pandas-dev/pandas/issues/12907)）'
- en: '`Series` has gained the properties `.is_monotonic`, `.is_monotonic_increasing`,
    `.is_monotonic_decreasing`, similar to `Index` ([GH 13336](https://github.com/pandas-dev/pandas/issues/13336))'
  id: totrans-808
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series`现在具有属性`.is_monotonic`、`.is_monotonic_increasing`、`.is_monotonic_decreasing`，类似于`Index`（[GH
    13336](https://github.com/pandas-dev/pandas/issues/13336)）'
- en: '`DataFrame.to_sql()` now allows a single value as the SQL type for all columns
    ([GH 11886](https://github.com/pandas-dev/pandas/issues/11886)).'
  id: totrans-809
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_sql()`现在允许将单个值作为所有列的SQL类型（[GH 11886](https://github.com/pandas-dev/pandas/issues/11886)）'
- en: '`Series.append` now supports the `ignore_index` option ([GH 13677](https://github.com/pandas-dev/pandas/issues/13677))'
  id: totrans-810
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.append`现在支持`ignore_index`选项（[GH 13677](https://github.com/pandas-dev/pandas/issues/13677)）'
- en: '`.to_stata()` and `StataWriter` can now write variable labels to Stata dta
    files using a dictionary to make column names to labels ([GH 13535](https://github.com/pandas-dev/pandas/issues/13535),
    [GH 13536](https://github.com/pandas-dev/pandas/issues/13536))'
  id: totrans-811
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_stata()`和`StataWriter`现在可以使用字典将列名转换为标签，将变量标签写入Stata dta文件（[GH 13535](https://github.com/pandas-dev/pandas/issues/13535)，[GH
    13536](https://github.com/pandas-dev/pandas/issues/13536)）'
- en: '`.to_stata()` and `StataWriter` will automatically convert `datetime64[ns]`
    columns to Stata format `%tc`, rather than raising a `ValueError` ([GH 12259](https://github.com/pandas-dev/pandas/issues/12259))'
  id: totrans-812
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_stata()`和`StataWriter`现在会自动将`datetime64[ns]`列转换为Stata格式`%tc`，而不是引发`ValueError`（[GH
    12259](https://github.com/pandas-dev/pandas/issues/12259)）'
- en: '`read_stata()` and `StataReader` raise with a more explicit error message when
    reading Stata files with repeated value labels when `convert_categoricals=True`
    ([GH 13923](https://github.com/pandas-dev/pandas/issues/13923))'
  id: totrans-813
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用 `convert_categoricals=True` 读取具有重复值标签的 Stata 文件时，`read_stata()` 和 `StataReader`
    会提出更明确的错误消息 ([GH 13923](https://github.com/pandas-dev/pandas/issues/13923))
- en: '`DataFrame.style` will now render sparsified MultiIndexes ([GH 11655](https://github.com/pandas-dev/pandas/issues/11655))'
  id: totrans-814
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.style` 现在会渲染稀疏的 MultiIndexes ([GH 11655](https://github.com/pandas-dev/pandas/issues/11655))'
- en: '`DataFrame.style` will now show column level names (e.g. `DataFrame.columns.names`)
    ([GH 13775](https://github.com/pandas-dev/pandas/issues/13775))'
  id: totrans-815
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.style` 现在会显示列级别的名称（例如 `DataFrame.columns.names`） ([GH 13775](https://github.com/pandas-dev/pandas/issues/13775))'
- en: '`DataFrame` has gained support to re-order the columns based on the values
    in a row using `df.sort_values(by=''...'', axis=1)` ([GH 10806](https://github.com/pandas-dev/pandas/issues/10806))'
  id: totrans-816
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame` 已经支持根据行中的值重新排序列使用 `df.sort_values(by=''...'', axis=1)` ([GH 10806](https://github.com/pandas-dev/pandas/issues/10806))'
- en: '[PRE135]'
  id: totrans-817
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE135]'
- en: Added documentation to [I/O](../user_guide/io.html#io-dtypes) regarding the
    perils of reading in columns with mixed dtypes and how to handle it ([GH 13746](https://github.com/pandas-dev/pandas/issues/13746))
  id: totrans-818
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[I/O](../user_guide/io.html#io-dtypes)文档中添加了关于读取具有混合 dtypes 的列的危险性以及如何处理的说明
    ([GH 13746](https://github.com/pandas-dev/pandas/issues/13746))
- en: '[`to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now has a `border` argument to control the value in
    the opening `<table>` tag. The default is the value of the `html.border` option,
    which defaults to 1\. This also affects the notebook HTML repr, but since Jupyter’s
    CSS includes a border-width attribute, the visual effect is the same. ([GH 11563](https://github.com/pandas-dev/pandas/issues/11563)).'
  id: totrans-819
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") 现在具有 `border` 参数来控制开放 `<table>` 标签中的值。默认值为 `html.border`
    选项的值，默认为 1。这也会影响笔记本 HTML 表示，但由于 Jupyter 的 CSS 包含了一个 border-width 属性，所以视觉效果是相同的。
    ([GH 11563](https://github.com/pandas-dev/pandas/issues/11563))'
- en: Raise `ImportError` in the sql functions when `sqlalchemy` is not installed
    and a connection string is used ([GH 11920](https://github.com/pandas-dev/pandas/issues/11920)).
  id: totrans-820
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当未安装 `sqlalchemy` 并使用连接字符串时，sql 函数将引发 `ImportError` 错误 ([GH 11920](https://github.com/pandas-dev/pandas/issues/11920))
- en: Compatibility with matplotlib 2.0\. Older versions of pandas should also work
    with matplotlib 2.0 ([GH 13333](https://github.com/pandas-dev/pandas/issues/13333))
  id: totrans-821
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 matplotlib 2.0 兼容。旧版本的 pandas 应该也可以与 matplotlib 2.0 一起工作 ([GH 13333](https://github.com/pandas-dev/pandas/issues/13333))
- en: '`Timestamp`, `Period`, `DatetimeIndex`, `PeriodIndex` and `.dt` accessor have
    gained a `.is_leap_year` property to check whether the date belongs to a leap
    year. ([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
  id: totrans-822
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp`, `Period`, `DatetimeIndex`, `PeriodIndex` 和 `.dt` accessor 现在具有
    `.is_leap_year` 属性来检查日期是否属于闰年。 ([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
- en: '`astype()` will now accept a dict of column name to data types mapping as the
    `dtype` argument. ([GH 12086](https://github.com/pandas-dev/pandas/issues/12086))'
  id: totrans-823
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`astype()` 现在将接受列名到数据类型映射的字典作为 `dtype` 参数。 ([GH 12086](https://github.com/pandas-dev/pandas/issues/12086))'
- en: The `pd.read_json` and `DataFrame.to_json` has gained support for reading and
    writing json lines with `lines` option see [Line delimited json](../user_guide/io.html#io-jsonl)
    ([GH 9180](https://github.com/pandas-dev/pandas/issues/9180))
  id: totrans-824
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_json` 和 `DataFrame.to_json` 现在支持使用 `lines` 选项读取和写入 json 行，参见 [Line
    delimited json](../user_guide/io.html#io-jsonl) ([GH 9180](https://github.com/pandas-dev/pandas/issues/9180))'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now supports the true_values and false_values keyword arguments
    ([GH 13347](https://github.com/pandas-dev/pandas/issues/13347))'
  id: totrans-825
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 现在支持 `true_values` 和 `false_values` 关键字参数 ([GH 13347](https://github.com/pandas-dev/pandas/issues/13347))'
- en: '`groupby()` will now accept a scalar and a single-element list for specifying
    `level` on a non-`MultiIndex` grouper. ([GH 13907](https://github.com/pandas-dev/pandas/issues/13907))'
  id: totrans-826
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby()` 现在将接受标量和单元素列表以指定非 `MultiIndex` 分组器上的 `level`。 ([GH 13907](https://github.com/pandas-dev/pandas/issues/13907))'
- en: Non-convertible dates in an excel date column will be returned without conversion
    and the column will be `object` dtype, rather than raising an exception ([GH 10001](https://github.com/pandas-dev/pandas/issues/10001)).
  id: totrans-827
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 excel 日期列中的不可转换日期将以 `object` dtype 返回，而不是引发异常 ([GH 10001](https://github.com/pandas-dev/pandas/issues/10001)).
- en: '`pd.Timedelta(None)` is now accepted and will return `NaT`, mirroring `pd.Timestamp`
    ([GH 13687](https://github.com/pandas-dev/pandas/issues/13687))'
  id: totrans-828
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在接受`pd.Timedelta(None)`，并将返回`NaT`，与`pd.Timestamp`相似（[GH 13687](https://github.com/pandas-dev/pandas/issues/13687)）
- en: '`pd.read_stata()` can now handle some format 111 files, which are produced
    by SAS when generating Stata dta files ([GH 11526](https://github.com/pandas-dev/pandas/issues/11526))'
  id: totrans-829
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_stata()` 现在可以处理一些格式为 111 的文件，这些文件是由 SAS 生成 Stata dta 文件时产生的（[GH 11526](https://github.com/pandas-dev/pandas/issues/11526)）'
- en: '`Series` and `Index` now support `divmod` which will return a tuple of series
    or indices. This behaves like a standard binary operator with regards to broadcasting
    rules ([GH 14208](https://github.com/pandas-dev/pandas/issues/14208)).  ### Function
    `merge_asof` for asof-style time-series joining'
  id: totrans-830
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 和 `Index` 现在支持 `divmod`，将返回一个系列或索引的元组。这遵循标准的二元运算符，关于广播规则（[GH 14208](https://github.com/pandas-dev/pandas/issues/14208)）的行为。
    ### 函数 `merge_asof` 用于 asof 风格的时序连接'
- en: A long-time requested feature has been added through the [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") function, to support asof style joining of time-series ([GH
    1870](https://github.com/pandas-dev/pandas/issues/1870), [GH 13695](https://github.com/pandas-dev/pandas/issues/13695),
    [GH 13709](https://github.com/pandas-dev/pandas/issues/13709), [GH 13902](https://github.com/pandas-dev/pandas/issues/13902)).
    Full documentation is [here](../user_guide/merging.html#merging-merge-asof).
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: 通过[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") 函数添加了一个长期请求的功能，以支持时序数据的 asof 风格连接（[GH 1870](https://github.com/pandas-dev/pandas/issues/1870),
    [GH 13695](https://github.com/pandas-dev/pandas/issues/13695), [GH 13709](https://github.com/pandas-dev/pandas/issues/13709),
    [GH 13902](https://github.com/pandas-dev/pandas/issues/13902)）。完整的文档在[这里](../user_guide/merging.html#merging-merge-asof)。
- en: The [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") performs an asof merge, which is similar to a left-join except
    that we match on nearest key rather than equal keys.
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: '[`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") 执行 asof 合并，类似于左连接，但我们匹配最近的键，而不是相等的键。'
- en: '[PRE136]'
  id: totrans-833
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: We typically want to match exactly when possible, and use the most recent value
    otherwise.
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常希望尽可能精确地匹配，并在其他情况下使用最近的值。
- en: '[PRE137]'
  id: totrans-835
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: We can also match rows ONLY with prior data, and not an exact match.
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以只匹配具有先前数据的行，而不是完全匹配。
- en: '[PRE138]'
  id: totrans-837
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: In a typical time-series example, we have `trades` and `quotes` and we want
    to `asof-join` them. This also illustrates using the `by` parameter to group data
    before merging.
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个典型的时间序列示例中，我们有 `trades` 和 `quotes`，我们想要对它们进行 `asof-join`。这也说明了在合并之前使用 `by`
    参数对数据进行分组。
- en: '[PRE139]'
  id: totrans-839
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '[PRE140]'
  id: totrans-840
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: An asof merge joins on the `on`, typically a datetimelike field, which is ordered,
    and in this case we are using a grouper in the `by` field. This is like a left-outer
    join, except that forward filling happens automatically taking the most recent
    non-NaN value.
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: asof 合并在 `on` 上进行，通常是一个有序的日期时间字段，在这种情况下，我们在 `by` 字段中使用了一个分组器。这类似于左外连接，只是自动进行前向填充，以获取最近的非
    NaN 值。
- en: '[PRE141]'
  id: totrans-842
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: This returns a merged DataFrame with the entries in the same order as the original
    left passed DataFrame (`trades` in this case), with the fields of the `quotes`
    merged.
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: 这返回一个合并的 DataFrame，其条目与原始的左侧传递的 DataFrame（在本例中是 `trades`）中的条目具有相同的顺序，`quotes`
    的字段已合并。
- en: '### Method `.rolling()` is now time-series aware'
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: '### 方法 `.rolling()` 现在具有时间序列意识'
- en: '`.rolling()` objects are now time-series aware and can accept a time-series
    offset (or convertible) for the `window` argument ([GH 13327](https://github.com/pandas-dev/pandas/issues/13327),
    [GH 12995](https://github.com/pandas-dev/pandas/issues/12995)). See the full documentation
    [here](../user_guide/window.html#window-generic).'
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: '`.rolling()` 对象现在具有时间序列意识，并且可以接受时间序列偏移（或可转换的）作为`window` 参数（[GH 13327](https://github.com/pandas-dev/pandas/issues/13327),
    [GH 12995](https://github.com/pandas-dev/pandas/issues/12995)）。查看完整文档[在这里](../user_guide/window.html#window-generic)。'
- en: '[PRE142]'
  id: totrans-846
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: This is a regular frequency index. Using an integer window parameter works to
    roll along the window frequency.
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个常规的频率索引。使用整数窗口参数沿着窗口频率滚动。
- en: '[PRE143]'
  id: totrans-848
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Specifying an offset allows a more intuitive specification of the rolling frequency.
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 指定偏移量可以更直观地指定滚动频率。
- en: '[PRE144]'
  id: totrans-850
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: Using a non-regular, but still monotonic index, rolling with an integer window
    does not impart any special calculation.
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: 使用非常规但仍然单调的索引，使用整数窗口进行滚动不会带来任何特殊的计算。
- en: '[PRE145]'
  id: totrans-852
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: Using the time-specification generates variable windows for this sparse data.
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 使用时间规范为这些稀疏数据生成可变窗口。
- en: '[PRE146]'
  id: totrans-854
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: Furthermore, we now allow an optional `on` parameter to specify a column (rather
    than the default of the index) in a DataFrame.
  id: totrans-855
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们现在允许一个可选的`on`参数来指定DataFrame中的列（而不是默认的索引）。
- en: '[PRE147]'
  id: totrans-856
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: '### Method `read_csv` has improved support for duplicate column names'
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: '### 方法`read_csv`对重复列名的支持已经改进'
- en: '[Duplicate column names](../user_guide/io.html#io-dupe-names) are now supported
    in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    whether they are in the file or passed in as the `names` parameter ([GH 7160](https://github.com/pandas-dev/pandas/issues/7160),
    [GH 9424](https://github.com/pandas-dev/pandas/issues/9424))'
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: '[重复列名](../user_guide/io.html#io-dupe-names)现在在[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")中得到支持，无论它们是在文件中还是作为`names`参数传递进来的 ([GH 7160](https://github.com/pandas-dev/pandas/issues/7160),
    [GH 9424](https://github.com/pandas-dev/pandas/issues/9424))'
- en: '[PRE148]'
  id: totrans-859
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '**Previous behavior**:'
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE149]'
  id: totrans-861
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: The first `a` column contained the same data as the second `a` column, when
    it should have contained the values `[0, 3]`.
  id: totrans-862
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个`a`列包含了与第二个`a`列相同的数据，而它应该包含值`[0, 3]`。
- en: '**New behavior**:'
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE150]'
  id: totrans-864
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: '### Method `read_csv` supports parsing `Categorical` directly'
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: '### 方法`read_csv`支持直接解析`Categorical`'
- en: The [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    function now supports parsing a `Categorical` column when specified as a dtype
    ([GH 10153](https://github.com/pandas-dev/pandas/issues/10153)). Depending on
    the structure of the data, this can result in a faster parse time and lower memory
    usage compared to converting to `Categorical` after parsing. See the io [docs
    here](../user_guide/io.html#io-categorical).
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定为dtype时，[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")函数现在支持解析`Categorical`列 ([GH 10153](https://github.com/pandas-dev/pandas/issues/10153))。根据数据的结构，这可能导致比解析后转换为`Categorical`更快的解析时间和更低的内存使用。请参阅io[这里的文档](../user_guide/io.html#io-categorical)。
- en: '[PRE151]'
  id: totrans-867
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: Individual columns can be parsed as a `Categorical` using a dict specification
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用字典规范将单独的列解析为`Categorical`
- en: '[PRE152]'
  id: totrans-869
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Note
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The resulting categories will always be parsed as strings (object dtype). If
    the categories are numeric they can be converted using the [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") function, or as appropriate, another converter such as [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime").
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: 结果类别将始终被解析为字符串（object dtype）。如果类别是数字的，可以使用[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")函数进行转换，或者根据需要使用另一个转换器，如[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime")。
- en: '[PRE153]'
  id: totrans-872
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '### Categorical concatenation'
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: '### 分类合并'
- en: A function `union_categoricals()` has been added for combining categoricals,
    see [Unioning Categoricals](../user_guide/categorical.html#categorical-union)
    ([GH 13361](https://github.com/pandas-dev/pandas/issues/13361), [GH 13763](https://github.com/pandas-dev/pandas/issues/13763),
    [GH 13846](https://github.com/pandas-dev/pandas/issues/13846), [GH 14173](https://github.com/pandas-dev/pandas/issues/14173))
  id: totrans-874
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了一个函数`union_categoricals()`用于合并分类变量，参见[Unioning Categoricals](../user_guide/categorical.html#categorical-union)
    ([GH 13361](https://github.com/pandas-dev/pandas/issues/13361), [GH 13763](https://github.com/pandas-dev/pandas/issues/13763),
    [GH 13846](https://github.com/pandas-dev/pandas/issues/13846), [GH 14173](https://github.com/pandas-dev/pandas/issues/14173))
- en: '[PRE154]'
  id: totrans-875
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE154]'
- en: '`concat` and `append` now can concat `category` dtypes with different `categories`
    as `object` dtype ([GH 13524](https://github.com/pandas-dev/pandas/issues/13524))'
  id: totrans-876
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`concat`和`append`现在可以将具有不同`categories`的`category` dtypes连接为`object` dtype ([GH
    13524](https://github.com/pandas-dev/pandas/issues/13524))'
- en: '[PRE155]'
  id: totrans-877
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '**Previous behavior**:'
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE156]'
  id: totrans-879
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: '**New behavior**:'
  id: totrans-880
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE157]'
  id: totrans-881
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '### Semi-month offsets'
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: '### 半月偏移'
- en: pandas has gained new frequency offsets, `SemiMonthEnd` (‘SM’) and `SemiMonthBegin`
    (‘SMS’). These provide date offsets anchored (by default) to the 15th and end
    of month, and 15th and 1st of month respectively. ([GH 1543](https://github.com/pandas-dev/pandas/issues/1543))
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: pandas新增了新的频率偏移，`SemiMonthEnd`（‘SM’）和`SemiMonthBegin`（‘SMS’）。这些提供的日期偏移默认锚定在月中（15号）和月末，以及月中（15号）和月初（1号）。([GH
    1543](https://github.com/pandas-dev/pandas/issues/1543))
- en: '[PRE158]'
  id: totrans-884
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '**SemiMonthEnd**:'
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: '**SemiMonthEnd**:'
- en: '[PRE159]'
  id: totrans-886
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '**SemiMonthBegin**:'
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: '**SemiMonthBegin**:'
- en: '[PRE160]'
  id: totrans-888
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: Using the anchoring suffix, you can also specify the day of month to use instead
    of the 15th.
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: 使用锚定后缀，您还可以指定要使用的月份的日期，而不是15号。
- en: '[PRE161]'
  id: totrans-890
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: '### New Index methods'
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: '### 新的Index方法'
- en: The following methods and options are added to `Index`, to be more consistent
    with the `Series` and `DataFrame` API.
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的方法和选项已添加到`Index`中，以使其与`Series`和`DataFrame`API更加一致。
- en: '`Index` now supports the `.where()` function for same shape indexing ([GH 13170](https://github.com/pandas-dev/pandas/issues/13170))'
  id: totrans-893
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index` 现在支持 `.where()` 函数进行相同形状的索引（[GH 13170](https://github.com/pandas-dev/pandas/issues/13170)）。'
- en: '[PRE162]'
  id: totrans-894
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '`Index` now supports `.dropna()` to exclude missing values ([GH 6194](https://github.com/pandas-dev/pandas/issues/6194))'
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index` 现在支持 `.dropna()` 以排除缺失值（[GH 6194](https://github.com/pandas-dev/pandas/issues/6194)）。'
- en: '[PRE163]'
  id: totrans-896
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: For `MultiIndex`, values are dropped if any level is missing by default. Specifying
    `how='all'` only drops values where all levels are missing.
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `MultiIndex`，默认情况下如果任何级别缺失，则会删除值。指定 `how='all'` 仅删除所有级别都缺失的值。
- en: '[PRE164]'
  id: totrans-898
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '`Index` now supports `.str.extractall()` which returns a `DataFrame`, see the
    [docs here](../user_guide/text.html#text-extractall) ([GH 10008](https://github.com/pandas-dev/pandas/issues/10008),
    [GH 13156](https://github.com/pandas-dev/pandas/issues/13156))'
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index` 现在支持 `.str.extractall()`，它返回一个 `DataFrame`，请参阅[此处的文档](../user_guide/text.html#text-extractall)（[GH
    10008](https://github.com/pandas-dev/pandas/issues/10008)，[GH 13156](https://github.com/pandas-dev/pandas/issues/13156)）'
- en: '[PRE165]'
  id: totrans-900
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: '`Index.astype()` now accepts an optional boolean argument `copy`, which allows
    optional copying if the requirements on dtype are satisfied ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
  id: totrans-901
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.astype()` 现在接受一个可选的布尔参数 `copy`，如果满足 dtype 的要求，则允许可选复制（[GH 13209](https://github.com/pandas-dev/pandas/issues/13209)）。'
- en: '### Google BigQuery enhancements'
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: '### Google BigQuery 增强'
- en: The [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    method has gained the `dialect` argument to allow users to specify whether to
    use BigQuery’s legacy SQL or BigQuery’s standard SQL. See the [docs](https://pandas-gbq.readthedocs.io/en/latest/reading.html)
    for more details ([GH 13615](https://github.com/pandas-dev/pandas/issues/13615)).
  id: totrans-903
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    方法增加了 `dialect` 参数，允许用户指定使用 BigQuery 的传统 SQL 还是标准 SQL。更多细节请参阅[文档](https://pandas-gbq.readthedocs.io/en/latest/reading.html)（[GH
    13615](https://github.com/pandas-dev/pandas/issues/13615)）。'
- en: The [`to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") method now allows the DataFrame column order to differ
    from the destination table schema ([GH 11359](https://github.com/pandas-dev/pandas/issues/11359)).
  id: totrans-904
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") 方法现在允许 DataFrame 的列顺序与目标表模式不同（[GH 11359](https://github.com/pandas-dev/pandas/issues/11359)）。'
- en: '### Fine-grained NumPy errstate'
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: '### 细粒度的 NumPy errstate'
- en: Previous versions of pandas would permanently silence numpy’s ufunc error handling
    when `pandas` was imported. pandas did this in order to silence the warnings that
    would arise from using numpy ufuncs on missing data, which are usually represented
    as `NaN` s. Unfortunately, this silenced legitimate warnings arising in non-pandas
    code in the application. Starting with 0.19.0, pandas will use the `numpy.errstate`
    context manager to silence these warnings in a more fine-grained manner, only
    around where these operations are actually used in the pandas code base. ([GH
    13109](https://github.com/pandas-dev/pandas/issues/13109), [GH 13145](https://github.com/pandas-dev/pandas/issues/13145))
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
  zh: 先前版本的 pandas 在导入时永久消除了 numpy 的 ufunc 错误处理。pandas 这样做是为了消除在缺失数据上使用 numpy ufuncs
    时可能引发的警告，这些警告通常表示为 `NaN`。不幸的是，这样做会消除应用程序中非 pandas 代码中出现的合法警告。从 0.19.0 开始，pandas
    将使用 `numpy.errstate` 上下文管理器以更精细的方式消除这些警告，仅在 pandas 代码库中实际使用这些操作的地方周围使用。 （[GH 13109](https://github.com/pandas-dev/pandas/issues/13109)，[GH
    13145](https://github.com/pandas-dev/pandas/issues/13145)）
- en: After upgrading pandas, you may see *new* `RuntimeWarnings` being issued from
    your code. These are likely legitimate, and the underlying cause likely existed
    in the code when using previous versions of pandas that simply silenced the warning.
    Use [numpy.errstate](https://numpy.org/doc/stable/reference/generated/numpy.errstate.html)
    around the source of the `RuntimeWarning` to control how these conditions are
    handled.
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: 升级 pandas 后，您可能会看到来自您的代码发出的 *新* `RuntimeWarnings`。这些可能是合法的，并且在使用先前版本的 pandas
    时存在于代码中的潜在原因很可能是在代码中简单地消除了警告。在 `RuntimeWarning` 的源头周围使用 [numpy.errstate](https://numpy.org/doc/stable/reference/generated/numpy.errstate.html)
    来控制这些条件的处理。
- en: '### Method `get_dummies` now returns integer dtypes'
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: '### 方法 `get_dummies` 现在返回整数 dtype'
- en: The `pd.get_dummies` function now returns dummy-encoded columns as small integers,
    rather than floats ([GH 8725](https://github.com/pandas-dev/pandas/issues/8725)).
    This should provide an improved memory footprint.
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: '`pd.get_dummies` 函数现在将虚拟编码列返回为小整数，而不是浮点数（[GH 8725](https://github.com/pandas-dev/pandas/issues/8725)）。这应该提供了更好的内存占用。'
- en: '**Previous behavior**:'
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**：'
- en: '[PRE166]'
  id: totrans-911
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '**New behavior**:'
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE167]'
  id: totrans-913
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '### Downcast values to smallest possible dtype in `to_numeric`'
  id: totrans-914
  prefs: []
  type: TYPE_NORMAL
  zh: '### 在 `to_numeric` 中将值降级为最小可能的数据类型'
- en: '`pd.to_numeric()` now accepts a `downcast` parameter, which will downcast the
    data if possible to smallest specified numerical dtype ([GH 13352](https://github.com/pandas-dev/pandas/issues/13352))'
  id: totrans-915
  prefs: []
  type: TYPE_NORMAL
  zh: '`pd.to_numeric()` 现在接受一个 `downcast` 参数，如果可能的话，将数据降级为指定的最小数值数据类型 ([GH 13352](https://github.com/pandas-dev/pandas/issues/13352))。'
- en: '[PRE168]'
  id: totrans-916
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: '### pandas development API'
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: '### pandas 开发 API'
- en: As part of making pandas API more uniform and accessible in the future, we have
    created a standard sub-package of pandas, `pandas.api` to hold public API’s. We
    are starting by exposing type introspection functions in `pandas.api.types`. More
    sub-packages and officially sanctioned API’s will be published in future versions
    of pandas ([GH 13147](https://github.com/pandas-dev/pandas/issues/13147), [GH
    13634](https://github.com/pandas-dev/pandas/issues/13634))
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: 作为使 pandas API 在未来更加统一和易于访问的一部分，我们创建了一个标准的 pandas 子包 `pandas.api` 来保存公共 API。我们首先在
    `pandas.api.types` 中公开了类型内省函数。未来版本的 pandas 将发布更多的子包和官方认可的 API ([GH 13147](https://github.com/pandas-dev/pandas/issues/13147),
    [GH 13634](https://github.com/pandas-dev/pandas/issues/13634))。
- en: 'The following are now part of this API:'
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
  zh: 以下内容现已成为此 API 的一部分：
- en: '[PRE169]'
  id: totrans-920
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: Note
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Calling these functions from the internal module `pandas.core.common` will now
    show a `DeprecationWarning` ([GH 13990](https://github.com/pandas-dev/pandas/issues/13990))
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: 从内部模块 `pandas.core.common` 调用这些函数现在将显示一个 `DeprecationWarning` ([GH 13990](https://github.com/pandas-dev/pandas/issues/13990))。
- en: '### Other enhancements'
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: '### 其他增强功能'
- en: '`Timestamp` can now accept positional and keyword parameters similar to `datetime.datetime()`
    ([GH 10758](https://github.com/pandas-dev/pandas/issues/10758), [GH 11630](https://github.com/pandas-dev/pandas/issues/11630))'
  id: totrans-924
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp` 现在可以接受类似于 `datetime.datetime()` 的位置参数和关键字参数 ([GH 10758](https://github.com/pandas-dev/pandas/issues/10758),
    [GH 11630](https://github.com/pandas-dev/pandas/issues/11630))。'
- en: '[PRE170]'
  id: totrans-925
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE170]'
- en: The `.resample()` function now accepts a `on=` or `level=` parameter for resampling
    on a datetimelike column or `MultiIndex` level ([GH 13500](https://github.com/pandas-dev/pandas/issues/13500))
  id: totrans-926
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.resample()` 函数现在接受 `on=` 或 `level=` 参数，用于在日期时间列或 `MultiIndex` 级别上重新采样 ([GH
    13500](https://github.com/pandas-dev/pandas/issues/13500))。'
- en: '[PRE171]'
  id: totrans-927
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE171]'
- en: '[PRE172]'
  id: totrans-928
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE172]'
- en: The `.get_credentials()` method of `GbqConnector` can now first try to fetch
    [the application default credentials](https://developers.google.com/identity/protocols/application-default-credentials).
    See the docs for more details ([GH 13577](https://github.com/pandas-dev/pandas/issues/13577)).
  id: totrans-929
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GbqConnector` 的 `.get_credentials()` 方法现在可以首先尝试获取[应用程序默认凭据](https://developers.google.com/identity/protocols/application-default-credentials)。更多详细信息请参阅文档
    ([GH 13577](https://github.com/pandas-dev/pandas/issues/13577))。'
- en: The `.tz_localize()` method of `DatetimeIndex` and `Timestamp` has gained the
    `errors` keyword, so you can potentially coerce nonexistent timestamps to `NaT`.
    The default behavior remains to raising a `NonExistentTimeError` ([GH 13057](https://github.com/pandas-dev/pandas/issues/13057))
  id: totrans-930
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DatetimeIndex` 和 `Timestamp` 的 `.tz_localize()` 方法现已增加了 `errors` 关键字，因此您可以将不存在的时间戳潜在地强制转换为
    `NaT`。默认行为仍然是引发 `NonExistentTimeError` ([GH 13057](https://github.com/pandas-dev/pandas/issues/13057))。'
- en: '`.to_hdf/read_hdf()` now accept path objects (e.g. `pathlib.Path`, `py.path.local`)
    for the file path ([GH 11773](https://github.com/pandas-dev/pandas/issues/11773))'
  id: totrans-931
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_hdf/read_hdf()` 现在接受路径对象（例如 `pathlib.Path`，`py.path.local`）作为文件路径 ([GH
    11773](https://github.com/pandas-dev/pandas/issues/11773))。'
- en: The `pd.read_csv()` with `engine='python'` has gained support for the `decimal`
    ([GH 12933](https://github.com/pandas-dev/pandas/issues/12933)), `na_filter` ([GH
    13321](https://github.com/pandas-dev/pandas/issues/13321)) and the `memory_map`
    option ([GH 13381](https://github.com/pandas-dev/pandas/issues/13381)).
  id: totrans-932
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_csv()` 使用 `engine=''python''` 现已支持 `decimal` ([GH 12933](https://github.com/pandas-dev/pandas/issues/12933))，`na_filter`
    ([GH 13321](https://github.com/pandas-dev/pandas/issues/13321)) 和 `memory_map`
    选项 ([GH 13381](https://github.com/pandas-dev/pandas/issues/13381))。'
- en: Consistent with the Python API, `pd.read_csv()` will now interpret `+inf` as
    positive infinity ([GH 13274](https://github.com/pandas-dev/pandas/issues/13274))
  id: totrans-933
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 Python API 一致，`pd.read_csv()` 现在将 `+inf` 解释为正无穷大 ([GH 13274](https://github.com/pandas-dev/pandas/issues/13274))。
- en: The `pd.read_html()` has gained support for the `na_values`, `converters`, `keep_default_na`
    options ([GH 13461](https://github.com/pandas-dev/pandas/issues/13461))
  id: totrans-934
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_html()` 现已支持 `na_values`，`converters`，`keep_default_na` 选项 ([GH 13461](https://github.com/pandas-dev/pandas/issues/13461))。'
- en: '`Categorical.astype()` now accepts an optional boolean argument `copy`, effective
    when dtype is categorical ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
  id: totrans-935
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Categorical.astype()` 现在接受一个可选的布尔参数 `copy`，在 dtype 为 categorical 时有效 ([GH
    13209](https://github.com/pandas-dev/pandas/issues/13209))。'
- en: '`DataFrame` has gained the `.asof()` method to return the last non-NaN values
    according to the selected subset ([GH 13358](https://github.com/pandas-dev/pandas/issues/13358))'
  id: totrans-936
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame`已经增加了`.asof()`方法，以根据所选子集返回最后一个非NaN值（[GH 13358](https://github.com/pandas-dev/pandas/issues/13358))。'
- en: The `DataFrame` constructor will now respect key ordering if a list of `OrderedDict`
    objects are passed in ([GH 13304](https://github.com/pandas-dev/pandas/issues/13304))
  id: totrans-937
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果传递了`OrderedDict`对象列表，则`DataFrame`构造函数现在将尊重键排序（[GH 13304](https://github.com/pandas-dev/pandas/issues/13304))。
- en: '`pd.read_html()` has gained support for the `decimal` option ([GH 12907](https://github.com/pandas-dev/pandas/issues/12907))'
  id: totrans-938
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_html()`现在支持`decimal`选项（[GH 12907](https://github.com/pandas-dev/pandas/issues/12907))。'
- en: '`Series` has gained the properties `.is_monotonic`, `.is_monotonic_increasing`,
    `.is_monotonic_decreasing`, similar to `Index` ([GH 13336](https://github.com/pandas-dev/pandas/issues/13336))'
  id: totrans-939
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series`已经增加了`.is_monotonic`、`.is_monotonic_increasing`、`.is_monotonic_decreasing`属性，类似于`Index`（[GH
    13336](https://github.com/pandas-dev/pandas/issues/13336))。'
- en: '`DataFrame.to_sql()` now allows a single value as the SQL type for all columns
    ([GH 11886](https://github.com/pandas-dev/pandas/issues/11886)).'
  id: totrans-940
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_sql()`现在允许将单个值用作所有列的SQL类型（[GH 11886](https://github.com/pandas-dev/pandas/issues/11886))。'
- en: '`Series.append` now supports the `ignore_index` option ([GH 13677](https://github.com/pandas-dev/pandas/issues/13677))'
  id: totrans-941
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.append`现在支持`ignore_index`选项（[GH 13677](https://github.com/pandas-dev/pandas/issues/13677))。'
- en: '`.to_stata()` and `StataWriter` can now write variable labels to Stata dta
    files using a dictionary to make column names to labels ([GH 13535](https://github.com/pandas-dev/pandas/issues/13535),
    [GH 13536](https://github.com/pandas-dev/pandas/issues/13536))'
  id: totrans-942
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_stata()`和`StataWriter`现在可以使用字典将列名转换为标签，将变量标签写入Stata dta文件（[GH 13535](https://github.com/pandas-dev/pandas/issues/13535),
    [GH 13536](https://github.com/pandas-dev/pandas/issues/13536))。'
- en: '`.to_stata()` and `StataWriter` will automatically convert `datetime64[ns]`
    columns to Stata format `%tc`, rather than raising a `ValueError` ([GH 12259](https://github.com/pandas-dev/pandas/issues/12259))'
  id: totrans-943
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.to_stata()`和`StataWriter`现在将自动将`datetime64[ns]`列转换为Stata格式`%tc`，而不是引发`ValueError`（[GH
    12259](https://github.com/pandas-dev/pandas/issues/12259))。'
- en: '`read_stata()` and `StataReader` raise with a more explicit error message when
    reading Stata files with repeated value labels when `convert_categoricals=True`
    ([GH 13923](https://github.com/pandas-dev/pandas/issues/13923))'
  id: totrans-944
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用`convert_categoricals=True`时，`read_stata()`和`StataReader`在读取具有重复值标签的Stata文件时会引发一个更明确的错误消息（[GH
    13923](https://github.com/pandas-dev/pandas/issues/13923))。
- en: '`DataFrame.style` will now render sparsified MultiIndexes ([GH 11655](https://github.com/pandas-dev/pandas/issues/11655))'
  id: totrans-945
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.style`现在将呈现稀疏化的MultiIndexes（[GH 11655](https://github.com/pandas-dev/pandas/issues/11655))。'
- en: '`DataFrame.style` will now show column level names (e.g. `DataFrame.columns.names`)
    ([GH 13775](https://github.com/pandas-dev/pandas/issues/13775))'
  id: totrans-946
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.style`现在将显示列级别的名称（例如`DataFrame.columns.names`）（[GH 13775](https://github.com/pandas-dev/pandas/issues/13775))。'
- en: '`DataFrame` has gained support to re-order the columns based on the values
    in a row using `df.sort_values(by=''...'', axis=1)` ([GH 10806](https://github.com/pandas-dev/pandas/issues/10806))'
  id: totrans-947
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame`已经增加了根据行中的值重新排序列的支持，使用`df.sort_values(by=''...'', axis=1)`（[GH 10806](https://github.com/pandas-dev/pandas/issues/10806))。'
- en: '[PRE173]'
  id: totrans-948
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE173]'
- en: Added documentation to [I/O](../user_guide/io.html#io-dtypes) regarding the
    perils of reading in columns with mixed dtypes and how to handle it ([GH 13746](https://github.com/pandas-dev/pandas/issues/13746))
  id: totrans-949
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了关于在读取具有混合数据类型列时可能遇到的问题以及如何处理的[I/O](../user_guide/io.html#io-dtypes)文档（[GH
    13746](https://github.com/pandas-dev/pandas/issues/13746))。
- en: '[`to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") now has a `border` argument to control the value in
    the opening `<table>` tag. The default is the value of the `html.border` option,
    which defaults to 1\. This also affects the notebook HTML repr, but since Jupyter’s
    CSS includes a border-width attribute, the visual effect is the same. ([GH 11563](https://github.com/pandas-dev/pandas/issues/11563)).'
  id: totrans-950
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html")现在具有一个`border`参数，用于控制在开放的`<table>`标签中的值。默认值是`html.border`选项的值，默认为1。这也会影响到笔记本的HTML表示，但由于Jupyter的CSS包含了一个border-width属性，视觉效果是一样的。([GH
    11563](https://github.com/pandas-dev/pandas/issues/11563)).'
- en: Raise `ImportError` in the sql functions when `sqlalchemy` is not installed
    and a connection string is used ([GH 11920](https://github.com/pandas-dev/pandas/issues/11920)).
  id: totrans-951
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当未安装`sqlalchemy`并且使用连接字符串时，在sql函数中引发`ImportError`（[GH 11920](https://github.com/pandas-dev/pandas/issues/11920))。
- en: Compatibility with matplotlib 2.0\. Older versions of pandas should also work
    with matplotlib 2.0 ([GH 13333](https://github.com/pandas-dev/pandas/issues/13333))
  id: totrans-952
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 matplotlib 2.0 兼容。较旧版本的 pandas 应该也可以与 matplotlib 2.0 兼容。([GH 13333](https://github.com/pandas-dev/pandas/issues/13333))
- en: '`Timestamp`, `Period`, `DatetimeIndex`, `PeriodIndex` and `.dt` accessor have
    gained a `.is_leap_year` property to check whether the date belongs to a leap
    year. ([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
  id: totrans-953
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp`、`Period`、`DatetimeIndex`、`PeriodIndex` 和 `.dt` 访问器现已新增 `.is_leap_year`
    属性，用于检查日期是否属于闰年。([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
- en: '`astype()` will now accept a dict of column name to data types mapping as the
    `dtype` argument. ([GH 12086](https://github.com/pandas-dev/pandas/issues/12086))'
  id: totrans-954
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`astype()` 现在接受将列名映射到数据类型的字典作为 `dtype` 参数。([GH 12086](https://github.com/pandas-dev/pandas/issues/12086))'
- en: The `pd.read_json` and `DataFrame.to_json` has gained support for reading and
    writing json lines with `lines` option see [Line delimited json](../user_guide/io.html#io-jsonl)
    ([GH 9180](https://github.com/pandas-dev/pandas/issues/9180))
  id: totrans-955
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_json` 和 `DataFrame.to_json` 现已支持使用 `lines` 选项读取和写入行分隔的 json，请参阅 [行分隔的
    json](../user_guide/io.html#io-jsonl)。([GH 9180](https://github.com/pandas-dev/pandas/issues/9180))'
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now supports the true_values and false_values keyword arguments
    ([GH 13347](https://github.com/pandas-dev/pandas/issues/13347))'
  id: totrans-956
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") 现在支持 `true_values` 和 `false_values` 关键字参数。([GH 13347](https://github.com/pandas-dev/pandas/issues/13347))'
- en: '`groupby()` will now accept a scalar and a single-element list for specifying
    `level` on a non-`MultiIndex` grouper. ([GH 13907](https://github.com/pandas-dev/pandas/issues/13907))'
  id: totrans-957
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groupby()` 现在接受标量和单元素列表来指定非`MultiIndex`分组器上的 `level`。([GH 13907](https://github.com/pandas-dev/pandas/issues/13907))'
- en: Non-convertible dates in an excel date column will be returned without conversion
    and the column will be `object` dtype, rather than raising an exception ([GH 10001](https://github.com/pandas-dev/pandas/issues/10001)).
  id: totrans-958
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Excel 日期列中，不可转换的日期将不进行转换，并且列将是 `object` 数据类型，而不是引发异常。([GH 10001](https://github.com/pandas-dev/pandas/issues/10001))
- en: '`pd.Timedelta(None)` is now accepted and will return `NaT`, mirroring `pd.Timestamp`
    ([GH 13687](https://github.com/pandas-dev/pandas/issues/13687))'
  id: totrans-959
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Timedelta(None)` 现在被接受，并将返回 `NaT`，与 `pd.Timestamp` 类似。([GH 13687](https://github.com/pandas-dev/pandas/issues/13687))'
- en: '`pd.read_stata()` can now handle some format 111 files, which are produced
    by SAS when generating Stata dta files ([GH 11526](https://github.com/pandas-dev/pandas/issues/11526))'
  id: totrans-960
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_stata()` 现在可以处理由 SAS 生成 Stata dta 文件时产生的一些格式为 111 的文件。([GH 11526](https://github.com/pandas-dev/pandas/issues/11526))'
- en: '`Series` and `Index` now support `divmod` which will return a tuple of series
    or indices. This behaves like a standard binary operator with regards to broadcasting
    rules ([GH 14208](https://github.com/pandas-dev/pandas/issues/14208)).'
  id: totrans-961
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 和 `Index` 现在支持 `divmod`，将返回系列或索引的元组。这与广播规则一致的标准二元运算符行为。([GH 14208](https://github.com/pandas-dev/pandas/issues/14208))'
- en: '## API changes'
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: '## API 更改'
- en: '`Series.tolist()` will now return Python types'
  id: totrans-963
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Series.tolist()` 现在将返回 Python 类型'
- en: '`Series.tolist()` will now return Python types in the output, mimicking NumPy
    `.tolist()` behavior ([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))'
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.tolist()` 现在将在输出中返回 Python 类型，模仿 NumPy 的 `.tolist()` 行为。([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))'
- en: '[PRE174]'
  id: totrans-965
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: '**Previous behavior**:'
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE175]'
  id: totrans-967
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: '**New behavior**:'
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE176]'
  id: totrans-969
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: '### `Series` operators for different indexes'
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: '### 不同索引的 `Series` 运算符'
- en: Following `Series` operators have been changed to make all operators consistent,
    including `DataFrame` ([GH 1134](https://github.com/pandas-dev/pandas/issues/1134),
    [GH 4581](https://github.com/pandas-dev/pandas/issues/4581), [GH 13538](https://github.com/pandas-dev/pandas/issues/13538))
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 `Series` 运算符已更改，使所有运算符保持一致，包括 `DataFrame`。([GH 1134](https://github.com/pandas-dev/pandas/issues/1134),
    [GH 4581](https://github.com/pandas-dev/pandas/issues/4581), [GH 13538](https://github.com/pandas-dev/pandas/issues/13538))
- en: '`Series` comparison operators now raise `ValueError` when `index` are different.'
  id: totrans-972
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 `index` 不同时，`Series` 比较运算符现在会引发 `ValueError`。
- en: '`Series` logical operators align both `index` of left and right hand side.'
  id: totrans-973
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series` 逻辑运算符会对左右手边的 `index` 进行对齐。'
- en: Warning
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Until 0.18.1, comparing `Series` with the same length, would succeed even if
    the `.index` are different (the result ignores `.index`). As of 0.19.0, this will
    raises `ValueError` to be more strict. This section also describes how to keep
    previous behavior or align different indexes, using the flexible comparison methods
    like `.eq`.
  id: totrans-975
  prefs: []
  type: TYPE_NORMAL
  zh: 直到0.18.1，比较具有相同长度的`Series`，即使`.index`不同也会成功（结果忽略`.index`）。从0.19.0开始，这将引发`ValueError`以更加严格。本节还描述了如何保持先前行为或对齐不同索引，使用像`.eq`这样的灵活比较方法。
- en: 'As a result, `Series` and `DataFrame` operators behave as below:'
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`Series`和`DataFrame`的运算符行为如下：
- en: Arithmetic operators
  id: totrans-977
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 算术运算符
- en: Arithmetic operators align both `index` (no changes).
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: 算术运算符会对齐两个`index`（无更改）。
- en: '[PRE177]'
  id: totrans-979
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: Comparison operators
  id: totrans-980
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 比较运算符
- en: Comparison operators raise `ValueError` when `.index` are different.
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: 当`.index`不同时，比较运算符会引发`ValueError`。
- en: '**Previous behavior** (`Series`):'
  id: totrans-982
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**（`Series`）：'
- en: '`Series` compared values ignoring the `.index` as long as both had the same
    length:'
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`比较值时会忽略`.index`，只要两者长度相同：'
- en: '[PRE178]'
  id: totrans-984
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: '**New behavior** (`Series`):'
  id: totrans-985
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**（`Series`）：'
- en: '[PRE179]'
  id: totrans-986
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: Note
  id: totrans-987
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To achieve the same result as previous versions (compare values based on locations
    ignoring `.index`), compare both `.values`.
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现与先前版本相同的结果（基于位置比较值而忽略`.index`），请比较`.values`。
- en: '[PRE180]'
  id: totrans-989
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: 'If you want to compare `Series` aligning its `.index`, see flexible comparison
    methods section below:'
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要比较`Series`并对齐其`.index`，请参见下面的灵活比较方法部分：
- en: '[PRE181]'
  id: totrans-991
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '**Current behavior** (`DataFrame`, no change):'
  id: totrans-992
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**（`DataFrame`，无更改）：'
- en: '[PRE182]'
  id: totrans-993
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: Logical operators
  id: totrans-994
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 逻辑运算符
- en: Logical operators align both `.index` of left and right hand side.
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑运算符会对齐左右两侧的`.index`。
- en: '**Previous behavior** (`Series`), only left hand side `index` was kept:'
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**（`Series`），仅保留左侧的`index`：'
- en: '[PRE183]'
  id: totrans-997
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: '**New behavior** (`Series`):'
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**（`Series`）：'
- en: '[PRE184]'
  id: totrans-999
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: Note
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`Series` logical operators fill a `NaN` result with `False`.'
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`逻辑运算符将`NaN`结果填充为`False`。'
- en: Note
  id: totrans-1002
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'To achieve the same result as previous versions (compare values based on only
    left hand side index), you can use `reindex_like`:'
  id: totrans-1003
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现与先前版本相同的结果（仅基于左侧索引比较值），可以使用`reindex_like`：
- en: '[PRE185]'
  id: totrans-1004
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: '**Current behavior** (`DataFrame`, no change):'
  id: totrans-1005
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**（`DataFrame`，无更改）：'
- en: '[PRE186]'
  id: totrans-1006
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: Flexible comparison methods
  id: totrans-1007
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 灵活的比较方法
- en: '`Series` flexible comparison methods like `eq`, `ne`, `le`, `lt`, `ge` and
    `gt` now align both `index`. Use these operators if you want to compare two `Series`
    which has the different `index`.'
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`的灵活比较方法如`eq`、`ne`、`le`、`lt`、`ge`和`gt`现在会对齐两个`index`。如果要比较具有不同`index`的两个`Series`，请使用这些运算符。'
- en: '[PRE187]'
  id: totrans-1009
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: 'Previously, this worked the same as comparison operators (see above).  ###
    `Series` type promotion on assignment'
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，这与比较运算符的行为相同（见上文）。### `Series`类型在赋值时的提升
- en: A `Series` will now correctly promote its dtype for assignment with incompat
    values to the current dtype ([GH 13234](https://github.com/pandas-dev/pandas/issues/13234))
  id: totrans-1011
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`现在将正确提升其数据类型以与当前数据类型不兼容的值进行赋值（[GH 13234](https://github.com/pandas-dev/pandas/issues/13234)）'
- en: '[PRE188]'
  id: totrans-1012
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: '**Previous behavior**:'
  id: totrans-1013
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**：'
- en: '[PRE189]'
  id: totrans-1014
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: '**New behavior**:'
  id: totrans-1015
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE190]  ### Function `.to_datetime()` changes'
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE190]  ### 函数`.to_datetime()`的更改'
- en: Previously if `.to_datetime()` encountered mixed integers/floats and strings,
    but no datetimes with `errors='coerce'` it would convert all to `NaT`.
  id: totrans-1017
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，如果`.to_datetime()`遇到混合整数/浮点数和字符串，但没有日期时间且`errors='coerce'`，它会将所有内容转换为`NaT`。
- en: '**Previous behavior**:'
  id: totrans-1018
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**：'
- en: '[PRE191]'
  id: totrans-1019
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: '**Current behavior**:'
  id: totrans-1020
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**：'
- en: This will now convert integers/floats with the default unit of `ns`.
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将整数/浮点数转换为默认单位为`ns`。
- en: '[PRE192]'
  id: totrans-1022
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: 'Bug fixes related to `.to_datetime()`:'
  id: totrans-1023
  prefs: []
  type: TYPE_NORMAL
  zh: 与`.to_datetime()`相关的错误修复：
- en: Bug in `pd.to_datetime()` when passing integers or floats, and no `unit` and
    `errors='coerce'` ([GH 13180](https://github.com/pandas-dev/pandas/issues/13180)).
  id: totrans-1024
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`pd.to_datetime()`在传递整数或浮点数时，没有`unit`和`errors='coerce'`时的错误（[GH 13180](https://github.com/pandas-dev/pandas/issues/13180)）。
- en: Bug in `pd.to_datetime()` when passing invalid data types (e.g. bool); will
    now respect the `errors` keyword ([GH 13176](https://github.com/pandas-dev/pandas/issues/13176))
  id: totrans-1025
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`pd.to_datetime()`在传递无效数据类型（例如布尔值）时的错误；现在将尊重`errors`关键字（[GH 13176](https://github.com/pandas-dev/pandas/issues/13176)）
- en: Bug in `pd.to_datetime()` which overflowed on `int8`, and `int16` dtypes ([GH
    13451](https://github.com/pandas-dev/pandas/issues/13451))
  id: totrans-1026
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`pd.to_datetime()`在`int8`和`int16`数据类型上溢出的错误（[GH 13451](https://github.com/pandas-dev/pandas/issues/13451)）
- en: Bug in `pd.to_datetime()` raise `AttributeError` with `NaN` and the other string
    is not valid when `errors='ignore'` ([GH 12424](https://github.com/pandas-dev/pandas/issues/12424))
  id: totrans-1027
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复了`pd.to_datetime()`在`errors='ignore'`时，`NaN`和另一个字符串无效时引发`AttributeError`的错误（[GH
    12424](https://github.com/pandas-dev/pandas/issues/12424)）
- en: 'Bug in `pd.to_datetime()` did not cast floats correctly when `unit` was specified,
    resulting in truncated datetime ([GH 13834](https://github.com/pandas-dev/pandas/issues/13834))  ###
    Merging changes'
  id: totrans-1028
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.to_datetime()`中的错误，当指定了`unit`时，没有正确地转换浮点数，导致截断的datetime（[GH 13834](https://github.com/pandas-dev/pandas/issues/13834)）  ###
    合并变更'
- en: Merging will now preserve the dtype of the join keys ([GH 8596](https://github.com/pandas-dev/pandas/issues/8596))
  id: totrans-1029
  prefs: []
  type: TYPE_NORMAL
  zh: 合并现在将保留连接键的dtype（[GH 8596](https://github.com/pandas-dev/pandas/issues/8596)）
- en: '[PRE193]'
  id: totrans-1030
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: '**Previous behavior**:'
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE194]'
  id: totrans-1032
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: '**New behavior**:'
  id: totrans-1033
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: We are able to preserve the join keys
  id: totrans-1034
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够保留连接键
- en: '[PRE195]'
  id: totrans-1035
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: Of course if you have missing values that are introduced, then the resulting
    dtype will be upcast, which is unchanged from previous.
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果引入了缺失值，那么结果的dtype将被提升，这与以前的情况相同。
- en: '[PRE196]  ### Method `.describe()` changes'
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE196]  ### 方法`.describe()`变更'
- en: Percentile identifiers in the index of a `.describe()` output will now be rounded
    to the least precision that keeps them distinct ([GH 13104](https://github.com/pandas-dev/pandas/issues/13104))
  id: totrans-1038
  prefs: []
  type: TYPE_NORMAL
  zh: '`.describe()`输出中索引中的百分位数标识符现在将舍入到最少保持它们不同的精度（[GH 13104](https://github.com/pandas-dev/pandas/issues/13104)）'
- en: '[PRE197]'
  id: totrans-1039
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: '**Previous behavior**:'
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: The percentiles were rounded to at most one decimal place, which could raise
    `ValueError` for a data frame if the percentiles were duplicated.
  id: totrans-1041
  prefs: []
  type: TYPE_NORMAL
  zh: 百分位数最多舍入到一位小数，如果数据框中的百分位数重复，则可能引发`ValueError`。
- en: '[PRE198]'
  id: totrans-1042
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: '**New behavior**:'
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE199]'
  id: totrans-1044
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: 'Furthermore:'
  id: totrans-1045
  prefs: []
  type: TYPE_NORMAL
  zh: 此外：
- en: Passing duplicated `percentiles` will now raise a `ValueError`.
  id: totrans-1046
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递重复的`percentiles`现在将引发`ValueError`。
- en: 'Bug in `.describe()` on a DataFrame with a mixed-dtype column index, which
    would previously raise a `TypeError` ([GH 13288](https://github.com/pandas-dev/pandas/issues/13288))  ###
    `Period` changes'
  id: totrans-1047
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在具有混合dtype列索引的DataFrame上的`.describe()`中存在错误，以前会引发`TypeError`（[GH 13288](https://github.com/pandas-dev/pandas/issues/13288)）  ###
    `Period`变更'
- en: The `PeriodIndex` now has `period` dtype
  id: totrans-1048
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`PeriodIndex`现在具有`period` dtype'
- en: '`PeriodIndex` now has its own `period` dtype. The `period` dtype is a pandas
    extension dtype like `category` or the [timezone aware dtype](../user_guide/timeseries.html#timeseries-timezone-series)
    (`datetime64[ns, tz]`) ([GH 13941](https://github.com/pandas-dev/pandas/issues/13941)).
    As a consequence of this change, `PeriodIndex` no longer has an integer dtype:'
  id: totrans-1049
  prefs: []
  type: TYPE_NORMAL
  zh: '`PeriodIndex`现在有自己的`period` dtype。`period` dtype是pandas的扩展dtype，类似于`category`或[时区感知dtype](../user_guide/timeseries.html#timeseries-timezone-series)（`datetime64[ns,
    tz]`）（[GH 13941](https://github.com/pandas-dev/pandas/issues/13941)）。由于这一变化，`PeriodIndex`不再具有整数dtype：'
- en: '**Previous behavior**:'
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE200]'
  id: totrans-1051
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: '**New behavior**:'
  id: totrans-1052
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE201]'
  id: totrans-1053
  prefs: []
  type: TYPE_PRE
  zh: '[PRE201]'
- en: '#### `Period(''NaT'')` now returns `pd.NaT`'
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `Period(''NaT'')`现在返回`pd.NaT`'
- en: Previously, `Period` has its own `Period('NaT')` representation different from
    `pd.NaT`. Now `Period('NaT')` has been changed to return `pd.NaT`. ([GH 12759](https://github.com/pandas-dev/pandas/issues/12759),
    [GH 13582](https://github.com/pandas-dev/pandas/issues/13582))
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，`Period`有自己的`Period('NaT')`表示形式，与`pd.NaT`不同。现在`Period('NaT')`已更改为返回`pd.NaT`。
    （[GH 12759](https://github.com/pandas-dev/pandas/issues/12759)，[GH 13582](https://github.com/pandas-dev/pandas/issues/13582)）
- en: '**Previous behavior**:'
  id: totrans-1056
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE202]'
  id: totrans-1057
  prefs: []
  type: TYPE_PRE
  zh: '[PRE202]'
- en: '**New behavior**:'
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: These result in `pd.NaT` without providing `freq` option.
  id: totrans-1059
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果在不提供`freq`选项的情况下产生`pd.NaT`。
- en: '[PRE203]'
  id: totrans-1060
  prefs: []
  type: TYPE_PRE
  zh: '[PRE203]'
- en: To be compatible with `Period` addition and subtraction, `pd.NaT` now supports
    addition and subtraction with `int`. Previously it raised `ValueError`.
  id: totrans-1061
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与`Period`的加法和减法兼容，`pd.NaT`现在支持与`int`的加法和减法。以前会引发`ValueError`。
- en: '**Previous behavior**:'
  id: totrans-1062
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE204]'
  id: totrans-1063
  prefs: []
  type: TYPE_PRE
  zh: '[PRE204]'
- en: '**New behavior**:'
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE205]'
  id: totrans-1065
  prefs: []
  type: TYPE_PRE
  zh: '[PRE205]'
- en: '`PeriodIndex.values` now returns array of `Period` object'
  id: totrans-1066
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`PeriodIndex.values`现在返回`Period`对象的数组'
- en: '`.values` is changed to return an array of `Period` objects, rather than an
    array of integers ([GH 13988](https://github.com/pandas-dev/pandas/issues/13988)).'
  id: totrans-1067
  prefs: []
  type: TYPE_NORMAL
  zh: '`.values`已更改为返回`Period`对象的数组，而不是整数的数组（[GH 13988](https://github.com/pandas-dev/pandas/issues/13988)）。'
- en: '**Previous behavior**:'
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE206]'
  id: totrans-1069
  prefs: []
  type: TYPE_PRE
  zh: '[PRE206]'
- en: '**New behavior**:'
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE207]  ### Index `+` / `-` no longer used for set operations'
  id: totrans-1071
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE207]  ### 索引`+` / `-`不再用于集合操作'
- en: Addition and subtraction of the base Index type and of DatetimeIndex (not the
    numeric index types) previously performed set operations (set union and difference).
    This behavior was already deprecated since 0.15.0 (in favor using the specific
    `.union()` and `.difference()` methods), and is now disabled. When possible, `+`
    and `-` are now used for element-wise operations, for example for concatenating
    strings or subtracting datetimes ([GH 8227](https://github.com/pandas-dev/pandas/issues/8227),
    [GH 14127](https://github.com/pandas-dev/pandas/issues/14127)).
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: 基本 Index 类型和 DatetimeIndex（而不是数值索引类型）的加法和减法以前执行集合操作（集合并和差）。此行为自 0.15.0 版本起已被弃用（推荐使用特定的
    `.union()` 和 `.difference()` 方法），现已禁用。在可能的情况下，`+` 和 `-` 现在用于逐元素操作，例如连接字符串或减去日期时间
    ([GH 8227](https://github.com/pandas-dev/pandas/issues/8227), [GH 14127](https://github.com/pandas-dev/pandas/issues/14127))。
- en: 'Previous behavior:'
  id: totrans-1073
  prefs: []
  type: TYPE_NORMAL
  zh: '先前行为:'
- en: '[PRE208]'
  id: totrans-1074
  prefs: []
  type: TYPE_PRE
  zh: '[PRE208]'
- en: '**New behavior**: the same operation will now perform element-wise addition:'
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**: 相同操作现在将执行逐元素加法:'
- en: '[PRE209]'
  id: totrans-1076
  prefs: []
  type: TYPE_PRE
  zh: '[PRE209]'
- en: Note that numeric Index objects already performed element-wise operations. For
    example, the behavior of adding two integer Indexes is unchanged. The base `Index`
    is now made consistent with this behavior.
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，数值 Index 对象已执行逐元素操作。例如，添加两个整数索引的行为未更改。基本 `Index` 现在与此行为保持一致。
- en: '[PRE210]'
  id: totrans-1078
  prefs: []
  type: TYPE_PRE
  zh: '[PRE210]'
- en: 'Further, because of this change, it is now possible to subtract two DatetimeIndex
    objects resulting in a TimedeltaIndex:'
  id: totrans-1079
  prefs: []
  type: TYPE_NORMAL
  zh: '此外，由于这一变化，现在可以对两个 DatetimeIndex 对象进行减法运算，结果为 TimedeltaIndex:'
- en: '**Previous behavior**:'
  id: totrans-1080
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE211]'
  id: totrans-1081
  prefs: []
  type: TYPE_PRE
  zh: '[PRE211]'
- en: '**New behavior**:'
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE212]  ### `Index.difference` and `.symmetric_difference` changes'
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE212]  ### `Index.difference` 和 `.symmetric_difference` 更改'
- en: '`Index.difference` and `Index.symmetric_difference` will now, more consistently,
    treat `NaN` values as any other values. ([GH 13514](https://github.com/pandas-dev/pandas/issues/13514))'
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.difference` 和 `Index.symmetric_difference` 现在将更一致地将 `NaN` 值视为任何其他值。([GH
    13514](https://github.com/pandas-dev/pandas/issues/13514))'
- en: '[PRE213]'
  id: totrans-1085
  prefs: []
  type: TYPE_PRE
  zh: '[PRE213]'
- en: '**Previous behavior**:'
  id: totrans-1086
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE214]'
  id: totrans-1087
  prefs: []
  type: TYPE_PRE
  zh: '[PRE214]'
- en: '**New behavior**:'
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE215]  ### `Index.unique` consistently returns `Index`'
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE215]  ### `Index.unique` 一致地返回 `Index`'
- en: '`Index.unique()` now returns unique values as an `Index` of the appropriate
    `dtype`. ([GH 13395](https://github.com/pandas-dev/pandas/issues/13395)). Previously,
    most `Index` classes returned `np.ndarray`, and `DatetimeIndex`, `TimedeltaIndex`
    and `PeriodIndex` returned `Index` to keep metadata like timezone.'
  id: totrans-1090
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.unique()` 现在返回适当 `dtype` 的唯一值作为 `Index`。([GH 13395](https://github.com/pandas-dev/pandas/issues/13395))。以前，大多数
    `Index` 类返回 `np.ndarray`，而 `DatetimeIndex`、`TimedeltaIndex` 和 `PeriodIndex` 返回
    `Index` 以保留元数据，如时区。'
- en: '**Previous behavior**:'
  id: totrans-1091
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE216]'
  id: totrans-1092
  prefs: []
  type: TYPE_PRE
  zh: '[PRE216]'
- en: '**New behavior**:'
  id: totrans-1093
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE217]  ### `MultiIndex` constructors, `groupby` and `set_index` preserve
    categorical dtypes'
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE217]  ### `MultiIndex` 构造函数，`groupby` 和 `set_index` 保留分类 dtype'
- en: '`MultiIndex.from_arrays` and `MultiIndex.from_product` will now preserve categorical
    dtype in `MultiIndex` levels ([GH 13743](https://github.com/pandas-dev/pandas/issues/13743),
    [GH 13854](https://github.com/pandas-dev/pandas/issues/13854)).'
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiIndex.from_arrays` 和 `MultiIndex.from_product` 现在将在 `MultiIndex` 级别中保留分类
    dtype ([GH 13743](https://github.com/pandas-dev/pandas/issues/13743), [GH 13854](https://github.com/pandas-dev/pandas/issues/13854)).'
- en: '[PRE218]'
  id: totrans-1096
  prefs: []
  type: TYPE_PRE
  zh: '[PRE218]'
- en: '**Previous behavior**:'
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE219]'
  id: totrans-1098
  prefs: []
  type: TYPE_PRE
  zh: '[PRE219]'
- en: '**New behavior**: the single level is now a `CategoricalIndex`:'
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**: 单级现在是 `CategoricalIndex`:'
- en: '[PRE220]'
  id: totrans-1100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE220]'
- en: An analogous change has been made to `MultiIndex.from_product`. As a consequence,
    `groupby` and `set_index` also preserve categorical dtypes in indexes
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
  zh: 对 `MultiIndex.from_product` 进行了类似的更改。因此，`groupby` 和 `set_index` 也在索引中保留了分类 dtype
- en: '[PRE221]'
  id: totrans-1102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE221]'
- en: '**Previous behavior**:'
  id: totrans-1103
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE222]'
  id: totrans-1104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE222]'
- en: '**New behavior**:'
  id: totrans-1105
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE223]  ### Function `read_csv` will progressively enumerate chunks'
  id: totrans-1106
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE223]  ### 函数 `read_csv` 将逐步枚举块'
- en: When [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    is called with `chunksize=n` and without specifying an index, each chunk used
    to have an independently generated index from `0` to `n-1`. They are now given
    instead a progressive index, starting from `0` for the first chunk, from `n` for
    the second, and so on, so that, when concatenated, they are identical to the result
    of calling [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") without the `chunksize=` argument ([GH 12185](https://github.com/pandas-dev/pandas/issues/12185)).
  id: totrans-1107
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`chunksize=n`调用[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")，且没有指定索引时，每个块以前都会有独立生成的索引，从`0`到`n-1`。现在，它们被赋予递进的索引，从第一个块开始为`0`，第二个块为`n`，依此类推，以便在连接时与没有`chunksize=`参数调用[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")的结果相同（[GH 12185](https://github.com/pandas-dev/pandas/issues/12185)）。
- en: '[PRE224]'
  id: totrans-1108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE224]'
- en: '**Previous behavior**:'
  id: totrans-1109
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE225]'
  id: totrans-1110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE225]'
- en: '**New behavior**:'
  id: totrans-1111
  prefs: []
  type: TYPE_NORMAL
  zh: '**新的行为**：'
- en: '[PRE226]  ### Sparse changes'
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE226]  ### 稀疏变更'
- en: These changes allow pandas to handle sparse data with more dtypes, and for work
    to make a smoother experience with data handling.
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
  zh: 这些更改使得 pandas 能够处理更多dtype的稀疏数据，并且使数据处理体验更加流畅。
- en: Types `int64` and `bool` support enhancements
  id: totrans-1114
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 类型`int64`和`bool`支持增强
- en: Sparse data structures now gained enhanced support of `int64` and `bool` `dtype`
    ([GH 667](https://github.com/pandas-dev/pandas/issues/667), [GH 13849](https://github.com/pandas-dev/pandas/issues/13849)).
  id: totrans-1115
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在获得了对`int64`和`bool` `dtype`的增强支持（[GH 667](https://github.com/pandas-dev/pandas/issues/667)，[GH
    13849](https://github.com/pandas-dev/pandas/issues/13849)）。
- en: Previously, sparse data were `float64` dtype by default, even if all inputs
    were of `int` or `bool` dtype. You had to specify `dtype` explicitly to create
    sparse data with `int64` dtype. Also, `fill_value` had to be specified explicitly
    because the default was `np.nan` which doesn’t appear in `int64` or `bool` data.
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，稀疏数据默认为`float64` dtype，即使所有输入都是`int`或`bool` dtype。您必须明确指定`dtype`才能创建具有`int64`
    dtype的稀疏数据。此外，必须显式指定`fill_value`，因为默认值为`np.nan`，而`np.nan`不会出现在`int64`或`bool`数据中。
- en: '[PRE227]'
  id: totrans-1117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE227]'
- en: As of v0.19.0, sparse data keeps the input dtype, and uses more appropriate
    `fill_value` defaults (`0` for `int64` dtype, `False` for `bool` dtype).
  id: totrans-1118
  prefs: []
  type: TYPE_NORMAL
  zh: 自v0.19.0起，稀疏数据保留输入的dtype，并使用更合适的`fill_value`默认值（`int64` dtype为`0`，`bool` dtype为`False`）。
- en: '[PRE228]'
  id: totrans-1119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE228]'
- en: See the [docs](../user_guide/sparse.html#sparse-dtype) for more details.
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多详细信息，请参见[文档](../user_guide/sparse.html#sparse-dtype)。
- en: Operators now preserve dtypes
  id: totrans-1121
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 运算符现在会保留dtype
- en: Sparse data structure now can preserve `dtype` after arithmetic ops ([GH 13848](https://github.com/pandas-dev/pandas/issues/13848))
  id: totrans-1122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在在算术操作后可以保留`dtype`（[GH 13848](https://github.com/pandas-dev/pandas/issues/13848)）
- en: '[PRE229]'
  id: totrans-1123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE229]'
- en: Sparse data structure now support `astype` to convert internal `dtype` ([GH
    13900](https://github.com/pandas-dev/pandas/issues/13900))
  id: totrans-1124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在支持`astype`以转换内部的`dtype`（[GH 13900](https://github.com/pandas-dev/pandas/issues/13900)）
- en: '[PRE230]'
  id: totrans-1125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE230]'
- en: '`astype` fails if data contains values which cannot be converted to specified
    `dtype`. Note that the limitation is applied to `fill_value` which default is
    `np.nan`.'
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据包含不能转换为指定`dtype`的值，则`astype`会失败。请注意，此限制适用于默认为`np.nan`的`fill_value`。
- en: '[PRE231]'
  id: totrans-1127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE231]'
- en: Other sparse fixes
  id: totrans-1128
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 其他稀疏修复
- en: Subclassed `SparseDataFrame` and `SparseSeries` now preserve class types when
    slicing or transposing. ([GH 13787](https://github.com/pandas-dev/pandas/issues/13787))
  id: totrans-1129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当切片或转置时，子类化的`SparseDataFrame`和`SparseSeries`现在会保留类类型。 （[GH 13787](https://github.com/pandas-dev/pandas/issues/13787)）
- en: '`SparseArray` with `bool` dtype now supports logical (bool) operators ([GH
    14000](https://github.com/pandas-dev/pandas/issues/14000))'
  id: totrans-1130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray`中的`bool` dtype现在支持逻辑（bool）运算符（[GH 14000](https://github.com/pandas-dev/pandas/issues/14000)）'
- en: Bug in `SparseSeries` with `MultiIndex` `[]` indexing may raise `IndexError`
    ([GH 13144](https://github.com/pandas-dev/pandas/issues/13144))
  id: totrans-1131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用`MultiIndex` `[]`索引的`SparseSeries`中可能会引发`IndexError`错误（[GH 13144](https://github.com/pandas-dev/pandas/issues/13144)）
- en: Bug in `SparseSeries` with `MultiIndex` `[]` indexing result may have normal
    `Index` ([GH 13144](https://github.com/pandas-dev/pandas/issues/13144))
  id: totrans-1132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用`MultiIndex` `[]`索引的`SparseSeries`中可能出现普通`Index`的错误结果（[GH 13144](https://github.com/pandas-dev/pandas/issues/13144)）
- en: Bug in `SparseDataFrame` in which `axis=None` did not default to `axis=0` ([GH
    13048](https://github.com/pandas-dev/pandas/issues/13048))
  id: totrans-1133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFrame`中的错误，其中`axis=None`未默认为`axis=0`（[GH 13048](https://github.com/pandas-dev/pandas/issues/13048)）'
- en: Bug in `SparseSeries` and `SparseDataFrame` creation with `object` dtype may
    raise `TypeError` ([GH 11633](https://github.com/pandas-dev/pandas/issues/11633))
  id: totrans-1134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在包含`object` dtype的`SparseSeries`和`SparseDataFrame`中创建时可能会引发`TypeError`的错误（[GH
    11633](https://github.com/pandas-dev/pandas/issues/11633)）
- en: Bug in `SparseDataFrame` doesn’t respect passed `SparseArray` or `SparseSeries`
    ‘s dtype and `fill_value` ([GH 13866](https://github.com/pandas-dev/pandas/issues/13866))
  id: totrans-1135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFrame` 中的 Bug 不遵循传递的 `SparseArray` 或 `SparseSeries` 的 dtype 和 `fill_value`
    ([GH 13866](https://github.com/pandas-dev/pandas/issues/13866))'
- en: Bug in `SparseArray` and `SparseSeries` don’t apply ufunc to `fill_value` ([GH
    13853](https://github.com/pandas-dev/pandas/issues/13853))
  id: totrans-1136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray` 和 `SparseSeries` 中的 Bug 不对 `fill_value` 应用 ufunc ([GH 13853](https://github.com/pandas-dev/pandas/issues/13853))'
- en: Bug in `SparseSeries.abs` incorrectly keeps negative `fill_value` ([GH 13853](https://github.com/pandas-dev/pandas/issues/13853))
  id: totrans-1137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries.abs` 中的 Bug 不正确地保留了负的 `fill_value` ([GH 13853](https://github.com/pandas-dev/pandas/issues/13853))'
- en: Bug in single row slicing on multi-type `SparseDataFrame` s, types were previously
    forced to float ([GH 13917](https://github.com/pandas-dev/pandas/issues/13917))
  id: totrans-1138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多类型 `SparseDataFrame` 上进行单行切片的 Bug，以前强制类型为浮点数 ([GH 13917](https://github.com/pandas-dev/pandas/issues/13917))
- en: Bug in `SparseSeries` slicing changes integer dtype to float ([GH 8292](https://github.com/pandas-dev/pandas/issues/8292))
  id: totrans-1139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries` 切片中的 Bug 会将整数 dtype 更改为浮点数 ([GH 8292](https://github.com/pandas-dev/pandas/issues/8292))'
- en: Bug in `SparseDataFarme` comparison ops may raise `TypeError` ([GH 13001](https://github.com/pandas-dev/pandas/issues/13001))
  id: totrans-1140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFarme` 中的比较操作 Bug 可能会引发 `TypeError` ([GH 13001](https://github.com/pandas-dev/pandas/issues/13001))'
- en: Bug in `SparseDataFarme.isnull` raises `ValueError` ([GH 8276](https://github.com/pandas-dev/pandas/issues/8276))
  id: totrans-1141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFarme.isnull` 中的 Bug 会引发 `ValueError` ([GH 8276](https://github.com/pandas-dev/pandas/issues/8276))'
- en: Bug in `SparseSeries` representation with `bool` dtype may raise `IndexError`
    ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
  id: totrans-1142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `bool` dtype 的 `SparseSeries` 表示中的 Bug 可能会引发 `IndexError` ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
- en: Bug in `SparseSeries` and `SparseDataFrame` of `bool` or `int64` dtype may display
    its values like `float64` dtype ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
  id: totrans-1143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries` 和 `SparseDataFrame` 中 `bool` 或 `int64` dtype 的 Bug 可能会显示其值，如同
    `float64` dtype 一样 ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))'
- en: Bug in sparse indexing using `SparseArray` with `bool` dtype may return incorrect
    result ([GH 13985](https://github.com/pandas-dev/pandas/issues/13985))
  id: totrans-1144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `SparseArray` 和 `bool` dtype 进行稀疏索引的 Bug 可能返回不正确的结果 ([GH 13985](https://github.com/pandas-dev/pandas/issues/13985))
- en: Bug in `SparseArray` created from `SparseSeries` may lose `dtype` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))
  id: totrans-1145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 `SparseSeries` 创建的 `SparseArray` 中的 Bug 可能会丢失 `dtype` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))
- en: 'Bug in `SparseSeries` comparison with dense returns normal `Series` rather
    than `SparseSeries` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))  ###
    Indexer dtype changes'
  id: totrans-1146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries` 与密集返回正常 `Series` 而不是 `SparseSeries` 的比较中的 Bug ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))  ###
    索引器 dtype 变更'
- en: Note
  id: totrans-1147
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This change only affects 64 bit python running on Windows, and only affects
    relatively advanced indexing operations
  id: totrans-1148
  prefs: []
  type: TYPE_NORMAL
  zh: 此更改仅影响在 Windows 上运行的 64 位 Python，且仅影响相对高级的索引操作。
- en: Methods such as `Index.get_indexer` that return an indexer array, coerce that
    array to a “platform int”, so that it can be directly used in 3rd party library
    operations like `numpy.take`. Previously, a platform int was defined as `np.int_`
    which corresponds to a C integer, but the correct type, and what is being used
    now, is `np.intp`, which corresponds to the C integer size that can hold a pointer
    ([GH 3033](https://github.com/pandas-dev/pandas/issues/3033), [GH 13972](https://github.com/pandas-dev/pandas/issues/13972)).
  id: totrans-1149
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如 `Index.get_indexer` 这样返回索引器数组的方法，会强制将该数组转换为“平台整数”，以便可以直接在第三方库操作中使用，如 `numpy.take`。以前，平台整数被定义为
    `np.int_`，对应于 C 整数，但正确的类型，以及现在使用的类型，是 `np.intp`，对应于可以容纳指针的 C 整数大小 ([GH 3033](https://github.com/pandas-dev/pandas/issues/3033),
    [GH 13972](https://github.com/pandas-dev/pandas/issues/13972)).
- en: These types are the same on many platform, but for 64 bit python on Windows,
    `np.int_` is 32 bits, and `np.intp` is 64 bits. Changing this behavior improves
    performance for many operations on that platform.
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多平台上，这些类型是相同的，但对于在 Windows 上运行的 64 位 Python，`np.int_` 是 32 位，而 `np.intp` 是
    64 位。更改此行为会提高该平台上许多操作的性能。
- en: '**Previous behavior**:'
  id: totrans-1151
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**:'
- en: '[PRE232]'
  id: totrans-1152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE232]'
- en: '**New behavior**:'
  id: totrans-1153
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE233]  ### Other API changes'
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE233]  ### 其他 API 变更'
- en: '`Timestamp.to_pydatetime` will issue a `UserWarning` when `warn=True`, and
    the instance has a non-zero number of nanoseconds, previously this would print
    a message to stdout ([GH 14101](https://github.com/pandas-dev/pandas/issues/14101)).'
  id: totrans-1155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 `warn=True` 时，`Timestamp.to_pydatetime` 将发出 `UserWarning`，且实例具有非零纳秒数，以前会向
    stdout 打印一条消息 ([GH 14101](https://github.com/pandas-dev/pandas/issues/14101)).
- en: '`Series.unique()` with datetime and timezone now returns return array of `Timestamp`
    with timezone ([GH 13565](https://github.com/pandas-dev/pandas/issues/13565)).'
  id: totrans-1156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有日期时间和时区的`Series.unique()`现在返回带时区的`Timestamp`数组 ([GH 13565](https://github.com/pandas-dev/pandas/issues/13565)).
- en: '`Panel.to_sparse()` will raise a `NotImplementedError` exception when called
    ([GH 13778](https://github.com/pandas-dev/pandas/issues/13778)).'
  id: totrans-1157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当调用`Panel.to_sparse()`时将会抛出`NotImplementedError`异常 ([GH 13778](https://github.com/pandas-dev/pandas/issues/13778)).
- en: '`Index.reshape()` will raise a `NotImplementedError` exception when called
    ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882)).'
  id: totrans-1158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当调用`Index.reshape()`时将会抛出`NotImplementedError`异常 ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882)).
- en: '`.filter()` enforces mutual exclusion of the keyword arguments ([GH 12399](https://github.com/pandas-dev/pandas/issues/12399)).'
  id: totrans-1159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.filter()`强制互斥的关键字参数 ([GH 12399](https://github.com/pandas-dev/pandas/issues/12399)).'
- en: '`eval`’s upcasting rules for `float32` types have been updated to be more consistent
    with NumPy’s rules. New behavior will not upcast to `float64` if you multiply
    a pandas `float32` object by a scalar float64 ([GH 12388](https://github.com/pandas-dev/pandas/issues/12388)).'
  id: totrans-1160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eval`的`float32`类型的upcasting规则已更新为与NumPy的规则更一致。 如果您将pandas的`float32`对象乘以标量float64，新行为将不会向上转换为`float64`
    ([GH 12388](https://github.com/pandas-dev/pandas/issues/12388)).'
- en: An `UnsupportedFunctionCall` error is now raised if NumPy ufuncs like `np.mean`
    are called on groupby or resample objects ([GH 12811](https://github.com/pandas-dev/pandas/issues/12811)).
  id: totrans-1161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果在groupby或resample对象上调用NumPy ufuncs如`np.mean`，现在会引发`UnsupportedFunctionCall`错误
    ([GH 12811](https://github.com/pandas-dev/pandas/issues/12811)).
- en: '`__setitem__` will no longer apply a callable rhs as a function instead of
    storing it. Call `where` directly to get the previous behavior ([GH 13299](https://github.com/pandas-dev/pandas/issues/13299)).'
  id: totrans-1162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__setitem__`将不再将可调用的rhs应用为函数而不是存储它。 直接调用`where`以获取以前的行为 ([GH 13299](https://github.com/pandas-dev/pandas/issues/13299)).'
- en: Calls to `.sample()` will respect the random seed set via `numpy.random.seed(n)`
    ([GH 13161](https://github.com/pandas-dev/pandas/issues/13161))
  id: totrans-1163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用`.sample()`将尊重通过`numpy.random.seed(n)`设置的随机种子 ([GH 13161](https://github.com/pandas-dev/pandas/issues/13161))
- en: '`Styler.apply` is now more strict about the outputs your function must return.
    For `axis=0` or `axis=1`, the output shape must be identical. For `axis=None`,
    the output must be a DataFrame with identical columns and index labels ([GH 13222](https://github.com/pandas-dev/pandas/issues/13222)).'
  id: totrans-1164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Styler.apply`现在对您的函数必须返回的输出更严格。 对于`axis=0`或`axis=1`，输出形状必须相同。 对于`axis=None`，输出必须是具有相同列和索引标签的DataFrame
    ([GH 13222](https://github.com/pandas-dev/pandas/issues/13222)).'
- en: '`Float64Index.astype(int)` will now raise `ValueError` if `Float64Index` contains
    `NaN` values ([GH 13149](https://github.com/pandas-dev/pandas/issues/13149))'
  id: totrans-1165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用`Float64Index.astype(int)`现在如果`Float64Index`包含`NaN`值将会抛出`ValueError`异常 ([GH
    13149](https://github.com/pandas-dev/pandas/issues/13149))
- en: '`TimedeltaIndex.astype(int)` and `DatetimeIndex.astype(int)` will now return
    `Int64Index` instead of `np.array` ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
  id: totrans-1166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimedeltaIndex.astype(int)`和`DatetimeIndex.astype(int)`现在将返回`Int64Index`而不是`np.array`
    ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
- en: Passing `Period` with multiple frequencies to normal `Index` now returns `Index`
    with `object` dtype ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
  id: totrans-1167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将多频率的`Period`传递给普通的`Index`现在将返回`object` dtype的`Index` ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
- en: '`PeriodIndex.fillna` with `Period` has different freq now coerces to `object`
    dtype ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))'
  id: totrans-1168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`Period`的`PeriodIndex.fillna`现在会强制转换为`object` dtype ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
- en: Faceted boxplots from `DataFrame.boxplot(by=col)` now return a `Series` when
    `return_type` is not None. Previously these returned an `OrderedDict`. Note that
    when `return_type=None`, the default, these still return a 2-D NumPy array ([GH
    12216](https://github.com/pandas-dev/pandas/issues/12216), [GH 7096](https://github.com/pandas-dev/pandas/issues/7096)).
  id: totrans-1169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`DataFrame.boxplot(by=col)`绘制的分面箱线图现在在`return_type`不为None时返回`Series`。 以前这些返回一个`OrderedDict`。
    请注意，当`return_type=None`时，默认情况下，这些仍然返回一个2-D NumPy数组 ([GH 12216](https://github.com/pandas-dev/pandas/issues/12216),
    [GH 7096](https://github.com/pandas-dev/pandas/issues/7096)).
- en: '`pd.read_hdf` will now raise a `ValueError` instead of `KeyError`, if a mode
    other than `r`, `r+` and `a` is supplied. ([GH 13623](https://github.com/pandas-dev/pandas/issues/13623))'
  id: totrans-1170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_hdf`现在将在提供除`r`，`r+`和`a`之外的模式时引发`ValueError`而不是`KeyError`。 ([GH 13623](https://github.com/pandas-dev/pandas/issues/13623))'
- en: '`pd.read_csv()`, `pd.read_table()`, and `pd.read_hdf()` raise the builtin `FileNotFoundError`
    exception for Python 3.x when called on a nonexistent file; this is back-ported
    as `IOError` in Python 2.x ([GH 14086](https://github.com/pandas-dev/pandas/issues/14086))'
  id: totrans-1171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在不存在的文件上调用`pd.read_csv()`、`pd.read_table()`和`pd.read_hdf()`时，Python 3.x将引发内置的`FileNotFoundError`异常；这在Python
    2.x中回溯为`IOError`（[GH 14086](https://github.com/pandas-dev/pandas/issues/14086)）
- en: More informative exceptions are passed through the csv parser. The exception
    type would now be the original exception type instead of `CParserError` ([GH 13652](https://github.com/pandas-dev/pandas/issues/13652)).
  id: totrans-1172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: csv解析器会传递更多信息的异常。异常类型现在将是原始异常类型，而不是`CParserError`（[GH 13652](https://github.com/pandas-dev/pandas/issues/13652)）。
- en: '`pd.read_csv()` in the C engine will now issue a `ParserWarning` or raise a
    `ValueError` when `sep` encoded is more than one character long ([GH 14065](https://github.com/pandas-dev/pandas/issues/14065))'
  id: totrans-1173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`sep`编码超过一个字符长时，C引擎中的`pd.read_csv()`现在会发出`ParserWarning`或引发`ValueError`（[GH
    14065](https://github.com/pandas-dev/pandas/issues/14065)）
- en: '`DataFrame.values` will now return `float64` with a `DataFrame` of mixed `int64`
    and `uint64` dtypes, conforming to `np.find_common_type` ([GH 10364](https://github.com/pandas-dev/pandas/issues/10364),
    [GH 13917](https://github.com/pandas-dev/pandas/issues/13917))'
  id: totrans-1174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.values`现在将返回`float64`，具有混合`int64`和`uint64` dtypes的`DataFrame`，符合`np.find_common_type`（[GH
    10364](https://github.com/pandas-dev/pandas/issues/10364)、[GH 13917](https://github.com/pandas-dev/pandas/issues/13917)）'
- en: '`.groupby.groups` will now return a dictionary of `Index` objects, rather than
    a dictionary of `np.ndarray` or `lists` ([GH 14293](https://github.com/pandas-dev/pandas/issues/14293))'
  id: totrans-1175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.groupby.groups`现在将返回一个`Index`对象的字典，而不是`np.ndarray`或`lists`的字典（[GH 14293](https://github.com/pandas-dev/pandas/issues/14293)）'
- en: '`Series.tolist()` will now return Python types'
  id: totrans-1176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Series.tolist()`现在将返回Python类型'
- en: '`Series.tolist()` will now return Python types in the output, mimicking NumPy
    `.tolist()` behavior ([GH 10904](https://github.com/pandas-dev/pandas/issues/10904))'
  id: totrans-1177
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.tolist()`现在将以Python类型返回输出，模仿NumPy的`.tolist()`行为（[GH 10904](https://github.com/pandas-dev/pandas/issues/10904)）'
- en: '[PRE234]'
  id: totrans-1178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE234]'
- en: '**Previous behavior**:'
  id: totrans-1179
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**：'
- en: '[PRE235]'
  id: totrans-1180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE235]'
- en: '**New behavior**:'
  id: totrans-1181
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE236]'
  id: totrans-1182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE236]'
- en: '### `Series` operators for different indexes'
  id: totrans-1183
  prefs: []
  type: TYPE_NORMAL
  zh: '### 不同索引的`Series`运算符'
- en: Following `Series` operators have been changed to make all operators consistent,
    including `DataFrame` ([GH 1134](https://github.com/pandas-dev/pandas/issues/1134),
    [GH 4581](https://github.com/pandas-dev/pandas/issues/4581), [GH 13538](https://github.com/pandas-dev/pandas/issues/13538))
  id: totrans-1184
  prefs: []
  type: TYPE_NORMAL
  zh: 以下`Series`运算符已更改为使所有运算符一致，包括`DataFrame`（[GH 1134](https://github.com/pandas-dev/pandas/issues/1134)、[GH
    4581](https://github.com/pandas-dev/pandas/issues/4581)、[GH 13538](https://github.com/pandas-dev/pandas/issues/13538)）
- en: '`Series` comparison operators now raise `ValueError` when `index` are different.'
  id: totrans-1185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`index`不同时，`Series`比较运算符现在会引发`ValueError`。
- en: '`Series` logical operators align both `index` of left and right hand side.'
  id: totrans-1186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series`逻辑运算符会对齐左右两侧的`index`。'
- en: Warning
  id: totrans-1187
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Until 0.18.1, comparing `Series` with the same length, would succeed even if
    the `.index` are different (the result ignores `.index`). As of 0.19.0, this will
    raises `ValueError` to be more strict. This section also describes how to keep
    previous behavior or align different indexes, using the flexible comparison methods
    like `.eq`.
  id: totrans-1188
  prefs: []
  type: TYPE_NORMAL
  zh: 在0.18.1之前，比较具有相同长度的`Series`，即使`.index`不同，也会成功（结果忽略`.index`）。从0.19.0开始，这将引发`ValueError`以更加严格。本节还描述了如何保持先前的行为或对齐不同的索引，使用灵活的比较方法，如`.eq`。
- en: 'As a result, `Series` and `DataFrame` operators behave as below:'
  id: totrans-1189
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`Series`和`DataFrame`运算符的行为如下：
- en: Arithmetic operators
  id: totrans-1190
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 算术运算符
- en: Arithmetic operators align both `index` (no changes).
  id: totrans-1191
  prefs: []
  type: TYPE_NORMAL
  zh: 算术运算符会对齐`index`（没有变化）。
- en: '[PRE237]'
  id: totrans-1192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE237]'
- en: Comparison operators
  id: totrans-1193
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 比较运算符
- en: Comparison operators raise `ValueError` when `.index` are different.
  id: totrans-1194
  prefs: []
  type: TYPE_NORMAL
  zh: 当`.index`不同时，比较运算符会引发`ValueError`。
- en: '**Previous behavior** (`Series`):'
  id: totrans-1195
  prefs: []
  type: TYPE_NORMAL
  zh: '**以前的行为**（`Series`）:'
- en: '`Series` compared values ignoring the `.index` as long as both had the same
    length:'
  id: totrans-1196
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`比较值时会忽略`.index`，只要两者长度相同：'
- en: '[PRE238]'
  id: totrans-1197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE238]'
- en: '**New behavior** (`Series`):'
  id: totrans-1198
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**（`Series`）：'
- en: '[PRE239]'
  id: totrans-1199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE239]'
- en: Note
  id: totrans-1200
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: To achieve the same result as previous versions (compare values based on locations
    ignoring `.index`), compare both `.values`.
  id: totrans-1201
  prefs: []
  type: TYPE_NORMAL
  zh: 要达到与以前版本相同的结果（根据位置比较值而忽略`.index`），请同时比较`.values`。
- en: '[PRE240]'
  id: totrans-1202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE240]'
- en: 'If you want to compare `Series` aligning its `.index`, see flexible comparison
    methods section below:'
  id: totrans-1203
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想比较`Series`并对齐其`.index`，请参见下面的灵活比较方法部分：
- en: '[PRE241]'
  id: totrans-1204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE241]'
- en: '**Current behavior** (`DataFrame`, no change):'
  id: totrans-1205
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**（`DataFrame`，无变化）：'
- en: '[PRE242]'
  id: totrans-1206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE242]'
- en: Logical operators
  id: totrans-1207
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 逻辑运算符
- en: Logical operators align both `.index` of left and right hand side.
  id: totrans-1208
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑运算符会对齐左右两侧的`.index`。
- en: '**Previous behavior** (`Series`), only left hand side `index` was kept:'
  id: totrans-1209
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**（`Series`），仅保留左侧`index`：'
- en: '[PRE243]'
  id: totrans-1210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE243]'
- en: '**New behavior** (`Series`):'
  id: totrans-1211
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**（`Series`）：'
- en: '[PRE244]'
  id: totrans-1212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE244]'
- en: Note
  id: totrans-1213
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`Series` logical operators fill a `NaN` result with `False`.'
  id: totrans-1214
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`的逻辑运算符会用`False`填充`NaN`结果。'
- en: Note
  id: totrans-1215
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'To achieve the same result as previous versions (compare values based on only
    left hand side index), you can use `reindex_like`:'
  id: totrans-1216
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现与先前版本相同的结果（仅基于左侧`index`比较值），可以使用`reindex_like`：
- en: '[PRE245]'
  id: totrans-1217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE245]'
- en: '**Current behavior** (`DataFrame`, no change):'
  id: totrans-1218
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**（`DataFrame`，无变化）：'
- en: '[PRE246]'
  id: totrans-1219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE246]'
- en: Flexible comparison methods
  id: totrans-1220
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 灵活比较方法
- en: '`Series` flexible comparison methods like `eq`, `ne`, `le`, `lt`, `ge` and
    `gt` now align both `index`. Use these operators if you want to compare two `Series`
    which has the different `index`.'
  id: totrans-1221
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`的灵活比较方法如`eq`、`ne`、`le`、`lt`、`ge`和`gt`现在会对齐两个`index`。如果要比较具有不同`index`的两个`Series`，请使用这些运算符。'
- en: '[PRE247]'
  id: totrans-1222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE247]'
- en: Previously, this worked the same as comparison operators (see above).
  id: totrans-1223
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，这与比较运算符的工作方式相同（见上文）。
- en: Arithmetic operators
  id: totrans-1224
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 算术运算符
- en: Arithmetic operators align both `index` (no changes).
  id: totrans-1225
  prefs: []
  type: TYPE_NORMAL
  zh: 算术运算符会对齐两个`index`（无变化）。
- en: '[PRE248]'
  id: totrans-1226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE248]'
- en: Comparison operators
  id: totrans-1227
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 比较运算符
- en: Comparison operators raise `ValueError` when `.index` are different.
  id: totrans-1228
  prefs: []
  type: TYPE_NORMAL
  zh: 当`.index`不同时，比较运算符会引发`ValueError`。
- en: '**Previous behavior** (`Series`):'
  id: totrans-1229
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**（`Series`）：'
- en: '`Series` compared values ignoring the `.index` as long as both had the same
    length:'
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`比较值时会忽略`.index`，只要两者长度相同：'
- en: '[PRE249]'
  id: totrans-1231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE249]'
- en: '**New behavior** (`Series`):'
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**（`Series`）：'
- en: '[PRE250]'
  id: totrans-1233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE250]'
- en: Note
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To achieve the same result as previous versions (compare values based on locations
    ignoring `.index`), compare both `.values`.
  id: totrans-1235
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现与先前版本相同的结果（基于位置比较值，忽略`.index`），请比较`.values`。
- en: '[PRE251]'
  id: totrans-1236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE251]'
- en: 'If you want to compare `Series` aligning its `.index`, see flexible comparison
    methods section below:'
  id: totrans-1237
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要比较对齐其`.index`的`Series`，请参见下面的灵活比较方法部分：
- en: '[PRE252]'
  id: totrans-1238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE252]'
- en: '**Current behavior** (`DataFrame`, no change):'
  id: totrans-1239
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**（`DataFrame`，无变化）：'
- en: '[PRE253]'
  id: totrans-1240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE253]'
- en: Logical operators
  id: totrans-1241
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 逻辑运算符
- en: Logical operators align both `.index` of left and right hand side.
  id: totrans-1242
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑运算符会对齐左右两侧的`.index`。
- en: '**Previous behavior** (`Series`), only left hand side `index` was kept:'
  id: totrans-1243
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**（`Series`），仅保留左侧`index`：'
- en: '[PRE254]'
  id: totrans-1244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE254]'
- en: '**New behavior** (`Series`):'
  id: totrans-1245
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**（`Series`）：'
- en: '[PRE255]'
  id: totrans-1246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE255]'
- en: Note
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`Series` logical operators fill a `NaN` result with `False`.'
  id: totrans-1248
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`的逻辑运算符会用`False`填充`NaN`结果。'
- en: Note
  id: totrans-1249
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'To achieve the same result as previous versions (compare values based on only
    left hand side index), you can use `reindex_like`:'
  id: totrans-1250
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现与先前版本相同的结果（仅基于左侧`index`比较值），可以使用`reindex_like`：
- en: '[PRE256]'
  id: totrans-1251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE256]'
- en: '**Current behavior** (`DataFrame`, no change):'
  id: totrans-1252
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**（`DataFrame`，无变化）：'
- en: '[PRE257]'
  id: totrans-1253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE257]'
- en: Flexible comparison methods
  id: totrans-1254
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 灵活比较方法
- en: '`Series` flexible comparison methods like `eq`, `ne`, `le`, `lt`, `ge` and
    `gt` now align both `index`. Use these operators if you want to compare two `Series`
    which has the different `index`.'
  id: totrans-1255
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`的灵活比较方法如`eq`、`ne`、`le`、`lt`、`ge`和`gt`现在会对齐两个`index`。如果要比较具有不同`index`的两个`Series`，请使用这些运算符。'
- en: '[PRE258]'
  id: totrans-1256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE258]'
- en: Previously, this worked the same as comparison operators (see above).
  id: totrans-1257
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，这与比较运算符的工作方式相同（见上文）。
- en: '### `Series` type promotion on assignment'
  id: totrans-1258
  prefs: []
  type: TYPE_NORMAL
  zh: '### 赋值时`Series`类型提升'
- en: A `Series` will now correctly promote its dtype for assignment with incompat
    values to the current dtype ([GH 13234](https://github.com/pandas-dev/pandas/issues/13234))
  id: totrans-1259
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`现在会正确提升其dtype，以便将不兼容值分配给当前dtype（[GH 13234](https://github.com/pandas-dev/pandas/issues/13234)）'
- en: '[PRE259]'
  id: totrans-1260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE259]'
- en: '**Previous behavior**:'
  id: totrans-1261
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**：'
- en: '[PRE260]'
  id: totrans-1262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE260]'
- en: '**New behavior**:'
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE261]'
  id: totrans-1264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE261]'
- en: '### Function `.to_datetime()` changes'
  id: totrans-1265
  prefs: []
  type: TYPE_NORMAL
  zh: '### 函数`.to_datetime()`的更改'
- en: Previously if `.to_datetime()` encountered mixed integers/floats and strings,
    but no datetimes with `errors='coerce'` it would convert all to `NaT`.
  id: totrans-1266
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，如果`.to_datetime()`遇到混合整数/浮点数和字符串，但没有日期时间且`errors='coerce'`，它会将所有内容转换为`NaT`。
- en: '**Previous behavior**:'
  id: totrans-1267
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前行为**：'
- en: '[PRE262]'
  id: totrans-1268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE262]'
- en: '**Current behavior**:'
  id: totrans-1269
  prefs: []
  type: TYPE_NORMAL
  zh: '**当前行为**：'
- en: This will now convert integers/floats with the default unit of `ns`.
  id: totrans-1270
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将整数/浮点数转换为默认单位为`ns`。
- en: '[PRE263]'
  id: totrans-1271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE263]'
- en: 'Bug fixes related to `.to_datetime()`:'
  id: totrans-1272
  prefs: []
  type: TYPE_NORMAL
  zh: 与`.to_datetime()`相关的错误修复：
- en: Bug in `pd.to_datetime()` when passing integers or floats, and no `unit` and
    `errors='coerce'` ([GH 13180](https://github.com/pandas-dev/pandas/issues/13180)).
  id: totrans-1273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传递整数或浮点数时，且没有`unit`和`errors='coerce'`时，`pd.to_datetime()`存在错误（[GH 13180](https://github.com/pandas-dev/pandas/issues/13180)）。
- en: Bug in `pd.to_datetime()` when passing invalid data types (e.g. bool); will
    now respect the `errors` keyword ([GH 13176](https://github.com/pandas-dev/pandas/issues/13176))
  id: totrans-1274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在传递无效数据类型（例如布尔值）时，`pd.to_datetime()`存在错误；现在将尊重`errors`关键字（[GH 13176](https://github.com/pandas-dev/pandas/issues/13176)）
- en: Bug in `pd.to_datetime()` which overflowed on `int8`, and `int16` dtypes ([GH
    13451](https://github.com/pandas-dev/pandas/issues/13451))
  id: totrans-1275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.to_datetime()`中的错误，在`int8`和`int16`数据类型上溢出 ([GH 13451](https://github.com/pandas-dev/pandas/issues/13451))'
- en: Bug in `pd.to_datetime()` raise `AttributeError` with `NaN` and the other string
    is not valid when `errors='ignore'` ([GH 12424](https://github.com/pandas-dev/pandas/issues/12424))
  id: totrans-1276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`errors='ignore'`时，`pd.to_datetime()`中的错误会引发`AttributeError`，并且另一个字符串无效 ([GH
    12424](https://github.com/pandas-dev/pandas/issues/12424))
- en: Bug in `pd.to_datetime()` did not cast floats correctly when `unit` was specified,
    resulting in truncated datetime ([GH 13834](https://github.com/pandas-dev/pandas/issues/13834))
  id: totrans-1277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在指定`unit`时，`pd.to_datetime()`中的错误未正确转换浮点数，导致截断的日期时间 ([GH 13834](https://github.com/pandas-dev/pandas/issues/13834))
- en: '### Merging changes'
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
  zh: '### 合并更改'
- en: Merging will now preserve the dtype of the join keys ([GH 8596](https://github.com/pandas-dev/pandas/issues/8596))
  id: totrans-1279
  prefs: []
  type: TYPE_NORMAL
  zh: 合并现在将保留连接键的数据类型 ([GH 8596](https://github.com/pandas-dev/pandas/issues/8596))
- en: '[PRE264]'
  id: totrans-1280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE264]'
- en: '**Previous behavior**:'
  id: totrans-1281
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE265]'
  id: totrans-1282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE265]'
- en: '**New behavior**:'
  id: totrans-1283
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: We are able to preserve the join keys
  id: totrans-1284
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够保留连接键
- en: '[PRE266]'
  id: totrans-1285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE266]'
- en: Of course if you have missing values that are introduced, then the resulting
    dtype will be upcast, which is unchanged from previous.
  id: totrans-1286
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果引入了缺失值，那么结果的数据类型将被提升，这与以前的情况相同。
- en: '[PRE267]'
  id: totrans-1287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE267]'
- en: '### Method `.describe()` changes'
  id: totrans-1288
  prefs: []
  type: TYPE_NORMAL
  zh: '### 方法`.describe()`的更改'
- en: Percentile identifiers in the index of a `.describe()` output will now be rounded
    to the least precision that keeps them distinct ([GH 13104](https://github.com/pandas-dev/pandas/issues/13104))
  id: totrans-1289
  prefs: []
  type: TYPE_NORMAL
  zh: '`.describe()`输出中的百分位标识现在会四舍五入到保持它们不同的最小精度 ([GH 13104](https://github.com/pandas-dev/pandas/issues/13104))'
- en: '[PRE268]'
  id: totrans-1290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE268]'
- en: '**Previous behavior**:'
  id: totrans-1291
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: The percentiles were rounded to at most one decimal place, which could raise
    `ValueError` for a data frame if the percentiles were duplicated.
  id: totrans-1292
  prefs: []
  type: TYPE_NORMAL
  zh: 百分位数最多四舍五入到小数点后一位，如果数据框中的百分位数重复，可能会引发`ValueError`。
- en: '[PRE269]'
  id: totrans-1293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE269]'
- en: '**New behavior**:'
  id: totrans-1294
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE270]'
  id: totrans-1295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE270]'
- en: 'Furthermore:'
  id: totrans-1296
  prefs: []
  type: TYPE_NORMAL
  zh: '此外:'
- en: Passing duplicated `percentiles` will now raise a `ValueError`.
  id: totrans-1297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递重复的`percentiles`现在会引发`ValueError`。
- en: Bug in `.describe()` on a DataFrame with a mixed-dtype column index, which would
    previously raise a `TypeError` ([GH 13288](https://github.com/pandas-dev/pandas/issues/13288))
  id: totrans-1298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有混合数据类型列索引的DataFrame上调用`.describe()`时出现的错误，之前会引发`TypeError` ([GH 13288](https://github.com/pandas-dev/pandas/issues/13288))
- en: '### `Period` changes'
  id: totrans-1299
  prefs: []
  type: TYPE_NORMAL
  zh: '### `Period`更改'
- en: The `PeriodIndex` now has `period` dtype
  id: totrans-1300
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`PeriodIndex`现在具有`period`数据类型'
- en: '`PeriodIndex` now has its own `period` dtype. The `period` dtype is a pandas
    extension dtype like `category` or the [timezone aware dtype](../user_guide/timeseries.html#timeseries-timezone-series)
    (`datetime64[ns, tz]`) ([GH 13941](https://github.com/pandas-dev/pandas/issues/13941)).
    As a consequence of this change, `PeriodIndex` no longer has an integer dtype:'
  id: totrans-1301
  prefs: []
  type: TYPE_NORMAL
  zh: '`PeriodIndex`现在具有自己的`period`数据类型。`period`数据类型是一种类似于`category`或[时区感知数据类型](../user_guide/timeseries.html#timeseries-timezone-series)
    (`datetime64[ns, tz]`) 的pandas扩展数据类型 ([GH 13941](https://github.com/pandas-dev/pandas/issues/13941))。由于这个改变，`PeriodIndex`不再具有整数数据类型：'
- en: '**Previous behavior**:'
  id: totrans-1302
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE271]'
  id: totrans-1303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE271]'
- en: '**New behavior**:'
  id: totrans-1304
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE272]'
  id: totrans-1305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE272]'
- en: '#### `Period(''NaT'')` now returns `pd.NaT`'
  id: totrans-1306
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `Period(''NaT'')`现在返回`pd.NaT`'
- en: Previously, `Period` has its own `Period('NaT')` representation different from
    `pd.NaT`. Now `Period('NaT')` has been changed to return `pd.NaT`. ([GH 12759](https://github.com/pandas-dev/pandas/issues/12759),
    [GH 13582](https://github.com/pandas-dev/pandas/issues/13582))
  id: totrans-1307
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，`Period`具有与`pd.NaT`不同的`Period('NaT')`��示。现在`Period('NaT')`已更改为返回`pd.NaT`。
    ([GH 12759](https://github.com/pandas-dev/pandas/issues/12759), [GH 13582](https://github.com/pandas-dev/pandas/issues/13582))
- en: '**Previous behavior**:'
  id: totrans-1308
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE273]'
  id: totrans-1309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE273]'
- en: '**New behavior**:'
  id: totrans-1310
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: These result in `pd.NaT` without providing `freq` option.
  id: totrans-1311
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果中提供`freq`选项时会得到`pd.NaT`。
- en: '[PRE274]'
  id: totrans-1312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE274]'
- en: To be compatible with `Period` addition and subtraction, `pd.NaT` now supports
    addition and subtraction with `int`. Previously it raised `ValueError`.
  id: totrans-1313
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与`Period`的加法和减法兼容，`pd.NaT`现在支持与`int`的加法和减法。之前会引发`ValueError`。
- en: '**Previous behavior**:'
  id: totrans-1314
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE275]'
  id: totrans-1315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE275]'
- en: '**New behavior**:'
  id: totrans-1316
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE276]'
  id: totrans-1317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE276]'
- en: '`PeriodIndex.values` now returns array of `Period` object'
  id: totrans-1318
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`PeriodIndex.values`现在返回`Period`对象的数组'
- en: '`.values` is changed to return an array of `Period` objects, rather than an
    array of integers ([GH 13988](https://github.com/pandas-dev/pandas/issues/13988)).'
  id: totrans-1319
  prefs: []
  type: TYPE_NORMAL
  zh: '`.values`现在返回一个`Period`对象的数组，而不是整数的数组 ([GH 13988](https://github.com/pandas-dev/pandas/issues/13988)).'
- en: '**Previous behavior**:'
  id: totrans-1320
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**:'
- en: '[PRE277]'
  id: totrans-1321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE277]'
- en: '**New behavior**:'
  id: totrans-1322
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**:'
- en: '[PRE278]'
  id: totrans-1323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE278]'
- en: The `PeriodIndex` now has `period` dtype
  id: totrans-1324
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`PeriodIndex`现在具有`period`数据类型'
- en: '`PeriodIndex` now has its own `period` dtype. The `period` dtype is a pandas
    extension dtype like `category` or the [timezone aware dtype](../user_guide/timeseries.html#timeseries-timezone-series)
    (`datetime64[ns, tz]`) ([GH 13941](https://github.com/pandas-dev/pandas/issues/13941)).
    As a consequence of this change, `PeriodIndex` no longer has an integer dtype:'
  id: totrans-1325
  prefs: []
  type: TYPE_NORMAL
  zh: '`PeriodIndex` 现在具有自己的 `period` dtype。`period` dtype 是一个类似于 `category` 或 [时区感知
    dtype](../user_guide/timeseries.html#timeseries-timezone-series) (`datetime64[ns,
    tz]`) 的 pandas 扩展 dtype。由于这个改变，`PeriodIndex` 不再具有整数 dtype。'
- en: '**Previous behavior**:'
  id: totrans-1326
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**：'
- en: '[PRE279]'
  id: totrans-1327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE279]'
- en: '**New behavior**:'
  id: totrans-1328
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE280]'
  id: totrans-1329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE280]'
- en: '#### `Period(''NaT'')` now returns `pd.NaT`'
  id: totrans-1330
  prefs: []
  type: TYPE_NORMAL
  zh: '#### `Period(''NaT'')` 现在返回 `pd.NaT`'
- en: Previously, `Period` has its own `Period('NaT')` representation different from
    `pd.NaT`. Now `Period('NaT')` has been changed to return `pd.NaT`. ([GH 12759](https://github.com/pandas-dev/pandas/issues/12759),
    [GH 13582](https://github.com/pandas-dev/pandas/issues/13582))
  id: totrans-1331
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，`Period` 具有自己的 `Period('NaT')` 表示，不同于 `pd.NaT`。现在，`Period('NaT')` 已经更改为返回
    `pd.NaT`。
- en: '**Previous behavior**:'
  id: totrans-1332
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**：'
- en: '[PRE281]'
  id: totrans-1333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE281]'
- en: '**New behavior**:'
  id: totrans-1334
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: These result in `pd.NaT` without providing `freq` option.
  id: totrans-1335
  prefs: []
  type: TYPE_NORMAL
  zh: 这些会在不提供 `freq` 选项的情况下产生 `pd.NaT`。
- en: '[PRE282]'
  id: totrans-1336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE282]'
- en: To be compatible with `Period` addition and subtraction, `pd.NaT` now supports
    addition and subtraction with `int`. Previously it raised `ValueError`.
  id: totrans-1337
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与 `Period` 的加法和减法兼容，`pd.NaT` 现在支持与 `int` 的加法和减法。以前会引发 `ValueError`。
- en: '**Previous behavior**:'
  id: totrans-1338
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**：'
- en: '[PRE283]'
  id: totrans-1339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE283]'
- en: '**New behavior**:'
  id: totrans-1340
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE284]'
  id: totrans-1341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE284]'
- en: '`PeriodIndex.values` now returns array of `Period` object'
  id: totrans-1342
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`PeriodIndex.values` 现在返回 `Period` 对象的数组。'
- en: '`.values` is changed to return an array of `Period` objects, rather than an
    array of integers ([GH 13988](https://github.com/pandas-dev/pandas/issues/13988)).'
  id: totrans-1343
  prefs: []
  type: TYPE_NORMAL
  zh: '`.values` 被更改为返回 `Period` 对象的数组，而不是整数数组。'
- en: '**Previous behavior**:'
  id: totrans-1344
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**：'
- en: '[PRE285]'
  id: totrans-1345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE285]'
- en: '**New behavior**:'
  id: totrans-1346
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE286]'
  id: totrans-1347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE286]'
- en: '### Index `+` / `-` no longer used for set operations'
  id: totrans-1348
  prefs: []
  type: TYPE_NORMAL
  zh: '### Index `+` / `-` 不再用于集合操作'
- en: Addition and subtraction of the base Index type and of DatetimeIndex (not the
    numeric index types) previously performed set operations (set union and difference).
    This behavior was already deprecated since 0.15.0 (in favor using the specific
    `.union()` and `.difference()` methods), and is now disabled. When possible, `+`
    and `-` are now used for element-wise operations, for example for concatenating
    strings or subtracting datetimes ([GH 8227](https://github.com/pandas-dev/pandas/issues/8227),
    [GH 14127](https://github.com/pandas-dev/pandas/issues/14127)).
  id: totrans-1349
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的基本 Index 类型和 DatetimeIndex (而不是数值索引类型) 的加法和减法已经执行了集合操作 (集合并和差)。这个行为从 0.15.0
    开始已经被弃用 (而使用特定的 `.union()` 和 `.difference()` 方法)，现在已被禁用。现在尽可能使用 `+` 和 `-` 进行逐元素操作，例如连接字符串或减去日期时间。
- en: 'Previous behavior:'
  id: totrans-1350
  prefs: []
  type: TYPE_NORMAL
  zh: 先前的行为：
- en: '[PRE287]'
  id: totrans-1351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE287]'
- en: '**New behavior**: the same operation will now perform element-wise addition:'
  id: totrans-1352
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：相同的操作现在将执行逐元素加法：'
- en: '[PRE288]'
  id: totrans-1353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE288]'
- en: Note that numeric Index objects already performed element-wise operations. For
    example, the behavior of adding two integer Indexes is unchanged. The base `Index`
    is now made consistent with this behavior.
  id: totrans-1354
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，数字索引对象已经执行了逐元素操作。例如，添加两个整数索引的行为不变。现在，基本的 `Index` 已经与此行为保持一致。
- en: '[PRE289]'
  id: totrans-1355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE289]'
- en: 'Further, because of this change, it is now possible to subtract two DatetimeIndex
    objects resulting in a TimedeltaIndex:'
  id: totrans-1356
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于这个改变，现在可以减去两个 DatetimeIndex 对象，得到一个 TimedeltaIndex：
- en: '**Previous behavior**:'
  id: totrans-1357
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**：'
- en: '[PRE290]'
  id: totrans-1358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE290]'
- en: '**New behavior**:'
  id: totrans-1359
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE291]'
  id: totrans-1360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE291]'
- en: '### `Index.difference` and `.symmetric_difference` changes'
  id: totrans-1361
  prefs: []
  type: TYPE_NORMAL
  zh: '### `Index.difference` 和 `.symmetric_difference` 的更改'
- en: '`Index.difference` and `Index.symmetric_difference` will now, more consistently,
    treat `NaN` values as any other values. ([GH 13514](https://github.com/pandas-dev/pandas/issues/13514))'
  id: totrans-1362
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.difference` 和 `Index.symmetric_difference` 现在会更一致地将 `NaN` 值视为任何其他值。'
- en: '[PRE292]'
  id: totrans-1363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE292]'
- en: '**Previous behavior**:'
  id: totrans-1364
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**：'
- en: '[PRE293]'
  id: totrans-1365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE293]'
- en: '**New behavior**:'
  id: totrans-1366
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE294]'
  id: totrans-1367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE294]'
- en: '### `Index.unique` consistently returns `Index`'
  id: totrans-1368
  prefs: []
  type: TYPE_NORMAL
  zh: '### `Index.unique` 一致地返回 `Index`'
- en: '`Index.unique()` now returns unique values as an `Index` of the appropriate
    `dtype`. ([GH 13395](https://github.com/pandas-dev/pandas/issues/13395)). Previously,
    most `Index` classes returned `np.ndarray`, and `DatetimeIndex`, `TimedeltaIndex`
    and `PeriodIndex` returned `Index` to keep metadata like timezone.'
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
  zh: '`Index.unique()` 现在将唯一值作为适当 `dtype` 的 `Index` 返回。先前，大多数 `Index` 类返回 `np.ndarray`，而
    `DatetimeIndex`、`TimedeltaIndex` 和 `PeriodIndex` 返回 `Index` 以保留元数据如时区。'
- en: '**Previous behavior**:'
  id: totrans-1370
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE295]'
  id: totrans-1371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE295]'
- en: '**New behavior**:'
  id: totrans-1372
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE296]'
  id: totrans-1373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE296]'
- en: '### `MultiIndex` constructors, `groupby` and `set_index` preserve categorical
    dtypes'
  id: totrans-1374
  prefs: []
  type: TYPE_NORMAL
  zh: '### `MultiIndex` 构造函数、`groupby` 和 `set_index` 保留分类dtype'
- en: '`MultiIndex.from_arrays` and `MultiIndex.from_product` will now preserve categorical
    dtype in `MultiIndex` levels ([GH 13743](https://github.com/pandas-dev/pandas/issues/13743),
    [GH 13854](https://github.com/pandas-dev/pandas/issues/13854)).'
  id: totrans-1375
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiIndex.from_arrays` 和 `MultiIndex.from_product` 现在将在`MultiIndex`级别中保留分类dtype（[GH
    13743](https://github.com/pandas-dev/pandas/issues/13743)，[GH 13854](https://github.com/pandas-dev/pandas/issues/13854)）。'
- en: '[PRE297]'
  id: totrans-1376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE297]'
- en: '**Previous behavior**:'
  id: totrans-1377
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE298]'
  id: totrans-1378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE298]'
- en: '**New behavior**: the single level is now a `CategoricalIndex`:'
  id: totrans-1379
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：单个级别现在是一个`CategoricalIndex`：'
- en: '[PRE299]'
  id: totrans-1380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE299]'
- en: An analogous change has been made to `MultiIndex.from_product`. As a consequence,
    `groupby` and `set_index` also preserve categorical dtypes in indexes
  id: totrans-1381
  prefs: []
  type: TYPE_NORMAL
  zh: '`MultiIndex.from_product`也进行了类似的更改。因此，`groupby` 和 `set_index` 也在索引中保留了分类dtypes'
- en: '[PRE300]'
  id: totrans-1382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE300]'
- en: '**Previous behavior**:'
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE301]'
  id: totrans-1384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE301]'
- en: '**New behavior**:'
  id: totrans-1385
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE302]'
  id: totrans-1386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE302]'
- en: '### Function `read_csv` will progressively enumerate chunks'
  id: totrans-1387
  prefs: []
  type: TYPE_NORMAL
  zh: '### 函数`read_csv`将逐步枚举块'
- en: When [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    is called with `chunksize=n` and without specifying an index, each chunk used
    to have an independently generated index from `0` to `n-1`. They are now given
    instead a progressive index, starting from `0` for the first chunk, from `n` for
    the second, and so on, so that, when concatenated, they are identical to the result
    of calling [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") without the `chunksize=` argument ([GH 12185](https://github.com/pandas-dev/pandas/issues/12185)).
  id: totrans-1388
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`chunksize=n`调用[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")并且没有指定索引时，每个块过去都有一个独立生成的索引，从`0`到`n-1`。现在，它们被赋予一个逐渐增加的索引，从第一个块的`0`开始，从第二个块的`n`开始，依此类推，以便在连接时与没有`chunksize=`参数调用[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")的结果相同（[GH 12185](https://github.com/pandas-dev/pandas/issues/12185)）。
- en: '[PRE303]'
  id: totrans-1389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE303]'
- en: '**Previous behavior**:'
  id: totrans-1390
  prefs: []
  type: TYPE_NORMAL
  zh: '**之前的行为**：'
- en: '[PRE304]'
  id: totrans-1391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE304]'
- en: '**New behavior**:'
  id: totrans-1392
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE305]'
  id: totrans-1393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE305]'
- en: '### Sparse changes'
  id: totrans-1394
  prefs: []
  type: TYPE_NORMAL
  zh: '### 稀疏变更'
- en: These changes allow pandas to handle sparse data with more dtypes, and for work
    to make a smoother experience with data handling.
  id: totrans-1395
  prefs: []
  type: TYPE_NORMAL
  zh: 这些变化允许pandas处理更多dtypes的稀疏数据，并使数据处理体验更加顺畅。
- en: Types `int64` and `bool` support enhancements
  id: totrans-1396
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 类型`int64`和`bool`支持增强
- en: Sparse data structures now gained enhanced support of `int64` and `bool` `dtype`
    ([GH 667](https://github.com/pandas-dev/pandas/issues/667), [GH 13849](https://github.com/pandas-dev/pandas/issues/13849)).
  id: totrans-1397
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在增强支持`int64`和`bool` `dtype`（[GH 667](https://github.com/pandas-dev/pandas/issues/667)，[GH
    13849](https://github.com/pandas-dev/pandas/issues/13849)）。
- en: Previously, sparse data were `float64` dtype by default, even if all inputs
    were of `int` or `bool` dtype. You had to specify `dtype` explicitly to create
    sparse data with `int64` dtype. Also, `fill_value` had to be specified explicitly
    because the default was `np.nan` which doesn’t appear in `int64` or `bool` data.
  id: totrans-1398
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，稀疏数据默认情况下为`float64` `dtype`，即使所有输入都是`int`或`bool` `dtype`。您必须显式指定`dtype`才能创建具有`int64`
    `dtype`的稀疏数据。此外，必须显式指定`fill_value`，因为默认值为`np.nan`，而`np.nan`不会出现在`int64`或`bool`数据中。
- en: '[PRE306]'
  id: totrans-1399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE306]'
- en: As of v0.19.0, sparse data keeps the input dtype, and uses more appropriate
    `fill_value` defaults (`0` for `int64` dtype, `False` for `bool` dtype).
  id: totrans-1400
  prefs: []
  type: TYPE_NORMAL
  zh: 从v0.19.0开始，稀疏数据保留输入dtype，并使用更合适的`fill_value`默认值（`int64` dtype为`0`，`bool` dtype为`False`）。
- en: '[PRE307]'
  id: totrans-1401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE307]'
- en: See the [docs](../user_guide/sparse.html#sparse-dtype) for more details.
  id: totrans-1402
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[文档](../user_guide/sparse.html#sparse-dtype)以了解更多详情。
- en: Operators now preserve dtypes
  id: totrans-1403
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 操作符现在保留dtypes
- en: Sparse data structure now can preserve `dtype` after arithmetic ops ([GH 13848](https://github.com/pandas-dev/pandas/issues/13848))
  id: totrans-1404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在可以在算术运算后保留`dtype`（[GH 13848](https://github.com/pandas-dev/pandas/issues/13848)）
- en: '[PRE308]'
  id: totrans-1405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE308]'
- en: Sparse data structure now support `astype` to convert internal `dtype` ([GH
    13900](https://github.com/pandas-dev/pandas/issues/13900))
  id: totrans-1406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在支持`astype`将内部的`dtype`转换为指定类型（[GH 13900](https://github.com/pandas-dev/pandas/issues/13900)）
- en: '[PRE309]'
  id: totrans-1407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE309]'
- en: '`astype` fails if data contains values which cannot be converted to specified
    `dtype`. Note that the limitation is applied to `fill_value` which default is
    `np.nan`.'
  id: totrans-1408
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据包含无法转换为指定`dtype`的值，则`astype`会失败。请注意，这个限制适用于默认为`np.nan`的`fill_value`。
- en: '[PRE310]'
  id: totrans-1409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE310]'
- en: Other sparse fixes
  id: totrans-1410
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 其他稀疏修复
- en: Subclassed `SparseDataFrame` and `SparseSeries` now preserve class types when
    slicing or transposing. ([GH 13787](https://github.com/pandas-dev/pandas/issues/13787))
  id: totrans-1411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 继承的`SparseDataFrame`和`SparseSeries`现在在切片或转置时保留类类型。 ([GH 13787](https://github.com/pandas-dev/pandas/issues/13787))
- en: '`SparseArray` with `bool` dtype now supports logical (bool) operators ([GH
    14000](https://github.com/pandas-dev/pandas/issues/14000))'
  id: totrans-1412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray`与`bool` dtype现在支持逻辑（bool）运算符（[GH 14000](https://github.com/pandas-dev/pandas/issues/14000)）'
- en: Bug in `SparseSeries` with `MultiIndex` `[]` indexing may raise `IndexError`
    ([GH 13144](https://github.com/pandas-dev/pandas/issues/13144))
  id: totrans-1413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`MultiIndex` `[]` 索引的`SparseSeries`的错误可能会引发`IndexError`（[GH 13144](https://github.com/pandas-dev/pandas/issues/13144)）
- en: Bug in `SparseSeries` with `MultiIndex` `[]` indexing result may have normal
    `Index` ([GH 13144](https://github.com/pandas-dev/pandas/issues/13144))
  id: totrans-1414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有`MultiIndex` `[]` 索引的`SparseSeries`的错误可能具有普通的`Index`结果（[GH 13144](https://github.com/pandas-dev/pandas/issues/13144)）
- en: Bug in `SparseDataFrame` in which `axis=None` did not default to `axis=0` ([GH
    13048](https://github.com/pandas-dev/pandas/issues/13048))
  id: totrans-1415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseDataFrame`中的错误，其中`axis=None`没有默认为`axis=0`（[GH 13048](https://github.com/pandas-dev/pandas/issues/13048)）
- en: Bug in `SparseSeries` and `SparseDataFrame` creation with `object` dtype may
    raise `TypeError` ([GH 11633](https://github.com/pandas-dev/pandas/issues/11633))
  id: totrans-1416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`object` dtype创建`SparseSeries`和`SparseDataFrame`的错误可能会引发`TypeError`（[GH 11633](https://github.com/pandas-dev/pandas/issues/11633)）
- en: Bug in `SparseDataFrame` doesn’t respect passed `SparseArray` or `SparseSeries`
    ‘s dtype and `fill_value` ([GH 13866](https://github.com/pandas-dev/pandas/issues/13866))
  id: totrans-1417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseDataFrame`中的错误不尊重传递的`SparseArray`或`SparseSeries`的dtype和`fill_value`（[GH
    13866](https://github.com/pandas-dev/pandas/issues/13866)）
- en: Bug in `SparseArray` and `SparseSeries` don’t apply ufunc to `fill_value` ([GH
    13853](https://github.com/pandas-dev/pandas/issues/13853))
  id: totrans-1418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseArray`和`SparseSeries`中不应用ufunc到`fill_value`的错误（[GH 13853](https://github.com/pandas-dev/pandas/issues/13853)）
- en: Bug in `SparseSeries.abs` incorrectly keeps negative `fill_value` ([GH 13853](https://github.com/pandas-dev/pandas/issues/13853))
  id: totrans-1419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries.abs`中的错误不正确地保留了负的`fill_value`（[GH 13853](https://github.com/pandas-dev/pandas/issues/13853)）'
- en: Bug in single row slicing on multi-type `SparseDataFrame` s, types were previously
    forced to float ([GH 13917](https://github.com/pandas-dev/pandas/issues/13917))
  id: totrans-1420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多类型`SparseDataFrame`上的单行切片中的错误，之前类型被强制为浮点数（[GH 13917](https://github.com/pandas-dev/pandas/issues/13917)）
- en: Bug in `SparseSeries` slicing changes integer dtype to float ([GH 8292](https://github.com/pandas-dev/pandas/issues/8292))
  id: totrans-1421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseSeries`切片中的错误将整数dtype更改为浮点数（[GH 8292](https://github.com/pandas-dev/pandas/issues/8292)）
- en: Bug in `SparseDataFarme` comparison ops may raise `TypeError` ([GH 13001](https://github.com/pandas-dev/pandas/issues/13001))
  id: totrans-1422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseDataFarme`比较操作中的错误可能会引发`TypeError`（[GH 13001](https://github.com/pandas-dev/pandas/issues/13001)）
- en: Bug in `SparseDataFarme.isnull` raises `ValueError` ([GH 8276](https://github.com/pandas-dev/pandas/issues/8276))
  id: totrans-1423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseDataFarme.isnull`中的错误引发了`ValueError`（[GH 8276](https://github.com/pandas-dev/pandas/issues/8276)）
- en: Bug in `SparseSeries` representation with `bool` dtype may raise `IndexError`
    ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
  id: totrans-1424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`SparseSeries`表示中带有`bool` dtype的错误可能会引发`IndexError`（[GH 13110](https://github.com/pandas-dev/pandas/issues/13110)）
- en: Bug in `SparseSeries` and `SparseDataFrame` of `bool` or `int64` dtype may display
    its values like `float64` dtype ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
  id: totrans-1425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有`bool`或`int64` dtype的`SparseSeries`和`SparseDataFrame`的错误可能显示其值像`float64` dtype一样（[GH
    13110](https://github.com/pandas-dev/pandas/issues/13110)）
- en: Bug in sparse indexing using `SparseArray` with `bool` dtype may return incorrect
    result ([GH 13985](https://github.com/pandas-dev/pandas/issues/13985))
  id: totrans-1426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`bool` dtype的`SparseArray`进行稀疏索引可能返回不正确的结果（[GH 13985](https://github.com/pandas-dev/pandas/issues/13985)）
- en: Bug in `SparseArray` created from `SparseSeries` may lose `dtype` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))
  id: totrans-1427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`SparseSeries`创建的`SparseArray`中的错误可能会丢失`dtype`（[GH 13999](https://github.com/pandas-dev/pandas/issues/13999)）
- en: Bug in `SparseSeries` comparison with dense returns normal `Series` rather than
    `SparseSeries` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))
  id: totrans-1428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与密集比较的`SparseSeries`的错误返回普通的`Series`而不是`SparseSeries`（[GH 13999](https://github.com/pandas-dev/pandas/issues/13999)）
- en: Types `int64` and `bool` support enhancements
  id: totrans-1429
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 类型`int64`和`bool`的支持增强
- en: Sparse data structures now gained enhanced support of `int64` and `bool` `dtype`
    ([GH 667](https://github.com/pandas-dev/pandas/issues/667), [GH 13849](https://github.com/pandas-dev/pandas/issues/13849)).
  id: totrans-1430
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在增强了对`int64`和`bool` `dtype`的支持（[GH 667](https://github.com/pandas-dev/pandas/issues/667),
    [GH 13849](https://github.com/pandas-dev/pandas/issues/13849)）。
- en: Previously, sparse data were `float64` dtype by default, even if all inputs
    were of `int` or `bool` dtype. You had to specify `dtype` explicitly to create
    sparse data with `int64` dtype. Also, `fill_value` had to be specified explicitly
    because the default was `np.nan` which doesn’t appear in `int64` or `bool` data.
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，即使所有输入都是 `int` 或 `bool` dtype，稀疏数据默认为 `float64` dtype。您必须显式指定 `dtype` 来创建具有
    `int64` dtype 的稀疏数据。此外，`fill_value` 必须显式指定，因为默认值为 `np.nan`，而 `np.nan` 不会出现在 `int64`
    或 `bool` 数据中。
- en: '[PRE311]'
  id: totrans-1432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE311]'
- en: As of v0.19.0, sparse data keeps the input dtype, and uses more appropriate
    `fill_value` defaults (`0` for `int64` dtype, `False` for `bool` dtype).
  id: totrans-1433
  prefs: []
  type: TYPE_NORMAL
  zh: 从 v0.19.0 开始，稀疏数据保留输入的 dtype，并使用更合适的 `fill_value` 默认值（`int64` dtype 为 `0`，`bool`
    dtype 为 `False`）。
- en: '[PRE312]'
  id: totrans-1434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE312]'
- en: See the [docs](../user_guide/sparse.html#sparse-dtype) for more details.
  id: totrans-1435
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详情请参见[文档](../user_guide/sparse.html#sparse-dtype)。
- en: Operators now preserve dtypes
  id: totrans-1436
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 现在运算符会保留 dtype
- en: Sparse data structure now can preserve `dtype` after arithmetic ops ([GH 13848](https://github.com/pandas-dev/pandas/issues/13848))
  id: totrans-1437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在可以在算术操作后保留 `dtype`（[GH 13848](https://github.com/pandas-dev/pandas/issues/13848)）
- en: '[PRE313]'
  id: totrans-1438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE313]'
- en: Sparse data structure now support `astype` to convert internal `dtype` ([GH
    13900](https://github.com/pandas-dev/pandas/issues/13900))
  id: totrans-1439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稀疏数据结构现在支持 `astype` 来转换内部的 `dtype`（[GH 13900](https://github.com/pandas-dev/pandas/issues/13900)）
- en: '[PRE314]'
  id: totrans-1440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE314]'
- en: '`astype` fails if data contains values which cannot be converted to specified
    `dtype`. Note that the limitation is applied to `fill_value` which default is
    `np.nan`.'
  id: totrans-1441
  prefs: []
  type: TYPE_NORMAL
  zh: '如果数据包含不能转换为指定 `dtype` 的值，则 `astype` 失败。请注意，此限制适用于默认值为 `np.nan` 的 `fill_value`。 '
- en: '[PRE315]'
  id: totrans-1442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE315]'
- en: Other sparse fixes
  id: totrans-1443
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 其他稀疏修复
- en: Subclassed `SparseDataFrame` and `SparseSeries` now preserve class types when
    slicing or transposing. ([GH 13787](https://github.com/pandas-dev/pandas/issues/13787))
  id: totrans-1444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当切片或转置时，子类化的 `SparseDataFrame` 和 `SparseSeries` 现在会保留类类型。 ([GH 13787](https://github.com/pandas-dev/pandas/issues/13787))
- en: '`SparseArray` with `bool` dtype now supports logical (bool) operators ([GH
    14000](https://github.com/pandas-dev/pandas/issues/14000))'
  id: totrans-1445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bool` 类型的 `SparseArray` 现在支持逻辑（bool）运算（[GH 14000](https://github.com/pandas-dev/pandas/issues/14000)）'
- en: Bug in `SparseSeries` with `MultiIndex` `[]` indexing may raise `IndexError`
    ([GH 13144](https://github.com/pandas-dev/pandas/issues/13144))
  id: totrans-1446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiIndex` 中 `SparseSeries` 的 Bug 使用 `[]` 索引可能引发 `IndexError`（[GH 13144](https://github.com/pandas-dev/pandas/issues/13144)）'
- en: Bug in `SparseSeries` with `MultiIndex` `[]` indexing result may have normal
    `Index` ([GH 13144](https://github.com/pandas-dev/pandas/issues/13144))
  id: totrans-1447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MultiIndex` 中 `SparseSeries` 的 Bug 使用 `[]` 索引结果可能有普通的 `Index`（[GH 13144](https://github.com/pandas-dev/pandas/issues/13144)）'
- en: Bug in `SparseDataFrame` in which `axis=None` did not default to `axis=0` ([GH
    13048](https://github.com/pandas-dev/pandas/issues/13048))
  id: totrans-1448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFrame` 中的 Bug，其中 `axis=None` 不会默认为 `axis=0`（[GH 13048](https://github.com/pandas-dev/pandas/issues/13048)）'
- en: Bug in `SparseSeries` and `SparseDataFrame` creation with `object` dtype may
    raise `TypeError` ([GH 11633](https://github.com/pandas-dev/pandas/issues/11633))
  id: totrans-1449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `object` dtype 创建 `SparseSeries` 和 `SparseDataFrame` 的 Bug 可能会引发 `TypeError`（[GH
    11633](https://github.com/pandas-dev/pandas/issues/11633)）
- en: Bug in `SparseDataFrame` doesn’t respect passed `SparseArray` or `SparseSeries`
    ‘s dtype and `fill_value` ([GH 13866](https://github.com/pandas-dev/pandas/issues/13866))
  id: totrans-1450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFrame` 中的 Bug 不遵循传递的 `SparseArray` 或 `SparseSeries` 的 dtype 和 `fill_value`（[GH
    13866](https://github.com/pandas-dev/pandas/issues/13866)）'
- en: Bug in `SparseArray` and `SparseSeries` don’t apply ufunc to `fill_value` ([GH
    13853](https://github.com/pandas-dev/pandas/issues/13853))
  id: totrans-1451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseArray` 和 `SparseSeries` 中的 Bug 不会将 ufunc 应用到 `fill_value`（[GH 13853](https://github.com/pandas-dev/pandas/issues/13853)）'
- en: Bug in `SparseSeries.abs` incorrectly keeps negative `fill_value` ([GH 13853](https://github.com/pandas-dev/pandas/issues/13853))
  id: totrans-1452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries.abs` 中的 Bug 错误地保留了负的 `fill_value`（[GH 13853](https://github.com/pandas-dev/pandas/issues/13853)）'
- en: Bug in single row slicing on multi-type `SparseDataFrame` s, types were previously
    forced to float ([GH 13917](https://github.com/pandas-dev/pandas/issues/13917))
  id: totrans-1453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单行切片在多类型的 `SparseDataFrame` 上的 Bug，以前会被强制转换为 float 类型（[GH 13917](https://github.com/pandas-dev/pandas/issues/13917)）
- en: Bug in `SparseSeries` slicing changes integer dtype to float ([GH 8292](https://github.com/pandas-dev/pandas/issues/8292))
  id: totrans-1454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseSeries` 切片中的 Bug 会将整数 dtype 更改为 float 类型（[GH 8292](https://github.com/pandas-dev/pandas/issues/8292)）'
- en: Bug in `SparseDataFarme` comparison ops may raise `TypeError` ([GH 13001](https://github.com/pandas-dev/pandas/issues/13001))
  id: totrans-1455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFarme` 中的比较操作可能会引发 `TypeError` 的 Bug（[GH 13001](https://github.com/pandas-dev/pandas/issues/13001)）'
- en: Bug in `SparseDataFarme.isnull` raises `ValueError` ([GH 8276](https://github.com/pandas-dev/pandas/issues/8276))
  id: totrans-1456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseDataFarme.isnull` 中的 Bug 引发 `ValueError`（[GH 8276](https://github.com/pandas-dev/pandas/issues/8276)）'
- en: Bug in `SparseSeries` representation with `bool` dtype may raise `IndexError`
    ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
  id: totrans-1457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`bool` dtype的`SparseSeries`表示中的错误可能会引发`IndexError`（[GH 13110](https://github.com/pandas-dev/pandas/issues/13110)）。
- en: Bug in `SparseSeries` and `SparseDataFrame` of `bool` or `int64` dtype may display
    its values like `float64` dtype ([GH 13110](https://github.com/pandas-dev/pandas/issues/13110))
  id: totrans-1458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`bool`或`int64` dtype的`SparseSeries`和`SparseDataFrame`中的错误可能会显示其值，例如`float64`
    dtype（[GH 13110](https://github.com/pandas-dev/pandas/issues/13110)）.
- en: Bug in sparse indexing using `SparseArray` with `bool` dtype may return incorrect
    result ([GH 13985](https://github.com/pandas-dev/pandas/issues/13985))
  id: totrans-1459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`bool` dtype的`SparseArray`进行稀疏索引的错误可能会返回不正确的结果（[GH 13985](https://github.com/pandas-dev/pandas/issues/13985)）。
- en: Bug in `SparseArray` created from `SparseSeries` may lose `dtype` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))
  id: totrans-1460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`SparseSeries`创建的`SparseArray`中的错误可能会丢失`dtype`（[GH 13999](https://github.com/pandas-dev/pandas/issues/13999)）。
- en: Bug in `SparseSeries` comparison with dense returns normal `Series` rather than
    `SparseSeries` ([GH 13999](https://github.com/pandas-dev/pandas/issues/13999))
  id: totrans-1461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与密集返回普通`Series`而不是`SparseSeries`的`SparseSeries`比较中的错误已修复（[GH 13999](https://github.com/pandas-dev/pandas/issues/13999)）。
- en: '### Indexer dtype changes'
  id: totrans-1462
  prefs: []
  type: TYPE_NORMAL
  zh: '### 索引器dtype更改'
- en: Note
  id: totrans-1463
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This change only affects 64 bit python running on Windows, and only affects
    relatively advanced indexing operations
  id: totrans-1464
  prefs: []
  type: TYPE_NORMAL
  zh: 此更改仅影响在Windows上运行的64位Python，并且仅影响相对较高级的索引操作。
- en: Methods such as `Index.get_indexer` that return an indexer array, coerce that
    array to a “platform int”, so that it can be directly used in 3rd party library
    operations like `numpy.take`. Previously, a platform int was defined as `np.int_`
    which corresponds to a C integer, but the correct type, and what is being used
    now, is `np.intp`, which corresponds to the C integer size that can hold a pointer
    ([GH 3033](https://github.com/pandas-dev/pandas/issues/3033), [GH 13972](https://github.com/pandas-dev/pandas/issues/13972)).
  id: totrans-1465
  prefs: []
  type: TYPE_NORMAL
  zh: 返回索引器数组的方法（例如`Index.get_indexer`）会将该数组强制转换为“平台整数”，以便可以直接在第三方库操作（如`numpy.take`）中使用。以前，平台整数被定义为`np.int_`，它对应于C整数，但正确的类型，以及现在正在使用的类型是`np.intp`，它对应于可以容纳指针的C整数大小（[GH
    3033](https://github.com/pandas-dev/pandas/issues/3033)，[GH 13972](https://github.com/pandas-dev/pandas/issues/13972)）。
- en: These types are the same on many platform, but for 64 bit python on Windows,
    `np.int_` is 32 bits, and `np.intp` is 64 bits. Changing this behavior improves
    performance for many operations on that platform.
  id: totrans-1466
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类型在许多平台上相同，但对于Windows上的64位Python，`np.int_`是32位，`np.intp`是64位。更改此行为可以改善该平台上许多操作的性能。
- en: '**Previous behavior**:'
  id: totrans-1467
  prefs: []
  type: TYPE_NORMAL
  zh: '**先前的行为**：'
- en: '[PRE316]'
  id: totrans-1468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE316]'
- en: '**New behavior**:'
  id: totrans-1469
  prefs: []
  type: TYPE_NORMAL
  zh: '**新行为**：'
- en: '[PRE317]'
  id: totrans-1470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE317]'
- en: '### Other API changes'
  id: totrans-1471
  prefs: []
  type: TYPE_NORMAL
  zh: '### 其他API更改'
- en: '`Timestamp.to_pydatetime` will issue a `UserWarning` when `warn=True`, and
    the instance has a non-zero number of nanoseconds, previously this would print
    a message to stdout ([GH 14101](https://github.com/pandas-dev/pandas/issues/14101)).'
  id: totrans-1472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`warn=True`且实例具有非零纳秒数时，`Timestamp.to_pydatetime`将发出`UserWarning`，之前这会将消息打印到stdout（[GH
    14101](https://github.com/pandas-dev/pandas/issues/14101)）。
- en: '`Series.unique()` with datetime and timezone now returns return array of `Timestamp`
    with timezone ([GH 13565](https://github.com/pandas-dev/pandas/issues/13565)).'
  id: totrans-1473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有日期时间和时区的`Series.unique()`现在返回带有时区的`Timestamp`数组（[GH 13565](https://github.com/pandas-dev/pandas/issues/13565)）。
- en: '`Panel.to_sparse()` will raise a `NotImplementedError` exception when called
    ([GH 13778](https://github.com/pandas-dev/pandas/issues/13778)).'
  id: totrans-1474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当调用时，`Panel.to_sparse()`会引发`NotImplementedError`异常（[GH 13778](https://github.com/pandas-dev/pandas/issues/13778)）。
- en: '`Index.reshape()` will raise a `NotImplementedError` exception when called
    ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882)).'
  id: totrans-1475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当调用时，`Index.reshape()`会引发`NotImplementedError`异常（[GH 12882](https://github.com/pandas-dev/pandas/issues/12882)）。
- en: '`.filter()` enforces mutual exclusion of the keyword arguments ([GH 12399](https://github.com/pandas-dev/pandas/issues/12399)).'
  id: totrans-1476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.filter()`强制执行关键字参数的互斥（[GH 12399](https://github.com/pandas-dev/pandas/issues/12399)）。'
- en: '`eval`’s upcasting rules for `float32` types have been updated to be more consistent
    with NumPy’s rules. New behavior will not upcast to `float64` if you multiply
    a pandas `float32` object by a scalar float64 ([GH 12388](https://github.com/pandas-dev/pandas/issues/12388)).'
  id: totrans-1477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eval`的`float32`类型的提升规则已更新为与NumPy的规则更一致。如果您将pandas的`float32`对象与标量float64相乘，则新行为不会提升为`float64`（[GH
    12388](https://github.com/pandas-dev/pandas/issues/12388)）。'
- en: An `UnsupportedFunctionCall` error is now raised if NumPy ufuncs like `np.mean`
    are called on groupby or resample objects ([GH 12811](https://github.com/pandas-dev/pandas/issues/12811)).
  id: totrans-1478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，如果在分组或重采样对象上调用NumPy的ufuncs（如`np.mean`）会引发`UnsupportedFunctionCall`错误（[GH
    12811](https://github.com/pandas-dev/pandas/issues/12811)）。
- en: '`__setitem__` will no longer apply a callable rhs as a function instead of
    storing it. Call `where` directly to get the previous behavior ([GH 13299](https://github.com/pandas-dev/pandas/issues/13299)).'
  id: totrans-1479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__setitem__` 现在不再将可调用的 rhs 视为函数而不是存储它。直接调用 `where` 来获取先前的行为 ([GH 13299](https://github.com/pandas-dev/pandas/issues/13299)).'
- en: Calls to `.sample()` will respect the random seed set via `numpy.random.seed(n)`
    ([GH 13161](https://github.com/pandas-dev/pandas/issues/13161))
  id: totrans-1480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 `.sample()` 的调用将尊重通过 `numpy.random.seed(n)` 设置的随机种子 ([GH 13161](https://github.com/pandas-dev/pandas/issues/13161))
- en: '`Styler.apply` is now more strict about the outputs your function must return.
    For `axis=0` or `axis=1`, the output shape must be identical. For `axis=None`,
    the output must be a DataFrame with identical columns and index labels ([GH 13222](https://github.com/pandas-dev/pandas/issues/13222)).'
  id: totrans-1481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Styler.apply` 现在对您的函数必须返回的输出更加严格。对于 `axis=0` 或 `axis=1`，输出形状必须相同。对于 `axis=None`，输出必须是具有相同列和索引标签的
    DataFrame ([GH 13222](https://github.com/pandas-dev/pandas/issues/13222)).'
- en: '`Float64Index.astype(int)` will now raise `ValueError` if `Float64Index` contains
    `NaN` values ([GH 13149](https://github.com/pandas-dev/pandas/issues/13149))'
  id: totrans-1482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 `Float64Index` 包含 `NaN` 值，`Float64Index.astype(int)` 现在会引发 `ValueError` ([GH
    13149](https://github.com/pandas-dev/pandas/issues/13149))
- en: '`TimedeltaIndex.astype(int)` and `DatetimeIndex.astype(int)` will now return
    `Int64Index` instead of `np.array` ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
  id: totrans-1483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimedeltaIndex.astype(int)` 和 `DatetimeIndex.astype(int)` 现在将返回 `Int64Index`
    而不是 `np.array` ([GH 13209](https://github.com/pandas-dev/pandas/issues/13209))'
- en: Passing `Period` with multiple frequencies to normal `Index` now returns `Index`
    with `object` dtype ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
  id: totrans-1484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将具有多个频率的 `Period` 传递给普通的 `Index` 现在将返回具有 `object` dtype 的 `Index` ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
- en: '`PeriodIndex.fillna` with `Period` has different freq now coerces to `object`
    dtype ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))'
  id: totrans-1485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `Period` 的 `PeriodIndex.fillna` 现在强制转换为 `object` dtype ([GH 13664](https://github.com/pandas-dev/pandas/issues/13664))
- en: Faceted boxplots from `DataFrame.boxplot(by=col)` now return a `Series` when
    `return_type` is not None. Previously these returned an `OrderedDict`. Note that
    when `return_type=None`, the default, these still return a 2-D NumPy array ([GH
    12216](https://github.com/pandas-dev/pandas/issues/12216), [GH 7096](https://github.com/pandas-dev/pandas/issues/7096)).
  id: totrans-1486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 `DataFrame.boxplot(by=col)` 获得的分面箱线图现在在 `return_type` 不为 None 时返回 `Series`。以前这些返回一个
    `OrderedDict`。请注意，当 `return_type=None` 时，默认情况下，这些仍然返回一个 2-D NumPy 数组 ([GH 12216](https://github.com/pandas-dev/pandas/issues/12216)，[GH
    7096](https://github.com/pandas-dev/pandas/issues/7096)).
- en: '`pd.read_hdf` will now raise a `ValueError` instead of `KeyError`, if a mode
    other than `r`, `r+` and `a` is supplied. ([GH 13623](https://github.com/pandas-dev/pandas/issues/13623))'
  id: totrans-1487
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 `pd.read_hdf` 提供的模式不是 `r`、`r+` 和 `a` 中的一个，现在会引发 `ValueError` 而不是 `KeyError`。([GH
    13623](https://github.com/pandas-dev/pandas/issues/13623))
- en: '`pd.read_csv()`, `pd.read_table()`, and `pd.read_hdf()` raise the builtin `FileNotFoundError`
    exception for Python 3.x when called on a nonexistent file; this is back-ported
    as `IOError` in Python 2.x ([GH 14086](https://github.com/pandas-dev/pandas/issues/14086))'
  id: totrans-1488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当在不存在的文件上调用 `pd.read_csv()`、`pd.read_table()` 和 `pd.read_hdf()` 时，Python 3.x
    中将引发内置的 `FileNotFoundError` 异常；在 Python 2.x 中将其作为 `IOError` 进行回退 ([GH 14086](https://github.com/pandas-dev/pandas/issues/14086))
- en: More informative exceptions are passed through the csv parser. The exception
    type would now be the original exception type instead of `CParserError` ([GH 13652](https://github.com/pandas-dev/pandas/issues/13652)).
  id: totrans-1489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: csv 解析器传递更具信息性的异常。异常类型现在将是原始异常类型，而不是 `CParserError` ([GH 13652](https://github.com/pandas-dev/pandas/issues/13652)).
- en: '`pd.read_csv()` in the C engine will now issue a `ParserWarning` or raise a
    `ValueError` when `sep` encoded is more than one character long ([GH 14065](https://github.com/pandas-dev/pandas/issues/14065))'
  id: totrans-1490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 C 引擎中使用 `pd.read_csv()` 当 `sep` 编码超过一个字符长时将会发出 `ParserWarning` 或引发 `ValueError`
    ([GH 14065](https://github.com/pandas-dev/pandas/issues/14065))
- en: '`DataFrame.values` will now return `float64` with a `DataFrame` of mixed `int64`
    and `uint64` dtypes, conforming to `np.find_common_type` ([GH 10364](https://github.com/pandas-dev/pandas/issues/10364),
    [GH 13917](https://github.com/pandas-dev/pandas/issues/13917))'
  id: totrans-1491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.values` 现在会返回 `float64` 类型的混合 `int64` 和 `uint64` dtypes 的 `DataFrame`，符合
    `np.find_common_type` 规范（[GH 10364](https://github.com/pandas-dev/pandas/issues/10364)，[GH
    13917](https://github.com/pandas-dev/pandas/issues/13917)）'
- en: '`.groupby.groups` will now return a dictionary of `Index` objects, rather than
    a dictionary of `np.ndarray` or `lists` ([GH 14293](https://github.com/pandas-dev/pandas/issues/14293))'
  id: totrans-1492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.groupby.groups` 现在将返回 `Index` 对象的字典，而不是 `np.ndarray` 或 `lists` 的字典 ([GH 14293](https://github.com/pandas-dev/pandas/issues/14293))'
- en: '## Deprecations'
  id: totrans-1493
  prefs: []
  type: TYPE_NORMAL
  zh: '## 弃用'
- en: '`Series.reshape` and `Categorical.reshape` have been deprecated and will be
    removed in a subsequent release ([GH 12882](https://github.com/pandas-dev/pandas/issues/12882),
    [GH 12882](https://github.com/pandas-dev/pandas/issues/12882))'
  id: totrans-1494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.reshape` 和 `Categorical.reshape` 已被弃用，并将在后续版本中移除（[GH 12882](https://github.com/pandas-dev/pandas/issues/12882),
    [GH 12882](https://github.com/pandas-dev/pandas/issues/12882)）'
- en: '`PeriodIndex.to_datetime` has been deprecated in favor of `PeriodIndex.to_timestamp`
    ([GH 8254](https://github.com/pandas-dev/pandas/issues/8254))'
  id: totrans-1495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PeriodIndex.to_datetime` 已被弃用，推荐使用 `PeriodIndex.to_timestamp`（[GH 8254](https://github.com/pandas-dev/pandas/issues/8254)）'
- en: '`Timestamp.to_datetime` has been deprecated in favor of `Timestamp.to_pydatetime`
    ([GH 8254](https://github.com/pandas-dev/pandas/issues/8254))'
  id: totrans-1496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp.to_datetime` 已被弃用，推荐使用 `Timestamp.to_pydatetime`（[GH 8254](https://github.com/pandas-dev/pandas/issues/8254)）'
- en: '`Index.to_datetime` and `DatetimeIndex.to_datetime` have been deprecated in
    favor of `pd.to_datetime` ([GH 8254](https://github.com/pandas-dev/pandas/issues/8254))'
  id: totrans-1497
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index.to_datetime` 和 `DatetimeIndex.to_datetime` 已被弃用，推荐使用 `pd.to_datetime`（[GH
    8254](https://github.com/pandas-dev/pandas/issues/8254)）'
- en: '`pandas.core.datetools` module has been deprecated and will be removed in a
    subsequent release ([GH 14094](https://github.com/pandas-dev/pandas/issues/14094))'
  id: totrans-1498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.core.datetools` 模块已被弃用，并将在后续版本中移除（[GH 14094](https://github.com/pandas-dev/pandas/issues/14094)）'
- en: '`SparseList` has been deprecated and will be removed in a future version ([GH
    13784](https://github.com/pandas-dev/pandas/issues/13784))'
  id: totrans-1499
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparseList` 已被弃用，并将在将来的版本中移除（[GH 13784](https://github.com/pandas-dev/pandas/issues/13784)）'
- en: '`DataFrame.to_html()` and `DataFrame.to_latex()` have dropped the `colSpace`
    parameter in favor of `col_space` ([GH 13857](https://github.com/pandas-dev/pandas/issues/13857))'
  id: totrans-1500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_html()` 和 `DataFrame.to_latex()` 已删除 `colSpace` 参数，推荐使用 `col_space`（[GH
    13857](https://github.com/pandas-dev/pandas/issues/13857)）'
- en: '`DataFrame.to_sql()` has deprecated the `flavor` parameter, as it is superfluous
    when SQLAlchemy is not installed ([GH 13611](https://github.com/pandas-dev/pandas/issues/13611))'
  id: totrans-1501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_sql()` 已弃用 `flavor` 参数，因为在未安装 SQLAlchemy 时它是多余的（[GH 13611](https://github.com/pandas-dev/pandas/issues/13611)）'
- en: 'Deprecated `read_csv` keywords:'
  id: totrans-1502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弃用的 `read_csv` 关键字：
- en: '`compact_ints` and `use_unsigned` have been deprecated and will be removed
    in a future version ([GH 13320](https://github.com/pandas-dev/pandas/issues/13320))'
  id: totrans-1503
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compact_ints` 和 `use_unsigned` 已被弃用，并将在将来的版本中移除（[GH 13320](https://github.com/pandas-dev/pandas/issues/13320)）'
- en: '`buffer_lines` has been deprecated and will be removed in a future version
    ([GH 13360](https://github.com/pandas-dev/pandas/issues/13360))'
  id: totrans-1504
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`buffer_lines` 已被弃用，并将在将来的版本中移除（[GH 13360](https://github.com/pandas-dev/pandas/issues/13360)）'
- en: '`as_recarray` has been deprecated and will be removed in a future version ([GH
    13373](https://github.com/pandas-dev/pandas/issues/13373))'
  id: totrans-1505
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`as_recarray` 已被弃用，并将在将来的版本中移除（[GH 13373](https://github.com/pandas-dev/pandas/issues/13373)）'
- en: '`skip_footer` has been deprecated in favor of `skipfooter` and will be removed
    in a future version ([GH 13349](https://github.com/pandas-dev/pandas/issues/13349))'
  id: totrans-1506
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`skip_footer` 已被弃用，推荐使用 `skipfooter`，并将在将来的版本中移除（[GH 13349](https://github.com/pandas-dev/pandas/issues/13349)）'
- en: top-level `pd.ordered_merge()` has been renamed to `pd.merge_ordered()` and
    the original name will be removed in a future version ([GH 13358](https://github.com/pandas-dev/pandas/issues/13358))
  id: totrans-1507
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶层 `pd.ordered_merge()` 已重命名为 `pd.merge_ordered()`，原始名称将在将来的版本中移除（[GH 13358](https://github.com/pandas-dev/pandas/issues/13358)）
- en: '`Timestamp.offset` property (and named arg in the constructor), has been deprecated
    in favor of `freq` ([GH 12160](https://github.com/pandas-dev/pandas/issues/12160))'
  id: totrans-1508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Timestamp.offset` 属性（以及构造函数中的命名参数）已被弃用，推荐使用 `freq`（[GH 12160](https://github.com/pandas-dev/pandas/issues/12160)）'
- en: '`pd.tseries.util.pivot_annual` is deprecated. Use `pivot_table` as alternative,
    an example is [here](../user_guide/cookbook.html#cookbook-pivot) ([GH 736](https://github.com/pandas-dev/pandas/issues/736))'
  id: totrans-1509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.tseries.util.pivot_annual` 已被弃用。使用 `pivot_table` 作为替代，一个示例在[这里](../user_guide/cookbook.html#cookbook-pivot)（[GH
    736](https://github.com/pandas-dev/pandas/issues/736)）'
- en: '`pd.tseries.util.isleapyear` has been deprecated and will be removed in a subsequent
    release. Datetime-likes now have a `.is_leap_year` property ([GH 13727](https://github.com/pandas-dev/pandas/issues/13727))'
  id: totrans-1510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.tseries.util.isleapyear` 已被弃用，并将在后续版本中移除。Datetime-likes 现在具有 `.is_leap_year`
    属性（[GH 13727](https://github.com/pandas-dev/pandas/issues/13727)）'
- en: '`Panel4D` and `PanelND` constructors are deprecated and will be removed in
    a future version. The recommended way to represent these types of n-dimensional
    data are with the [xarray package](http://xarray.pydata.org/en/stable/). pandas
    provides a `to_xarray()` method to automate this conversion ([GH 13564](https://github.com/pandas-dev/pandas/issues/13564)).'
  id: totrans-1511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Panel4D`和`PanelND`构造函数已被弃用，并将在将来的版本中移除。推荐表示这些类型的n维数据的方法是使用[xarray package](http://xarray.pydata.org/en/stable/)。pandas提供了一个`to_xarray()`方法来自动执行此转换（[GH
    13564](https://github.com/pandas-dev/pandas/issues/13564)）'
- en: '`pandas.tseries.frequencies.get_standard_freq` is deprecated. Use `pandas.tseries.frequencies.to_offset(freq).rule_code`
    instead ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))'
  id: totrans-1512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.tseries.frequencies.get_standard_freq`已被弃用。请使用`pandas.tseries.frequencies.to_offset(freq).rule_code`代替（[GH
    13874](https://github.com/pandas-dev/pandas/issues/13874)）'
- en: '`pandas.tseries.frequencies.to_offset`’s `freqstr` keyword is deprecated in
    favor of `freq` ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))'
  id: totrans-1513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.tseries.frequencies.to_offset`的`freqstr`关键字已被弃用，转而使用`freq`（[GH 13874](https://github.com/pandas-dev/pandas/issues/13874)）'
- en: '`Categorical.from_array` has been deprecated and will be removed in a future
    version ([GH 13854](https://github.com/pandas-dev/pandas/issues/13854))'
  id: totrans-1514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Categorical.from_array`已被弃用，并将在将来的版本中移除（[GH 13854](https://github.com/pandas-dev/pandas/issues/13854)）'
- en: '## Removal of prior version deprecations/changes'
  id: totrans-1515
  prefs: []
  type: TYPE_NORMAL
  zh: '## 移除之前版本的弃用/更改'
- en: The `SparsePanel` class has been removed ([GH 13778](https://github.com/pandas-dev/pandas/issues/13778))
  id: totrans-1516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SparsePanel`类已被移除（[GH 13778](https://github.com/pandas-dev/pandas/issues/13778)）'
- en: The `pd.sandbox` module has been removed in favor of the external library `pandas-qt`
    ([GH 13670](https://github.com/pandas-dev/pandas/issues/13670))
  id: totrans-1517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.sandbox`模块已被移除，转而使用外部库`pandas-qt`（[GH 13670](https://github.com/pandas-dev/pandas/issues/13670)）'
- en: The `pandas.io.data` and `pandas.io.wb` modules are removed in favor of the
    [pandas-datareader package](https://github.com/pydata/pandas-datareader) ([GH
    13724](https://github.com/pandas-dev/pandas/issues/13724)).
  id: totrans-1518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.io.data`和`pandas.io.wb`模块已被移除，转而使用[pandas-datareader package](https://github.com/pydata/pandas-datareader)（[GH
    13724](https://github.com/pandas-dev/pandas/issues/13724)）'
- en: The `pandas.tools.rplot` module has been removed in favor of the [seaborn package](https://github.com/mwaskom/seaborn)
    ([GH 13855](https://github.com/pandas-dev/pandas/issues/13855))
  id: totrans-1519
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.tools.rplot`模块已被移除，转而使用[seaborn package](https://github.com/mwaskom/seaborn)（[GH
    13855](https://github.com/pandas-dev/pandas/issues/13855)）'
- en: '`DataFrame.to_csv()` has dropped the `engine` parameter, as was deprecated
    in 0.17.1 ([GH 11274](https://github.com/pandas-dev/pandas/issues/11274), [GH
    13419](https://github.com/pandas-dev/pandas/issues/13419))'
  id: totrans-1520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_csv()`已经放弃了`engine`参数，因为在0.17.1中已经弃用（[GH 11274](https://github.com/pandas-dev/pandas/issues/11274)，[GH
    13419](https://github.com/pandas-dev/pandas/issues/13419)）'
- en: '`DataFrame.to_dict()` has dropped the `outtype` parameter in favor of `orient`
    ([GH 13627](https://github.com/pandas-dev/pandas/issues/13627), [GH 8486](https://github.com/pandas-dev/pandas/issues/8486))'
  id: totrans-1521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_dict()`已经放弃了`outtype`参数，转而使用`orient`（[GH 13627](https://github.com/pandas-dev/pandas/issues/13627)，[GH
    8486](https://github.com/pandas-dev/pandas/issues/8486)）'
- en: '`pd.Categorical` has dropped setting of the `ordered` attribute directly in
    favor of the `set_ordered` method ([GH 13671](https://github.com/pandas-dev/pandas/issues/13671))'
  id: totrans-1522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Categorical`已经放弃了直接设置`ordered`属性，转而使用`set_ordered`方法（[GH 13671](https://github.com/pandas-dev/pandas/issues/13671)）'
- en: '`pd.Categorical` has dropped the `levels` attribute in favor of `categories`
    ([GH 8376](https://github.com/pandas-dev/pandas/issues/8376))'
  id: totrans-1523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Categorical`已经放弃了`levels`属性，转而使用`categories`（[GH 8376](https://github.com/pandas-dev/pandas/issues/8376)）'
- en: '`DataFrame.to_sql()` has dropped the `mysql` option for the `flavor` parameter
    ([GH 13611](https://github.com/pandas-dev/pandas/issues/13611))'
  id: totrans-1524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.to_sql()`已经放弃了`mysql`选项，用于`flavor`参数（[GH 13611](https://github.com/pandas-dev/pandas/issues/13611)）'
- en: '`Panel.shift()` has dropped the `lags` parameter in favor of `periods` ([GH
    14041](https://github.com/pandas-dev/pandas/issues/14041))'
  id: totrans-1525
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Panel.shift()`已经放弃了`lags`参数，转而使用`periods`（[GH 14041](https://github.com/pandas-dev/pandas/issues/14041)）'
- en: '`pd.Index` has dropped the `diff` method in favor of `difference` ([GH 13669](https://github.com/pandas-dev/pandas/issues/13669))'
  id: totrans-1526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.Index`已经放弃了`diff`方法，转而使用`difference`（[GH 13669](https://github.com/pandas-dev/pandas/issues/13669)）'
- en: '`pd.DataFrame` has dropped the `to_wide` method in favor of `to_panel` ([GH
    14039](https://github.com/pandas-dev/pandas/issues/14039))'
  id: totrans-1527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.DataFrame`已经放弃了`to_wide`方法，转而使用`to_panel`（[GH 14039](https://github.com/pandas-dev/pandas/issues/14039)）'
- en: '`Series.to_csv` has dropped the `nanRep` parameter in favor of `na_rep` ([GH
    13804](https://github.com/pandas-dev/pandas/issues/13804))'
  id: totrans-1528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.to_csv`已经放弃了`nanRep`参数，转而使用`na_rep`（[GH 13804](https://github.com/pandas-dev/pandas/issues/13804)）'
- en: '`Series.xs`, `DataFrame.xs`, `Panel.xs`, `Panel.major_xs`, and `Panel.minor_xs`
    have dropped the `copy` parameter ([GH 13781](https://github.com/pandas-dev/pandas/issues/13781))'
  id: totrans-1529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Series.xs`、`DataFrame.xs`、`Panel.xs`、`Panel.major_xs` 和 `Panel.minor_xs` 已经移除了
    `copy` 参数（[GH 13781](https://github.com/pandas-dev/pandas/issues/13781)）。'
- en: '`str.split` has dropped the `return_type` parameter in favor of `expand` ([GH
    13701](https://github.com/pandas-dev/pandas/issues/13701))'
  id: totrans-1530
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`str.split` 已经放弃了 `return_type` 参数，改为使用 `expand` 参数（[GH 13701](https://github.com/pandas-dev/pandas/issues/13701)）。'
- en: Removal of the legacy time rules (offset aliases), deprecated since 0.17.0 (this
    has been alias since 0.8.0) ([GH 13590](https://github.com/pandas-dev/pandas/issues/13590),
    [GH 13868](https://github.com/pandas-dev/pandas/issues/13868)). Now legacy time
    rules raises `ValueError`. For the list of currently supported offsets, see [here](../user_guide/timeseries.html#timeseries-offset-aliases).
  id: totrans-1531
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除了自 0.17.0 起已弃用的旧时间规则（偏移别名）（自 0.8.0 起已是别名）（[GH 13590](https://github.com/pandas-dev/pandas/issues/13590)，[GH
    13868](https://github.com/pandas-dev/pandas/issues/13868)）。现在，旧的时间规则会引发 `ValueError`。当前支持的偏移列表请参见[这里](../user_guide/timeseries.html#timeseries-offset-aliases)。
- en: The default value for the `return_type` parameter for `DataFrame.plot.box` and
    `DataFrame.boxplot` changed from `None` to `"axes"`. These methods will now return
    a matplotlib axes by default instead of a dictionary of artists. See [here](../user_guide/visualization.html#visualization-box-return)
    ([GH 6581](https://github.com/pandas-dev/pandas/issues/6581)).
  id: totrans-1532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.plot.box` 和 `DataFrame.boxplot` 的 `return_type` 参数的默认值从 `None` 改为了
    `"axes"`。这些方法现在默认返回一个 matplotlib axes，而不是一个艺术家字典。请参阅[这里](../user_guide/visualization.html#visualization-box-return)（[GH
    6581](https://github.com/pandas-dev/pandas/issues/6581)）。'
- en: The `tquery` and `uquery` functions in the `pandas.io.sql` module are removed
    ([GH 5950](https://github.com/pandas-dev/pandas/issues/5950)).
  id: totrans-1533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pandas.io.sql` 模块中的 `tquery` 和 `uquery` 函数已移除（[GH 5950](https://github.com/pandas-dev/pandas/issues/5950)）。'
- en: '## Performance improvements'
  id: totrans-1534
  prefs: []
  type: TYPE_NORMAL
  zh: '## 性能改进'
- en: Improved performance of sparse `IntIndex.intersect` ([GH 13082](https://github.com/pandas-dev/pandas/issues/13082))
  id: totrans-1535
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了稀疏 `IntIndex.intersect` 的性能（[GH 13082](https://github.com/pandas-dev/pandas/issues/13082)）。
- en: Improved performance of sparse arithmetic with `BlockIndex` when the number
    of blocks are large, though recommended to use `IntIndex` in such cases ([GH 13082](https://github.com/pandas-dev/pandas/issues/13082))
  id: totrans-1536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当块数较大时，通过稀疏算术与 `BlockIndex` 的性能得到了改进，尽管在这种情况下建议使用 `IntIndex`（[GH 13082](https://github.com/pandas-dev/pandas/issues/13082)）。
- en: Improved performance of `DataFrame.quantile()` as it now operates per-block
    ([GH 11623](https://github.com/pandas-dev/pandas/issues/11623))
  id: totrans-1537
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DataFrame.quantile()` 的性能得到了改进，现在它是基于块操作的（[GH 11623](https://github.com/pandas-dev/pandas/issues/11623)）。'
- en: Improved performance of float64 hash table operations, fixing some very slow
    indexing and groupby operations in python 3 ([GH 13166](https://github.com/pandas-dev/pandas/issues/13166),
    [GH 13334](https://github.com/pandas-dev/pandas/issues/13334))
  id: totrans-1538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过改进 float64 哈希表操作的性能，修复了一些 Python 3 中非常慢的索引和 groupby 操作（[GH 13166](https://github.com/pandas-dev/pandas/issues/13166)，[GH
    13334](https://github.com/pandas-dev/pandas/issues/13334)）。
- en: Improved performance of `DataFrameGroupBy.transform` ([GH 12737](https://github.com/pandas-dev/pandas/issues/12737))
  id: totrans-1539
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 `DataFrameGroupBy.transform` 的性能（[GH 12737](https://github.com/pandas-dev/pandas/issues/12737)）。
- en: Improved performance of `Index` and `Series` `.duplicated` ([GH 10235](https://github.com/pandas-dev/pandas/issues/10235))
  id: totrans-1540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 `Index` 和 `Series` 的 `.duplicated` 的性能（[GH 10235](https://github.com/pandas-dev/pandas/issues/10235)）。
- en: Improved performance of `Index.difference` ([GH 12044](https://github.com/pandas-dev/pandas/issues/12044))
  id: totrans-1541
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 `Index.difference` 的性能（[GH 12044](https://github.com/pandas-dev/pandas/issues/12044)）。
- en: Improved performance of `RangeIndex.is_monotonic_increasing` and `is_monotonic_decreasing`
    ([GH 13749](https://github.com/pandas-dev/pandas/issues/13749))
  id: totrans-1542
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 `RangeIndex.is_monotonic_increasing` 和 `is_monotonic_decreasing` 的性能（[GH
    13749](https://github.com/pandas-dev/pandas/issues/13749)）。
- en: Improved performance of datetime string parsing in `DatetimeIndex` ([GH 13692](https://github.com/pandas-dev/pandas/issues/13692))
  id: totrans-1543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 `DatetimeIndex` 中日期时间字符串解析的性能（[GH 13692](https://github.com/pandas-dev/pandas/issues/13692)）。
- en: Improved performance of hashing `Period` ([GH 12817](https://github.com/pandas-dev/pandas/issues/12817))
  id: totrans-1544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了 `Period` 的哈希性能（[GH 12817](https://github.com/pandas-dev/pandas/issues/12817)）。
- en: Improved performance of `factorize` of datetime with timezone ([GH 13750](https://github.com/pandas-dev/pandas/issues/13750))
  id: totrans-1545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了带有时区的日期时间的 `factorize` 的性能（[GH 13750](https://github.com/pandas-dev/pandas/issues/13750)）。
- en: Improved performance of by lazily creating indexing hashtables on larger Indexes
    ([GH 14266](https://github.com/pandas-dev/pandas/issues/14266))
  id: totrans-1546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在更大的索引上延迟创建索引哈希表，改进了索引性能（[GH 14266](https://github.com/pandas-dev/pandas/issues/14266)）。
- en: Improved performance of `groupby.groups` ([GH 14293](https://github.com/pandas-dev/pandas/issues/14293))
  id: totrans-1547
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了`groupby.groups`的性能。([GH 14293](https://github.com/pandas-dev/pandas/issues/14293))
- en: Unnecessary materializing of a MultiIndex when introspecting for memory usage
    ([GH 14308](https://github.com/pandas-dev/pandas/issues/14308))
  id: totrans-1548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当检查内存使用情况时，不必要地实现一个MultiIndex。([GH 14308](https://github.com/pandas-dev/pandas/issues/14308))
- en: '## Bug fixes'
  id: totrans-1549
  prefs: []
  type: TYPE_NORMAL
  zh: '## 修复的bug'
- en: Bug in `groupby().shift()`, which could cause a segfault or corruption in rare
    circumstances when grouping by columns with missing values ([GH 13813](https://github.com/pandas-dev/pandas/issues/13813))
  id: totrans-1550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`groupby().shift()`中存在的一个bug，在按列分组时，当存在缺失值时，在极少情况下可能导致段错误或数据损坏。([GH 13813](https://github.com/pandas-dev/pandas/issues/13813))
- en: Bug in `groupby().cumsum()` calculating `cumprod` when `axis=1`. ([GH 13994](https://github.com/pandas-dev/pandas/issues/13994))
  id: totrans-1551
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`groupby().cumsum()`中存在的一个bug，在`axis=1`时计算`cumprod`。([GH 13994](https://github.com/pandas-dev/pandas/issues/13994))
- en: Bug in `pd.to_timedelta()` in which the `errors` parameter was not being respected
    ([GH 13613](https://github.com/pandas-dev/pandas/issues/13613))
  id: totrans-1552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.to_timedelta()`中存在的一个bug，未能尊重`errors`参数。([GH 13613](https://github.com/pandas-dev/pandas/issues/13613))
- en: Bug in `io.json.json_normalize()`, where non-ascii keys raised an exception
    ([GH 13213](https://github.com/pandas-dev/pandas/issues/13213))
  id: totrans-1553
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`io.json.json_normalize()`中存在的一个bug，非ASCII键会引发异常。([GH 13213](https://github.com/pandas-dev/pandas/issues/13213))
- en: Bug when passing a not-default-indexed `Series` as `xerr` or `yerr` in `.plot()`
    ([GH 11858](https://github.com/pandas-dev/pandas/issues/11858))
  id: totrans-1554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`.plot()`中将非默认索引的`Series`作为`xerr`或`yerr`传递时存在的一个bug。([GH 11858](https://github.com/pandas-dev/pandas/issues/11858))
- en: Bug in area plot draws legend incorrectly if subplot is enabled or legend is
    moved after plot (matplotlib 1.5.0 is required to draw area plot legend properly)
    ([GH 9161](https://github.com/pandas-dev/pandas/issues/9161), [GH 13544](https://github.com/pandas-dev/pandas/issues/13544))
  id: totrans-1555
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在区域图绘制中存在的一个bug，如果启用了子图或在绘图后移动图例，图例会被错误地绘制（需要matplotlib 1.5.0才能正确绘制区域图图例）。([GH
    9161](https://github.com/pandas-dev/pandas/issues/9161), [GH 13544](https://github.com/pandas-dev/pandas/issues/13544))
- en: Bug in `DataFrame` assignment with an object-dtyped `Index` where the resultant
    column is mutable to the original object. ([GH 13522](https://github.com/pandas-dev/pandas/issues/13522))
  id: totrans-1556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用对象数据类型`Index`进行`DataFrame`赋值时存在的一个bug，导致结果列对原始对象可变。([GH 13522](https://github.com/pandas-dev/pandas/issues/13522))
- en: Bug in matplotlib `AutoDataFormatter`; this restores the second scaled formatting
    and re-adds micro-second scaled formatting ([GH 13131](https://github.com/pandas-dev/pandas/issues/13131))
  id: totrans-1557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在matplotlib `AutoDataFormatter`中存在的一个bug；这将恢复第二个缩放格式并重新添加微秒缩放格式。([GH 13131](https://github.com/pandas-dev/pandas/issues/13131))
- en: Bug in selection from a `HDFStore` with a fixed format and `start` and/or `stop`
    specified will now return the selected range ([GH 8287](https://github.com/pandas-dev/pandas/issues/8287))
  id: totrans-1558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用固定格式和指定`start`和/或`stop`的`HDFStore`进行选择时，现在将返回所选范围。([GH 8287](https://github.com/pandas-dev/pandas/issues/8287))
- en: Bug in `Categorical.from_codes()` where an unhelpful error was raised when an
    invalid `ordered` parameter was passed in ([GH 14058](https://github.com/pandas-dev/pandas/issues/14058))
  id: totrans-1559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`Categorical.from_codes()`中存在的一个bug，当传递无效的`ordered`参数时会引发一个无用的错误。([GH 14058](https://github.com/pandas-dev/pandas/issues/14058))
- en: Bug in `Series` construction from a tuple of integers on windows not returning
    default dtype (int64) ([GH 13646](https://github.com/pandas-dev/pandas/issues/13646))
  id: totrans-1560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Windows上从整数元组构建`Series`时未返回默认的数据类型（int64）的bug。([GH 13646](https://github.com/pandas-dev/pandas/issues/13646))
- en: Bug in `TimedeltaIndex` addition with a Datetime-like object where addition
    overflow was not being caught ([GH 14068](https://github.com/pandas-dev/pandas/issues/14068))
  id: totrans-1561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`TimedeltaIndex`与类似日期时间对象相加时存在的一个bug，未能捕获加法溢出。([GH 14068](https://github.com/pandas-dev/pandas/issues/14068))
- en: Bug in `.groupby(..).resample(..)` when the same object is called multiple times
    ([GH 13174](https://github.com/pandas-dev/pandas/issues/13174))
  id: totrans-1562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在多次调用相同对象时，`.groupby(..).resample(..)`中存在的一个bug。([GH 13174](https://github.com/pandas-dev/pandas/issues/13174))
- en: Bug in `.to_records()` when index name is a unicode string ([GH 13172](https://github.com/pandas-dev/pandas/issues/13172))
  id: totrans-1563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在索引名称为Unicode字符串时，`.to_records()`中存在的一个bug。([GH 13172](https://github.com/pandas-dev/pandas/issues/13172))
- en: Bug in calling `.memory_usage()` on object which doesn’t implement ([GH 12924](https://github.com/pandas-dev/pandas/issues/12924))
  id: totrans-1564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在调用未实现的对象上的`.memory_usage()`中存在的一个bug。([GH 12924](https://github.com/pandas-dev/pandas/issues/12924))
- en: Regression in `Series.quantile` with nans (also shows up in `.median()` and
    `.describe()` ); furthermore now names the `Series` with the quantile ([GH 13098](https://github.com/pandas-dev/pandas/issues/13098),
    [GH 13146](https://github.com/pandas-dev/pandas/issues/13146))
  id: totrans-1565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有nans的`Series.quantile`中的回归（也出现在`.median()`和`.describe()`中）；此外，现在使用分位数命名`Series`（[GH
    13098](https://github.com/pandas-dev/pandas/issues/13098)，[GH 13146](https://github.com/pandas-dev/pandas/issues/13146)）
- en: Bug in `SeriesGroupBy.transform` with datetime values and missing groups ([GH
    13191](https://github.com/pandas-dev/pandas/issues/13191))
  id: totrans-1566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有日期时间值和缺失组的`SeriesGroupBy.transform`中的错误（[GH 13191](https://github.com/pandas-dev/pandas/issues/13191)）
- en: Bug where empty `Series` were incorrectly coerced in datetime-like numeric operations
    ([GH 13844](https://github.com/pandas-dev/pandas/issues/13844))
  id: totrans-1567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空`Series`在类似日期时间的数值操作中被错误地强制转换的错误（[GH 13844](https://github.com/pandas-dev/pandas/issues/13844)）
- en: Bug in `Categorical` constructor when passed a `Categorical` containing datetimes
    with timezones ([GH 14190](https://github.com/pandas-dev/pandas/issues/14190))
  id: totrans-1568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当传递带有时区的日期时间的`Categorical`时，`Categorical`构造函数中的错误（[GH 14190](https://github.com/pandas-dev/pandas/issues/14190)）
- en: Bug in `Series.str.extractall()` with `str` index raises `ValueError` ([GH 13156](https://github.com/pandas-dev/pandas/issues/13156))
  id: totrans-1569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`str`索引时，`Series.str.extractall()`引发`ValueError`的错误（[GH 13156](https://github.com/pandas-dev/pandas/issues/13156)）
- en: Bug in `Series.str.extractall()` with single group and quantifier ([GH 13382](https://github.com/pandas-dev/pandas/issues/13382))
  id: totrans-1570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用单个组和量词时，`Series.str.extractall()`中的错误（[GH 13382](https://github.com/pandas-dev/pandas/issues/13382)）
- en: Bug in `DatetimeIndex` and `Period` subtraction raises `ValueError` or `AttributeError`
    rather than `TypeError` ([GH 13078](https://github.com/pandas-dev/pandas/issues/13078))
  id: totrans-1571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DatetimeIndex`和`Period`相减引发`ValueError`或`AttributeError`而不是`TypeError`的错误（[GH
    13078](https://github.com/pandas-dev/pandas/issues/13078)）'
- en: Bug in `Index` and `Series` created with `NaN` and `NaT` mixed data may not
    have `datetime64` dtype ([GH 13324](https://github.com/pandas-dev/pandas/issues/13324))
  id: totrans-1572
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`NaN`和`NaT`混合数据创建的`Index`和`Series`可能没有`datetime64`数据类型的错误（[GH 13324](https://github.com/pandas-dev/pandas/issues/13324)）
- en: Bug in `Index` and `Series` may ignore `np.datetime64('nat')` and `np.timdelta64('nat')`
    to infer dtype ([GH 13324](https://github.com/pandas-dev/pandas/issues/13324))
  id: totrans-1573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能会忽略`np.datetime64('nat')`和`np.timdelta64('nat')`以推断数据类型的错误（[GH 13324](https://github.com/pandas-dev/pandas/issues/13324)）
- en: Bug in `PeriodIndex` and `Period` subtraction raises `AttributeError` ([GH 13071](https://github.com/pandas-dev/pandas/issues/13071))
  id: totrans-1574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PeriodIndex`和`Period`相减引发`AttributeError`的错误（[GH 13071](https://github.com/pandas-dev/pandas/issues/13071)）'
- en: Bug in `PeriodIndex` construction returning a `float64` index in some circumstances
    ([GH 13067](https://github.com/pandas-dev/pandas/issues/13067))
  id: totrans-1575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些情况下返回`float64`索引的`PeriodIndex`构造中的错误（[GH 13067](https://github.com/pandas-dev/pandas/issues/13067)）
- en: Bug in `.resample(..)` with a `PeriodIndex` not changing its `freq` appropriately
    when empty ([GH 13067](https://github.com/pandas-dev/pandas/issues/13067))
  id: totrans-1576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用空时，`.resample(..)`中的`PeriodIndex`不会适当地更改其`freq`的错误（[GH 13067](https://github.com/pandas-dev/pandas/issues/13067)）
- en: Bug in `.resample(..)` with a `PeriodIndex` not retaining its type or name with
    an empty `DataFrame` appropriately when empty ([GH 13212](https://github.com/pandas-dev/pandas/issues/13212))
  id: totrans-1577
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用空`DataFrame`时，`.resample(..)`中的`PeriodIndex`不会保留其类型或名称的错误（[GH 13212](https://github.com/pandas-dev/pandas/issues/13212)）
- en: Bug in `groupby(..).apply(..)` when the passed function returns scalar values
    per group ([GH 13468](https://github.com/pandas-dev/pandas/issues/13468)).
  id: totrans-1578
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当传递的函数每组返回标量值时，`groupby(..).apply(..)`中的错误（[GH 13468](https://github.com/pandas-dev/pandas/issues/13468)）
- en: Bug in `groupby(..).resample(..)` where passing some keywords would raise an
    exception ([GH 13235](https://github.com/pandas-dev/pandas/issues/13235))
  id: totrans-1579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递某些关键字会引发异常的`groupby(..).resample(..)`中的错误（[GH 13235](https://github.com/pandas-dev/pandas/issues/13235)）
- en: Bug in `.tz_convert` on a tz-aware `DateTimeIndex` that relied on index being
    sorted for correct results ([GH 13306](https://github.com/pandas-dev/pandas/issues/13306))
  id: totrans-1580
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖于索引排序以获得正确结果的tz-aware`DateTimeIndex`上的`.tz_convert`中的错误（[GH 13306](https://github.com/pandas-dev/pandas/issues/13306)）
- en: Bug in `.tz_localize` with `dateutil.tz.tzlocal` may return incorrect result
    ([GH 13583](https://github.com/pandas-dev/pandas/issues/13583))
  id: totrans-1581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`dateutil.tz.tzlocal`的`.tz_localize`可能返回不正确的结果的错误（[GH 13583](https://github.com/pandas-dev/pandas/issues/13583)）
- en: Bug in `DatetimeTZDtype` dtype with `dateutil.tz.tzlocal` cannot be regarded
    as valid dtype ([GH 13583](https://github.com/pandas-dev/pandas/issues/13583))
  id: totrans-1582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`dateutil.tz.tzlocal`的`DatetimeTZDtype`数据类型无法被视为有效数据类型的错误（[GH 13583](https://github.com/pandas-dev/pandas/issues/13583)）
- en: Bug in `pd.read_hdf()` where attempting to load an HDF file with a single dataset,
    that had one or more categorical columns, failed unless the key argument was set
    to the name of the dataset. ([GH 13231](https://github.com/pandas-dev/pandas/issues/13231))
  id: totrans-1583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `pd.read_hdf()` 在尝试加载具有单个数据集且具有一个或多个分类列的 HDF 文件时失败，除非将 key 参数设置为数据集的名称。([GH
    13231](https://github.com/pandas-dev/pandas/issues/13231))
- en: Bug in `.rolling()` that allowed a negative integer window in construction of
    the `Rolling()` object, but would later fail on aggregation ([GH 13383](https://github.com/pandas-dev/pandas/issues/13383))
  id: totrans-1584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `.rolling()` 允许在构建 `Rolling()` 对象时使用负整数窗口，但在聚合时会失败。([GH 13383](https://github.com/pandas-dev/pandas/issues/13383))
- en: Bug in `Series` indexing with tuple-valued data and a numeric index ([GH 13509](https://github.com/pandas-dev/pandas/issues/13509))
  id: totrans-1585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in 使用元组值数据和数值索引的 `Series` 索引。([GH 13509](https://github.com/pandas-dev/pandas/issues/13509))
- en: Bug in printing `pd.DataFrame` where unusual elements with the `object` dtype
    were causing segfaults ([GH 13717](https://github.com/pandas-dev/pandas/issues/13717))
  id: totrans-1586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in 打印 `pd.DataFrame` 时，具有 `object` dtype 的异常元素导致段错误。([GH 13717](https://github.com/pandas-dev/pandas/issues/13717))
- en: Bug in ranking `Series` which could result in segfaults ([GH 13445](https://github.com/pandas-dev/pandas/issues/13445))
  id: totrans-1587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in 排名 `Series` 可能导致段错误。([GH 13445](https://github.com/pandas-dev/pandas/issues/13445))
- en: Bug in various index types, which did not propagate the name of passed index
    ([GH 12309](https://github.com/pandas-dev/pandas/issues/12309))
  id: totrans-1588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in 各种索引类型，未传播传递的索引名称。([GH 12309](https://github.com/pandas-dev/pandas/issues/12309))
- en: Bug in `DatetimeIndex`, which did not honour the `copy=True` ([GH 13205](https://github.com/pandas-dev/pandas/issues/13205))
  id: totrans-1589
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `DatetimeIndex`，未遵守 `copy=True`。([GH 13205](https://github.com/pandas-dev/pandas/issues/13205))
- en: Bug in `DatetimeIndex.is_normalized` returns incorrectly for normalized date_range
    in case of local timezones ([GH 13459](https://github.com/pandas-dev/pandas/issues/13459))
  id: totrans-1590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `DatetimeIndex.is_normalized` 对于本地时区的规范化 date_range 返回不正确。([GH 13459](https://github.com/pandas-dev/pandas/issues/13459))
- en: Bug in `pd.concat` and `.append` may coerces `datetime64` and `timedelta` to
    `object` dtype containing python built-in `datetime` or `timedelta` rather than
    `Timestamp` or `Timedelta` ([GH 13626](https://github.com/pandas-dev/pandas/issues/13626))
  id: totrans-1591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `pd.concat` 和 `.append` 可能会将 `datetime64` 和 `timedelta` 强制转换为包含 Python
    内置 `datetime` 或 `timedelta` 而不是 `Timestamp` 或 `Timedelta` 的 `object` dtype。([GH
    13626](https://github.com/pandas-dev/pandas/issues/13626))
- en: Bug in `PeriodIndex.append` may raises `AttributeError` when the result is `object`
    dtype ([GH 13221](https://github.com/pandas-dev/pandas/issues/13221))
  id: totrans-1592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `PeriodIndex.append` 当结果为 `object` dtype 时可能引发 `AttributeError`。([GH
    13221](https://github.com/pandas-dev/pandas/issues/13221))
- en: Bug in `CategoricalIndex.append` may accept normal `list` ([GH 13626](https://github.com/pandas-dev/pandas/issues/13626))
  id: totrans-1593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `CategoricalIndex.append` 可能接受普通的 `list`。([GH 13626](https://github.com/pandas-dev/pandas/issues/13626))
- en: Bug in `pd.concat` and `.append` with the same timezone get reset to UTC ([GH
    7795](https://github.com/pandas-dev/pandas/issues/7795))
  id: totrans-1594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `pd.concat` 和 `.append` 具有相同时区时，会重置为 UTC。([GH 7795](https://github.com/pandas-dev/pandas/issues/7795))
- en: Bug in `Series` and `DataFrame` `.append` raises `AmbiguousTimeError` if data
    contains datetime near DST boundary ([GH 13626](https://github.com/pandas-dev/pandas/issues/13626))
  id: totrans-1595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `Series` 和 `DataFrame` `.append` 如果���据包含接近 DST 边界的日期时间，则引发 `AmbiguousTimeError`。([GH
    13626](https://github.com/pandas-dev/pandas/issues/13626))
- en: Bug in `DataFrame.to_csv()` in which float values were being quoted even though
    quotations were specified for non-numeric values only ([GH 12922](https://github.com/pandas-dev/pandas/issues/12922),
    [GH 13259](https://github.com/pandas-dev/pandas/issues/13259))
  id: totrans-1596
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `DataFrame.to_csv()` 中，即使仅为非数字值指定引号，浮点值也被引用。([GH 12922](https://github.com/pandas-dev/pandas/issues/12922),
    [GH 13259](https://github.com/pandas-dev/pandas/issues/13259))
- en: Bug in `DataFrame.describe()` raising `ValueError` with only boolean columns
    ([GH 13898](https://github.com/pandas-dev/pandas/issues/13898))
  id: totrans-1597
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `DataFrame.describe()` 仅包含布尔列时引发 `ValueError`。([GH 13898](https://github.com/pandas-dev/pandas/issues/13898))
- en: Bug in `MultiIndex` slicing where extra elements were returned when level is
    non-unique ([GH 12896](https://github.com/pandas-dev/pandas/issues/12896))
  id: totrans-1598
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `MultiIndex` 切片中，当级别非唯一时，会返回额外的元素。([GH 12896](https://github.com/pandas-dev/pandas/issues/12896))
- en: Bug in `.str.replace` does not raise `TypeError` for invalid replacement ([GH
    13438](https://github.com/pandas-dev/pandas/issues/13438))
  id: totrans-1599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `.str.replace` 对于无效的替换不会引发 `TypeError`。([GH 13438](https://github.com/pandas-dev/pandas/issues/13438))
- en: Bug in `MultiIndex.from_arrays` which didn’t check for input array lengths matching
    ([GH 13599](https://github.com/pandas-dev/pandas/issues/13599))
  id: totrans-1600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `MultiIndex.from_arrays` 未检查输入数组长度是否匹配。([GH 13599](https://github.com/pandas-dev/pandas/issues/13599))
- en: Bug in `cartesian_product` and `MultiIndex.from_product` which may raise with
    empty input arrays ([GH 12258](https://github.com/pandas-dev/pandas/issues/12258))
  id: totrans-1601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `cartesian_product` 和 `MultiIndex.from_product` 中存在一个 bug，可能会因为空输入数组而引发错误（[GH
    12258](https://github.com/pandas-dev/pandas/issues/12258)）。
- en: Bug in `pd.read_csv()` which may cause a segfault or corruption when iterating
    in large chunks over a stream/file under rare circumstances ([GH 13703](https://github.com/pandas-dev/pandas/issues/13703))
  id: totrans-1602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在极少情况下，使用大块数据流/文件进行迭代时，`pd.read_csv()` 中存在一个 bug，可能导致 segfault 或数据损坏（[GH 13703](https://github.com/pandas-dev/pandas/issues/13703)）。
- en: Bug in `pd.read_csv()` which caused errors to be raised when a dictionary containing
    scalars is passed in for `na_values` ([GH 12224](https://github.com/pandas-dev/pandas/issues/12224))
  id: totrans-1603
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，当传递包含标量的字典作为 `na_values` 参数时，会引发错误（[GH 12224](https://github.com/pandas-dev/pandas/issues/12224)）。
- en: Bug in `pd.read_csv()` which caused BOM files to be incorrectly parsed by not
    ignoring the BOM ([GH 4793](https://github.com/pandas-dev/pandas/issues/4793))
  id: totrans-1604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，由于未忽略 BOM（字节顺序标记），导致 BOM 文件被错误解析（[GH 4793](https://github.com/pandas-dev/pandas/issues/4793)）。
- en: Bug in `pd.read_csv()` with `engine='python'` which raised errors when a numpy
    array was passed in for `usecols` ([GH 12546](https://github.com/pandas-dev/pandas/issues/12546))
  id: totrans-1605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，当传递一个 numpy 数组作为 `usecols` 参数时，会引发错误（[GH 12546](https://github.com/pandas-dev/pandas/issues/12546)）。
- en: Bug in `pd.read_csv()` where the index columns were being incorrectly parsed
    when parsed as dates with a `thousands` parameter ([GH 14066](https://github.com/pandas-dev/pandas/issues/14066))
  id: totrans-1606
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当使用 `thousands` 参数解析日期时，`pd.read_csv()` 中的索引列被错误解析为日期（[GH 14066](https://github.com/pandas-dev/pandas/issues/14066)）。
- en: Bug in `pd.read_csv()` with `engine='python'` in which `NaN` values weren’t
    being detected after data was converted to numeric values ([GH 13314](https://github.com/pandas-dev/pandas/issues/13314))
  id: totrans-1607
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，当数据被转换为数值后，未能正确检测到 `NaN` 值（[GH 13314](https://github.com/pandas-dev/pandas/issues/13314)）。
- en: Bug in `pd.read_csv()` in which the `nrows` argument was not properly validated
    for both engines ([GH 10476](https://github.com/pandas-dev/pandas/issues/10476))
  id: totrans-1608
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在两种引擎中，`pd.read_csv()` 中的 `nrows` 参数未被正确验证（[GH 10476](https://github.com/pandas-dev/pandas/issues/10476)）。
- en: Bug in `pd.read_csv()` with `engine='python'` in which infinities of mixed-case
    forms were not being interpreted properly ([GH 13274](https://github.com/pandas-dev/pandas/issues/13274))
  id: totrans-1609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，未能正确解释大小写混合形式的无穷大数值（[GH 13274](https://github.com/pandas-dev/pandas/issues/13274)）。
- en: Bug in `pd.read_csv()` with `engine='python'` in which trailing `NaN` values
    were not being parsed ([GH 13320](https://github.com/pandas-dev/pandas/issues/13320))
  id: totrans-1610
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，当 `engine='python'` 时，尾随的 `NaN` 值未被解析（[GH 13320](https://github.com/pandas-dev/pandas/issues/13320)）。
- en: Bug in `pd.read_csv()` with `engine='python'` when reading from a `tempfile.TemporaryFile`
    on Windows with Python 3 ([GH 13398](https://github.com/pandas-dev/pandas/issues/13398))
  id: totrans-1611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 中使用 Python 3 时，从 `tempfile.TemporaryFile` 读取时，`pd.read_csv()` 中存在一个
    bug（[GH 13398](https://github.com/pandas-dev/pandas/issues/13398)）。
- en: Bug in `pd.read_csv()` that prevents `usecols` kwarg from accepting single-byte
    unicode strings ([GH 13219](https://github.com/pandas-dev/pandas/issues/13219))
  id: totrans-1612
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，阻止 `usecols` 参数接受单字节 Unicode 字符串（[GH 13219](https://github.com/pandas-dev/pandas/issues/13219)）。
- en: Bug in `pd.read_csv()` that prevents `usecols` from being an empty set ([GH
    13402](https://github.com/pandas-dev/pandas/issues/13402))
  id: totrans-1613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，阻止 `usecols` 参数为空集合（[GH 13402](https://github.com/pandas-dev/pandas/issues/13402)）。
- en: Bug in `pd.read_csv()` in the C engine where the NULL character was not being
    parsed as NULL ([GH 14012](https://github.com/pandas-dev/pandas/issues/14012))
  id: totrans-1614
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 C 引擎中，`pd.read_csv()` 存在一个 bug，未能将 NULL 字符解析为 NULL（[GH 14012](https://github.com/pandas-dev/pandas/issues/14012)）。
- en: Bug in `pd.read_csv()` with `engine='c'` in which NULL `quotechar` was not accepted
    even though `quoting` was specified as `None` ([GH 13411](https://github.com/pandas-dev/pandas/issues/13411))
  id: totrans-1615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，当 `quoting` 被指定为 `None` 时，不接受 NULL 的 `quotechar`，即使
    `quoting` 参数被指定为 `None`（[GH 13411](https://github.com/pandas-dev/pandas/issues/13411)）。
- en: Bug in `pd.read_csv()` with `engine='c'` in which fields were not properly cast
    to float when quoting was specified as non-numeric ([GH 13411](https://github.com/pandas-dev/pandas/issues/13411))
  id: totrans-1616
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中存在一个 bug，当引号被指定为非数值时，字段未正确转换为浮点数（[GH 13411](https://github.com/pandas-dev/pandas/issues/13411)）。
- en: Bug in `pd.read_csv()` in Python 2.x with non-UTF8 encoded, multi-character
    separated data ([GH 3404](https://github.com/pandas-dev/pandas/issues/3404))
  id: totrans-1617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python 2.x 中，`pd.read_csv()` 存在一个 bug，处理非 UTF8 编码的、多字符分隔的数据时会出现问题（[GH 3404](https://github.com/pandas-dev/pandas/issues/3404)）。
- en: Bug in `pd.read_csv()`, where aliases for utf-xx (e.g. UTF-xx, UTF_xx, utf_xx)
    raised UnicodeDecodeError ([GH 13549](https://github.com/pandas-dev/pandas/issues/13549))
  id: totrans-1618
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv()` 中，utf-xx 的别名（例如 UTF-xx、UTF_xx、utf_xx）引发了 UnicodeDecodeError。（[GH
    13549](https://github.com/pandas-dev/pandas/issues/13549)）
- en: Bug in `pd.read_csv`, `pd.read_table`, `pd.read_fwf`, `pd.read_stata` and `pd.read_sas`
    where files were opened by parsers but not closed if both `chunksize` and `iterator`
    were `None`. ([GH 13940](https://github.com/pandas-dev/pandas/issues/13940))
  id: totrans-1619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.read_csv`、`pd.read_table`、`pd.read_fwf`、`pd.read_stata` 和 `pd.read_sas`
    中，如果 `chunksize` 和 `iterator` 都是 `None`，则解析器打开但未关闭文件。（[GH 13940](https://github.com/pandas-dev/pandas/issues/13940)）
- en: Bug in `StataReader`, `StataWriter`, `XportReader` and `SAS7BDATReader` where
    a file was not properly closed when an error was raised. ([GH 13940](https://github.com/pandas-dev/pandas/issues/13940))
  id: totrans-1620
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `StataReader`、`StataWriter`、`XportReader` 和 `SAS7BDATReader` 中存在的 Bug，在出现错误时未正确关闭文件。（[GH
    13940](https://github.com/pandas-dev/pandas/issues/13940)）
- en: Bug in `pd.pivot_table()` where `margins_name` is ignored when `aggfunc` is
    a list ([GH 13354](https://github.com/pandas-dev/pandas/issues/13354))
  id: totrans-1621
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.pivot_table()` 中，当 `aggfunc` 是列表时，会忽略 `margins_name`。（[GH 13354](https://github.com/pandas-dev/pandas/issues/13354)）
- en: Bug in `pd.Series.str.zfill`, `center`, `ljust`, `rjust`, and `pad` when passing
    non-integers, did not raise `TypeError` ([GH 13598](https://github.com/pandas-dev/pandas/issues/13598))
  id: totrans-1622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.Series.str.zfill`、`center`、`ljust`、`rjust` 和 `pad` 中传递非整数时，未引发 `TypeError`。（[GH
    13598](https://github.com/pandas-dev/pandas/issues/13598)）
- en: Bug in checking for any null objects in a `TimedeltaIndex`, which always returned
    `True` ([GH 13603](https://github.com/pandas-dev/pandas/issues/13603))
  id: totrans-1623
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在检查 `TimedeltaIndex` 中是否存在任何空对象时，始终返回 `True`。（[GH 13603](https://github.com/pandas-dev/pandas/issues/13603)）
- en: Bug in `Series` arithmetic raises `TypeError` if it contains datetime-like as
    `object` dtype ([GH 13043](https://github.com/pandas-dev/pandas/issues/13043))
  id: totrans-1624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series` 进行算术运算时，如果包含 `object` dtype 的日期时间，则引发 `TypeError`。（[GH 13043](https://github.com/pandas-dev/pandas/issues/13043)）
- en: Bug `Series.isnull()` and `Series.notnull()` ignore `Period('NaT')` ([GH 13737](https://github.com/pandas-dev/pandas/issues/13737))
  id: totrans-1625
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series.isnull()` 和 `Series.notnull()` 中忽略 `Period('NaT')`。（[GH 13737](https://github.com/pandas-dev/pandas/issues/13737)）
- en: Bug `Series.fillna()` and `Series.dropna()` don’t affect to `Period('NaT')`
    ([GH 13737](https://github.com/pandas-dev/pandas/issues/13737)
  id: totrans-1626
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series.fillna()` 和 `Series.dropna()` 中不影响 `Period('NaT')`。（[GH 13737](https://github.com/pandas-dev/pandas/issues/13737)）
- en: Bug in `.fillna(value=np.nan)` incorrectly raises `KeyError` on a `category`
    dtyped `Series` ([GH 14021](https://github.com/pandas-dev/pandas/issues/14021))
  id: totrans-1627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.fillna(value=np.nan)` 中错误地在 `category` dtype 的 `Series` 上引发 `KeyError`。（[GH
    14021](https://github.com/pandas-dev/pandas/issues/14021)）
- en: Bug in extension dtype creation where the created types were not is/identical
    ([GH 13285](https://github.com/pandas-dev/pandas/issues/13285))
  id: totrans-1628
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在扩展 dtype 创建中存在的 Bug，创建的类型不是 / 不完全相同。（[GH 13285](https://github.com/pandas-dev/pandas/issues/13285)）
- en: Bug in `.resample(..)` where incorrect warnings were triggered by IPython introspection
    ([GH 13618](https://github.com/pandas-dev/pandas/issues/13618))
  id: totrans-1629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.resample(..)` 中，IPython 内省错误地触发了不正确的警告。（[GH 13618](https://github.com/pandas-dev/pandas/issues/13618)）
- en: Bug in `NaT` - `Period` raises `AttributeError` ([GH 13071](https://github.com/pandas-dev/pandas/issues/13071))
  id: totrans-1630
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `NaT` - `Period` 中引发 `AttributeError`。（[GH 13071](https://github.com/pandas-dev/pandas/issues/13071)）
- en: Bug in `Series` comparison may output incorrect result if rhs contains `NaT`
    ([GH 9005](https://github.com/pandas-dev/pandas/issues/9005))
  id: totrans-1631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series` 比较中，如果 rhs 包含 `NaT`，可能会输出错误的结果。（[GH 9005](https://github.com/pandas-dev/pandas/issues/9005)）
- en: Bug in `Series` and `Index` comparison may output incorrect result if it contains
    `NaT` with `object` dtype ([GH 13592](https://github.com/pandas-dev/pandas/issues/13592))
  id: totrans-1632
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series` 和 `Index` 比较中，如果包含 `object` dtype 的 `NaT`，可能会输出不正确的结果。（[GH 13592](https://github.com/pandas-dev/pandas/issues/13592)）
- en: Bug in `Period` addition raises `TypeError` if `Period` is on right hand side
    ([GH 13069](https://github.com/pandas-dev/pandas/issues/13069))
  id: totrans-1633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Period` 相加时，如果右侧是 `Period`，会引发 `TypeError`。（[GH 13069](https://github.com/pandas-dev/pandas/issues/13069)）
- en: Bug in `Period` and `Series` or `Index` comparison raises `TypeError` ([GH 13200](https://github.com/pandas-dev/pandas/issues/13200))
  id: totrans-1634
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Period` 和 `Series` 或 `Index` 比较中引发 `TypeError`。（[GH 13200](https://github.com/pandas-dev/pandas/issues/13200)）
- en: Bug in `pd.set_eng_float_format()` that would prevent NaN and Inf from formatting
    ([GH 11981](https://github.com/pandas-dev/pandas/issues/11981))
  id: totrans-1635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bug in `pd.set_eng_float_format()` 会导致 NaN 和 Inf 的格式化失败（[GH 11981](https://github.com/pandas-dev/pandas/issues/11981)）
- en: Bug in `.unstack` with `Categorical` dtype resets `.ordered` to `True` ([GH
    13249](https://github.com/pandas-dev/pandas/issues/13249))
  id: totrans-1636
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `.unstack` 中，使用 `Categorical` dtype 会重置 `.ordered` 为 `True`。（[GH 13249](https://github.com/pandas-dev/pandas/issues/13249)）
- en: Clean some compile time warnings in datetime parsing ([GH 13607](https://github.com/pandas-dev/pandas/issues/13607))
  id: totrans-1637
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清理一些编译时警告在日期时间解析中（[GH 13607](https://github.com/pandas-dev/pandas/issues/13607)）
- en: Bug in `factorize` raises `AmbiguousTimeError` if data contains datetime near
    DST boundary ([GH 13750](https://github.com/pandas-dev/pandas/issues/13750))
  id: totrans-1638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`factorize`中存在错误，如果数据包含接近 DST 边界的日期时间，则会引发`AmbiguousTimeError`（[GH 13750](https://github.com/pandas-dev/pandas/issues/13750)）
- en: Bug in `.set_index` raises `AmbiguousTimeError` if new index contains DST boundary
    and multi levels ([GH 12920](https://github.com/pandas-dev/pandas/issues/12920))
  id: totrans-1639
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`.set_index`中存在错误，如果新索引包含 DST 边界和多级时会引发`AmbiguousTimeError`（[GH 12920](https://github.com/pandas-dev/pandas/issues/12920)）
- en: Bug in `.shift` raises `AmbiguousTimeError` if data contains datetime near DST
    boundary ([GH 13926](https://github.com/pandas-dev/pandas/issues/13926))
  id: totrans-1640
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在数据包含接近 DST 边界的日期时间时，使用`.shift`会引发`AmbiguousTimeError`的错误（[GH 13926](https://github.com/pandas-dev/pandas/issues/13926)）
- en: Bug in `pd.read_hdf()` returns incorrect result when a `DataFrame` with a `categorical`
    column and a query which doesn’t match any values ([GH 13792](https://github.com/pandas-dev/pandas/issues/13792))
  id: totrans-1641
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`pd.read_hdf()`中存在错误，当`DataFrame`具有`categorical`列且查询不匹配任何值时，返回的结果可能不正确（[GH
    13792](https://github.com/pandas-dev/pandas/issues/13792)）
- en: Bug in `.iloc` when indexing with a non lexsorted MultiIndex ([GH 13797](https://github.com/pandas-dev/pandas/issues/13797))
  id: totrans-1642
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用非 lexsorted MultiIndex 进行索引时，使用`.iloc`存在错误（[GH 13797](https://github.com/pandas-dev/pandas/issues/13797)）
- en: Bug in `.loc` when indexing with date strings in a reverse sorted `DatetimeIndex`
    ([GH 14316](https://github.com/pandas-dev/pandas/issues/14316))
  id: totrans-1643
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用日期字符串进行索引时，如果是逆排序的`DatetimeIndex`，在`.loc`中存在错误（[GH 14316](https://github.com/pandas-dev/pandas/issues/14316)）
- en: Bug in `Series` comparison operators when dealing with zero dim NumPy arrays
    ([GH 13006](https://github.com/pandas-dev/pandas/issues/13006))
  id: totrans-1644
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在处理零维 NumPy 数组时，`Series`比较运算符存在错误（[GH 13006](https://github.com/pandas-dev/pandas/issues/13006)）
- en: Bug in `.combine_first` may return incorrect `dtype` ([GH 7630](https://github.com/pandas-dev/pandas/issues/7630),
    [GH 10567](https://github.com/pandas-dev/pandas/issues/10567))
  id: totrans-1645
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`.combine_first`中存在错误，可能会返回不正确的`dtype`（[GH 7630](https://github.com/pandas-dev/pandas/issues/7630)，[GH
    10567](https://github.com/pandas-dev/pandas/issues/10567)）
- en: Bug in `groupby` where `apply` returns different result depending on whether
    first result is `None` or not ([GH 12824](https://github.com/pandas-dev/pandas/issues/12824))
  id: totrans-1646
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`groupby`中存在错误，如果`apply`返回的第一个结果是`None`，则返回结果会不同（[GH 12824](https://github.com/pandas-dev/pandas/issues/12824)）
- en: Bug in `groupby(..).nth()` where the group key is included inconsistently if
    called after `.head()/.tail()` ([GH 12839](https://github.com/pandas-dev/pandas/issues/12839))
  id: totrans-1647
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`groupby(..).nth()`中存在错误，如果在`.head()/.tail()`之后调用，组键的包含方式会不一致（[GH 12839](https://github.com/pandas-dev/pandas/issues/12839)）
- en: Bug in `.to_html`, `.to_latex` and `.to_string` silently ignore custom datetime
    formatter passed through the `formatters` key word ([GH 10690](https://github.com/pandas-dev/pandas/issues/10690))
  id: totrans-1648
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`.to_html`、`.to_latex`和`.to_string`中存在错误，通过`formatters`关键字传递的自定义日期时间格式化程序会被静默忽略（[GH
    10690](https://github.com/pandas-dev/pandas/issues/10690)）
- en: Bug in `DataFrame.iterrows()`, not yielding a `Series` subclasse if defined
    ([GH 13977](https://github.com/pandas-dev/pandas/issues/13977))
  id: totrans-1649
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`DataFrame.iterrows()`中存在错误，如果已定义但未生成`Series`子类，则不会生成（[GH 13977](https://github.com/pandas-dev/pandas/issues/13977)）
- en: Bug in `pd.to_numeric` when `errors='coerce'` and input contains non-hashable
    objects ([GH 13324](https://github.com/pandas-dev/pandas/issues/13324))
  id: totrans-1650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用`pd.to_numeric`时存在错误，当`errors='coerce'`且输入包含非可哈希对象时（[GH 13324](https://github.com/pandas-dev/pandas/issues/13324)）
- en: Bug in invalid `Timedelta` arithmetic and comparison may raise `ValueError`
    rather than `TypeError` ([GH 13624](https://github.com/pandas-dev/pandas/issues/13624))
  id: totrans-1651
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在无效的`Timedelta`算术和比较中可能会引发`ValueError`而不是`TypeError`（[GH 13624](https://github.com/pandas-dev/pandas/issues/13624)）
- en: Bug in invalid datetime parsing in `to_datetime` and `DatetimeIndex` may raise
    `TypeError` rather than `ValueError` ([GH 11169](https://github.com/pandas-dev/pandas/issues/11169),
    [GH 11287](https://github.com/pandas-dev/pandas/issues/11287))
  id: totrans-1652
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`to_datetime`和`DatetimeIndex`中存在无效日期时间解析的错误，可能会引发`TypeError`而不是`ValueError`（[GH
    11169](https://github.com/pandas-dev/pandas/issues/11169)，[GH 11287](https://github.com/pandas-dev/pandas/issues/11287)）
- en: Bug in `Index` created with tz-aware `Timestamp` and mismatched `tz` option
    incorrectly coerces timezone ([GH 13692](https://github.com/pandas-dev/pandas/issues/13692))
  id: totrans-1653
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用时区感知的`Timestamp`创建的`Index`中存在错误，并且`tz`选项不匹配时，会错误地强制转换时区（[GH 13692](https://github.com/pandas-dev/pandas/issues/13692)）
- en: Bug in `DatetimeIndex` with nanosecond frequency does not include timestamp
    specified with `end` ([GH 13672](https://github.com/pandas-dev/pandas/issues/13672))
  id: totrans-1654
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在纳秒频率的`DatetimeIndex`中存在错误，不包括使用`end`指定的时间戳（[GH 13672](https://github.com/pandas-dev/pandas/issues/13672)）
- en: Bug in `Series` when setting a slice with a `np.timedelta64` ([GH 14155](https://github.com/pandas-dev/pandas/issues/14155))
  id: totrans-1655
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Series` 中存在 Bug，在使用 `np.timedelta64` 设置切片时 ([GH 14155](https://github.com/pandas-dev/pandas/issues/14155))
- en: Bug in `Index` raises `OutOfBoundsDatetime` if `datetime` exceeds `datetime64[ns]`
    bounds, rather than coercing to `object` dtype ([GH 13663](https://github.com/pandas-dev/pandas/issues/13663))
  id: totrans-1656
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Index` 中存在 Bug，如果 `datetime` 超出 `datetime64[ns]` 的范围，则会引发 `OutOfBoundsDatetime`
    错误，而不是强制转换为 `object` 数据类型 ([GH 13663](https://github.com/pandas-dev/pandas/issues/13663))
- en: Bug in `Index` may ignore specified `datetime64` or `timedelta64` passed as
    `dtype` ([GH 13981](https://github.com/pandas-dev/pandas/issues/13981))
  id: totrans-1657
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Index` 中存在 Bug，可能会忽略作为 `dtype` 传递的指定的 `datetime64` 或 `timedelta64` ([GH 13981](https://github.com/pandas-dev/pandas/issues/13981))
- en: Bug in `RangeIndex` can be created without no arguments rather than raises `TypeError`
    ([GH 13793](https://github.com/pandas-dev/pandas/issues/13793))
  id: totrans-1658
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `RangeIndex` 中存在 Bug，可以创建无参数的 RangeIndex 而不是引发 `TypeError` ([GH 13793](https://github.com/pandas-dev/pandas/issues/13793))
- en: Bug in `.value_counts()` raises `OutOfBoundsDatetime` if data exceeds `datetime64[ns]`
    bounds ([GH 13663](https://github.com/pandas-dev/pandas/issues/13663))
  id: totrans-1659
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.value_counts()` 中存在 Bug，如果数据超出 `datetime64[ns]` 的范围，则会引发 `OutOfBoundsDatetime`
    错误 ([GH 13663](https://github.com/pandas-dev/pandas/issues/13663))'
- en: Bug in `DatetimeIndex` may raise `OutOfBoundsDatetime` if input `np.datetime64`
    has other unit than `ns` ([GH 9114](https://github.com/pandas-dev/pandas/issues/9114))
  id: totrans-1660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `DatetimeIndex` 中存在 Bug，如果输入的 `np.datetime64` 单位不是 `ns`，可能会引发 `OutOfBoundsDatetime`
    错误 ([GH 9114](https://github.com/pandas-dev/pandas/issues/9114))
- en: Bug in `Series` creation with `np.datetime64` which has other unit than `ns`
    as `object` dtype results in incorrect values ([GH 13876](https://github.com/pandas-dev/pandas/issues/13876))
  id: totrans-1661
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在创建具有其他单位而不是 `ns` 的 `np.datetime64` 的 `Series` 时存在 Bug，将 `object` 数据类型结果设置为不正确的值
    ([GH 13876](https://github.com/pandas-dev/pandas/issues/13876))
- en: Bug in `resample` with timedelta data where data was casted to float ([GH 13119](https://github.com/pandas-dev/pandas/issues/13119)).
  id: totrans-1662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在带有 timedelta 数据的 `resample` 中存在 Bug，数据被转换为浮点数 ([GH 13119](https://github.com/pandas-dev/pandas/issues/13119))
- en: Bug in `pd.isnull()` `pd.notnull()` raise `TypeError` if input datetime-like
    has other unit than `ns` ([GH 13389](https://github.com/pandas-dev/pandas/issues/13389))
  id: totrans-1663
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `pd.isnull()` 和 `pd.notnull()` 存在 Bug，如果输入的日期时间类型不是 `ns` 单位，则会引发 `TypeError`
    ([GH 13389](https://github.com/pandas-dev/pandas/issues/13389))
- en: Bug in `pd.merge()` may raise `TypeError` if input datetime-like has other unit
    than `ns` ([GH 13389](https://github.com/pandas-dev/pandas/issues/13389))
  id: totrans-1664
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.merge()` 中存在 Bug，如果输入的日期时间类型不是 `ns` 单位，则可能会引发 `TypeError` ([GH 13389](https://github.com/pandas-dev/pandas/issues/13389))
- en: Bug in `HDFStore`/`read_hdf()` discarded `DatetimeIndex.name` if `tz` was set
    ([GH 13884](https://github.com/pandas-dev/pandas/issues/13884))
  id: totrans-1665
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `HDFStore`/`read_hdf()` 中存在 Bug，如果设置了 `tz`，则会丢弃 `DatetimeIndex.name` ([GH
    13884](https://github.com/pandas-dev/pandas/issues/13884))
- en: Bug in `Categorical.remove_unused_categories()` changes `.codes` dtype to platform
    int ([GH 13261](https://github.com/pandas-dev/pandas/issues/13261))
  id: totrans-1666
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Categorical.remove_unused_categories()` 中存在 Bug，会将 `.codes` 的数据类型更改为平台整数 ([GH
    13261](https://github.com/pandas-dev/pandas/issues/13261))'
- en: Bug in `groupby` with `as_index=False` returns all NaN’s when grouping on multiple
    columns including a categorical one ([GH 13204](https://github.com/pandas-dev/pandas/issues/13204))
  id: totrans-1667
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `groupby` 中存在 Bug，使用 `as_index=False` 在多个列上进行分组时，包括一个分类列，会返回所有 NaN 值 ([GH
    13204](https://github.com/pandas-dev/pandas/issues/13204))
- en: Bug in `df.groupby(...)[...]` where getitem with `Int64Index` raised an error
    ([GH 13731](https://github.com/pandas-dev/pandas/issues/13731))
  id: totrans-1668
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `df.groupby(...)[...]` 中存在 Bug，在使用 `Int64Index` 进行取项时可能会引发错误 ([GH 13731](https://github.com/pandas-dev/pandas/issues/13731))
- en: Bug in the CSS classes assigned to `DataFrame.style` for index names. Previously
    they were assigned `"col_heading level<n> col<c>"` where `n` was the number of
    levels + 1\. Now they are assigned `"index_name level<n>"`, where `n` is the correct
    level for that MultiIndex.
  id: totrans-1669
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在为索引名称分配给 `DataFrame.style` 的 CSS 类中存在 Bug。先前它们被分配为 `"col_heading level<n> col<c>"`，其中
    `n` 是级别数 + 1。现在它们被分配为 `"index_name level<n>"`，其中 `n` 是该 MultiIndex 的正确级别。
- en: 'Bug where `pd.read_gbq()` could throw `ImportError: No module named discovery`
    as a result of a naming conflict with another python package called apiclient
    ([GH 13454](https://github.com/pandas-dev/pandas/issues/13454))'
  id: totrans-1670
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pd.read_gbq()` 中存在 Bug，可能会引发 `ImportError: No module named discovery`，因为与另一个名为
    apiclient 的 python 包存在命名冲突 ([GH 13454](https://github.com/pandas-dev/pandas/issues/13454))'
- en: Bug in `Index.union` returns an incorrect result with a named empty index ([GH
    13432](https://github.com/pandas-dev/pandas/issues/13432))
  id: totrans-1671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `Index.union` 中存在 Bug，在具有命名空索引的情况下返回错误的结果 ([GH 13432](https://github.com/pandas-dev/pandas/issues/13432))
- en: Bugs in `Index.difference` and `DataFrame.join` raise in Python3 when using
    mixed-integer indexes ([GH 13432](https://github.com/pandas-dev/pandas/issues/13432),
    [GH 12814](https://github.com/pandas-dev/pandas/issues/12814))
  id: totrans-1672
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Python3 中，使用混合整数索引时，`Index.difference` 和 `DataFrame.join` 中存在错误 ([GH 13432](https://github.com/pandas-dev/pandas/issues/13432),
    [GH 12814](https://github.com/pandas-dev/pandas/issues/12814))
- en: Bug in subtract tz-aware `datetime.datetime` from tz-aware `datetime64` series
    ([GH 14088](https://github.com/pandas-dev/pandas/issues/14088))
  id: totrans-1673
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将具有时区的 `datetime.datetime` 从具有时区的 `datetime64` series 中减去的 bug ([GH 14088](https://github.com/pandas-dev/pandas/issues/14088))
- en: Bug in `.to_excel()` when DataFrame contains a MultiIndex which contains a label
    with a NaN value ([GH 13511](https://github.com/pandas-dev/pandas/issues/13511))
  id: totrans-1674
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 DataFrame 包含具有 NaN 值的标签的 MultiIndex 时，在 `.to_excel()` 中存在 bug ([GH 13511](https://github.com/pandas-dev/pandas/issues/13511))
- en: Bug in invalid frequency offset string like “D1”, “-2-3H” may not raise `ValueError`
    ([GH 13930](https://github.com/pandas-dev/pandas/issues/13930))
  id: totrans-1675
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无效频率偏移字符串如 “D1”、“-2-3H” 可能不会引发 `ValueError` 的 bug ([GH 13930](https://github.com/pandas-dev/pandas/issues/13930))
- en: Bug in `concat` and `groupby` for hierarchical frames with `RangeIndex` levels
    ([GH 13542](https://github.com/pandas-dev/pandas/issues/13542)).
  id: totrans-1676
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于具有 `RangeIndex` 索引级别的分层框架，在 `concat` 和 `groupby` 中存在 bug ([GH 13542](https://github.com/pandas-dev/pandas/issues/13542))。
- en: Bug in `Series.str.contains()` for Series containing only `NaN` values of `object`
    dtype ([GH 14171](https://github.com/pandas-dev/pandas/issues/14171))
  id: totrans-1677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于只包含 `object` dtype 的 `NaN` 值的 Series，`Series.str.contains()` 中存在 bug ([GH
    14171](https://github.com/pandas-dev/pandas/issues/14171))
- en: Bug in `agg()` function on groupby dataframe changes dtype of `datetime64[ns]`
    column to `float64` ([GH 12821](https://github.com/pandas-dev/pandas/issues/12821))
  id: totrans-1678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 groupby dataframe 上的 `agg()` 函数中存在 bug，会将 `datetime64[ns]` 列的 dtype 更改为 `float64`
    ([GH 12821](https://github.com/pandas-dev/pandas/issues/12821))
- en: Bug in using NumPy ufunc with `PeriodIndex` to add or subtract integer raise
    `IncompatibleFrequency`. Note that using standard operator like `+` or `-` is
    recommended, because standard operators use more efficient path ([GH 13980](https://github.com/pandas-dev/pandas/issues/13980))
  id: totrans-1679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 NumPy 的 ufunc 与 `PeriodIndex` 结合使用进行整数加法或减法会引发 `IncompatibleFrequency` 错误。建议使用标准运算符如
    `+` 或 `-`，因为标准运算符使用更高效的路径 ([GH 13980](https://github.com/pandas-dev/pandas/issues/13980))
- en: Bug in operations on `NaT` returning `float` instead of `datetime64[ns]` ([GH
    12941](https://github.com/pandas-dev/pandas/issues/12941))
  id: totrans-1680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在对 `NaT` 进行操作时返回 `float` 而不是 `datetime64[ns]` 的 bug ([GH 12941](https://github.com/pandas-dev/pandas/issues/12941))
- en: Bug in `Series` flexible arithmetic methods (like `.add()`) raises `ValueError`
    when `axis=None` ([GH 13894](https://github.com/pandas-dev/pandas/issues/13894))
  id: totrans-1681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有 `axis=None` 时，`Series` 的灵活算术方法（如 `.add()`）引发 `ValueError` 的 bug ([GH 13894](https://github.com/pandas-dev/pandas/issues/13894))
- en: Bug in `DataFrame.to_csv()` with `MultiIndex` columns in which a stray empty
    line was added ([GH 6618](https://github.com/pandas-dev/pandas/issues/6618))
  id: totrans-1682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有 `MultiIndex` 列的 `DataFrame.to_csv()` 中添加了多余的空行的 bug ([GH 6618](https://github.com/pandas-dev/pandas/issues/6618))
- en: Bug in `DatetimeIndex`, `TimedeltaIndex` and `PeriodIndex.equals()` may return
    `True` when input isn’t `Index` but contains the same values ([GH 13107](https://github.com/pandas-dev/pandas/issues/13107))
  id: totrans-1683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DatetimeIndex`、`TimedeltaIndex` 和 `PeriodIndex.equals()` 中存在 bug，当输入不是 `Index`
    但包含相同值时可能返回 `True` ([GH 13107](https://github.com/pandas-dev/pandas/issues/13107))'
- en: Bug in assignment against datetime with timezone may not work if it contains
    datetime near DST boundary ([GH 14146](https://github.com/pandas-dev/pandas/issues/14146))
  id: totrans-1684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有时区的 datetime 进行赋值时可能不起作用，如果它包含接近 DST 边界的 datetime ([GH 14146](https://github.com/pandas-dev/pandas/issues/14146))
- en: Bug in `pd.eval()` and `HDFStore` query truncating long float literals with
    python 2 ([GH 14241](https://github.com/pandas-dev/pandas/issues/14241))
  id: totrans-1685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 `pd.eval()` 和 `HDFStore` 查询中，使用 python 2 会截断长浮点数文字的 bug ([GH 14241](https://github.com/pandas-dev/pandas/issues/14241))
- en: Bug in `Index` raises `KeyError` displaying incorrect column when column is
    not in the df and columns contains duplicate values ([GH 13822](https://github.com/pandas-dev/pandas/issues/13822))
  id: totrans-1686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当列不在 df 中且列包含重复值时，`Index` 中存在 bug，会引发 `KeyError` 并显示不正确的列 ([GH 13822](https://github.com/pandas-dev/pandas/issues/13822))
- en: Bug in `Period` and `PeriodIndex` creating wrong dates when frequency has combined
    offset aliases ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))
  id: totrans-1687
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当频率具有组合偏移别名时，`Period` 和 `PeriodIndex` 创建错误日期的 bug ([GH 13874](https://github.com/pandas-dev/pandas/issues/13874))
- en: Bug in `.to_string()` when called with an integer `line_width` and `index=False`
    raises an UnboundLocalError exception because `idx` referenced before assignment.
  id: totrans-1688
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在带有整数 `line_width` 和 `index=False` 的情况下调用 `.to_string()` 时会引发 UnboundLocalError
    异常，因为 `idx` 在赋值之前被引用。
- en: Bug in `eval()` where the `resolvers` argument would not accept a list ([GH
    14095](https://github.com/pandas-dev/pandas/issues/14095))
  id: totrans-1689
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eval()` 中的错误，`resolvers` 参数不接受列表（[GH 14095](https://github.com/pandas-dev/pandas/issues/14095)）'
- en: Bugs in `stack`, `get_dummies`, `make_axis_dummies` which don’t preserve categorical
    dtypes in (multi)indexes ([GH 13854](https://github.com/pandas-dev/pandas/issues/13854))
  id: totrans-1690
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stack`、`get_dummies`、`make_axis_dummies` 中的错误，不会保留（多重）索引中的分类数据类型（[GH 13854](https://github.com/pandas-dev/pandas/issues/13854)）'
- en: '`PeriodIndex` can now accept `list` and `array` which contains `pd.NaT` ([GH
    13430](https://github.com/pandas-dev/pandas/issues/13430))'
  id: totrans-1691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PeriodIndex` 现在可以接受包含 `pd.NaT` 的 `list` 和 `array`（[GH 13430](https://github.com/pandas-dev/pandas/issues/13430)）'
- en: Bug in `df.groupby` where `.median()` returns arbitrary values if grouped dataframe
    contains empty bins ([GH 13629](https://github.com/pandas-dev/pandas/issues/13629))
  id: totrans-1692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`df.groupby` 中的错误，如果分组的数据框包含空箱，`.median()` 返回任意值（[GH 13629](https://github.com/pandas-dev/pandas/issues/13629)）'
- en: Bug in `Index.copy()` where `name` parameter was ignored ([GH 14302](https://github.com/pandas-dev/pandas/issues/14302))
  id: totrans-1693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index.copy()` 中的错误，`name` 参数被忽略（[GH 14302](https://github.com/pandas-dev/pandas/issues/14302)）'
- en: '## Contributors'
  id: totrans-1694
  prefs: []
  type: TYPE_NORMAL
  zh: '## 贡献者'
- en: A total of 117 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  id: totrans-1695
  prefs: []
  type: TYPE_NORMAL
  zh: 共有 117 人为此版本提供了补丁。带有“+”符号的人是首次贡献补丁的人。
- en: Adrien Emery +
  id: totrans-1696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Adrien Emery +
- en: Alex Alekseyev
  id: totrans-1697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Alekseyev
- en: Alex Vig +
  id: totrans-1698
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alex Vig +
- en: Allen Riddell +
  id: totrans-1699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Allen Riddell +
- en: Amol +
  id: totrans-1700
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amol +
- en: Amol Agrawal +
  id: totrans-1701
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amol Agrawal +
- en: Andy R. Terrel +
  id: totrans-1702
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Andy R. Terrel +
- en: Anthonios Partheniou
  id: totrans-1703
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anthonios Partheniou
- en: Ben Kandel +
  id: totrans-1704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ben Kandel +
- en: Bob Baxley +
  id: totrans-1705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bob Baxley +
- en: Brett Rosen +
  id: totrans-1706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Brett Rosen +
- en: Camilo Cota +
  id: totrans-1707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Camilo Cota +
- en: Chris
  id: totrans-1708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris
- en: Chris Grinolds
  id: totrans-1709
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Grinolds
- en: Chris Warth
  id: totrans-1710
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chris Warth
- en: Christian Hudon
  id: totrans-1711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christian Hudon
- en: Christopher C. Aycock
  id: totrans-1712
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Christopher C. Aycock
- en: Daniel Siladji +
  id: totrans-1713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Daniel Siladji +
- en: Douglas McNeil
  id: totrans-1714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Douglas McNeil
- en: Drewrey Lupton +
  id: totrans-1715
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drewrey Lupton +
- en: Eduardo Blancas Reyes +
  id: totrans-1716
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eduardo Blancas Reyes +
- en: Elliot Marsden +
  id: totrans-1717
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elliot Marsden +
- en: Evan Wright
  id: totrans-1718
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Evan Wright
- en: Felix Marczinowski +
  id: totrans-1719
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Felix Marczinowski +
- en: Francis T. O’Donovan
  id: totrans-1720
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Francis T. O’Donovan
- en: Geraint Duck +
  id: totrans-1721
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Geraint Duck +
- en: Giacomo Ferroni +
  id: totrans-1722
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Giacomo Ferroni +
- en: Grant Roch +
  id: totrans-1723
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Grant Roch +
- en: Gábor Lipták
  id: totrans-1724
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gábor Lipták
- en: Haleemur Ali +
  id: totrans-1725
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Haleemur Ali +
- en: Hassan Shamim +
  id: totrans-1726
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hassan Shamim +
- en: Iulius Curt +
  id: totrans-1727
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Iulius Curt +
- en: Ivan Nazarov +
  id: totrans-1728
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ivan Nazarov +
- en: Jeff Reback
  id: totrans-1729
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeff Reback
- en: Jeffrey Gerard +
  id: totrans-1730
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jeffrey Gerard +
- en: Jenn Olsen +
  id: totrans-1731
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jenn Olsen +
- en: Jim Crist
  id: totrans-1732
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jim Crist
- en: Joe Jevnik
  id: totrans-1733
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joe Jevnik
- en: John Evans +
  id: totrans-1734
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John Evans +
- en: John Freeman
  id: totrans-1735
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John Freeman
- en: John Liekezer +
  id: totrans-1736
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John Liekezer +
- en: John W. O’Brien
  id: totrans-1737
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John W. O’Brien
- en: John Zwinck +
  id: totrans-1738
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: John Zwinck +
- en: Johnny Gill +
  id: totrans-1739
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Johnny Gill +
- en: Jordan Erenrich +
  id: totrans-1740
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jordan Erenrich +
- en: Joris Van den Bossche
  id: totrans-1741
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Joris Van den Bossche
- en: Josh Howes +
  id: totrans-1742
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Josh Howes +
- en: Jozef Brandys +
  id: totrans-1743
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jozef Brandys +
- en: Ka Wo Chen
  id: totrans-1744
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ka Wo Chen
- en: Kamil Sindi +
  id: totrans-1745
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kamil Sindi +
- en: Kerby Shedden
  id: totrans-1746
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerby Shedden
- en: Kernc +
  id: totrans-1747
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kernc +
- en: Kevin Sheppard
  id: totrans-1748
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kevin Sheppard
- en: Matthieu Brucher +
  id: totrans-1749
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matthieu Brucher +
- en: Maximilian Roos
  id: totrans-1750
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maximilian Roos
- en: Michael Scherer +
  id: totrans-1751
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Michael Scherer +
- en: Mike Graham +
  id: totrans-1752
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mike Graham +
- en: Mortada Mehyar
  id: totrans-1753
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mortada Mehyar
- en: Muhammad Haseeb Tariq +
  id: totrans-1754
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Muhammad Haseeb Tariq +
- en: Nate George +
  id: totrans-1755
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nate George +
- en: Neil Parley +
  id: totrans-1756
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Neil Parley +
- en: Nicolas Bonnotte
  id: totrans-1757
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nicolas Bonnotte
- en: OXPHOS
  id: totrans-1758
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OXPHOS
- en: Pan Deng / Zora +
  id: totrans-1759
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pan Deng / Zora +
- en: Paul +
  id: totrans-1760
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paul +
- en: Paul Mestemaker +
  id: totrans-1761
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Paul Mestemaker +
- en: Pauli Virtanen
  id: totrans-1762
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pauli Virtanen
- en: Pawel Kordek +
  id: totrans-1763
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pawel Kordek +
- en: Pietro Battiston
  id: totrans-1764
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pietro Battiston
- en: Piotr Jucha +
  id: totrans-1765
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Piotr Jucha +
- en: Ravi Kumar Nimmi +
  id: totrans-1766
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ravi Kumar Nimmi +
- en: Robert Gieseke
  id: totrans-1767
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robert Gieseke
- en: Robert Kern +
  id: totrans-1768
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robert Kern +
- en: Roger Thomas
  id: totrans-1769
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Roger Thomas
- en: Roy Keyes +
  id: totrans-1770
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Roy Keyes +
- en: Russell Smith +
  id: totrans-1771
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Russell Smith +
- en: Sahil Dua +
  id: totrans-1772
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sahil Dua +
- en: Sanjiv Lobo +
  id: totrans-1773
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sanjiv Lobo +
- en: Sašo Stanovnik +
  id: totrans-1774
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sašo Stanovnik +
- en: Shawn Heide +
  id: totrans-1775
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shawn Heide +
- en: Sinhrks
  id: totrans-1776
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sinhrks
- en: Stephen Kappel +
  id: totrans-1777
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stephen Kappel +
- en: Steve Choi +
  id: totrans-1778
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Steve Choi +
- en: Stewart Henderson +
  id: totrans-1779
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stewart Henderson +
- en: Sudarshan Konge +
  id: totrans-1780
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sudarshan Konge +
- en: Thomas A Caswell
  id: totrans-1781
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Thomas A Caswell
- en: Tom Augspurger
  id: totrans-1782
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tom Augspurger
- en: Tom Bird +
  id: totrans-1783
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tom Bird +
- en: Uwe Hoffmann +
  id: totrans-1784
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Uwe Hoffmann +
- en: WillAyd +
  id: totrans-1785
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WillAyd +
- en: Xiang Zhang +
  id: totrans-1786
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xiang Zhang +
- en: YG-Riku +
  id: totrans-1787
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: YG-Riku +
- en: Yadunandan +
  id: totrans-1788
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yadunandan +
- en: Yaroslav Halchenko
  id: totrans-1789
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yaroslav Halchenko
- en: Yuichiro Kaneko +
  id: totrans-1790
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yuichiro Kaneko +
- en: adneu
  id: totrans-1791
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: adneu
- en: agraboso +
  id: totrans-1792
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: agraboso +
- en: babakkeyvani +
  id: totrans-1793
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: babakkeyvani +
- en: c123w +
  id: totrans-1794
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: c123w +
- en: chris-b1
  id: totrans-1795
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: chris-b1
- en: cmazzullo +
  id: totrans-1796
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cmazzullo +
- en: conquistador1492 +
  id: totrans-1797
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: conquistador1492 +
- en: cr3 +
  id: totrans-1798
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cr3 +
- en: dsm054
  id: totrans-1799
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: dsm054
- en: gfyoung
  id: totrans-1800
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: gfyoung
- en: harshul1610 +
  id: totrans-1801
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: harshul1610 +
- en: iamsimha +
  id: totrans-1802
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iamsimha +
- en: jackieleng +
  id: totrans-1803
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jackieleng +
- en: mpuels +
  id: totrans-1804
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mpuels +
- en: pijucha +
  id: totrans-1805
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pijucha +
- en: priyankjain +
  id: totrans-1806
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: priyankjain +
- en: sinhrks
  id: totrans-1807
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sinhrks
- en: wcwagner +
  id: totrans-1808
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: wcwagner +
- en: yui-knk +
  id: totrans-1809
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: yui-knk +
- en: zhangjinjie +
  id: totrans-1810
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: zhangjinjie +
- en: znmean +
  id: totrans-1811
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: znmean +
- en: 颜发才（Yan Facai） +
  id: totrans-1812
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 颜发才（Yan Facai） +
