- en: pandas.tseries.offsets.BusinessDay
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.BusinessDay.html](https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.BusinessDay.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: DateOffset subclass representing possibly n business days.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, default 1'
  prefs: []
  type: TYPE_NORMAL
- en: The number of days represented.
  prefs: []
  type: TYPE_NORMAL
- en: '**normalize**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Normalize start/end dates to midnight.
  prefs: []
  type: TYPE_NORMAL
- en: '**offset**timedelta, default timedelta(0)'
  prefs: []
  type: TYPE_NORMAL
- en: Time offset to apply.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: You can use the parameter `n` to represent a shift of n business days.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Passing the parameter `normalize` equal to True, you shift the start of the
    next business day to midnight.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| `base` | Returns a copy of the calling offset object with n=1 and all other
    attributes equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`calendar`](pandas.tseries.offsets.BusinessDay.calendar.html#pandas.tseries.offsets.BusinessDay.calendar
    "pandas.tseries.offsets.BusinessDay.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`freqstr`](pandas.tseries.offsets.BusinessDay.freqstr.html#pandas.tseries.offsets.BusinessDay.freqstr
    "pandas.tseries.offsets.BusinessDay.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`holidays`](pandas.tseries.offsets.BusinessDay.holidays.html#pandas.tseries.offsets.BusinessDay.holidays
    "pandas.tseries.offsets.BusinessDay.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`kwds`](pandas.tseries.offsets.BusinessDay.kwds.html#pandas.tseries.offsets.BusinessDay.kwds
    "pandas.tseries.offsets.BusinessDay.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`n`](pandas.tseries.offsets.BusinessDay.n.html#pandas.tseries.offsets.BusinessDay.n
    "pandas.tseries.offsets.BusinessDay.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`name`](pandas.tseries.offsets.BusinessDay.name.html#pandas.tseries.offsets.BusinessDay.name
    "pandas.tseries.offsets.BusinessDay.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`nanos`](pandas.tseries.offsets.BusinessDay.nanos.html#pandas.tseries.offsets.BusinessDay.nanos
    "pandas.tseries.offsets.BusinessDay.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`normalize`](pandas.tseries.offsets.BusinessDay.normalize.html#pandas.tseries.offsets.BusinessDay.normalize
    "pandas.tseries.offsets.BusinessDay.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| `offset` | Alias for self._offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`rule_code`](pandas.tseries.offsets.BusinessDay.rule_code.html#pandas.tseries.offsets.BusinessDay.rule_code
    "pandas.tseries.offsets.BusinessDay.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`weekmask`](pandas.tseries.offsets.BusinessDay.weekmask.html#pandas.tseries.offsets.BusinessDay.weekmask
    "pandas.tseries.offsets.BusinessDay.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`copy`](pandas.tseries.offsets.BusinessDay.copy.html#pandas.tseries.offsets.BusinessDay.copy
    "pandas.tseries.offsets.BusinessDay.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_anchored`](pandas.tseries.offsets.BusinessDay.is_anchored.html#pandas.tseries.offsets.BusinessDay.is_anchored
    "pandas.tseries.offsets.BusinessDay.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_end`](pandas.tseries.offsets.BusinessDay.is_month_end.html#pandas.tseries.offsets.BusinessDay.is_month_end
    "pandas.tseries.offsets.BusinessDay.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_start`](pandas.tseries.offsets.BusinessDay.is_month_start.html#pandas.tseries.offsets.BusinessDay.is_month_start
    "pandas.tseries.offsets.BusinessDay.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_on_offset`](pandas.tseries.offsets.BusinessDay.is_on_offset.html#pandas.tseries.offsets.BusinessDay.is_on_offset
    "pandas.tseries.offsets.BusinessDay.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_end`](pandas.tseries.offsets.BusinessDay.is_quarter_end.html#pandas.tseries.offsets.BusinessDay.is_quarter_end
    "pandas.tseries.offsets.BusinessDay.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_start`](pandas.tseries.offsets.BusinessDay.is_quarter_start.html#pandas.tseries.offsets.BusinessDay.is_quarter_start
    "pandas.tseries.offsets.BusinessDay.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_end`](pandas.tseries.offsets.BusinessDay.is_year_end.html#pandas.tseries.offsets.BusinessDay.is_year_end
    "pandas.tseries.offsets.BusinessDay.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_start`](pandas.tseries.offsets.BusinessDay.is_year_start.html#pandas.tseries.offsets.BusinessDay.is_year_start
    "pandas.tseries.offsets.BusinessDay.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| `rollback`(dt) | Roll provided date backward to next offset only if not on
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| `rollforward`(dt) | Roll provided date forward to next offset only if not
    on offset. |'
  prefs: []
  type: TYPE_TB
