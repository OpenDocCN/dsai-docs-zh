- en: Vector & ReferenceFrame
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/vector/vectors.html](https://docs.sympy.org/latest/modules/physics/vector/vectors.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In [`sympy.physics.vector`](index.html#module-sympy.physics.vector "sympy.physics.vector"),
    vectors and reference frames are the “building blocks” of dynamic systems. This
    document will describe these mathematically and describe how to use them with
    this module’s code.
  prefs: []
  type: TYPE_NORMAL
- en: Vector
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A vector is a geometric object that has a magnitude (or length) and a direction.
    Vectors in 3-space are often represented on paper as:'
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="350" height="175" id="svg3229" version="1.1"
    inkscape:version="0.48.1 r9760" sodipodi:docname="New document 9"><metadata id="metadata3234"><rdf><work
    rdf:about=""><format>image/svg+xml</format></work></rdf></metadata> <g inkscape:label="Layer
    1" inkscape:groupmode="layer" id="layer1" transform="translate(0,-877.36218)"><text
    xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:currentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="11.638955" y="119.71496" id="text3247" sodipodi:linespacing="125%" transform="translate(0,877.36218)"><tspan
    sodipodi:role="line" id="tspan3249" x="11.638955" y="119.71496">Vector on page</tspan></text>
    <text xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:currentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="163.36105" y="989.17932" id="text3251" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3253" x="163.36105" y="989.17932">Vector out</tspan><tspan sodipodi:role="line"
    x="163.36105" y="1007.9293" id="tspan3255">of page</tspan></text> <text sodipodi:linespacing="125%"
    id="text3283" y="990.84198" x="268.11163" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:currentColor;fill-opacity:1;stroke:none;font-family:Sans"
    xml:space="preserve"><tspan y="990.84198" x="268.11163" id="tspan3285" sodipodi:role="line">Vector</tspan><tspan
    id="tspan3287" y="1009.592" x="268.11163" sodipodi:role="line">into page</tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: Vector Algebra
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Vector algebra is the first topic to be discussed.
  prefs: []
  type: TYPE_NORMAL
- en: Two vectors are said to be equal if and only if (iff) they have the same magnitude
    and orientation.
  prefs: []
  type: TYPE_NORMAL
- en: Vector Operations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Multiple algebraic operations can be done with vectors: addition between vectors,
    scalar multiplication, and vector multiplication.'
  prefs: []
  type: TYPE_NORMAL
- en: Vector addition as based on the parallelogram law.
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="200" height="200" id="svg3712" version="1.1"
    inkscape:version="0.48.1 r9760" sodipodi:docname="New document 12"><metadata id="metadata3717"><rdf><work
    rdf:about=""><format>image/svg+xml</format></work></rdf></metadata> <g inkscape:label="Layer
    1" inkscape:groupmode="layer" id="layer1" transform="translate(0,-852.36218)"><text
    xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="35.239567" y="72.024727" id="text3750" sodipodi:linespacing="125%" transform="translate(0,852.36218)"><tspan
    sodipodi:role="line" id="tspan3752" x="35.239567" y="72.024727">a</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="97.37249" y="55.641422" id="text3754" sodipodi:linespacing="125%" transform="translate(0,852.36218)"><tspan
    sodipodi:role="line" id="tspan3756" x="97.37249" y="55.641422">b</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="69.242661" y="129.52087" id="text3762" sodipodi:linespacing="125%" transform="translate(0,852.36218)"><tspan
    sodipodi:role="line" id="tspan3764" x="69.242661" y="129.52087">b</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="139.10355" y="106.95518" id="text3766" sodipodi:linespacing="125%" transform="translate(0,852.36218)"><tspan
    sodipodi:role="line" id="tspan3768" x="139.10355" y="106.95518">a</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="69.860893" y="101.08192" id="text3770" sodipodi:linespacing="125%" transform="translate(0,852.36218)"><tspan
    sodipodi:role="line" id="tspan3772" x="69.860893" y="101.08192">a+b</tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: 'Vector addition is also commutative:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{a} + \mathbf{b} &= \mathbf{b} + \mathbf{a} \\ (\mathbf{a}
    + \mathbf{b}) + \mathbf{c} &= \mathbf{a} + (\mathbf{b} + \mathbf{c})\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Scalar multiplication is the product of a vector and a scalar; the result is
    a vector with the same orientation but whose magnitude is scaled by the scalar.
    Note that multiplication by -1 is equivalent to rotating the vector by 180 degrees
    about an arbitrary axis in the plane perpendicular to the vector.
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="200" height="150" id="svg3154" version="1.1"
    inkscape:version="0.48.1 r9760" sodipodi:docname="New document 5"><metadata id="metadata3159"><rdf><work
    rdf:about=""><format>image/svg+xml</format></work></rdf></metadata> <g inkscape:label="Layer
    1" inkscape:groupmode="layer" id="layer1" transform="translate(0,-902.36218)"><text
    xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="47.700001" y="25.200001" id="text3192" sodipodi:linespacing="125%" transform="translate(0,902.36218)"><tspan
    sodipodi:role="line" id="tspan3194" x="47.700001" y="25.200001" style="font-size:15px">a</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="90.899994" y="944.36218" id="text3196" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3198" x="90.899994" y="944.36218" style="font-size:15px">2a</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="61.199997" y="1016.6622" id="text3200" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3202" x="61.199997" y="1016.6622" style="font-size:15px">-a</tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: 'A unit vector is simply a vector whose magnitude is equal to 1\. Given any
    vector \(\mathbf{v}\) we can define a unit vector as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\mathbf{\hat{n}_v} = \frac{\mathbf{v}}{\Vert \mathbf{v} \Vert}\]
  prefs: []
  type: TYPE_NORMAL
- en: Note that every vector can be written as the product of a scalar and unit vector.
  prefs: []
  type: TYPE_NORMAL
- en: 'Three vector products are implemented in [`sympy.physics.vector`](index.html#module-sympy.physics.vector
    "sympy.physics.vector"): the dot product, the cross product, and the outer product.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The dot product operation maps two vectors to a scalar. It is defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{a} \cdot \mathbf{b} = \Vert \mathbf{a} \Vert \Vert \mathbf{b}
    \Vert \cos(\theta)\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(\theta\) is the angle between \(\mathbf{a}\) and \(\mathbf{b}\).
  prefs: []
  type: TYPE_NORMAL
- en: 'The dot product of two unit vectors represent the magnitude of the common direction;
    for other vectors, it is the product of the magnitude of the common direction
    and the two vectors’ magnitudes. The dot product of two perpendicular is zero.
    The figure below shows some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="450" height="250" id="svg3967" version="1.1"
    inkscape:version="0.48.1 r9760" sodipodi:docname="New document 17"><metadata id="metadata3972"><rdf><work
    rdf:about=""><format>image/svg+xml</format></work></rdf></metadata> <g inkscape:label="Layer
    1" inkscape:groupmode="layer" id="layer1" transform="translate(0,-802.36218)"><text
    xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="76.546394" y="173.45361" id="text3985" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3987" x="76.546394" y="173.45361">a</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="40.592785" y="121.26289" id="text3989" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3991" x="40.592785" y="121.26289">b</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="208.18298" y="172.29381" id="text3993" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3995" x="208.18298" y="172.29381">a</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="210.50258" y="133.44072" id="text3997" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3999" x="210.50258" y="133.44072">a</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="403.02835" y="172.8737" id="text4001" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan4003" x="403.02835" y="172.8737">a</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="339.81958" y="131.70103" id="text4005" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan4007" x="339.81958" y="131.70103">c</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="345.03867" y="167.07474" id="text4009" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan4011" x="345.03867" y="167.07474">45°</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="40.592785" y="214.04639" id="text4013" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan4015" x="40.592785" y="214.04639">a ⋅ b = 0</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="180.92784" y="1016.9884" id="text4017" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan4019" x="180.92784" y="1016.9884">a ⋅ a = 1</tspan></text> <text xml:space="preserve"
    style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="328.80154" y="1017.5684" id="text4021" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan4023" x="328.80154" y="1017.5684">a ⋅ c = 1/sqrt(2)</tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: 'The dot product is commutative:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\mathbf{a} \cdot \mathbf{b} = \mathbf{b} \cdot \mathbf{a}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'The cross product vector multiplication operation of two vectors returns a
    vector:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\mathbf{a} \times \mathbf{b} = \mathbf{c}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'The vector \(\mathbf{c}\) has the following properties: it’s orientation is
    perpendicular to both \(\mathbf{a}\) and \(\mathbf{b}\), it’s magnitude is defined
    as \(\Vert \mathbf{c} \Vert = \Vert \mathbf{a} \Vert \Vert \mathbf{b} \Vert \sin(\theta)\)
    (where \(\theta\) is the angle between \(\mathbf{a}\) and \(\mathbf{b}\)), and
    has a sense defined by using the right hand rule between \(\Vert \mathbf{a} \Vert
    \Vert \mathbf{b} \Vert\). The figure below shows this:'
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="700" height="350" id="svg3807" version="1.1"
    inkscape:version="0.48.1 r9760" sodipodi:docname="vec_cross.svg"><metadata id="metadata3812"><rdf><work
    rdf:about=""><format>image/svg+xml</format></work></rdf></metadata> <g inkscape:label="Layer
    1" inkscape:groupmode="layer" id="layer1" transform="translate(0,-702.36218)"><text
    xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="518.38611" y="236.31256" id="text3831" sodipodi:linespacing="125%" transform="translate(0,702.36218)"><tspan
    sodipodi:role="line" id="tspan3833" x="518.38611" y="236.31256">a x a = 0</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="104.39224" y="234.16753" id="text3835" sodipodi:linespacing="125%" transform="translate(0,702.36218)"><tspan
    sodipodi:role="line" id="tspan3837" x="104.39224" y="234.16753">a</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="351.07251" y="215.57712" id="text3839" sodipodi:linespacing="125%" transform="translate(0,702.36218)"><tspan
    sodipodi:role="line" id="tspan3841" x="351.07251" y="215.57712">a</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="200.91931" y="212.71706" id="text3843" sodipodi:linespacing="125%" transform="translate(0,702.36218)"><tspan
    sodipodi:role="line" id="tspan3845" x="200.91931" y="212.71706">b</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="429.72421" y="918.6543" id="text3847" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3849" x="429.72421" y="918.6543">d</tspan></text> <text xml:space="preserve"
    style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="158.01839" y="129.06027" id="text3851" sodipodi:linespacing="125%" transform="translate(0,702.36218)"><tspan
    sodipodi:role="line" id="tspan3853" x="158.01839" y="129.06027">c</tspan></text>
    <text xml:space="preserve" style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="416.13892" y="816.4071" id="text3855" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    x="416.13892" y="816.4071" id="tspan3859">c / sqrt(2)</tspan></text> <text xml:space="preserve"
    style="font-size:14px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="388.96835" y="911.50415" id="text3881" sodipodi:linespacing="125%" inkscape:transform-center-x="-11.405762"
    inkscape:transform-center-y="-5.2944336"><tspan sodipodi:role="line" id="tspan3883"
    x="388.96835" y="911.50415">45°</tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: 'The cross product has the following properties:'
  prefs: []
  type: TYPE_NORMAL
- en: 'It is not commutative:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{a} \times \mathbf{b} &\neq \mathbf{b} \times \mathbf{a}
    \\ \mathbf{a} \times \mathbf{b} &= - \mathbf{b} \times \mathbf{a}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'and not associative:'
  prefs: []
  type: TYPE_NORMAL
- en: \[(\mathbf{a} \times \mathbf{b} ) \times \mathbf{c} \neq \mathbf{a} \times (\mathbf{b}
    \times \mathbf{c})\]
  prefs: []
  type: TYPE_NORMAL
- en: Two parallel vectors will have a zero cross product.
  prefs: []
  type: TYPE_NORMAL
- en: 'The outer product between two vectors will not be not be discussed here, but
    instead in the inertia section (that is where it is used). Other useful vector
    properties and relationships are:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\alpha (\mathbf{a} + \mathbf{b}) &= \alpha \mathbf{a} + \alpha
    \mathbf{b}\\ \mathbf{a} \cdot (\mathbf{b} + \mathbf{c}) &= \mathbf{a} \cdot \mathbf{b}
    + \mathbf{a} \cdot \mathbf{c}\\ \mathbf{a} \times (\mathbf{b} + \mathbf{c}) &=
    \mathbf{a} \times \mathbf{b} + \mathbf{a} \times \mathbf{b}\\ (\mathbf{a} \times
    \mathbf{b}) \cdot \mathbf{c} & \textrm{ gives the scalar triple product.}\\ \mathbf{a}
    \times (\mathbf{b} \cdot \mathbf{c}) & \textrm{ does not work, as you cannot cross
    a vector and a scalar.}\\ (\mathbf{a} \times \mathbf{b}) \cdot \mathbf{c} &= \mathbf{a}
    \cdot (\mathbf{b} \times \mathbf{c})\\ (\mathbf{a} \times \mathbf{b}) \cdot \mathbf{c}
    &= (\mathbf{b} \times \mathbf{c}) \cdot \mathbf{a} = (\mathbf{c} \times \mathbf{a})
    \cdot \mathbf{b}\\ (\mathbf{a} \times \mathbf{b}) \times \mathbf{c} &= \mathbf{b}(\mathbf{a}
    \cdot \mathbf{c}) - \mathbf{a}(\mathbf{b} \cdot \mathbf{c})\\ \mathbf{a} \times
    (\mathbf{b} \times \mathbf{c}) &= \mathbf{b}(\mathbf{a} \cdot \mathbf{c}) - \mathbf{c}(\mathbf{a}
    \cdot \mathbf{b})\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Alternative Representation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If we have three non-coplanar unit vectors \(\mathbf{\hat{n}_x},\mathbf{\hat{n}_y},\mathbf{\hat{n}_z}\),
    we can represent any vector \(\mathbf{a}\) as \(\mathbf{a} = a_x \mathbf{\hat{n}_x}
    + a_y \mathbf{\hat{n}_y} + a_z \mathbf{\hat{n}_z}\). In this situation \(\mathbf{\hat{n}_x},\mathbf{\hat{n}_y},\mathbf{\hat{n}_z}\)
    are referred to as a basis. \(a_x, a_y, a_z\) are called the measure numbers.
    Usually the unit vectors are mutually perpendicular, in which case we can refer
    to them as an orthonormal basis, and they are usually right-handed.
  prefs: []
  type: TYPE_NORMAL
- en: 'To test equality between two vectors, now we can do the following. With vectors:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{a} &= a_x \mathbf{\hat{n}_x} + a_y \mathbf{\hat{n}_y}
    + a_z \mathbf{\hat{n}_z}\\ \mathbf{b} &= b_x \mathbf{\hat{n}_x} + b_y \mathbf{\hat{n}_y}
    + b_z \mathbf{\hat{n}_z}\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'We can claim equality if: \(a_x = b_x, a_y = b_y, a_z = b_z\).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Vector addition is then represented, for the same two vectors, as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\mathbf{a} + \mathbf{b} = (a_x + b_x)\mathbf{\hat{n}_x} + (a_y + b_y) \mathbf{\hat{n}_y}
    + (a_z + b_z) \mathbf{\hat{n}_z}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Multiplication operations are now defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\alpha \mathbf{b} &= \alpha b_x \mathbf{\hat{n}_x} + \alpha b_y
    \mathbf{\hat{n}_y} + \alpha b_z \mathbf{\hat{n}_z}\\ \mathbf{a} \cdot \mathbf{b}
    &= a_x b_x + a_y b_y + a_z b_z\\ \mathbf{a} \times \mathbf{b} &= \textrm{det }\begin{bmatrix}
    \mathbf{\hat{n}_x} & \mathbf{\hat{n}_y} & \mathbf{\hat{n}_z} \\ a_x & a_y & a_z
    \\ b_x & b_y & b_z \end{bmatrix}\\ (\mathbf{a} \times \mathbf{b}) \cdot \mathbf{c}
    &= \textrm{det }\begin{bmatrix} a_x & a_y & a_z \\ b_x & b_y & b_z \\ c_x & c_y
    & c_z \end{bmatrix}\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'To write a vector in a given basis, we can do the follow:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{a} = (\mathbf{a}\cdot\mathbf{\hat{n}_x})\mathbf{\hat{n}_x}
    + (\mathbf{a}\cdot\mathbf{\hat{n}_y})\mathbf{\hat{n}_y} + (\mathbf{a}\cdot\mathbf{\hat{n}_z})\mathbf{\hat{n}_z}\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some numeric examples of these operations follow:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{a} &= \mathbf{\hat{n}_x} + 5 \mathbf{\hat{n}_y}\\ \mathbf{b}
    &= \mathbf{\hat{n}_y} + \alpha \mathbf{\hat{n}_z}\\ \mathbf{a} + \mathbf{b} &=
    \mathbf{\hat{n}_x} + 6 \mathbf{\hat{n}_y} + \alpha \mathbf{\hat{n}_z}\\ \mathbf{a}
    \cdot \mathbf{b} &= 5\\ \mathbf{a} \cdot \mathbf{\hat{n}_y} &= 5\\ \mathbf{a}
    \cdot \mathbf{\hat{n}_z} &= 0\\ \mathbf{a} \times \mathbf{b} &= 5 \alpha \mathbf{\hat{n}_x}
    - \alpha \mathbf{\hat{n}_y} + \mathbf{\hat{n}_z}\\ \mathbf{b} \times \mathbf{a}
    &= -5 \alpha \mathbf{\hat{n}_x} + \alpha \mathbf{\hat{n}_y} - \mathbf{\hat{n}_z}\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Vector Calculus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To deal with the calculus of vectors with moving object, we have to introduce
    the concept of a reference frame. A classic example is a train moving along its
    tracks, with you and a friend inside. If both you and your friend are sitting,
    the relative velocity between the two of you is zero. From an observer outside
    the train, you will both have velocity though.
  prefs: []
  type: TYPE_NORMAL
- en: We will now apply more rigor to this definition. A reference frame is a virtual
    “platform” which we choose to observe vector quantities from. If we have a reference
    frame \(\mathbf{N}\), vector \(\mathbf{a}\) is said to be fixed in the frame \(\mathbf{N}\)
    if none of its properties ever change when observed from \(\mathbf{N}\). We will
    typically assign a fixed orthonormal basis vector set with each reference frame;
    \(\mathbf{N}\) will have \(\mathbf{\hat{n}_x}, \mathbf{\hat{n}_y},\mathbf{\hat{n}_z}\)
    as its basis vectors.
  prefs: []
  type: TYPE_NORMAL
- en: Derivatives of Vectors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A vector which is not fixed in a reference frame therefore has changing properties
    when observed from that frame. Calculus is the study of change, and in order to
    deal with the peculiarities of vectors fixed and not fixed in different reference
    frames, we need to be more explicit in our definitions.
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="450" height="290" id="svg4068" version="1.1"
    inkscape:version="0.48.1 r9760" sodipodi:docname="vec_fix_notfix.svg"><metadata
    id="metadata4073"><rdf><work rdf:about=""><format>image/svg+xml</format></work></rdf></metadata>
    <g inkscape:label="Layer 1" inkscape:groupmode="layer" id="layer1" transform="translate(0,-752.36218)"><text
    xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="252.31055" y="151.38632" id="text3075" sodipodi:linespacing="125%" transform="translate(0,752.36218)"><tspan
    sodipodi:role="line" id="tspan3077" x="252.31055" y="151.38632" style="font-size:25px">A</tspan></text>
    <text xml:space="preserve" style="font-size:25px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="191.31238" y="75.970428" id="text3079" sodipodi:linespacing="125%" transform="translate(0,752.36218)"><tspan
    sodipodi:role="line" id="tspan3081" x="191.31238" y="75.970428">B</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="113.12384" y="44.362293" id="text3083" sodipodi:linespacing="125%" transform="translate(0,752.36218)"><tspan
    sodipodi:role="line" id="tspan3085" x="113.12384" y="44.362293">f</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="55.452866" y="89.279114" id="text3091" sodipodi:linespacing="125%" transform="translate(0,752.36218)"><tspan
    sodipodi:role="line" id="tspan3093" x="55.452866" y="89.279114">e</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="46.580406" y="178.00369" id="text3099" sodipodi:linespacing="125%" transform="translate(0,752.36218)"><tspan
    sodipodi:role="line" id="tspan3101" x="46.580406" y="178.00369">d</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="65.43438" y="227.35675" id="text3103" sodipodi:linespacing="125%" transform="translate(0,752.36218)"><tspan
    sodipodi:role="line" id="tspan3105" x="65.43438" y="227.35675">c</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="336.59888" y="882.12189" id="text3107" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    x="336.59888" y="907.12189" id="tspan3111">c x</tspan><tspan sodipodi:role="line"
    x="336.59888" y="932.12189" id="tspan3113">d x</tspan><tspan sodipodi:role="line"
    x="336.59888" y="957.12189" id="tspan3115">e</tspan> <tspan sodipodi:role="line"
    x="336.59888" y="982.12189" id="tspan3117">f</tspan></text> <text xml:space="preserve"
    style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="331.60812" y="849.40472" id="text3131" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3133" x="331.60812" y="849.40472">Fixed in:</tspan></text> <text xml:space="preserve"
    style="font-size:25px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="380.96118" y="956.98328" id="text3334" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3336" x="380.96118" y="956.98328" style="font-size:20px">x</tspan><tspan
    sodipodi:role="line" x="380.96118" y="988.23328" id="tspan3338" style="font-size:20px">x</tspan></text>
    <text xml:space="preserve" style="font-size:25px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="353.23474" y="130.31422" id="text3340" sodipodi:linespacing="125%" transform="translate(0,752.36218)"><tspan
    sodipodi:role="line" id="tspan3342" x="353.23474" y="130.31422">A</tspan></text>
    <text xml:space="preserve" style="font-size:25px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="383.17929" y="128.65065" id="text3344" sodipodi:linespacing="125%" transform="translate(0,752.36218)"><tspan
    sodipodi:role="line" id="tspan3346" x="383.17929" y="128.65065">B</tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: 'In the above figure, we have vectors \(\mathbf{c,d,e,f}\). If one were to take
    the derivative of \(\mathbf{e}\) with respect to \(\theta\):'
  prefs: []
  type: TYPE_NORMAL
- en: \[\frac{d \mathbf{e}}{d \theta}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'it is not clear what the derivative is. If you are observing from frame \(\mathbf{A}\),
    it is clearly non-zero. If you are observing from frame \(\mathbf{B}\), the derivative
    is zero. We will therefore introduce the frame as part of the derivative notation:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\frac{^{\mathbf{A}} d \mathbf{e}}{d \theta} &\neq 0 \textrm{,
    the derivative of } \mathbf{e} \textrm{ with respect to } \theta \textrm{ in the
    reference frame } \mathbf{A}\\ \frac{^{\mathbf{B}} d \mathbf{e}}{d \theta} &=
    0 \textrm{, the derivative of } \mathbf{e} \textrm{ with respect to } \theta \textrm{
    in the reference frame } \mathbf{B}\\ \frac{^{\mathbf{A}} d \mathbf{c}}{d \theta}
    &= 0 \textrm{, the derivative of } \mathbf{c} \textrm{ with respect to } \theta
    \textrm{ in the reference frame } \mathbf{A}\\ \frac{^{\mathbf{B}} d \mathbf{c}}{d
    \theta} &\neq 0 \textrm{, the derivative of } \mathbf{c} \textrm{ with respect
    to } \theta \textrm{ in the reference frame } \mathbf{B}\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some additional properties of derivatives of vectors in specific frames:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\frac{^{\mathbf{A}} d}{dt}(\mathbf{a} + \mathbf{b}) &= \frac{^{\mathbf{A}}
    d\mathbf{a}}{dt} + \frac{^{\mathbf{A}} d\mathbf{b}}{dt}\\ \frac{^{\mathbf{A}}
    d}{dt}\gamma \mathbf{a} &= \frac{ d \gamma}{dt}\mathbf{a} + \gamma\frac{^{\mathbf{A}}
    d\mathbf{a}}{dt}\\ \frac{^{\mathbf{A}} d}{dt}(\mathbf{a} \times \mathbf{b}) &=
    \frac{^{\mathbf{A}} d\mathbf{a}}{dt} \times \mathbf{b} + \mathbf{a} \times \frac{^{\mathbf{A}}
    d\mathbf{b}}{dt}\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Relating Sets of Basis Vectors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We need to now define the relationship between two different reference frames;
    or how to relate the basis vectors of one frame to another. We can do this using
    a direction cosine matrix (DCM). The direction cosine matrix relates the basis
    vectors of one frame to another, in the following fashion:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\begin{bmatrix} \mathbf{\hat{a}_x} \\ \mathbf{\hat{a}_y} \\ \mathbf{\hat{a}_z}
    \\ \end{bmatrix} = \begin{bmatrix} ^{\mathbf{A}} \mathbf{C}^{\mathbf{B}} \end{bmatrix}
    \begin{bmatrix} \mathbf{\hat{b}_x} \\ \mathbf{\hat{b}_y} \\ \mathbf{\hat{b}_z}
    \\ \end{bmatrix}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'When two frames (say, \(\mathbf{A}\) & \(\mathbf{B}\)) are initially aligned,
    then one frame has all of its basis vectors rotated around an axis which is aligned
    with a basis vector, we say the frames are related by a simple rotation. The figure
    below shows this:'
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="250" height="250" id="svg3601" version="1.1"
    inkscape:version="0.48.1 r9760" sodipodi:docname="New document 10"><metadata id="metadata3606"><rdf><work
    rdf:about=""><format>image/svg+xml</format></work></rdf></metadata> <g inkscape:label="Layer
    1" inkscape:groupmode="layer" id="layer1" transform="translate(0,-802.36218)"><text
    xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="34.67466" y="151.96918" id="text3615" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3617" x="34.67466" y="151.96918">A</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="121.14726" y="126.71233" id="text3619" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3621" x="121.14726" y="126.71233">B</tspan></text>
    <text xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="107.87672" y="963.74915" id="text3631" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3633" x="107.87672" y="963.74915" style="font-size:14px">θ</tspan></text>
    <text sodipodi:linespacing="125%" id="text3635" y="985.15326" x="48.801373" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    xml:space="preserve"><tspan style="font-size:14px" y="985.15326" x="48.801373"
    id="tspan3637" sodipodi:role="line">θ</tspan></text> <text xml:space="preserve"
    style="font-size:16px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="81.763702" y="24.828768" id="text3639" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3641" x="81.763702" y="24.828768">a<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan3661">z</tspan></tspan><tspan sodipodi:role="line" x="81.763702" y="44.828766"
    id="tspan3643">b<tspan style="font-size:65%;baseline-shift:sub" id="tspan3663">z</tspan></tspan></text>
    <text xml:space="preserve" style="font-size:16px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="13.270548" y="201.62671" id="text3649" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3651" x="13.270548" y="201.62671">a<tspan style="font-size:65%;baseline-shift:sub"
    id="tspan3653">x</tspan></tspan></text> <text xml:space="preserve" style="font-size:16px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="59.503422" y="1010.4102" id="text3655" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3657" x="59.503422" y="1010.4102">b<tspan style="font-size:65.00091553%;baseline-shift:sub"
    id="tspan3659">x</tspan></tspan></text> <text xml:space="preserve" style="font-size:16px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="157.10616" y="170.37671" id="text3665" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3667" x="157.10616" y="170.37671">a<tspan style="font-size:65%;baseline-shift:sub"
    id="tspan3669">y</tspan></tspan></text> <text xml:space="preserve" style="font-size:16px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="158.8185" y="139.98288" id="text3671" sodipodi:linespacing="125%" transform="translate(0,802.36218)"><tspan
    sodipodi:role="line" id="tspan3673" x="158.8185" y="139.98288">b<tspan style="font-size:65%;baseline-shift:sub"
    id="tspan3675">y</tspan></tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: The above rotation is a simple rotation about the Z axis by an angle \(\theta\).
    Note that after the rotation, the basis vectors \(\mathbf{\hat{a}_z}\) and \(\mathbf{\hat{b}_z}\)
    are still aligned.
  prefs: []
  type: TYPE_NORMAL
- en: 'This rotation can be characterized by the following direction cosine matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}^{\mathbf{A}}\mathbf{C}^{\mathbf{B}} = \begin{bmatrix} \cos(\theta)
    & - \sin(\theta) & 0\\ \sin(\theta) & \cos(\theta) & 0\\ 0 & 0 & 1\\ \end{bmatrix}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Simple rotations about the X and Y axes are defined by:'
  prefs: []
  type: TYPE_NORMAL
- en: '\[ \begin{align}\begin{aligned}\begin{split}\textrm{DCM for x-axis rotation:
    } \begin{bmatrix} 1 & 0 & 0\\ 0 & \cos(\theta) & -\sin(\theta)\\ 0 & \sin(\theta)
    & \cos(\theta) \end{bmatrix}\end{split}\\\begin{split}\textrm{DCM for y-axis rotation:
    } \begin{bmatrix} \cos(\theta) & 0 & \sin(\theta)\\ 0 & 1 & 0\\ -\sin(\theta)
    & 0 & \cos(\theta)\\ \end{bmatrix}\end{split}\end{aligned}\end{align} \]'
  prefs: []
  type: TYPE_NORMAL
- en: Rotation in the positive direction here will be defined by using the right-hand
    rule.
  prefs: []
  type: TYPE_NORMAL
- en: 'The direction cosine matrix is also involved with the definition of the dot
    product between sets of basis vectors. If we have two reference frames with associated
    basis vectors, their direction cosine matrix can be defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\begin{bmatrix} C_{xx} & C_{xy} & C_{xz}\\ C_{yx} & C_{yy} &
    C_{yz}\\ C_{zx} & C_{zy} & C_{zz}\\ \end{bmatrix} = \begin{bmatrix} \mathbf{\hat{a}_x}\cdot\mathbf{\hat{b}_x}
    & \mathbf{\hat{a}_x}\cdot\mathbf{\hat{b}_y} & \mathbf{\hat{a}_x}\cdot\mathbf{\hat{b}_z}\\
    \mathbf{\hat{a}_y}\cdot\mathbf{\hat{b}_x} & \mathbf{\hat{a}_y}\cdot\mathbf{\hat{b}_y}
    & \mathbf{\hat{a}_y}\cdot\mathbf{\hat{b}_z}\\ \mathbf{\hat{a}_z}\cdot\mathbf{\hat{b}_x}
    & \mathbf{\hat{a}_z}\cdot\mathbf{\hat{b}_y} & \mathbf{\hat{a}_z}\cdot\mathbf{\hat{b}_z}\\
    \end{bmatrix}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, the direction cosine matrix is orthogonal, in that:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}^{\mathbf{A}}\mathbf{C}^{\mathbf{B}} = (^{\mathbf{B}}\mathbf{C}^{\mathbf{A}})^{-1}\\
    = (^{\mathbf{B}}\mathbf{C}^{\mathbf{A}})^T\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'If we have reference frames \(\mathbf{A}\) and \(\mathbf{B}\), which in this
    example have undergone a simple z-axis rotation by an amount \(\theta\), we will
    have two sets of basis vectors. We can then define two vectors: \(\mathbf{a} =
    \mathbf{\hat{a}_x} + \mathbf{\hat{a}_y} + \mathbf{\hat{a}_z}\) and \(\mathbf{b}
    = \mathbf{\hat{b}_x} + \mathbf{\hat{b}_y} + \mathbf{\hat{b}_z}\). If we wish to
    express \(\mathbf{b}\) in the \(\mathbf{A}\) frame, we do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{b} &= \mathbf{\hat{b}_x} + \mathbf{\hat{b}_y} + \mathbf{\hat{b}_z}\\
    \mathbf{b} &= \begin{bmatrix}\mathbf{\hat{a}_x}\cdot (\mathbf{\hat{b}_x} + \mathbf{\hat{b}_y}
    + \mathbf{\hat{b}_z})\end{bmatrix} \mathbf{\hat{a}_x} + \begin{bmatrix}\mathbf{\hat{a}_y}\cdot
    (\mathbf{\hat{b}_x} + \mathbf{\hat{b}_y} + \mathbf{\hat{b}_z})\end{bmatrix} \mathbf{\hat{a}_y}
    + \begin{bmatrix}\mathbf{\hat{a}_z}\cdot (\mathbf{\hat{b}_x} + \mathbf{\hat{b}_y}
    + \mathbf{\hat{b}_z})\end{bmatrix} \mathbf{\hat{a}_z}\\ \mathbf{b} &= (\cos(\theta)
    - \sin(\theta))\mathbf{\hat{a}_x} + (\sin(\theta) + \cos(\theta))\mathbf{\hat{a}_y}
    + \mathbf{\hat{a}_z}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'And if we wish to express \(\mathbf{a}\) in the \(\mathbf{B}\), we do:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{a} &= \mathbf{\hat{a}_x} + \mathbf{\hat{a}_y} + \mathbf{\hat{a}_z}\\
    \mathbf{a} &= \begin{bmatrix}\mathbf{\hat{b}_x}\cdot (\mathbf{\hat{a}_x} + \mathbf{\hat{a}_y}
    + \mathbf{\hat{a}_z})\end{bmatrix} \mathbf{\hat{b}_x} + \begin{bmatrix}\mathbf{\hat{b}_y}\cdot
    (\mathbf{\hat{a}_x} + \mathbf{\hat{a}_y} + \mathbf{\hat{a}_z})\end{bmatrix} \mathbf{\hat{b}_y}
    + \begin{bmatrix}\mathbf{\hat{b}_z}\cdot (\mathbf{\hat{a}_x} + \mathbf{\hat{a}_y}
    + \mathbf{\hat{a}_z})\end{bmatrix} \mathbf{\hat{b}_z}\\ \mathbf{a} &= (\cos(\theta)
    + \sin(\theta))\mathbf{\hat{b}_x} + (-\sin(\theta)+\cos(\theta))\mathbf{\hat{b}_y}
    + \mathbf{\hat{b}_z}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Derivatives with Multiple Frames
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If we have reference frames \(\mathbf{A}\) and \(\mathbf{B}\) we will have
    two sets of basis vectors. We can then define two vectors: \(\mathbf{a} = a_x\mathbf{\hat{a}_x}
    + a_y\mathbf{\hat{a}_y} + a_z\mathbf{\hat{a}_z}\) and \(\mathbf{b} = b_x\mathbf{\hat{b}_x}
    + b_y\mathbf{\hat{b}_y} + b_z\mathbf{\hat{b}_z}\). If we want to take the derivative
    of \(\mathbf{b}\) in the reference frame \(\mathbf{A}\), we must first express
    it in \(\mathbf{A}\), and the take the derivatives of the measure numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\frac{^{\mathbf{A}} d\mathbf{b}}{dx} = \frac{d (\mathbf{b}\cdot \mathbf{\hat{a}_x}
    )}{dx} \mathbf{\hat{a}_x} + \frac{d (\mathbf{b}\cdot \mathbf{\hat{a}_y} )}{dx}
    \mathbf{\hat{a}_y} + \frac{d (\mathbf{b}\cdot \mathbf{\hat{a}_z} )}{dx} \mathbf{\hat{a}_z}
    +\]
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'An example of vector calculus:'
  prefs: []
  type: TYPE_NORMAL
- en: <svg class="align-center" width="340" height="490" id="svg3312" version="1.1"
    inkscape:version="0.48.1 r9760" sodipodi:docname="New document 13"><metadata id="metadata3317"><rdf><work
    rdf:about=""><format>image/svg+xml</format></work></rdf></metadata> <g inkscape:label="Layer
    1" inkscape:groupmode="layer" id="layer1" transform="translate(0,-552.36218)"><text
    xml:space="preserve" style="font-size:20px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="115" y="977.36218" id="text3368" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3370" x="115" y="977.36218" style="font-size:30px">A</tspan></text> <text
    xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="218.33334" y="966.52887" id="text3372" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3374" x="218.33334" y="966.52887" style="font-size:30px">B</tspan></text>
    <text xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="32.5" y="291.66666" id="text3380" sodipodi:linespacing="125%" transform="translate(0,552.36218)"><tspan
    sodipodi:role="line" id="tspan3382" x="32.5" y="291.66666" style="font-size:20px">l</tspan></text>
    <text xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="207.5" y="70.833336" id="text3388" sodipodi:linespacing="125%" transform="translate(0,552.36218)"><tspan
    sodipodi:role="line" id="tspan3390" x="207.5" y="70.833336">x</tspan></text> <text
    xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="113.33333" y="380" id="text3392" sodipodi:linespacing="125%" transform="translate(0,552.36218)"><tspan
    sodipodi:role="line" id="tspan3394" x="113.33333" y="380">a<tspan style="font-size:65%;baseline-shift:sub"
    id="tspan3414">x</tspan></tspan></text> <text xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="84.166664" y="345.83334" id="text3396" sodipodi:linespacing="125%" transform="translate(0,552.36218)"><tspan
    sodipodi:role="line" id="tspan3398" x="84.166664" y="345.83334">a<tspan style="font-size:65%;baseline-shift:sub"
    id="tspan3412">y</tspan></tspan></text> <text xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="318.33334" y="375" id="text3400" sodipodi:linespacing="125%" transform="translate(0,552.36218)"><tspan
    sodipodi:role="line" id="tspan3402" x="318.33334" y="375">b<tspan style="font-size:65%;baseline-shift:sub"
    id="tspan3418">x</tspan></tspan></text> <text xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="288.33334" y="342.5" id="text3404" sodipodi:linespacing="125%" transform="translate(0,552.36218)"><tspan
    sodipodi:role="line" id="tspan3406" x="288.33334" y="342.5">b<tspan style="font-size:65%;baseline-shift:sub"
    id="tspan3422">y</tspan></tspan></text> <text xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="216.66667" y="257.5" id="text3408" sodipodi:linespacing="125%" transform="translate(0,552.36218)"><tspan
    sodipodi:role="line" id="tspan3410" x="216.66667" y="257.5">c</tspan></text> <text
    xml:space="preserve" style="font-size:15px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:CurrentColor;fill-opacity:1;stroke:none;font-family:Sans"
    x="262.5" y="659.86218" id="text3436" sodipodi:linespacing="125%"><tspan sodipodi:role="line"
    id="tspan3438" x="262.5" y="659.86218">θ</tspan></text></g></svg>
  prefs: []
  type: TYPE_NORMAL
- en: In this example we have two bodies, each with an attached reference frame. We
    will say that \(\theta\) and \(x\) are functions of time. We wish to know the
    time derivative of vector \(\mathbf{c}\) in both the \(\mathbf{A}\) and \(\mathbf{B}\)
    frames.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to define \(\mathbf{c}\); \(\mathbf{c}=x\mathbf{\hat{b}_x}+l\mathbf{\hat{b}_y}\).
    This provides a definition in the \(\mathbf{B}\) frame. We can now do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\frac{^{\mathbf{B}} d \mathbf{c}}{dt} &= \frac{dx}{dt} \mathbf{\hat{b}_x}
    + \frac{dl}{dt} \mathbf{\hat{b}_y}\\ &= \dot{x} \mathbf{\hat{b}_x}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'To take the derivative in the \(\mathbf{A}\) frame, we have to first relate
    the two frames:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}^{\mathbf{A}} \mathbf{C} ^{\mathbf{B}} = \begin{bmatrix} \cos(\theta)
    & 0 & \sin(\theta)\\ 0 & 1 & 0\\ -\sin(\theta) & 0 & \cos(\theta)\\ \end{bmatrix}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\frac{^{\mathbf{A}} d \mathbf{c}}{dt} &= \frac{d (\mathbf{c}
    \cdot \mathbf{\hat{a}_x})}{dt} \mathbf{\hat{a}_x} + \frac{d (\mathbf{c} \cdot
    \mathbf{\hat{a}_y})}{dt} \mathbf{\hat{a}_y} + \frac{d (\mathbf{c} \cdot \mathbf{\hat{a}_z})}{dt}
    \mathbf{\hat{a}_z}\\ &= \frac{d (\cos(\theta) x)}{dt} \mathbf{\hat{a}_x} + \frac{d
    (l)}{dt} \mathbf{\hat{a}_y} + \frac{d (-\sin(\theta) x)}{dt} \mathbf{\hat{a}_z}\\
    &= (-\dot{\theta}\sin(\theta)x + \cos(\theta)\dot{x}) \mathbf{\hat{a}_x} + (\dot{\theta}\cos(\theta)x
    + \sin(\theta)\dot{x}) \mathbf{\hat{a}_z}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that this is the time derivative of \(\mathbf{c}\) in \(\mathbf{A}\),
    and is expressed in the \(\mathbf{A}\) frame. We can express it in the \(\mathbf{B}\)
    frame however, and the expression will still be valid:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\frac{^{\mathbf{A}} d \mathbf{c}}{dt} &= (-\dot{\theta}\sin(\theta)x
    + \cos(\theta)\dot{x}) \mathbf{\hat{a}_x} + (\dot{\theta}\cos(\theta)x + \sin(\theta)\dot{x})
    \mathbf{\hat{a}_z}\\ &= \dot{x}\mathbf{\hat{b}_x} - \theta x \mathbf{\hat{b}_z}\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Note the difference in expression complexity between the two forms. They are
    equivalent, but one is much simpler. This is an extremely important concept, as
    defining vectors in the more complex forms can vastly slow down formulation of
    the equations of motion and increase their length, sometimes to a point where
    they cannot be shown on screen.
  prefs: []
  type: TYPE_NORMAL
- en: Using Vectors and Reference Frames
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We have waited until after all of the relevant mathematical relationships have
    been defined for vectors and reference frames to introduce code. This is due to
    how vectors are formed. When starting any problem in [`sympy.physics.vector`](index.html#module-sympy.physics.vector
    "sympy.physics.vector"), one of the first steps is defining a reference frame
    (remember to import sympy.physics.vector first):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we have created a reference frame, \(\mathbf{N}\). To have access to any
    basis vectors, first a reference frame needs to be created. Now that we have made
    and object representing \(\mathbf{N}\), we can access its basis vectors:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Vector Algebra, in physics.vector
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We can now do basic algebraic operations on these vectors.:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Remember, don’t add a scalar quantity to a vector (`N.x + 5`); this will raise
    an error. At this point, we’ll use SymPy’s Symbol in our vectors. Remember to
    refer to SymPy’s Gotchas and Pitfalls when dealing with symbols.:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'In [`sympy.physics.vector`](index.html#module-sympy.physics.vector "sympy.physics.vector")
    multiple interfaces to vector multiplication have been implemented, at the operator
    level, method level, and function level. The vector dot product can work as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The “official” interface is the function interface; this is what will be used
    in all examples. This is to avoid confusion with the attribute and methods being
    next to each other, and in the case of the operator operation priority. The operators
    used in [`sympy.physics.vector`](index.html#module-sympy.physics.vector "sympy.physics.vector")
    for vector multiplication do not posses the correct order of operations; this
    can lead to errors. Care with parentheses is needed when using operators to represent
    vector multiplication.
  prefs: []
  type: TYPE_NORMAL
- en: The cross product is the other vector multiplication which will be discussed
    here. It offers similar interfaces to the dot product, and comes with the same
    warnings.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Two additional operations can be done with vectors: normalizing the vector
    to length 1, and getting its magnitude. These are done as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Vectors are often expressed in a matrix form, especially for numerical purposes.
    Since the matrix form does not contain any information about the reference frame
    the vector is defined in, you must provide a reference frame to extract the measure
    numbers from the vector. There is a convenience function to do this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Vector Calculus, in physics.vector
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We have already introduced our first reference frame. We can take the derivative
    in that frame right now, if we desire:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: SymPy has a `diff` function, but it does not currently work with [`sympy.physics.vector`](index.html#module-sympy.physics.vector
    "sympy.physics.vector") Vectors, so please use `Vector`’s `diff` method. The reason
    for this is that when differentiating a `Vector`, the frame of reference must
    be specified in addition to what you are taking the derivative with respect to;
    SymPy’s `diff` function doesn’t fit this mold.
  prefs: []
  type: TYPE_NORMAL
- en: The more interesting case arise with multiple reference frames. If we introduce
    a second reference frame, \(\mathbf{A}\), we now have two frames. Note that at
    this point we can add components of \(\mathbf{N}\) and \(\mathbf{A}\) together,
    but cannot perform vector multiplication, as no relationship between the two frames
    has been defined.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: If we want to do vector multiplication, first we have to define an orientation.
    The `orient` method of `ReferenceFrame` provides that functionality.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'This orients the \(\mathbf{A}\) frame relative to the \(\mathbf{N}\) frame
    by a simple rotation, around the Y axis, by an amount x. The DCM between these
    two frames can be viewed at any time with the `dcm` method: `A.dcm(N)` gives the
    dcm \(^{\mathbf{A}} \mathbf{C} ^{\mathbf{N}}\).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Other, more complicated rotation types include Body rotations, Space rotations,
    quaternions, and arbitrary axis rotations. Body and space rotations are equivalent
    to doing 3 simple rotations in a row, each about a basis vector in the new frame.
    An example follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Space orientations are similar to body orientation, but applied from the frame
    to body. Body and space rotations can involve either two or three axes: ‘XYZ’
    works, as does ‘YZX’, ‘ZXZ’, ‘YXY’, etc. What is key is that each simple rotation
    is about a different axis than the previous one; ‘ZZX’ does not completely orient
    a set of basis vectors in 3 space.'
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes it will be more convenient to create a new reference frame and orient
    relative to an existing one in one step. The `orientnew` method allows for this
    functionality, and essentially wraps the `orient` method. All of the things you
    can do in `orient`, you can do in `orientnew`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Quaternions (or Euler Parameters) use 4 value to characterize the orientation
    of the frame. This and arbitrary axis rotations are described in the `orient`
    and `orientnew` method help, or in the references [[Kane1983]](../mechanics/reference.html#kane1983).
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, before starting multiframe calculus operations, we will introduce
    another [`sympy.physics.vector`](index.html#module-sympy.physics.vector "sympy.physics.vector")
    tool: `dynamicsymbols`. `dynamicsymbols` is a shortcut function to create undefined
    functions of time within SymPy. The derivative of such a ‘dynamicsymbol’ is shown
    below.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The ‘dynamicsymbol’ printing is not very clear above; we will also introduce
    a few other tools here. We can use `vprint` instead of print for non-interactive
    sessions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: For interactive sessions use `init_vprinting`. There also exist analogs for
    SymPy’s `vprint`, `vpprint`, and `latex`, `vlatex`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: A ‘dynamicsymbol’ should be used to represent any time varying quantity in [`sympy.physics.vector`](index.html#module-sympy.physics.vector
    "sympy.physics.vector"), whether it is a coordinate, varying position, or force.
    The primary use of a ‘dynamicsymbol’ is for speeds and coordinates (of which there
    will be more discussion in the Kinematics Section of the documentation).
  prefs: []
  type: TYPE_NORMAL
- en: Now we will define the orientation of our new frames with a ‘dynamicsymbol’,
    and can take derivatives and time derivatives with ease. Some examples follow.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that the output vectors are kept in the same frames that they were provided
    in. This remains true for vectors with components made of basis vectors from multiple
    frames:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: How Vectors are Coded
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: What follows is a short description of how vectors are defined by the code in
    [`sympy.physics.vector`](index.html#module-sympy.physics.vector "sympy.physics.vector").
    It is provided for those who want to learn more about how this part of [`sympy.physics.vector`](index.html#module-sympy.physics.vector
    "sympy.physics.vector") works, and does not need to be read to use this module;
    don’t read it unless you want to learn how this module was implemented.
  prefs: []
  type: TYPE_NORMAL
- en: Every `Vector`’s main information is stored in the `args` attribute, which stores
    the three measure numbers for each basis vector in a frame, for every relevant
    frame. A vector does not exist in code until a `ReferenceFrame` is created. At
    this point, the `x`, `y`, and `z` attributes of the reference frame are immutable
    `Vector`’s which have measure numbers of [1,0,0], [0,1,0], and [0,0,1] associated
    with that `ReferenceFrame`. Once these vectors are accessible, new vectors can
    be created by doing algebraic operations with the basis vectors. A vector can
    have components from multiple frames though. That is why `args` is a list; it
    has as many elements in the list as there are unique `ReferenceFrames` in its
    components, i.e. if there are `A` and `B` frame basis vectors in our new vector,
    `args` is of length 2; if it has `A`, `B`, and `C` frame basis vector, `args`
    is of length three.
  prefs: []
  type: TYPE_NORMAL
- en: Each element in the `args` list is a 2-tuple; the first element is a SymPy `Matrix`
    (this is where the measure numbers for each set of basis vectors are stored) and
    the second element is a `ReferenceFrame` to associate those measure numbers with.
  prefs: []
  type: TYPE_NORMAL
- en: '`ReferenceFrame` stores a few things. First, it stores the name you supply
    it on creation (`name` attribute). It also stores the direction cosine matrices,
    defined upon creation with the `orientnew` method, or calling the `orient` method
    after creation. The direction cosine matrices are represented by SymPy’s `Matrix`,
    and are part of a dictionary where the keys are the `ReferenceFrame` and the value
    the `Matrix`; these are set bi-directionally; in that when you orient `A` to `N`
    you are setting `A`’s orientation dictionary to include `N` and its `Matrix`,
    but you are also setting `N`’s orientation dictionary to include `A` and its `Matrix`
    (that DCM being the transpose of the other).'
  prefs: []
  type: TYPE_NORMAL
