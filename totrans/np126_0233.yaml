- en: numpy.fill_diagonal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fill_diagonal.html](https://numpy.org/doc/1.26/reference/generated/numpy.fill_diagonal.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Fill the main diagonal of the given array of any dimensionality.
  prefs: []
  type: TYPE_NORMAL
- en: For an array *a* with `a.ndim >= 2`, the diagonal is the list of locations with
    indices `a[i, ..., i]` all identical. This function modifies the input array in-place,
    it does not return a value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array, at least 2-D.'
  prefs: []
  type: TYPE_NORMAL
- en: Array whose diagonal is to be filled, it gets modified in-place.
  prefs: []
  type: TYPE_NORMAL
- en: '**val**scalar or array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Value(s) to write on the diagonal. If *val* is scalar, the value is written
    along the diagonal. If array-like, the flattened *val* is written along the diagonal,
    repeating if necessary to fill all diagonal entries.
  prefs: []
  type: TYPE_NORMAL
- en: '**wrap**bool'
  prefs: []
  type: TYPE_NORMAL
- en: For tall matrices in NumPy version up to 1.6.2, the diagonal “wrapped” after
    N columns. You can have this behavior with this option. This affects only tall
    matrices.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`diag_indices`](numpy.diag_indices.html#numpy.diag_indices "numpy.diag_indices"),
    [`diag_indices_from`](numpy.diag_indices_from.html#numpy.diag_indices_from "numpy.diag_indices_from")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: This functionality can be obtained via [`diag_indices`](numpy.diag_indices.html#numpy.diag_indices
    "numpy.diag_indices"), but internally this version uses a much faster implementation
    that never constructs the indices and uses simple slicing.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The same function can operate on a 4-D array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We only show a few blocks for clarity:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The wrap option affects only tall matrices:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The anti-diagonal can be filled by reversing the order of elements using either
    [`numpy.flipud`](numpy.flipud.html#numpy.flipud "numpy.flipud") or [`numpy.fliplr`](numpy.fliplr.html#numpy.fliplr
    "numpy.fliplr").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Note that the order in which the diagonal is filled varies depending on the
    flip function.
  prefs: []
  type: TYPE_NORMAL
