- en: SciPy 0.9.0 Release Notes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/release/0.9.0-notes.html](https://docs.scipy.org/doc/scipy-1.12.0/release/0.9.0-notes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Contents
  prefs: []
  type: TYPE_NORMAL
- en: '[SciPy 0.9.0 Release Notes](#scipy-0-9-0-release-notes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Python 3](#python-3)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Scipy source code location to be changed](#scipy-source-code-location-to-be-changed)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[New features](#new-features)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Delaunay tessellations (`scipy.spatial`)](#delaunay-tessellations-scipy-spatial)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[N-dimensional interpolation (`scipy.interpolate`)](#n-dimensional-interpolation-scipy-interpolate)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Nonlinear equation solvers (`scipy.optimize`)](#nonlinear-equation-solvers-scipy-optimize)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[New linear algebra routines (`scipy.linalg`)](#new-linear-algebra-routines-scipy-linalg)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Improved FIR filter design functions (`scipy.signal`)](#improved-fir-filter-design-functions-scipy-signal)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Improved statistical tests (`scipy.stats`)](#improved-statistical-tests-scipy-stats)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecated features](#deprecated-features)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Obsolete nonlinear solvers (in `scipy.optimize`)](#obsolete-nonlinear-solvers-in-scipy-optimize)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removed features](#removed-features)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Old correlate/convolve behavior (in `scipy.signal`)](#old-correlate-convolve-behavior-in-scipy-signal)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`scipy.stats`](#scipy-stats)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`scipy.sparse`](#scipy-sparse)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`scipy.sparse.linalg.arpack.speigs`](#scipy-sparse-linalg-arpack-speigs)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other changes](#other-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ARPACK interface changes](#arpack-interface-changes)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: SciPy 0.9.0 is the culmination of 6 months of hard work. It contains many new
    features, numerous bug-fixes, improved test coverage and better documentation.
    There have been a number of deprecations and API changes in this release, which
    are documented below. All users are encouraged to upgrade to this release, as
    there are a large number of bug-fixes and optimizations. Moreover, our development
    attention will now shift to bug-fix releases on the 0.9.x branch, and on adding
    new features on the development trunk.
  prefs: []
  type: TYPE_NORMAL
- en: This release requires Python 2.4 - 2.7 or 3.1 - and NumPy 1.5 or greater.
  prefs: []
  type: TYPE_NORMAL
- en: Please note that SciPy is still considered to have “Beta” status, as we work
    toward a SciPy 1.0.0 release. The 1.0.0 release will mark a major milestone in
    the development of SciPy, after which changing the package structure or API will
    be much more difficult. Whilst these pre-1.0 releases are considered to have “Beta”
    status, we are committed to making them as bug-free as possible.
  prefs: []
  type: TYPE_NORMAL
- en: However, until the 1.0 release, we are aggressively reviewing and refining the
    functionality, organization, and interface. This is being done in an effort to
    make the package as coherent, intuitive, and useful as possible. To achieve this,
    we need help from the community of users. Specifically, we need feedback regarding
    all aspects of the project - everything - from which algorithms we implement,
    to details about our function’s call signatures.
  prefs: []
  type: TYPE_NORMAL
- en: '[Python 3](#id2)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Scipy 0.9.0 is the first SciPy release to support Python 3\. The only module
    that is not yet ported is `scipy.weave`.
  prefs: []
  type: TYPE_NORMAL
- en: '[Scipy source code location to be changed](#id3)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Soon after this release, Scipy will stop using SVN as the version control system,
    and move to Git. The development source code for Scipy can from then on be found
    at
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/scipy/scipy](https://github.com/scipy/scipy)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[New features](#id4)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Delaunay tessellations (`scipy.spatial`)](#id5)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Scipy now includes routines for computing Delaunay tessellations in N dimensions,
    powered by the [Qhull](http://www.qhull.org/) computational geometry library.
    Such calculations can now make use of the new `scipy.spatial.Delaunay` interface.
  prefs: []
  type: TYPE_NORMAL
- en: '[N-dimensional interpolation (`scipy.interpolate`)](#id6)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Support for scattered data interpolation is now significantly improved. This
    version includes a `scipy.interpolate.griddata` function that can perform linear
    and nearest-neighbour interpolation for N-dimensional scattered data, in addition
    to cubic spline (C1-smooth) interpolation in 2D and 1D. An object-oriented interface
    to each interpolator type is also available.
  prefs: []
  type: TYPE_NORMAL
- en: '[Nonlinear equation solvers (`scipy.optimize`)](#id7)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Scipy includes new routines for large-scale nonlinear equation solving in `scipy.optimize`.
    The following methods are implemented:'
  prefs: []
  type: TYPE_NORMAL
- en: Newton-Krylov (`scipy.optimize.newton_krylov`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '(Generalized) secant methods:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limited-memory Broyden methods (`scipy.optimize.broyden1`, `scipy.optimize.broyden2`)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Anderson method (`scipy.optimize.anderson`)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Simple iterations (`scipy.optimize.diagbroyden`, `scipy.optimize.excitingmixing`,
    `scipy.optimize.linearmixing`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `scipy.optimize.nonlin` module was completely rewritten, and some of the
    functions were deprecated (see above).
  prefs: []
  type: TYPE_NORMAL
- en: '[New linear algebra routines (`scipy.linalg`)](#id8)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Scipy now contains routines for effectively solving triangular equation systems
    (`scipy.linalg.solve_triangular`).
  prefs: []
  type: TYPE_NORMAL
- en: '[Improved FIR filter design functions (`scipy.signal`)](#id9)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The function `scipy.signal.firwin` was enhanced to allow the design of highpass,
    bandpass, bandstop and multi-band FIR filters.
  prefs: []
  type: TYPE_NORMAL
- en: The function `scipy.signal.firwin2` was added. This function uses the window
    method to create a linear phase FIR filter with an arbitrary frequency response.
  prefs: []
  type: TYPE_NORMAL
- en: The functions `scipy.signal.kaiser_atten` and `scipy.signal.kaiser_beta` were
    added.
  prefs: []
  type: TYPE_NORMAL
- en: '[Improved statistical tests (`scipy.stats`)](#id10)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A new function `scipy.stats.fisher_exact` was added, that provides Fisher’s
    exact test for 2x2 contingency tables.
  prefs: []
  type: TYPE_NORMAL
- en: The function `scipy.stats.kendalltau` was rewritten to make it much faster (O(n
    log(n)) vs O(n^2)).
  prefs: []
  type: TYPE_NORMAL
- en: '[Deprecated features](#id11)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Obsolete nonlinear solvers (in `scipy.optimize`)](#id12)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following nonlinear solvers from `scipy.optimize` are deprecated:'
  prefs: []
  type: TYPE_NORMAL
- en: '`broyden_modified` (bad performance)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`broyden1_modified` (bad performance)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`broyden_generalized` (equivalent to `anderson`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`anderson2` (equivalent to `anderson`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`broyden3` (obsoleted by new limited-memory broyden methods)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vackar` (renamed to `diagbroyden`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removed features](#id13)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The deprecated modules `helpmod`, `pexec` and `ppimport` were removed from `scipy.misc`.
  prefs: []
  type: TYPE_NORMAL
- en: The `output_type` keyword in many `scipy.ndimage` interpolation functions has
    been removed.
  prefs: []
  type: TYPE_NORMAL
- en: The `econ` keyword in `scipy.linalg.qr` has been removed. The same functionality
    is still available by specifying `mode='economic'`.
  prefs: []
  type: TYPE_NORMAL
- en: '[Old correlate/convolve behavior (in `scipy.signal`)](#id14)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The old behavior for `scipy.signal.convolve`, `scipy.signal.convolve2d`, `scipy.signal.correlate`
    and `scipy.signal.correlate2d` was deprecated in 0.8.0 and has now been removed.
    Convolve and correlate used to swap their arguments if the second argument has
    dimensions larger than the first one, and the mode was relative to the input with
    the largest dimension. The current behavior is to never swap the inputs, which
    is what most people expect, and is how correlation is usually defined.
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats`](#id15)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Many functions in `scipy.stats` that are either available from numpy or have
    been superseded, and have been deprecated since version 0.7, have been removed:
    *std*, *var*, *mean*, *median*, *cov*, *corrcoef*, *z*, *zs*, *stderr*, *samplestd*,
    *samplevar*, *pdfapprox*, *pdf_moments* and *erfc*. These changes are mirrored
    in `scipy.stats.mstats`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.sparse`](#id16)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Several methods of the sparse matrix classes in `scipy.sparse` which had been
    deprecated since version 0.7 were removed: *save*, *rowcol*, *getdata*, *listprint*,
    *ensure_sorted_indices*, *matvec*, *matmat* and *rmatvec*.'
  prefs: []
  type: TYPE_NORMAL
- en: The functions `spkron`, `speye`, `spidentity`, `lil_eye` and `lil_diags` were
    removed from `scipy.sparse`. The first three functions are still available as
    `scipy.sparse.kron`, `scipy.sparse.eye` and `scipy.sparse.identity`.
  prefs: []
  type: TYPE_NORMAL
- en: The *dims* and *nzmax* keywords were removed from the sparse matrix constructor.
    The *colind* and *rowind* attributes were removed from CSR and CSC matrices respectively.
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.sparse.linalg.arpack.speigs`](#id17)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A duplicated interface to the ARPACK library was removed.
  prefs: []
  type: TYPE_NORMAL
- en: '[Other changes](#id18)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[ARPACK interface changes](#id19)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The interface to the ARPACK eigenvalue routines in `scipy.sparse.linalg` was
    changed for more robustness.
  prefs: []
  type: TYPE_NORMAL
- en: 'The eigenvalue and SVD routines now raise `ArpackNoConvergence` if the eigenvalue
    iteration fails to converge. If partially converged results are desired, they
    can be accessed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Several bugs were also fixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'The routines were moreover renamed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: eigen –> eigs
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: eigen_symmetric –> eigsh
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: svd –> svds
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
