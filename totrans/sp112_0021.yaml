- en: scipy.LowLevelCallable
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.LowLevelCallable
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.LowLevelCallable.html#scipy.LowLevelCallable](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.LowLevelCallable.html#scipy.LowLevelCallable)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.LowLevelCallable.html#scipy.LowLevelCallable](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.LowLevelCallable.html#scipy.LowLevelCallable)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Low-level callback function.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 低级回调函数。
- en: Some functions in SciPy take as arguments callback functions, which can either
    be python callables or low-level compiled functions. Using compiled callback functions
    can improve performance somewhat by avoiding wrapping data in Python objects.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy中的某些函数接受回调函数作为参数，这些函数可以是Python可调用对象或低级编译函数。使用编译的回调函数可以通过避免将数据包装在Python对象中来提高性能。
- en: Such low-level functions in SciPy are wrapped in [`LowLevelCallable`](#scipy.LowLevelCallable
    "scipy.LowLevelCallable") objects, which can be constructed from function pointers
    obtained from ctypes, cffi, Cython, or contained in Python *PyCapsule* objects.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy中这种低级函数被包装在[`LowLevelCallable`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable")对象中，可以从ctypes、cffi、Cython获取的函数指针或包含在Python *PyCapsule*对象中构造。
- en: See also
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: 'Functions accepting low-level callables:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 接受低级可调用函数的函数：
- en: '[`scipy.integrate.quad`](scipy.integrate.quad.html#scipy.integrate.quad "scipy.integrate.quad"),
    [`scipy.ndimage.generic_filter`](scipy.ndimage.generic_filter.html#scipy.ndimage.generic_filter
    "scipy.ndimage.generic_filter"), [`scipy.ndimage.generic_filter1d`](scipy.ndimage.generic_filter1d.html#scipy.ndimage.generic_filter1d
    "scipy.ndimage.generic_filter1d"), [`scipy.ndimage.geometric_transform`](scipy.ndimage.geometric_transform.html#scipy.ndimage.geometric_transform
    "scipy.ndimage.geometric_transform")'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.integrate.quad`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.quad.html#scipy.integrate.quad
    "scipy.integrate.quad"), [`scipy.ndimage.generic_filter`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter.html#scipy.ndimage.generic_filter
    "scipy.ndimage.generic_filter"), [`scipy.ndimage.generic_filter1d`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter1d.html#scipy.ndimage.generic_filter1d
    "scipy.ndimage.generic_filter1d"), [`scipy.ndimage.geometric_transform`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.geometric_transform.html#scipy.ndimage.geometric_transform
    "scipy.ndimage.geometric_transform")'
- en: 'Usage examples:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用示例：
- en: '[Extending scipy.ndimage in C](../../tutorial/ndimage.html#ndimage-ccallbacks),
    [Faster integration using low-level callback functions](../../tutorial/integrate.html#quad-callbacks)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[在C中扩展scipy.ndimage](../../tutorial/ndimage.html#ndimage-ccallbacks), [使用低级回调函数加速积分](../../tutorial/integrate.html#quad-callbacks)'
- en: 'Parameters:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**function**{PyCapsule, ctypes function pointer, cffi function pointer}'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**function**{PyCapsule, ctypes函数指针, cffi函数指针}'
- en: Low-level callback function.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 低级回调函数。
- en: '**user_data**{PyCapsule, ctypes void pointer, cffi void pointer}'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**user_data**{PyCapsule, ctypes空指针, cffi空指针}'
- en: User data to pass on to the callback function.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要传递到回调函数的用户数据。
- en: '**signature**str, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**signature**str, 可选'
- en: Signature of the function. If omitted, determined from *function*, if possible.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的签名。如果省略，将从*function*中确定，如果可能的话。
- en: Notes
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The argument `function` can be one of:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 参数`function`可以是以下之一：
- en: PyCapsule, whose name contains the C function signature
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含C函数签名的PyCapsule
- en: ctypes function pointer
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ctypes函数指针
- en: cffi function pointer
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cffi函数指针
- en: The signature of the low-level callback must match one of those expected by
    the routine it is passed to.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 低级回调函数的签名必须与其传递到的例程所期望的签名之一匹配。
- en: 'If constructing low-level functions from a PyCapsule, the name of the capsule
    must be the corresponding signature, in the format:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果从PyCapsule构造低级函数，则胶囊的名称必须是相应签名，格式为：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The context of a PyCapsule passed in as `function` is used as `user_data`, if
    an explicit value for `user_data` was not given.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未显式提供`user_data`的值，则使用作为`function`传入的PyCapsule的上下文作为`user_data`。
- en: 'Attributes:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**function**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**function**'
- en: Callback function given.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 给定回调函数。
- en: '**user_data**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**user_data**'
- en: User data given.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 给定的用户数据。
- en: '**signature**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**signature**'
- en: Signature of the function.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的签名。
- en: Methods
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`from_cython`](scipy.LowLevelCallable.from_cython.html#scipy.LowLevelCallable.from_cython
    "scipy.LowLevelCallable.from_cython")(module, name[, user_data, signature]) |
    Create a low-level callback function from an exported Cython function. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`from_cython`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.LowLevelCallable.html#scipy.LowLevelCallable.from_cython
    "scipy.LowLevelCallable.from_cython")(module, name[, user_data, signature]) |
    从导出的Cython函数创建低级回调函数。 |'
