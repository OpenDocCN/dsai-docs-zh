- en: pandas.DataFrame.to_json
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.DataFrame.to_json
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_json.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_json.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_json.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_json.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Convert the object to a JSON string.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将对象转换为 JSON 字符串。
- en: Note NaN’s and None will be converted to null and datetime objects will be converted
    to UNIX timestamps.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 NaN 和 None 将被转换为 null，而日期时间对象将被转换为 UNIX 时间戳。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**path_or_buf**str, path object, file-like object, or None, default None'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**path_or_buf**str、路径对象、类文件对象或 None，默认为 None'
- en: String, path object (implementing os.PathLike[str]), or file-like object implementing
    a write() function. If None, the result is returned as a string.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串、路径对象（实现 os.PathLike[str]）、或实现 write() 函数的类文件对象。如果为 None，则结果将作为字符串返回。
- en: '**orient**str'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**orient**str'
- en: Indication of expected JSON string format.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 预期的 JSON 字符串格式的指示。
- en: 'Series:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Series:'
- en: default is ‘index’
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认为 ‘index’
- en: ''
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'allowed values are: {‘split’, ‘records’, ‘index’, ‘table’}.'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许的值有：{‘split’、‘records’、‘index’、‘table’}。
- en: 'DataFrame:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DataFrame:'
- en: default is ‘columns’
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认为 ‘columns’
- en: ''
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'allowed values are: {‘split’, ‘records’, ‘index’, ‘columns’, ‘values’, ‘table’}.'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许的值有：{‘split’、‘records’、‘index’、‘columns’、‘values’、‘table’}。
- en: 'The format of the JSON string:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON 字符串的格式：
- en: '‘split’ : dict like {‘index’ -> [index], ‘columns’ -> [columns], ‘data’ ->
    [values]}'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘split’ : 类似字典 {‘index’ -> [index], ‘columns’ -> [columns], ‘data’ -> [values]}'
- en: ''
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘records’ : list like [{column -> value}, … , {column -> value}]'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘records’ : 类似列表 [{column -> value}, … , {column -> value}]'
- en: ''
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘index’ : dict like {index -> {column -> value}}'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘index’ : 类似字典 {index -> {column -> value}}'
- en: ''
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘columns’ : dict like {column -> {index -> value}}'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘columns’ : 类似字典 {column -> {index -> value}}'
- en: ''
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘values’ : just the values array'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘values’ : 只有值数组'
- en: ''
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘table’ : dict like {‘schema’: {schema}, ‘data’: {data}}'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘table’ : 类似字典 {‘schema’: {schema}, ‘data’: {data}}'
- en: ''
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: Describing the data, where data component is like `orient='records'`.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 描述数据，其中数据组件类似 `orient='records'`。
- en: '**date_format**{None, ‘epoch’, ‘iso’}'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**date_format**{None, ‘epoch’, ‘iso’}'
- en: Type of date conversion. ‘epoch’ = epoch milliseconds, ‘iso’ = ISO8601\. The
    default depends on the orient. For `orient='table'`, the default is ‘iso’. For
    all other orients, the default is ‘epoch’.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 日期转换的类型。‘epoch’ = 纪元毫秒，‘iso’ = ISO8601。默认取决于 orient。对于 `orient='table'`，默认为
    ‘iso’。对于所有其他 orient， 默认为 ‘epoch’。
- en: '**double_precision**int, default 10'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**double_precision**int，默认为 10'
- en: The number of decimal places to use when encoding floating point values. The
    possible maximal value is 15. Passing double_precision greater than 15 will raise
    a ValueError.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在编码浮点值时要使用的小数位数。可能的最大值是 15。传递大于 15 的 double_precision 将引发 ValueError。
- en: '**force_ascii**bool, default True'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**force_ascii**bool，默认为 True'
- en: Force encoded string to be ASCII.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 强制编码的字符串为 ASCII。
- en: '**date_unit**str, default ‘ms’ (milliseconds)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**date_unit**str，默认为 ‘ms’（毫秒）'
- en: The time unit to encode to, governs timestamp and ISO8601 precision. One of
    ‘s’, ‘ms’, ‘us’, ‘ns’ for second, millisecond, microsecond, and nanosecond respectively.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要编码到的时间单位，控制时间戳和 ISO8601 的精度。‘s’、‘ms’、‘us’、‘ns’ 分别代表秒、毫秒、微秒和纳秒。
- en: '**default_handler**callable, default None'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**default_handler**callable，默认为 None'
- en: Handler to call if object cannot otherwise be converted to a suitable format
    for JSON. Should receive a single argument which is the object to convert and
    return a serialisable object.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果对象无法被转换为 JSON 的合适格式，则调用处理程序。应接收一个参数，该参数是要转换的对象，并返回一个可序列化对象。
- en: '**lines**bool, default False'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**lines**bool，默认为 False'
- en: If ‘orient’ is ‘records’ write out line-delimited json format. Will throw ValueError
    if incorrect ‘orient’ since others are not list-like.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果‘orient’为‘records’，则写出分行的 json 格式。如果‘orient’不正确，将抛出 ValueError，因为其他格式不是类似列表的。
- en: '**compression**str or dict, default ‘infer’'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**compression**str 或字典，默认为 ‘infer’'
- en: 'For on-the-fly compression of the output data. If ‘infer’ and ‘path_or_buf’
    is path-like, then detect compression from the following extensions: ‘.gz’, ‘.bz2’,
    ‘.zip’, ‘.xz’, ‘.zst’, ‘.tar’, ‘.tar.gz’, ‘.tar.xz’ or ‘.tar.bz2’ (otherwise no
    compression). Set to `None` for no compression. Can also be a dict with key `''method''`
    set to one of {`''zip''`, `''gzip''`, `''bz2''`, `''zstd''`, `''xz''`, `''tar''`}
    and other key-value pairs are forwarded to `zipfile.ZipFile`, `gzip.GzipFile`,
    `bz2.BZ2File`, `zstandard.ZstdCompressor`, `lzma.LZMAFile` or `tarfile.TarFile`,
    respectively. As an example, the following could be passed for faster compression
    and to create a reproducible gzip archive: `compression={''method'': ''gzip'',
    ''compresslevel'': 1, ''mtime'': 1}`.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '用于即时压缩输出数据。如果 ‘infer’ 并且 ‘path_or_buf’ 是类似路径的，则从以下扩展名中检测压缩：‘.gz’、‘.bz2’、‘.zip’、‘.xz’、‘.zst’、‘.tar’、‘.tar.gz’、‘.tar.xz’
    或 ‘.tar.bz2’（否则不压缩）。设置为 `None` 表示不压缩。也可以是一个字典，其中键为 `''method''`，值为其中之一 {`''zip''`,
    `''gzip''`, `''bz2''`, `''zstd''`, `''xz''`, `''tar''`}，其他键值对将被传递给 `zipfile.ZipFile`、`gzip.GzipFile`、`bz2.BZ2File`、`zstandard.ZstdCompressor`、`lzma.LZMAFile`
    或 `tarfile.TarFile`。例如，可以传递以下内容以获得更快的压缩和创建可重现的 gzip 存档：`compression={''method'':
    ''gzip'', ''compresslevel'': 1, ''mtime'': 1}`。'
- en: 'New in version 1.5.0: Added support for .tar files.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5.0 版本中的新功能：增加了对 .tar 文件的支持。
- en: 'Changed in version 1.4.0: Zstandard support.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 1.4.0 版本中的更改：增加了对 Zstandard 的支持。
- en: '**index**bool or None, default None'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**index** bool 或 None，默认为 None'
- en: The index is only used when ‘orient’ is ‘split’, ‘index’, ‘column’, or ‘table’.
    Of these, ‘index’ and ‘column’ do not support index=False.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 仅当 ‘orient’ 为 ‘split’、‘index’、‘column’ 或 ‘table’ 时才使用索引。其中，‘index’ 和 ‘column’
    不支持 index=False。
- en: '**indent**int, optional'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**indent** int，可选'
- en: Length of whitespace used to indent each record.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 用于缩进每个记录的空格长度。
- en: '**storage_options**dict, optional'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**storage_options** dict，可选'
- en: Extra options that make sense for a particular storage connection, e.g. host,
    port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded
    to `urllib.request.Request` as header options. For other URLs (e.g. starting with
    “s3://”, and “gcs://”) the key-value pairs are forwarded to `fsspec.open`. Please
    see `fsspec` and `urllib` for more details, and for more examples on storage options
    refer [here](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 针对特定存储连接有意义的额外选项，例如主机、端口、用户名、密码等。对于 HTTP(S) URL，键值对将作为标头选项传递给 `urllib.request.Request`。对于其他
    URL（例如以 “s3://” 和 “gcs://” 开头的 URL），键值对将传递给 `fsspec.open`。请参阅 `fsspec` 和 `urllib`
    以获取更多详细信息，并参考 [这里](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files)
    了解更多关于存储选项的示例。
- en: '**mode**str, default ‘w’ (writing)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode** str，默认为 ‘w’（写入）'
- en: Specify the IO mode for output when supplying a path_or_buf. Accepted args are
    ‘w’ (writing) and ‘a’ (append) only. mode=’a’ is only supported when lines is
    True and orient is ‘records’.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在提供 path_or_buf 时指定输出的 IO 模式。接受的参数只有 ‘w’（写入）和 ‘a’（追加）。只有当 lines 为 True 且 orient
    为 ‘records’ 时才支持 mode=’a’。
- en: 'Returns:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: None or str
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: None 或 str
- en: If path_or_buf is None, returns the resulting json format as a string. Otherwise
    returns None.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 path_or_buf 为 None，则将生成的 JSON 格式作为字符串返回。否则返回 None。
- en: See also
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`read_json`](pandas.read_json.html#pandas.read_json "pandas.read_json")'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_json`](pandas.read_json.html#pandas.read_json "pandas.read_json")'
- en: Convert a JSON string to pandas object.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 将 JSON 字符串转换为 pandas 对象。
- en: Notes
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: The behavior of `indent=0` varies from the stdlib, which does not indent the
    output but does insert newlines. Currently, `indent=0` and the default `indent=None`
    are equivalent in pandas, though this may change in a future release.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`indent=0` 的行为与标准库不同，它不会缩进输出，但会插入换行符。目前，在 pandas 中，`indent=0` 和默认的 `indent=None`
    是等效的，尽管这可能会在将来的版本中发生变化。'
- en: '`orient=''table''` contains a ‘pandas_version’ field under ‘schema’. This stores
    the version of pandas used in the latest revision of the schema.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`orient=''table''` 包含了 ‘schema’ 下的 ‘pandas_version’ 字段。这个字段存储了在最新版本的 schema
    中使用的 pandas 版本。'
- en: Examples
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Encoding/decoding a Dataframe using `'records'` formatted JSON. Note that index
    labels are not preserved with this encoding.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `'records'` 格式化的 JSON 进行编码/解码 Dataframe。请注意，此编码不会保留索引标签。
- en: '[PRE3]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Encoding/decoding a Dataframe using `''index''` formatted JSON:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `'index'` 格式化的 JSON 进行编码/解码：
- en: '[PRE4]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Encoding/decoding a Dataframe using `''columns''` formatted JSON:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `'columns'` 格式化的 JSON 进行编码/解码：
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Encoding/decoding a Dataframe using `''values''` formatted JSON:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `'values'` 格式化的 JSON 进行编码/解码：
- en: '[PRE6]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Encoding with Table Schema:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Table Schema 进行编码：
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
