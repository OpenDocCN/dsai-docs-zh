["```py\nscipy.signal.remez(numtaps, bands, desired, *, weight=None, Hz=<object object>, type='bandpass', maxiter=25, grid_density=16, fs=None)\n```", "```py\n>>> import numpy as np\n>>> from scipy import signal\n>>> import matplotlib.pyplot as plt \n```", "```py\n>>> fs = 22050   # Sample rate, Hz \n```", "```py\n>>> def plot_response(w, h, title):\n...     \"Utility function to plot response functions\"\n...     fig = plt.figure()\n...     ax = fig.add_subplot(111)\n...     ax.plot(w, 20*np.log10(np.abs(h)))\n...     ax.set_ylim(-40, 5)\n...     ax.grid(True)\n...     ax.set_xlabel('Frequency (Hz)')\n...     ax.set_ylabel('Gain (dB)')\n...     ax.set_title(title) \n```", "```py\n>>> cutoff = 8000.0    # Desired cutoff frequency, Hz\n>>> trans_width = 100  # Width of transition from pass to stop, Hz\n>>> numtaps = 325      # Size of the FIR filter.\n>>> taps = signal.remez(numtaps, [0, cutoff, cutoff + trans_width, 0.5*fs],\n...                     [1, 0], fs=fs)\n>>> w, h = signal.freqz(taps, [1], worN=2000, fs=fs)\n>>> plot_response(w, h, \"Low-pass Filter\")\n>>> plt.show() \n```", "```py\n>>> cutoff = 2000.0    # Desired cutoff frequency, Hz\n>>> trans_width = 250  # Width of transition from pass to stop, Hz\n>>> numtaps = 125      # Size of the FIR filter.\n>>> taps = signal.remez(numtaps, [0, cutoff - trans_width, cutoff, 0.5*fs],\n...                     [0, 1], fs=fs)\n>>> w, h = signal.freqz(taps, [1], worN=2000, fs=fs)\n>>> plot_response(w, h, \"High-pass Filter\")\n>>> plt.show() \n```", "```py\n>>> band = [2000, 5000]  # Desired pass band, Hz\n>>> trans_width = 260    # Width of transition from pass to stop, Hz\n>>> numtaps = 63         # Size of the FIR filter.\n>>> edges = [0, band[0] - trans_width, band[0], band[1],\n...          band[1] + trans_width, 0.5*fs]\n>>> taps = signal.remez(numtaps, edges, [0, 1, 0], fs=fs)\n>>> w, h = signal.freqz(taps, [1], worN=2000, fs=fs)\n>>> plot_response(w, h, \"Band-pass Filter\")\n>>> plt.show() \n```", "```py\n>>> band = [6000, 8000]  # Desired stop band, Hz\n>>> trans_width = 200    # Width of transition from pass to stop, Hz\n>>> numtaps = 175        # Size of the FIR filter.\n>>> edges = [0, band[0] - trans_width, band[0], band[1],\n...          band[1] + trans_width, 0.5*fs]\n>>> taps = signal.remez(numtaps, edges, [1, 0, 1], fs=fs)\n>>> w, h = signal.freqz(taps, [1], worN=2000, fs=fs)\n>>> plot_response(w, h, \"Band-stop Filter\")\n>>> plt.show() \n```"]