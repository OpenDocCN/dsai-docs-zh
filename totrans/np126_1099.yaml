- en: NumPy 1.26.0 Release Notes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NumPy 1.26.0 发布说明
- en: 原文：[https://numpy.org/doc/1.26/release/1.26.0-notes.html](https://numpy.org/doc/1.26/release/1.26.0-notes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/release/1.26.0-notes.html](https://numpy.org/doc/1.26/release/1.26.0-notes.html)
- en: The NumPy 1.26.0 release is a continuation of the 1.25.x release cycle with
    the addition of Python 3.12.0 support. Python 3.12 dropped distutils, consequently
    supporting it required finding a replacement for the setup.py/distutils based
    build system NumPy was using. We have chosen to use the Meson build system instead,
    and this is the first NumPy release supporting it. This is also the first release
    that supports Cython 3.0 in addition to retaining 0.29.X compatibility. Supporting
    those two upgrades was a large project, over 100 files have been touched in this
    release. The changelog doesn’t capture the full extent of the work, special thanks
    to Ralf Gommers, Sayed Adel, Stéfan van der Walt, and Matti Picus who did much
    of the work in the main development branch.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 1.26.0发布是1.25.x发布周期的延续，增加了对Python 3.12.0的支持。Python 3.12放弃了distutils，因此支持它需要找到一个替代方案来替代NumPy使用的setup.py/distutils基于的构建系统。我们选择使用Meson构建系统，这是第一个支持它的NumPy版本。这也是第一个支持Cython
    3.0的版本，同时保留了0.29.X的兼容性。支持这两个升级是一个大项目，在这个版本中有100多个文件被修改。更新日志没有完全记录工作的全部范围，特别感谢Ralf
    Gommers、Sayed Adel、Stéfan van der Walt和Matti Picus在主要开发分支中做了大部分工作。
- en: 'The highlights of this release are:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本版本的亮点包括：
- en: Python 3.12.0 support.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持Python 3.12.0。
- en: Cython 3.0.0 compatibility.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cython 3.0.0兼容性。
- en: Use of the Meson build system
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Meson构建系统
- en: Updated SIMD support
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新的SIMD支持
- en: f2py fixes, meson and bind(x) support
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: f2py修复，meson和bind(x)支持
- en: Support for the updated Accelerate BLAS/LAPACK library
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持更新的Accelerate BLAS/LAPACK库
- en: The Python versions supported in this release are 3.9-3.12.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本版本支持的Python版本为3.9-3.12。
- en: New Features
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新功能
- en: Array API v2022.12 support in `numpy.array_api`
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`numpy.array_api`中的Array API v2022.12支持'
- en: '`numpy.array_api` now full supports the [v2022.12 version](https://data-apis.org/array-api/2022.12)
    of the array API standard. Note that this does not yet include the optional `fft`
    extension in the standard.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numpy.array_api`现在完全支持数组API标准的[v2022.12版本](https://data-apis.org/array-api/2022.12)。请注意，这还不包括标准中的可选`fft`扩展。'
- en: ([gh-23789](https://github.com/numpy/numpy/pull/23789))
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-23789](https://github.com/numpy/numpy/pull/23789))
- en: Support for the updated Accelerate BLAS/LAPACK library
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持更新的Accelerate BLAS/LAPACK库
- en: Support for the updated Accelerate BLAS/LAPACK library, including ILP64 (64-bit
    integer) support, in macOS 13.3 has been added. This brings arm64 support, and
    significant performance improvements of up to 10x for commonly used linear algebra
    operations. When Accelerate is selected at build time, the 13.3+ version will
    automatically be used if available.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS 13.3中添加了对更新的Accelerate BLAS/LAPACK库的支持，包括ILP64（64位整数）支持。这带来了arm64支持，并且对常用线性代数运算的性能提升高达10倍。在构建时选择Accelerate时，如果可用，将自动使用13.3+版本。
- en: ([gh-24053](https://github.com/numpy/numpy/pull/24053))
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24053](https://github.com/numpy/numpy/pull/24053))
- en: '`meson` backend for `f2py`'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`f2py`的`meson`后端'
- en: '`f2py` in compile mode (i.e. `f2py -c`) now accepts the `--backend meson` option.
    This is the default option for Python `3.12` on-wards. Older versions will still
    default to `--backend distutils`.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 编译模式下的`f2py`（即`f2py -c`）现在接受`--backend meson`选项。这是Python `3.12`及以后版本的默认选项。旧版本仍将默认使用`--backend
    distutils`。
- en: To support this in realistic use-cases, in compile mode `f2py` takes a `--dep`
    flag one or many times which maps to `dependency()` calls in the `meson` backend,
    and does nothing in the `distutils` backend.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在实际用例中支持这一点，在编译模式下，`f2py`接受一个`--dep`标志，可以多次使用，这将映射到`meson`后端中的`dependency()`调用，并且在`distutils`后端中不起作用。
- en: There are no changes for users of `f2py` only as a code generator, i.e. without
    `-c`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于仅作为代码生成器使用`f2py`的用户，即没有`-c`选项的用户，没有任何更改。
- en: ([gh-24532](https://github.com/numpy/numpy/pull/24532))
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24532](https://github.com/numpy/numpy/pull/24532))
- en: '`bind(c)` support for `f2py`'
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为`f2py`添加了`bind(c)`支持
- en: Both functions and subroutines can be annotated with `bind(c)`. `f2py` will
    handle both the correct type mapping, and preserve the unique label for other
    `C` interfaces.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 函数和子程序都可以用`bind(c)`进行注释。`f2py`将处理正确的类型映射，并保留其他`C`接口的唯一标签。
- en: '**Note:** `bind(c, name = ''routine_name_other_than_fortran_routine'')` is
    not honored by the `f2py` bindings by design, since `bind(c)` with the `name`
    is meant to guarantee only the same name in `C` and `Fortran`, not in `Python`
    and `Fortran`.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** `bind(c, name = ''routine_name_other_than_fortran_routine'')` 不会被 `f2py`
    绑定所遵守，因为 `bind(c)` 与 `name` 旨在保证 `C` 和 `Fortran` 中的相同名称，而不是在 `Python` 和 `Fortran`
    中。'
- en: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
- en: Improvements
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进
- en: '`iso_c_binding` support for `f2py`'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`f2py` 对 `iso_c_binding` 的支持'
- en: Previously, users would have to define their own custom `f2cmap` file to use
    type mappings defined by the Fortran2003 `iso_c_binding` intrinsic module. These
    type maps are now natively supported by `f2py`
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，用户必须定义自己的自定义 `f2cmap` 文件才能使用 Fortran2003 的 `iso_c_binding` 内在模块定义的类型映射。现在，这些类型映射已经被
    `f2py` 原生支持。
- en: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
- en: Build system changes
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建系统更改
- en: 'In this release, NumPy has switched to Meson as the build system and meson-python
    as the build backend. Installing NumPy or building a wheel can be done with standard
    tools like `pip` and `pypa/build`. The following are supported:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在此版本中，NumPy 已经切换到 Meson 作为构建系统，meson-python 作为构建后端。安装 NumPy 或构建轮子可以使用标准工具如 `pip`
    和 `pypa/build`。支持以下内容：
- en: 'Regular installs: `pip install numpy` or (in a cloned repo) `pip install .`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常规安装：`pip install numpy` 或（在克隆的仓库中）`pip install .`
- en: 'Building a wheel: `python -m build` (preferred), or `pip wheel .`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建轮子：`python -m build`（首选），或 `pip wheel .`
- en: 'Editable installs: `pip install -e . --no-build-isolation`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可编辑安装：`pip install -e . --no-build-isolation`
- en: 'Development builds through the custom CLI implemented with [spin](https://github.com/scientific-python/spin):
    `spin build`.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用 [spin](https://github.com/scientific-python/spin) 实现的自定义 CLI 进行开发构建：`spin
    build`。
- en: All the regular `pip` and `pypa/build` flags (e.g., `--no-build-isolation`)
    should work as expected.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 所有常规的 `pip` 和 `pypa/build` 标志（例如，`--no-build-isolation`）应该按预期工作。
- en: NumPy-specific build customization
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NumPy 特定的构建自定义
- en: Many of the NumPy-specific ways of customizing builds have changed. The `NPY_*`
    environment variables which control BLAS/LAPACK, SIMD, threading, and other such
    options are no longer supported, nor is a `site.cfg` file to select BLAS and LAPACK.
    Instead, there are command-line flags that can be passed to the build via `pip`/`build`’s
    config-settings interface. These flags are all listed in the `meson_options.txt`
    file in the root of the repo. Detailed documented will be available before the
    final 1.26.0 release; for now please see [the SciPy “building from source” docs](http://scipy.github.io/devdocs/building/index.html)
    since most build customization works in an almost identical way in SciPy as it
    does in NumPy.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 NumPy 特定的构建自定义方式已经改变。不再支持控制 BLAS/LAPACK、SIMD、线程等选项的 `NPY_*` 环境变量，也不再支持用于选择
    BLAS 和 LAPACK 的 `site.cfg` 文件。相反，可以通过 `pip`/`build` 的配置设置接口传递命令行标志给构建。这些标志都列在仓库根目录的
    `meson_options.txt` 文件中。在最终 1.26.0 版本发布之前将提供详细文档；目前请参阅 [SciPy“从源代码构建”文档](http://scipy.github.io/devdocs/building/index.html)，因为大多数构建自定义方式在
    SciPy 中的工作方式与 NumPy 中几乎相同。
- en: Build dependencies
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建依赖
- en: While the runtime dependencies of NumPy have not changed, the build dependencies
    have. Because we temporarily vendor Meson and meson-python, there are several
    new dependencies - please see the `[build-system]` section of `pyproject.toml`
    for details.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 NumPy 的运行时依赖关系没有改变，但构建依赖关系已经改变。由于我们暂时提供 Meson 和 meson-python，因此有几个新的依赖项 -
    请查看 `pyproject.toml` 的 `[build-system]` 部分以获取详细信息。
- en: Troubleshooting
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 故障排除
- en: This build system change is quite large. In case of unexpected issues, it is
    still possible to use a `setup.py`-based build as a temporary workaround (on Python
    3.9-3.11, not 3.12), by copying `pyproject.toml.setuppy` to `pyproject.toml`.
    However, please open an issue with details on the NumPy issue tracker. We aim
    to phase out `setup.py` builds as soon as possible, and therefore would like to
    see all potential blockers surfaced early on in the 1.26.0 release cycle.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这次构建系统的更改相当大。在出现意外问题的情况下，仍然可以使用基于 `setup.py` 的构建作为临时解决方案（在 Python 3.9-3.11 上，而不是
    3.12），方法是将 `pyproject.toml.setuppy` 复制到 `pyproject.toml`。但是，请在 NumPy 问题跟踪器上提出详细问题。我们的目标是尽快淘汰
    `setup.py` 构建，因此希望在 1.26.0 发布周期的早期阶段发现所有潜在的阻碍因素。
- en: Contributors
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贡献者
- en: A total of 20 people contributed to this release. People with a “+” by their
    names contributed a patch for the first time.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: ���共有 20 人为此版本做出了贡献。名字后面带有“+”的人第一次为此贡献了补丁。
- en: '@DWesl'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '@DWesl'
- en: Albert Steppi +
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Albert Steppi +
- en: Bas van Beek
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bas van Beek
- en: Charles Harris
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Charles Harris
- en: Developer-Ecosystem-Engineering
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Developer-Ecosystem-Engineering
- en: Filipe Laíns +
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Filipe Laíns +
- en: Jake Vanderplas
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jake Vanderplas
- en: Liang Yan +
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liang Yan +
- en: Marten van Kerkwijk
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Marten van Kerkwijk
- en: Matti Picus
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matti Picus
- en: Melissa Weber Mendonça
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Melissa Weber Mendonça
- en: Namami Shanker
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Namami Shanker
- en: Nathan Goldbaum
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nathan Goldbaum
- en: Ralf Gommers
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ralf Gommers
- en: Rohit Goswami
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rohit Goswami
- en: Sayed Adel
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sayed Adel
- en: Sebastian Berg
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastian Berg
- en: Stefan van der Walt
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stefan van der Walt
- en: Tyler Reddy
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tyler Reddy
- en: Warren Weckesser
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Warren Weckesser
- en: Pull requests merged
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并的拉取请求
- en: A total of 59 pull requests were merged for this release.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 本次发布共合并了59个拉取请求。
- en: '[#24305](https://github.com/numpy/numpy/pull/24305): MAINT: Prepare 1.26.x
    branch for development'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24305](https://github.com/numpy/numpy/pull/24305): 维护：为1.26.x分支准备开发'
- en: '[#24308](https://github.com/numpy/numpy/pull/24308): MAINT: Massive update
    of files from main for numpy 1.26'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24308](https://github.com/numpy/numpy/pull/24308): 维护：从主分支大规模更新文件以用于numpy
    1.26'
- en: '[#24322](https://github.com/numpy/numpy/pull/24322): CI: fix wheel builds on
    the 1.26.x branch'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24322](https://github.com/numpy/numpy/pull/24322): CI：修复1.26.x分支上的wheel构建'
- en: '[#24326](https://github.com/numpy/numpy/pull/24326): BLD: update openblas to
    newer version'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24326](https://github.com/numpy/numpy/pull/24326): 构建：更新openblas到更新版本'
- en: '[#24327](https://github.com/numpy/numpy/pull/24327): TYP: Trim down the `_NestedSequence.__getitem__`
    signature'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24327](https://github.com/numpy/numpy/pull/24327): 类型：简化`_NestedSequence.__getitem__`签名'
- en: '[#24328](https://github.com/numpy/numpy/pull/24328): BUG: fix choose refcount
    leak'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24328](https://github.com/numpy/numpy/pull/24328): 错误：修复choose引用计数泄漏'
- en: '[#24337](https://github.com/numpy/numpy/pull/24337): TST: fix running the test
    suite in builds without BLAS/LAPACK'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24337](https://github.com/numpy/numpy/pull/24337): 测试：修复在没有BLAS/LAPACK的构建中运行测试套件的问题'
- en: '[#24338](https://github.com/numpy/numpy/pull/24338): BUG: random: Fix generation
    of nan by dirichlet.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24338](https://github.com/numpy/numpy/pull/24338): 错误：修复dirichlet生成nan的问题。'
- en: '[#24340](https://github.com/numpy/numpy/pull/24340): MAINT: Dependabot updates
    from main'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24340](https://github.com/numpy/numpy/pull/24340): 维护：从主分支进行Dependabot更新'
- en: '[#24342](https://github.com/numpy/numpy/pull/24342): MAINT: Add back NPY_RUN_MYPY_IN_TESTSUITE=1'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24342](https://github.com/numpy/numpy/pull/24342): 维护：重新添加NPY_RUN_MYPY_IN_TESTSUITE=1'
- en: '[#24353](https://github.com/numpy/numpy/pull/24353): MAINT: Update `extbuild.py`
    from main.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24353](https://github.com/numpy/numpy/pull/24353): 维护：从主分支更新`extbuild.py`。'
- en: '[#24356](https://github.com/numpy/numpy/pull/24356): TST: fix distutils tests
    for deprecations in recent setuptools…'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24356](https://github.com/numpy/numpy/pull/24356): 测试：修复最近setuptools中的弃用问题的distutils测试…'
- en: '[#24375](https://github.com/numpy/numpy/pull/24375): MAINT: Update cibuildwheel
    to version 2.15.0'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24375](https://github.com/numpy/numpy/pull/24375): 维护：更新cibuildwheel到版本2.15.0'
- en: '[#24381](https://github.com/numpy/numpy/pull/24381): MAINT: Fix codespaces
    setup.sh script'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24381](https://github.com/numpy/numpy/pull/24381): 维护：修复codespaces setup.sh脚本'
- en: '[#24403](https://github.com/numpy/numpy/pull/24403): ENH: Vendor meson for
    multi-target build support'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24403](https://github.com/numpy/numpy/pull/24403): 增强：为多目标构建支持供应商meson'
- en: '[#24404](https://github.com/numpy/numpy/pull/24404): BLD: vendor meson-python
    to make the Windows builds with SIMD…'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24404](https://github.com/numpy/numpy/pull/24404): 构建：供应商meson-python以使Windows构建支持SIMD…'
- en: '[#24405](https://github.com/numpy/numpy/pull/24405): BLD, SIMD: The meson CPU
    dispatcher implementation'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24405](https://github.com/numpy/numpy/pull/24405): 构建，SIMD：meson CPU调度器实现'
- en: '[#24406](https://github.com/numpy/numpy/pull/24406): MAINT: Remove versioneer'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24406](https://github.com/numpy/numpy/pull/24406): 维护：移除versioneer'
- en: '[#24409](https://github.com/numpy/numpy/pull/24409): REL: Prepare for the NumPy
    1.26.0b1 release.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24409](https://github.com/numpy/numpy/pull/24409): 发布：为NumPy 1.26.0b1版本做准备。'
- en: '[#24453](https://github.com/numpy/numpy/pull/24453): MAINT: Pin upper version
    of sphinx.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24453](https://github.com/numpy/numpy/pull/24453): 维护：固定sphinx的上限版本。'
- en: '[#24455](https://github.com/numpy/numpy/pull/24455): ENH: Add prefix to _ALIGN
    Macro'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24455](https://github.com/numpy/numpy/pull/24455): 增强：为_ALIGN宏添加前缀'
- en: '[#24456](https://github.com/numpy/numpy/pull/24456): BUG: cleanup warnings
    [skip azp][skip circle][skip travis][skip…'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24456](https://github.com/numpy/numpy/pull/24456): 错误：清理警告[跳过azp][跳过circle][跳过travis][跳过…'
- en: '[#24460](https://github.com/numpy/numpy/pull/24460): MAINT: Upgrade to spin
    0.5'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24460](https://github.com/numpy/numpy/pull/24460): 维护：升级到spin 0.5'
- en: '[#24495](https://github.com/numpy/numpy/pull/24495): BUG: `asv dev` has been
    removed, use `asv run`.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24495](https://github.com/numpy/numpy/pull/24495): 错误：`asv dev`已被移除，请使用`asv
    run`。'
- en: '[#24496](https://github.com/numpy/numpy/pull/24496): BUG: Fix meson build failure
    due to unchanged inplace auto-generated…'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24496](https://github.com/numpy/numpy/pull/24496): 错误：由于未更改的inplace自动生成…修复meson构建失败'
- en: '[#24521](https://github.com/numpy/numpy/pull/24521): BUG: fix issue with git-version
    script, needs a shebang to run'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24521](https://github.com/numpy/numpy/pull/24521): 错误：修复git-version脚本的问题，需要一个shebang才能运行'
- en: '[#24522](https://github.com/numpy/numpy/pull/24522): BUG: Use a default assignment
    for git_hash [skip ci]'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24522](https://github.com/numpy/numpy/pull/24522): BUG: 为git_hash使用默认赋值 [跳过ci]'
- en: '[#24524](https://github.com/numpy/numpy/pull/24524): BUG: fix NPY_cast_info
    error handling in choose'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24524](https://github.com/numpy/numpy/pull/24524): BUG: 修复choose中的NPY_cast_info错误处理'
- en: '[#24526](https://github.com/numpy/numpy/pull/24526): BUG: Fix common block
    handling in f2py'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24526](https://github.com/numpy/numpy/pull/24526): BUG: 修复f2py中的常用块处理'
- en: '[#24541](https://github.com/numpy/numpy/pull/24541): CI,TYP: Bump mypy to 1.4.1'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24541](https://github.com/numpy/numpy/pull/24541): CI,TYP: 将mypy升级至1.4.1'
- en: '[#24542](https://github.com/numpy/numpy/pull/24542): BUG: Fix assumed length
    f2py regression'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24542](https://github.com/numpy/numpy/pull/24542): BUG: 修复假定长度f2py回归'
- en: '[#24544](https://github.com/numpy/numpy/pull/24544): MAINT: Harmonize fortranobject'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24544](https://github.com/numpy/numpy/pull/24544): MAINT: 统一fortranobject'
- en: '[#24545](https://github.com/numpy/numpy/pull/24545): TYP: add kind argument
    to numpy.isin type specification'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24545](https://github.com/numpy/numpy/pull/24545): TYP: 向numpy.isin类型规范添加kind参数'
- en: '[#24561](https://github.com/numpy/numpy/pull/24561): BUG: fix comparisons between
    masked and unmasked structured arrays'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24561](https://github.com/numpy/numpy/pull/24561): BUG: 修复掩码和未掩码结构化数组之间的比较'
- en: '[#24590](https://github.com/numpy/numpy/pull/24590): CI: Exclude import libraries
    from list of DLLs on Cygwin.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24590](https://github.com/numpy/numpy/pull/24590): CI: 在Cygwin上排除导入库列表中的DLLs。'
- en: '[#24591](https://github.com/numpy/numpy/pull/24591): BLD: fix `_umath_linalg`
    dependencies'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24591](https://github.com/numpy/numpy/pull/24591): BLD: 修复`_umath_linalg`的依赖关系'
- en: '[#24594](https://github.com/numpy/numpy/pull/24594): MAINT: Stop testing on
    ppc64le.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24594](https://github.com/numpy/numpy/pull/24594): MAINT: 停止在ppc64le上进行测试。'
- en: '[#24602](https://github.com/numpy/numpy/pull/24602): BLD: meson-cpu: fix SIMD
    support on platforms with no features'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24602](https://github.com/numpy/numpy/pull/24602): BLD: meson-cpu: 修复在没有功能的平台上的SIMD支持'
- en: '[#24606](https://github.com/numpy/numpy/pull/24606): BUG: Change Cython `binding`
    directive to “False”.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24606](https://github.com/numpy/numpy/pull/24606): BUG: 将Cython的`binding`指令更改为“False”。'
- en: '[#24613](https://github.com/numpy/numpy/pull/24613): ENH: Adopt new macOS Accelerate
    BLAS/LAPACK Interfaces, including…'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24613](https://github.com/numpy/numpy/pull/24613): ENH: 采用新的macOS Accelerate
    BLAS/LAPACK接口，包括…'
- en: '[#24614](https://github.com/numpy/numpy/pull/24614): DOC: Update building docs
    to use Meson'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24614](https://github.com/numpy/numpy/pull/24614): DOC: 更新构建文档以使用Meson'
- en: '[#24615](https://github.com/numpy/numpy/pull/24615): TYP: Add the missing `casting`
    keyword to `np.clip`'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24615](https://github.com/numpy/numpy/pull/24615): TYP: 向`np.clip`添加缺失的`casting`关键字'
- en: '[#24616](https://github.com/numpy/numpy/pull/24616): TST: convert cython test
    from setup.py to meson'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24616](https://github.com/numpy/numpy/pull/24616): TST: 将cython测试从setup.py转换为meson'
- en: '[#24617](https://github.com/numpy/numpy/pull/24617): MAINT: Fixup `fromnumeric.pyi`'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24617](https://github.com/numpy/numpy/pull/24617): MAINT: 修复`fromnumeric.pyi`'
- en: '[#24622](https://github.com/numpy/numpy/pull/24622): BUG, ENH: Fix `iso_c_binding`
    type maps and fix `bind(c)`…'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24622](https://github.com/numpy/numpy/pull/24622): BUG, ENH: 修复`iso_c_binding`类型映射和修复`bind(c)`…'
- en: '[#24629](https://github.com/numpy/numpy/pull/24629): TYP: Allow `binary_repr`
    to accept any object implementing…'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24629](https://github.com/numpy/numpy/pull/24629): TYP: 允许`binary_repr`接受任何实现的对象…'
- en: '[#24630](https://github.com/numpy/numpy/pull/24630): TYP: Explicitly declare
    `dtype` and `generic` hashable'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24630](https://github.com/numpy/numpy/pull/24630): TYP: 明确声明`dtype`和`generic`可哈希'
- en: '[#24637](https://github.com/numpy/numpy/pull/24637): ENH: Refactor the typing
    “reveal” tests using [`typing.assert_type`](https://docs.python.org/3/library/typing.html#typing.assert_type
    "(in Python v3.11)")'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24637](https://github.com/numpy/numpy/pull/24637): ENH: 使用[`typing.assert_type`](https://docs.python.org/3/library/typing.html#typing.assert_type
    "(在Python v3.11中)")重构类型“reveal”测试'
- en: '[#24638](https://github.com/numpy/numpy/pull/24638): MAINT: Bump actions/checkout
    from 3.6.0 to 4.0.0'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24638](https://github.com/numpy/numpy/pull/24638): MAINT: 将actions/checkout从3.6.0升级至4.0.0'
- en: '[#24647](https://github.com/numpy/numpy/pull/24647): ENH: `meson` backend for
    `f2py`'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24647](https://github.com/numpy/numpy/pull/24647): ENH: `f2py`的`meson`后端'
- en: '[#24648](https://github.com/numpy/numpy/pull/24648): MAINT: Refactor partial
    load Workaround for Clang'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24648](https://github.com/numpy/numpy/pull/24648): MAINT: 重构Clang的部分加载解决方法'
- en: '[#24653](https://github.com/numpy/numpy/pull/24653): REL: Prepare for the NumPy
    1.26.0rc1 release.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24653](https://github.com/numpy/numpy/pull/24653): REL: 为NumPy 1.26.0rc1版本做准备。'
- en: '[#24659](https://github.com/numpy/numpy/pull/24659): BLD: allow specifying
    the long double format to avoid the runtime…'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24659](https://github.com/numpy/numpy/pull/24659): BLD: 允许指定长双精度格式以避免运行时…'
- en: '[#24665](https://github.com/numpy/numpy/pull/24665): BLD: fix bug in random.mtrand
    extension, don’t link libnpyrandom'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24665](https://github.com/numpy/numpy/pull/24665): BLD: 修复random.mtrand扩展中的错误，不链接libnpyrandom'
- en: '[#24675](https://github.com/numpy/numpy/pull/24675): BLD: build wheels for
    32-bit Python on Windows, using MSVC'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24675](https://github.com/numpy/numpy/pull/24675): 构建：为 Windows 上的 32 位 Python
    使用 MSVC 构建 wheels'
- en: '[#24700](https://github.com/numpy/numpy/pull/24700): BLD: fix issue with compiler
    selection during cross compilation'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24700](https://github.com/numpy/numpy/pull/24700): 构建：修复交叉编译过程中的编译器选择问题'
- en: '[#24701](https://github.com/numpy/numpy/pull/24701): BUG: Fix data stmt handling
    for complex values in f2py'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24701](https://github.com/numpy/numpy/pull/24701): 错误：修复 f2py 中复杂值的数据语句处理'
- en: '[#24707](https://github.com/numpy/numpy/pull/24707): TYP: Add annotations for
    the py3.12 buffer protocol'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24707](https://github.com/numpy/numpy/pull/24707): 类型：为 py3.12 缓冲区协议添加注释'
- en: '[#24718](https://github.com/numpy/numpy/pull/24718): DOC: fix a few doc build
    issues on 1.26.x and update *spin docs*…'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24718](https://github.com/numpy/numpy/pull/24718): 文档：修复 1.26.x 上的一些文档构建问题并更新
    *spin 文档*…'
- en: New Features
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新功能
- en: Array API v2022.12 support in `numpy.array_api`
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`numpy.array_api` 中的 Array API v2022.12 支持'
- en: '`numpy.array_api` now full supports the [v2022.12 version](https://data-apis.org/array-api/2022.12)
    of the array API standard. Note that this does not yet include the optional `fft`
    extension in the standard.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numpy.array_api` 现在完全支持 [v2022.12 版本](https://data-apis.org/array-api/2022.12)
    的数组 API 标准。请注意，这还不包括标准中的可选 `fft` 扩展。'
- en: ([gh-23789](https://github.com/numpy/numpy/pull/23789))
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-23789](https://github.com/numpy/numpy/pull/23789))
- en: Support for the updated Accelerate BLAS/LAPACK library
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持更新的 Accelerate BLAS/LAPACK 库
- en: Support for the updated Accelerate BLAS/LAPACK library, including ILP64 (64-bit
    integer) support, in macOS 13.3 has been added. This brings arm64 support, and
    significant performance improvements of up to 10x for commonly used linear algebra
    operations. When Accelerate is selected at build time, the 13.3+ version will
    automatically be used if available.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在 macOS 13.3 中添加了对更新的 Accelerate BLAS/LAPACK 库的支持，包括 ILP64（64 位整数）支持。这带来了 arm64
    支持，并且对常用线性代数运算的性能提升高达 10 倍。在构建时选择 Accelerate 时，如果可用，将自动使用 13.3+ 版本。
- en: ([gh-24053](https://github.com/numpy/numpy/pull/24053))
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24053](https://github.com/numpy/numpy/pull/24053))
- en: '`meson` backend for `f2py`'
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`f2py` 的 `meson` ��端'
- en: '`f2py` in compile mode (i.e. `f2py -c`) now accepts the `--backend meson` option.
    This is the default option for Python `3.12` on-wards. Older versions will still
    default to `--backend distutils`.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`f2py` 在编译模式下（即 `f2py -c`）现在接受 `--backend meson` 选项。这是 Python `3.12` 及以后版本的默认选项。旧版本仍将默认使用
    `--backend distutils`。'
- en: To support this in realistic use-cases, in compile mode `f2py` takes a `--dep`
    flag one or many times which maps to `dependency()` calls in the `meson` backend,
    and does nothing in the `distutils` backend.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在实际用例中支持这一点，在编译模式下，`f2py` 接受一个 `--dep` 标志一次或多次，它在 `meson` 后端中映射到 `dependency()`
    调用，并在 `distutils` 后端中不执行任何操作。
- en: There are no changes for users of `f2py` only as a code generator, i.e. without
    `-c`.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于仅作为代码生成器使用 `f2py` 的用户，没有任何更改，即没有 `-c`。
- en: ([gh-24532](https://github.com/numpy/numpy/pull/24532))
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24532](https://github.com/numpy/numpy/pull/24532))
- en: '`bind(c)` support for `f2py`'
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`f2py` 的 `bind(c)` 支持'
- en: Both functions and subroutines can be annotated with `bind(c)`. `f2py` will
    handle both the correct type mapping, and preserve the unique label for other
    `C` interfaces.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 函数和子程序都可以用 `bind(c)` 进行注释。`f2py` 将处理正确的类型映射，并保留其他 `C` 接口的唯一标签。
- en: '**Note:** `bind(c, name = ''routine_name_other_than_fortran_routine'')` is
    not honored by the `f2py` bindings by design, since `bind(c)` with the `name`
    is meant to guarantee only the same name in `C` and `Fortran`, not in `Python`
    and `Fortran`.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** `bind(c, name = ''routine_name_other_than_fortran_routine'')` 是有意设计不被
    `f2py` 绑定所接受的，因为 `bind(c)` 与 `name` 旨在仅保证 `C` 和 `Fortran` 中的相同名称，而不是 `Python`
    和 `Fortran` 中的相同名称。'
- en: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
- en: Array API v2022.12 support in `numpy.array_api`
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`numpy.array_api` 中的 Array API v2022.12 支持'
- en: '`numpy.array_api` now full supports the [v2022.12 version](https://data-apis.org/array-api/2022.12)
    of the array API standard. Note that this does not yet include the optional `fft`
    extension in the standard.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numpy.array_api` 现在完全支持 [v2022.12 版本](https://data-apis.org/array-api/2022.12)
    的数组 API 标准。请注意，这还不包括标准中的可选 `fft` 扩展。'
- en: ([gh-23789](https://github.com/numpy/numpy/pull/23789))
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-23789](https://github.com/numpy/numpy/pull/23789))
- en: Support for the updated Accelerate BLAS/LAPACK library
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持更新的 Accelerate BLAS/LAPACK 库
- en: Support for the updated Accelerate BLAS/LAPACK library, including ILP64 (64-bit
    integer) support, in macOS 13.3 has been added. This brings arm64 support, and
    significant performance improvements of up to 10x for commonly used linear algebra
    operations. When Accelerate is selected at build time, the 13.3+ version will
    automatically be used if available.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS 13.3中添加了对更新的Accelerate BLAS/LAPACK库的支持，包括ILP64（64位整数）支持。这带来了arm64支持，并且对常用线性代数运算的性能提升高达10倍。在构建时选择Accelerate时，如果可用，将自动使用13.3+版本。
- en: ([gh-24053](https://github.com/numpy/numpy/pull/24053))
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24053](https://github.com/numpy/numpy/pull/24053))
- en: '`meson` backend for `f2py`'
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`f2py`的`meson`后端'
- en: '`f2py` in compile mode (i.e. `f2py -c`) now accepts the `--backend meson` option.
    This is the default option for Python `3.12` on-wards. Older versions will still
    default to `--backend distutils`.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 编译模式下的`f2py`（即`f2py -c`）现在接受`--backend meson`选项。这是Python `3.12`及以后版本的默认选项。旧版本仍将默认为`--backend
    distutils`。
- en: To support this in realistic use-cases, in compile mode `f2py` takes a `--dep`
    flag one or many times which maps to `dependency()` calls in the `meson` backend,
    and does nothing in the `distutils` backend.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 为了支持实际用例，在编译模式下，`f2py`接受一个`--dep`标志一次或多次，它映射到`meson`后端中的`dependency()`调用，并在`distutils`后端中不执行任何操作。
- en: There are no changes for users of `f2py` only as a code generator, i.e. without
    `-c`.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 对于仅作为代码生成器使用`f2py`的用户，即没有`-c`的用户，没有任何更改。
- en: ([gh-24532](https://github.com/numpy/numpy/pull/24532))
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24532](https://github.com/numpy/numpy/pull/24532))
- en: '`bind(c)` support for `f2py`'
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`f2py`的`bind(c)`支持'
- en: Both functions and subroutines can be annotated with `bind(c)`. `f2py` will
    handle both the correct type mapping, and preserve the unique label for other
    `C` interfaces.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 函数和子程序都可以用`bind(c)`进行注释。`f2py`将处理正确的类型映射，并保留其他`C`接口的唯一标签。
- en: '**Note:** `bind(c, name = ''routine_name_other_than_fortran_routine'')` is
    not honored by the `f2py` bindings by design, since `bind(c)` with the `name`
    is meant to guarantee only the same name in `C` and `Fortran`, not in `Python`
    and `Fortran`.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** `bind(c, name = ''routine_name_other_than_fortran_routine'')`是设计上不被`f2py`绑定所接受的，因为`bind(c)`与`name`旨在仅保证`C`和`Fortran`中的相同名称，而不是`Python`和`Fortran`中的相同名称。'
- en: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
- en: Improvements
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进
- en: '`iso_c_binding` support for `f2py`'
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`f2py`的`iso_c_binding`支持'
- en: Previously, users would have to define their own custom `f2cmap` file to use
    type mappings defined by the Fortran2003 `iso_c_binding` intrinsic module. These
    type maps are now natively supported by `f2py`
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，用户必须定义自己的自定义`f2cmap`文件，以使用Fortran2003 `iso_c_binding`内在模块定义的类型映射。这些类型映射现在由`f2py`原生支持。
- en: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
- en: '`iso_c_binding` support for `f2py`'
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`f2py`的`iso_c_binding`支持'
- en: Previously, users would have to define their own custom `f2cmap` file to use
    type mappings defined by the Fortran2003 `iso_c_binding` intrinsic module. These
    type maps are now natively supported by `f2py`
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，用户必须定义自己的自定义`f2cmap`文件，以使用Fortran2003 `iso_c_binding`内在模块定义的类型映射。这些类型映射现在由`f2py`原生支持。
- en: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: ([gh-24555](https://github.com/numpy/numpy/pull/24555))
- en: Build system changes
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建系统更改
- en: 'In this release, NumPy has switched to Meson as the build system and meson-python
    as the build backend. Installing NumPy or building a wheel can be done with standard
    tools like `pip` and `pypa/build`. The following are supported:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在此版本中，NumPy已切换到Meson作为构建系统，meson-python作为构建后端。安装NumPy或构建轮可以使用标准工具如`pip`和`pypa/build`。以下是支持的：
- en: 'Regular installs: `pip install numpy` or (in a cloned repo) `pip install .`'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常规安装：`pip install numpy`或（在克隆的存储库中）`pip install .`
- en: 'Building a wheel: `python -m build` (preferred), or `pip wheel .`'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建轮：`python -m build`（首选），或`pip wheel .`
- en: 'Editable installs: `pip install -e . --no-build-isolation`'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可编辑安装：`pip install -e . --no-build-isolation`
- en: 'Development builds through the custom CLI implemented with [spin](https://github.com/scientific-python/spin):
    `spin build`.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用[spin](https://github.com/scientific-python/spin)实现的自定义CLI进行开发构建：`spin build`。
- en: All the regular `pip` and `pypa/build` flags (e.g., `--no-build-isolation`)
    should work as expected.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 所有常规的`pip`和`pypa/build`标志（例如，`--no-build-isolation`）应按预期工作。
- en: NumPy-specific build customization
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NumPy特定的构建定制
- en: Many of the NumPy-specific ways of customizing builds have changed. The `NPY_*`
    environment variables which control BLAS/LAPACK, SIMD, threading, and other such
    options are no longer supported, nor is a `site.cfg` file to select BLAS and LAPACK.
    Instead, there are command-line flags that can be passed to the build via `pip`/`build`’s
    config-settings interface. These flags are all listed in the `meson_options.txt`
    file in the root of the repo. Detailed documented will be available before the
    final 1.26.0 release; for now please see [the SciPy “building from source” docs](http://scipy.github.io/devdocs/building/index.html)
    since most build customization works in an almost identical way in SciPy as it
    does in NumPy.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 许多定制 NumPy 构建的特定方式已经发生了变化。不再支持控制 BLAS/LAPACK、SIMD、线程和其他选项的`NPY_*`环境变量，也不再支持用于选择
    BLAS 和 LAPACK 的`site.cfg`文件。相反，可以通过`pip`/`build`的配置设置界面传递给构建的命令行标志。这些标志都列在存储库根目录中的`meson_options.txt`文件中。详细文档将在最终
    1.26.0 版本发布之前提供；目前请参阅[SciPy“从源代码构建”文档](http://scipy.github.io/devdocs/building/index.html)，因为大多数构建定制方式在
    SciPy 中的工作方式与在 NumPy 中的工作方式几乎相同。
- en: Build dependencies
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建依赖
- en: While the runtime dependencies of NumPy have not changed, the build dependencies
    have. Because we temporarily vendor Meson and meson-python, there are several
    new dependencies - please see the `[build-system]` section of `pyproject.toml`
    for details.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 NumPy 的运行时依赖关系没有改变，但构建依赖关系已经改变。由于我们暂时提供 Meson 和 meson-python，因此��几个新的依赖项
    - 请查看`pyproject.toml`的`[build-system]`部分以获取详细信息。
- en: Troubleshooting
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 故障排除
- en: This build system change is quite large. In case of unexpected issues, it is
    still possible to use a `setup.py`-based build as a temporary workaround (on Python
    3.9-3.11, not 3.12), by copying `pyproject.toml.setuppy` to `pyproject.toml`.
    However, please open an issue with details on the NumPy issue tracker. We aim
    to phase out `setup.py` builds as soon as possible, and therefore would like to
    see all potential blockers surfaced early on in the 1.26.0 release cycle.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这种构建系统的变化相当大。在出现意外问题的情况下，仍然可以使用基于`setup.py`的构建作为临时解决方法（在 Python 3.9-3.11 上，而不是
    3.12），方法是将`pyproject.toml.setuppy`复制到`pyproject.toml`。但是，请在 NumPy 问题跟踪器上提供有关问题的详细信息。我们的目标是尽快淘汰`setup.py`构建，因此希望在
    1.26.0 版本发布周期的早期阶段就看到所有潜在的阻碍因素。
- en: NumPy-specific build customization
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NumPy 特定的构建定制方式
- en: Many of the NumPy-specific ways of customizing builds have changed. The `NPY_*`
    environment variables which control BLAS/LAPACK, SIMD, threading, and other such
    options are no longer supported, nor is a `site.cfg` file to select BLAS and LAPACK.
    Instead, there are command-line flags that can be passed to the build via `pip`/`build`’s
    config-settings interface. These flags are all listed in the `meson_options.txt`
    file in the root of the repo. Detailed documented will be available before the
    final 1.26.0 release; for now please see [the SciPy “building from source” docs](http://scipy.github.io/devdocs/building/index.html)
    since most build customization works in an almost identical way in SciPy as it
    does in NumPy.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 许多定制 NumPy 构建的特定方式已经发生了变化。不再支持控制 BLAS/LAPACK、SIMD、线程和其他选项的`NPY_*`环境变量，也不再支持用于选择
    BLAS 和 LAPACK 的`site.cfg`文件。相反，可以通过`pip`/`build`的配置设置界面传递给构建的命令行标志。这些标志都列在存储库根目录中的`meson_options.txt`文件中。详细文档将在最终
    1.26.0 版本发布之前提供；目前请参阅[SciPy“从源代码构建”文档](http://scipy.github.io/devdocs/building/index.html)，因为大多数构建定制方式在
    SciPy 中的工作方式与在 NumPy 中的工作方式几乎相同。
- en: Build dependencies
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构建依赖
- en: While the runtime dependencies of NumPy have not changed, the build dependencies
    have. Because we temporarily vendor Meson and meson-python, there are several
    new dependencies - please see the `[build-system]` section of `pyproject.toml`
    for details.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 NumPy 的运行时依赖关系没有改变，但构建依赖关系已经改变。由于我们暂时提供 Meson 和 meson-python，因此有几个新的依赖项 -
    请查看`pyproject.toml`的`[build-system]`部分以获取详细信息。
- en: Troubleshooting
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 故障排除
- en: This build system change is quite large. In case of unexpected issues, it is
    still possible to use a `setup.py`-based build as a temporary workaround (on Python
    3.9-3.11, not 3.12), by copying `pyproject.toml.setuppy` to `pyproject.toml`.
    However, please open an issue with details on the NumPy issue tracker. We aim
    to phase out `setup.py` builds as soon as possible, and therefore would like to
    see all potential blockers surfaced early on in the 1.26.0 release cycle.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这种构建系统的变化相当大。在出现意外问题的情况下，仍然可以使用基于`setup.py`的构建作为临时解决方法（在 Python 3.9-3.11 上，而不是
    3.12），方法是将`pyproject.toml.setuppy`复制到`pyproject.toml`。但是，请在 NumPy 问题跟踪器上提供有关问题的详细信息。我们的目标是尽快淘汰`setup.py`构建，因此希望在
    1.26.0 版本发布周期的早期阶段就看到所有潜在的阻碍因素。
- en: Contributors
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贡献者
- en: A total of 20 people contributed to this release. People with a “+” by their
    names contributed a patch for the first time.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 本次发布共有 20 位贡献者。名字后面带有“+”的人第一次贡献了补丁。
- en: '@DWesl'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '@DWesl'
- en: Albert Steppi +
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Albert Steppi +
- en: Bas van Beek
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bas van Beek
- en: Charles Harris
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Charles Harris
- en: Developer-Ecosystem-Engineering
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Developer-Ecosystem-Engineering
- en: Filipe Laíns +
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Filipe Laíns +
- en: Jake Vanderplas
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jake Vanderplas
- en: Liang Yan +
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liang Yan +
- en: Marten van Kerkwijk
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Marten van Kerkwijk
- en: Matti Picus
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matti Picus
- en: Melissa Weber Mendonça
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Melissa Weber Mendonça
- en: Namami Shanker
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Namami Shanker
- en: Nathan Goldbaum
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nathan Goldbaum
- en: Ralf Gommers
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ralf Gommers
- en: Rohit Goswami
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rohit Goswami
- en: Sayed Adel
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sayed Adel
- en: Sebastian Berg
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastian Berg
- en: Stefan van der Walt
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stefan van der Walt
- en: Tyler Reddy
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tyler Reddy
- en: Warren Weckesser
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Warren Weckesser
- en: Pull requests merged
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并的拉取请求
- en: A total of 59 pull requests were merged for this release.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 本次发布共合并了 59 个拉取请求。
- en: '[#24305](https://github.com/numpy/numpy/pull/24305): MAINT: Prepare 1.26.x
    branch for development'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24305](https://github.com/numpy/numpy/pull/24305): 维护：为 1.26.x 分支做开发准备'
- en: '[#24308](https://github.com/numpy/numpy/pull/24308): MAINT: Massive update
    of files from main for numpy 1.26'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24308](https://github.com/numpy/numpy/pull/24308): 维护：从主要大规模更新文件以用于 numpy
    1.26'
- en: '[#24322](https://github.com/numpy/numpy/pull/24322): CI: fix wheel builds on
    the 1.26.x branch'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24322](https://github.com/numpy/numpy/pull/24322): CI：修复 1.26.x 分支上的 wheel
    构建'
- en: '[#24326](https://github.com/numpy/numpy/pull/24326): BLD: update openblas to
    newer version'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24326](https://github.com/numpy/numpy/pull/24326): 构建：更新 openblas 到更新版本'
- en: '[#24327](https://github.com/numpy/numpy/pull/24327): TYP: Trim down the `_NestedSequence.__getitem__`
    signature'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24327](https://github.com/numpy/numpy/pull/24327): 类型：简化 `_NestedSequence.__getitem__`
    签名'
- en: '[#24328](https://github.com/numpy/numpy/pull/24328): BUG: fix choose refcount
    leak'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24328](https://github.com/numpy/numpy/pull/24328): 错误修复：修复 choose 引用计数泄漏'
- en: '[#24337](https://github.com/numpy/numpy/pull/24337): TST: fix running the test
    suite in builds without BLAS/LAPACK'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24337](https://github.com/numpy/numpy/pull/24337): 测试：修复在没有 BLAS/LAPACK 的构建中运行测试套件'
- en: '[#24338](https://github.com/numpy/numpy/pull/24338): BUG: random: Fix generation
    of nan by dirichlet.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24338](https://github.com/numpy/numpy/pull/24338): 错误修复：随机：修复 dirichlet 生成
    nan 的问题。'
- en: '[#24340](https://github.com/numpy/numpy/pull/24340): MAINT: Dependabot updates
    from main'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24340](https://github.com/numpy/numpy/pull/24340): 维护：从主要 Dependabot 更新'
- en: '[#24342](https://github.com/numpy/numpy/pull/24342): MAINT: Add back NPY_RUN_MYPY_IN_TESTSUITE=1'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24342](https://github.com/numpy/numpy/pull/24342): 维护：重新添加 NPY_RUN_MYPY_IN_TESTSUITE=1'
- en: '[#24353](https://github.com/numpy/numpy/pull/24353): MAINT: Update `extbuild.py`
    from main.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24353](https://github.com/numpy/numpy/pull/24353): 维护：从主要更新 `extbuild.py`。'
- en: '[#24356](https://github.com/numpy/numpy/pull/24356): TST: fix distutils tests
    for deprecations in recent setuptools…'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24356](https://github.com/numpy/numpy/pull/24356): 测试：修复 distutils 测试以适应最近
    setuptools 中的弃用…'
- en: '[#24375](https://github.com/numpy/numpy/pull/24375): MAINT: Update cibuildwheel
    to version 2.15.0'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24375](https://github.com/numpy/numpy/pull/24375): 维护：更新 cibuildwheel 到版本
    2.15.0'
- en: '[#24381](https://github.com/numpy/numpy/pull/24381): MAINT: Fix codespaces
    setup.sh script'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24381](https://github.com/numpy/numpy/pull/24381): 维护：修复 codespaces setup.sh
    脚本'
- en: '[#24403](https://github.com/numpy/numpy/pull/24403): ENH: Vendor meson for
    multi-target build support'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24403](https://github.com/numpy/numpy/pull/24403): 增强：为多目标构建支持添加 meson 供应商'
- en: '[#24404](https://github.com/numpy/numpy/pull/24404): BLD: vendor meson-python
    to make the Windows builds with SIMD…'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24404](https://github.com/numpy/numpy/pull/24404): 构建：为使 Windows 构建支持 SIMD
    而供应商 meson-python…'
- en: '[#24405](https://github.com/numpy/numpy/pull/24405): BLD, SIMD: The meson CPU
    dispatcher implementation'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24405](https://github.com/numpy/numpy/pull/24405): 构建，SIMD：meson CPU 调度器实现'
- en: '[#24406](https://github.com/numpy/numpy/pull/24406): MAINT: Remove versioneer'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24406](https://github.com/numpy/numpy/pull/24406): 维护：移除 versioneer'
- en: '[#24409](https://github.com/numpy/numpy/pull/24409): REL: Prepare for the NumPy
    1.26.0b1 release.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24409](https://github.com/numpy/numpy/pull/24409): 发布：为 NumPy 1.26.0b1 版本做准备。'
- en: '[#24453](https://github.com/numpy/numpy/pull/24453): MAINT: Pin upper version
    of sphinx.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24453](https://github.com/numpy/numpy/pull/24453): 维护：固定 sphinx 的上限版本。'
- en: '[#24455](https://github.com/numpy/numpy/pull/24455): ENH: Add prefix to _ALIGN
    Macro'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24455](https://github.com/numpy/numpy/pull/24455): 增强：为 _ALIGN 宏添加前缀'
- en: '[#24456](https://github.com/numpy/numpy/pull/24456): BUG: cleanup warnings
    [skip azp][skip circle][skip travis][skip…'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24456](https://github.com/numpy/numpy/pull/24456): 错误修复：清理警告 [跳过 azp][跳过
    circle][跳过 travis][跳过…'
- en: '[#24460](https://github.com/numpy/numpy/pull/24460): MAINT: Upgrade to spin
    0.5'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24460](https://github.com/numpy/numpy/pull/24460): 维护：升级到 spin 0.5'
- en: '[#24495](https://github.com/numpy/numpy/pull/24495): BUG: `asv dev` has been
    removed, use `asv run`.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24495](https://github.com/numpy/numpy/pull/24495): 错误修复：`asv dev` 已被移除，请使用
    `asv run`。'
- en: '[#24496](https://github.com/numpy/numpy/pull/24496): BUG: Fix meson build failure
    due to unchanged inplace auto-generated…'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24496](https://github.com/numpy/numpy/pull/24496): BUG: 修复meson构建失败，因为inplace自动生成的内容未更改…'
- en: '[#24521](https://github.com/numpy/numpy/pull/24521): BUG: fix issue with git-version
    script, needs a shebang to run'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24521](https://github.com/numpy/numpy/pull/24521): BUG: 修复git-version脚本的问题，需要shebang才能运行'
- en: '[#24522](https://github.com/numpy/numpy/pull/24522): BUG: Use a default assignment
    for git_hash [skip ci]'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24522](https://github.com/numpy/numpy/pull/24522): BUG: 为git_hash使用默认赋值 [跳过ci]'
- en: '[#24524](https://github.com/numpy/numpy/pull/24524): BUG: fix NPY_cast_info
    error handling in choose'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24524](https://github.com/numpy/numpy/pull/24524): BUG: 修复choose中的NPY_cast_info错误处理'
- en: '[#24526](https://github.com/numpy/numpy/pull/24526): BUG: Fix common block
    handling in f2py'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24526](https://github.com/numpy/numpy/pull/24526): BUG: 修复f2py中的common block处理'
- en: '[#24541](https://github.com/numpy/numpy/pull/24541): CI,TYP: Bump mypy to 1.4.1'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24541](https://github.com/numpy/numpy/pull/24541): CI,TYP: 将mypy升级至1.4.1'
- en: '[#24542](https://github.com/numpy/numpy/pull/24542): BUG: Fix assumed length
    f2py regression'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24542](https://github.com/numpy/numpy/pull/24542): BUG: 修复假定长度f2py回归问题'
- en: '[#24544](https://github.com/numpy/numpy/pull/24544): MAINT: Harmonize fortranobject'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24544](https://github.com/numpy/numpy/pull/24544): MAINT: 统一fortranobject'
- en: '[#24545](https://github.com/numpy/numpy/pull/24545): TYP: add kind argument
    to numpy.isin type specification'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24545](https://github.com/numpy/numpy/pull/24545): TYP: 向numpy.isin类型规范添加kind参数'
- en: '[#24561](https://github.com/numpy/numpy/pull/24561): BUG: fix comparisons between
    masked and unmasked structured arrays'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24561](https://github.com/numpy/numpy/pull/24561): BUG: 修复掩码和未掩码结构化数组之间的比较'
- en: '[#24590](https://github.com/numpy/numpy/pull/24590): CI: Exclude import libraries
    from list of DLLs on Cygwin.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24590](https://github.com/numpy/numpy/pull/24590): CI: 在Cygwin上排除导入库的DLL列表。'
- en: '[#24591](https://github.com/numpy/numpy/pull/24591): BLD: fix `_umath_linalg`
    dependencies'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24591](https://github.com/numpy/numpy/pull/24591): BLD: 修复`_umath_linalg`的依赖关系'
- en: '[#24594](https://github.com/numpy/numpy/pull/24594): MAINT: Stop testing on
    ppc64le.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24594](https://github.com/numpy/numpy/pull/24594): MAINT: 停止在ppc64le上进行测试。'
- en: '[#24602](https://github.com/numpy/numpy/pull/24602): BLD: meson-cpu: fix SIMD
    support on platforms with no features'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24602](https://github.com/numpy/numpy/pull/24602): BLD: meson-cpu: 修复在没有功能的平台上的SIMD支持'
- en: '[#24606](https://github.com/numpy/numpy/pull/24606): BUG: Change Cython `binding`
    directive to “False”.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24606](https://github.com/numpy/numpy/pull/24606): BUG: 将Cython的`binding`指令更改为“False”。'
- en: '[#24613](https://github.com/numpy/numpy/pull/24613): ENH: Adopt new macOS Accelerate
    BLAS/LAPACK Interfaces, including…'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24613](https://github.com/numpy/numpy/pull/24613): ENH: 采用新的macOS Accelerate
    BLAS/LAPACK接口，包括…'
- en: '[#24614](https://github.com/numpy/numpy/pull/24614): DOC: Update building docs
    to use Meson'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24614](https://github.com/numpy/numpy/pull/24614): DOC: 更新构建文档以使用Meson'
- en: '[#24615](https://github.com/numpy/numpy/pull/24615): TYP: Add the missing `casting`
    keyword to `np.clip`'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24615](https://github.com/numpy/numpy/pull/24615): TYP: 向`np.clip`添加缺失的`casting`关键字'
- en: '[#24616](https://github.com/numpy/numpy/pull/24616): TST: convert cython test
    from setup.py to meson'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24616](https://github.com/numpy/numpy/pull/24616): TST: 将cython测试从setup.py转换为meson'
- en: '[#24617](https://github.com/numpy/numpy/pull/24617): MAINT: Fixup `fromnumeric.pyi`'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24617](https://github.com/numpy/numpy/pull/24617): MAINT: 修复`fromnumeric.pyi`'
- en: '[#24622](https://github.com/numpy/numpy/pull/24622): BUG, ENH: Fix `iso_c_binding`
    type maps and fix `bind(c)`…'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24622](https://github.com/numpy/numpy/pull/24622): BUG, ENH: 修复`iso_c_binding`类型映射和修复`bind(c)`…'
- en: '[#24629](https://github.com/numpy/numpy/pull/24629): TYP: Allow `binary_repr`
    to accept any object implementing…'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24629](https://github.com/numpy/numpy/pull/24629): TYP: 允许`binary_repr`接受任何实现…'
- en: '[#24630](https://github.com/numpy/numpy/pull/24630): TYP: Explicitly declare
    `dtype` and `generic` hashable'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24630](https://github.com/numpy/numpy/pull/24630): TYP: 明确声明`dtype`和`generic`可哈希'
- en: '[#24637](https://github.com/numpy/numpy/pull/24637): ENH: Refactor the typing
    “reveal” tests using [`typing.assert_type`](https://docs.python.org/3/library/typing.html#typing.assert_type
    "(in Python v3.11)")'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24637](https://github.com/numpy/numpy/pull/24637): ENH: 使用[`typing.assert_type`](https://docs.python.org/3/library/typing.html#typing.assert_type
    "(在Python v3.11中)")重构类型“reveal”测试'
- en: '[#24638](https://github.com/numpy/numpy/pull/24638): MAINT: Bump actions/checkout
    from 3.6.0 to 4.0.0'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24638](https://github.com/numpy/numpy/pull/24638): MAINT: 将actions/checkout从3.6.0升级到4.0.0'
- en: '[#24647](https://github.com/numpy/numpy/pull/24647): ENH: `meson` backend for
    `f2py`'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24647](https://github.com/numpy/numpy/pull/24647): ENH: `f2py`的`meson`后端'
- en: '[#24648](https://github.com/numpy/numpy/pull/24648): MAINT: Refactor partial
    load Workaround for Clang'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24648](https://github.com/numpy/numpy/pull/24648): MAINT: 重构Clang的部分加载解决方法'
- en: '[#24653](https://github.com/numpy/numpy/pull/24653): REL: Prepare for the NumPy
    1.26.0rc1 release.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24653](https://github.com/numpy/numpy/pull/24653): REL: 为NumPy 1.26.0rc1版本做准备。'
- en: '[#24659](https://github.com/numpy/numpy/pull/24659): BLD: allow specifying
    the long double format to avoid the runtime…'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24659](https://github.com/numpy/numpy/pull/24659): BLD: 允许指定 long double
    格式以避免运行时问题…'
- en: '[#24665](https://github.com/numpy/numpy/pull/24665): BLD: fix bug in random.mtrand
    extension, don’t link libnpyrandom'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24665](https://github.com/numpy/numpy/pull/24665): BLD: 修复 random.mtrand
    扩展中的 bug，不链接 libnpyrandom'
- en: '[#24675](https://github.com/numpy/numpy/pull/24675): BLD: build wheels for
    32-bit Python on Windows, using MSVC'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24675](https://github.com/numpy/numpy/pull/24675): BLD: 在 Windows 上为 32 位
    Python 构建 wheels，使用 MSVC'
- en: '[#24700](https://github.com/numpy/numpy/pull/24700): BLD: fix issue with compiler
    selection during cross compilation'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24700](https://github.com/numpy/numpy/pull/24700): BLD: 修复交叉编译过程中编译器选择的问题'
- en: '[#24701](https://github.com/numpy/numpy/pull/24701): BUG: Fix data stmt handling
    for complex values in f2py'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24701](https://github.com/numpy/numpy/pull/24701): BUG: 修复 f2py 中对复数值的数据语句处理'
- en: '[#24707](https://github.com/numpy/numpy/pull/24707): TYP: Add annotations for
    the py3.12 buffer protocol'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24707](https://github.com/numpy/numpy/pull/24707): TYP: 为 py3.12 缓冲区协议添加注释'
- en: '[#24718](https://github.com/numpy/numpy/pull/24718): DOC: fix a few doc build
    issues on 1.26.x and update *spin docs*…'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#24718](https://github.com/numpy/numpy/pull/24718): DOC: 修复 1.26.x 上的一些文档构建问题，并更新
    *spin 文档*…'
