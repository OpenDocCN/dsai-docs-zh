- en: Date offsets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/offset_frequency.html](https://pandas.pydata.org/docs/reference/offset_frequency.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## DateOffset'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`DateOffset`](api/pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset") | Standard kind of date increment used for
    a date range. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`DateOffset.freqstr`](api/pandas.tseries.offsets.DateOffset.freqstr.html#pandas.tseries.offsets.DateOffset.freqstr
    "pandas.tseries.offsets.DateOffset.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.kwds`](api/pandas.tseries.offsets.DateOffset.kwds.html#pandas.tseries.offsets.DateOffset.kwds
    "pandas.tseries.offsets.DateOffset.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.name`](api/pandas.tseries.offsets.DateOffset.name.html#pandas.tseries.offsets.DateOffset.name
    "pandas.tseries.offsets.DateOffset.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.nanos`](api/pandas.tseries.offsets.DateOffset.nanos.html#pandas.tseries.offsets.DateOffset.nanos
    "pandas.tseries.offsets.DateOffset.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.normalize`](api/pandas.tseries.offsets.DateOffset.normalize.html#pandas.tseries.offsets.DateOffset.normalize
    "pandas.tseries.offsets.DateOffset.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.rule_code`](api/pandas.tseries.offsets.DateOffset.rule_code.html#pandas.tseries.offsets.DateOffset.rule_code
    "pandas.tseries.offsets.DateOffset.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.n`](api/pandas.tseries.offsets.DateOffset.n.html#pandas.tseries.offsets.DateOffset.n
    "pandas.tseries.offsets.DateOffset.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_start`](api/pandas.tseries.offsets.DateOffset.is_month_start.html#pandas.tseries.offsets.DateOffset.is_month_start
    "pandas.tseries.offsets.DateOffset.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_end`](api/pandas.tseries.offsets.DateOffset.is_month_end.html#pandas.tseries.offsets.DateOffset.is_month_end
    "pandas.tseries.offsets.DateOffset.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`DateOffset.copy`](api/pandas.tseries.offsets.DateOffset.copy.html#pandas.tseries.offsets.DateOffset.copy
    "pandas.tseries.offsets.DateOffset.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_anchored`](api/pandas.tseries.offsets.DateOffset.is_anchored.html#pandas.tseries.offsets.DateOffset.is_anchored
    "pandas.tseries.offsets.DateOffset.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_on_offset`](api/pandas.tseries.offsets.DateOffset.is_on_offset.html#pandas.tseries.offsets.DateOffset.is_on_offset
    "pandas.tseries.offsets.DateOffset.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_start`](api/pandas.tseries.offsets.DateOffset.is_month_start.html#pandas.tseries.offsets.DateOffset.is_month_start
    "pandas.tseries.offsets.DateOffset.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_end`](api/pandas.tseries.offsets.DateOffset.is_month_end.html#pandas.tseries.offsets.DateOffset.is_month_end
    "pandas.tseries.offsets.DateOffset.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_quarter_start`](api/pandas.tseries.offsets.DateOffset.is_quarter_start.html#pandas.tseries.offsets.DateOffset.is_quarter_start
    "pandas.tseries.offsets.DateOffset.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_quarter_end`](api/pandas.tseries.offsets.DateOffset.is_quarter_end.html#pandas.tseries.offsets.DateOffset.is_quarter_end
    "pandas.tseries.offsets.DateOffset.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_year_start`](api/pandas.tseries.offsets.DateOffset.is_year_start.html#pandas.tseries.offsets.DateOffset.is_year_start
    "pandas.tseries.offsets.DateOffset.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_year_end`](api/pandas.tseries.offsets.DateOffset.is_year_end.html#pandas.tseries.offsets.DateOffset.is_year_end
    "pandas.tseries.offsets.DateOffset.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BusinessDay
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BusinessDay`](api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") | DateOffset subclass representing possibly
    n business days. |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`BDay`](api/pandas.tseries.offsets.BDay.html#pandas.tseries.offsets.BDay
    "pandas.tseries.offsets.BDay") | alias of [`BusinessDay`](api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas._libs.tslibs.offsets.BusinessDay") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessDay.freqstr`](api/pandas.tseries.offsets.BusinessDay.freqstr.html#pandas.tseries.offsets.BusinessDay.freqstr
    "pandas.tseries.offsets.BusinessDay.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.kwds`](api/pandas.tseries.offsets.BusinessDay.kwds.html#pandas.tseries.offsets.BusinessDay.kwds
    "pandas.tseries.offsets.BusinessDay.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.name`](api/pandas.tseries.offsets.BusinessDay.name.html#pandas.tseries.offsets.BusinessDay.name
    "pandas.tseries.offsets.BusinessDay.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.nanos`](api/pandas.tseries.offsets.BusinessDay.nanos.html#pandas.tseries.offsets.BusinessDay.nanos
    "pandas.tseries.offsets.BusinessDay.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.normalize`](api/pandas.tseries.offsets.BusinessDay.normalize.html#pandas.tseries.offsets.BusinessDay.normalize
    "pandas.tseries.offsets.BusinessDay.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.rule_code`](api/pandas.tseries.offsets.BusinessDay.rule_code.html#pandas.tseries.offsets.BusinessDay.rule_code
    "pandas.tseries.offsets.BusinessDay.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.n`](api/pandas.tseries.offsets.BusinessDay.n.html#pandas.tseries.offsets.BusinessDay.n
    "pandas.tseries.offsets.BusinessDay.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.weekmask`](api/pandas.tseries.offsets.BusinessDay.weekmask.html#pandas.tseries.offsets.BusinessDay.weekmask
    "pandas.tseries.offsets.BusinessDay.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.holidays`](api/pandas.tseries.offsets.BusinessDay.holidays.html#pandas.tseries.offsets.BusinessDay.holidays
    "pandas.tseries.offsets.BusinessDay.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.calendar`](api/pandas.tseries.offsets.BusinessDay.calendar.html#pandas.tseries.offsets.BusinessDay.calendar
    "pandas.tseries.offsets.BusinessDay.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessDay.copy`](api/pandas.tseries.offsets.BusinessDay.copy.html#pandas.tseries.offsets.BusinessDay.copy
    "pandas.tseries.offsets.BusinessDay.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_anchored`](api/pandas.tseries.offsets.BusinessDay.is_anchored.html#pandas.tseries.offsets.BusinessDay.is_anchored
    "pandas.tseries.offsets.BusinessDay.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_on_offset`](api/pandas.tseries.offsets.BusinessDay.is_on_offset.html#pandas.tseries.offsets.BusinessDay.is_on_offset
    "pandas.tseries.offsets.BusinessDay.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_month_start`](api/pandas.tseries.offsets.BusinessDay.is_month_start.html#pandas.tseries.offsets.BusinessDay.is_month_start
    "pandas.tseries.offsets.BusinessDay.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_month_end`](api/pandas.tseries.offsets.BusinessDay.is_month_end.html#pandas.tseries.offsets.BusinessDay.is_month_end
    "pandas.tseries.offsets.BusinessDay.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_quarter_start`](api/pandas.tseries.offsets.BusinessDay.is_quarter_start.html#pandas.tseries.offsets.BusinessDay.is_quarter_start
    "pandas.tseries.offsets.BusinessDay.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_quarter_end`](api/pandas.tseries.offsets.BusinessDay.is_quarter_end.html#pandas.tseries.offsets.BusinessDay.is_quarter_end
    "pandas.tseries.offsets.BusinessDay.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_year_start`](api/pandas.tseries.offsets.BusinessDay.is_year_start.html#pandas.tseries.offsets.BusinessDay.is_year_start
    "pandas.tseries.offsets.BusinessDay.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_year_end`](api/pandas.tseries.offsets.BusinessDay.is_year_end.html#pandas.tseries.offsets.BusinessDay.is_year_end
    "pandas.tseries.offsets.BusinessDay.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BusinessHour
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BusinessHour`](api/pandas.tseries.offsets.BusinessHour.html#pandas.tseries.offsets.BusinessHour
    "pandas.tseries.offsets.BusinessHour") | DateOffset subclass representing possibly
    n business hours. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessHour.freqstr`](api/pandas.tseries.offsets.BusinessHour.freqstr.html#pandas.tseries.offsets.BusinessHour.freqstr
    "pandas.tseries.offsets.BusinessHour.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.kwds`](api/pandas.tseries.offsets.BusinessHour.kwds.html#pandas.tseries.offsets.BusinessHour.kwds
    "pandas.tseries.offsets.BusinessHour.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.name`](api/pandas.tseries.offsets.BusinessHour.name.html#pandas.tseries.offsets.BusinessHour.name
    "pandas.tseries.offsets.BusinessHour.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.nanos`](api/pandas.tseries.offsets.BusinessHour.nanos.html#pandas.tseries.offsets.BusinessHour.nanos
    "pandas.tseries.offsets.BusinessHour.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.normalize`](api/pandas.tseries.offsets.BusinessHour.normalize.html#pandas.tseries.offsets.BusinessHour.normalize
    "pandas.tseries.offsets.BusinessHour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.rule_code`](api/pandas.tseries.offsets.BusinessHour.rule_code.html#pandas.tseries.offsets.BusinessHour.rule_code
    "pandas.tseries.offsets.BusinessHour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.n`](api/pandas.tseries.offsets.BusinessHour.n.html#pandas.tseries.offsets.BusinessHour.n
    "pandas.tseries.offsets.BusinessHour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.start`](api/pandas.tseries.offsets.BusinessHour.start.html#pandas.tseries.offsets.BusinessHour.start
    "pandas.tseries.offsets.BusinessHour.start") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.end`](api/pandas.tseries.offsets.BusinessHour.end.html#pandas.tseries.offsets.BusinessHour.end
    "pandas.tseries.offsets.BusinessHour.end") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.weekmask`](api/pandas.tseries.offsets.BusinessHour.weekmask.html#pandas.tseries.offsets.BusinessHour.weekmask
    "pandas.tseries.offsets.BusinessHour.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.holidays`](api/pandas.tseries.offsets.BusinessHour.holidays.html#pandas.tseries.offsets.BusinessHour.holidays
    "pandas.tseries.offsets.BusinessHour.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.calendar`](api/pandas.tseries.offsets.BusinessHour.calendar.html#pandas.tseries.offsets.BusinessHour.calendar
    "pandas.tseries.offsets.BusinessHour.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessHour.copy`](api/pandas.tseries.offsets.BusinessHour.copy.html#pandas.tseries.offsets.BusinessHour.copy
    "pandas.tseries.offsets.BusinessHour.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_anchored`](api/pandas.tseries.offsets.BusinessHour.is_anchored.html#pandas.tseries.offsets.BusinessHour.is_anchored
    "pandas.tseries.offsets.BusinessHour.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_on_offset`](api/pandas.tseries.offsets.BusinessHour.is_on_offset.html#pandas.tseries.offsets.BusinessHour.is_on_offset
    "pandas.tseries.offsets.BusinessHour.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_month_start`](api/pandas.tseries.offsets.BusinessHour.is_month_start.html#pandas.tseries.offsets.BusinessHour.is_month_start
    "pandas.tseries.offsets.BusinessHour.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_month_end`](api/pandas.tseries.offsets.BusinessHour.is_month_end.html#pandas.tseries.offsets.BusinessHour.is_month_end
    "pandas.tseries.offsets.BusinessHour.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_quarter_start`](api/pandas.tseries.offsets.BusinessHour.is_quarter_start.html#pandas.tseries.offsets.BusinessHour.is_quarter_start
    "pandas.tseries.offsets.BusinessHour.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_quarter_end`](api/pandas.tseries.offsets.BusinessHour.is_quarter_end.html#pandas.tseries.offsets.BusinessHour.is_quarter_end
    "pandas.tseries.offsets.BusinessHour.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_year_start`](api/pandas.tseries.offsets.BusinessHour.is_year_start.html#pandas.tseries.offsets.BusinessHour.is_year_start
    "pandas.tseries.offsets.BusinessHour.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_year_end`](api/pandas.tseries.offsets.BusinessHour.is_year_end.html#pandas.tseries.offsets.BusinessHour.is_year_end
    "pandas.tseries.offsets.BusinessHour.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: CustomBusinessDay
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`CustomBusinessDay`](api/pandas.tseries.offsets.CustomBusinessDay.html#pandas.tseries.offsets.CustomBusinessDay
    "pandas.tseries.offsets.CustomBusinessDay") | DateOffset subclass representing
    possibly n custom business days. |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`CDay`](api/pandas.tseries.offsets.CDay.html#pandas.tseries.offsets.CDay
    "pandas.tseries.offsets.CDay") | alias of [`CustomBusinessDay`](api/pandas.tseries.offsets.CustomBusinessDay.html#pandas.tseries.offsets.CustomBusinessDay
    "pandas._libs.tslibs.offsets.CustomBusinessDay") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessDay.freqstr`](api/pandas.tseries.offsets.CustomBusinessDay.freqstr.html#pandas.tseries.offsets.CustomBusinessDay.freqstr
    "pandas.tseries.offsets.CustomBusinessDay.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.kwds`](api/pandas.tseries.offsets.CustomBusinessDay.kwds.html#pandas.tseries.offsets.CustomBusinessDay.kwds
    "pandas.tseries.offsets.CustomBusinessDay.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.name`](api/pandas.tseries.offsets.CustomBusinessDay.name.html#pandas.tseries.offsets.CustomBusinessDay.name
    "pandas.tseries.offsets.CustomBusinessDay.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.nanos`](api/pandas.tseries.offsets.CustomBusinessDay.nanos.html#pandas.tseries.offsets.CustomBusinessDay.nanos
    "pandas.tseries.offsets.CustomBusinessDay.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.normalize`](api/pandas.tseries.offsets.CustomBusinessDay.normalize.html#pandas.tseries.offsets.CustomBusinessDay.normalize
    "pandas.tseries.offsets.CustomBusinessDay.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.rule_code`](api/pandas.tseries.offsets.CustomBusinessDay.rule_code.html#pandas.tseries.offsets.CustomBusinessDay.rule_code
    "pandas.tseries.offsets.CustomBusinessDay.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.n`](api/pandas.tseries.offsets.CustomBusinessDay.n.html#pandas.tseries.offsets.CustomBusinessDay.n
    "pandas.tseries.offsets.CustomBusinessDay.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.weekmask`](api/pandas.tseries.offsets.CustomBusinessDay.weekmask.html#pandas.tseries.offsets.CustomBusinessDay.weekmask
    "pandas.tseries.offsets.CustomBusinessDay.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.calendar`](api/pandas.tseries.offsets.CustomBusinessDay.calendar.html#pandas.tseries.offsets.CustomBusinessDay.calendar
    "pandas.tseries.offsets.CustomBusinessDay.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.holidays`](api/pandas.tseries.offsets.CustomBusinessDay.holidays.html#pandas.tseries.offsets.CustomBusinessDay.holidays
    "pandas.tseries.offsets.CustomBusinessDay.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessDay.copy`](api/pandas.tseries.offsets.CustomBusinessDay.copy.html#pandas.tseries.offsets.CustomBusinessDay.copy
    "pandas.tseries.offsets.CustomBusinessDay.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_anchored`](api/pandas.tseries.offsets.CustomBusinessDay.is_anchored.html#pandas.tseries.offsets.CustomBusinessDay.is_anchored
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessDay.is_on_offset.html#pandas.tseries.offsets.CustomBusinessDay.is_on_offset
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_month_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_month_start.html#pandas.tseries.offsets.CustomBusinessDay.is_month_start
    "pandas.tseries.offsets.CustomBusinessDay.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_month_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_month_end.html#pandas.tseries.offsets.CustomBusinessDay.is_month_end
    "pandas.tseries.offsets.CustomBusinessDay.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessDay.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessDay.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessDay.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessDay.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_year_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_year_start.html#pandas.tseries.offsets.CustomBusinessDay.is_year_start
    "pandas.tseries.offsets.CustomBusinessDay.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_year_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_year_end.html#pandas.tseries.offsets.CustomBusinessDay.is_year_end
    "pandas.tseries.offsets.CustomBusinessDay.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: CustomBusinessHour
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`CustomBusinessHour`](api/pandas.tseries.offsets.CustomBusinessHour.html#pandas.tseries.offsets.CustomBusinessHour
    "pandas.tseries.offsets.CustomBusinessHour") | DateOffset subclass representing
    possibly n custom business days. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessHour.freqstr`](api/pandas.tseries.offsets.CustomBusinessHour.freqstr.html#pandas.tseries.offsets.CustomBusinessHour.freqstr
    "pandas.tseries.offsets.CustomBusinessHour.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.kwds`](api/pandas.tseries.offsets.CustomBusinessHour.kwds.html#pandas.tseries.offsets.CustomBusinessHour.kwds
    "pandas.tseries.offsets.CustomBusinessHour.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.name`](api/pandas.tseries.offsets.CustomBusinessHour.name.html#pandas.tseries.offsets.CustomBusinessHour.name
    "pandas.tseries.offsets.CustomBusinessHour.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.nanos`](api/pandas.tseries.offsets.CustomBusinessHour.nanos.html#pandas.tseries.offsets.CustomBusinessHour.nanos
    "pandas.tseries.offsets.CustomBusinessHour.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.normalize`](api/pandas.tseries.offsets.CustomBusinessHour.normalize.html#pandas.tseries.offsets.CustomBusinessHour.normalize
    "pandas.tseries.offsets.CustomBusinessHour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.rule_code`](api/pandas.tseries.offsets.CustomBusinessHour.rule_code.html#pandas.tseries.offsets.CustomBusinessHour.rule_code
    "pandas.tseries.offsets.CustomBusinessHour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.n`](api/pandas.tseries.offsets.CustomBusinessHour.n.html#pandas.tseries.offsets.CustomBusinessHour.n
    "pandas.tseries.offsets.CustomBusinessHour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.weekmask`](api/pandas.tseries.offsets.CustomBusinessHour.weekmask.html#pandas.tseries.offsets.CustomBusinessHour.weekmask
    "pandas.tseries.offsets.CustomBusinessHour.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.calendar`](api/pandas.tseries.offsets.CustomBusinessHour.calendar.html#pandas.tseries.offsets.CustomBusinessHour.calendar
    "pandas.tseries.offsets.CustomBusinessHour.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.holidays`](api/pandas.tseries.offsets.CustomBusinessHour.holidays.html#pandas.tseries.offsets.CustomBusinessHour.holidays
    "pandas.tseries.offsets.CustomBusinessHour.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.start`](api/pandas.tseries.offsets.CustomBusinessHour.start.html#pandas.tseries.offsets.CustomBusinessHour.start
    "pandas.tseries.offsets.CustomBusinessHour.start") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.end`](api/pandas.tseries.offsets.CustomBusinessHour.end.html#pandas.tseries.offsets.CustomBusinessHour.end
    "pandas.tseries.offsets.CustomBusinessHour.end") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessHour.copy`](api/pandas.tseries.offsets.CustomBusinessHour.copy.html#pandas.tseries.offsets.CustomBusinessHour.copy
    "pandas.tseries.offsets.CustomBusinessHour.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_anchored`](api/pandas.tseries.offsets.CustomBusinessHour.is_anchored.html#pandas.tseries.offsets.CustomBusinessHour.is_anchored
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessHour.is_on_offset.html#pandas.tseries.offsets.CustomBusinessHour.is_on_offset
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_month_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_month_start.html#pandas.tseries.offsets.CustomBusinessHour.is_month_start
    "pandas.tseries.offsets.CustomBusinessHour.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_month_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_month_end.html#pandas.tseries.offsets.CustomBusinessHour.is_month_end
    "pandas.tseries.offsets.CustomBusinessHour.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessHour.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessHour.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessHour.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessHour.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_year_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_year_start.html#pandas.tseries.offsets.CustomBusinessHour.is_year_start
    "pandas.tseries.offsets.CustomBusinessHour.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_year_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_year_end.html#pandas.tseries.offsets.CustomBusinessHour.is_year_end
    "pandas.tseries.offsets.CustomBusinessHour.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: MonthEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`MonthEnd`](api/pandas.tseries.offsets.MonthEnd.html#pandas.tseries.offsets.MonthEnd
    "pandas.tseries.offsets.MonthEnd") | DateOffset of one month end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthEnd.freqstr`](api/pandas.tseries.offsets.MonthEnd.freqstr.html#pandas.tseries.offsets.MonthEnd.freqstr
    "pandas.tseries.offsets.MonthEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.kwds`](api/pandas.tseries.offsets.MonthEnd.kwds.html#pandas.tseries.offsets.MonthEnd.kwds
    "pandas.tseries.offsets.MonthEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.name`](api/pandas.tseries.offsets.MonthEnd.name.html#pandas.tseries.offsets.MonthEnd.name
    "pandas.tseries.offsets.MonthEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.nanos`](api/pandas.tseries.offsets.MonthEnd.nanos.html#pandas.tseries.offsets.MonthEnd.nanos
    "pandas.tseries.offsets.MonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.normalize`](api/pandas.tseries.offsets.MonthEnd.normalize.html#pandas.tseries.offsets.MonthEnd.normalize
    "pandas.tseries.offsets.MonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.rule_code`](api/pandas.tseries.offsets.MonthEnd.rule_code.html#pandas.tseries.offsets.MonthEnd.rule_code
    "pandas.tseries.offsets.MonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.n`](api/pandas.tseries.offsets.MonthEnd.n.html#pandas.tseries.offsets.MonthEnd.n
    "pandas.tseries.offsets.MonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthEnd.copy`](api/pandas.tseries.offsets.MonthEnd.copy.html#pandas.tseries.offsets.MonthEnd.copy
    "pandas.tseries.offsets.MonthEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_anchored`](api/pandas.tseries.offsets.MonthEnd.is_anchored.html#pandas.tseries.offsets.MonthEnd.is_anchored
    "pandas.tseries.offsets.MonthEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_on_offset`](api/pandas.tseries.offsets.MonthEnd.is_on_offset.html#pandas.tseries.offsets.MonthEnd.is_on_offset
    "pandas.tseries.offsets.MonthEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_month_start`](api/pandas.tseries.offsets.MonthEnd.is_month_start.html#pandas.tseries.offsets.MonthEnd.is_month_start
    "pandas.tseries.offsets.MonthEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_month_end`](api/pandas.tseries.offsets.MonthEnd.is_month_end.html#pandas.tseries.offsets.MonthEnd.is_month_end
    "pandas.tseries.offsets.MonthEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_quarter_start`](api/pandas.tseries.offsets.MonthEnd.is_quarter_start.html#pandas.tseries.offsets.MonthEnd.is_quarter_start
    "pandas.tseries.offsets.MonthEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_quarter_end`](api/pandas.tseries.offsets.MonthEnd.is_quarter_end.html#pandas.tseries.offsets.MonthEnd.is_quarter_end
    "pandas.tseries.offsets.MonthEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_year_start`](api/pandas.tseries.offsets.MonthEnd.is_year_start.html#pandas.tseries.offsets.MonthEnd.is_year_start
    "pandas.tseries.offsets.MonthEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_year_end`](api/pandas.tseries.offsets.MonthEnd.is_year_end.html#pandas.tseries.offsets.MonthEnd.is_year_end
    "pandas.tseries.offsets.MonthEnd.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: MonthBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`MonthBegin`](api/pandas.tseries.offsets.MonthBegin.html#pandas.tseries.offsets.MonthBegin
    "pandas.tseries.offsets.MonthBegin") | DateOffset of one month at beginning. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthBegin.freqstr`](api/pandas.tseries.offsets.MonthBegin.freqstr.html#pandas.tseries.offsets.MonthBegin.freqstr
    "pandas.tseries.offsets.MonthBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.kwds`](api/pandas.tseries.offsets.MonthBegin.kwds.html#pandas.tseries.offsets.MonthBegin.kwds
    "pandas.tseries.offsets.MonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.name`](api/pandas.tseries.offsets.MonthBegin.name.html#pandas.tseries.offsets.MonthBegin.name
    "pandas.tseries.offsets.MonthBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.nanos`](api/pandas.tseries.offsets.MonthBegin.nanos.html#pandas.tseries.offsets.MonthBegin.nanos
    "pandas.tseries.offsets.MonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.normalize`](api/pandas.tseries.offsets.MonthBegin.normalize.html#pandas.tseries.offsets.MonthBegin.normalize
    "pandas.tseries.offsets.MonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.rule_code`](api/pandas.tseries.offsets.MonthBegin.rule_code.html#pandas.tseries.offsets.MonthBegin.rule_code
    "pandas.tseries.offsets.MonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.n`](api/pandas.tseries.offsets.MonthBegin.n.html#pandas.tseries.offsets.MonthBegin.n
    "pandas.tseries.offsets.MonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthBegin.copy`](api/pandas.tseries.offsets.MonthBegin.copy.html#pandas.tseries.offsets.MonthBegin.copy
    "pandas.tseries.offsets.MonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_anchored`](api/pandas.tseries.offsets.MonthBegin.is_anchored.html#pandas.tseries.offsets.MonthBegin.is_anchored
    "pandas.tseries.offsets.MonthBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_on_offset`](api/pandas.tseries.offsets.MonthBegin.is_on_offset.html#pandas.tseries.offsets.MonthBegin.is_on_offset
    "pandas.tseries.offsets.MonthBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_month_start`](api/pandas.tseries.offsets.MonthBegin.is_month_start.html#pandas.tseries.offsets.MonthBegin.is_month_start
    "pandas.tseries.offsets.MonthBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_month_end`](api/pandas.tseries.offsets.MonthBegin.is_month_end.html#pandas.tseries.offsets.MonthBegin.is_month_end
    "pandas.tseries.offsets.MonthBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_quarter_start`](api/pandas.tseries.offsets.MonthBegin.is_quarter_start.html#pandas.tseries.offsets.MonthBegin.is_quarter_start
    "pandas.tseries.offsets.MonthBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_quarter_end`](api/pandas.tseries.offsets.MonthBegin.is_quarter_end.html#pandas.tseries.offsets.MonthBegin.is_quarter_end
    "pandas.tseries.offsets.MonthBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_year_start`](api/pandas.tseries.offsets.MonthBegin.is_year_start.html#pandas.tseries.offsets.MonthBegin.is_year_start
    "pandas.tseries.offsets.MonthBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_year_end`](api/pandas.tseries.offsets.MonthBegin.is_year_end.html#pandas.tseries.offsets.MonthBegin.is_year_end
    "pandas.tseries.offsets.MonthBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BusinessMonthEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BusinessMonthEnd`](api/pandas.tseries.offsets.BusinessMonthEnd.html#pandas.tseries.offsets.BusinessMonthEnd
    "pandas.tseries.offsets.BusinessMonthEnd") | DateOffset increments between the
    last business day of the month. |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`BMonthEnd`](api/pandas.tseries.offsets.BMonthEnd.html#pandas.tseries.offsets.BMonthEnd
    "pandas.tseries.offsets.BMonthEnd") | alias of [`BusinessMonthEnd`](api/pandas.tseries.offsets.BusinessMonthEnd.html#pandas.tseries.offsets.BusinessMonthEnd
    "pandas._libs.tslibs.offsets.BusinessMonthEnd") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthEnd.freqstr`](api/pandas.tseries.offsets.BusinessMonthEnd.freqstr.html#pandas.tseries.offsets.BusinessMonthEnd.freqstr
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.kwds`](api/pandas.tseries.offsets.BusinessMonthEnd.kwds.html#pandas.tseries.offsets.BusinessMonthEnd.kwds
    "pandas.tseries.offsets.BusinessMonthEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.name`](api/pandas.tseries.offsets.BusinessMonthEnd.name.html#pandas.tseries.offsets.BusinessMonthEnd.name
    "pandas.tseries.offsets.BusinessMonthEnd.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.nanos`](api/pandas.tseries.offsets.BusinessMonthEnd.nanos.html#pandas.tseries.offsets.BusinessMonthEnd.nanos
    "pandas.tseries.offsets.BusinessMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.normalize`](api/pandas.tseries.offsets.BusinessMonthEnd.normalize.html#pandas.tseries.offsets.BusinessMonthEnd.normalize
    "pandas.tseries.offsets.BusinessMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.rule_code`](api/pandas.tseries.offsets.BusinessMonthEnd.rule_code.html#pandas.tseries.offsets.BusinessMonthEnd.rule_code
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.n`](api/pandas.tseries.offsets.BusinessMonthEnd.n.html#pandas.tseries.offsets.BusinessMonthEnd.n
    "pandas.tseries.offsets.BusinessMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthEnd.copy`](api/pandas.tseries.offsets.BusinessMonthEnd.copy.html#pandas.tseries.offsets.BusinessMonthEnd.copy
    "pandas.tseries.offsets.BusinessMonthEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_anchored`](api/pandas.tseries.offsets.BusinessMonthEnd.is_anchored.html#pandas.tseries.offsets.BusinessMonthEnd.is_anchored
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_on_offset`](api/pandas.tseries.offsets.BusinessMonthEnd.is_on_offset.html#pandas.tseries.offsets.BusinessMonthEnd.is_on_offset
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_month_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_month_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_month_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_month_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_month_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_month_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_year_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_year_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_year_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_year_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_year_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_year_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BusinessMonthBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BusinessMonthBegin`](api/pandas.tseries.offsets.BusinessMonthBegin.html#pandas.tseries.offsets.BusinessMonthBegin
    "pandas.tseries.offsets.BusinessMonthBegin") | DateOffset of one month at the
    first business day. |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`BMonthBegin`](api/pandas.tseries.offsets.BMonthBegin.html#pandas.tseries.offsets.BMonthBegin
    "pandas.tseries.offsets.BMonthBegin") | alias of [`BusinessMonthBegin`](api/pandas.tseries.offsets.BusinessMonthBegin.html#pandas.tseries.offsets.BusinessMonthBegin
    "pandas._libs.tslibs.offsets.BusinessMonthBegin") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthBegin.freqstr`](api/pandas.tseries.offsets.BusinessMonthBegin.freqstr.html#pandas.tseries.offsets.BusinessMonthBegin.freqstr
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.kwds`](api/pandas.tseries.offsets.BusinessMonthBegin.kwds.html#pandas.tseries.offsets.BusinessMonthBegin.kwds
    "pandas.tseries.offsets.BusinessMonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.name`](api/pandas.tseries.offsets.BusinessMonthBegin.name.html#pandas.tseries.offsets.BusinessMonthBegin.name
    "pandas.tseries.offsets.BusinessMonthBegin.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.nanos`](api/pandas.tseries.offsets.BusinessMonthBegin.nanos.html#pandas.tseries.offsets.BusinessMonthBegin.nanos
    "pandas.tseries.offsets.BusinessMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.normalize`](api/pandas.tseries.offsets.BusinessMonthBegin.normalize.html#pandas.tseries.offsets.BusinessMonthBegin.normalize
    "pandas.tseries.offsets.BusinessMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.rule_code`](api/pandas.tseries.offsets.BusinessMonthBegin.rule_code.html#pandas.tseries.offsets.BusinessMonthBegin.rule_code
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.n`](api/pandas.tseries.offsets.BusinessMonthBegin.n.html#pandas.tseries.offsets.BusinessMonthBegin.n
    "pandas.tseries.offsets.BusinessMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthBegin.copy`](api/pandas.tseries.offsets.BusinessMonthBegin.copy.html#pandas.tseries.offsets.BusinessMonthBegin.copy
    "pandas.tseries.offsets.BusinessMonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_anchored`](api/pandas.tseries.offsets.BusinessMonthBegin.is_anchored.html#pandas.tseries.offsets.BusinessMonthBegin.is_anchored
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_on_offset`](api/pandas.tseries.offsets.BusinessMonthBegin.is_on_offset.html#pandas.tseries.offsets.BusinessMonthBegin.is_on_offset
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_month_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_month_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_month_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_month_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_month_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_month_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_year_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_year_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_year_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_year_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_year_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_year_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: CustomBusinessMonthEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthEnd`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.html#pandas.tseries.offsets.CustomBusinessMonthEnd
    "pandas.tseries.offsets.CustomBusinessMonthEnd") | DateOffset subclass representing
    custom business month(s). |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`CBMonthEnd`](api/pandas.tseries.offsets.CBMonthEnd.html#pandas.tseries.offsets.CBMonthEnd
    "pandas.tseries.offsets.CBMonthEnd") | alias of [`CustomBusinessMonthEnd`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.html#pandas.tseries.offsets.CustomBusinessMonthEnd
    "pandas._libs.tslibs.offsets.CustomBusinessMonthEnd") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthEnd.freqstr`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr.html#pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.kwds`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.kwds.html#pandas.tseries.offsets.CustomBusinessMonthEnd.kwds
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds") | Return a dict of extra
    parameters for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.m_offset`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset.html#pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.name`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.name.html#pandas.tseries.offsets.CustomBusinessMonthEnd.name
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.nanos`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.nanos.html#pandas.tseries.offsets.CustomBusinessMonthEnd.nanos
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.normalize`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.normalize.html#pandas.tseries.offsets.CustomBusinessMonthEnd.normalize
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.rule_code`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code.html#pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.n`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.n.html#pandas.tseries.offsets.CustomBusinessMonthEnd.n
    "pandas.tseries.offsets.CustomBusinessMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.weekmask`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask.html#pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask
    "pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.calendar`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.calendar.html#pandas.tseries.offsets.CustomBusinessMonthEnd.calendar
    "pandas.tseries.offsets.CustomBusinessMonthEnd.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.holidays`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.holidays.html#pandas.tseries.offsets.CustomBusinessMonthEnd.holidays
    "pandas.tseries.offsets.CustomBusinessMonthEnd.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthEnd.copy`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.copy.html#pandas.tseries.offsets.CustomBusinessMonthEnd.copy
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy")() | Return a copy of the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_anchored`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored")() | (DEPRECATED)
    Return boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_month_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_month_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start")(ts) | Return
    boolean whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_year_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_year_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: CustomBusinessMonthBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthBegin`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.html#pandas.tseries.offsets.CustomBusinessMonthBegin
    "pandas.tseries.offsets.CustomBusinessMonthBegin") | DateOffset subclass representing
    custom business month(s). |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`CBMonthBegin`](api/pandas.tseries.offsets.CBMonthBegin.html#pandas.tseries.offsets.CBMonthBegin
    "pandas.tseries.offsets.CBMonthBegin") | alias of [`CustomBusinessMonthBegin`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.html#pandas.tseries.offsets.CustomBusinessMonthBegin
    "pandas._libs.tslibs.offsets.CustomBusinessMonthBegin") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthBegin.freqstr`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr.html#pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.kwds`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.kwds.html#pandas.tseries.offsets.CustomBusinessMonthBegin.kwds
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds") | Return a dict of extra
    parameters for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.m_offset`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset.html#pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.name`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.name.html#pandas.tseries.offsets.CustomBusinessMonthBegin.name
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.nanos`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.nanos.html#pandas.tseries.offsets.CustomBusinessMonthBegin.nanos
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.normalize`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.normalize.html#pandas.tseries.offsets.CustomBusinessMonthBegin.normalize
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.rule_code`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code.html#pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.n`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.n.html#pandas.tseries.offsets.CustomBusinessMonthBegin.n
    "pandas.tseries.offsets.CustomBusinessMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.weekmask`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask.html#pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask
    "pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.calendar`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.calendar.html#pandas.tseries.offsets.CustomBusinessMonthBegin.calendar
    "pandas.tseries.offsets.CustomBusinessMonthBegin.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.holidays`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.holidays.html#pandas.tseries.offsets.CustomBusinessMonthBegin.holidays
    "pandas.tseries.offsets.CustomBusinessMonthBegin.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthBegin.copy`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.copy.html#pandas.tseries.offsets.CustomBusinessMonthBegin.copy
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy")() | Return a copy of the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_anchored`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored")() | (DEPRECATED)
    Return boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_month_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start")(ts) | Return
    boolean whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_month_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start")(ts) | Return
    boolean whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end")(ts) | Return
    boolean whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_year_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start")(ts) | Return
    boolean whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_year_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: SemiMonthEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`SemiMonthEnd`](api/pandas.tseries.offsets.SemiMonthEnd.html#pandas.tseries.offsets.SemiMonthEnd
    "pandas.tseries.offsets.SemiMonthEnd") | Two DateOffset''s per month repeating
    on the last day of the month & day_of_month. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthEnd.freqstr`](api/pandas.tseries.offsets.SemiMonthEnd.freqstr.html#pandas.tseries.offsets.SemiMonthEnd.freqstr
    "pandas.tseries.offsets.SemiMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.kwds`](api/pandas.tseries.offsets.SemiMonthEnd.kwds.html#pandas.tseries.offsets.SemiMonthEnd.kwds
    "pandas.tseries.offsets.SemiMonthEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.name`](api/pandas.tseries.offsets.SemiMonthEnd.name.html#pandas.tseries.offsets.SemiMonthEnd.name
    "pandas.tseries.offsets.SemiMonthEnd.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.nanos`](api/pandas.tseries.offsets.SemiMonthEnd.nanos.html#pandas.tseries.offsets.SemiMonthEnd.nanos
    "pandas.tseries.offsets.SemiMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.normalize`](api/pandas.tseries.offsets.SemiMonthEnd.normalize.html#pandas.tseries.offsets.SemiMonthEnd.normalize
    "pandas.tseries.offsets.SemiMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.rule_code`](api/pandas.tseries.offsets.SemiMonthEnd.rule_code.html#pandas.tseries.offsets.SemiMonthEnd.rule_code
    "pandas.tseries.offsets.SemiMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.n`](api/pandas.tseries.offsets.SemiMonthEnd.n.html#pandas.tseries.offsets.SemiMonthEnd.n
    "pandas.tseries.offsets.SemiMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.day_of_month`](api/pandas.tseries.offsets.SemiMonthEnd.day_of_month.html#pandas.tseries.offsets.SemiMonthEnd.day_of_month
    "pandas.tseries.offsets.SemiMonthEnd.day_of_month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthEnd.copy`](api/pandas.tseries.offsets.SemiMonthEnd.copy.html#pandas.tseries.offsets.SemiMonthEnd.copy
    "pandas.tseries.offsets.SemiMonthEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_anchored`](api/pandas.tseries.offsets.SemiMonthEnd.is_anchored.html#pandas.tseries.offsets.SemiMonthEnd.is_anchored
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_on_offset`](api/pandas.tseries.offsets.SemiMonthEnd.is_on_offset.html#pandas.tseries.offsets.SemiMonthEnd.is_on_offset
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_month_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_month_start.html#pandas.tseries.offsets.SemiMonthEnd.is_month_start
    "pandas.tseries.offsets.SemiMonthEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_month_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_month_end.html#pandas.tseries.offsets.SemiMonthEnd.is_month_end
    "pandas.tseries.offsets.SemiMonthEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_quarter_start.html#pandas.tseries.offsets.SemiMonthEnd.is_quarter_start
    "pandas.tseries.offsets.SemiMonthEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_quarter_end.html#pandas.tseries.offsets.SemiMonthEnd.is_quarter_end
    "pandas.tseries.offsets.SemiMonthEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_year_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_year_start.html#pandas.tseries.offsets.SemiMonthEnd.is_year_start
    "pandas.tseries.offsets.SemiMonthEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_year_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_year_end.html#pandas.tseries.offsets.SemiMonthEnd.is_year_end
    "pandas.tseries.offsets.SemiMonthEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: SemiMonthBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`SemiMonthBegin`](api/pandas.tseries.offsets.SemiMonthBegin.html#pandas.tseries.offsets.SemiMonthBegin
    "pandas.tseries.offsets.SemiMonthBegin") | Two DateOffset''s per month repeating
    on the first day of the month & day_of_month. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthBegin.freqstr`](api/pandas.tseries.offsets.SemiMonthBegin.freqstr.html#pandas.tseries.offsets.SemiMonthBegin.freqstr
    "pandas.tseries.offsets.SemiMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.kwds`](api/pandas.tseries.offsets.SemiMonthBegin.kwds.html#pandas.tseries.offsets.SemiMonthBegin.kwds
    "pandas.tseries.offsets.SemiMonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.name`](api/pandas.tseries.offsets.SemiMonthBegin.name.html#pandas.tseries.offsets.SemiMonthBegin.name
    "pandas.tseries.offsets.SemiMonthBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.nanos`](api/pandas.tseries.offsets.SemiMonthBegin.nanos.html#pandas.tseries.offsets.SemiMonthBegin.nanos
    "pandas.tseries.offsets.SemiMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.normalize`](api/pandas.tseries.offsets.SemiMonthBegin.normalize.html#pandas.tseries.offsets.SemiMonthBegin.normalize
    "pandas.tseries.offsets.SemiMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.rule_code`](api/pandas.tseries.offsets.SemiMonthBegin.rule_code.html#pandas.tseries.offsets.SemiMonthBegin.rule_code
    "pandas.tseries.offsets.SemiMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.n`](api/pandas.tseries.offsets.SemiMonthBegin.n.html#pandas.tseries.offsets.SemiMonthBegin.n
    "pandas.tseries.offsets.SemiMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.day_of_month`](api/pandas.tseries.offsets.SemiMonthBegin.day_of_month.html#pandas.tseries.offsets.SemiMonthBegin.day_of_month
    "pandas.tseries.offsets.SemiMonthBegin.day_of_month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthBegin.copy`](api/pandas.tseries.offsets.SemiMonthBegin.copy.html#pandas.tseries.offsets.SemiMonthBegin.copy
    "pandas.tseries.offsets.SemiMonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_anchored`](api/pandas.tseries.offsets.SemiMonthBegin.is_anchored.html#pandas.tseries.offsets.SemiMonthBegin.is_anchored
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_on_offset`](api/pandas.tseries.offsets.SemiMonthBegin.is_on_offset.html#pandas.tseries.offsets.SemiMonthBegin.is_on_offset
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_month_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_month_start.html#pandas.tseries.offsets.SemiMonthBegin.is_month_start
    "pandas.tseries.offsets.SemiMonthBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_month_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_month_end.html#pandas.tseries.offsets.SemiMonthBegin.is_month_end
    "pandas.tseries.offsets.SemiMonthBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_quarter_start.html#pandas.tseries.offsets.SemiMonthBegin.is_quarter_start
    "pandas.tseries.offsets.SemiMonthBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_quarter_end.html#pandas.tseries.offsets.SemiMonthBegin.is_quarter_end
    "pandas.tseries.offsets.SemiMonthBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_year_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_year_start.html#pandas.tseries.offsets.SemiMonthBegin.is_year_start
    "pandas.tseries.offsets.SemiMonthBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_year_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_year_end.html#pandas.tseries.offsets.SemiMonthBegin.is_year_end
    "pandas.tseries.offsets.SemiMonthBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Week
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Week`](api/pandas.tseries.offsets.Week.html#pandas.tseries.offsets.Week
    "pandas.tseries.offsets.Week") | Weekly offset. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Week.freqstr`](api/pandas.tseries.offsets.Week.freqstr.html#pandas.tseries.offsets.Week.freqstr
    "pandas.tseries.offsets.Week.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.kwds`](api/pandas.tseries.offsets.Week.kwds.html#pandas.tseries.offsets.Week.kwds
    "pandas.tseries.offsets.Week.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.name`](api/pandas.tseries.offsets.Week.name.html#pandas.tseries.offsets.Week.name
    "pandas.tseries.offsets.Week.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.nanos`](api/pandas.tseries.offsets.Week.nanos.html#pandas.tseries.offsets.Week.nanos
    "pandas.tseries.offsets.Week.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.normalize`](api/pandas.tseries.offsets.Week.normalize.html#pandas.tseries.offsets.Week.normalize
    "pandas.tseries.offsets.Week.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.rule_code`](api/pandas.tseries.offsets.Week.rule_code.html#pandas.tseries.offsets.Week.rule_code
    "pandas.tseries.offsets.Week.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.n`](api/pandas.tseries.offsets.Week.n.html#pandas.tseries.offsets.Week.n
    "pandas.tseries.offsets.Week.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.weekday`](api/pandas.tseries.offsets.Week.weekday.html#pandas.tseries.offsets.Week.weekday
    "pandas.tseries.offsets.Week.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Week.copy`](api/pandas.tseries.offsets.Week.copy.html#pandas.tseries.offsets.Week.copy
    "pandas.tseries.offsets.Week.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_anchored`](api/pandas.tseries.offsets.Week.is_anchored.html#pandas.tseries.offsets.Week.is_anchored
    "pandas.tseries.offsets.Week.is_anchored")() | Return boolean whether the frequency
    is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_on_offset`](api/pandas.tseries.offsets.Week.is_on_offset.html#pandas.tseries.offsets.Week.is_on_offset
    "pandas.tseries.offsets.Week.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_month_start`](api/pandas.tseries.offsets.Week.is_month_start.html#pandas.tseries.offsets.Week.is_month_start
    "pandas.tseries.offsets.Week.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_month_end`](api/pandas.tseries.offsets.Week.is_month_end.html#pandas.tseries.offsets.Week.is_month_end
    "pandas.tseries.offsets.Week.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_quarter_start`](api/pandas.tseries.offsets.Week.is_quarter_start.html#pandas.tseries.offsets.Week.is_quarter_start
    "pandas.tseries.offsets.Week.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_quarter_end`](api/pandas.tseries.offsets.Week.is_quarter_end.html#pandas.tseries.offsets.Week.is_quarter_end
    "pandas.tseries.offsets.Week.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_year_start`](api/pandas.tseries.offsets.Week.is_year_start.html#pandas.tseries.offsets.Week.is_year_start
    "pandas.tseries.offsets.Week.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_year_end`](api/pandas.tseries.offsets.Week.is_year_end.html#pandas.tseries.offsets.Week.is_year_end
    "pandas.tseries.offsets.Week.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: WeekOfMonth
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`WeekOfMonth`](api/pandas.tseries.offsets.WeekOfMonth.html#pandas.tseries.offsets.WeekOfMonth
    "pandas.tseries.offsets.WeekOfMonth") | Describes monthly dates like "the Tuesday
    of the 2nd week of each month". |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`WeekOfMonth.freqstr`](api/pandas.tseries.offsets.WeekOfMonth.freqstr.html#pandas.tseries.offsets.WeekOfMonth.freqstr
    "pandas.tseries.offsets.WeekOfMonth.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.kwds`](api/pandas.tseries.offsets.WeekOfMonth.kwds.html#pandas.tseries.offsets.WeekOfMonth.kwds
    "pandas.tseries.offsets.WeekOfMonth.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.name`](api/pandas.tseries.offsets.WeekOfMonth.name.html#pandas.tseries.offsets.WeekOfMonth.name
    "pandas.tseries.offsets.WeekOfMonth.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.nanos`](api/pandas.tseries.offsets.WeekOfMonth.nanos.html#pandas.tseries.offsets.WeekOfMonth.nanos
    "pandas.tseries.offsets.WeekOfMonth.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.normalize`](api/pandas.tseries.offsets.WeekOfMonth.normalize.html#pandas.tseries.offsets.WeekOfMonth.normalize
    "pandas.tseries.offsets.WeekOfMonth.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.rule_code`](api/pandas.tseries.offsets.WeekOfMonth.rule_code.html#pandas.tseries.offsets.WeekOfMonth.rule_code
    "pandas.tseries.offsets.WeekOfMonth.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.n`](api/pandas.tseries.offsets.WeekOfMonth.n.html#pandas.tseries.offsets.WeekOfMonth.n
    "pandas.tseries.offsets.WeekOfMonth.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.week`](api/pandas.tseries.offsets.WeekOfMonth.week.html#pandas.tseries.offsets.WeekOfMonth.week
    "pandas.tseries.offsets.WeekOfMonth.week") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`WeekOfMonth.copy`](api/pandas.tseries.offsets.WeekOfMonth.copy.html#pandas.tseries.offsets.WeekOfMonth.copy
    "pandas.tseries.offsets.WeekOfMonth.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_anchored`](api/pandas.tseries.offsets.WeekOfMonth.is_anchored.html#pandas.tseries.offsets.WeekOfMonth.is_anchored
    "pandas.tseries.offsets.WeekOfMonth.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_on_offset`](api/pandas.tseries.offsets.WeekOfMonth.is_on_offset.html#pandas.tseries.offsets.WeekOfMonth.is_on_offset
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.weekday`](api/pandas.tseries.offsets.WeekOfMonth.weekday.html#pandas.tseries.offsets.WeekOfMonth.weekday
    "pandas.tseries.offsets.WeekOfMonth.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_month_start`](api/pandas.tseries.offsets.WeekOfMonth.is_month_start.html#pandas.tseries.offsets.WeekOfMonth.is_month_start
    "pandas.tseries.offsets.WeekOfMonth.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_month_end`](api/pandas.tseries.offsets.WeekOfMonth.is_month_end.html#pandas.tseries.offsets.WeekOfMonth.is_month_end
    "pandas.tseries.offsets.WeekOfMonth.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_quarter_start`](api/pandas.tseries.offsets.WeekOfMonth.is_quarter_start.html#pandas.tseries.offsets.WeekOfMonth.is_quarter_start
    "pandas.tseries.offsets.WeekOfMonth.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_quarter_end`](api/pandas.tseries.offsets.WeekOfMonth.is_quarter_end.html#pandas.tseries.offsets.WeekOfMonth.is_quarter_end
    "pandas.tseries.offsets.WeekOfMonth.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_year_start`](api/pandas.tseries.offsets.WeekOfMonth.is_year_start.html#pandas.tseries.offsets.WeekOfMonth.is_year_start
    "pandas.tseries.offsets.WeekOfMonth.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_year_end`](api/pandas.tseries.offsets.WeekOfMonth.is_year_end.html#pandas.tseries.offsets.WeekOfMonth.is_year_end
    "pandas.tseries.offsets.WeekOfMonth.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: LastWeekOfMonth
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`LastWeekOfMonth`](api/pandas.tseries.offsets.LastWeekOfMonth.html#pandas.tseries.offsets.LastWeekOfMonth
    "pandas.tseries.offsets.LastWeekOfMonth") | Describes monthly dates in last week
    of month. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`LastWeekOfMonth.freqstr`](api/pandas.tseries.offsets.LastWeekOfMonth.freqstr.html#pandas.tseries.offsets.LastWeekOfMonth.freqstr
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.kwds`](api/pandas.tseries.offsets.LastWeekOfMonth.kwds.html#pandas.tseries.offsets.LastWeekOfMonth.kwds
    "pandas.tseries.offsets.LastWeekOfMonth.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.name`](api/pandas.tseries.offsets.LastWeekOfMonth.name.html#pandas.tseries.offsets.LastWeekOfMonth.name
    "pandas.tseries.offsets.LastWeekOfMonth.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.nanos`](api/pandas.tseries.offsets.LastWeekOfMonth.nanos.html#pandas.tseries.offsets.LastWeekOfMonth.nanos
    "pandas.tseries.offsets.LastWeekOfMonth.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.normalize`](api/pandas.tseries.offsets.LastWeekOfMonth.normalize.html#pandas.tseries.offsets.LastWeekOfMonth.normalize
    "pandas.tseries.offsets.LastWeekOfMonth.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.rule_code`](api/pandas.tseries.offsets.LastWeekOfMonth.rule_code.html#pandas.tseries.offsets.LastWeekOfMonth.rule_code
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.n`](api/pandas.tseries.offsets.LastWeekOfMonth.n.html#pandas.tseries.offsets.LastWeekOfMonth.n
    "pandas.tseries.offsets.LastWeekOfMonth.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.weekday`](api/pandas.tseries.offsets.LastWeekOfMonth.weekday.html#pandas.tseries.offsets.LastWeekOfMonth.weekday
    "pandas.tseries.offsets.LastWeekOfMonth.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.week`](api/pandas.tseries.offsets.LastWeekOfMonth.week.html#pandas.tseries.offsets.LastWeekOfMonth.week
    "pandas.tseries.offsets.LastWeekOfMonth.week") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`LastWeekOfMonth.copy`](api/pandas.tseries.offsets.LastWeekOfMonth.copy.html#pandas.tseries.offsets.LastWeekOfMonth.copy
    "pandas.tseries.offsets.LastWeekOfMonth.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_anchored`](api/pandas.tseries.offsets.LastWeekOfMonth.is_anchored.html#pandas.tseries.offsets.LastWeekOfMonth.is_anchored
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_on_offset`](api/pandas.tseries.offsets.LastWeekOfMonth.is_on_offset.html#pandas.tseries.offsets.LastWeekOfMonth.is_on_offset
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_month_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_month_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_month_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_month_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_month_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_month_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_quarter_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_quarter_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_year_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_year_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_year_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_year_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_year_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_year_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BQuarterEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BQuarterEnd`](api/pandas.tseries.offsets.BQuarterEnd.html#pandas.tseries.offsets.BQuarterEnd
    "pandas.tseries.offsets.BQuarterEnd") | DateOffset increments between the last
    business day of each Quarter. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterEnd.freqstr`](api/pandas.tseries.offsets.BQuarterEnd.freqstr.html#pandas.tseries.offsets.BQuarterEnd.freqstr
    "pandas.tseries.offsets.BQuarterEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.kwds`](api/pandas.tseries.offsets.BQuarterEnd.kwds.html#pandas.tseries.offsets.BQuarterEnd.kwds
    "pandas.tseries.offsets.BQuarterEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.name`](api/pandas.tseries.offsets.BQuarterEnd.name.html#pandas.tseries.offsets.BQuarterEnd.name
    "pandas.tseries.offsets.BQuarterEnd.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.nanos`](api/pandas.tseries.offsets.BQuarterEnd.nanos.html#pandas.tseries.offsets.BQuarterEnd.nanos
    "pandas.tseries.offsets.BQuarterEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.normalize`](api/pandas.tseries.offsets.BQuarterEnd.normalize.html#pandas.tseries.offsets.BQuarterEnd.normalize
    "pandas.tseries.offsets.BQuarterEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.rule_code`](api/pandas.tseries.offsets.BQuarterEnd.rule_code.html#pandas.tseries.offsets.BQuarterEnd.rule_code
    "pandas.tseries.offsets.BQuarterEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.n`](api/pandas.tseries.offsets.BQuarterEnd.n.html#pandas.tseries.offsets.BQuarterEnd.n
    "pandas.tseries.offsets.BQuarterEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.startingMonth`](api/pandas.tseries.offsets.BQuarterEnd.startingMonth.html#pandas.tseries.offsets.BQuarterEnd.startingMonth
    "pandas.tseries.offsets.BQuarterEnd.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterEnd.copy`](api/pandas.tseries.offsets.BQuarterEnd.copy.html#pandas.tseries.offsets.BQuarterEnd.copy
    "pandas.tseries.offsets.BQuarterEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_anchored`](api/pandas.tseries.offsets.BQuarterEnd.is_anchored.html#pandas.tseries.offsets.BQuarterEnd.is_anchored
    "pandas.tseries.offsets.BQuarterEnd.is_anchored")() | Return boolean whether the
    frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_on_offset`](api/pandas.tseries.offsets.BQuarterEnd.is_on_offset.html#pandas.tseries.offsets.BQuarterEnd.is_on_offset
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_month_start`](api/pandas.tseries.offsets.BQuarterEnd.is_month_start.html#pandas.tseries.offsets.BQuarterEnd.is_month_start
    "pandas.tseries.offsets.BQuarterEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_month_end`](api/pandas.tseries.offsets.BQuarterEnd.is_month_end.html#pandas.tseries.offsets.BQuarterEnd.is_month_end
    "pandas.tseries.offsets.BQuarterEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_quarter_start`](api/pandas.tseries.offsets.BQuarterEnd.is_quarter_start.html#pandas.tseries.offsets.BQuarterEnd.is_quarter_start
    "pandas.tseries.offsets.BQuarterEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_quarter_end`](api/pandas.tseries.offsets.BQuarterEnd.is_quarter_end.html#pandas.tseries.offsets.BQuarterEnd.is_quarter_end
    "pandas.tseries.offsets.BQuarterEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_year_start`](api/pandas.tseries.offsets.BQuarterEnd.is_year_start.html#pandas.tseries.offsets.BQuarterEnd.is_year_start
    "pandas.tseries.offsets.BQuarterEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_year_end`](api/pandas.tseries.offsets.BQuarterEnd.is_year_end.html#pandas.tseries.offsets.BQuarterEnd.is_year_end
    "pandas.tseries.offsets.BQuarterEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BQuarterBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BQuarterBegin`](api/pandas.tseries.offsets.BQuarterBegin.html#pandas.tseries.offsets.BQuarterBegin
    "pandas.tseries.offsets.BQuarterBegin") | DateOffset increments between the first
    business day of each Quarter. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterBegin.freqstr`](api/pandas.tseries.offsets.BQuarterBegin.freqstr.html#pandas.tseries.offsets.BQuarterBegin.freqstr
    "pandas.tseries.offsets.BQuarterBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.kwds`](api/pandas.tseries.offsets.BQuarterBegin.kwds.html#pandas.tseries.offsets.BQuarterBegin.kwds
    "pandas.tseries.offsets.BQuarterBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.name`](api/pandas.tseries.offsets.BQuarterBegin.name.html#pandas.tseries.offsets.BQuarterBegin.name
    "pandas.tseries.offsets.BQuarterBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.nanos`](api/pandas.tseries.offsets.BQuarterBegin.nanos.html#pandas.tseries.offsets.BQuarterBegin.nanos
    "pandas.tseries.offsets.BQuarterBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.normalize`](api/pandas.tseries.offsets.BQuarterBegin.normalize.html#pandas.tseries.offsets.BQuarterBegin.normalize
    "pandas.tseries.offsets.BQuarterBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.rule_code`](api/pandas.tseries.offsets.BQuarterBegin.rule_code.html#pandas.tseries.offsets.BQuarterBegin.rule_code
    "pandas.tseries.offsets.BQuarterBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.n`](api/pandas.tseries.offsets.BQuarterBegin.n.html#pandas.tseries.offsets.BQuarterBegin.n
    "pandas.tseries.offsets.BQuarterBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.startingMonth`](api/pandas.tseries.offsets.BQuarterBegin.startingMonth.html#pandas.tseries.offsets.BQuarterBegin.startingMonth
    "pandas.tseries.offsets.BQuarterBegin.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterBegin.copy`](api/pandas.tseries.offsets.BQuarterBegin.copy.html#pandas.tseries.offsets.BQuarterBegin.copy
    "pandas.tseries.offsets.BQuarterBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_anchored`](api/pandas.tseries.offsets.BQuarterBegin.is_anchored.html#pandas.tseries.offsets.BQuarterBegin.is_anchored
    "pandas.tseries.offsets.BQuarterBegin.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_on_offset`](api/pandas.tseries.offsets.BQuarterBegin.is_on_offset.html#pandas.tseries.offsets.BQuarterBegin.is_on_offset
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_month_start`](api/pandas.tseries.offsets.BQuarterBegin.is_month_start.html#pandas.tseries.offsets.BQuarterBegin.is_month_start
    "pandas.tseries.offsets.BQuarterBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_month_end`](api/pandas.tseries.offsets.BQuarterBegin.is_month_end.html#pandas.tseries.offsets.BQuarterBegin.is_month_end
    "pandas.tseries.offsets.BQuarterBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_quarter_start`](api/pandas.tseries.offsets.BQuarterBegin.is_quarter_start.html#pandas.tseries.offsets.BQuarterBegin.is_quarter_start
    "pandas.tseries.offsets.BQuarterBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_quarter_end`](api/pandas.tseries.offsets.BQuarterBegin.is_quarter_end.html#pandas.tseries.offsets.BQuarterBegin.is_quarter_end
    "pandas.tseries.offsets.BQuarterBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_year_start`](api/pandas.tseries.offsets.BQuarterBegin.is_year_start.html#pandas.tseries.offsets.BQuarterBegin.is_year_start
    "pandas.tseries.offsets.BQuarterBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_year_end`](api/pandas.tseries.offsets.BQuarterBegin.is_year_end.html#pandas.tseries.offsets.BQuarterBegin.is_year_end
    "pandas.tseries.offsets.BQuarterBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: QuarterEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`QuarterEnd`](api/pandas.tseries.offsets.QuarterEnd.html#pandas.tseries.offsets.QuarterEnd
    "pandas.tseries.offsets.QuarterEnd") | DateOffset increments between Quarter end
    dates. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterEnd.freqstr`](api/pandas.tseries.offsets.QuarterEnd.freqstr.html#pandas.tseries.offsets.QuarterEnd.freqstr
    "pandas.tseries.offsets.QuarterEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.kwds`](api/pandas.tseries.offsets.QuarterEnd.kwds.html#pandas.tseries.offsets.QuarterEnd.kwds
    "pandas.tseries.offsets.QuarterEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.name`](api/pandas.tseries.offsets.QuarterEnd.name.html#pandas.tseries.offsets.QuarterEnd.name
    "pandas.tseries.offsets.QuarterEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.nanos`](api/pandas.tseries.offsets.QuarterEnd.nanos.html#pandas.tseries.offsets.QuarterEnd.nanos
    "pandas.tseries.offsets.QuarterEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.normalize`](api/pandas.tseries.offsets.QuarterEnd.normalize.html#pandas.tseries.offsets.QuarterEnd.normalize
    "pandas.tseries.offsets.QuarterEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.rule_code`](api/pandas.tseries.offsets.QuarterEnd.rule_code.html#pandas.tseries.offsets.QuarterEnd.rule_code
    "pandas.tseries.offsets.QuarterEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.n`](api/pandas.tseries.offsets.QuarterEnd.n.html#pandas.tseries.offsets.QuarterEnd.n
    "pandas.tseries.offsets.QuarterEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.startingMonth`](api/pandas.tseries.offsets.QuarterEnd.startingMonth.html#pandas.tseries.offsets.QuarterEnd.startingMonth
    "pandas.tseries.offsets.QuarterEnd.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterEnd.copy`](api/pandas.tseries.offsets.QuarterEnd.copy.html#pandas.tseries.offsets.QuarterEnd.copy
    "pandas.tseries.offsets.QuarterEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_anchored`](api/pandas.tseries.offsets.QuarterEnd.is_anchored.html#pandas.tseries.offsets.QuarterEnd.is_anchored
    "pandas.tseries.offsets.QuarterEnd.is_anchored")() | Return boolean whether the
    frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_on_offset`](api/pandas.tseries.offsets.QuarterEnd.is_on_offset.html#pandas.tseries.offsets.QuarterEnd.is_on_offset
    "pandas.tseries.offsets.QuarterEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_month_start`](api/pandas.tseries.offsets.QuarterEnd.is_month_start.html#pandas.tseries.offsets.QuarterEnd.is_month_start
    "pandas.tseries.offsets.QuarterEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_month_end`](api/pandas.tseries.offsets.QuarterEnd.is_month_end.html#pandas.tseries.offsets.QuarterEnd.is_month_end
    "pandas.tseries.offsets.QuarterEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_quarter_start`](api/pandas.tseries.offsets.QuarterEnd.is_quarter_start.html#pandas.tseries.offsets.QuarterEnd.is_quarter_start
    "pandas.tseries.offsets.QuarterEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_quarter_end`](api/pandas.tseries.offsets.QuarterEnd.is_quarter_end.html#pandas.tseries.offsets.QuarterEnd.is_quarter_end
    "pandas.tseries.offsets.QuarterEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_year_start`](api/pandas.tseries.offsets.QuarterEnd.is_year_start.html#pandas.tseries.offsets.QuarterEnd.is_year_start
    "pandas.tseries.offsets.QuarterEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_year_end`](api/pandas.tseries.offsets.QuarterEnd.is_year_end.html#pandas.tseries.offsets.QuarterEnd.is_year_end
    "pandas.tseries.offsets.QuarterEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: QuarterBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`QuarterBegin`](api/pandas.tseries.offsets.QuarterBegin.html#pandas.tseries.offsets.QuarterBegin
    "pandas.tseries.offsets.QuarterBegin") | DateOffset increments between Quarter
    start dates. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterBegin.freqstr`](api/pandas.tseries.offsets.QuarterBegin.freqstr.html#pandas.tseries.offsets.QuarterBegin.freqstr
    "pandas.tseries.offsets.QuarterBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.kwds`](api/pandas.tseries.offsets.QuarterBegin.kwds.html#pandas.tseries.offsets.QuarterBegin.kwds
    "pandas.tseries.offsets.QuarterBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.name`](api/pandas.tseries.offsets.QuarterBegin.name.html#pandas.tseries.offsets.QuarterBegin.name
    "pandas.tseries.offsets.QuarterBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.nanos`](api/pandas.tseries.offsets.QuarterBegin.nanos.html#pandas.tseries.offsets.QuarterBegin.nanos
    "pandas.tseries.offsets.QuarterBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.normalize`](api/pandas.tseries.offsets.QuarterBegin.normalize.html#pandas.tseries.offsets.QuarterBegin.normalize
    "pandas.tseries.offsets.QuarterBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.rule_code`](api/pandas.tseries.offsets.QuarterBegin.rule_code.html#pandas.tseries.offsets.QuarterBegin.rule_code
    "pandas.tseries.offsets.QuarterBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.n`](api/pandas.tseries.offsets.QuarterBegin.n.html#pandas.tseries.offsets.QuarterBegin.n
    "pandas.tseries.offsets.QuarterBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.startingMonth`](api/pandas.tseries.offsets.QuarterBegin.startingMonth.html#pandas.tseries.offsets.QuarterBegin.startingMonth
    "pandas.tseries.offsets.QuarterBegin.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterBegin.copy`](api/pandas.tseries.offsets.QuarterBegin.copy.html#pandas.tseries.offsets.QuarterBegin.copy
    "pandas.tseries.offsets.QuarterBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_anchored`](api/pandas.tseries.offsets.QuarterBegin.is_anchored.html#pandas.tseries.offsets.QuarterBegin.is_anchored
    "pandas.tseries.offsets.QuarterBegin.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_on_offset`](api/pandas.tseries.offsets.QuarterBegin.is_on_offset.html#pandas.tseries.offsets.QuarterBegin.is_on_offset
    "pandas.tseries.offsets.QuarterBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_month_start`](api/pandas.tseries.offsets.QuarterBegin.is_month_start.html#pandas.tseries.offsets.QuarterBegin.is_month_start
    "pandas.tseries.offsets.QuarterBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_month_end`](api/pandas.tseries.offsets.QuarterBegin.is_month_end.html#pandas.tseries.offsets.QuarterBegin.is_month_end
    "pandas.tseries.offsets.QuarterBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_quarter_start`](api/pandas.tseries.offsets.QuarterBegin.is_quarter_start.html#pandas.tseries.offsets.QuarterBegin.is_quarter_start
    "pandas.tseries.offsets.QuarterBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_quarter_end`](api/pandas.tseries.offsets.QuarterBegin.is_quarter_end.html#pandas.tseries.offsets.QuarterBegin.is_quarter_end
    "pandas.tseries.offsets.QuarterBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_year_start`](api/pandas.tseries.offsets.QuarterBegin.is_year_start.html#pandas.tseries.offsets.QuarterBegin.is_year_start
    "pandas.tseries.offsets.QuarterBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_year_end`](api/pandas.tseries.offsets.QuarterBegin.is_year_end.html#pandas.tseries.offsets.QuarterBegin.is_year_end
    "pandas.tseries.offsets.QuarterBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BYearEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BYearEnd`](api/pandas.tseries.offsets.BYearEnd.html#pandas.tseries.offsets.BYearEnd
    "pandas.tseries.offsets.BYearEnd") | DateOffset increments between the last business
    day of the year. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearEnd.freqstr`](api/pandas.tseries.offsets.BYearEnd.freqstr.html#pandas.tseries.offsets.BYearEnd.freqstr
    "pandas.tseries.offsets.BYearEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.kwds`](api/pandas.tseries.offsets.BYearEnd.kwds.html#pandas.tseries.offsets.BYearEnd.kwds
    "pandas.tseries.offsets.BYearEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.name`](api/pandas.tseries.offsets.BYearEnd.name.html#pandas.tseries.offsets.BYearEnd.name
    "pandas.tseries.offsets.BYearEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.nanos`](api/pandas.tseries.offsets.BYearEnd.nanos.html#pandas.tseries.offsets.BYearEnd.nanos
    "pandas.tseries.offsets.BYearEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.normalize`](api/pandas.tseries.offsets.BYearEnd.normalize.html#pandas.tseries.offsets.BYearEnd.normalize
    "pandas.tseries.offsets.BYearEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.rule_code`](api/pandas.tseries.offsets.BYearEnd.rule_code.html#pandas.tseries.offsets.BYearEnd.rule_code
    "pandas.tseries.offsets.BYearEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.n`](api/pandas.tseries.offsets.BYearEnd.n.html#pandas.tseries.offsets.BYearEnd.n
    "pandas.tseries.offsets.BYearEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.month`](api/pandas.tseries.offsets.BYearEnd.month.html#pandas.tseries.offsets.BYearEnd.month
    "pandas.tseries.offsets.BYearEnd.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearEnd.copy`](api/pandas.tseries.offsets.BYearEnd.copy.html#pandas.tseries.offsets.BYearEnd.copy
    "pandas.tseries.offsets.BYearEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_anchored`](api/pandas.tseries.offsets.BYearEnd.is_anchored.html#pandas.tseries.offsets.BYearEnd.is_anchored
    "pandas.tseries.offsets.BYearEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_on_offset`](api/pandas.tseries.offsets.BYearEnd.is_on_offset.html#pandas.tseries.offsets.BYearEnd.is_on_offset
    "pandas.tseries.offsets.BYearEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_month_start`](api/pandas.tseries.offsets.BYearEnd.is_month_start.html#pandas.tseries.offsets.BYearEnd.is_month_start
    "pandas.tseries.offsets.BYearEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_month_end`](api/pandas.tseries.offsets.BYearEnd.is_month_end.html#pandas.tseries.offsets.BYearEnd.is_month_end
    "pandas.tseries.offsets.BYearEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_quarter_start`](api/pandas.tseries.offsets.BYearEnd.is_quarter_start.html#pandas.tseries.offsets.BYearEnd.is_quarter_start
    "pandas.tseries.offsets.BYearEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_quarter_end`](api/pandas.tseries.offsets.BYearEnd.is_quarter_end.html#pandas.tseries.offsets.BYearEnd.is_quarter_end
    "pandas.tseries.offsets.BYearEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_year_start`](api/pandas.tseries.offsets.BYearEnd.is_year_start.html#pandas.tseries.offsets.BYearEnd.is_year_start
    "pandas.tseries.offsets.BYearEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_year_end`](api/pandas.tseries.offsets.BYearEnd.is_year_end.html#pandas.tseries.offsets.BYearEnd.is_year_end
    "pandas.tseries.offsets.BYearEnd.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BYearBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BYearBegin`](api/pandas.tseries.offsets.BYearBegin.html#pandas.tseries.offsets.BYearBegin
    "pandas.tseries.offsets.BYearBegin") | DateOffset increments between the first
    business day of the year. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearBegin.freqstr`](api/pandas.tseries.offsets.BYearBegin.freqstr.html#pandas.tseries.offsets.BYearBegin.freqstr
    "pandas.tseries.offsets.BYearBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.kwds`](api/pandas.tseries.offsets.BYearBegin.kwds.html#pandas.tseries.offsets.BYearBegin.kwds
    "pandas.tseries.offsets.BYearBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.name`](api/pandas.tseries.offsets.BYearBegin.name.html#pandas.tseries.offsets.BYearBegin.name
    "pandas.tseries.offsets.BYearBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.nanos`](api/pandas.tseries.offsets.BYearBegin.nanos.html#pandas.tseries.offsets.BYearBegin.nanos
    "pandas.tseries.offsets.BYearBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.normalize`](api/pandas.tseries.offsets.BYearBegin.normalize.html#pandas.tseries.offsets.BYearBegin.normalize
    "pandas.tseries.offsets.BYearBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.rule_code`](api/pandas.tseries.offsets.BYearBegin.rule_code.html#pandas.tseries.offsets.BYearBegin.rule_code
    "pandas.tseries.offsets.BYearBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.n`](api/pandas.tseries.offsets.BYearBegin.n.html#pandas.tseries.offsets.BYearBegin.n
    "pandas.tseries.offsets.BYearBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.month`](api/pandas.tseries.offsets.BYearBegin.month.html#pandas.tseries.offsets.BYearBegin.month
    "pandas.tseries.offsets.BYearBegin.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearBegin.copy`](api/pandas.tseries.offsets.BYearBegin.copy.html#pandas.tseries.offsets.BYearBegin.copy
    "pandas.tseries.offsets.BYearBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_anchored`](api/pandas.tseries.offsets.BYearBegin.is_anchored.html#pandas.tseries.offsets.BYearBegin.is_anchored
    "pandas.tseries.offsets.BYearBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_on_offset`](api/pandas.tseries.offsets.BYearBegin.is_on_offset.html#pandas.tseries.offsets.BYearBegin.is_on_offset
    "pandas.tseries.offsets.BYearBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_month_start`](api/pandas.tseries.offsets.BYearBegin.is_month_start.html#pandas.tseries.offsets.BYearBegin.is_month_start
    "pandas.tseries.offsets.BYearBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_month_end`](api/pandas.tseries.offsets.BYearBegin.is_month_end.html#pandas.tseries.offsets.BYearBegin.is_month_end
    "pandas.tseries.offsets.BYearBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_quarter_start`](api/pandas.tseries.offsets.BYearBegin.is_quarter_start.html#pandas.tseries.offsets.BYearBegin.is_quarter_start
    "pandas.tseries.offsets.BYearBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_quarter_end`](api/pandas.tseries.offsets.BYearBegin.is_quarter_end.html#pandas.tseries.offsets.BYearBegin.is_quarter_end
    "pandas.tseries.offsets.BYearBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_year_start`](api/pandas.tseries.offsets.BYearBegin.is_year_start.html#pandas.tseries.offsets.BYearBegin.is_year_start
    "pandas.tseries.offsets.BYearBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_year_end`](api/pandas.tseries.offsets.BYearBegin.is_year_end.html#pandas.tseries.offsets.BYearBegin.is_year_end
    "pandas.tseries.offsets.BYearBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: YearEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`YearEnd`](api/pandas.tseries.offsets.YearEnd.html#pandas.tseries.offsets.YearEnd
    "pandas.tseries.offsets.YearEnd") | DateOffset increments between calendar year
    end dates. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearEnd.freqstr`](api/pandas.tseries.offsets.YearEnd.freqstr.html#pandas.tseries.offsets.YearEnd.freqstr
    "pandas.tseries.offsets.YearEnd.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.kwds`](api/pandas.tseries.offsets.YearEnd.kwds.html#pandas.tseries.offsets.YearEnd.kwds
    "pandas.tseries.offsets.YearEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.name`](api/pandas.tseries.offsets.YearEnd.name.html#pandas.tseries.offsets.YearEnd.name
    "pandas.tseries.offsets.YearEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.nanos`](api/pandas.tseries.offsets.YearEnd.nanos.html#pandas.tseries.offsets.YearEnd.nanos
    "pandas.tseries.offsets.YearEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.normalize`](api/pandas.tseries.offsets.YearEnd.normalize.html#pandas.tseries.offsets.YearEnd.normalize
    "pandas.tseries.offsets.YearEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.rule_code`](api/pandas.tseries.offsets.YearEnd.rule_code.html#pandas.tseries.offsets.YearEnd.rule_code
    "pandas.tseries.offsets.YearEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.n`](api/pandas.tseries.offsets.YearEnd.n.html#pandas.tseries.offsets.YearEnd.n
    "pandas.tseries.offsets.YearEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.month`](api/pandas.tseries.offsets.YearEnd.month.html#pandas.tseries.offsets.YearEnd.month
    "pandas.tseries.offsets.YearEnd.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearEnd.copy`](api/pandas.tseries.offsets.YearEnd.copy.html#pandas.tseries.offsets.YearEnd.copy
    "pandas.tseries.offsets.YearEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_anchored`](api/pandas.tseries.offsets.YearEnd.is_anchored.html#pandas.tseries.offsets.YearEnd.is_anchored
    "pandas.tseries.offsets.YearEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_on_offset`](api/pandas.tseries.offsets.YearEnd.is_on_offset.html#pandas.tseries.offsets.YearEnd.is_on_offset
    "pandas.tseries.offsets.YearEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_month_start`](api/pandas.tseries.offsets.YearEnd.is_month_start.html#pandas.tseries.offsets.YearEnd.is_month_start
    "pandas.tseries.offsets.YearEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_month_end`](api/pandas.tseries.offsets.YearEnd.is_month_end.html#pandas.tseries.offsets.YearEnd.is_month_end
    "pandas.tseries.offsets.YearEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_quarter_start`](api/pandas.tseries.offsets.YearEnd.is_quarter_start.html#pandas.tseries.offsets.YearEnd.is_quarter_start
    "pandas.tseries.offsets.YearEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_quarter_end`](api/pandas.tseries.offsets.YearEnd.is_quarter_end.html#pandas.tseries.offsets.YearEnd.is_quarter_end
    "pandas.tseries.offsets.YearEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_year_start`](api/pandas.tseries.offsets.YearEnd.is_year_start.html#pandas.tseries.offsets.YearEnd.is_year_start
    "pandas.tseries.offsets.YearEnd.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_year_end`](api/pandas.tseries.offsets.YearEnd.is_year_end.html#pandas.tseries.offsets.YearEnd.is_year_end
    "pandas.tseries.offsets.YearEnd.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: YearBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`YearBegin`](api/pandas.tseries.offsets.YearBegin.html#pandas.tseries.offsets.YearBegin
    "pandas.tseries.offsets.YearBegin") | DateOffset increments between calendar year
    begin dates. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearBegin.freqstr`](api/pandas.tseries.offsets.YearBegin.freqstr.html#pandas.tseries.offsets.YearBegin.freqstr
    "pandas.tseries.offsets.YearBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.kwds`](api/pandas.tseries.offsets.YearBegin.kwds.html#pandas.tseries.offsets.YearBegin.kwds
    "pandas.tseries.offsets.YearBegin.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.name`](api/pandas.tseries.offsets.YearBegin.name.html#pandas.tseries.offsets.YearBegin.name
    "pandas.tseries.offsets.YearBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.nanos`](api/pandas.tseries.offsets.YearBegin.nanos.html#pandas.tseries.offsets.YearBegin.nanos
    "pandas.tseries.offsets.YearBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.normalize`](api/pandas.tseries.offsets.YearBegin.normalize.html#pandas.tseries.offsets.YearBegin.normalize
    "pandas.tseries.offsets.YearBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.rule_code`](api/pandas.tseries.offsets.YearBegin.rule_code.html#pandas.tseries.offsets.YearBegin.rule_code
    "pandas.tseries.offsets.YearBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.n`](api/pandas.tseries.offsets.YearBegin.n.html#pandas.tseries.offsets.YearBegin.n
    "pandas.tseries.offsets.YearBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.month`](api/pandas.tseries.offsets.YearBegin.month.html#pandas.tseries.offsets.YearBegin.month
    "pandas.tseries.offsets.YearBegin.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearBegin.copy`](api/pandas.tseries.offsets.YearBegin.copy.html#pandas.tseries.offsets.YearBegin.copy
    "pandas.tseries.offsets.YearBegin.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_anchored`](api/pandas.tseries.offsets.YearBegin.is_anchored.html#pandas.tseries.offsets.YearBegin.is_anchored
    "pandas.tseries.offsets.YearBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_on_offset`](api/pandas.tseries.offsets.YearBegin.is_on_offset.html#pandas.tseries.offsets.YearBegin.is_on_offset
    "pandas.tseries.offsets.YearBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_month_start`](api/pandas.tseries.offsets.YearBegin.is_month_start.html#pandas.tseries.offsets.YearBegin.is_month_start
    "pandas.tseries.offsets.YearBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_month_end`](api/pandas.tseries.offsets.YearBegin.is_month_end.html#pandas.tseries.offsets.YearBegin.is_month_end
    "pandas.tseries.offsets.YearBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_quarter_start`](api/pandas.tseries.offsets.YearBegin.is_quarter_start.html#pandas.tseries.offsets.YearBegin.is_quarter_start
    "pandas.tseries.offsets.YearBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_quarter_end`](api/pandas.tseries.offsets.YearBegin.is_quarter_end.html#pandas.tseries.offsets.YearBegin.is_quarter_end
    "pandas.tseries.offsets.YearBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_year_start`](api/pandas.tseries.offsets.YearBegin.is_year_start.html#pandas.tseries.offsets.YearBegin.is_year_start
    "pandas.tseries.offsets.YearBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_year_end`](api/pandas.tseries.offsets.YearBegin.is_year_end.html#pandas.tseries.offsets.YearBegin.is_year_end
    "pandas.tseries.offsets.YearBegin.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: FY5253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`FY5253`](api/pandas.tseries.offsets.FY5253.html#pandas.tseries.offsets.FY5253
    "pandas.tseries.offsets.FY5253") | Describes 52-53 week fiscal year. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253.freqstr`](api/pandas.tseries.offsets.FY5253.freqstr.html#pandas.tseries.offsets.FY5253.freqstr
    "pandas.tseries.offsets.FY5253.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.kwds`](api/pandas.tseries.offsets.FY5253.kwds.html#pandas.tseries.offsets.FY5253.kwds
    "pandas.tseries.offsets.FY5253.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.name`](api/pandas.tseries.offsets.FY5253.name.html#pandas.tseries.offsets.FY5253.name
    "pandas.tseries.offsets.FY5253.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.nanos`](api/pandas.tseries.offsets.FY5253.nanos.html#pandas.tseries.offsets.FY5253.nanos
    "pandas.tseries.offsets.FY5253.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.normalize`](api/pandas.tseries.offsets.FY5253.normalize.html#pandas.tseries.offsets.FY5253.normalize
    "pandas.tseries.offsets.FY5253.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.rule_code`](api/pandas.tseries.offsets.FY5253.rule_code.html#pandas.tseries.offsets.FY5253.rule_code
    "pandas.tseries.offsets.FY5253.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.n`](api/pandas.tseries.offsets.FY5253.n.html#pandas.tseries.offsets.FY5253.n
    "pandas.tseries.offsets.FY5253.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.startingMonth`](api/pandas.tseries.offsets.FY5253.startingMonth.html#pandas.tseries.offsets.FY5253.startingMonth
    "pandas.tseries.offsets.FY5253.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.variation`](api/pandas.tseries.offsets.FY5253.variation.html#pandas.tseries.offsets.FY5253.variation
    "pandas.tseries.offsets.FY5253.variation") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.weekday`](api/pandas.tseries.offsets.FY5253.weekday.html#pandas.tseries.offsets.FY5253.weekday
    "pandas.tseries.offsets.FY5253.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253.copy`](api/pandas.tseries.offsets.FY5253.copy.html#pandas.tseries.offsets.FY5253.copy
    "pandas.tseries.offsets.FY5253.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.get_rule_code_suffix`](api/pandas.tseries.offsets.FY5253.get_rule_code_suffix.html#pandas.tseries.offsets.FY5253.get_rule_code_suffix
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.get_year_end`](api/pandas.tseries.offsets.FY5253.get_year_end.html#pandas.tseries.offsets.FY5253.get_year_end
    "pandas.tseries.offsets.FY5253.get_year_end")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_anchored`](api/pandas.tseries.offsets.FY5253.is_anchored.html#pandas.tseries.offsets.FY5253.is_anchored
    "pandas.tseries.offsets.FY5253.is_anchored")() | Return boolean whether the frequency
    is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_on_offset`](api/pandas.tseries.offsets.FY5253.is_on_offset.html#pandas.tseries.offsets.FY5253.is_on_offset
    "pandas.tseries.offsets.FY5253.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_month_start`](api/pandas.tseries.offsets.FY5253.is_month_start.html#pandas.tseries.offsets.FY5253.is_month_start
    "pandas.tseries.offsets.FY5253.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_month_end`](api/pandas.tseries.offsets.FY5253.is_month_end.html#pandas.tseries.offsets.FY5253.is_month_end
    "pandas.tseries.offsets.FY5253.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_quarter_start`](api/pandas.tseries.offsets.FY5253.is_quarter_start.html#pandas.tseries.offsets.FY5253.is_quarter_start
    "pandas.tseries.offsets.FY5253.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_quarter_end`](api/pandas.tseries.offsets.FY5253.is_quarter_end.html#pandas.tseries.offsets.FY5253.is_quarter_end
    "pandas.tseries.offsets.FY5253.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_year_start`](api/pandas.tseries.offsets.FY5253.is_year_start.html#pandas.tseries.offsets.FY5253.is_year_start
    "pandas.tseries.offsets.FY5253.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_year_end`](api/pandas.tseries.offsets.FY5253.is_year_end.html#pandas.tseries.offsets.FY5253.is_year_end
    "pandas.tseries.offsets.FY5253.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: FY5253Quarter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`FY5253Quarter`](api/pandas.tseries.offsets.FY5253Quarter.html#pandas.tseries.offsets.FY5253Quarter
    "pandas.tseries.offsets.FY5253Quarter") | DateOffset increments between business
    quarter dates for 52-53 week fiscal year. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253Quarter.freqstr`](api/pandas.tseries.offsets.FY5253Quarter.freqstr.html#pandas.tseries.offsets.FY5253Quarter.freqstr
    "pandas.tseries.offsets.FY5253Quarter.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.kwds`](api/pandas.tseries.offsets.FY5253Quarter.kwds.html#pandas.tseries.offsets.FY5253Quarter.kwds
    "pandas.tseries.offsets.FY5253Quarter.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.name`](api/pandas.tseries.offsets.FY5253Quarter.name.html#pandas.tseries.offsets.FY5253Quarter.name
    "pandas.tseries.offsets.FY5253Quarter.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.nanos`](api/pandas.tseries.offsets.FY5253Quarter.nanos.html#pandas.tseries.offsets.FY5253Quarter.nanos
    "pandas.tseries.offsets.FY5253Quarter.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.normalize`](api/pandas.tseries.offsets.FY5253Quarter.normalize.html#pandas.tseries.offsets.FY5253Quarter.normalize
    "pandas.tseries.offsets.FY5253Quarter.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.rule_code`](api/pandas.tseries.offsets.FY5253Quarter.rule_code.html#pandas.tseries.offsets.FY5253Quarter.rule_code
    "pandas.tseries.offsets.FY5253Quarter.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.n`](api/pandas.tseries.offsets.FY5253Quarter.n.html#pandas.tseries.offsets.FY5253Quarter.n
    "pandas.tseries.offsets.FY5253Quarter.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.qtr_with_extra_week`](api/pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week.html#pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week
    "pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.startingMonth`](api/pandas.tseries.offsets.FY5253Quarter.startingMonth.html#pandas.tseries.offsets.FY5253Quarter.startingMonth
    "pandas.tseries.offsets.FY5253Quarter.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.variation`](api/pandas.tseries.offsets.FY5253Quarter.variation.html#pandas.tseries.offsets.FY5253Quarter.variation
    "pandas.tseries.offsets.FY5253Quarter.variation") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.weekday`](api/pandas.tseries.offsets.FY5253Quarter.weekday.html#pandas.tseries.offsets.FY5253Quarter.weekday
    "pandas.tseries.offsets.FY5253Quarter.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253Quarter.copy`](api/pandas.tseries.offsets.FY5253Quarter.copy.html#pandas.tseries.offsets.FY5253Quarter.copy
    "pandas.tseries.offsets.FY5253Quarter.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.get_rule_code_suffix`](api/pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix.html#pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix
    "pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.get_weeks`](api/pandas.tseries.offsets.FY5253Quarter.get_weeks.html#pandas.tseries.offsets.FY5253Quarter.get_weeks
    "pandas.tseries.offsets.FY5253Quarter.get_weeks")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_anchored`](api/pandas.tseries.offsets.FY5253Quarter.is_anchored.html#pandas.tseries.offsets.FY5253Quarter.is_anchored
    "pandas.tseries.offsets.FY5253Quarter.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_on_offset`](api/pandas.tseries.offsets.FY5253Quarter.is_on_offset.html#pandas.tseries.offsets.FY5253Quarter.is_on_offset
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.year_has_extra_week`](api/pandas.tseries.offsets.FY5253Quarter.year_has_extra_week.html#pandas.tseries.offsets.FY5253Quarter.year_has_extra_week
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_month_start`](api/pandas.tseries.offsets.FY5253Quarter.is_month_start.html#pandas.tseries.offsets.FY5253Quarter.is_month_start
    "pandas.tseries.offsets.FY5253Quarter.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_month_end`](api/pandas.tseries.offsets.FY5253Quarter.is_month_end.html#pandas.tseries.offsets.FY5253Quarter.is_month_end
    "pandas.tseries.offsets.FY5253Quarter.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_quarter_start`](api/pandas.tseries.offsets.FY5253Quarter.is_quarter_start.html#pandas.tseries.offsets.FY5253Quarter.is_quarter_start
    "pandas.tseries.offsets.FY5253Quarter.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_quarter_end`](api/pandas.tseries.offsets.FY5253Quarter.is_quarter_end.html#pandas.tseries.offsets.FY5253Quarter.is_quarter_end
    "pandas.tseries.offsets.FY5253Quarter.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_year_start`](api/pandas.tseries.offsets.FY5253Quarter.is_year_start.html#pandas.tseries.offsets.FY5253Quarter.is_year_start
    "pandas.tseries.offsets.FY5253Quarter.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_year_end`](api/pandas.tseries.offsets.FY5253Quarter.is_year_end.html#pandas.tseries.offsets.FY5253Quarter.is_year_end
    "pandas.tseries.offsets.FY5253Quarter.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Easter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Easter`](api/pandas.tseries.offsets.Easter.html#pandas.tseries.offsets.Easter
    "pandas.tseries.offsets.Easter") | DateOffset for the Easter holiday using logic
    defined in dateutil. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Easter.freqstr`](api/pandas.tseries.offsets.Easter.freqstr.html#pandas.tseries.offsets.Easter.freqstr
    "pandas.tseries.offsets.Easter.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.kwds`](api/pandas.tseries.offsets.Easter.kwds.html#pandas.tseries.offsets.Easter.kwds
    "pandas.tseries.offsets.Easter.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.name`](api/pandas.tseries.offsets.Easter.name.html#pandas.tseries.offsets.Easter.name
    "pandas.tseries.offsets.Easter.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.nanos`](api/pandas.tseries.offsets.Easter.nanos.html#pandas.tseries.offsets.Easter.nanos
    "pandas.tseries.offsets.Easter.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.normalize`](api/pandas.tseries.offsets.Easter.normalize.html#pandas.tseries.offsets.Easter.normalize
    "pandas.tseries.offsets.Easter.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.rule_code`](api/pandas.tseries.offsets.Easter.rule_code.html#pandas.tseries.offsets.Easter.rule_code
    "pandas.tseries.offsets.Easter.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.n`](api/pandas.tseries.offsets.Easter.n.html#pandas.tseries.offsets.Easter.n
    "pandas.tseries.offsets.Easter.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Easter.copy`](api/pandas.tseries.offsets.Easter.copy.html#pandas.tseries.offsets.Easter.copy
    "pandas.tseries.offsets.Easter.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_anchored`](api/pandas.tseries.offsets.Easter.is_anchored.html#pandas.tseries.offsets.Easter.is_anchored
    "pandas.tseries.offsets.Easter.is_anchored")() | (DEPRECATED) Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_on_offset`](api/pandas.tseries.offsets.Easter.is_on_offset.html#pandas.tseries.offsets.Easter.is_on_offset
    "pandas.tseries.offsets.Easter.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_month_start`](api/pandas.tseries.offsets.Easter.is_month_start.html#pandas.tseries.offsets.Easter.is_month_start
    "pandas.tseries.offsets.Easter.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_month_end`](api/pandas.tseries.offsets.Easter.is_month_end.html#pandas.tseries.offsets.Easter.is_month_end
    "pandas.tseries.offsets.Easter.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_quarter_start`](api/pandas.tseries.offsets.Easter.is_quarter_start.html#pandas.tseries.offsets.Easter.is_quarter_start
    "pandas.tseries.offsets.Easter.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_quarter_end`](api/pandas.tseries.offsets.Easter.is_quarter_end.html#pandas.tseries.offsets.Easter.is_quarter_end
    "pandas.tseries.offsets.Easter.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_year_start`](api/pandas.tseries.offsets.Easter.is_year_start.html#pandas.tseries.offsets.Easter.is_year_start
    "pandas.tseries.offsets.Easter.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_year_end`](api/pandas.tseries.offsets.Easter.is_year_end.html#pandas.tseries.offsets.Easter.is_year_end
    "pandas.tseries.offsets.Easter.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Tick
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Tick`](api/pandas.tseries.offsets.Tick.html#pandas.tseries.offsets.Tick
    "pandas.tseries.offsets.Tick") |  |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Tick.delta`](api/pandas.tseries.offsets.Tick.delta.html#pandas.tseries.offsets.Tick.delta
    "pandas.tseries.offsets.Tick.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.freqstr`](api/pandas.tseries.offsets.Tick.freqstr.html#pandas.tseries.offsets.Tick.freqstr
    "pandas.tseries.offsets.Tick.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.kwds`](api/pandas.tseries.offsets.Tick.kwds.html#pandas.tseries.offsets.Tick.kwds
    "pandas.tseries.offsets.Tick.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.name`](api/pandas.tseries.offsets.Tick.name.html#pandas.tseries.offsets.Tick.name
    "pandas.tseries.offsets.Tick.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.nanos`](api/pandas.tseries.offsets.Tick.nanos.html#pandas.tseries.offsets.Tick.nanos
    "pandas.tseries.offsets.Tick.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.normalize`](api/pandas.tseries.offsets.Tick.normalize.html#pandas.tseries.offsets.Tick.normalize
    "pandas.tseries.offsets.Tick.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.rule_code`](api/pandas.tseries.offsets.Tick.rule_code.html#pandas.tseries.offsets.Tick.rule_code
    "pandas.tseries.offsets.Tick.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.n`](api/pandas.tseries.offsets.Tick.n.html#pandas.tseries.offsets.Tick.n
    "pandas.tseries.offsets.Tick.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Tick.copy`](api/pandas.tseries.offsets.Tick.copy.html#pandas.tseries.offsets.Tick.copy
    "pandas.tseries.offsets.Tick.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_anchored`](api/pandas.tseries.offsets.Tick.is_anchored.html#pandas.tseries.offsets.Tick.is_anchored
    "pandas.tseries.offsets.Tick.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_on_offset`](api/pandas.tseries.offsets.Tick.is_on_offset.html#pandas.tseries.offsets.Tick.is_on_offset
    "pandas.tseries.offsets.Tick.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_month_start`](api/pandas.tseries.offsets.Tick.is_month_start.html#pandas.tseries.offsets.Tick.is_month_start
    "pandas.tseries.offsets.Tick.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_month_end`](api/pandas.tseries.offsets.Tick.is_month_end.html#pandas.tseries.offsets.Tick.is_month_end
    "pandas.tseries.offsets.Tick.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_quarter_start`](api/pandas.tseries.offsets.Tick.is_quarter_start.html#pandas.tseries.offsets.Tick.is_quarter_start
    "pandas.tseries.offsets.Tick.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_quarter_end`](api/pandas.tseries.offsets.Tick.is_quarter_end.html#pandas.tseries.offsets.Tick.is_quarter_end
    "pandas.tseries.offsets.Tick.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_year_start`](api/pandas.tseries.offsets.Tick.is_year_start.html#pandas.tseries.offsets.Tick.is_year_start
    "pandas.tseries.offsets.Tick.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_year_end`](api/pandas.tseries.offsets.Tick.is_year_end.html#pandas.tseries.offsets.Tick.is_year_end
    "pandas.tseries.offsets.Tick.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Day
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Day`](api/pandas.tseries.offsets.Day.html#pandas.tseries.offsets.Day "pandas.tseries.offsets.Day")
    | Offset `n` days. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Day.delta`](api/pandas.tseries.offsets.Day.delta.html#pandas.tseries.offsets.Day.delta
    "pandas.tseries.offsets.Day.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.freqstr`](api/pandas.tseries.offsets.Day.freqstr.html#pandas.tseries.offsets.Day.freqstr
    "pandas.tseries.offsets.Day.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.kwds`](api/pandas.tseries.offsets.Day.kwds.html#pandas.tseries.offsets.Day.kwds
    "pandas.tseries.offsets.Day.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.name`](api/pandas.tseries.offsets.Day.name.html#pandas.tseries.offsets.Day.name
    "pandas.tseries.offsets.Day.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.nanos`](api/pandas.tseries.offsets.Day.nanos.html#pandas.tseries.offsets.Day.nanos
    "pandas.tseries.offsets.Day.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.normalize`](api/pandas.tseries.offsets.Day.normalize.html#pandas.tseries.offsets.Day.normalize
    "pandas.tseries.offsets.Day.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.rule_code`](api/pandas.tseries.offsets.Day.rule_code.html#pandas.tseries.offsets.Day.rule_code
    "pandas.tseries.offsets.Day.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.n`](api/pandas.tseries.offsets.Day.n.html#pandas.tseries.offsets.Day.n
    "pandas.tseries.offsets.Day.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Day.copy`](api/pandas.tseries.offsets.Day.copy.html#pandas.tseries.offsets.Day.copy
    "pandas.tseries.offsets.Day.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_anchored`](api/pandas.tseries.offsets.Day.is_anchored.html#pandas.tseries.offsets.Day.is_anchored
    "pandas.tseries.offsets.Day.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_on_offset`](api/pandas.tseries.offsets.Day.is_on_offset.html#pandas.tseries.offsets.Day.is_on_offset
    "pandas.tseries.offsets.Day.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_month_start`](api/pandas.tseries.offsets.Day.is_month_start.html#pandas.tseries.offsets.Day.is_month_start
    "pandas.tseries.offsets.Day.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_month_end`](api/pandas.tseries.offsets.Day.is_month_end.html#pandas.tseries.offsets.Day.is_month_end
    "pandas.tseries.offsets.Day.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_quarter_start`](api/pandas.tseries.offsets.Day.is_quarter_start.html#pandas.tseries.offsets.Day.is_quarter_start
    "pandas.tseries.offsets.Day.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_quarter_end`](api/pandas.tseries.offsets.Day.is_quarter_end.html#pandas.tseries.offsets.Day.is_quarter_end
    "pandas.tseries.offsets.Day.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_year_start`](api/pandas.tseries.offsets.Day.is_year_start.html#pandas.tseries.offsets.Day.is_year_start
    "pandas.tseries.offsets.Day.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_year_end`](api/pandas.tseries.offsets.Day.is_year_end.html#pandas.tseries.offsets.Day.is_year_end
    "pandas.tseries.offsets.Day.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Hour
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Hour`](api/pandas.tseries.offsets.Hour.html#pandas.tseries.offsets.Hour
    "pandas.tseries.offsets.Hour") | Offset `n` hours. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Hour.delta`](api/pandas.tseries.offsets.Hour.delta.html#pandas.tseries.offsets.Hour.delta
    "pandas.tseries.offsets.Hour.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.freqstr`](api/pandas.tseries.offsets.Hour.freqstr.html#pandas.tseries.offsets.Hour.freqstr
    "pandas.tseries.offsets.Hour.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.kwds`](api/pandas.tseries.offsets.Hour.kwds.html#pandas.tseries.offsets.Hour.kwds
    "pandas.tseries.offsets.Hour.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.name`](api/pandas.tseries.offsets.Hour.name.html#pandas.tseries.offsets.Hour.name
    "pandas.tseries.offsets.Hour.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.nanos`](api/pandas.tseries.offsets.Hour.nanos.html#pandas.tseries.offsets.Hour.nanos
    "pandas.tseries.offsets.Hour.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.normalize`](api/pandas.tseries.offsets.Hour.normalize.html#pandas.tseries.offsets.Hour.normalize
    "pandas.tseries.offsets.Hour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.rule_code`](api/pandas.tseries.offsets.Hour.rule_code.html#pandas.tseries.offsets.Hour.rule_code
    "pandas.tseries.offsets.Hour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.n`](api/pandas.tseries.offsets.Hour.n.html#pandas.tseries.offsets.Hour.n
    "pandas.tseries.offsets.Hour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Hour.copy`](api/pandas.tseries.offsets.Hour.copy.html#pandas.tseries.offsets.Hour.copy
    "pandas.tseries.offsets.Hour.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_anchored`](api/pandas.tseries.offsets.Hour.is_anchored.html#pandas.tseries.offsets.Hour.is_anchored
    "pandas.tseries.offsets.Hour.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_on_offset`](api/pandas.tseries.offsets.Hour.is_on_offset.html#pandas.tseries.offsets.Hour.is_on_offset
    "pandas.tseries.offsets.Hour.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_month_start`](api/pandas.tseries.offsets.Hour.is_month_start.html#pandas.tseries.offsets.Hour.is_month_start
    "pandas.tseries.offsets.Hour.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_month_end`](api/pandas.tseries.offsets.Hour.is_month_end.html#pandas.tseries.offsets.Hour.is_month_end
    "pandas.tseries.offsets.Hour.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_quarter_start`](api/pandas.tseries.offsets.Hour.is_quarter_start.html#pandas.tseries.offsets.Hour.is_quarter_start
    "pandas.tseries.offsets.Hour.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_quarter_end`](api/pandas.tseries.offsets.Hour.is_quarter_end.html#pandas.tseries.offsets.Hour.is_quarter_end
    "pandas.tseries.offsets.Hour.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_year_start`](api/pandas.tseries.offsets.Hour.is_year_start.html#pandas.tseries.offsets.Hour.is_year_start
    "pandas.tseries.offsets.Hour.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_year_end`](api/pandas.tseries.offsets.Hour.is_year_end.html#pandas.tseries.offsets.Hour.is_year_end
    "pandas.tseries.offsets.Hour.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Minute
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Minute`](api/pandas.tseries.offsets.Minute.html#pandas.tseries.offsets.Minute
    "pandas.tseries.offsets.Minute") | Offset `n` minutes. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Minute.delta`](api/pandas.tseries.offsets.Minute.delta.html#pandas.tseries.offsets.Minute.delta
    "pandas.tseries.offsets.Minute.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.freqstr`](api/pandas.tseries.offsets.Minute.freqstr.html#pandas.tseries.offsets.Minute.freqstr
    "pandas.tseries.offsets.Minute.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.kwds`](api/pandas.tseries.offsets.Minute.kwds.html#pandas.tseries.offsets.Minute.kwds
    "pandas.tseries.offsets.Minute.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.name`](api/pandas.tseries.offsets.Minute.name.html#pandas.tseries.offsets.Minute.name
    "pandas.tseries.offsets.Minute.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.nanos`](api/pandas.tseries.offsets.Minute.nanos.html#pandas.tseries.offsets.Minute.nanos
    "pandas.tseries.offsets.Minute.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.normalize`](api/pandas.tseries.offsets.Minute.normalize.html#pandas.tseries.offsets.Minute.normalize
    "pandas.tseries.offsets.Minute.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.rule_code`](api/pandas.tseries.offsets.Minute.rule_code.html#pandas.tseries.offsets.Minute.rule_code
    "pandas.tseries.offsets.Minute.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.n`](api/pandas.tseries.offsets.Minute.n.html#pandas.tseries.offsets.Minute.n
    "pandas.tseries.offsets.Minute.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Minute.copy`](api/pandas.tseries.offsets.Minute.copy.html#pandas.tseries.offsets.Minute.copy
    "pandas.tseries.offsets.Minute.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_anchored`](api/pandas.tseries.offsets.Minute.is_anchored.html#pandas.tseries.offsets.Minute.is_anchored
    "pandas.tseries.offsets.Minute.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_on_offset`](api/pandas.tseries.offsets.Minute.is_on_offset.html#pandas.tseries.offsets.Minute.is_on_offset
    "pandas.tseries.offsets.Minute.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_month_start`](api/pandas.tseries.offsets.Minute.is_month_start.html#pandas.tseries.offsets.Minute.is_month_start
    "pandas.tseries.offsets.Minute.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_month_end`](api/pandas.tseries.offsets.Minute.is_month_end.html#pandas.tseries.offsets.Minute.is_month_end
    "pandas.tseries.offsets.Minute.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_quarter_start`](api/pandas.tseries.offsets.Minute.is_quarter_start.html#pandas.tseries.offsets.Minute.is_quarter_start
    "pandas.tseries.offsets.Minute.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_quarter_end`](api/pandas.tseries.offsets.Minute.is_quarter_end.html#pandas.tseries.offsets.Minute.is_quarter_end
    "pandas.tseries.offsets.Minute.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_year_start`](api/pandas.tseries.offsets.Minute.is_year_start.html#pandas.tseries.offsets.Minute.is_year_start
    "pandas.tseries.offsets.Minute.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_year_end`](api/pandas.tseries.offsets.Minute.is_year_end.html#pandas.tseries.offsets.Minute.is_year_end
    "pandas.tseries.offsets.Minute.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Second
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Second`](api/pandas.tseries.offsets.Second.html#pandas.tseries.offsets.Second
    "pandas.tseries.offsets.Second") | Offset `n` seconds. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Second.delta`](api/pandas.tseries.offsets.Second.delta.html#pandas.tseries.offsets.Second.delta
    "pandas.tseries.offsets.Second.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.freqstr`](api/pandas.tseries.offsets.Second.freqstr.html#pandas.tseries.offsets.Second.freqstr
    "pandas.tseries.offsets.Second.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.kwds`](api/pandas.tseries.offsets.Second.kwds.html#pandas.tseries.offsets.Second.kwds
    "pandas.tseries.offsets.Second.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.name`](api/pandas.tseries.offsets.Second.name.html#pandas.tseries.offsets.Second.name
    "pandas.tseries.offsets.Second.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.nanos`](api/pandas.tseries.offsets.Second.nanos.html#pandas.tseries.offsets.Second.nanos
    "pandas.tseries.offsets.Second.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.normalize`](api/pandas.tseries.offsets.Second.normalize.html#pandas.tseries.offsets.Second.normalize
    "pandas.tseries.offsets.Second.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.rule_code`](api/pandas.tseries.offsets.Second.rule_code.html#pandas.tseries.offsets.Second.rule_code
    "pandas.tseries.offsets.Second.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.n`](api/pandas.tseries.offsets.Second.n.html#pandas.tseries.offsets.Second.n
    "pandas.tseries.offsets.Second.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Second.copy`](api/pandas.tseries.offsets.Second.copy.html#pandas.tseries.offsets.Second.copy
    "pandas.tseries.offsets.Second.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_anchored`](api/pandas.tseries.offsets.Second.is_anchored.html#pandas.tseries.offsets.Second.is_anchored
    "pandas.tseries.offsets.Second.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_on_offset`](api/pandas.tseries.offsets.Second.is_on_offset.html#pandas.tseries.offsets.Second.is_on_offset
    "pandas.tseries.offsets.Second.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_month_start`](api/pandas.tseries.offsets.Second.is_month_start.html#pandas.tseries.offsets.Second.is_month_start
    "pandas.tseries.offsets.Second.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_month_end`](api/pandas.tseries.offsets.Second.is_month_end.html#pandas.tseries.offsets.Second.is_month_end
    "pandas.tseries.offsets.Second.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_quarter_start`](api/pandas.tseries.offsets.Second.is_quarter_start.html#pandas.tseries.offsets.Second.is_quarter_start
    "pandas.tseries.offsets.Second.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_quarter_end`](api/pandas.tseries.offsets.Second.is_quarter_end.html#pandas.tseries.offsets.Second.is_quarter_end
    "pandas.tseries.offsets.Second.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_year_start`](api/pandas.tseries.offsets.Second.is_year_start.html#pandas.tseries.offsets.Second.is_year_start
    "pandas.tseries.offsets.Second.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_year_end`](api/pandas.tseries.offsets.Second.is_year_end.html#pandas.tseries.offsets.Second.is_year_end
    "pandas.tseries.offsets.Second.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Milli
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Milli`](api/pandas.tseries.offsets.Milli.html#pandas.tseries.offsets.Milli
    "pandas.tseries.offsets.Milli") | Offset `n` milliseconds. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Milli.delta`](api/pandas.tseries.offsets.Milli.delta.html#pandas.tseries.offsets.Milli.delta
    "pandas.tseries.offsets.Milli.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.freqstr`](api/pandas.tseries.offsets.Milli.freqstr.html#pandas.tseries.offsets.Milli.freqstr
    "pandas.tseries.offsets.Milli.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.kwds`](api/pandas.tseries.offsets.Milli.kwds.html#pandas.tseries.offsets.Milli.kwds
    "pandas.tseries.offsets.Milli.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.name`](api/pandas.tseries.offsets.Milli.name.html#pandas.tseries.offsets.Milli.name
    "pandas.tseries.offsets.Milli.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.nanos`](api/pandas.tseries.offsets.Milli.nanos.html#pandas.tseries.offsets.Milli.nanos
    "pandas.tseries.offsets.Milli.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.normalize`](api/pandas.tseries.offsets.Milli.normalize.html#pandas.tseries.offsets.Milli.normalize
    "pandas.tseries.offsets.Milli.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.rule_code`](api/pandas.tseries.offsets.Milli.rule_code.html#pandas.tseries.offsets.Milli.rule_code
    "pandas.tseries.offsets.Milli.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.n`](api/pandas.tseries.offsets.Milli.n.html#pandas.tseries.offsets.Milli.n
    "pandas.tseries.offsets.Milli.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Milli.copy`](api/pandas.tseries.offsets.Milli.copy.html#pandas.tseries.offsets.Milli.copy
    "pandas.tseries.offsets.Milli.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_anchored`](api/pandas.tseries.offsets.Milli.is_anchored.html#pandas.tseries.offsets.Milli.is_anchored
    "pandas.tseries.offsets.Milli.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_on_offset`](api/pandas.tseries.offsets.Milli.is_on_offset.html#pandas.tseries.offsets.Milli.is_on_offset
    "pandas.tseries.offsets.Milli.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_month_start`](api/pandas.tseries.offsets.Milli.is_month_start.html#pandas.tseries.offsets.Milli.is_month_start
    "pandas.tseries.offsets.Milli.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_month_end`](api/pandas.tseries.offsets.Milli.is_month_end.html#pandas.tseries.offsets.Milli.is_month_end
    "pandas.tseries.offsets.Milli.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_quarter_start`](api/pandas.tseries.offsets.Milli.is_quarter_start.html#pandas.tseries.offsets.Milli.is_quarter_start
    "pandas.tseries.offsets.Milli.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_quarter_end`](api/pandas.tseries.offsets.Milli.is_quarter_end.html#pandas.tseries.offsets.Milli.is_quarter_end
    "pandas.tseries.offsets.Milli.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_year_start`](api/pandas.tseries.offsets.Milli.is_year_start.html#pandas.tseries.offsets.Milli.is_year_start
    "pandas.tseries.offsets.Milli.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_year_end`](api/pandas.tseries.offsets.Milli.is_year_end.html#pandas.tseries.offsets.Milli.is_year_end
    "pandas.tseries.offsets.Milli.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Micro
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Micro`](api/pandas.tseries.offsets.Micro.html#pandas.tseries.offsets.Micro
    "pandas.tseries.offsets.Micro") | Offset `n` microseconds. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Micro.delta`](api/pandas.tseries.offsets.Micro.delta.html#pandas.tseries.offsets.Micro.delta
    "pandas.tseries.offsets.Micro.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.freqstr`](api/pandas.tseries.offsets.Micro.freqstr.html#pandas.tseries.offsets.Micro.freqstr
    "pandas.tseries.offsets.Micro.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.kwds`](api/pandas.tseries.offsets.Micro.kwds.html#pandas.tseries.offsets.Micro.kwds
    "pandas.tseries.offsets.Micro.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.name`](api/pandas.tseries.offsets.Micro.name.html#pandas.tseries.offsets.Micro.name
    "pandas.tseries.offsets.Micro.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.nanos`](api/pandas.tseries.offsets.Micro.nanos.html#pandas.tseries.offsets.Micro.nanos
    "pandas.tseries.offsets.Micro.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.normalize`](api/pandas.tseries.offsets.Micro.normalize.html#pandas.tseries.offsets.Micro.normalize
    "pandas.tseries.offsets.Micro.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.rule_code`](api/pandas.tseries.offsets.Micro.rule_code.html#pandas.tseries.offsets.Micro.rule_code
    "pandas.tseries.offsets.Micro.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.n`](api/pandas.tseries.offsets.Micro.n.html#pandas.tseries.offsets.Micro.n
    "pandas.tseries.offsets.Micro.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Micro.copy`](api/pandas.tseries.offsets.Micro.copy.html#pandas.tseries.offsets.Micro.copy
    "pandas.tseries.offsets.Micro.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_anchored`](api/pandas.tseries.offsets.Micro.is_anchored.html#pandas.tseries.offsets.Micro.is_anchored
    "pandas.tseries.offsets.Micro.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_on_offset`](api/pandas.tseries.offsets.Micro.is_on_offset.html#pandas.tseries.offsets.Micro.is_on_offset
    "pandas.tseries.offsets.Micro.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_month_start`](api/pandas.tseries.offsets.Micro.is_month_start.html#pandas.tseries.offsets.Micro.is_month_start
    "pandas.tseries.offsets.Micro.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_month_end`](api/pandas.tseries.offsets.Micro.is_month_end.html#pandas.tseries.offsets.Micro.is_month_end
    "pandas.tseries.offsets.Micro.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_quarter_start`](api/pandas.tseries.offsets.Micro.is_quarter_start.html#pandas.tseries.offsets.Micro.is_quarter_start
    "pandas.tseries.offsets.Micro.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_quarter_end`](api/pandas.tseries.offsets.Micro.is_quarter_end.html#pandas.tseries.offsets.Micro.is_quarter_end
    "pandas.tseries.offsets.Micro.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_year_start`](api/pandas.tseries.offsets.Micro.is_year_start.html#pandas.tseries.offsets.Micro.is_year_start
    "pandas.tseries.offsets.Micro.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_year_end`](api/pandas.tseries.offsets.Micro.is_year_end.html#pandas.tseries.offsets.Micro.is_year_end
    "pandas.tseries.offsets.Micro.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Nano
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Nano`](api/pandas.tseries.offsets.Nano.html#pandas.tseries.offsets.Nano
    "pandas.tseries.offsets.Nano") | Offset `n` nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Nano.delta`](api/pandas.tseries.offsets.Nano.delta.html#pandas.tseries.offsets.Nano.delta
    "pandas.tseries.offsets.Nano.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.freqstr`](api/pandas.tseries.offsets.Nano.freqstr.html#pandas.tseries.offsets.Nano.freqstr
    "pandas.tseries.offsets.Nano.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.kwds`](api/pandas.tseries.offsets.Nano.kwds.html#pandas.tseries.offsets.Nano.kwds
    "pandas.tseries.offsets.Nano.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.name`](api/pandas.tseries.offsets.Nano.name.html#pandas.tseries.offsets.Nano.name
    "pandas.tseries.offsets.Nano.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.nanos`](api/pandas.tseries.offsets.Nano.nanos.html#pandas.tseries.offsets.Nano.nanos
    "pandas.tseries.offsets.Nano.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.normalize`](api/pandas.tseries.offsets.Nano.normalize.html#pandas.tseries.offsets.Nano.normalize
    "pandas.tseries.offsets.Nano.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.rule_code`](api/pandas.tseries.offsets.Nano.rule_code.html#pandas.tseries.offsets.Nano.rule_code
    "pandas.tseries.offsets.Nano.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.n`](api/pandas.tseries.offsets.Nano.n.html#pandas.tseries.offsets.Nano.n
    "pandas.tseries.offsets.Nano.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Nano.copy`](api/pandas.tseries.offsets.Nano.copy.html#pandas.tseries.offsets.Nano.copy
    "pandas.tseries.offsets.Nano.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_anchored`](api/pandas.tseries.offsets.Nano.is_anchored.html#pandas.tseries.offsets.Nano.is_anchored
    "pandas.tseries.offsets.Nano.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_on_offset`](api/pandas.tseries.offsets.Nano.is_on_offset.html#pandas.tseries.offsets.Nano.is_on_offset
    "pandas.tseries.offsets.Nano.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_month_start`](api/pandas.tseries.offsets.Nano.is_month_start.html#pandas.tseries.offsets.Nano.is_month_start
    "pandas.tseries.offsets.Nano.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_month_end`](api/pandas.tseries.offsets.Nano.is_month_end.html#pandas.tseries.offsets.Nano.is_month_end
    "pandas.tseries.offsets.Nano.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_quarter_start`](api/pandas.tseries.offsets.Nano.is_quarter_start.html#pandas.tseries.offsets.Nano.is_quarter_start
    "pandas.tseries.offsets.Nano.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_quarter_end`](api/pandas.tseries.offsets.Nano.is_quarter_end.html#pandas.tseries.offsets.Nano.is_quarter_end
    "pandas.tseries.offsets.Nano.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_year_start`](api/pandas.tseries.offsets.Nano.is_year_start.html#pandas.tseries.offsets.Nano.is_year_start
    "pandas.tseries.offsets.Nano.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_year_end`](api/pandas.tseries.offsets.Nano.is_year_end.html#pandas.tseries.offsets.Nano.is_year_end
    "pandas.tseries.offsets.Nano.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: DateOffset
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`DateOffset`](api/pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset") | Standard kind of date increment used for
    a date range. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`DateOffset.freqstr`](api/pandas.tseries.offsets.DateOffset.freqstr.html#pandas.tseries.offsets.DateOffset.freqstr
    "pandas.tseries.offsets.DateOffset.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.kwds`](api/pandas.tseries.offsets.DateOffset.kwds.html#pandas.tseries.offsets.DateOffset.kwds
    "pandas.tseries.offsets.DateOffset.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.name`](api/pandas.tseries.offsets.DateOffset.name.html#pandas.tseries.offsets.DateOffset.name
    "pandas.tseries.offsets.DateOffset.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.nanos`](api/pandas.tseries.offsets.DateOffset.nanos.html#pandas.tseries.offsets.DateOffset.nanos
    "pandas.tseries.offsets.DateOffset.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.normalize`](api/pandas.tseries.offsets.DateOffset.normalize.html#pandas.tseries.offsets.DateOffset.normalize
    "pandas.tseries.offsets.DateOffset.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.rule_code`](api/pandas.tseries.offsets.DateOffset.rule_code.html#pandas.tseries.offsets.DateOffset.rule_code
    "pandas.tseries.offsets.DateOffset.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.n`](api/pandas.tseries.offsets.DateOffset.n.html#pandas.tseries.offsets.DateOffset.n
    "pandas.tseries.offsets.DateOffset.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_start`](api/pandas.tseries.offsets.DateOffset.is_month_start.html#pandas.tseries.offsets.DateOffset.is_month_start
    "pandas.tseries.offsets.DateOffset.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_end`](api/pandas.tseries.offsets.DateOffset.is_month_end.html#pandas.tseries.offsets.DateOffset.is_month_end
    "pandas.tseries.offsets.DateOffset.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`DateOffset.copy`](api/pandas.tseries.offsets.DateOffset.copy.html#pandas.tseries.offsets.DateOffset.copy
    "pandas.tseries.offsets.DateOffset.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_anchored`](api/pandas.tseries.offsets.DateOffset.is_anchored.html#pandas.tseries.offsets.DateOffset.is_anchored
    "pandas.tseries.offsets.DateOffset.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_on_offset`](api/pandas.tseries.offsets.DateOffset.is_on_offset.html#pandas.tseries.offsets.DateOffset.is_on_offset
    "pandas.tseries.offsets.DateOffset.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_start`](api/pandas.tseries.offsets.DateOffset.is_month_start.html#pandas.tseries.offsets.DateOffset.is_month_start
    "pandas.tseries.offsets.DateOffset.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_end`](api/pandas.tseries.offsets.DateOffset.is_month_end.html#pandas.tseries.offsets.DateOffset.is_month_end
    "pandas.tseries.offsets.DateOffset.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_quarter_start`](api/pandas.tseries.offsets.DateOffset.is_quarter_start.html#pandas.tseries.offsets.DateOffset.is_quarter_start
    "pandas.tseries.offsets.DateOffset.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_quarter_end`](api/pandas.tseries.offsets.DateOffset.is_quarter_end.html#pandas.tseries.offsets.DateOffset.is_quarter_end
    "pandas.tseries.offsets.DateOffset.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_year_start`](api/pandas.tseries.offsets.DateOffset.is_year_start.html#pandas.tseries.offsets.DateOffset.is_year_start
    "pandas.tseries.offsets.DateOffset.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_year_end`](api/pandas.tseries.offsets.DateOffset.is_year_end.html#pandas.tseries.offsets.DateOffset.is_year_end
    "pandas.tseries.offsets.DateOffset.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`DateOffset.freqstr`](api/pandas.tseries.offsets.DateOffset.freqstr.html#pandas.tseries.offsets.DateOffset.freqstr
    "pandas.tseries.offsets.DateOffset.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.kwds`](api/pandas.tseries.offsets.DateOffset.kwds.html#pandas.tseries.offsets.DateOffset.kwds
    "pandas.tseries.offsets.DateOffset.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.name`](api/pandas.tseries.offsets.DateOffset.name.html#pandas.tseries.offsets.DateOffset.name
    "pandas.tseries.offsets.DateOffset.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.nanos`](api/pandas.tseries.offsets.DateOffset.nanos.html#pandas.tseries.offsets.DateOffset.nanos
    "pandas.tseries.offsets.DateOffset.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.normalize`](api/pandas.tseries.offsets.DateOffset.normalize.html#pandas.tseries.offsets.DateOffset.normalize
    "pandas.tseries.offsets.DateOffset.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.rule_code`](api/pandas.tseries.offsets.DateOffset.rule_code.html#pandas.tseries.offsets.DateOffset.rule_code
    "pandas.tseries.offsets.DateOffset.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.n`](api/pandas.tseries.offsets.DateOffset.n.html#pandas.tseries.offsets.DateOffset.n
    "pandas.tseries.offsets.DateOffset.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_start`](api/pandas.tseries.offsets.DateOffset.is_month_start.html#pandas.tseries.offsets.DateOffset.is_month_start
    "pandas.tseries.offsets.DateOffset.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_end`](api/pandas.tseries.offsets.DateOffset.is_month_end.html#pandas.tseries.offsets.DateOffset.is_month_end
    "pandas.tseries.offsets.DateOffset.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`DateOffset.copy`](api/pandas.tseries.offsets.DateOffset.copy.html#pandas.tseries.offsets.DateOffset.copy
    "pandas.tseries.offsets.DateOffset.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_anchored`](api/pandas.tseries.offsets.DateOffset.is_anchored.html#pandas.tseries.offsets.DateOffset.is_anchored
    "pandas.tseries.offsets.DateOffset.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_on_offset`](api/pandas.tseries.offsets.DateOffset.is_on_offset.html#pandas.tseries.offsets.DateOffset.is_on_offset
    "pandas.tseries.offsets.DateOffset.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_start`](api/pandas.tseries.offsets.DateOffset.is_month_start.html#pandas.tseries.offsets.DateOffset.is_month_start
    "pandas.tseries.offsets.DateOffset.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_month_end`](api/pandas.tseries.offsets.DateOffset.is_month_end.html#pandas.tseries.offsets.DateOffset.is_month_end
    "pandas.tseries.offsets.DateOffset.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_quarter_start`](api/pandas.tseries.offsets.DateOffset.is_quarter_start.html#pandas.tseries.offsets.DateOffset.is_quarter_start
    "pandas.tseries.offsets.DateOffset.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_quarter_end`](api/pandas.tseries.offsets.DateOffset.is_quarter_end.html#pandas.tseries.offsets.DateOffset.is_quarter_end
    "pandas.tseries.offsets.DateOffset.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_year_start`](api/pandas.tseries.offsets.DateOffset.is_year_start.html#pandas.tseries.offsets.DateOffset.is_year_start
    "pandas.tseries.offsets.DateOffset.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`DateOffset.is_year_end`](api/pandas.tseries.offsets.DateOffset.is_year_end.html#pandas.tseries.offsets.DateOffset.is_year_end
    "pandas.tseries.offsets.DateOffset.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BusinessDay
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BusinessDay`](api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") | DateOffset subclass representing possibly
    n business days. |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`BDay`](api/pandas.tseries.offsets.BDay.html#pandas.tseries.offsets.BDay
    "pandas.tseries.offsets.BDay") | alias of [`BusinessDay`](api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas._libs.tslibs.offsets.BusinessDay") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessDay.freqstr`](api/pandas.tseries.offsets.BusinessDay.freqstr.html#pandas.tseries.offsets.BusinessDay.freqstr
    "pandas.tseries.offsets.BusinessDay.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.kwds`](api/pandas.tseries.offsets.BusinessDay.kwds.html#pandas.tseries.offsets.BusinessDay.kwds
    "pandas.tseries.offsets.BusinessDay.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.name`](api/pandas.tseries.offsets.BusinessDay.name.html#pandas.tseries.offsets.BusinessDay.name
    "pandas.tseries.offsets.BusinessDay.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.nanos`](api/pandas.tseries.offsets.BusinessDay.nanos.html#pandas.tseries.offsets.BusinessDay.nanos
    "pandas.tseries.offsets.BusinessDay.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.normalize`](api/pandas.tseries.offsets.BusinessDay.normalize.html#pandas.tseries.offsets.BusinessDay.normalize
    "pandas.tseries.offsets.BusinessDay.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.rule_code`](api/pandas.tseries.offsets.BusinessDay.rule_code.html#pandas.tseries.offsets.BusinessDay.rule_code
    "pandas.tseries.offsets.BusinessDay.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.n`](api/pandas.tseries.offsets.BusinessDay.n.html#pandas.tseries.offsets.BusinessDay.n
    "pandas.tseries.offsets.BusinessDay.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.weekmask`](api/pandas.tseries.offsets.BusinessDay.weekmask.html#pandas.tseries.offsets.BusinessDay.weekmask
    "pandas.tseries.offsets.BusinessDay.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.holidays`](api/pandas.tseries.offsets.BusinessDay.holidays.html#pandas.tseries.offsets.BusinessDay.holidays
    "pandas.tseries.offsets.BusinessDay.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.calendar`](api/pandas.tseries.offsets.BusinessDay.calendar.html#pandas.tseries.offsets.BusinessDay.calendar
    "pandas.tseries.offsets.BusinessDay.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessDay.copy`](api/pandas.tseries.offsets.BusinessDay.copy.html#pandas.tseries.offsets.BusinessDay.copy
    "pandas.tseries.offsets.BusinessDay.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_anchored`](api/pandas.tseries.offsets.BusinessDay.is_anchored.html#pandas.tseries.offsets.BusinessDay.is_anchored
    "pandas.tseries.offsets.BusinessDay.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_on_offset`](api/pandas.tseries.offsets.BusinessDay.is_on_offset.html#pandas.tseries.offsets.BusinessDay.is_on_offset
    "pandas.tseries.offsets.BusinessDay.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_month_start`](api/pandas.tseries.offsets.BusinessDay.is_month_start.html#pandas.tseries.offsets.BusinessDay.is_month_start
    "pandas.tseries.offsets.BusinessDay.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_month_end`](api/pandas.tseries.offsets.BusinessDay.is_month_end.html#pandas.tseries.offsets.BusinessDay.is_month_end
    "pandas.tseries.offsets.BusinessDay.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_quarter_start`](api/pandas.tseries.offsets.BusinessDay.is_quarter_start.html#pandas.tseries.offsets.BusinessDay.is_quarter_start
    "pandas.tseries.offsets.BusinessDay.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_quarter_end`](api/pandas.tseries.offsets.BusinessDay.is_quarter_end.html#pandas.tseries.offsets.BusinessDay.is_quarter_end
    "pandas.tseries.offsets.BusinessDay.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_year_start`](api/pandas.tseries.offsets.BusinessDay.is_year_start.html#pandas.tseries.offsets.BusinessDay.is_year_start
    "pandas.tseries.offsets.BusinessDay.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_year_end`](api/pandas.tseries.offsets.BusinessDay.is_year_end.html#pandas.tseries.offsets.BusinessDay.is_year_end
    "pandas.tseries.offsets.BusinessDay.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessDay.freqstr`](api/pandas.tseries.offsets.BusinessDay.freqstr.html#pandas.tseries.offsets.BusinessDay.freqstr
    "pandas.tseries.offsets.BusinessDay.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.kwds`](api/pandas.tseries.offsets.BusinessDay.kwds.html#pandas.tseries.offsets.BusinessDay.kwds
    "pandas.tseries.offsets.BusinessDay.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.name`](api/pandas.tseries.offsets.BusinessDay.name.html#pandas.tseries.offsets.BusinessDay.name
    "pandas.tseries.offsets.BusinessDay.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.nanos`](api/pandas.tseries.offsets.BusinessDay.nanos.html#pandas.tseries.offsets.BusinessDay.nanos
    "pandas.tseries.offsets.BusinessDay.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.normalize`](api/pandas.tseries.offsets.BusinessDay.normalize.html#pandas.tseries.offsets.BusinessDay.normalize
    "pandas.tseries.offsets.BusinessDay.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.rule_code`](api/pandas.tseries.offsets.BusinessDay.rule_code.html#pandas.tseries.offsets.BusinessDay.rule_code
    "pandas.tseries.offsets.BusinessDay.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.n`](api/pandas.tseries.offsets.BusinessDay.n.html#pandas.tseries.offsets.BusinessDay.n
    "pandas.tseries.offsets.BusinessDay.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.weekmask`](api/pandas.tseries.offsets.BusinessDay.weekmask.html#pandas.tseries.offsets.BusinessDay.weekmask
    "pandas.tseries.offsets.BusinessDay.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.holidays`](api/pandas.tseries.offsets.BusinessDay.holidays.html#pandas.tseries.offsets.BusinessDay.holidays
    "pandas.tseries.offsets.BusinessDay.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.calendar`](api/pandas.tseries.offsets.BusinessDay.calendar.html#pandas.tseries.offsets.BusinessDay.calendar
    "pandas.tseries.offsets.BusinessDay.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessDay.copy`](api/pandas.tseries.offsets.BusinessDay.copy.html#pandas.tseries.offsets.BusinessDay.copy
    "pandas.tseries.offsets.BusinessDay.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_anchored`](api/pandas.tseries.offsets.BusinessDay.is_anchored.html#pandas.tseries.offsets.BusinessDay.is_anchored
    "pandas.tseries.offsets.BusinessDay.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_on_offset`](api/pandas.tseries.offsets.BusinessDay.is_on_offset.html#pandas.tseries.offsets.BusinessDay.is_on_offset
    "pandas.tseries.offsets.BusinessDay.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_month_start`](api/pandas.tseries.offsets.BusinessDay.is_month_start.html#pandas.tseries.offsets.BusinessDay.is_month_start
    "pandas.tseries.offsets.BusinessDay.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_month_end`](api/pandas.tseries.offsets.BusinessDay.is_month_end.html#pandas.tseries.offsets.BusinessDay.is_month_end
    "pandas.tseries.offsets.BusinessDay.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_quarter_start`](api/pandas.tseries.offsets.BusinessDay.is_quarter_start.html#pandas.tseries.offsets.BusinessDay.is_quarter_start
    "pandas.tseries.offsets.BusinessDay.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_quarter_end`](api/pandas.tseries.offsets.BusinessDay.is_quarter_end.html#pandas.tseries.offsets.BusinessDay.is_quarter_end
    "pandas.tseries.offsets.BusinessDay.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_year_start`](api/pandas.tseries.offsets.BusinessDay.is_year_start.html#pandas.tseries.offsets.BusinessDay.is_year_start
    "pandas.tseries.offsets.BusinessDay.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessDay.is_year_end`](api/pandas.tseries.offsets.BusinessDay.is_year_end.html#pandas.tseries.offsets.BusinessDay.is_year_end
    "pandas.tseries.offsets.BusinessDay.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BusinessHour
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BusinessHour`](api/pandas.tseries.offsets.BusinessHour.html#pandas.tseries.offsets.BusinessHour
    "pandas.tseries.offsets.BusinessHour") | DateOffset subclass representing possibly
    n business hours. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessHour.freqstr`](api/pandas.tseries.offsets.BusinessHour.freqstr.html#pandas.tseries.offsets.BusinessHour.freqstr
    "pandas.tseries.offsets.BusinessHour.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.kwds`](api/pandas.tseries.offsets.BusinessHour.kwds.html#pandas.tseries.offsets.BusinessHour.kwds
    "pandas.tseries.offsets.BusinessHour.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.name`](api/pandas.tseries.offsets.BusinessHour.name.html#pandas.tseries.offsets.BusinessHour.name
    "pandas.tseries.offsets.BusinessHour.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.nanos`](api/pandas.tseries.offsets.BusinessHour.nanos.html#pandas.tseries.offsets.BusinessHour.nanos
    "pandas.tseries.offsets.BusinessHour.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.normalize`](api/pandas.tseries.offsets.BusinessHour.normalize.html#pandas.tseries.offsets.BusinessHour.normalize
    "pandas.tseries.offsets.BusinessHour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.rule_code`](api/pandas.tseries.offsets.BusinessHour.rule_code.html#pandas.tseries.offsets.BusinessHour.rule_code
    "pandas.tseries.offsets.BusinessHour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.n`](api/pandas.tseries.offsets.BusinessHour.n.html#pandas.tseries.offsets.BusinessHour.n
    "pandas.tseries.offsets.BusinessHour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.start`](api/pandas.tseries.offsets.BusinessHour.start.html#pandas.tseries.offsets.BusinessHour.start
    "pandas.tseries.offsets.BusinessHour.start") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.end`](api/pandas.tseries.offsets.BusinessHour.end.html#pandas.tseries.offsets.BusinessHour.end
    "pandas.tseries.offsets.BusinessHour.end") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.weekmask`](api/pandas.tseries.offsets.BusinessHour.weekmask.html#pandas.tseries.offsets.BusinessHour.weekmask
    "pandas.tseries.offsets.BusinessHour.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.holidays`](api/pandas.tseries.offsets.BusinessHour.holidays.html#pandas.tseries.offsets.BusinessHour.holidays
    "pandas.tseries.offsets.BusinessHour.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.calendar`](api/pandas.tseries.offsets.BusinessHour.calendar.html#pandas.tseries.offsets.BusinessHour.calendar
    "pandas.tseries.offsets.BusinessHour.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessHour.copy`](api/pandas.tseries.offsets.BusinessHour.copy.html#pandas.tseries.offsets.BusinessHour.copy
    "pandas.tseries.offsets.BusinessHour.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_anchored`](api/pandas.tseries.offsets.BusinessHour.is_anchored.html#pandas.tseries.offsets.BusinessHour.is_anchored
    "pandas.tseries.offsets.BusinessHour.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_on_offset`](api/pandas.tseries.offsets.BusinessHour.is_on_offset.html#pandas.tseries.offsets.BusinessHour.is_on_offset
    "pandas.tseries.offsets.BusinessHour.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_month_start`](api/pandas.tseries.offsets.BusinessHour.is_month_start.html#pandas.tseries.offsets.BusinessHour.is_month_start
    "pandas.tseries.offsets.BusinessHour.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_month_end`](api/pandas.tseries.offsets.BusinessHour.is_month_end.html#pandas.tseries.offsets.BusinessHour.is_month_end
    "pandas.tseries.offsets.BusinessHour.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_quarter_start`](api/pandas.tseries.offsets.BusinessHour.is_quarter_start.html#pandas.tseries.offsets.BusinessHour.is_quarter_start
    "pandas.tseries.offsets.BusinessHour.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_quarter_end`](api/pandas.tseries.offsets.BusinessHour.is_quarter_end.html#pandas.tseries.offsets.BusinessHour.is_quarter_end
    "pandas.tseries.offsets.BusinessHour.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_year_start`](api/pandas.tseries.offsets.BusinessHour.is_year_start.html#pandas.tseries.offsets.BusinessHour.is_year_start
    "pandas.tseries.offsets.BusinessHour.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_year_end`](api/pandas.tseries.offsets.BusinessHour.is_year_end.html#pandas.tseries.offsets.BusinessHour.is_year_end
    "pandas.tseries.offsets.BusinessHour.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessHour.freqstr`](api/pandas.tseries.offsets.BusinessHour.freqstr.html#pandas.tseries.offsets.BusinessHour.freqstr
    "pandas.tseries.offsets.BusinessHour.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.kwds`](api/pandas.tseries.offsets.BusinessHour.kwds.html#pandas.tseries.offsets.BusinessHour.kwds
    "pandas.tseries.offsets.BusinessHour.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.name`](api/pandas.tseries.offsets.BusinessHour.name.html#pandas.tseries.offsets.BusinessHour.name
    "pandas.tseries.offsets.BusinessHour.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.nanos`](api/pandas.tseries.offsets.BusinessHour.nanos.html#pandas.tseries.offsets.BusinessHour.nanos
    "pandas.tseries.offsets.BusinessHour.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.normalize`](api/pandas.tseries.offsets.BusinessHour.normalize.html#pandas.tseries.offsets.BusinessHour.normalize
    "pandas.tseries.offsets.BusinessHour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.rule_code`](api/pandas.tseries.offsets.BusinessHour.rule_code.html#pandas.tseries.offsets.BusinessHour.rule_code
    "pandas.tseries.offsets.BusinessHour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.n`](api/pandas.tseries.offsets.BusinessHour.n.html#pandas.tseries.offsets.BusinessHour.n
    "pandas.tseries.offsets.BusinessHour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.start`](api/pandas.tseries.offsets.BusinessHour.start.html#pandas.tseries.offsets.BusinessHour.start
    "pandas.tseries.offsets.BusinessHour.start") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.end`](api/pandas.tseries.offsets.BusinessHour.end.html#pandas.tseries.offsets.BusinessHour.end
    "pandas.tseries.offsets.BusinessHour.end") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.weekmask`](api/pandas.tseries.offsets.BusinessHour.weekmask.html#pandas.tseries.offsets.BusinessHour.weekmask
    "pandas.tseries.offsets.BusinessHour.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.holidays`](api/pandas.tseries.offsets.BusinessHour.holidays.html#pandas.tseries.offsets.BusinessHour.holidays
    "pandas.tseries.offsets.BusinessHour.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.calendar`](api/pandas.tseries.offsets.BusinessHour.calendar.html#pandas.tseries.offsets.BusinessHour.calendar
    "pandas.tseries.offsets.BusinessHour.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessHour.copy`](api/pandas.tseries.offsets.BusinessHour.copy.html#pandas.tseries.offsets.BusinessHour.copy
    "pandas.tseries.offsets.BusinessHour.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_anchored`](api/pandas.tseries.offsets.BusinessHour.is_anchored.html#pandas.tseries.offsets.BusinessHour.is_anchored
    "pandas.tseries.offsets.BusinessHour.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_on_offset`](api/pandas.tseries.offsets.BusinessHour.is_on_offset.html#pandas.tseries.offsets.BusinessHour.is_on_offset
    "pandas.tseries.offsets.BusinessHour.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_month_start`](api/pandas.tseries.offsets.BusinessHour.is_month_start.html#pandas.tseries.offsets.BusinessHour.is_month_start
    "pandas.tseries.offsets.BusinessHour.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_month_end`](api/pandas.tseries.offsets.BusinessHour.is_month_end.html#pandas.tseries.offsets.BusinessHour.is_month_end
    "pandas.tseries.offsets.BusinessHour.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_quarter_start`](api/pandas.tseries.offsets.BusinessHour.is_quarter_start.html#pandas.tseries.offsets.BusinessHour.is_quarter_start
    "pandas.tseries.offsets.BusinessHour.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_quarter_end`](api/pandas.tseries.offsets.BusinessHour.is_quarter_end.html#pandas.tseries.offsets.BusinessHour.is_quarter_end
    "pandas.tseries.offsets.BusinessHour.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_year_start`](api/pandas.tseries.offsets.BusinessHour.is_year_start.html#pandas.tseries.offsets.BusinessHour.is_year_start
    "pandas.tseries.offsets.BusinessHour.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessHour.is_year_end`](api/pandas.tseries.offsets.BusinessHour.is_year_end.html#pandas.tseries.offsets.BusinessHour.is_year_end
    "pandas.tseries.offsets.BusinessHour.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: CustomBusinessDay
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`CustomBusinessDay`](api/pandas.tseries.offsets.CustomBusinessDay.html#pandas.tseries.offsets.CustomBusinessDay
    "pandas.tseries.offsets.CustomBusinessDay") | DateOffset subclass representing
    possibly n custom business days. |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`CDay`](api/pandas.tseries.offsets.CDay.html#pandas.tseries.offsets.CDay
    "pandas.tseries.offsets.CDay") | alias of [`CustomBusinessDay`](api/pandas.tseries.offsets.CustomBusinessDay.html#pandas.tseries.offsets.CustomBusinessDay
    "pandas._libs.tslibs.offsets.CustomBusinessDay") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessDay.freqstr`](api/pandas.tseries.offsets.CustomBusinessDay.freqstr.html#pandas.tseries.offsets.CustomBusinessDay.freqstr
    "pandas.tseries.offsets.CustomBusinessDay.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.kwds`](api/pandas.tseries.offsets.CustomBusinessDay.kwds.html#pandas.tseries.offsets.CustomBusinessDay.kwds
    "pandas.tseries.offsets.CustomBusinessDay.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.name`](api/pandas.tseries.offsets.CustomBusinessDay.name.html#pandas.tseries.offsets.CustomBusinessDay.name
    "pandas.tseries.offsets.CustomBusinessDay.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.nanos`](api/pandas.tseries.offsets.CustomBusinessDay.nanos.html#pandas.tseries.offsets.CustomBusinessDay.nanos
    "pandas.tseries.offsets.CustomBusinessDay.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.normalize`](api/pandas.tseries.offsets.CustomBusinessDay.normalize.html#pandas.tseries.offsets.CustomBusinessDay.normalize
    "pandas.tseries.offsets.CustomBusinessDay.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.rule_code`](api/pandas.tseries.offsets.CustomBusinessDay.rule_code.html#pandas.tseries.offsets.CustomBusinessDay.rule_code
    "pandas.tseries.offsets.CustomBusinessDay.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.n`](api/pandas.tseries.offsets.CustomBusinessDay.n.html#pandas.tseries.offsets.CustomBusinessDay.n
    "pandas.tseries.offsets.CustomBusinessDay.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.weekmask`](api/pandas.tseries.offsets.CustomBusinessDay.weekmask.html#pandas.tseries.offsets.CustomBusinessDay.weekmask
    "pandas.tseries.offsets.CustomBusinessDay.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.calendar`](api/pandas.tseries.offsets.CustomBusinessDay.calendar.html#pandas.tseries.offsets.CustomBusinessDay.calendar
    "pandas.tseries.offsets.CustomBusinessDay.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.holidays`](api/pandas.tseries.offsets.CustomBusinessDay.holidays.html#pandas.tseries.offsets.CustomBusinessDay.holidays
    "pandas.tseries.offsets.CustomBusinessDay.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessDay.copy`](api/pandas.tseries.offsets.CustomBusinessDay.copy.html#pandas.tseries.offsets.CustomBusinessDay.copy
    "pandas.tseries.offsets.CustomBusinessDay.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_anchored`](api/pandas.tseries.offsets.CustomBusinessDay.is_anchored.html#pandas.tseries.offsets.CustomBusinessDay.is_anchored
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessDay.is_on_offset.html#pandas.tseries.offsets.CustomBusinessDay.is_on_offset
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_month_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_month_start.html#pandas.tseries.offsets.CustomBusinessDay.is_month_start
    "pandas.tseries.offsets.CustomBusinessDay.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_month_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_month_end.html#pandas.tseries.offsets.CustomBusinessDay.is_month_end
    "pandas.tseries.offsets.CustomBusinessDay.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessDay.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessDay.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessDay.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessDay.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_year_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_year_start.html#pandas.tseries.offsets.CustomBusinessDay.is_year_start
    "pandas.tseries.offsets.CustomBusinessDay.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_year_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_year_end.html#pandas.tseries.offsets.CustomBusinessDay.is_year_end
    "pandas.tseries.offsets.CustomBusinessDay.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessDay.freqstr`](api/pandas.tseries.offsets.CustomBusinessDay.freqstr.html#pandas.tseries.offsets.CustomBusinessDay.freqstr
    "pandas.tseries.offsets.CustomBusinessDay.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.kwds`](api/pandas.tseries.offsets.CustomBusinessDay.kwds.html#pandas.tseries.offsets.CustomBusinessDay.kwds
    "pandas.tseries.offsets.CustomBusinessDay.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.name`](api/pandas.tseries.offsets.CustomBusinessDay.name.html#pandas.tseries.offsets.CustomBusinessDay.name
    "pandas.tseries.offsets.CustomBusinessDay.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.nanos`](api/pandas.tseries.offsets.CustomBusinessDay.nanos.html#pandas.tseries.offsets.CustomBusinessDay.nanos
    "pandas.tseries.offsets.CustomBusinessDay.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.normalize`](api/pandas.tseries.offsets.CustomBusinessDay.normalize.html#pandas.tseries.offsets.CustomBusinessDay.normalize
    "pandas.tseries.offsets.CustomBusinessDay.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.rule_code`](api/pandas.tseries.offsets.CustomBusinessDay.rule_code.html#pandas.tseries.offsets.CustomBusinessDay.rule_code
    "pandas.tseries.offsets.CustomBusinessDay.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.n`](api/pandas.tseries.offsets.CustomBusinessDay.n.html#pandas.tseries.offsets.CustomBusinessDay.n
    "pandas.tseries.offsets.CustomBusinessDay.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.weekmask`](api/pandas.tseries.offsets.CustomBusinessDay.weekmask.html#pandas.tseries.offsets.CustomBusinessDay.weekmask
    "pandas.tseries.offsets.CustomBusinessDay.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.calendar`](api/pandas.tseries.offsets.CustomBusinessDay.calendar.html#pandas.tseries.offsets.CustomBusinessDay.calendar
    "pandas.tseries.offsets.CustomBusinessDay.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.holidays`](api/pandas.tseries.offsets.CustomBusinessDay.holidays.html#pandas.tseries.offsets.CustomBusinessDay.holidays
    "pandas.tseries.offsets.CustomBusinessDay.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessDay.copy`](api/pandas.tseries.offsets.CustomBusinessDay.copy.html#pandas.tseries.offsets.CustomBusinessDay.copy
    "pandas.tseries.offsets.CustomBusinessDay.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_anchored`](api/pandas.tseries.offsets.CustomBusinessDay.is_anchored.html#pandas.tseries.offsets.CustomBusinessDay.is_anchored
    "pandas.tseries.offsets.CustomBusinessDay.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessDay.is_on_offset.html#pandas.tseries.offsets.CustomBusinessDay.is_on_offset
    "pandas.tseries.offsets.CustomBusinessDay.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_month_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_month_start.html#pandas.tseries.offsets.CustomBusinessDay.is_month_start
    "pandas.tseries.offsets.CustomBusinessDay.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_month_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_month_end.html#pandas.tseries.offsets.CustomBusinessDay.is_month_end
    "pandas.tseries.offsets.CustomBusinessDay.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessDay.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessDay.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessDay.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessDay.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_year_start`](api/pandas.tseries.offsets.CustomBusinessDay.is_year_start.html#pandas.tseries.offsets.CustomBusinessDay.is_year_start
    "pandas.tseries.offsets.CustomBusinessDay.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessDay.is_year_end`](api/pandas.tseries.offsets.CustomBusinessDay.is_year_end.html#pandas.tseries.offsets.CustomBusinessDay.is_year_end
    "pandas.tseries.offsets.CustomBusinessDay.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: CustomBusinessHour
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`CustomBusinessHour`](api/pandas.tseries.offsets.CustomBusinessHour.html#pandas.tseries.offsets.CustomBusinessHour
    "pandas.tseries.offsets.CustomBusinessHour") | DateOffset subclass representing
    possibly n custom business days. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessHour.freqstr`](api/pandas.tseries.offsets.CustomBusinessHour.freqstr.html#pandas.tseries.offsets.CustomBusinessHour.freqstr
    "pandas.tseries.offsets.CustomBusinessHour.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.kwds`](api/pandas.tseries.offsets.CustomBusinessHour.kwds.html#pandas.tseries.offsets.CustomBusinessHour.kwds
    "pandas.tseries.offsets.CustomBusinessHour.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.name`](api/pandas.tseries.offsets.CustomBusinessHour.name.html#pandas.tseries.offsets.CustomBusinessHour.name
    "pandas.tseries.offsets.CustomBusinessHour.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.nanos`](api/pandas.tseries.offsets.CustomBusinessHour.nanos.html#pandas.tseries.offsets.CustomBusinessHour.nanos
    "pandas.tseries.offsets.CustomBusinessHour.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.normalize`](api/pandas.tseries.offsets.CustomBusinessHour.normalize.html#pandas.tseries.offsets.CustomBusinessHour.normalize
    "pandas.tseries.offsets.CustomBusinessHour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.rule_code`](api/pandas.tseries.offsets.CustomBusinessHour.rule_code.html#pandas.tseries.offsets.CustomBusinessHour.rule_code
    "pandas.tseries.offsets.CustomBusinessHour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.n`](api/pandas.tseries.offsets.CustomBusinessHour.n.html#pandas.tseries.offsets.CustomBusinessHour.n
    "pandas.tseries.offsets.CustomBusinessHour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.weekmask`](api/pandas.tseries.offsets.CustomBusinessHour.weekmask.html#pandas.tseries.offsets.CustomBusinessHour.weekmask
    "pandas.tseries.offsets.CustomBusinessHour.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.calendar`](api/pandas.tseries.offsets.CustomBusinessHour.calendar.html#pandas.tseries.offsets.CustomBusinessHour.calendar
    "pandas.tseries.offsets.CustomBusinessHour.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.holidays`](api/pandas.tseries.offsets.CustomBusinessHour.holidays.html#pandas.tseries.offsets.CustomBusinessHour.holidays
    "pandas.tseries.offsets.CustomBusinessHour.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.start`](api/pandas.tseries.offsets.CustomBusinessHour.start.html#pandas.tseries.offsets.CustomBusinessHour.start
    "pandas.tseries.offsets.CustomBusinessHour.start") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.end`](api/pandas.tseries.offsets.CustomBusinessHour.end.html#pandas.tseries.offsets.CustomBusinessHour.end
    "pandas.tseries.offsets.CustomBusinessHour.end") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessHour.copy`](api/pandas.tseries.offsets.CustomBusinessHour.copy.html#pandas.tseries.offsets.CustomBusinessHour.copy
    "pandas.tseries.offsets.CustomBusinessHour.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_anchored`](api/pandas.tseries.offsets.CustomBusinessHour.is_anchored.html#pandas.tseries.offsets.CustomBusinessHour.is_anchored
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessHour.is_on_offset.html#pandas.tseries.offsets.CustomBusinessHour.is_on_offset
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_month_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_month_start.html#pandas.tseries.offsets.CustomBusinessHour.is_month_start
    "pandas.tseries.offsets.CustomBusinessHour.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_month_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_month_end.html#pandas.tseries.offsets.CustomBusinessHour.is_month_end
    "pandas.tseries.offsets.CustomBusinessHour.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessHour.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessHour.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessHour.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessHour.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_year_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_year_start.html#pandas.tseries.offsets.CustomBusinessHour.is_year_start
    "pandas.tseries.offsets.CustomBusinessHour.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_year_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_year_end.html#pandas.tseries.offsets.CustomBusinessHour.is_year_end
    "pandas.tseries.offsets.CustomBusinessHour.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessHour.freqstr`](api/pandas.tseries.offsets.CustomBusinessHour.freqstr.html#pandas.tseries.offsets.CustomBusinessHour.freqstr
    "pandas.tseries.offsets.CustomBusinessHour.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.kwds`](api/pandas.tseries.offsets.CustomBusinessHour.kwds.html#pandas.tseries.offsets.CustomBusinessHour.kwds
    "pandas.tseries.offsets.CustomBusinessHour.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.name`](api/pandas.tseries.offsets.CustomBusinessHour.name.html#pandas.tseries.offsets.CustomBusinessHour.name
    "pandas.tseries.offsets.CustomBusinessHour.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.nanos`](api/pandas.tseries.offsets.CustomBusinessHour.nanos.html#pandas.tseries.offsets.CustomBusinessHour.nanos
    "pandas.tseries.offsets.CustomBusinessHour.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.normalize`](api/pandas.tseries.offsets.CustomBusinessHour.normalize.html#pandas.tseries.offsets.CustomBusinessHour.normalize
    "pandas.tseries.offsets.CustomBusinessHour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.rule_code`](api/pandas.tseries.offsets.CustomBusinessHour.rule_code.html#pandas.tseries.offsets.CustomBusinessHour.rule_code
    "pandas.tseries.offsets.CustomBusinessHour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.n`](api/pandas.tseries.offsets.CustomBusinessHour.n.html#pandas.tseries.offsets.CustomBusinessHour.n
    "pandas.tseries.offsets.CustomBusinessHour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.weekmask`](api/pandas.tseries.offsets.CustomBusinessHour.weekmask.html#pandas.tseries.offsets.CustomBusinessHour.weekmask
    "pandas.tseries.offsets.CustomBusinessHour.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.calendar`](api/pandas.tseries.offsets.CustomBusinessHour.calendar.html#pandas.tseries.offsets.CustomBusinessHour.calendar
    "pandas.tseries.offsets.CustomBusinessHour.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.holidays`](api/pandas.tseries.offsets.CustomBusinessHour.holidays.html#pandas.tseries.offsets.CustomBusinessHour.holidays
    "pandas.tseries.offsets.CustomBusinessHour.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.start`](api/pandas.tseries.offsets.CustomBusinessHour.start.html#pandas.tseries.offsets.CustomBusinessHour.start
    "pandas.tseries.offsets.CustomBusinessHour.start") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.end`](api/pandas.tseries.offsets.CustomBusinessHour.end.html#pandas.tseries.offsets.CustomBusinessHour.end
    "pandas.tseries.offsets.CustomBusinessHour.end") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessHour.copy`](api/pandas.tseries.offsets.CustomBusinessHour.copy.html#pandas.tseries.offsets.CustomBusinessHour.copy
    "pandas.tseries.offsets.CustomBusinessHour.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_anchored`](api/pandas.tseries.offsets.CustomBusinessHour.is_anchored.html#pandas.tseries.offsets.CustomBusinessHour.is_anchored
    "pandas.tseries.offsets.CustomBusinessHour.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessHour.is_on_offset.html#pandas.tseries.offsets.CustomBusinessHour.is_on_offset
    "pandas.tseries.offsets.CustomBusinessHour.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_month_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_month_start.html#pandas.tseries.offsets.CustomBusinessHour.is_month_start
    "pandas.tseries.offsets.CustomBusinessHour.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_month_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_month_end.html#pandas.tseries.offsets.CustomBusinessHour.is_month_end
    "pandas.tseries.offsets.CustomBusinessHour.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessHour.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessHour.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessHour.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessHour.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_year_start`](api/pandas.tseries.offsets.CustomBusinessHour.is_year_start.html#pandas.tseries.offsets.CustomBusinessHour.is_year_start
    "pandas.tseries.offsets.CustomBusinessHour.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessHour.is_year_end`](api/pandas.tseries.offsets.CustomBusinessHour.is_year_end.html#pandas.tseries.offsets.CustomBusinessHour.is_year_end
    "pandas.tseries.offsets.CustomBusinessHour.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: MonthEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`MonthEnd`](api/pandas.tseries.offsets.MonthEnd.html#pandas.tseries.offsets.MonthEnd
    "pandas.tseries.offsets.MonthEnd") | DateOffset of one month end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthEnd.freqstr`](api/pandas.tseries.offsets.MonthEnd.freqstr.html#pandas.tseries.offsets.MonthEnd.freqstr
    "pandas.tseries.offsets.MonthEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.kwds`](api/pandas.tseries.offsets.MonthEnd.kwds.html#pandas.tseries.offsets.MonthEnd.kwds
    "pandas.tseries.offsets.MonthEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.name`](api/pandas.tseries.offsets.MonthEnd.name.html#pandas.tseries.offsets.MonthEnd.name
    "pandas.tseries.offsets.MonthEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.nanos`](api/pandas.tseries.offsets.MonthEnd.nanos.html#pandas.tseries.offsets.MonthEnd.nanos
    "pandas.tseries.offsets.MonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.normalize`](api/pandas.tseries.offsets.MonthEnd.normalize.html#pandas.tseries.offsets.MonthEnd.normalize
    "pandas.tseries.offsets.MonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.rule_code`](api/pandas.tseries.offsets.MonthEnd.rule_code.html#pandas.tseries.offsets.MonthEnd.rule_code
    "pandas.tseries.offsets.MonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.n`](api/pandas.tseries.offsets.MonthEnd.n.html#pandas.tseries.offsets.MonthEnd.n
    "pandas.tseries.offsets.MonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthEnd.copy`](api/pandas.tseries.offsets.MonthEnd.copy.html#pandas.tseries.offsets.MonthEnd.copy
    "pandas.tseries.offsets.MonthEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_anchored`](api/pandas.tseries.offsets.MonthEnd.is_anchored.html#pandas.tseries.offsets.MonthEnd.is_anchored
    "pandas.tseries.offsets.MonthEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_on_offset`](api/pandas.tseries.offsets.MonthEnd.is_on_offset.html#pandas.tseries.offsets.MonthEnd.is_on_offset
    "pandas.tseries.offsets.MonthEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_month_start`](api/pandas.tseries.offsets.MonthEnd.is_month_start.html#pandas.tseries.offsets.MonthEnd.is_month_start
    "pandas.tseries.offsets.MonthEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_month_end`](api/pandas.tseries.offsets.MonthEnd.is_month_end.html#pandas.tseries.offsets.MonthEnd.is_month_end
    "pandas.tseries.offsets.MonthEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_quarter_start`](api/pandas.tseries.offsets.MonthEnd.is_quarter_start.html#pandas.tseries.offsets.MonthEnd.is_quarter_start
    "pandas.tseries.offsets.MonthEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_quarter_end`](api/pandas.tseries.offsets.MonthEnd.is_quarter_end.html#pandas.tseries.offsets.MonthEnd.is_quarter_end
    "pandas.tseries.offsets.MonthEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_year_start`](api/pandas.tseries.offsets.MonthEnd.is_year_start.html#pandas.tseries.offsets.MonthEnd.is_year_start
    "pandas.tseries.offsets.MonthEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_year_end`](api/pandas.tseries.offsets.MonthEnd.is_year_end.html#pandas.tseries.offsets.MonthEnd.is_year_end
    "pandas.tseries.offsets.MonthEnd.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthEnd.freqstr`](api/pandas.tseries.offsets.MonthEnd.freqstr.html#pandas.tseries.offsets.MonthEnd.freqstr
    "pandas.tseries.offsets.MonthEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.kwds`](api/pandas.tseries.offsets.MonthEnd.kwds.html#pandas.tseries.offsets.MonthEnd.kwds
    "pandas.tseries.offsets.MonthEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.name`](api/pandas.tseries.offsets.MonthEnd.name.html#pandas.tseries.offsets.MonthEnd.name
    "pandas.tseries.offsets.MonthEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.nanos`](api/pandas.tseries.offsets.MonthEnd.nanos.html#pandas.tseries.offsets.MonthEnd.nanos
    "pandas.tseries.offsets.MonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.normalize`](api/pandas.tseries.offsets.MonthEnd.normalize.html#pandas.tseries.offsets.MonthEnd.normalize
    "pandas.tseries.offsets.MonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.rule_code`](api/pandas.tseries.offsets.MonthEnd.rule_code.html#pandas.tseries.offsets.MonthEnd.rule_code
    "pandas.tseries.offsets.MonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.n`](api/pandas.tseries.offsets.MonthEnd.n.html#pandas.tseries.offsets.MonthEnd.n
    "pandas.tseries.offsets.MonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthEnd.copy`](api/pandas.tseries.offsets.MonthEnd.copy.html#pandas.tseries.offsets.MonthEnd.copy
    "pandas.tseries.offsets.MonthEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_anchored`](api/pandas.tseries.offsets.MonthEnd.is_anchored.html#pandas.tseries.offsets.MonthEnd.is_anchored
    "pandas.tseries.offsets.MonthEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_on_offset`](api/pandas.tseries.offsets.MonthEnd.is_on_offset.html#pandas.tseries.offsets.MonthEnd.is_on_offset
    "pandas.tseries.offsets.MonthEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_month_start`](api/pandas.tseries.offsets.MonthEnd.is_month_start.html#pandas.tseries.offsets.MonthEnd.is_month_start
    "pandas.tseries.offsets.MonthEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_month_end`](api/pandas.tseries.offsets.MonthEnd.is_month_end.html#pandas.tseries.offsets.MonthEnd.is_month_end
    "pandas.tseries.offsets.MonthEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_quarter_start`](api/pandas.tseries.offsets.MonthEnd.is_quarter_start.html#pandas.tseries.offsets.MonthEnd.is_quarter_start
    "pandas.tseries.offsets.MonthEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_quarter_end`](api/pandas.tseries.offsets.MonthEnd.is_quarter_end.html#pandas.tseries.offsets.MonthEnd.is_quarter_end
    "pandas.tseries.offsets.MonthEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_year_start`](api/pandas.tseries.offsets.MonthEnd.is_year_start.html#pandas.tseries.offsets.MonthEnd.is_year_start
    "pandas.tseries.offsets.MonthEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthEnd.is_year_end`](api/pandas.tseries.offsets.MonthEnd.is_year_end.html#pandas.tseries.offsets.MonthEnd.is_year_end
    "pandas.tseries.offsets.MonthEnd.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: MonthBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`MonthBegin`](api/pandas.tseries.offsets.MonthBegin.html#pandas.tseries.offsets.MonthBegin
    "pandas.tseries.offsets.MonthBegin") | DateOffset of one month at beginning. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthBegin.freqstr`](api/pandas.tseries.offsets.MonthBegin.freqstr.html#pandas.tseries.offsets.MonthBegin.freqstr
    "pandas.tseries.offsets.MonthBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.kwds`](api/pandas.tseries.offsets.MonthBegin.kwds.html#pandas.tseries.offsets.MonthBegin.kwds
    "pandas.tseries.offsets.MonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.name`](api/pandas.tseries.offsets.MonthBegin.name.html#pandas.tseries.offsets.MonthBegin.name
    "pandas.tseries.offsets.MonthBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.nanos`](api/pandas.tseries.offsets.MonthBegin.nanos.html#pandas.tseries.offsets.MonthBegin.nanos
    "pandas.tseries.offsets.MonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.normalize`](api/pandas.tseries.offsets.MonthBegin.normalize.html#pandas.tseries.offsets.MonthBegin.normalize
    "pandas.tseries.offsets.MonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.rule_code`](api/pandas.tseries.offsets.MonthBegin.rule_code.html#pandas.tseries.offsets.MonthBegin.rule_code
    "pandas.tseries.offsets.MonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.n`](api/pandas.tseries.offsets.MonthBegin.n.html#pandas.tseries.offsets.MonthBegin.n
    "pandas.tseries.offsets.MonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthBegin.copy`](api/pandas.tseries.offsets.MonthBegin.copy.html#pandas.tseries.offsets.MonthBegin.copy
    "pandas.tseries.offsets.MonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_anchored`](api/pandas.tseries.offsets.MonthBegin.is_anchored.html#pandas.tseries.offsets.MonthBegin.is_anchored
    "pandas.tseries.offsets.MonthBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_on_offset`](api/pandas.tseries.offsets.MonthBegin.is_on_offset.html#pandas.tseries.offsets.MonthBegin.is_on_offset
    "pandas.tseries.offsets.MonthBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_month_start`](api/pandas.tseries.offsets.MonthBegin.is_month_start.html#pandas.tseries.offsets.MonthBegin.is_month_start
    "pandas.tseries.offsets.MonthBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_month_end`](api/pandas.tseries.offsets.MonthBegin.is_month_end.html#pandas.tseries.offsets.MonthBegin.is_month_end
    "pandas.tseries.offsets.MonthBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_quarter_start`](api/pandas.tseries.offsets.MonthBegin.is_quarter_start.html#pandas.tseries.offsets.MonthBegin.is_quarter_start
    "pandas.tseries.offsets.MonthBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_quarter_end`](api/pandas.tseries.offsets.MonthBegin.is_quarter_end.html#pandas.tseries.offsets.MonthBegin.is_quarter_end
    "pandas.tseries.offsets.MonthBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_year_start`](api/pandas.tseries.offsets.MonthBegin.is_year_start.html#pandas.tseries.offsets.MonthBegin.is_year_start
    "pandas.tseries.offsets.MonthBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_year_end`](api/pandas.tseries.offsets.MonthBegin.is_year_end.html#pandas.tseries.offsets.MonthBegin.is_year_end
    "pandas.tseries.offsets.MonthBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthBegin.freqstr`](api/pandas.tseries.offsets.MonthBegin.freqstr.html#pandas.tseries.offsets.MonthBegin.freqstr
    "pandas.tseries.offsets.MonthBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.kwds`](api/pandas.tseries.offsets.MonthBegin.kwds.html#pandas.tseries.offsets.MonthBegin.kwds
    "pandas.tseries.offsets.MonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.name`](api/pandas.tseries.offsets.MonthBegin.name.html#pandas.tseries.offsets.MonthBegin.name
    "pandas.tseries.offsets.MonthBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.nanos`](api/pandas.tseries.offsets.MonthBegin.nanos.html#pandas.tseries.offsets.MonthBegin.nanos
    "pandas.tseries.offsets.MonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.normalize`](api/pandas.tseries.offsets.MonthBegin.normalize.html#pandas.tseries.offsets.MonthBegin.normalize
    "pandas.tseries.offsets.MonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.rule_code`](api/pandas.tseries.offsets.MonthBegin.rule_code.html#pandas.tseries.offsets.MonthBegin.rule_code
    "pandas.tseries.offsets.MonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.n`](api/pandas.tseries.offsets.MonthBegin.n.html#pandas.tseries.offsets.MonthBegin.n
    "pandas.tseries.offsets.MonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`MonthBegin.copy`](api/pandas.tseries.offsets.MonthBegin.copy.html#pandas.tseries.offsets.MonthBegin.copy
    "pandas.tseries.offsets.MonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_anchored`](api/pandas.tseries.offsets.MonthBegin.is_anchored.html#pandas.tseries.offsets.MonthBegin.is_anchored
    "pandas.tseries.offsets.MonthBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_on_offset`](api/pandas.tseries.offsets.MonthBegin.is_on_offset.html#pandas.tseries.offsets.MonthBegin.is_on_offset
    "pandas.tseries.offsets.MonthBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_month_start`](api/pandas.tseries.offsets.MonthBegin.is_month_start.html#pandas.tseries.offsets.MonthBegin.is_month_start
    "pandas.tseries.offsets.MonthBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_month_end`](api/pandas.tseries.offsets.MonthBegin.is_month_end.html#pandas.tseries.offsets.MonthBegin.is_month_end
    "pandas.tseries.offsets.MonthBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_quarter_start`](api/pandas.tseries.offsets.MonthBegin.is_quarter_start.html#pandas.tseries.offsets.MonthBegin.is_quarter_start
    "pandas.tseries.offsets.MonthBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_quarter_end`](api/pandas.tseries.offsets.MonthBegin.is_quarter_end.html#pandas.tseries.offsets.MonthBegin.is_quarter_end
    "pandas.tseries.offsets.MonthBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_year_start`](api/pandas.tseries.offsets.MonthBegin.is_year_start.html#pandas.tseries.offsets.MonthBegin.is_year_start
    "pandas.tseries.offsets.MonthBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`MonthBegin.is_year_end`](api/pandas.tseries.offsets.MonthBegin.is_year_end.html#pandas.tseries.offsets.MonthBegin.is_year_end
    "pandas.tseries.offsets.MonthBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BusinessMonthEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BusinessMonthEnd`](api/pandas.tseries.offsets.BusinessMonthEnd.html#pandas.tseries.offsets.BusinessMonthEnd
    "pandas.tseries.offsets.BusinessMonthEnd") | DateOffset increments between the
    last business day of the month. |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`BMonthEnd`](api/pandas.tseries.offsets.BMonthEnd.html#pandas.tseries.offsets.BMonthEnd
    "pandas.tseries.offsets.BMonthEnd") | alias of [`BusinessMonthEnd`](api/pandas.tseries.offsets.BusinessMonthEnd.html#pandas.tseries.offsets.BusinessMonthEnd
    "pandas._libs.tslibs.offsets.BusinessMonthEnd") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthEnd.freqstr`](api/pandas.tseries.offsets.BusinessMonthEnd.freqstr.html#pandas.tseries.offsets.BusinessMonthEnd.freqstr
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.kwds`](api/pandas.tseries.offsets.BusinessMonthEnd.kwds.html#pandas.tseries.offsets.BusinessMonthEnd.kwds
    "pandas.tseries.offsets.BusinessMonthEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.name`](api/pandas.tseries.offsets.BusinessMonthEnd.name.html#pandas.tseries.offsets.BusinessMonthEnd.name
    "pandas.tseries.offsets.BusinessMonthEnd.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.nanos`](api/pandas.tseries.offsets.BusinessMonthEnd.nanos.html#pandas.tseries.offsets.BusinessMonthEnd.nanos
    "pandas.tseries.offsets.BusinessMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.normalize`](api/pandas.tseries.offsets.BusinessMonthEnd.normalize.html#pandas.tseries.offsets.BusinessMonthEnd.normalize
    "pandas.tseries.offsets.BusinessMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.rule_code`](api/pandas.tseries.offsets.BusinessMonthEnd.rule_code.html#pandas.tseries.offsets.BusinessMonthEnd.rule_code
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.n`](api/pandas.tseries.offsets.BusinessMonthEnd.n.html#pandas.tseries.offsets.BusinessMonthEnd.n
    "pandas.tseries.offsets.BusinessMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthEnd.copy`](api/pandas.tseries.offsets.BusinessMonthEnd.copy.html#pandas.tseries.offsets.BusinessMonthEnd.copy
    "pandas.tseries.offsets.BusinessMonthEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_anchored`](api/pandas.tseries.offsets.BusinessMonthEnd.is_anchored.html#pandas.tseries.offsets.BusinessMonthEnd.is_anchored
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_on_offset`](api/pandas.tseries.offsets.BusinessMonthEnd.is_on_offset.html#pandas.tseries.offsets.BusinessMonthEnd.is_on_offset
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_month_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_month_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_month_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_month_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_month_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_month_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_year_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_year_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_year_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_year_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_year_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_year_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthEnd.freqstr`](api/pandas.tseries.offsets.BusinessMonthEnd.freqstr.html#pandas.tseries.offsets.BusinessMonthEnd.freqstr
    "pandas.tseries.offsets.BusinessMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.kwds`](api/pandas.tseries.offsets.BusinessMonthEnd.kwds.html#pandas.tseries.offsets.BusinessMonthEnd.kwds
    "pandas.tseries.offsets.BusinessMonthEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.name`](api/pandas.tseries.offsets.BusinessMonthEnd.name.html#pandas.tseries.offsets.BusinessMonthEnd.name
    "pandas.tseries.offsets.BusinessMonthEnd.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.nanos`](api/pandas.tseries.offsets.BusinessMonthEnd.nanos.html#pandas.tseries.offsets.BusinessMonthEnd.nanos
    "pandas.tseries.offsets.BusinessMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.normalize`](api/pandas.tseries.offsets.BusinessMonthEnd.normalize.html#pandas.tseries.offsets.BusinessMonthEnd.normalize
    "pandas.tseries.offsets.BusinessMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.rule_code`](api/pandas.tseries.offsets.BusinessMonthEnd.rule_code.html#pandas.tseries.offsets.BusinessMonthEnd.rule_code
    "pandas.tseries.offsets.BusinessMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.n`](api/pandas.tseries.offsets.BusinessMonthEnd.n.html#pandas.tseries.offsets.BusinessMonthEnd.n
    "pandas.tseries.offsets.BusinessMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthEnd.copy`](api/pandas.tseries.offsets.BusinessMonthEnd.copy.html#pandas.tseries.offsets.BusinessMonthEnd.copy
    "pandas.tseries.offsets.BusinessMonthEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_anchored`](api/pandas.tseries.offsets.BusinessMonthEnd.is_anchored.html#pandas.tseries.offsets.BusinessMonthEnd.is_anchored
    "pandas.tseries.offsets.BusinessMonthEnd.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_on_offset`](api/pandas.tseries.offsets.BusinessMonthEnd.is_on_offset.html#pandas.tseries.offsets.BusinessMonthEnd.is_on_offset
    "pandas.tseries.offsets.BusinessMonthEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_month_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_month_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_month_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_month_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_month_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_month_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_year_start`](api/pandas.tseries.offsets.BusinessMonthEnd.is_year_start.html#pandas.tseries.offsets.BusinessMonthEnd.is_year_start
    "pandas.tseries.offsets.BusinessMonthEnd.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthEnd.is_year_end`](api/pandas.tseries.offsets.BusinessMonthEnd.is_year_end.html#pandas.tseries.offsets.BusinessMonthEnd.is_year_end
    "pandas.tseries.offsets.BusinessMonthEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BusinessMonthBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BusinessMonthBegin`](api/pandas.tseries.offsets.BusinessMonthBegin.html#pandas.tseries.offsets.BusinessMonthBegin
    "pandas.tseries.offsets.BusinessMonthBegin") | DateOffset of one month at the
    first business day. |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`BMonthBegin`](api/pandas.tseries.offsets.BMonthBegin.html#pandas.tseries.offsets.BMonthBegin
    "pandas.tseries.offsets.BMonthBegin") | alias of [`BusinessMonthBegin`](api/pandas.tseries.offsets.BusinessMonthBegin.html#pandas.tseries.offsets.BusinessMonthBegin
    "pandas._libs.tslibs.offsets.BusinessMonthBegin") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthBegin.freqstr`](api/pandas.tseries.offsets.BusinessMonthBegin.freqstr.html#pandas.tseries.offsets.BusinessMonthBegin.freqstr
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.kwds`](api/pandas.tseries.offsets.BusinessMonthBegin.kwds.html#pandas.tseries.offsets.BusinessMonthBegin.kwds
    "pandas.tseries.offsets.BusinessMonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.name`](api/pandas.tseries.offsets.BusinessMonthBegin.name.html#pandas.tseries.offsets.BusinessMonthBegin.name
    "pandas.tseries.offsets.BusinessMonthBegin.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.nanos`](api/pandas.tseries.offsets.BusinessMonthBegin.nanos.html#pandas.tseries.offsets.BusinessMonthBegin.nanos
    "pandas.tseries.offsets.BusinessMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.normalize`](api/pandas.tseries.offsets.BusinessMonthBegin.normalize.html#pandas.tseries.offsets.BusinessMonthBegin.normalize
    "pandas.tseries.offsets.BusinessMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.rule_code`](api/pandas.tseries.offsets.BusinessMonthBegin.rule_code.html#pandas.tseries.offsets.BusinessMonthBegin.rule_code
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.n`](api/pandas.tseries.offsets.BusinessMonthBegin.n.html#pandas.tseries.offsets.BusinessMonthBegin.n
    "pandas.tseries.offsets.BusinessMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthBegin.copy`](api/pandas.tseries.offsets.BusinessMonthBegin.copy.html#pandas.tseries.offsets.BusinessMonthBegin.copy
    "pandas.tseries.offsets.BusinessMonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_anchored`](api/pandas.tseries.offsets.BusinessMonthBegin.is_anchored.html#pandas.tseries.offsets.BusinessMonthBegin.is_anchored
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_on_offset`](api/pandas.tseries.offsets.BusinessMonthBegin.is_on_offset.html#pandas.tseries.offsets.BusinessMonthBegin.is_on_offset
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_month_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_month_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_month_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_month_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_month_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_month_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_year_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_year_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_year_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_year_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_year_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_year_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthBegin.freqstr`](api/pandas.tseries.offsets.BusinessMonthBegin.freqstr.html#pandas.tseries.offsets.BusinessMonthBegin.freqstr
    "pandas.tseries.offsets.BusinessMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.kwds`](api/pandas.tseries.offsets.BusinessMonthBegin.kwds.html#pandas.tseries.offsets.BusinessMonthBegin.kwds
    "pandas.tseries.offsets.BusinessMonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.name`](api/pandas.tseries.offsets.BusinessMonthBegin.name.html#pandas.tseries.offsets.BusinessMonthBegin.name
    "pandas.tseries.offsets.BusinessMonthBegin.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.nanos`](api/pandas.tseries.offsets.BusinessMonthBegin.nanos.html#pandas.tseries.offsets.BusinessMonthBegin.nanos
    "pandas.tseries.offsets.BusinessMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.normalize`](api/pandas.tseries.offsets.BusinessMonthBegin.normalize.html#pandas.tseries.offsets.BusinessMonthBegin.normalize
    "pandas.tseries.offsets.BusinessMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.rule_code`](api/pandas.tseries.offsets.BusinessMonthBegin.rule_code.html#pandas.tseries.offsets.BusinessMonthBegin.rule_code
    "pandas.tseries.offsets.BusinessMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.n`](api/pandas.tseries.offsets.BusinessMonthBegin.n.html#pandas.tseries.offsets.BusinessMonthBegin.n
    "pandas.tseries.offsets.BusinessMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BusinessMonthBegin.copy`](api/pandas.tseries.offsets.BusinessMonthBegin.copy.html#pandas.tseries.offsets.BusinessMonthBegin.copy
    "pandas.tseries.offsets.BusinessMonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_anchored`](api/pandas.tseries.offsets.BusinessMonthBegin.is_anchored.html#pandas.tseries.offsets.BusinessMonthBegin.is_anchored
    "pandas.tseries.offsets.BusinessMonthBegin.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_on_offset`](api/pandas.tseries.offsets.BusinessMonthBegin.is_on_offset.html#pandas.tseries.offsets.BusinessMonthBegin.is_on_offset
    "pandas.tseries.offsets.BusinessMonthBegin.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_month_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_month_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_month_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_month_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_month_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_month_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_year_start`](api/pandas.tseries.offsets.BusinessMonthBegin.is_year_start.html#pandas.tseries.offsets.BusinessMonthBegin.is_year_start
    "pandas.tseries.offsets.BusinessMonthBegin.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BusinessMonthBegin.is_year_end`](api/pandas.tseries.offsets.BusinessMonthBegin.is_year_end.html#pandas.tseries.offsets.BusinessMonthBegin.is_year_end
    "pandas.tseries.offsets.BusinessMonthBegin.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: CustomBusinessMonthEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthEnd`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.html#pandas.tseries.offsets.CustomBusinessMonthEnd
    "pandas.tseries.offsets.CustomBusinessMonthEnd") | DateOffset subclass representing
    custom business month(s). |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`CBMonthEnd`](api/pandas.tseries.offsets.CBMonthEnd.html#pandas.tseries.offsets.CBMonthEnd
    "pandas.tseries.offsets.CBMonthEnd") | alias of [`CustomBusinessMonthEnd`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.html#pandas.tseries.offsets.CustomBusinessMonthEnd
    "pandas._libs.tslibs.offsets.CustomBusinessMonthEnd") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthEnd.freqstr`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr.html#pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.kwds`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.kwds.html#pandas.tseries.offsets.CustomBusinessMonthEnd.kwds
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds") | Return a dict of extra
    parameters for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.m_offset`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset.html#pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.name`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.name.html#pandas.tseries.offsets.CustomBusinessMonthEnd.name
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.nanos`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.nanos.html#pandas.tseries.offsets.CustomBusinessMonthEnd.nanos
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.normalize`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.normalize.html#pandas.tseries.offsets.CustomBusinessMonthEnd.normalize
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.rule_code`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code.html#pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.n`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.n.html#pandas.tseries.offsets.CustomBusinessMonthEnd.n
    "pandas.tseries.offsets.CustomBusinessMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.weekmask`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask.html#pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask
    "pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.calendar`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.calendar.html#pandas.tseries.offsets.CustomBusinessMonthEnd.calendar
    "pandas.tseries.offsets.CustomBusinessMonthEnd.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.holidays`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.holidays.html#pandas.tseries.offsets.CustomBusinessMonthEnd.holidays
    "pandas.tseries.offsets.CustomBusinessMonthEnd.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthEnd.copy`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.copy.html#pandas.tseries.offsets.CustomBusinessMonthEnd.copy
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy")() | Return a copy of the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_anchored`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored")() | (DEPRECATED)
    Return boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_month_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_month_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start")(ts) | Return
    boolean whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_year_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_year_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthEnd.freqstr`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr.html#pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr
    "pandas.tseries.offsets.CustomBusinessMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.kwds`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.kwds.html#pandas.tseries.offsets.CustomBusinessMonthEnd.kwds
    "pandas.tseries.offsets.CustomBusinessMonthEnd.kwds") | Return a dict of extra
    parameters for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.m_offset`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset.html#pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset
    "pandas.tseries.offsets.CustomBusinessMonthEnd.m_offset") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.name`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.name.html#pandas.tseries.offsets.CustomBusinessMonthEnd.name
    "pandas.tseries.offsets.CustomBusinessMonthEnd.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.nanos`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.nanos.html#pandas.tseries.offsets.CustomBusinessMonthEnd.nanos
    "pandas.tseries.offsets.CustomBusinessMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.normalize`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.normalize.html#pandas.tseries.offsets.CustomBusinessMonthEnd.normalize
    "pandas.tseries.offsets.CustomBusinessMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.rule_code`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code.html#pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code
    "pandas.tseries.offsets.CustomBusinessMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.n`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.n.html#pandas.tseries.offsets.CustomBusinessMonthEnd.n
    "pandas.tseries.offsets.CustomBusinessMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.weekmask`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask.html#pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask
    "pandas.tseries.offsets.CustomBusinessMonthEnd.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.calendar`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.calendar.html#pandas.tseries.offsets.CustomBusinessMonthEnd.calendar
    "pandas.tseries.offsets.CustomBusinessMonthEnd.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.holidays`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.holidays.html#pandas.tseries.offsets.CustomBusinessMonthEnd.holidays
    "pandas.tseries.offsets.CustomBusinessMonthEnd.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthEnd.copy`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.copy.html#pandas.tseries.offsets.CustomBusinessMonthEnd.copy
    "pandas.tseries.offsets.CustomBusinessMonthEnd.copy")() | Return a copy of the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_anchored`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_anchored")() | (DEPRECATED)
    Return boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_month_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_month_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_start")(ts) | Return
    boolean whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_year_start`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_start")(ts) | Return boolean
    whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthEnd.is_year_end`](api/pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end.html#pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end
    "pandas.tseries.offsets.CustomBusinessMonthEnd.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: CustomBusinessMonthBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthBegin`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.html#pandas.tseries.offsets.CustomBusinessMonthBegin
    "pandas.tseries.offsets.CustomBusinessMonthBegin") | DateOffset subclass representing
    custom business month(s). |'
  prefs: []
  type: TYPE_TB
- en: 'Alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`CBMonthBegin`](api/pandas.tseries.offsets.CBMonthBegin.html#pandas.tseries.offsets.CBMonthBegin
    "pandas.tseries.offsets.CBMonthBegin") | alias of [`CustomBusinessMonthBegin`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.html#pandas.tseries.offsets.CustomBusinessMonthBegin
    "pandas._libs.tslibs.offsets.CustomBusinessMonthBegin") |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthBegin.freqstr`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr.html#pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.kwds`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.kwds.html#pandas.tseries.offsets.CustomBusinessMonthBegin.kwds
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds") | Return a dict of extra
    parameters for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.m_offset`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset.html#pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.name`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.name.html#pandas.tseries.offsets.CustomBusinessMonthBegin.name
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.nanos`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.nanos.html#pandas.tseries.offsets.CustomBusinessMonthBegin.nanos
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.normalize`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.normalize.html#pandas.tseries.offsets.CustomBusinessMonthBegin.normalize
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.rule_code`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code.html#pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.n`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.n.html#pandas.tseries.offsets.CustomBusinessMonthBegin.n
    "pandas.tseries.offsets.CustomBusinessMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.weekmask`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask.html#pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask
    "pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.calendar`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.calendar.html#pandas.tseries.offsets.CustomBusinessMonthBegin.calendar
    "pandas.tseries.offsets.CustomBusinessMonthBegin.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.holidays`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.holidays.html#pandas.tseries.offsets.CustomBusinessMonthBegin.holidays
    "pandas.tseries.offsets.CustomBusinessMonthBegin.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthBegin.copy`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.copy.html#pandas.tseries.offsets.CustomBusinessMonthBegin.copy
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy")() | Return a copy of the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_anchored`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored")() | (DEPRECATED)
    Return boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_month_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start")(ts) | Return
    boolean whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_month_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start")(ts) | Return
    boolean whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end")(ts) | Return
    boolean whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_year_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start")(ts) | Return
    boolean whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_year_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthBegin.freqstr`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr.html#pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr
    "pandas.tseries.offsets.CustomBusinessMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.kwds`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.kwds.html#pandas.tseries.offsets.CustomBusinessMonthBegin.kwds
    "pandas.tseries.offsets.CustomBusinessMonthBegin.kwds") | Return a dict of extra
    parameters for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.m_offset`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset.html#pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset
    "pandas.tseries.offsets.CustomBusinessMonthBegin.m_offset") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.name`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.name.html#pandas.tseries.offsets.CustomBusinessMonthBegin.name
    "pandas.tseries.offsets.CustomBusinessMonthBegin.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.nanos`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.nanos.html#pandas.tseries.offsets.CustomBusinessMonthBegin.nanos
    "pandas.tseries.offsets.CustomBusinessMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.normalize`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.normalize.html#pandas.tseries.offsets.CustomBusinessMonthBegin.normalize
    "pandas.tseries.offsets.CustomBusinessMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.rule_code`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code.html#pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code
    "pandas.tseries.offsets.CustomBusinessMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.n`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.n.html#pandas.tseries.offsets.CustomBusinessMonthBegin.n
    "pandas.tseries.offsets.CustomBusinessMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.weekmask`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask.html#pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask
    "pandas.tseries.offsets.CustomBusinessMonthBegin.weekmask") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.calendar`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.calendar.html#pandas.tseries.offsets.CustomBusinessMonthBegin.calendar
    "pandas.tseries.offsets.CustomBusinessMonthBegin.calendar") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.holidays`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.holidays.html#pandas.tseries.offsets.CustomBusinessMonthBegin.holidays
    "pandas.tseries.offsets.CustomBusinessMonthBegin.holidays") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`CustomBusinessMonthBegin.copy`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.copy.html#pandas.tseries.offsets.CustomBusinessMonthBegin.copy
    "pandas.tseries.offsets.CustomBusinessMonthBegin.copy")() | Return a copy of the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_anchored`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_anchored")() | (DEPRECATED)
    Return boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_on_offset`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_on_offset")(dt) | Return boolean
    whether a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_month_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_start")(ts) | Return
    boolean whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_month_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_month_end")(ts) | Return boolean
    whether a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_start")(ts) | Return
    boolean whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_quarter_end")(ts) | Return
    boolean whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_year_start`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_start")(ts) | Return
    boolean whether a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`CustomBusinessMonthBegin.is_year_end`](api/pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end.html#pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end
    "pandas.tseries.offsets.CustomBusinessMonthBegin.is_year_end")(ts) | Return boolean
    whether a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: SemiMonthEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`SemiMonthEnd`](api/pandas.tseries.offsets.SemiMonthEnd.html#pandas.tseries.offsets.SemiMonthEnd
    "pandas.tseries.offsets.SemiMonthEnd") | Two DateOffset''s per month repeating
    on the last day of the month & day_of_month. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthEnd.freqstr`](api/pandas.tseries.offsets.SemiMonthEnd.freqstr.html#pandas.tseries.offsets.SemiMonthEnd.freqstr
    "pandas.tseries.offsets.SemiMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.kwds`](api/pandas.tseries.offsets.SemiMonthEnd.kwds.html#pandas.tseries.offsets.SemiMonthEnd.kwds
    "pandas.tseries.offsets.SemiMonthEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.name`](api/pandas.tseries.offsets.SemiMonthEnd.name.html#pandas.tseries.offsets.SemiMonthEnd.name
    "pandas.tseries.offsets.SemiMonthEnd.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.nanos`](api/pandas.tseries.offsets.SemiMonthEnd.nanos.html#pandas.tseries.offsets.SemiMonthEnd.nanos
    "pandas.tseries.offsets.SemiMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.normalize`](api/pandas.tseries.offsets.SemiMonthEnd.normalize.html#pandas.tseries.offsets.SemiMonthEnd.normalize
    "pandas.tseries.offsets.SemiMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.rule_code`](api/pandas.tseries.offsets.SemiMonthEnd.rule_code.html#pandas.tseries.offsets.SemiMonthEnd.rule_code
    "pandas.tseries.offsets.SemiMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.n`](api/pandas.tseries.offsets.SemiMonthEnd.n.html#pandas.tseries.offsets.SemiMonthEnd.n
    "pandas.tseries.offsets.SemiMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.day_of_month`](api/pandas.tseries.offsets.SemiMonthEnd.day_of_month.html#pandas.tseries.offsets.SemiMonthEnd.day_of_month
    "pandas.tseries.offsets.SemiMonthEnd.day_of_month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthEnd.copy`](api/pandas.tseries.offsets.SemiMonthEnd.copy.html#pandas.tseries.offsets.SemiMonthEnd.copy
    "pandas.tseries.offsets.SemiMonthEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_anchored`](api/pandas.tseries.offsets.SemiMonthEnd.is_anchored.html#pandas.tseries.offsets.SemiMonthEnd.is_anchored
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_on_offset`](api/pandas.tseries.offsets.SemiMonthEnd.is_on_offset.html#pandas.tseries.offsets.SemiMonthEnd.is_on_offset
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_month_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_month_start.html#pandas.tseries.offsets.SemiMonthEnd.is_month_start
    "pandas.tseries.offsets.SemiMonthEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_month_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_month_end.html#pandas.tseries.offsets.SemiMonthEnd.is_month_end
    "pandas.tseries.offsets.SemiMonthEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_quarter_start.html#pandas.tseries.offsets.SemiMonthEnd.is_quarter_start
    "pandas.tseries.offsets.SemiMonthEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_quarter_end.html#pandas.tseries.offsets.SemiMonthEnd.is_quarter_end
    "pandas.tseries.offsets.SemiMonthEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_year_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_year_start.html#pandas.tseries.offsets.SemiMonthEnd.is_year_start
    "pandas.tseries.offsets.SemiMonthEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_year_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_year_end.html#pandas.tseries.offsets.SemiMonthEnd.is_year_end
    "pandas.tseries.offsets.SemiMonthEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthEnd.freqstr`](api/pandas.tseries.offsets.SemiMonthEnd.freqstr.html#pandas.tseries.offsets.SemiMonthEnd.freqstr
    "pandas.tseries.offsets.SemiMonthEnd.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.kwds`](api/pandas.tseries.offsets.SemiMonthEnd.kwds.html#pandas.tseries.offsets.SemiMonthEnd.kwds
    "pandas.tseries.offsets.SemiMonthEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.name`](api/pandas.tseries.offsets.SemiMonthEnd.name.html#pandas.tseries.offsets.SemiMonthEnd.name
    "pandas.tseries.offsets.SemiMonthEnd.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.nanos`](api/pandas.tseries.offsets.SemiMonthEnd.nanos.html#pandas.tseries.offsets.SemiMonthEnd.nanos
    "pandas.tseries.offsets.SemiMonthEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.normalize`](api/pandas.tseries.offsets.SemiMonthEnd.normalize.html#pandas.tseries.offsets.SemiMonthEnd.normalize
    "pandas.tseries.offsets.SemiMonthEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.rule_code`](api/pandas.tseries.offsets.SemiMonthEnd.rule_code.html#pandas.tseries.offsets.SemiMonthEnd.rule_code
    "pandas.tseries.offsets.SemiMonthEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.n`](api/pandas.tseries.offsets.SemiMonthEnd.n.html#pandas.tseries.offsets.SemiMonthEnd.n
    "pandas.tseries.offsets.SemiMonthEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.day_of_month`](api/pandas.tseries.offsets.SemiMonthEnd.day_of_month.html#pandas.tseries.offsets.SemiMonthEnd.day_of_month
    "pandas.tseries.offsets.SemiMonthEnd.day_of_month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthEnd.copy`](api/pandas.tseries.offsets.SemiMonthEnd.copy.html#pandas.tseries.offsets.SemiMonthEnd.copy
    "pandas.tseries.offsets.SemiMonthEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_anchored`](api/pandas.tseries.offsets.SemiMonthEnd.is_anchored.html#pandas.tseries.offsets.SemiMonthEnd.is_anchored
    "pandas.tseries.offsets.SemiMonthEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_on_offset`](api/pandas.tseries.offsets.SemiMonthEnd.is_on_offset.html#pandas.tseries.offsets.SemiMonthEnd.is_on_offset
    "pandas.tseries.offsets.SemiMonthEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_month_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_month_start.html#pandas.tseries.offsets.SemiMonthEnd.is_month_start
    "pandas.tseries.offsets.SemiMonthEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_month_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_month_end.html#pandas.tseries.offsets.SemiMonthEnd.is_month_end
    "pandas.tseries.offsets.SemiMonthEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_quarter_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_quarter_start.html#pandas.tseries.offsets.SemiMonthEnd.is_quarter_start
    "pandas.tseries.offsets.SemiMonthEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_quarter_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_quarter_end.html#pandas.tseries.offsets.SemiMonthEnd.is_quarter_end
    "pandas.tseries.offsets.SemiMonthEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_year_start`](api/pandas.tseries.offsets.SemiMonthEnd.is_year_start.html#pandas.tseries.offsets.SemiMonthEnd.is_year_start
    "pandas.tseries.offsets.SemiMonthEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthEnd.is_year_end`](api/pandas.tseries.offsets.SemiMonthEnd.is_year_end.html#pandas.tseries.offsets.SemiMonthEnd.is_year_end
    "pandas.tseries.offsets.SemiMonthEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: SemiMonthBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`SemiMonthBegin`](api/pandas.tseries.offsets.SemiMonthBegin.html#pandas.tseries.offsets.SemiMonthBegin
    "pandas.tseries.offsets.SemiMonthBegin") | Two DateOffset''s per month repeating
    on the first day of the month & day_of_month. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthBegin.freqstr`](api/pandas.tseries.offsets.SemiMonthBegin.freqstr.html#pandas.tseries.offsets.SemiMonthBegin.freqstr
    "pandas.tseries.offsets.SemiMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.kwds`](api/pandas.tseries.offsets.SemiMonthBegin.kwds.html#pandas.tseries.offsets.SemiMonthBegin.kwds
    "pandas.tseries.offsets.SemiMonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.name`](api/pandas.tseries.offsets.SemiMonthBegin.name.html#pandas.tseries.offsets.SemiMonthBegin.name
    "pandas.tseries.offsets.SemiMonthBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.nanos`](api/pandas.tseries.offsets.SemiMonthBegin.nanos.html#pandas.tseries.offsets.SemiMonthBegin.nanos
    "pandas.tseries.offsets.SemiMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.normalize`](api/pandas.tseries.offsets.SemiMonthBegin.normalize.html#pandas.tseries.offsets.SemiMonthBegin.normalize
    "pandas.tseries.offsets.SemiMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.rule_code`](api/pandas.tseries.offsets.SemiMonthBegin.rule_code.html#pandas.tseries.offsets.SemiMonthBegin.rule_code
    "pandas.tseries.offsets.SemiMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.n`](api/pandas.tseries.offsets.SemiMonthBegin.n.html#pandas.tseries.offsets.SemiMonthBegin.n
    "pandas.tseries.offsets.SemiMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.day_of_month`](api/pandas.tseries.offsets.SemiMonthBegin.day_of_month.html#pandas.tseries.offsets.SemiMonthBegin.day_of_month
    "pandas.tseries.offsets.SemiMonthBegin.day_of_month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthBegin.copy`](api/pandas.tseries.offsets.SemiMonthBegin.copy.html#pandas.tseries.offsets.SemiMonthBegin.copy
    "pandas.tseries.offsets.SemiMonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_anchored`](api/pandas.tseries.offsets.SemiMonthBegin.is_anchored.html#pandas.tseries.offsets.SemiMonthBegin.is_anchored
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_on_offset`](api/pandas.tseries.offsets.SemiMonthBegin.is_on_offset.html#pandas.tseries.offsets.SemiMonthBegin.is_on_offset
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_month_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_month_start.html#pandas.tseries.offsets.SemiMonthBegin.is_month_start
    "pandas.tseries.offsets.SemiMonthBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_month_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_month_end.html#pandas.tseries.offsets.SemiMonthBegin.is_month_end
    "pandas.tseries.offsets.SemiMonthBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_quarter_start.html#pandas.tseries.offsets.SemiMonthBegin.is_quarter_start
    "pandas.tseries.offsets.SemiMonthBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_quarter_end.html#pandas.tseries.offsets.SemiMonthBegin.is_quarter_end
    "pandas.tseries.offsets.SemiMonthBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_year_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_year_start.html#pandas.tseries.offsets.SemiMonthBegin.is_year_start
    "pandas.tseries.offsets.SemiMonthBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_year_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_year_end.html#pandas.tseries.offsets.SemiMonthBegin.is_year_end
    "pandas.tseries.offsets.SemiMonthBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthBegin.freqstr`](api/pandas.tseries.offsets.SemiMonthBegin.freqstr.html#pandas.tseries.offsets.SemiMonthBegin.freqstr
    "pandas.tseries.offsets.SemiMonthBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.kwds`](api/pandas.tseries.offsets.SemiMonthBegin.kwds.html#pandas.tseries.offsets.SemiMonthBegin.kwds
    "pandas.tseries.offsets.SemiMonthBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.name`](api/pandas.tseries.offsets.SemiMonthBegin.name.html#pandas.tseries.offsets.SemiMonthBegin.name
    "pandas.tseries.offsets.SemiMonthBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.nanos`](api/pandas.tseries.offsets.SemiMonthBegin.nanos.html#pandas.tseries.offsets.SemiMonthBegin.nanos
    "pandas.tseries.offsets.SemiMonthBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.normalize`](api/pandas.tseries.offsets.SemiMonthBegin.normalize.html#pandas.tseries.offsets.SemiMonthBegin.normalize
    "pandas.tseries.offsets.SemiMonthBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.rule_code`](api/pandas.tseries.offsets.SemiMonthBegin.rule_code.html#pandas.tseries.offsets.SemiMonthBegin.rule_code
    "pandas.tseries.offsets.SemiMonthBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.n`](api/pandas.tseries.offsets.SemiMonthBegin.n.html#pandas.tseries.offsets.SemiMonthBegin.n
    "pandas.tseries.offsets.SemiMonthBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.day_of_month`](api/pandas.tseries.offsets.SemiMonthBegin.day_of_month.html#pandas.tseries.offsets.SemiMonthBegin.day_of_month
    "pandas.tseries.offsets.SemiMonthBegin.day_of_month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`SemiMonthBegin.copy`](api/pandas.tseries.offsets.SemiMonthBegin.copy.html#pandas.tseries.offsets.SemiMonthBegin.copy
    "pandas.tseries.offsets.SemiMonthBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_anchored`](api/pandas.tseries.offsets.SemiMonthBegin.is_anchored.html#pandas.tseries.offsets.SemiMonthBegin.is_anchored
    "pandas.tseries.offsets.SemiMonthBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_on_offset`](api/pandas.tseries.offsets.SemiMonthBegin.is_on_offset.html#pandas.tseries.offsets.SemiMonthBegin.is_on_offset
    "pandas.tseries.offsets.SemiMonthBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_month_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_month_start.html#pandas.tseries.offsets.SemiMonthBegin.is_month_start
    "pandas.tseries.offsets.SemiMonthBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_month_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_month_end.html#pandas.tseries.offsets.SemiMonthBegin.is_month_end
    "pandas.tseries.offsets.SemiMonthBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_quarter_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_quarter_start.html#pandas.tseries.offsets.SemiMonthBegin.is_quarter_start
    "pandas.tseries.offsets.SemiMonthBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_quarter_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_quarter_end.html#pandas.tseries.offsets.SemiMonthBegin.is_quarter_end
    "pandas.tseries.offsets.SemiMonthBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_year_start`](api/pandas.tseries.offsets.SemiMonthBegin.is_year_start.html#pandas.tseries.offsets.SemiMonthBegin.is_year_start
    "pandas.tseries.offsets.SemiMonthBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`SemiMonthBegin.is_year_end`](api/pandas.tseries.offsets.SemiMonthBegin.is_year_end.html#pandas.tseries.offsets.SemiMonthBegin.is_year_end
    "pandas.tseries.offsets.SemiMonthBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Week
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Week`](api/pandas.tseries.offsets.Week.html#pandas.tseries.offsets.Week
    "pandas.tseries.offsets.Week") | Weekly offset. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Week.freqstr`](api/pandas.tseries.offsets.Week.freqstr.html#pandas.tseries.offsets.Week.freqstr
    "pandas.tseries.offsets.Week.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.kwds`](api/pandas.tseries.offsets.Week.kwds.html#pandas.tseries.offsets.Week.kwds
    "pandas.tseries.offsets.Week.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.name`](api/pandas.tseries.offsets.Week.name.html#pandas.tseries.offsets.Week.name
    "pandas.tseries.offsets.Week.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.nanos`](api/pandas.tseries.offsets.Week.nanos.html#pandas.tseries.offsets.Week.nanos
    "pandas.tseries.offsets.Week.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.normalize`](api/pandas.tseries.offsets.Week.normalize.html#pandas.tseries.offsets.Week.normalize
    "pandas.tseries.offsets.Week.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.rule_code`](api/pandas.tseries.offsets.Week.rule_code.html#pandas.tseries.offsets.Week.rule_code
    "pandas.tseries.offsets.Week.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.n`](api/pandas.tseries.offsets.Week.n.html#pandas.tseries.offsets.Week.n
    "pandas.tseries.offsets.Week.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.weekday`](api/pandas.tseries.offsets.Week.weekday.html#pandas.tseries.offsets.Week.weekday
    "pandas.tseries.offsets.Week.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Week.copy`](api/pandas.tseries.offsets.Week.copy.html#pandas.tseries.offsets.Week.copy
    "pandas.tseries.offsets.Week.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_anchored`](api/pandas.tseries.offsets.Week.is_anchored.html#pandas.tseries.offsets.Week.is_anchored
    "pandas.tseries.offsets.Week.is_anchored")() | Return boolean whether the frequency
    is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_on_offset`](api/pandas.tseries.offsets.Week.is_on_offset.html#pandas.tseries.offsets.Week.is_on_offset
    "pandas.tseries.offsets.Week.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_month_start`](api/pandas.tseries.offsets.Week.is_month_start.html#pandas.tseries.offsets.Week.is_month_start
    "pandas.tseries.offsets.Week.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_month_end`](api/pandas.tseries.offsets.Week.is_month_end.html#pandas.tseries.offsets.Week.is_month_end
    "pandas.tseries.offsets.Week.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_quarter_start`](api/pandas.tseries.offsets.Week.is_quarter_start.html#pandas.tseries.offsets.Week.is_quarter_start
    "pandas.tseries.offsets.Week.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_quarter_end`](api/pandas.tseries.offsets.Week.is_quarter_end.html#pandas.tseries.offsets.Week.is_quarter_end
    "pandas.tseries.offsets.Week.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_year_start`](api/pandas.tseries.offsets.Week.is_year_start.html#pandas.tseries.offsets.Week.is_year_start
    "pandas.tseries.offsets.Week.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_year_end`](api/pandas.tseries.offsets.Week.is_year_end.html#pandas.tseries.offsets.Week.is_year_end
    "pandas.tseries.offsets.Week.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Week.freqstr`](api/pandas.tseries.offsets.Week.freqstr.html#pandas.tseries.offsets.Week.freqstr
    "pandas.tseries.offsets.Week.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.kwds`](api/pandas.tseries.offsets.Week.kwds.html#pandas.tseries.offsets.Week.kwds
    "pandas.tseries.offsets.Week.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.name`](api/pandas.tseries.offsets.Week.name.html#pandas.tseries.offsets.Week.name
    "pandas.tseries.offsets.Week.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.nanos`](api/pandas.tseries.offsets.Week.nanos.html#pandas.tseries.offsets.Week.nanos
    "pandas.tseries.offsets.Week.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.normalize`](api/pandas.tseries.offsets.Week.normalize.html#pandas.tseries.offsets.Week.normalize
    "pandas.tseries.offsets.Week.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.rule_code`](api/pandas.tseries.offsets.Week.rule_code.html#pandas.tseries.offsets.Week.rule_code
    "pandas.tseries.offsets.Week.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.n`](api/pandas.tseries.offsets.Week.n.html#pandas.tseries.offsets.Week.n
    "pandas.tseries.offsets.Week.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.weekday`](api/pandas.tseries.offsets.Week.weekday.html#pandas.tseries.offsets.Week.weekday
    "pandas.tseries.offsets.Week.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Week.copy`](api/pandas.tseries.offsets.Week.copy.html#pandas.tseries.offsets.Week.copy
    "pandas.tseries.offsets.Week.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_anchored`](api/pandas.tseries.offsets.Week.is_anchored.html#pandas.tseries.offsets.Week.is_anchored
    "pandas.tseries.offsets.Week.is_anchored")() | Return boolean whether the frequency
    is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_on_offset`](api/pandas.tseries.offsets.Week.is_on_offset.html#pandas.tseries.offsets.Week.is_on_offset
    "pandas.tseries.offsets.Week.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_month_start`](api/pandas.tseries.offsets.Week.is_month_start.html#pandas.tseries.offsets.Week.is_month_start
    "pandas.tseries.offsets.Week.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_month_end`](api/pandas.tseries.offsets.Week.is_month_end.html#pandas.tseries.offsets.Week.is_month_end
    "pandas.tseries.offsets.Week.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_quarter_start`](api/pandas.tseries.offsets.Week.is_quarter_start.html#pandas.tseries.offsets.Week.is_quarter_start
    "pandas.tseries.offsets.Week.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_quarter_end`](api/pandas.tseries.offsets.Week.is_quarter_end.html#pandas.tseries.offsets.Week.is_quarter_end
    "pandas.tseries.offsets.Week.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_year_start`](api/pandas.tseries.offsets.Week.is_year_start.html#pandas.tseries.offsets.Week.is_year_start
    "pandas.tseries.offsets.Week.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Week.is_year_end`](api/pandas.tseries.offsets.Week.is_year_end.html#pandas.tseries.offsets.Week.is_year_end
    "pandas.tseries.offsets.Week.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: WeekOfMonth
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`WeekOfMonth`](api/pandas.tseries.offsets.WeekOfMonth.html#pandas.tseries.offsets.WeekOfMonth
    "pandas.tseries.offsets.WeekOfMonth") | Describes monthly dates like "the Tuesday
    of the 2nd week of each month". |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`WeekOfMonth.freqstr`](api/pandas.tseries.offsets.WeekOfMonth.freqstr.html#pandas.tseries.offsets.WeekOfMonth.freqstr
    "pandas.tseries.offsets.WeekOfMonth.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.kwds`](api/pandas.tseries.offsets.WeekOfMonth.kwds.html#pandas.tseries.offsets.WeekOfMonth.kwds
    "pandas.tseries.offsets.WeekOfMonth.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.name`](api/pandas.tseries.offsets.WeekOfMonth.name.html#pandas.tseries.offsets.WeekOfMonth.name
    "pandas.tseries.offsets.WeekOfMonth.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.nanos`](api/pandas.tseries.offsets.WeekOfMonth.nanos.html#pandas.tseries.offsets.WeekOfMonth.nanos
    "pandas.tseries.offsets.WeekOfMonth.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.normalize`](api/pandas.tseries.offsets.WeekOfMonth.normalize.html#pandas.tseries.offsets.WeekOfMonth.normalize
    "pandas.tseries.offsets.WeekOfMonth.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.rule_code`](api/pandas.tseries.offsets.WeekOfMonth.rule_code.html#pandas.tseries.offsets.WeekOfMonth.rule_code
    "pandas.tseries.offsets.WeekOfMonth.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.n`](api/pandas.tseries.offsets.WeekOfMonth.n.html#pandas.tseries.offsets.WeekOfMonth.n
    "pandas.tseries.offsets.WeekOfMonth.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.week`](api/pandas.tseries.offsets.WeekOfMonth.week.html#pandas.tseries.offsets.WeekOfMonth.week
    "pandas.tseries.offsets.WeekOfMonth.week") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`WeekOfMonth.copy`](api/pandas.tseries.offsets.WeekOfMonth.copy.html#pandas.tseries.offsets.WeekOfMonth.copy
    "pandas.tseries.offsets.WeekOfMonth.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_anchored`](api/pandas.tseries.offsets.WeekOfMonth.is_anchored.html#pandas.tseries.offsets.WeekOfMonth.is_anchored
    "pandas.tseries.offsets.WeekOfMonth.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_on_offset`](api/pandas.tseries.offsets.WeekOfMonth.is_on_offset.html#pandas.tseries.offsets.WeekOfMonth.is_on_offset
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.weekday`](api/pandas.tseries.offsets.WeekOfMonth.weekday.html#pandas.tseries.offsets.WeekOfMonth.weekday
    "pandas.tseries.offsets.WeekOfMonth.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_month_start`](api/pandas.tseries.offsets.WeekOfMonth.is_month_start.html#pandas.tseries.offsets.WeekOfMonth.is_month_start
    "pandas.tseries.offsets.WeekOfMonth.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_month_end`](api/pandas.tseries.offsets.WeekOfMonth.is_month_end.html#pandas.tseries.offsets.WeekOfMonth.is_month_end
    "pandas.tseries.offsets.WeekOfMonth.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_quarter_start`](api/pandas.tseries.offsets.WeekOfMonth.is_quarter_start.html#pandas.tseries.offsets.WeekOfMonth.is_quarter_start
    "pandas.tseries.offsets.WeekOfMonth.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_quarter_end`](api/pandas.tseries.offsets.WeekOfMonth.is_quarter_end.html#pandas.tseries.offsets.WeekOfMonth.is_quarter_end
    "pandas.tseries.offsets.WeekOfMonth.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_year_start`](api/pandas.tseries.offsets.WeekOfMonth.is_year_start.html#pandas.tseries.offsets.WeekOfMonth.is_year_start
    "pandas.tseries.offsets.WeekOfMonth.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_year_end`](api/pandas.tseries.offsets.WeekOfMonth.is_year_end.html#pandas.tseries.offsets.WeekOfMonth.is_year_end
    "pandas.tseries.offsets.WeekOfMonth.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`WeekOfMonth.freqstr`](api/pandas.tseries.offsets.WeekOfMonth.freqstr.html#pandas.tseries.offsets.WeekOfMonth.freqstr
    "pandas.tseries.offsets.WeekOfMonth.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.kwds`](api/pandas.tseries.offsets.WeekOfMonth.kwds.html#pandas.tseries.offsets.WeekOfMonth.kwds
    "pandas.tseries.offsets.WeekOfMonth.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.name`](api/pandas.tseries.offsets.WeekOfMonth.name.html#pandas.tseries.offsets.WeekOfMonth.name
    "pandas.tseries.offsets.WeekOfMonth.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.nanos`](api/pandas.tseries.offsets.WeekOfMonth.nanos.html#pandas.tseries.offsets.WeekOfMonth.nanos
    "pandas.tseries.offsets.WeekOfMonth.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.normalize`](api/pandas.tseries.offsets.WeekOfMonth.normalize.html#pandas.tseries.offsets.WeekOfMonth.normalize
    "pandas.tseries.offsets.WeekOfMonth.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.rule_code`](api/pandas.tseries.offsets.WeekOfMonth.rule_code.html#pandas.tseries.offsets.WeekOfMonth.rule_code
    "pandas.tseries.offsets.WeekOfMonth.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.n`](api/pandas.tseries.offsets.WeekOfMonth.n.html#pandas.tseries.offsets.WeekOfMonth.n
    "pandas.tseries.offsets.WeekOfMonth.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.week`](api/pandas.tseries.offsets.WeekOfMonth.week.html#pandas.tseries.offsets.WeekOfMonth.week
    "pandas.tseries.offsets.WeekOfMonth.week") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`WeekOfMonth.copy`](api/pandas.tseries.offsets.WeekOfMonth.copy.html#pandas.tseries.offsets.WeekOfMonth.copy
    "pandas.tseries.offsets.WeekOfMonth.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_anchored`](api/pandas.tseries.offsets.WeekOfMonth.is_anchored.html#pandas.tseries.offsets.WeekOfMonth.is_anchored
    "pandas.tseries.offsets.WeekOfMonth.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_on_offset`](api/pandas.tseries.offsets.WeekOfMonth.is_on_offset.html#pandas.tseries.offsets.WeekOfMonth.is_on_offset
    "pandas.tseries.offsets.WeekOfMonth.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.weekday`](api/pandas.tseries.offsets.WeekOfMonth.weekday.html#pandas.tseries.offsets.WeekOfMonth.weekday
    "pandas.tseries.offsets.WeekOfMonth.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_month_start`](api/pandas.tseries.offsets.WeekOfMonth.is_month_start.html#pandas.tseries.offsets.WeekOfMonth.is_month_start
    "pandas.tseries.offsets.WeekOfMonth.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_month_end`](api/pandas.tseries.offsets.WeekOfMonth.is_month_end.html#pandas.tseries.offsets.WeekOfMonth.is_month_end
    "pandas.tseries.offsets.WeekOfMonth.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_quarter_start`](api/pandas.tseries.offsets.WeekOfMonth.is_quarter_start.html#pandas.tseries.offsets.WeekOfMonth.is_quarter_start
    "pandas.tseries.offsets.WeekOfMonth.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_quarter_end`](api/pandas.tseries.offsets.WeekOfMonth.is_quarter_end.html#pandas.tseries.offsets.WeekOfMonth.is_quarter_end
    "pandas.tseries.offsets.WeekOfMonth.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_year_start`](api/pandas.tseries.offsets.WeekOfMonth.is_year_start.html#pandas.tseries.offsets.WeekOfMonth.is_year_start
    "pandas.tseries.offsets.WeekOfMonth.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`WeekOfMonth.is_year_end`](api/pandas.tseries.offsets.WeekOfMonth.is_year_end.html#pandas.tseries.offsets.WeekOfMonth.is_year_end
    "pandas.tseries.offsets.WeekOfMonth.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: LastWeekOfMonth
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`LastWeekOfMonth`](api/pandas.tseries.offsets.LastWeekOfMonth.html#pandas.tseries.offsets.LastWeekOfMonth
    "pandas.tseries.offsets.LastWeekOfMonth") | Describes monthly dates in last week
    of month. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`LastWeekOfMonth.freqstr`](api/pandas.tseries.offsets.LastWeekOfMonth.freqstr.html#pandas.tseries.offsets.LastWeekOfMonth.freqstr
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.kwds`](api/pandas.tseries.offsets.LastWeekOfMonth.kwds.html#pandas.tseries.offsets.LastWeekOfMonth.kwds
    "pandas.tseries.offsets.LastWeekOfMonth.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.name`](api/pandas.tseries.offsets.LastWeekOfMonth.name.html#pandas.tseries.offsets.LastWeekOfMonth.name
    "pandas.tseries.offsets.LastWeekOfMonth.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.nanos`](api/pandas.tseries.offsets.LastWeekOfMonth.nanos.html#pandas.tseries.offsets.LastWeekOfMonth.nanos
    "pandas.tseries.offsets.LastWeekOfMonth.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.normalize`](api/pandas.tseries.offsets.LastWeekOfMonth.normalize.html#pandas.tseries.offsets.LastWeekOfMonth.normalize
    "pandas.tseries.offsets.LastWeekOfMonth.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.rule_code`](api/pandas.tseries.offsets.LastWeekOfMonth.rule_code.html#pandas.tseries.offsets.LastWeekOfMonth.rule_code
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.n`](api/pandas.tseries.offsets.LastWeekOfMonth.n.html#pandas.tseries.offsets.LastWeekOfMonth.n
    "pandas.tseries.offsets.LastWeekOfMonth.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.weekday`](api/pandas.tseries.offsets.LastWeekOfMonth.weekday.html#pandas.tseries.offsets.LastWeekOfMonth.weekday
    "pandas.tseries.offsets.LastWeekOfMonth.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.week`](api/pandas.tseries.offsets.LastWeekOfMonth.week.html#pandas.tseries.offsets.LastWeekOfMonth.week
    "pandas.tseries.offsets.LastWeekOfMonth.week") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`LastWeekOfMonth.copy`](api/pandas.tseries.offsets.LastWeekOfMonth.copy.html#pandas.tseries.offsets.LastWeekOfMonth.copy
    "pandas.tseries.offsets.LastWeekOfMonth.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_anchored`](api/pandas.tseries.offsets.LastWeekOfMonth.is_anchored.html#pandas.tseries.offsets.LastWeekOfMonth.is_anchored
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_on_offset`](api/pandas.tseries.offsets.LastWeekOfMonth.is_on_offset.html#pandas.tseries.offsets.LastWeekOfMonth.is_on_offset
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_month_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_month_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_month_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_month_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_month_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_month_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_quarter_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_quarter_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_year_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_year_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_year_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_year_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_year_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_year_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`LastWeekOfMonth.freqstr`](api/pandas.tseries.offsets.LastWeekOfMonth.freqstr.html#pandas.tseries.offsets.LastWeekOfMonth.freqstr
    "pandas.tseries.offsets.LastWeekOfMonth.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.kwds`](api/pandas.tseries.offsets.LastWeekOfMonth.kwds.html#pandas.tseries.offsets.LastWeekOfMonth.kwds
    "pandas.tseries.offsets.LastWeekOfMonth.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.name`](api/pandas.tseries.offsets.LastWeekOfMonth.name.html#pandas.tseries.offsets.LastWeekOfMonth.name
    "pandas.tseries.offsets.LastWeekOfMonth.name") | Return a string representing
    the base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.nanos`](api/pandas.tseries.offsets.LastWeekOfMonth.nanos.html#pandas.tseries.offsets.LastWeekOfMonth.nanos
    "pandas.tseries.offsets.LastWeekOfMonth.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.normalize`](api/pandas.tseries.offsets.LastWeekOfMonth.normalize.html#pandas.tseries.offsets.LastWeekOfMonth.normalize
    "pandas.tseries.offsets.LastWeekOfMonth.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.rule_code`](api/pandas.tseries.offsets.LastWeekOfMonth.rule_code.html#pandas.tseries.offsets.LastWeekOfMonth.rule_code
    "pandas.tseries.offsets.LastWeekOfMonth.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.n`](api/pandas.tseries.offsets.LastWeekOfMonth.n.html#pandas.tseries.offsets.LastWeekOfMonth.n
    "pandas.tseries.offsets.LastWeekOfMonth.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.weekday`](api/pandas.tseries.offsets.LastWeekOfMonth.weekday.html#pandas.tseries.offsets.LastWeekOfMonth.weekday
    "pandas.tseries.offsets.LastWeekOfMonth.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.week`](api/pandas.tseries.offsets.LastWeekOfMonth.week.html#pandas.tseries.offsets.LastWeekOfMonth.week
    "pandas.tseries.offsets.LastWeekOfMonth.week") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`LastWeekOfMonth.copy`](api/pandas.tseries.offsets.LastWeekOfMonth.copy.html#pandas.tseries.offsets.LastWeekOfMonth.copy
    "pandas.tseries.offsets.LastWeekOfMonth.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_anchored`](api/pandas.tseries.offsets.LastWeekOfMonth.is_anchored.html#pandas.tseries.offsets.LastWeekOfMonth.is_anchored
    "pandas.tseries.offsets.LastWeekOfMonth.is_anchored")() | (DEPRECATED) Return
    boolean whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_on_offset`](api/pandas.tseries.offsets.LastWeekOfMonth.is_on_offset.html#pandas.tseries.offsets.LastWeekOfMonth.is_on_offset
    "pandas.tseries.offsets.LastWeekOfMonth.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_month_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_month_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_month_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_month_start")(ts) | Return boolean
    whether a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_month_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_month_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_month_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_quarter_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_quarter_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_quarter_end")(ts) | Return boolean
    whether a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_year_start`](api/pandas.tseries.offsets.LastWeekOfMonth.is_year_start.html#pandas.tseries.offsets.LastWeekOfMonth.is_year_start
    "pandas.tseries.offsets.LastWeekOfMonth.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`LastWeekOfMonth.is_year_end`](api/pandas.tseries.offsets.LastWeekOfMonth.is_year_end.html#pandas.tseries.offsets.LastWeekOfMonth.is_year_end
    "pandas.tseries.offsets.LastWeekOfMonth.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BQuarterEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BQuarterEnd`](api/pandas.tseries.offsets.BQuarterEnd.html#pandas.tseries.offsets.BQuarterEnd
    "pandas.tseries.offsets.BQuarterEnd") | DateOffset increments between the last
    business day of each Quarter. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterEnd.freqstr`](api/pandas.tseries.offsets.BQuarterEnd.freqstr.html#pandas.tseries.offsets.BQuarterEnd.freqstr
    "pandas.tseries.offsets.BQuarterEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.kwds`](api/pandas.tseries.offsets.BQuarterEnd.kwds.html#pandas.tseries.offsets.BQuarterEnd.kwds
    "pandas.tseries.offsets.BQuarterEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.name`](api/pandas.tseries.offsets.BQuarterEnd.name.html#pandas.tseries.offsets.BQuarterEnd.name
    "pandas.tseries.offsets.BQuarterEnd.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.nanos`](api/pandas.tseries.offsets.BQuarterEnd.nanos.html#pandas.tseries.offsets.BQuarterEnd.nanos
    "pandas.tseries.offsets.BQuarterEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.normalize`](api/pandas.tseries.offsets.BQuarterEnd.normalize.html#pandas.tseries.offsets.BQuarterEnd.normalize
    "pandas.tseries.offsets.BQuarterEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.rule_code`](api/pandas.tseries.offsets.BQuarterEnd.rule_code.html#pandas.tseries.offsets.BQuarterEnd.rule_code
    "pandas.tseries.offsets.BQuarterEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.n`](api/pandas.tseries.offsets.BQuarterEnd.n.html#pandas.tseries.offsets.BQuarterEnd.n
    "pandas.tseries.offsets.BQuarterEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.startingMonth`](api/pandas.tseries.offsets.BQuarterEnd.startingMonth.html#pandas.tseries.offsets.BQuarterEnd.startingMonth
    "pandas.tseries.offsets.BQuarterEnd.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterEnd.copy`](api/pandas.tseries.offsets.BQuarterEnd.copy.html#pandas.tseries.offsets.BQuarterEnd.copy
    "pandas.tseries.offsets.BQuarterEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_anchored`](api/pandas.tseries.offsets.BQuarterEnd.is_anchored.html#pandas.tseries.offsets.BQuarterEnd.is_anchored
    "pandas.tseries.offsets.BQuarterEnd.is_anchored")() | Return boolean whether the
    frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_on_offset`](api/pandas.tseries.offsets.BQuarterEnd.is_on_offset.html#pandas.tseries.offsets.BQuarterEnd.is_on_offset
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_month_start`](api/pandas.tseries.offsets.BQuarterEnd.is_month_start.html#pandas.tseries.offsets.BQuarterEnd.is_month_start
    "pandas.tseries.offsets.BQuarterEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_month_end`](api/pandas.tseries.offsets.BQuarterEnd.is_month_end.html#pandas.tseries.offsets.BQuarterEnd.is_month_end
    "pandas.tseries.offsets.BQuarterEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_quarter_start`](api/pandas.tseries.offsets.BQuarterEnd.is_quarter_start.html#pandas.tseries.offsets.BQuarterEnd.is_quarter_start
    "pandas.tseries.offsets.BQuarterEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_quarter_end`](api/pandas.tseries.offsets.BQuarterEnd.is_quarter_end.html#pandas.tseries.offsets.BQuarterEnd.is_quarter_end
    "pandas.tseries.offsets.BQuarterEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_year_start`](api/pandas.tseries.offsets.BQuarterEnd.is_year_start.html#pandas.tseries.offsets.BQuarterEnd.is_year_start
    "pandas.tseries.offsets.BQuarterEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_year_end`](api/pandas.tseries.offsets.BQuarterEnd.is_year_end.html#pandas.tseries.offsets.BQuarterEnd.is_year_end
    "pandas.tseries.offsets.BQuarterEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterEnd.freqstr`](api/pandas.tseries.offsets.BQuarterEnd.freqstr.html#pandas.tseries.offsets.BQuarterEnd.freqstr
    "pandas.tseries.offsets.BQuarterEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.kwds`](api/pandas.tseries.offsets.BQuarterEnd.kwds.html#pandas.tseries.offsets.BQuarterEnd.kwds
    "pandas.tseries.offsets.BQuarterEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.name`](api/pandas.tseries.offsets.BQuarterEnd.name.html#pandas.tseries.offsets.BQuarterEnd.name
    "pandas.tseries.offsets.BQuarterEnd.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.nanos`](api/pandas.tseries.offsets.BQuarterEnd.nanos.html#pandas.tseries.offsets.BQuarterEnd.nanos
    "pandas.tseries.offsets.BQuarterEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.normalize`](api/pandas.tseries.offsets.BQuarterEnd.normalize.html#pandas.tseries.offsets.BQuarterEnd.normalize
    "pandas.tseries.offsets.BQuarterEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.rule_code`](api/pandas.tseries.offsets.BQuarterEnd.rule_code.html#pandas.tseries.offsets.BQuarterEnd.rule_code
    "pandas.tseries.offsets.BQuarterEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.n`](api/pandas.tseries.offsets.BQuarterEnd.n.html#pandas.tseries.offsets.BQuarterEnd.n
    "pandas.tseries.offsets.BQuarterEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.startingMonth`](api/pandas.tseries.offsets.BQuarterEnd.startingMonth.html#pandas.tseries.offsets.BQuarterEnd.startingMonth
    "pandas.tseries.offsets.BQuarterEnd.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterEnd.copy`](api/pandas.tseries.offsets.BQuarterEnd.copy.html#pandas.tseries.offsets.BQuarterEnd.copy
    "pandas.tseries.offsets.BQuarterEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_anchored`](api/pandas.tseries.offsets.BQuarterEnd.is_anchored.html#pandas.tseries.offsets.BQuarterEnd.is_anchored
    "pandas.tseries.offsets.BQuarterEnd.is_anchored")() | Return boolean whether the
    frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_on_offset`](api/pandas.tseries.offsets.BQuarterEnd.is_on_offset.html#pandas.tseries.offsets.BQuarterEnd.is_on_offset
    "pandas.tseries.offsets.BQuarterEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_month_start`](api/pandas.tseries.offsets.BQuarterEnd.is_month_start.html#pandas.tseries.offsets.BQuarterEnd.is_month_start
    "pandas.tseries.offsets.BQuarterEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_month_end`](api/pandas.tseries.offsets.BQuarterEnd.is_month_end.html#pandas.tseries.offsets.BQuarterEnd.is_month_end
    "pandas.tseries.offsets.BQuarterEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_quarter_start`](api/pandas.tseries.offsets.BQuarterEnd.is_quarter_start.html#pandas.tseries.offsets.BQuarterEnd.is_quarter_start
    "pandas.tseries.offsets.BQuarterEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_quarter_end`](api/pandas.tseries.offsets.BQuarterEnd.is_quarter_end.html#pandas.tseries.offsets.BQuarterEnd.is_quarter_end
    "pandas.tseries.offsets.BQuarterEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_year_start`](api/pandas.tseries.offsets.BQuarterEnd.is_year_start.html#pandas.tseries.offsets.BQuarterEnd.is_year_start
    "pandas.tseries.offsets.BQuarterEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterEnd.is_year_end`](api/pandas.tseries.offsets.BQuarterEnd.is_year_end.html#pandas.tseries.offsets.BQuarterEnd.is_year_end
    "pandas.tseries.offsets.BQuarterEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BQuarterBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BQuarterBegin`](api/pandas.tseries.offsets.BQuarterBegin.html#pandas.tseries.offsets.BQuarterBegin
    "pandas.tseries.offsets.BQuarterBegin") | DateOffset increments between the first
    business day of each Quarter. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterBegin.freqstr`](api/pandas.tseries.offsets.BQuarterBegin.freqstr.html#pandas.tseries.offsets.BQuarterBegin.freqstr
    "pandas.tseries.offsets.BQuarterBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.kwds`](api/pandas.tseries.offsets.BQuarterBegin.kwds.html#pandas.tseries.offsets.BQuarterBegin.kwds
    "pandas.tseries.offsets.BQuarterBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.name`](api/pandas.tseries.offsets.BQuarterBegin.name.html#pandas.tseries.offsets.BQuarterBegin.name
    "pandas.tseries.offsets.BQuarterBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.nanos`](api/pandas.tseries.offsets.BQuarterBegin.nanos.html#pandas.tseries.offsets.BQuarterBegin.nanos
    "pandas.tseries.offsets.BQuarterBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.normalize`](api/pandas.tseries.offsets.BQuarterBegin.normalize.html#pandas.tseries.offsets.BQuarterBegin.normalize
    "pandas.tseries.offsets.BQuarterBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.rule_code`](api/pandas.tseries.offsets.BQuarterBegin.rule_code.html#pandas.tseries.offsets.BQuarterBegin.rule_code
    "pandas.tseries.offsets.BQuarterBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.n`](api/pandas.tseries.offsets.BQuarterBegin.n.html#pandas.tseries.offsets.BQuarterBegin.n
    "pandas.tseries.offsets.BQuarterBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.startingMonth`](api/pandas.tseries.offsets.BQuarterBegin.startingMonth.html#pandas.tseries.offsets.BQuarterBegin.startingMonth
    "pandas.tseries.offsets.BQuarterBegin.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterBegin.copy`](api/pandas.tseries.offsets.BQuarterBegin.copy.html#pandas.tseries.offsets.BQuarterBegin.copy
    "pandas.tseries.offsets.BQuarterBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_anchored`](api/pandas.tseries.offsets.BQuarterBegin.is_anchored.html#pandas.tseries.offsets.BQuarterBegin.is_anchored
    "pandas.tseries.offsets.BQuarterBegin.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_on_offset`](api/pandas.tseries.offsets.BQuarterBegin.is_on_offset.html#pandas.tseries.offsets.BQuarterBegin.is_on_offset
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_month_start`](api/pandas.tseries.offsets.BQuarterBegin.is_month_start.html#pandas.tseries.offsets.BQuarterBegin.is_month_start
    "pandas.tseries.offsets.BQuarterBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_month_end`](api/pandas.tseries.offsets.BQuarterBegin.is_month_end.html#pandas.tseries.offsets.BQuarterBegin.is_month_end
    "pandas.tseries.offsets.BQuarterBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_quarter_start`](api/pandas.tseries.offsets.BQuarterBegin.is_quarter_start.html#pandas.tseries.offsets.BQuarterBegin.is_quarter_start
    "pandas.tseries.offsets.BQuarterBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_quarter_end`](api/pandas.tseries.offsets.BQuarterBegin.is_quarter_end.html#pandas.tseries.offsets.BQuarterBegin.is_quarter_end
    "pandas.tseries.offsets.BQuarterBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_year_start`](api/pandas.tseries.offsets.BQuarterBegin.is_year_start.html#pandas.tseries.offsets.BQuarterBegin.is_year_start
    "pandas.tseries.offsets.BQuarterBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_year_end`](api/pandas.tseries.offsets.BQuarterBegin.is_year_end.html#pandas.tseries.offsets.BQuarterBegin.is_year_end
    "pandas.tseries.offsets.BQuarterBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterBegin.freqstr`](api/pandas.tseries.offsets.BQuarterBegin.freqstr.html#pandas.tseries.offsets.BQuarterBegin.freqstr
    "pandas.tseries.offsets.BQuarterBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.kwds`](api/pandas.tseries.offsets.BQuarterBegin.kwds.html#pandas.tseries.offsets.BQuarterBegin.kwds
    "pandas.tseries.offsets.BQuarterBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.name`](api/pandas.tseries.offsets.BQuarterBegin.name.html#pandas.tseries.offsets.BQuarterBegin.name
    "pandas.tseries.offsets.BQuarterBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.nanos`](api/pandas.tseries.offsets.BQuarterBegin.nanos.html#pandas.tseries.offsets.BQuarterBegin.nanos
    "pandas.tseries.offsets.BQuarterBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.normalize`](api/pandas.tseries.offsets.BQuarterBegin.normalize.html#pandas.tseries.offsets.BQuarterBegin.normalize
    "pandas.tseries.offsets.BQuarterBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.rule_code`](api/pandas.tseries.offsets.BQuarterBegin.rule_code.html#pandas.tseries.offsets.BQuarterBegin.rule_code
    "pandas.tseries.offsets.BQuarterBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.n`](api/pandas.tseries.offsets.BQuarterBegin.n.html#pandas.tseries.offsets.BQuarterBegin.n
    "pandas.tseries.offsets.BQuarterBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.startingMonth`](api/pandas.tseries.offsets.BQuarterBegin.startingMonth.html#pandas.tseries.offsets.BQuarterBegin.startingMonth
    "pandas.tseries.offsets.BQuarterBegin.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BQuarterBegin.copy`](api/pandas.tseries.offsets.BQuarterBegin.copy.html#pandas.tseries.offsets.BQuarterBegin.copy
    "pandas.tseries.offsets.BQuarterBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_anchored`](api/pandas.tseries.offsets.BQuarterBegin.is_anchored.html#pandas.tseries.offsets.BQuarterBegin.is_anchored
    "pandas.tseries.offsets.BQuarterBegin.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_on_offset`](api/pandas.tseries.offsets.BQuarterBegin.is_on_offset.html#pandas.tseries.offsets.BQuarterBegin.is_on_offset
    "pandas.tseries.offsets.BQuarterBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_month_start`](api/pandas.tseries.offsets.BQuarterBegin.is_month_start.html#pandas.tseries.offsets.BQuarterBegin.is_month_start
    "pandas.tseries.offsets.BQuarterBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_month_end`](api/pandas.tseries.offsets.BQuarterBegin.is_month_end.html#pandas.tseries.offsets.BQuarterBegin.is_month_end
    "pandas.tseries.offsets.BQuarterBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_quarter_start`](api/pandas.tseries.offsets.BQuarterBegin.is_quarter_start.html#pandas.tseries.offsets.BQuarterBegin.is_quarter_start
    "pandas.tseries.offsets.BQuarterBegin.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_quarter_end`](api/pandas.tseries.offsets.BQuarterBegin.is_quarter_end.html#pandas.tseries.offsets.BQuarterBegin.is_quarter_end
    "pandas.tseries.offsets.BQuarterBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_year_start`](api/pandas.tseries.offsets.BQuarterBegin.is_year_start.html#pandas.tseries.offsets.BQuarterBegin.is_year_start
    "pandas.tseries.offsets.BQuarterBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BQuarterBegin.is_year_end`](api/pandas.tseries.offsets.BQuarterBegin.is_year_end.html#pandas.tseries.offsets.BQuarterBegin.is_year_end
    "pandas.tseries.offsets.BQuarterBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: QuarterEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`QuarterEnd`](api/pandas.tseries.offsets.QuarterEnd.html#pandas.tseries.offsets.QuarterEnd
    "pandas.tseries.offsets.QuarterEnd") | DateOffset increments between Quarter end
    dates. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterEnd.freqstr`](api/pandas.tseries.offsets.QuarterEnd.freqstr.html#pandas.tseries.offsets.QuarterEnd.freqstr
    "pandas.tseries.offsets.QuarterEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.kwds`](api/pandas.tseries.offsets.QuarterEnd.kwds.html#pandas.tseries.offsets.QuarterEnd.kwds
    "pandas.tseries.offsets.QuarterEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.name`](api/pandas.tseries.offsets.QuarterEnd.name.html#pandas.tseries.offsets.QuarterEnd.name
    "pandas.tseries.offsets.QuarterEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.nanos`](api/pandas.tseries.offsets.QuarterEnd.nanos.html#pandas.tseries.offsets.QuarterEnd.nanos
    "pandas.tseries.offsets.QuarterEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.normalize`](api/pandas.tseries.offsets.QuarterEnd.normalize.html#pandas.tseries.offsets.QuarterEnd.normalize
    "pandas.tseries.offsets.QuarterEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.rule_code`](api/pandas.tseries.offsets.QuarterEnd.rule_code.html#pandas.tseries.offsets.QuarterEnd.rule_code
    "pandas.tseries.offsets.QuarterEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.n`](api/pandas.tseries.offsets.QuarterEnd.n.html#pandas.tseries.offsets.QuarterEnd.n
    "pandas.tseries.offsets.QuarterEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.startingMonth`](api/pandas.tseries.offsets.QuarterEnd.startingMonth.html#pandas.tseries.offsets.QuarterEnd.startingMonth
    "pandas.tseries.offsets.QuarterEnd.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterEnd.copy`](api/pandas.tseries.offsets.QuarterEnd.copy.html#pandas.tseries.offsets.QuarterEnd.copy
    "pandas.tseries.offsets.QuarterEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_anchored`](api/pandas.tseries.offsets.QuarterEnd.is_anchored.html#pandas.tseries.offsets.QuarterEnd.is_anchored
    "pandas.tseries.offsets.QuarterEnd.is_anchored")() | Return boolean whether the
    frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_on_offset`](api/pandas.tseries.offsets.QuarterEnd.is_on_offset.html#pandas.tseries.offsets.QuarterEnd.is_on_offset
    "pandas.tseries.offsets.QuarterEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_month_start`](api/pandas.tseries.offsets.QuarterEnd.is_month_start.html#pandas.tseries.offsets.QuarterEnd.is_month_start
    "pandas.tseries.offsets.QuarterEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_month_end`](api/pandas.tseries.offsets.QuarterEnd.is_month_end.html#pandas.tseries.offsets.QuarterEnd.is_month_end
    "pandas.tseries.offsets.QuarterEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_quarter_start`](api/pandas.tseries.offsets.QuarterEnd.is_quarter_start.html#pandas.tseries.offsets.QuarterEnd.is_quarter_start
    "pandas.tseries.offsets.QuarterEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_quarter_end`](api/pandas.tseries.offsets.QuarterEnd.is_quarter_end.html#pandas.tseries.offsets.QuarterEnd.is_quarter_end
    "pandas.tseries.offsets.QuarterEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_year_start`](api/pandas.tseries.offsets.QuarterEnd.is_year_start.html#pandas.tseries.offsets.QuarterEnd.is_year_start
    "pandas.tseries.offsets.QuarterEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_year_end`](api/pandas.tseries.offsets.QuarterEnd.is_year_end.html#pandas.tseries.offsets.QuarterEnd.is_year_end
    "pandas.tseries.offsets.QuarterEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterEnd.freqstr`](api/pandas.tseries.offsets.QuarterEnd.freqstr.html#pandas.tseries.offsets.QuarterEnd.freqstr
    "pandas.tseries.offsets.QuarterEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.kwds`](api/pandas.tseries.offsets.QuarterEnd.kwds.html#pandas.tseries.offsets.QuarterEnd.kwds
    "pandas.tseries.offsets.QuarterEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.name`](api/pandas.tseries.offsets.QuarterEnd.name.html#pandas.tseries.offsets.QuarterEnd.name
    "pandas.tseries.offsets.QuarterEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.nanos`](api/pandas.tseries.offsets.QuarterEnd.nanos.html#pandas.tseries.offsets.QuarterEnd.nanos
    "pandas.tseries.offsets.QuarterEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.normalize`](api/pandas.tseries.offsets.QuarterEnd.normalize.html#pandas.tseries.offsets.QuarterEnd.normalize
    "pandas.tseries.offsets.QuarterEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.rule_code`](api/pandas.tseries.offsets.QuarterEnd.rule_code.html#pandas.tseries.offsets.QuarterEnd.rule_code
    "pandas.tseries.offsets.QuarterEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.n`](api/pandas.tseries.offsets.QuarterEnd.n.html#pandas.tseries.offsets.QuarterEnd.n
    "pandas.tseries.offsets.QuarterEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.startingMonth`](api/pandas.tseries.offsets.QuarterEnd.startingMonth.html#pandas.tseries.offsets.QuarterEnd.startingMonth
    "pandas.tseries.offsets.QuarterEnd.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterEnd.copy`](api/pandas.tseries.offsets.QuarterEnd.copy.html#pandas.tseries.offsets.QuarterEnd.copy
    "pandas.tseries.offsets.QuarterEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_anchored`](api/pandas.tseries.offsets.QuarterEnd.is_anchored.html#pandas.tseries.offsets.QuarterEnd.is_anchored
    "pandas.tseries.offsets.QuarterEnd.is_anchored")() | Return boolean whether the
    frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_on_offset`](api/pandas.tseries.offsets.QuarterEnd.is_on_offset.html#pandas.tseries.offsets.QuarterEnd.is_on_offset
    "pandas.tseries.offsets.QuarterEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_month_start`](api/pandas.tseries.offsets.QuarterEnd.is_month_start.html#pandas.tseries.offsets.QuarterEnd.is_month_start
    "pandas.tseries.offsets.QuarterEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_month_end`](api/pandas.tseries.offsets.QuarterEnd.is_month_end.html#pandas.tseries.offsets.QuarterEnd.is_month_end
    "pandas.tseries.offsets.QuarterEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_quarter_start`](api/pandas.tseries.offsets.QuarterEnd.is_quarter_start.html#pandas.tseries.offsets.QuarterEnd.is_quarter_start
    "pandas.tseries.offsets.QuarterEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_quarter_end`](api/pandas.tseries.offsets.QuarterEnd.is_quarter_end.html#pandas.tseries.offsets.QuarterEnd.is_quarter_end
    "pandas.tseries.offsets.QuarterEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_year_start`](api/pandas.tseries.offsets.QuarterEnd.is_year_start.html#pandas.tseries.offsets.QuarterEnd.is_year_start
    "pandas.tseries.offsets.QuarterEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterEnd.is_year_end`](api/pandas.tseries.offsets.QuarterEnd.is_year_end.html#pandas.tseries.offsets.QuarterEnd.is_year_end
    "pandas.tseries.offsets.QuarterEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: QuarterBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`QuarterBegin`](api/pandas.tseries.offsets.QuarterBegin.html#pandas.tseries.offsets.QuarterBegin
    "pandas.tseries.offsets.QuarterBegin") | DateOffset increments between Quarter
    start dates. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterBegin.freqstr`](api/pandas.tseries.offsets.QuarterBegin.freqstr.html#pandas.tseries.offsets.QuarterBegin.freqstr
    "pandas.tseries.offsets.QuarterBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.kwds`](api/pandas.tseries.offsets.QuarterBegin.kwds.html#pandas.tseries.offsets.QuarterBegin.kwds
    "pandas.tseries.offsets.QuarterBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.name`](api/pandas.tseries.offsets.QuarterBegin.name.html#pandas.tseries.offsets.QuarterBegin.name
    "pandas.tseries.offsets.QuarterBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.nanos`](api/pandas.tseries.offsets.QuarterBegin.nanos.html#pandas.tseries.offsets.QuarterBegin.nanos
    "pandas.tseries.offsets.QuarterBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.normalize`](api/pandas.tseries.offsets.QuarterBegin.normalize.html#pandas.tseries.offsets.QuarterBegin.normalize
    "pandas.tseries.offsets.QuarterBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.rule_code`](api/pandas.tseries.offsets.QuarterBegin.rule_code.html#pandas.tseries.offsets.QuarterBegin.rule_code
    "pandas.tseries.offsets.QuarterBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.n`](api/pandas.tseries.offsets.QuarterBegin.n.html#pandas.tseries.offsets.QuarterBegin.n
    "pandas.tseries.offsets.QuarterBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.startingMonth`](api/pandas.tseries.offsets.QuarterBegin.startingMonth.html#pandas.tseries.offsets.QuarterBegin.startingMonth
    "pandas.tseries.offsets.QuarterBegin.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterBegin.copy`](api/pandas.tseries.offsets.QuarterBegin.copy.html#pandas.tseries.offsets.QuarterBegin.copy
    "pandas.tseries.offsets.QuarterBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_anchored`](api/pandas.tseries.offsets.QuarterBegin.is_anchored.html#pandas.tseries.offsets.QuarterBegin.is_anchored
    "pandas.tseries.offsets.QuarterBegin.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_on_offset`](api/pandas.tseries.offsets.QuarterBegin.is_on_offset.html#pandas.tseries.offsets.QuarterBegin.is_on_offset
    "pandas.tseries.offsets.QuarterBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_month_start`](api/pandas.tseries.offsets.QuarterBegin.is_month_start.html#pandas.tseries.offsets.QuarterBegin.is_month_start
    "pandas.tseries.offsets.QuarterBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_month_end`](api/pandas.tseries.offsets.QuarterBegin.is_month_end.html#pandas.tseries.offsets.QuarterBegin.is_month_end
    "pandas.tseries.offsets.QuarterBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_quarter_start`](api/pandas.tseries.offsets.QuarterBegin.is_quarter_start.html#pandas.tseries.offsets.QuarterBegin.is_quarter_start
    "pandas.tseries.offsets.QuarterBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_quarter_end`](api/pandas.tseries.offsets.QuarterBegin.is_quarter_end.html#pandas.tseries.offsets.QuarterBegin.is_quarter_end
    "pandas.tseries.offsets.QuarterBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_year_start`](api/pandas.tseries.offsets.QuarterBegin.is_year_start.html#pandas.tseries.offsets.QuarterBegin.is_year_start
    "pandas.tseries.offsets.QuarterBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_year_end`](api/pandas.tseries.offsets.QuarterBegin.is_year_end.html#pandas.tseries.offsets.QuarterBegin.is_year_end
    "pandas.tseries.offsets.QuarterBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterBegin.freqstr`](api/pandas.tseries.offsets.QuarterBegin.freqstr.html#pandas.tseries.offsets.QuarterBegin.freqstr
    "pandas.tseries.offsets.QuarterBegin.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.kwds`](api/pandas.tseries.offsets.QuarterBegin.kwds.html#pandas.tseries.offsets.QuarterBegin.kwds
    "pandas.tseries.offsets.QuarterBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.name`](api/pandas.tseries.offsets.QuarterBegin.name.html#pandas.tseries.offsets.QuarterBegin.name
    "pandas.tseries.offsets.QuarterBegin.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.nanos`](api/pandas.tseries.offsets.QuarterBegin.nanos.html#pandas.tseries.offsets.QuarterBegin.nanos
    "pandas.tseries.offsets.QuarterBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.normalize`](api/pandas.tseries.offsets.QuarterBegin.normalize.html#pandas.tseries.offsets.QuarterBegin.normalize
    "pandas.tseries.offsets.QuarterBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.rule_code`](api/pandas.tseries.offsets.QuarterBegin.rule_code.html#pandas.tseries.offsets.QuarterBegin.rule_code
    "pandas.tseries.offsets.QuarterBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.n`](api/pandas.tseries.offsets.QuarterBegin.n.html#pandas.tseries.offsets.QuarterBegin.n
    "pandas.tseries.offsets.QuarterBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.startingMonth`](api/pandas.tseries.offsets.QuarterBegin.startingMonth.html#pandas.tseries.offsets.QuarterBegin.startingMonth
    "pandas.tseries.offsets.QuarterBegin.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`QuarterBegin.copy`](api/pandas.tseries.offsets.QuarterBegin.copy.html#pandas.tseries.offsets.QuarterBegin.copy
    "pandas.tseries.offsets.QuarterBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_anchored`](api/pandas.tseries.offsets.QuarterBegin.is_anchored.html#pandas.tseries.offsets.QuarterBegin.is_anchored
    "pandas.tseries.offsets.QuarterBegin.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_on_offset`](api/pandas.tseries.offsets.QuarterBegin.is_on_offset.html#pandas.tseries.offsets.QuarterBegin.is_on_offset
    "pandas.tseries.offsets.QuarterBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_month_start`](api/pandas.tseries.offsets.QuarterBegin.is_month_start.html#pandas.tseries.offsets.QuarterBegin.is_month_start
    "pandas.tseries.offsets.QuarterBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_month_end`](api/pandas.tseries.offsets.QuarterBegin.is_month_end.html#pandas.tseries.offsets.QuarterBegin.is_month_end
    "pandas.tseries.offsets.QuarterBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_quarter_start`](api/pandas.tseries.offsets.QuarterBegin.is_quarter_start.html#pandas.tseries.offsets.QuarterBegin.is_quarter_start
    "pandas.tseries.offsets.QuarterBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_quarter_end`](api/pandas.tseries.offsets.QuarterBegin.is_quarter_end.html#pandas.tseries.offsets.QuarterBegin.is_quarter_end
    "pandas.tseries.offsets.QuarterBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_year_start`](api/pandas.tseries.offsets.QuarterBegin.is_year_start.html#pandas.tseries.offsets.QuarterBegin.is_year_start
    "pandas.tseries.offsets.QuarterBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`QuarterBegin.is_year_end`](api/pandas.tseries.offsets.QuarterBegin.is_year_end.html#pandas.tseries.offsets.QuarterBegin.is_year_end
    "pandas.tseries.offsets.QuarterBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BYearEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BYearEnd`](api/pandas.tseries.offsets.BYearEnd.html#pandas.tseries.offsets.BYearEnd
    "pandas.tseries.offsets.BYearEnd") | DateOffset increments between the last business
    day of the year. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearEnd.freqstr`](api/pandas.tseries.offsets.BYearEnd.freqstr.html#pandas.tseries.offsets.BYearEnd.freqstr
    "pandas.tseries.offsets.BYearEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.kwds`](api/pandas.tseries.offsets.BYearEnd.kwds.html#pandas.tseries.offsets.BYearEnd.kwds
    "pandas.tseries.offsets.BYearEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.name`](api/pandas.tseries.offsets.BYearEnd.name.html#pandas.tseries.offsets.BYearEnd.name
    "pandas.tseries.offsets.BYearEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.nanos`](api/pandas.tseries.offsets.BYearEnd.nanos.html#pandas.tseries.offsets.BYearEnd.nanos
    "pandas.tseries.offsets.BYearEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.normalize`](api/pandas.tseries.offsets.BYearEnd.normalize.html#pandas.tseries.offsets.BYearEnd.normalize
    "pandas.tseries.offsets.BYearEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.rule_code`](api/pandas.tseries.offsets.BYearEnd.rule_code.html#pandas.tseries.offsets.BYearEnd.rule_code
    "pandas.tseries.offsets.BYearEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.n`](api/pandas.tseries.offsets.BYearEnd.n.html#pandas.tseries.offsets.BYearEnd.n
    "pandas.tseries.offsets.BYearEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.month`](api/pandas.tseries.offsets.BYearEnd.month.html#pandas.tseries.offsets.BYearEnd.month
    "pandas.tseries.offsets.BYearEnd.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearEnd.copy`](api/pandas.tseries.offsets.BYearEnd.copy.html#pandas.tseries.offsets.BYearEnd.copy
    "pandas.tseries.offsets.BYearEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_anchored`](api/pandas.tseries.offsets.BYearEnd.is_anchored.html#pandas.tseries.offsets.BYearEnd.is_anchored
    "pandas.tseries.offsets.BYearEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_on_offset`](api/pandas.tseries.offsets.BYearEnd.is_on_offset.html#pandas.tseries.offsets.BYearEnd.is_on_offset
    "pandas.tseries.offsets.BYearEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_month_start`](api/pandas.tseries.offsets.BYearEnd.is_month_start.html#pandas.tseries.offsets.BYearEnd.is_month_start
    "pandas.tseries.offsets.BYearEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_month_end`](api/pandas.tseries.offsets.BYearEnd.is_month_end.html#pandas.tseries.offsets.BYearEnd.is_month_end
    "pandas.tseries.offsets.BYearEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_quarter_start`](api/pandas.tseries.offsets.BYearEnd.is_quarter_start.html#pandas.tseries.offsets.BYearEnd.is_quarter_start
    "pandas.tseries.offsets.BYearEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_quarter_end`](api/pandas.tseries.offsets.BYearEnd.is_quarter_end.html#pandas.tseries.offsets.BYearEnd.is_quarter_end
    "pandas.tseries.offsets.BYearEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_year_start`](api/pandas.tseries.offsets.BYearEnd.is_year_start.html#pandas.tseries.offsets.BYearEnd.is_year_start
    "pandas.tseries.offsets.BYearEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_year_end`](api/pandas.tseries.offsets.BYearEnd.is_year_end.html#pandas.tseries.offsets.BYearEnd.is_year_end
    "pandas.tseries.offsets.BYearEnd.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearEnd.freqstr`](api/pandas.tseries.offsets.BYearEnd.freqstr.html#pandas.tseries.offsets.BYearEnd.freqstr
    "pandas.tseries.offsets.BYearEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.kwds`](api/pandas.tseries.offsets.BYearEnd.kwds.html#pandas.tseries.offsets.BYearEnd.kwds
    "pandas.tseries.offsets.BYearEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.name`](api/pandas.tseries.offsets.BYearEnd.name.html#pandas.tseries.offsets.BYearEnd.name
    "pandas.tseries.offsets.BYearEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.nanos`](api/pandas.tseries.offsets.BYearEnd.nanos.html#pandas.tseries.offsets.BYearEnd.nanos
    "pandas.tseries.offsets.BYearEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.normalize`](api/pandas.tseries.offsets.BYearEnd.normalize.html#pandas.tseries.offsets.BYearEnd.normalize
    "pandas.tseries.offsets.BYearEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.rule_code`](api/pandas.tseries.offsets.BYearEnd.rule_code.html#pandas.tseries.offsets.BYearEnd.rule_code
    "pandas.tseries.offsets.BYearEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.n`](api/pandas.tseries.offsets.BYearEnd.n.html#pandas.tseries.offsets.BYearEnd.n
    "pandas.tseries.offsets.BYearEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.month`](api/pandas.tseries.offsets.BYearEnd.month.html#pandas.tseries.offsets.BYearEnd.month
    "pandas.tseries.offsets.BYearEnd.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearEnd.copy`](api/pandas.tseries.offsets.BYearEnd.copy.html#pandas.tseries.offsets.BYearEnd.copy
    "pandas.tseries.offsets.BYearEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_anchored`](api/pandas.tseries.offsets.BYearEnd.is_anchored.html#pandas.tseries.offsets.BYearEnd.is_anchored
    "pandas.tseries.offsets.BYearEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_on_offset`](api/pandas.tseries.offsets.BYearEnd.is_on_offset.html#pandas.tseries.offsets.BYearEnd.is_on_offset
    "pandas.tseries.offsets.BYearEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_month_start`](api/pandas.tseries.offsets.BYearEnd.is_month_start.html#pandas.tseries.offsets.BYearEnd.is_month_start
    "pandas.tseries.offsets.BYearEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_month_end`](api/pandas.tseries.offsets.BYearEnd.is_month_end.html#pandas.tseries.offsets.BYearEnd.is_month_end
    "pandas.tseries.offsets.BYearEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_quarter_start`](api/pandas.tseries.offsets.BYearEnd.is_quarter_start.html#pandas.tseries.offsets.BYearEnd.is_quarter_start
    "pandas.tseries.offsets.BYearEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_quarter_end`](api/pandas.tseries.offsets.BYearEnd.is_quarter_end.html#pandas.tseries.offsets.BYearEnd.is_quarter_end
    "pandas.tseries.offsets.BYearEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_year_start`](api/pandas.tseries.offsets.BYearEnd.is_year_start.html#pandas.tseries.offsets.BYearEnd.is_year_start
    "pandas.tseries.offsets.BYearEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearEnd.is_year_end`](api/pandas.tseries.offsets.BYearEnd.is_year_end.html#pandas.tseries.offsets.BYearEnd.is_year_end
    "pandas.tseries.offsets.BYearEnd.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: BYearBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`BYearBegin`](api/pandas.tseries.offsets.BYearBegin.html#pandas.tseries.offsets.BYearBegin
    "pandas.tseries.offsets.BYearBegin") | DateOffset increments between the first
    business day of the year. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearBegin.freqstr`](api/pandas.tseries.offsets.BYearBegin.freqstr.html#pandas.tseries.offsets.BYearBegin.freqstr
    "pandas.tseries.offsets.BYearBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.kwds`](api/pandas.tseries.offsets.BYearBegin.kwds.html#pandas.tseries.offsets.BYearBegin.kwds
    "pandas.tseries.offsets.BYearBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.name`](api/pandas.tseries.offsets.BYearBegin.name.html#pandas.tseries.offsets.BYearBegin.name
    "pandas.tseries.offsets.BYearBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.nanos`](api/pandas.tseries.offsets.BYearBegin.nanos.html#pandas.tseries.offsets.BYearBegin.nanos
    "pandas.tseries.offsets.BYearBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.normalize`](api/pandas.tseries.offsets.BYearBegin.normalize.html#pandas.tseries.offsets.BYearBegin.normalize
    "pandas.tseries.offsets.BYearBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.rule_code`](api/pandas.tseries.offsets.BYearBegin.rule_code.html#pandas.tseries.offsets.BYearBegin.rule_code
    "pandas.tseries.offsets.BYearBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.n`](api/pandas.tseries.offsets.BYearBegin.n.html#pandas.tseries.offsets.BYearBegin.n
    "pandas.tseries.offsets.BYearBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.month`](api/pandas.tseries.offsets.BYearBegin.month.html#pandas.tseries.offsets.BYearBegin.month
    "pandas.tseries.offsets.BYearBegin.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearBegin.copy`](api/pandas.tseries.offsets.BYearBegin.copy.html#pandas.tseries.offsets.BYearBegin.copy
    "pandas.tseries.offsets.BYearBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_anchored`](api/pandas.tseries.offsets.BYearBegin.is_anchored.html#pandas.tseries.offsets.BYearBegin.is_anchored
    "pandas.tseries.offsets.BYearBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_on_offset`](api/pandas.tseries.offsets.BYearBegin.is_on_offset.html#pandas.tseries.offsets.BYearBegin.is_on_offset
    "pandas.tseries.offsets.BYearBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_month_start`](api/pandas.tseries.offsets.BYearBegin.is_month_start.html#pandas.tseries.offsets.BYearBegin.is_month_start
    "pandas.tseries.offsets.BYearBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_month_end`](api/pandas.tseries.offsets.BYearBegin.is_month_end.html#pandas.tseries.offsets.BYearBegin.is_month_end
    "pandas.tseries.offsets.BYearBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_quarter_start`](api/pandas.tseries.offsets.BYearBegin.is_quarter_start.html#pandas.tseries.offsets.BYearBegin.is_quarter_start
    "pandas.tseries.offsets.BYearBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_quarter_end`](api/pandas.tseries.offsets.BYearBegin.is_quarter_end.html#pandas.tseries.offsets.BYearBegin.is_quarter_end
    "pandas.tseries.offsets.BYearBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_year_start`](api/pandas.tseries.offsets.BYearBegin.is_year_start.html#pandas.tseries.offsets.BYearBegin.is_year_start
    "pandas.tseries.offsets.BYearBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_year_end`](api/pandas.tseries.offsets.BYearBegin.is_year_end.html#pandas.tseries.offsets.BYearBegin.is_year_end
    "pandas.tseries.offsets.BYearBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearBegin.freqstr`](api/pandas.tseries.offsets.BYearBegin.freqstr.html#pandas.tseries.offsets.BYearBegin.freqstr
    "pandas.tseries.offsets.BYearBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.kwds`](api/pandas.tseries.offsets.BYearBegin.kwds.html#pandas.tseries.offsets.BYearBegin.kwds
    "pandas.tseries.offsets.BYearBegin.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.name`](api/pandas.tseries.offsets.BYearBegin.name.html#pandas.tseries.offsets.BYearBegin.name
    "pandas.tseries.offsets.BYearBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.nanos`](api/pandas.tseries.offsets.BYearBegin.nanos.html#pandas.tseries.offsets.BYearBegin.nanos
    "pandas.tseries.offsets.BYearBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.normalize`](api/pandas.tseries.offsets.BYearBegin.normalize.html#pandas.tseries.offsets.BYearBegin.normalize
    "pandas.tseries.offsets.BYearBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.rule_code`](api/pandas.tseries.offsets.BYearBegin.rule_code.html#pandas.tseries.offsets.BYearBegin.rule_code
    "pandas.tseries.offsets.BYearBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.n`](api/pandas.tseries.offsets.BYearBegin.n.html#pandas.tseries.offsets.BYearBegin.n
    "pandas.tseries.offsets.BYearBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.month`](api/pandas.tseries.offsets.BYearBegin.month.html#pandas.tseries.offsets.BYearBegin.month
    "pandas.tseries.offsets.BYearBegin.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`BYearBegin.copy`](api/pandas.tseries.offsets.BYearBegin.copy.html#pandas.tseries.offsets.BYearBegin.copy
    "pandas.tseries.offsets.BYearBegin.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_anchored`](api/pandas.tseries.offsets.BYearBegin.is_anchored.html#pandas.tseries.offsets.BYearBegin.is_anchored
    "pandas.tseries.offsets.BYearBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_on_offset`](api/pandas.tseries.offsets.BYearBegin.is_on_offset.html#pandas.tseries.offsets.BYearBegin.is_on_offset
    "pandas.tseries.offsets.BYearBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_month_start`](api/pandas.tseries.offsets.BYearBegin.is_month_start.html#pandas.tseries.offsets.BYearBegin.is_month_start
    "pandas.tseries.offsets.BYearBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_month_end`](api/pandas.tseries.offsets.BYearBegin.is_month_end.html#pandas.tseries.offsets.BYearBegin.is_month_end
    "pandas.tseries.offsets.BYearBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_quarter_start`](api/pandas.tseries.offsets.BYearBegin.is_quarter_start.html#pandas.tseries.offsets.BYearBegin.is_quarter_start
    "pandas.tseries.offsets.BYearBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_quarter_end`](api/pandas.tseries.offsets.BYearBegin.is_quarter_end.html#pandas.tseries.offsets.BYearBegin.is_quarter_end
    "pandas.tseries.offsets.BYearBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_year_start`](api/pandas.tseries.offsets.BYearBegin.is_year_start.html#pandas.tseries.offsets.BYearBegin.is_year_start
    "pandas.tseries.offsets.BYearBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`BYearBegin.is_year_end`](api/pandas.tseries.offsets.BYearBegin.is_year_end.html#pandas.tseries.offsets.BYearBegin.is_year_end
    "pandas.tseries.offsets.BYearBegin.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: YearEnd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`YearEnd`](api/pandas.tseries.offsets.YearEnd.html#pandas.tseries.offsets.YearEnd
    "pandas.tseries.offsets.YearEnd") | DateOffset increments between calendar year
    end dates. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearEnd.freqstr`](api/pandas.tseries.offsets.YearEnd.freqstr.html#pandas.tseries.offsets.YearEnd.freqstr
    "pandas.tseries.offsets.YearEnd.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.kwds`](api/pandas.tseries.offsets.YearEnd.kwds.html#pandas.tseries.offsets.YearEnd.kwds
    "pandas.tseries.offsets.YearEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.name`](api/pandas.tseries.offsets.YearEnd.name.html#pandas.tseries.offsets.YearEnd.name
    "pandas.tseries.offsets.YearEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.nanos`](api/pandas.tseries.offsets.YearEnd.nanos.html#pandas.tseries.offsets.YearEnd.nanos
    "pandas.tseries.offsets.YearEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.normalize`](api/pandas.tseries.offsets.YearEnd.normalize.html#pandas.tseries.offsets.YearEnd.normalize
    "pandas.tseries.offsets.YearEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.rule_code`](api/pandas.tseries.offsets.YearEnd.rule_code.html#pandas.tseries.offsets.YearEnd.rule_code
    "pandas.tseries.offsets.YearEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.n`](api/pandas.tseries.offsets.YearEnd.n.html#pandas.tseries.offsets.YearEnd.n
    "pandas.tseries.offsets.YearEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.month`](api/pandas.tseries.offsets.YearEnd.month.html#pandas.tseries.offsets.YearEnd.month
    "pandas.tseries.offsets.YearEnd.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearEnd.copy`](api/pandas.tseries.offsets.YearEnd.copy.html#pandas.tseries.offsets.YearEnd.copy
    "pandas.tseries.offsets.YearEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_anchored`](api/pandas.tseries.offsets.YearEnd.is_anchored.html#pandas.tseries.offsets.YearEnd.is_anchored
    "pandas.tseries.offsets.YearEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_on_offset`](api/pandas.tseries.offsets.YearEnd.is_on_offset.html#pandas.tseries.offsets.YearEnd.is_on_offset
    "pandas.tseries.offsets.YearEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_month_start`](api/pandas.tseries.offsets.YearEnd.is_month_start.html#pandas.tseries.offsets.YearEnd.is_month_start
    "pandas.tseries.offsets.YearEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_month_end`](api/pandas.tseries.offsets.YearEnd.is_month_end.html#pandas.tseries.offsets.YearEnd.is_month_end
    "pandas.tseries.offsets.YearEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_quarter_start`](api/pandas.tseries.offsets.YearEnd.is_quarter_start.html#pandas.tseries.offsets.YearEnd.is_quarter_start
    "pandas.tseries.offsets.YearEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_quarter_end`](api/pandas.tseries.offsets.YearEnd.is_quarter_end.html#pandas.tseries.offsets.YearEnd.is_quarter_end
    "pandas.tseries.offsets.YearEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_year_start`](api/pandas.tseries.offsets.YearEnd.is_year_start.html#pandas.tseries.offsets.YearEnd.is_year_start
    "pandas.tseries.offsets.YearEnd.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_year_end`](api/pandas.tseries.offsets.YearEnd.is_year_end.html#pandas.tseries.offsets.YearEnd.is_year_end
    "pandas.tseries.offsets.YearEnd.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearEnd.freqstr`](api/pandas.tseries.offsets.YearEnd.freqstr.html#pandas.tseries.offsets.YearEnd.freqstr
    "pandas.tseries.offsets.YearEnd.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.kwds`](api/pandas.tseries.offsets.YearEnd.kwds.html#pandas.tseries.offsets.YearEnd.kwds
    "pandas.tseries.offsets.YearEnd.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.name`](api/pandas.tseries.offsets.YearEnd.name.html#pandas.tseries.offsets.YearEnd.name
    "pandas.tseries.offsets.YearEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.nanos`](api/pandas.tseries.offsets.YearEnd.nanos.html#pandas.tseries.offsets.YearEnd.nanos
    "pandas.tseries.offsets.YearEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.normalize`](api/pandas.tseries.offsets.YearEnd.normalize.html#pandas.tseries.offsets.YearEnd.normalize
    "pandas.tseries.offsets.YearEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.rule_code`](api/pandas.tseries.offsets.YearEnd.rule_code.html#pandas.tseries.offsets.YearEnd.rule_code
    "pandas.tseries.offsets.YearEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.n`](api/pandas.tseries.offsets.YearEnd.n.html#pandas.tseries.offsets.YearEnd.n
    "pandas.tseries.offsets.YearEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.month`](api/pandas.tseries.offsets.YearEnd.month.html#pandas.tseries.offsets.YearEnd.month
    "pandas.tseries.offsets.YearEnd.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearEnd.copy`](api/pandas.tseries.offsets.YearEnd.copy.html#pandas.tseries.offsets.YearEnd.copy
    "pandas.tseries.offsets.YearEnd.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_anchored`](api/pandas.tseries.offsets.YearEnd.is_anchored.html#pandas.tseries.offsets.YearEnd.is_anchored
    "pandas.tseries.offsets.YearEnd.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_on_offset`](api/pandas.tseries.offsets.YearEnd.is_on_offset.html#pandas.tseries.offsets.YearEnd.is_on_offset
    "pandas.tseries.offsets.YearEnd.is_on_offset")(dt) | Return boolean whether a
    timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_month_start`](api/pandas.tseries.offsets.YearEnd.is_month_start.html#pandas.tseries.offsets.YearEnd.is_month_start
    "pandas.tseries.offsets.YearEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_month_end`](api/pandas.tseries.offsets.YearEnd.is_month_end.html#pandas.tseries.offsets.YearEnd.is_month_end
    "pandas.tseries.offsets.YearEnd.is_month_end")(ts) | Return boolean whether a
    timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_quarter_start`](api/pandas.tseries.offsets.YearEnd.is_quarter_start.html#pandas.tseries.offsets.YearEnd.is_quarter_start
    "pandas.tseries.offsets.YearEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_quarter_end`](api/pandas.tseries.offsets.YearEnd.is_quarter_end.html#pandas.tseries.offsets.YearEnd.is_quarter_end
    "pandas.tseries.offsets.YearEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_year_start`](api/pandas.tseries.offsets.YearEnd.is_year_start.html#pandas.tseries.offsets.YearEnd.is_year_start
    "pandas.tseries.offsets.YearEnd.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearEnd.is_year_end`](api/pandas.tseries.offsets.YearEnd.is_year_end.html#pandas.tseries.offsets.YearEnd.is_year_end
    "pandas.tseries.offsets.YearEnd.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: YearBegin
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`YearBegin`](api/pandas.tseries.offsets.YearBegin.html#pandas.tseries.offsets.YearBegin
    "pandas.tseries.offsets.YearBegin") | DateOffset increments between calendar year
    begin dates. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearBegin.freqstr`](api/pandas.tseries.offsets.YearBegin.freqstr.html#pandas.tseries.offsets.YearBegin.freqstr
    "pandas.tseries.offsets.YearBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.kwds`](api/pandas.tseries.offsets.YearBegin.kwds.html#pandas.tseries.offsets.YearBegin.kwds
    "pandas.tseries.offsets.YearBegin.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.name`](api/pandas.tseries.offsets.YearBegin.name.html#pandas.tseries.offsets.YearBegin.name
    "pandas.tseries.offsets.YearBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.nanos`](api/pandas.tseries.offsets.YearBegin.nanos.html#pandas.tseries.offsets.YearBegin.nanos
    "pandas.tseries.offsets.YearBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.normalize`](api/pandas.tseries.offsets.YearBegin.normalize.html#pandas.tseries.offsets.YearBegin.normalize
    "pandas.tseries.offsets.YearBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.rule_code`](api/pandas.tseries.offsets.YearBegin.rule_code.html#pandas.tseries.offsets.YearBegin.rule_code
    "pandas.tseries.offsets.YearBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.n`](api/pandas.tseries.offsets.YearBegin.n.html#pandas.tseries.offsets.YearBegin.n
    "pandas.tseries.offsets.YearBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.month`](api/pandas.tseries.offsets.YearBegin.month.html#pandas.tseries.offsets.YearBegin.month
    "pandas.tseries.offsets.YearBegin.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearBegin.copy`](api/pandas.tseries.offsets.YearBegin.copy.html#pandas.tseries.offsets.YearBegin.copy
    "pandas.tseries.offsets.YearBegin.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_anchored`](api/pandas.tseries.offsets.YearBegin.is_anchored.html#pandas.tseries.offsets.YearBegin.is_anchored
    "pandas.tseries.offsets.YearBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_on_offset`](api/pandas.tseries.offsets.YearBegin.is_on_offset.html#pandas.tseries.offsets.YearBegin.is_on_offset
    "pandas.tseries.offsets.YearBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_month_start`](api/pandas.tseries.offsets.YearBegin.is_month_start.html#pandas.tseries.offsets.YearBegin.is_month_start
    "pandas.tseries.offsets.YearBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_month_end`](api/pandas.tseries.offsets.YearBegin.is_month_end.html#pandas.tseries.offsets.YearBegin.is_month_end
    "pandas.tseries.offsets.YearBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_quarter_start`](api/pandas.tseries.offsets.YearBegin.is_quarter_start.html#pandas.tseries.offsets.YearBegin.is_quarter_start
    "pandas.tseries.offsets.YearBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_quarter_end`](api/pandas.tseries.offsets.YearBegin.is_quarter_end.html#pandas.tseries.offsets.YearBegin.is_quarter_end
    "pandas.tseries.offsets.YearBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_year_start`](api/pandas.tseries.offsets.YearBegin.is_year_start.html#pandas.tseries.offsets.YearBegin.is_year_start
    "pandas.tseries.offsets.YearBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_year_end`](api/pandas.tseries.offsets.YearBegin.is_year_end.html#pandas.tseries.offsets.YearBegin.is_year_end
    "pandas.tseries.offsets.YearBegin.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearBegin.freqstr`](api/pandas.tseries.offsets.YearBegin.freqstr.html#pandas.tseries.offsets.YearBegin.freqstr
    "pandas.tseries.offsets.YearBegin.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.kwds`](api/pandas.tseries.offsets.YearBegin.kwds.html#pandas.tseries.offsets.YearBegin.kwds
    "pandas.tseries.offsets.YearBegin.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.name`](api/pandas.tseries.offsets.YearBegin.name.html#pandas.tseries.offsets.YearBegin.name
    "pandas.tseries.offsets.YearBegin.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.nanos`](api/pandas.tseries.offsets.YearBegin.nanos.html#pandas.tseries.offsets.YearBegin.nanos
    "pandas.tseries.offsets.YearBegin.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.normalize`](api/pandas.tseries.offsets.YearBegin.normalize.html#pandas.tseries.offsets.YearBegin.normalize
    "pandas.tseries.offsets.YearBegin.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.rule_code`](api/pandas.tseries.offsets.YearBegin.rule_code.html#pandas.tseries.offsets.YearBegin.rule_code
    "pandas.tseries.offsets.YearBegin.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.n`](api/pandas.tseries.offsets.YearBegin.n.html#pandas.tseries.offsets.YearBegin.n
    "pandas.tseries.offsets.YearBegin.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.month`](api/pandas.tseries.offsets.YearBegin.month.html#pandas.tseries.offsets.YearBegin.month
    "pandas.tseries.offsets.YearBegin.month") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`YearBegin.copy`](api/pandas.tseries.offsets.YearBegin.copy.html#pandas.tseries.offsets.YearBegin.copy
    "pandas.tseries.offsets.YearBegin.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_anchored`](api/pandas.tseries.offsets.YearBegin.is_anchored.html#pandas.tseries.offsets.YearBegin.is_anchored
    "pandas.tseries.offsets.YearBegin.is_anchored")() | (DEPRECATED) Return boolean
    whether the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_on_offset`](api/pandas.tseries.offsets.YearBegin.is_on_offset.html#pandas.tseries.offsets.YearBegin.is_on_offset
    "pandas.tseries.offsets.YearBegin.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_month_start`](api/pandas.tseries.offsets.YearBegin.is_month_start.html#pandas.tseries.offsets.YearBegin.is_month_start
    "pandas.tseries.offsets.YearBegin.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_month_end`](api/pandas.tseries.offsets.YearBegin.is_month_end.html#pandas.tseries.offsets.YearBegin.is_month_end
    "pandas.tseries.offsets.YearBegin.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_quarter_start`](api/pandas.tseries.offsets.YearBegin.is_quarter_start.html#pandas.tseries.offsets.YearBegin.is_quarter_start
    "pandas.tseries.offsets.YearBegin.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_quarter_end`](api/pandas.tseries.offsets.YearBegin.is_quarter_end.html#pandas.tseries.offsets.YearBegin.is_quarter_end
    "pandas.tseries.offsets.YearBegin.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_year_start`](api/pandas.tseries.offsets.YearBegin.is_year_start.html#pandas.tseries.offsets.YearBegin.is_year_start
    "pandas.tseries.offsets.YearBegin.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`YearBegin.is_year_end`](api/pandas.tseries.offsets.YearBegin.is_year_end.html#pandas.tseries.offsets.YearBegin.is_year_end
    "pandas.tseries.offsets.YearBegin.is_year_end")(ts) | Return boolean whether a
    timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: FY5253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`FY5253`](api/pandas.tseries.offsets.FY5253.html#pandas.tseries.offsets.FY5253
    "pandas.tseries.offsets.FY5253") | Describes 52-53 week fiscal year. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253.freqstr`](api/pandas.tseries.offsets.FY5253.freqstr.html#pandas.tseries.offsets.FY5253.freqstr
    "pandas.tseries.offsets.FY5253.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.kwds`](api/pandas.tseries.offsets.FY5253.kwds.html#pandas.tseries.offsets.FY5253.kwds
    "pandas.tseries.offsets.FY5253.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.name`](api/pandas.tseries.offsets.FY5253.name.html#pandas.tseries.offsets.FY5253.name
    "pandas.tseries.offsets.FY5253.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.nanos`](api/pandas.tseries.offsets.FY5253.nanos.html#pandas.tseries.offsets.FY5253.nanos
    "pandas.tseries.offsets.FY5253.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.normalize`](api/pandas.tseries.offsets.FY5253.normalize.html#pandas.tseries.offsets.FY5253.normalize
    "pandas.tseries.offsets.FY5253.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.rule_code`](api/pandas.tseries.offsets.FY5253.rule_code.html#pandas.tseries.offsets.FY5253.rule_code
    "pandas.tseries.offsets.FY5253.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.n`](api/pandas.tseries.offsets.FY5253.n.html#pandas.tseries.offsets.FY5253.n
    "pandas.tseries.offsets.FY5253.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.startingMonth`](api/pandas.tseries.offsets.FY5253.startingMonth.html#pandas.tseries.offsets.FY5253.startingMonth
    "pandas.tseries.offsets.FY5253.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.variation`](api/pandas.tseries.offsets.FY5253.variation.html#pandas.tseries.offsets.FY5253.variation
    "pandas.tseries.offsets.FY5253.variation") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.weekday`](api/pandas.tseries.offsets.FY5253.weekday.html#pandas.tseries.offsets.FY5253.weekday
    "pandas.tseries.offsets.FY5253.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253.copy`](api/pandas.tseries.offsets.FY5253.copy.html#pandas.tseries.offsets.FY5253.copy
    "pandas.tseries.offsets.FY5253.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.get_rule_code_suffix`](api/pandas.tseries.offsets.FY5253.get_rule_code_suffix.html#pandas.tseries.offsets.FY5253.get_rule_code_suffix
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.get_year_end`](api/pandas.tseries.offsets.FY5253.get_year_end.html#pandas.tseries.offsets.FY5253.get_year_end
    "pandas.tseries.offsets.FY5253.get_year_end")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_anchored`](api/pandas.tseries.offsets.FY5253.is_anchored.html#pandas.tseries.offsets.FY5253.is_anchored
    "pandas.tseries.offsets.FY5253.is_anchored")() | Return boolean whether the frequency
    is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_on_offset`](api/pandas.tseries.offsets.FY5253.is_on_offset.html#pandas.tseries.offsets.FY5253.is_on_offset
    "pandas.tseries.offsets.FY5253.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_month_start`](api/pandas.tseries.offsets.FY5253.is_month_start.html#pandas.tseries.offsets.FY5253.is_month_start
    "pandas.tseries.offsets.FY5253.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_month_end`](api/pandas.tseries.offsets.FY5253.is_month_end.html#pandas.tseries.offsets.FY5253.is_month_end
    "pandas.tseries.offsets.FY5253.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_quarter_start`](api/pandas.tseries.offsets.FY5253.is_quarter_start.html#pandas.tseries.offsets.FY5253.is_quarter_start
    "pandas.tseries.offsets.FY5253.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_quarter_end`](api/pandas.tseries.offsets.FY5253.is_quarter_end.html#pandas.tseries.offsets.FY5253.is_quarter_end
    "pandas.tseries.offsets.FY5253.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_year_start`](api/pandas.tseries.offsets.FY5253.is_year_start.html#pandas.tseries.offsets.FY5253.is_year_start
    "pandas.tseries.offsets.FY5253.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_year_end`](api/pandas.tseries.offsets.FY5253.is_year_end.html#pandas.tseries.offsets.FY5253.is_year_end
    "pandas.tseries.offsets.FY5253.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253.freqstr`](api/pandas.tseries.offsets.FY5253.freqstr.html#pandas.tseries.offsets.FY5253.freqstr
    "pandas.tseries.offsets.FY5253.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.kwds`](api/pandas.tseries.offsets.FY5253.kwds.html#pandas.tseries.offsets.FY5253.kwds
    "pandas.tseries.offsets.FY5253.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.name`](api/pandas.tseries.offsets.FY5253.name.html#pandas.tseries.offsets.FY5253.name
    "pandas.tseries.offsets.FY5253.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.nanos`](api/pandas.tseries.offsets.FY5253.nanos.html#pandas.tseries.offsets.FY5253.nanos
    "pandas.tseries.offsets.FY5253.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.normalize`](api/pandas.tseries.offsets.FY5253.normalize.html#pandas.tseries.offsets.FY5253.normalize
    "pandas.tseries.offsets.FY5253.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.rule_code`](api/pandas.tseries.offsets.FY5253.rule_code.html#pandas.tseries.offsets.FY5253.rule_code
    "pandas.tseries.offsets.FY5253.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.n`](api/pandas.tseries.offsets.FY5253.n.html#pandas.tseries.offsets.FY5253.n
    "pandas.tseries.offsets.FY5253.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.startingMonth`](api/pandas.tseries.offsets.FY5253.startingMonth.html#pandas.tseries.offsets.FY5253.startingMonth
    "pandas.tseries.offsets.FY5253.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.variation`](api/pandas.tseries.offsets.FY5253.variation.html#pandas.tseries.offsets.FY5253.variation
    "pandas.tseries.offsets.FY5253.variation") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.weekday`](api/pandas.tseries.offsets.FY5253.weekday.html#pandas.tseries.offsets.FY5253.weekday
    "pandas.tseries.offsets.FY5253.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253.copy`](api/pandas.tseries.offsets.FY5253.copy.html#pandas.tseries.offsets.FY5253.copy
    "pandas.tseries.offsets.FY5253.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.get_rule_code_suffix`](api/pandas.tseries.offsets.FY5253.get_rule_code_suffix.html#pandas.tseries.offsets.FY5253.get_rule_code_suffix
    "pandas.tseries.offsets.FY5253.get_rule_code_suffix")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.get_year_end`](api/pandas.tseries.offsets.FY5253.get_year_end.html#pandas.tseries.offsets.FY5253.get_year_end
    "pandas.tseries.offsets.FY5253.get_year_end")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_anchored`](api/pandas.tseries.offsets.FY5253.is_anchored.html#pandas.tseries.offsets.FY5253.is_anchored
    "pandas.tseries.offsets.FY5253.is_anchored")() | Return boolean whether the frequency
    is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_on_offset`](api/pandas.tseries.offsets.FY5253.is_on_offset.html#pandas.tseries.offsets.FY5253.is_on_offset
    "pandas.tseries.offsets.FY5253.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_month_start`](api/pandas.tseries.offsets.FY5253.is_month_start.html#pandas.tseries.offsets.FY5253.is_month_start
    "pandas.tseries.offsets.FY5253.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_month_end`](api/pandas.tseries.offsets.FY5253.is_month_end.html#pandas.tseries.offsets.FY5253.is_month_end
    "pandas.tseries.offsets.FY5253.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_quarter_start`](api/pandas.tseries.offsets.FY5253.is_quarter_start.html#pandas.tseries.offsets.FY5253.is_quarter_start
    "pandas.tseries.offsets.FY5253.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_quarter_end`](api/pandas.tseries.offsets.FY5253.is_quarter_end.html#pandas.tseries.offsets.FY5253.is_quarter_end
    "pandas.tseries.offsets.FY5253.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_year_start`](api/pandas.tseries.offsets.FY5253.is_year_start.html#pandas.tseries.offsets.FY5253.is_year_start
    "pandas.tseries.offsets.FY5253.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253.is_year_end`](api/pandas.tseries.offsets.FY5253.is_year_end.html#pandas.tseries.offsets.FY5253.is_year_end
    "pandas.tseries.offsets.FY5253.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: FY5253Quarter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`FY5253Quarter`](api/pandas.tseries.offsets.FY5253Quarter.html#pandas.tseries.offsets.FY5253Quarter
    "pandas.tseries.offsets.FY5253Quarter") | DateOffset increments between business
    quarter dates for 52-53 week fiscal year. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253Quarter.freqstr`](api/pandas.tseries.offsets.FY5253Quarter.freqstr.html#pandas.tseries.offsets.FY5253Quarter.freqstr
    "pandas.tseries.offsets.FY5253Quarter.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.kwds`](api/pandas.tseries.offsets.FY5253Quarter.kwds.html#pandas.tseries.offsets.FY5253Quarter.kwds
    "pandas.tseries.offsets.FY5253Quarter.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.name`](api/pandas.tseries.offsets.FY5253Quarter.name.html#pandas.tseries.offsets.FY5253Quarter.name
    "pandas.tseries.offsets.FY5253Quarter.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.nanos`](api/pandas.tseries.offsets.FY5253Quarter.nanos.html#pandas.tseries.offsets.FY5253Quarter.nanos
    "pandas.tseries.offsets.FY5253Quarter.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.normalize`](api/pandas.tseries.offsets.FY5253Quarter.normalize.html#pandas.tseries.offsets.FY5253Quarter.normalize
    "pandas.tseries.offsets.FY5253Quarter.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.rule_code`](api/pandas.tseries.offsets.FY5253Quarter.rule_code.html#pandas.tseries.offsets.FY5253Quarter.rule_code
    "pandas.tseries.offsets.FY5253Quarter.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.n`](api/pandas.tseries.offsets.FY5253Quarter.n.html#pandas.tseries.offsets.FY5253Quarter.n
    "pandas.tseries.offsets.FY5253Quarter.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.qtr_with_extra_week`](api/pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week.html#pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week
    "pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.startingMonth`](api/pandas.tseries.offsets.FY5253Quarter.startingMonth.html#pandas.tseries.offsets.FY5253Quarter.startingMonth
    "pandas.tseries.offsets.FY5253Quarter.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.variation`](api/pandas.tseries.offsets.FY5253Quarter.variation.html#pandas.tseries.offsets.FY5253Quarter.variation
    "pandas.tseries.offsets.FY5253Quarter.variation") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.weekday`](api/pandas.tseries.offsets.FY5253Quarter.weekday.html#pandas.tseries.offsets.FY5253Quarter.weekday
    "pandas.tseries.offsets.FY5253Quarter.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253Quarter.copy`](api/pandas.tseries.offsets.FY5253Quarter.copy.html#pandas.tseries.offsets.FY5253Quarter.copy
    "pandas.tseries.offsets.FY5253Quarter.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.get_rule_code_suffix`](api/pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix.html#pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix
    "pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.get_weeks`](api/pandas.tseries.offsets.FY5253Quarter.get_weeks.html#pandas.tseries.offsets.FY5253Quarter.get_weeks
    "pandas.tseries.offsets.FY5253Quarter.get_weeks")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_anchored`](api/pandas.tseries.offsets.FY5253Quarter.is_anchored.html#pandas.tseries.offsets.FY5253Quarter.is_anchored
    "pandas.tseries.offsets.FY5253Quarter.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_on_offset`](api/pandas.tseries.offsets.FY5253Quarter.is_on_offset.html#pandas.tseries.offsets.FY5253Quarter.is_on_offset
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.year_has_extra_week`](api/pandas.tseries.offsets.FY5253Quarter.year_has_extra_week.html#pandas.tseries.offsets.FY5253Quarter.year_has_extra_week
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_month_start`](api/pandas.tseries.offsets.FY5253Quarter.is_month_start.html#pandas.tseries.offsets.FY5253Quarter.is_month_start
    "pandas.tseries.offsets.FY5253Quarter.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_month_end`](api/pandas.tseries.offsets.FY5253Quarter.is_month_end.html#pandas.tseries.offsets.FY5253Quarter.is_month_end
    "pandas.tseries.offsets.FY5253Quarter.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_quarter_start`](api/pandas.tseries.offsets.FY5253Quarter.is_quarter_start.html#pandas.tseries.offsets.FY5253Quarter.is_quarter_start
    "pandas.tseries.offsets.FY5253Quarter.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_quarter_end`](api/pandas.tseries.offsets.FY5253Quarter.is_quarter_end.html#pandas.tseries.offsets.FY5253Quarter.is_quarter_end
    "pandas.tseries.offsets.FY5253Quarter.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_year_start`](api/pandas.tseries.offsets.FY5253Quarter.is_year_start.html#pandas.tseries.offsets.FY5253Quarter.is_year_start
    "pandas.tseries.offsets.FY5253Quarter.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_year_end`](api/pandas.tseries.offsets.FY5253Quarter.is_year_end.html#pandas.tseries.offsets.FY5253Quarter.is_year_end
    "pandas.tseries.offsets.FY5253Quarter.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253Quarter.freqstr`](api/pandas.tseries.offsets.FY5253Quarter.freqstr.html#pandas.tseries.offsets.FY5253Quarter.freqstr
    "pandas.tseries.offsets.FY5253Quarter.freqstr") | Return a string representing
    the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.kwds`](api/pandas.tseries.offsets.FY5253Quarter.kwds.html#pandas.tseries.offsets.FY5253Quarter.kwds
    "pandas.tseries.offsets.FY5253Quarter.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.name`](api/pandas.tseries.offsets.FY5253Quarter.name.html#pandas.tseries.offsets.FY5253Quarter.name
    "pandas.tseries.offsets.FY5253Quarter.name") | Return a string representing the
    base frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.nanos`](api/pandas.tseries.offsets.FY5253Quarter.nanos.html#pandas.tseries.offsets.FY5253Quarter.nanos
    "pandas.tseries.offsets.FY5253Quarter.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.normalize`](api/pandas.tseries.offsets.FY5253Quarter.normalize.html#pandas.tseries.offsets.FY5253Quarter.normalize
    "pandas.tseries.offsets.FY5253Quarter.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.rule_code`](api/pandas.tseries.offsets.FY5253Quarter.rule_code.html#pandas.tseries.offsets.FY5253Quarter.rule_code
    "pandas.tseries.offsets.FY5253Quarter.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.n`](api/pandas.tseries.offsets.FY5253Quarter.n.html#pandas.tseries.offsets.FY5253Quarter.n
    "pandas.tseries.offsets.FY5253Quarter.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.qtr_with_extra_week`](api/pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week.html#pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week
    "pandas.tseries.offsets.FY5253Quarter.qtr_with_extra_week") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.startingMonth`](api/pandas.tseries.offsets.FY5253Quarter.startingMonth.html#pandas.tseries.offsets.FY5253Quarter.startingMonth
    "pandas.tseries.offsets.FY5253Quarter.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.variation`](api/pandas.tseries.offsets.FY5253Quarter.variation.html#pandas.tseries.offsets.FY5253Quarter.variation
    "pandas.tseries.offsets.FY5253Quarter.variation") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.weekday`](api/pandas.tseries.offsets.FY5253Quarter.weekday.html#pandas.tseries.offsets.FY5253Quarter.weekday
    "pandas.tseries.offsets.FY5253Quarter.weekday") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`FY5253Quarter.copy`](api/pandas.tseries.offsets.FY5253Quarter.copy.html#pandas.tseries.offsets.FY5253Quarter.copy
    "pandas.tseries.offsets.FY5253Quarter.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.get_rule_code_suffix`](api/pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix.html#pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix
    "pandas.tseries.offsets.FY5253Quarter.get_rule_code_suffix")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.get_weeks`](api/pandas.tseries.offsets.FY5253Quarter.get_weeks.html#pandas.tseries.offsets.FY5253Quarter.get_weeks
    "pandas.tseries.offsets.FY5253Quarter.get_weeks")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_anchored`](api/pandas.tseries.offsets.FY5253Quarter.is_anchored.html#pandas.tseries.offsets.FY5253Quarter.is_anchored
    "pandas.tseries.offsets.FY5253Quarter.is_anchored")() | Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_on_offset`](api/pandas.tseries.offsets.FY5253Quarter.is_on_offset.html#pandas.tseries.offsets.FY5253Quarter.is_on_offset
    "pandas.tseries.offsets.FY5253Quarter.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.year_has_extra_week`](api/pandas.tseries.offsets.FY5253Quarter.year_has_extra_week.html#pandas.tseries.offsets.FY5253Quarter.year_has_extra_week
    "pandas.tseries.offsets.FY5253Quarter.year_has_extra_week")(dt) |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_month_start`](api/pandas.tseries.offsets.FY5253Quarter.is_month_start.html#pandas.tseries.offsets.FY5253Quarter.is_month_start
    "pandas.tseries.offsets.FY5253Quarter.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_month_end`](api/pandas.tseries.offsets.FY5253Quarter.is_month_end.html#pandas.tseries.offsets.FY5253Quarter.is_month_end
    "pandas.tseries.offsets.FY5253Quarter.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_quarter_start`](api/pandas.tseries.offsets.FY5253Quarter.is_quarter_start.html#pandas.tseries.offsets.FY5253Quarter.is_quarter_start
    "pandas.tseries.offsets.FY5253Quarter.is_quarter_start")(ts) | Return boolean
    whether a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_quarter_end`](api/pandas.tseries.offsets.FY5253Quarter.is_quarter_end.html#pandas.tseries.offsets.FY5253Quarter.is_quarter_end
    "pandas.tseries.offsets.FY5253Quarter.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_year_start`](api/pandas.tseries.offsets.FY5253Quarter.is_year_start.html#pandas.tseries.offsets.FY5253Quarter.is_year_start
    "pandas.tseries.offsets.FY5253Quarter.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`FY5253Quarter.is_year_end`](api/pandas.tseries.offsets.FY5253Quarter.is_year_end.html#pandas.tseries.offsets.FY5253Quarter.is_year_end
    "pandas.tseries.offsets.FY5253Quarter.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Easter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Easter`](api/pandas.tseries.offsets.Easter.html#pandas.tseries.offsets.Easter
    "pandas.tseries.offsets.Easter") | DateOffset for the Easter holiday using logic
    defined in dateutil. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Easter.freqstr`](api/pandas.tseries.offsets.Easter.freqstr.html#pandas.tseries.offsets.Easter.freqstr
    "pandas.tseries.offsets.Easter.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.kwds`](api/pandas.tseries.offsets.Easter.kwds.html#pandas.tseries.offsets.Easter.kwds
    "pandas.tseries.offsets.Easter.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.name`](api/pandas.tseries.offsets.Easter.name.html#pandas.tseries.offsets.Easter.name
    "pandas.tseries.offsets.Easter.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.nanos`](api/pandas.tseries.offsets.Easter.nanos.html#pandas.tseries.offsets.Easter.nanos
    "pandas.tseries.offsets.Easter.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.normalize`](api/pandas.tseries.offsets.Easter.normalize.html#pandas.tseries.offsets.Easter.normalize
    "pandas.tseries.offsets.Easter.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.rule_code`](api/pandas.tseries.offsets.Easter.rule_code.html#pandas.tseries.offsets.Easter.rule_code
    "pandas.tseries.offsets.Easter.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.n`](api/pandas.tseries.offsets.Easter.n.html#pandas.tseries.offsets.Easter.n
    "pandas.tseries.offsets.Easter.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Easter.copy`](api/pandas.tseries.offsets.Easter.copy.html#pandas.tseries.offsets.Easter.copy
    "pandas.tseries.offsets.Easter.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_anchored`](api/pandas.tseries.offsets.Easter.is_anchored.html#pandas.tseries.offsets.Easter.is_anchored
    "pandas.tseries.offsets.Easter.is_anchored")() | (DEPRECATED) Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_on_offset`](api/pandas.tseries.offsets.Easter.is_on_offset.html#pandas.tseries.offsets.Easter.is_on_offset
    "pandas.tseries.offsets.Easter.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_month_start`](api/pandas.tseries.offsets.Easter.is_month_start.html#pandas.tseries.offsets.Easter.is_month_start
    "pandas.tseries.offsets.Easter.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_month_end`](api/pandas.tseries.offsets.Easter.is_month_end.html#pandas.tseries.offsets.Easter.is_month_end
    "pandas.tseries.offsets.Easter.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_quarter_start`](api/pandas.tseries.offsets.Easter.is_quarter_start.html#pandas.tseries.offsets.Easter.is_quarter_start
    "pandas.tseries.offsets.Easter.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_quarter_end`](api/pandas.tseries.offsets.Easter.is_quarter_end.html#pandas.tseries.offsets.Easter.is_quarter_end
    "pandas.tseries.offsets.Easter.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_year_start`](api/pandas.tseries.offsets.Easter.is_year_start.html#pandas.tseries.offsets.Easter.is_year_start
    "pandas.tseries.offsets.Easter.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_year_end`](api/pandas.tseries.offsets.Easter.is_year_end.html#pandas.tseries.offsets.Easter.is_year_end
    "pandas.tseries.offsets.Easter.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Easter.freqstr`](api/pandas.tseries.offsets.Easter.freqstr.html#pandas.tseries.offsets.Easter.freqstr
    "pandas.tseries.offsets.Easter.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.kwds`](api/pandas.tseries.offsets.Easter.kwds.html#pandas.tseries.offsets.Easter.kwds
    "pandas.tseries.offsets.Easter.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.name`](api/pandas.tseries.offsets.Easter.name.html#pandas.tseries.offsets.Easter.name
    "pandas.tseries.offsets.Easter.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.nanos`](api/pandas.tseries.offsets.Easter.nanos.html#pandas.tseries.offsets.Easter.nanos
    "pandas.tseries.offsets.Easter.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.normalize`](api/pandas.tseries.offsets.Easter.normalize.html#pandas.tseries.offsets.Easter.normalize
    "pandas.tseries.offsets.Easter.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.rule_code`](api/pandas.tseries.offsets.Easter.rule_code.html#pandas.tseries.offsets.Easter.rule_code
    "pandas.tseries.offsets.Easter.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.n`](api/pandas.tseries.offsets.Easter.n.html#pandas.tseries.offsets.Easter.n
    "pandas.tseries.offsets.Easter.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Easter.copy`](api/pandas.tseries.offsets.Easter.copy.html#pandas.tseries.offsets.Easter.copy
    "pandas.tseries.offsets.Easter.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_anchored`](api/pandas.tseries.offsets.Easter.is_anchored.html#pandas.tseries.offsets.Easter.is_anchored
    "pandas.tseries.offsets.Easter.is_anchored")() | (DEPRECATED) Return boolean whether
    the frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_on_offset`](api/pandas.tseries.offsets.Easter.is_on_offset.html#pandas.tseries.offsets.Easter.is_on_offset
    "pandas.tseries.offsets.Easter.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_month_start`](api/pandas.tseries.offsets.Easter.is_month_start.html#pandas.tseries.offsets.Easter.is_month_start
    "pandas.tseries.offsets.Easter.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_month_end`](api/pandas.tseries.offsets.Easter.is_month_end.html#pandas.tseries.offsets.Easter.is_month_end
    "pandas.tseries.offsets.Easter.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_quarter_start`](api/pandas.tseries.offsets.Easter.is_quarter_start.html#pandas.tseries.offsets.Easter.is_quarter_start
    "pandas.tseries.offsets.Easter.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_quarter_end`](api/pandas.tseries.offsets.Easter.is_quarter_end.html#pandas.tseries.offsets.Easter.is_quarter_end
    "pandas.tseries.offsets.Easter.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_year_start`](api/pandas.tseries.offsets.Easter.is_year_start.html#pandas.tseries.offsets.Easter.is_year_start
    "pandas.tseries.offsets.Easter.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Easter.is_year_end`](api/pandas.tseries.offsets.Easter.is_year_end.html#pandas.tseries.offsets.Easter.is_year_end
    "pandas.tseries.offsets.Easter.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Tick
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Tick`](api/pandas.tseries.offsets.Tick.html#pandas.tseries.offsets.Tick
    "pandas.tseries.offsets.Tick") |  |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Tick.delta`](api/pandas.tseries.offsets.Tick.delta.html#pandas.tseries.offsets.Tick.delta
    "pandas.tseries.offsets.Tick.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.freqstr`](api/pandas.tseries.offsets.Tick.freqstr.html#pandas.tseries.offsets.Tick.freqstr
    "pandas.tseries.offsets.Tick.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.kwds`](api/pandas.tseries.offsets.Tick.kwds.html#pandas.tseries.offsets.Tick.kwds
    "pandas.tseries.offsets.Tick.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.name`](api/pandas.tseries.offsets.Tick.name.html#pandas.tseries.offsets.Tick.name
    "pandas.tseries.offsets.Tick.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.nanos`](api/pandas.tseries.offsets.Tick.nanos.html#pandas.tseries.offsets.Tick.nanos
    "pandas.tseries.offsets.Tick.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.normalize`](api/pandas.tseries.offsets.Tick.normalize.html#pandas.tseries.offsets.Tick.normalize
    "pandas.tseries.offsets.Tick.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.rule_code`](api/pandas.tseries.offsets.Tick.rule_code.html#pandas.tseries.offsets.Tick.rule_code
    "pandas.tseries.offsets.Tick.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.n`](api/pandas.tseries.offsets.Tick.n.html#pandas.tseries.offsets.Tick.n
    "pandas.tseries.offsets.Tick.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Tick.copy`](api/pandas.tseries.offsets.Tick.copy.html#pandas.tseries.offsets.Tick.copy
    "pandas.tseries.offsets.Tick.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_anchored`](api/pandas.tseries.offsets.Tick.is_anchored.html#pandas.tseries.offsets.Tick.is_anchored
    "pandas.tseries.offsets.Tick.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_on_offset`](api/pandas.tseries.offsets.Tick.is_on_offset.html#pandas.tseries.offsets.Tick.is_on_offset
    "pandas.tseries.offsets.Tick.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_month_start`](api/pandas.tseries.offsets.Tick.is_month_start.html#pandas.tseries.offsets.Tick.is_month_start
    "pandas.tseries.offsets.Tick.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_month_end`](api/pandas.tseries.offsets.Tick.is_month_end.html#pandas.tseries.offsets.Tick.is_month_end
    "pandas.tseries.offsets.Tick.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_quarter_start`](api/pandas.tseries.offsets.Tick.is_quarter_start.html#pandas.tseries.offsets.Tick.is_quarter_start
    "pandas.tseries.offsets.Tick.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_quarter_end`](api/pandas.tseries.offsets.Tick.is_quarter_end.html#pandas.tseries.offsets.Tick.is_quarter_end
    "pandas.tseries.offsets.Tick.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_year_start`](api/pandas.tseries.offsets.Tick.is_year_start.html#pandas.tseries.offsets.Tick.is_year_start
    "pandas.tseries.offsets.Tick.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_year_end`](api/pandas.tseries.offsets.Tick.is_year_end.html#pandas.tseries.offsets.Tick.is_year_end
    "pandas.tseries.offsets.Tick.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Tick.delta`](api/pandas.tseries.offsets.Tick.delta.html#pandas.tseries.offsets.Tick.delta
    "pandas.tseries.offsets.Tick.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.freqstr`](api/pandas.tseries.offsets.Tick.freqstr.html#pandas.tseries.offsets.Tick.freqstr
    "pandas.tseries.offsets.Tick.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.kwds`](api/pandas.tseries.offsets.Tick.kwds.html#pandas.tseries.offsets.Tick.kwds
    "pandas.tseries.offsets.Tick.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.name`](api/pandas.tseries.offsets.Tick.name.html#pandas.tseries.offsets.Tick.name
    "pandas.tseries.offsets.Tick.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.nanos`](api/pandas.tseries.offsets.Tick.nanos.html#pandas.tseries.offsets.Tick.nanos
    "pandas.tseries.offsets.Tick.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.normalize`](api/pandas.tseries.offsets.Tick.normalize.html#pandas.tseries.offsets.Tick.normalize
    "pandas.tseries.offsets.Tick.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.rule_code`](api/pandas.tseries.offsets.Tick.rule_code.html#pandas.tseries.offsets.Tick.rule_code
    "pandas.tseries.offsets.Tick.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.n`](api/pandas.tseries.offsets.Tick.n.html#pandas.tseries.offsets.Tick.n
    "pandas.tseries.offsets.Tick.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Tick.copy`](api/pandas.tseries.offsets.Tick.copy.html#pandas.tseries.offsets.Tick.copy
    "pandas.tseries.offsets.Tick.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_anchored`](api/pandas.tseries.offsets.Tick.is_anchored.html#pandas.tseries.offsets.Tick.is_anchored
    "pandas.tseries.offsets.Tick.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_on_offset`](api/pandas.tseries.offsets.Tick.is_on_offset.html#pandas.tseries.offsets.Tick.is_on_offset
    "pandas.tseries.offsets.Tick.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_month_start`](api/pandas.tseries.offsets.Tick.is_month_start.html#pandas.tseries.offsets.Tick.is_month_start
    "pandas.tseries.offsets.Tick.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_month_end`](api/pandas.tseries.offsets.Tick.is_month_end.html#pandas.tseries.offsets.Tick.is_month_end
    "pandas.tseries.offsets.Tick.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_quarter_start`](api/pandas.tseries.offsets.Tick.is_quarter_start.html#pandas.tseries.offsets.Tick.is_quarter_start
    "pandas.tseries.offsets.Tick.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_quarter_end`](api/pandas.tseries.offsets.Tick.is_quarter_end.html#pandas.tseries.offsets.Tick.is_quarter_end
    "pandas.tseries.offsets.Tick.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_year_start`](api/pandas.tseries.offsets.Tick.is_year_start.html#pandas.tseries.offsets.Tick.is_year_start
    "pandas.tseries.offsets.Tick.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tick.is_year_end`](api/pandas.tseries.offsets.Tick.is_year_end.html#pandas.tseries.offsets.Tick.is_year_end
    "pandas.tseries.offsets.Tick.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Day
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Day`](api/pandas.tseries.offsets.Day.html#pandas.tseries.offsets.Day "pandas.tseries.offsets.Day")
    | Offset `n` days. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Day.delta`](api/pandas.tseries.offsets.Day.delta.html#pandas.tseries.offsets.Day.delta
    "pandas.tseries.offsets.Day.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.freqstr`](api/pandas.tseries.offsets.Day.freqstr.html#pandas.tseries.offsets.Day.freqstr
    "pandas.tseries.offsets.Day.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.kwds`](api/pandas.tseries.offsets.Day.kwds.html#pandas.tseries.offsets.Day.kwds
    "pandas.tseries.offsets.Day.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.name`](api/pandas.tseries.offsets.Day.name.html#pandas.tseries.offsets.Day.name
    "pandas.tseries.offsets.Day.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.nanos`](api/pandas.tseries.offsets.Day.nanos.html#pandas.tseries.offsets.Day.nanos
    "pandas.tseries.offsets.Day.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.normalize`](api/pandas.tseries.offsets.Day.normalize.html#pandas.tseries.offsets.Day.normalize
    "pandas.tseries.offsets.Day.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.rule_code`](api/pandas.tseries.offsets.Day.rule_code.html#pandas.tseries.offsets.Day.rule_code
    "pandas.tseries.offsets.Day.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.n`](api/pandas.tseries.offsets.Day.n.html#pandas.tseries.offsets.Day.n
    "pandas.tseries.offsets.Day.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Day.copy`](api/pandas.tseries.offsets.Day.copy.html#pandas.tseries.offsets.Day.copy
    "pandas.tseries.offsets.Day.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_anchored`](api/pandas.tseries.offsets.Day.is_anchored.html#pandas.tseries.offsets.Day.is_anchored
    "pandas.tseries.offsets.Day.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_on_offset`](api/pandas.tseries.offsets.Day.is_on_offset.html#pandas.tseries.offsets.Day.is_on_offset
    "pandas.tseries.offsets.Day.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_month_start`](api/pandas.tseries.offsets.Day.is_month_start.html#pandas.tseries.offsets.Day.is_month_start
    "pandas.tseries.offsets.Day.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_month_end`](api/pandas.tseries.offsets.Day.is_month_end.html#pandas.tseries.offsets.Day.is_month_end
    "pandas.tseries.offsets.Day.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_quarter_start`](api/pandas.tseries.offsets.Day.is_quarter_start.html#pandas.tseries.offsets.Day.is_quarter_start
    "pandas.tseries.offsets.Day.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_quarter_end`](api/pandas.tseries.offsets.Day.is_quarter_end.html#pandas.tseries.offsets.Day.is_quarter_end
    "pandas.tseries.offsets.Day.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_year_start`](api/pandas.tseries.offsets.Day.is_year_start.html#pandas.tseries.offsets.Day.is_year_start
    "pandas.tseries.offsets.Day.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_year_end`](api/pandas.tseries.offsets.Day.is_year_end.html#pandas.tseries.offsets.Day.is_year_end
    "pandas.tseries.offsets.Day.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Day.delta`](api/pandas.tseries.offsets.Day.delta.html#pandas.tseries.offsets.Day.delta
    "pandas.tseries.offsets.Day.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.freqstr`](api/pandas.tseries.offsets.Day.freqstr.html#pandas.tseries.offsets.Day.freqstr
    "pandas.tseries.offsets.Day.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.kwds`](api/pandas.tseries.offsets.Day.kwds.html#pandas.tseries.offsets.Day.kwds
    "pandas.tseries.offsets.Day.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.name`](api/pandas.tseries.offsets.Day.name.html#pandas.tseries.offsets.Day.name
    "pandas.tseries.offsets.Day.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.nanos`](api/pandas.tseries.offsets.Day.nanos.html#pandas.tseries.offsets.Day.nanos
    "pandas.tseries.offsets.Day.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.normalize`](api/pandas.tseries.offsets.Day.normalize.html#pandas.tseries.offsets.Day.normalize
    "pandas.tseries.offsets.Day.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.rule_code`](api/pandas.tseries.offsets.Day.rule_code.html#pandas.tseries.offsets.Day.rule_code
    "pandas.tseries.offsets.Day.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.n`](api/pandas.tseries.offsets.Day.n.html#pandas.tseries.offsets.Day.n
    "pandas.tseries.offsets.Day.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Day.copy`](api/pandas.tseries.offsets.Day.copy.html#pandas.tseries.offsets.Day.copy
    "pandas.tseries.offsets.Day.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_anchored`](api/pandas.tseries.offsets.Day.is_anchored.html#pandas.tseries.offsets.Day.is_anchored
    "pandas.tseries.offsets.Day.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_on_offset`](api/pandas.tseries.offsets.Day.is_on_offset.html#pandas.tseries.offsets.Day.is_on_offset
    "pandas.tseries.offsets.Day.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_month_start`](api/pandas.tseries.offsets.Day.is_month_start.html#pandas.tseries.offsets.Day.is_month_start
    "pandas.tseries.offsets.Day.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_month_end`](api/pandas.tseries.offsets.Day.is_month_end.html#pandas.tseries.offsets.Day.is_month_end
    "pandas.tseries.offsets.Day.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_quarter_start`](api/pandas.tseries.offsets.Day.is_quarter_start.html#pandas.tseries.offsets.Day.is_quarter_start
    "pandas.tseries.offsets.Day.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_quarter_end`](api/pandas.tseries.offsets.Day.is_quarter_end.html#pandas.tseries.offsets.Day.is_quarter_end
    "pandas.tseries.offsets.Day.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_year_start`](api/pandas.tseries.offsets.Day.is_year_start.html#pandas.tseries.offsets.Day.is_year_start
    "pandas.tseries.offsets.Day.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Day.is_year_end`](api/pandas.tseries.offsets.Day.is_year_end.html#pandas.tseries.offsets.Day.is_year_end
    "pandas.tseries.offsets.Day.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Hour
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Hour`](api/pandas.tseries.offsets.Hour.html#pandas.tseries.offsets.Hour
    "pandas.tseries.offsets.Hour") | Offset `n` hours. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Hour.delta`](api/pandas.tseries.offsets.Hour.delta.html#pandas.tseries.offsets.Hour.delta
    "pandas.tseries.offsets.Hour.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.freqstr`](api/pandas.tseries.offsets.Hour.freqstr.html#pandas.tseries.offsets.Hour.freqstr
    "pandas.tseries.offsets.Hour.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.kwds`](api/pandas.tseries.offsets.Hour.kwds.html#pandas.tseries.offsets.Hour.kwds
    "pandas.tseries.offsets.Hour.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.name`](api/pandas.tseries.offsets.Hour.name.html#pandas.tseries.offsets.Hour.name
    "pandas.tseries.offsets.Hour.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.nanos`](api/pandas.tseries.offsets.Hour.nanos.html#pandas.tseries.offsets.Hour.nanos
    "pandas.tseries.offsets.Hour.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.normalize`](api/pandas.tseries.offsets.Hour.normalize.html#pandas.tseries.offsets.Hour.normalize
    "pandas.tseries.offsets.Hour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.rule_code`](api/pandas.tseries.offsets.Hour.rule_code.html#pandas.tseries.offsets.Hour.rule_code
    "pandas.tseries.offsets.Hour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.n`](api/pandas.tseries.offsets.Hour.n.html#pandas.tseries.offsets.Hour.n
    "pandas.tseries.offsets.Hour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Hour.copy`](api/pandas.tseries.offsets.Hour.copy.html#pandas.tseries.offsets.Hour.copy
    "pandas.tseries.offsets.Hour.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_anchored`](api/pandas.tseries.offsets.Hour.is_anchored.html#pandas.tseries.offsets.Hour.is_anchored
    "pandas.tseries.offsets.Hour.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_on_offset`](api/pandas.tseries.offsets.Hour.is_on_offset.html#pandas.tseries.offsets.Hour.is_on_offset
    "pandas.tseries.offsets.Hour.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_month_start`](api/pandas.tseries.offsets.Hour.is_month_start.html#pandas.tseries.offsets.Hour.is_month_start
    "pandas.tseries.offsets.Hour.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_month_end`](api/pandas.tseries.offsets.Hour.is_month_end.html#pandas.tseries.offsets.Hour.is_month_end
    "pandas.tseries.offsets.Hour.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_quarter_start`](api/pandas.tseries.offsets.Hour.is_quarter_start.html#pandas.tseries.offsets.Hour.is_quarter_start
    "pandas.tseries.offsets.Hour.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_quarter_end`](api/pandas.tseries.offsets.Hour.is_quarter_end.html#pandas.tseries.offsets.Hour.is_quarter_end
    "pandas.tseries.offsets.Hour.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_year_start`](api/pandas.tseries.offsets.Hour.is_year_start.html#pandas.tseries.offsets.Hour.is_year_start
    "pandas.tseries.offsets.Hour.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_year_end`](api/pandas.tseries.offsets.Hour.is_year_end.html#pandas.tseries.offsets.Hour.is_year_end
    "pandas.tseries.offsets.Hour.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Hour.delta`](api/pandas.tseries.offsets.Hour.delta.html#pandas.tseries.offsets.Hour.delta
    "pandas.tseries.offsets.Hour.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.freqstr`](api/pandas.tseries.offsets.Hour.freqstr.html#pandas.tseries.offsets.Hour.freqstr
    "pandas.tseries.offsets.Hour.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.kwds`](api/pandas.tseries.offsets.Hour.kwds.html#pandas.tseries.offsets.Hour.kwds
    "pandas.tseries.offsets.Hour.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.name`](api/pandas.tseries.offsets.Hour.name.html#pandas.tseries.offsets.Hour.name
    "pandas.tseries.offsets.Hour.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.nanos`](api/pandas.tseries.offsets.Hour.nanos.html#pandas.tseries.offsets.Hour.nanos
    "pandas.tseries.offsets.Hour.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.normalize`](api/pandas.tseries.offsets.Hour.normalize.html#pandas.tseries.offsets.Hour.normalize
    "pandas.tseries.offsets.Hour.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.rule_code`](api/pandas.tseries.offsets.Hour.rule_code.html#pandas.tseries.offsets.Hour.rule_code
    "pandas.tseries.offsets.Hour.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.n`](api/pandas.tseries.offsets.Hour.n.html#pandas.tseries.offsets.Hour.n
    "pandas.tseries.offsets.Hour.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Hour.copy`](api/pandas.tseries.offsets.Hour.copy.html#pandas.tseries.offsets.Hour.copy
    "pandas.tseries.offsets.Hour.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_anchored`](api/pandas.tseries.offsets.Hour.is_anchored.html#pandas.tseries.offsets.Hour.is_anchored
    "pandas.tseries.offsets.Hour.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_on_offset`](api/pandas.tseries.offsets.Hour.is_on_offset.html#pandas.tseries.offsets.Hour.is_on_offset
    "pandas.tseries.offsets.Hour.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_month_start`](api/pandas.tseries.offsets.Hour.is_month_start.html#pandas.tseries.offsets.Hour.is_month_start
    "pandas.tseries.offsets.Hour.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_month_end`](api/pandas.tseries.offsets.Hour.is_month_end.html#pandas.tseries.offsets.Hour.is_month_end
    "pandas.tseries.offsets.Hour.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_quarter_start`](api/pandas.tseries.offsets.Hour.is_quarter_start.html#pandas.tseries.offsets.Hour.is_quarter_start
    "pandas.tseries.offsets.Hour.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_quarter_end`](api/pandas.tseries.offsets.Hour.is_quarter_end.html#pandas.tseries.offsets.Hour.is_quarter_end
    "pandas.tseries.offsets.Hour.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_year_start`](api/pandas.tseries.offsets.Hour.is_year_start.html#pandas.tseries.offsets.Hour.is_year_start
    "pandas.tseries.offsets.Hour.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Hour.is_year_end`](api/pandas.tseries.offsets.Hour.is_year_end.html#pandas.tseries.offsets.Hour.is_year_end
    "pandas.tseries.offsets.Hour.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Minute
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Minute`](api/pandas.tseries.offsets.Minute.html#pandas.tseries.offsets.Minute
    "pandas.tseries.offsets.Minute") | Offset `n` minutes. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Minute.delta`](api/pandas.tseries.offsets.Minute.delta.html#pandas.tseries.offsets.Minute.delta
    "pandas.tseries.offsets.Minute.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.freqstr`](api/pandas.tseries.offsets.Minute.freqstr.html#pandas.tseries.offsets.Minute.freqstr
    "pandas.tseries.offsets.Minute.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.kwds`](api/pandas.tseries.offsets.Minute.kwds.html#pandas.tseries.offsets.Minute.kwds
    "pandas.tseries.offsets.Minute.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.name`](api/pandas.tseries.offsets.Minute.name.html#pandas.tseries.offsets.Minute.name
    "pandas.tseries.offsets.Minute.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.nanos`](api/pandas.tseries.offsets.Minute.nanos.html#pandas.tseries.offsets.Minute.nanos
    "pandas.tseries.offsets.Minute.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.normalize`](api/pandas.tseries.offsets.Minute.normalize.html#pandas.tseries.offsets.Minute.normalize
    "pandas.tseries.offsets.Minute.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.rule_code`](api/pandas.tseries.offsets.Minute.rule_code.html#pandas.tseries.offsets.Minute.rule_code
    "pandas.tseries.offsets.Minute.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.n`](api/pandas.tseries.offsets.Minute.n.html#pandas.tseries.offsets.Minute.n
    "pandas.tseries.offsets.Minute.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Minute.copy`](api/pandas.tseries.offsets.Minute.copy.html#pandas.tseries.offsets.Minute.copy
    "pandas.tseries.offsets.Minute.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_anchored`](api/pandas.tseries.offsets.Minute.is_anchored.html#pandas.tseries.offsets.Minute.is_anchored
    "pandas.tseries.offsets.Minute.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_on_offset`](api/pandas.tseries.offsets.Minute.is_on_offset.html#pandas.tseries.offsets.Minute.is_on_offset
    "pandas.tseries.offsets.Minute.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_month_start`](api/pandas.tseries.offsets.Minute.is_month_start.html#pandas.tseries.offsets.Minute.is_month_start
    "pandas.tseries.offsets.Minute.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_month_end`](api/pandas.tseries.offsets.Minute.is_month_end.html#pandas.tseries.offsets.Minute.is_month_end
    "pandas.tseries.offsets.Minute.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_quarter_start`](api/pandas.tseries.offsets.Minute.is_quarter_start.html#pandas.tseries.offsets.Minute.is_quarter_start
    "pandas.tseries.offsets.Minute.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_quarter_end`](api/pandas.tseries.offsets.Minute.is_quarter_end.html#pandas.tseries.offsets.Minute.is_quarter_end
    "pandas.tseries.offsets.Minute.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_year_start`](api/pandas.tseries.offsets.Minute.is_year_start.html#pandas.tseries.offsets.Minute.is_year_start
    "pandas.tseries.offsets.Minute.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_year_end`](api/pandas.tseries.offsets.Minute.is_year_end.html#pandas.tseries.offsets.Minute.is_year_end
    "pandas.tseries.offsets.Minute.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Minute.delta`](api/pandas.tseries.offsets.Minute.delta.html#pandas.tseries.offsets.Minute.delta
    "pandas.tseries.offsets.Minute.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.freqstr`](api/pandas.tseries.offsets.Minute.freqstr.html#pandas.tseries.offsets.Minute.freqstr
    "pandas.tseries.offsets.Minute.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.kwds`](api/pandas.tseries.offsets.Minute.kwds.html#pandas.tseries.offsets.Minute.kwds
    "pandas.tseries.offsets.Minute.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.name`](api/pandas.tseries.offsets.Minute.name.html#pandas.tseries.offsets.Minute.name
    "pandas.tseries.offsets.Minute.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.nanos`](api/pandas.tseries.offsets.Minute.nanos.html#pandas.tseries.offsets.Minute.nanos
    "pandas.tseries.offsets.Minute.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.normalize`](api/pandas.tseries.offsets.Minute.normalize.html#pandas.tseries.offsets.Minute.normalize
    "pandas.tseries.offsets.Minute.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.rule_code`](api/pandas.tseries.offsets.Minute.rule_code.html#pandas.tseries.offsets.Minute.rule_code
    "pandas.tseries.offsets.Minute.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.n`](api/pandas.tseries.offsets.Minute.n.html#pandas.tseries.offsets.Minute.n
    "pandas.tseries.offsets.Minute.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Minute.copy`](api/pandas.tseries.offsets.Minute.copy.html#pandas.tseries.offsets.Minute.copy
    "pandas.tseries.offsets.Minute.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_anchored`](api/pandas.tseries.offsets.Minute.is_anchored.html#pandas.tseries.offsets.Minute.is_anchored
    "pandas.tseries.offsets.Minute.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_on_offset`](api/pandas.tseries.offsets.Minute.is_on_offset.html#pandas.tseries.offsets.Minute.is_on_offset
    "pandas.tseries.offsets.Minute.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_month_start`](api/pandas.tseries.offsets.Minute.is_month_start.html#pandas.tseries.offsets.Minute.is_month_start
    "pandas.tseries.offsets.Minute.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_month_end`](api/pandas.tseries.offsets.Minute.is_month_end.html#pandas.tseries.offsets.Minute.is_month_end
    "pandas.tseries.offsets.Minute.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_quarter_start`](api/pandas.tseries.offsets.Minute.is_quarter_start.html#pandas.tseries.offsets.Minute.is_quarter_start
    "pandas.tseries.offsets.Minute.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_quarter_end`](api/pandas.tseries.offsets.Minute.is_quarter_end.html#pandas.tseries.offsets.Minute.is_quarter_end
    "pandas.tseries.offsets.Minute.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_year_start`](api/pandas.tseries.offsets.Minute.is_year_start.html#pandas.tseries.offsets.Minute.is_year_start
    "pandas.tseries.offsets.Minute.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Minute.is_year_end`](api/pandas.tseries.offsets.Minute.is_year_end.html#pandas.tseries.offsets.Minute.is_year_end
    "pandas.tseries.offsets.Minute.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Second
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Second`](api/pandas.tseries.offsets.Second.html#pandas.tseries.offsets.Second
    "pandas.tseries.offsets.Second") | Offset `n` seconds. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Second.delta`](api/pandas.tseries.offsets.Second.delta.html#pandas.tseries.offsets.Second.delta
    "pandas.tseries.offsets.Second.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.freqstr`](api/pandas.tseries.offsets.Second.freqstr.html#pandas.tseries.offsets.Second.freqstr
    "pandas.tseries.offsets.Second.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.kwds`](api/pandas.tseries.offsets.Second.kwds.html#pandas.tseries.offsets.Second.kwds
    "pandas.tseries.offsets.Second.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.name`](api/pandas.tseries.offsets.Second.name.html#pandas.tseries.offsets.Second.name
    "pandas.tseries.offsets.Second.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.nanos`](api/pandas.tseries.offsets.Second.nanos.html#pandas.tseries.offsets.Second.nanos
    "pandas.tseries.offsets.Second.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.normalize`](api/pandas.tseries.offsets.Second.normalize.html#pandas.tseries.offsets.Second.normalize
    "pandas.tseries.offsets.Second.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.rule_code`](api/pandas.tseries.offsets.Second.rule_code.html#pandas.tseries.offsets.Second.rule_code
    "pandas.tseries.offsets.Second.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.n`](api/pandas.tseries.offsets.Second.n.html#pandas.tseries.offsets.Second.n
    "pandas.tseries.offsets.Second.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Second.copy`](api/pandas.tseries.offsets.Second.copy.html#pandas.tseries.offsets.Second.copy
    "pandas.tseries.offsets.Second.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_anchored`](api/pandas.tseries.offsets.Second.is_anchored.html#pandas.tseries.offsets.Second.is_anchored
    "pandas.tseries.offsets.Second.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_on_offset`](api/pandas.tseries.offsets.Second.is_on_offset.html#pandas.tseries.offsets.Second.is_on_offset
    "pandas.tseries.offsets.Second.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_month_start`](api/pandas.tseries.offsets.Second.is_month_start.html#pandas.tseries.offsets.Second.is_month_start
    "pandas.tseries.offsets.Second.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_month_end`](api/pandas.tseries.offsets.Second.is_month_end.html#pandas.tseries.offsets.Second.is_month_end
    "pandas.tseries.offsets.Second.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_quarter_start`](api/pandas.tseries.offsets.Second.is_quarter_start.html#pandas.tseries.offsets.Second.is_quarter_start
    "pandas.tseries.offsets.Second.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_quarter_end`](api/pandas.tseries.offsets.Second.is_quarter_end.html#pandas.tseries.offsets.Second.is_quarter_end
    "pandas.tseries.offsets.Second.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_year_start`](api/pandas.tseries.offsets.Second.is_year_start.html#pandas.tseries.offsets.Second.is_year_start
    "pandas.tseries.offsets.Second.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_year_end`](api/pandas.tseries.offsets.Second.is_year_end.html#pandas.tseries.offsets.Second.is_year_end
    "pandas.tseries.offsets.Second.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Second.delta`](api/pandas.tseries.offsets.Second.delta.html#pandas.tseries.offsets.Second.delta
    "pandas.tseries.offsets.Second.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.freqstr`](api/pandas.tseries.offsets.Second.freqstr.html#pandas.tseries.offsets.Second.freqstr
    "pandas.tseries.offsets.Second.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.kwds`](api/pandas.tseries.offsets.Second.kwds.html#pandas.tseries.offsets.Second.kwds
    "pandas.tseries.offsets.Second.kwds") | Return a dict of extra parameters for
    the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.name`](api/pandas.tseries.offsets.Second.name.html#pandas.tseries.offsets.Second.name
    "pandas.tseries.offsets.Second.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.nanos`](api/pandas.tseries.offsets.Second.nanos.html#pandas.tseries.offsets.Second.nanos
    "pandas.tseries.offsets.Second.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.normalize`](api/pandas.tseries.offsets.Second.normalize.html#pandas.tseries.offsets.Second.normalize
    "pandas.tseries.offsets.Second.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.rule_code`](api/pandas.tseries.offsets.Second.rule_code.html#pandas.tseries.offsets.Second.rule_code
    "pandas.tseries.offsets.Second.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.n`](api/pandas.tseries.offsets.Second.n.html#pandas.tseries.offsets.Second.n
    "pandas.tseries.offsets.Second.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Second.copy`](api/pandas.tseries.offsets.Second.copy.html#pandas.tseries.offsets.Second.copy
    "pandas.tseries.offsets.Second.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_anchored`](api/pandas.tseries.offsets.Second.is_anchored.html#pandas.tseries.offsets.Second.is_anchored
    "pandas.tseries.offsets.Second.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_on_offset`](api/pandas.tseries.offsets.Second.is_on_offset.html#pandas.tseries.offsets.Second.is_on_offset
    "pandas.tseries.offsets.Second.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_month_start`](api/pandas.tseries.offsets.Second.is_month_start.html#pandas.tseries.offsets.Second.is_month_start
    "pandas.tseries.offsets.Second.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_month_end`](api/pandas.tseries.offsets.Second.is_month_end.html#pandas.tseries.offsets.Second.is_month_end
    "pandas.tseries.offsets.Second.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_quarter_start`](api/pandas.tseries.offsets.Second.is_quarter_start.html#pandas.tseries.offsets.Second.is_quarter_start
    "pandas.tseries.offsets.Second.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_quarter_end`](api/pandas.tseries.offsets.Second.is_quarter_end.html#pandas.tseries.offsets.Second.is_quarter_end
    "pandas.tseries.offsets.Second.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_year_start`](api/pandas.tseries.offsets.Second.is_year_start.html#pandas.tseries.offsets.Second.is_year_start
    "pandas.tseries.offsets.Second.is_year_start")(ts) | Return boolean whether a
    timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Second.is_year_end`](api/pandas.tseries.offsets.Second.is_year_end.html#pandas.tseries.offsets.Second.is_year_end
    "pandas.tseries.offsets.Second.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Milli
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Milli`](api/pandas.tseries.offsets.Milli.html#pandas.tseries.offsets.Milli
    "pandas.tseries.offsets.Milli") | Offset `n` milliseconds. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Milli.delta`](api/pandas.tseries.offsets.Milli.delta.html#pandas.tseries.offsets.Milli.delta
    "pandas.tseries.offsets.Milli.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.freqstr`](api/pandas.tseries.offsets.Milli.freqstr.html#pandas.tseries.offsets.Milli.freqstr
    "pandas.tseries.offsets.Milli.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.kwds`](api/pandas.tseries.offsets.Milli.kwds.html#pandas.tseries.offsets.Milli.kwds
    "pandas.tseries.offsets.Milli.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.name`](api/pandas.tseries.offsets.Milli.name.html#pandas.tseries.offsets.Milli.name
    "pandas.tseries.offsets.Milli.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.nanos`](api/pandas.tseries.offsets.Milli.nanos.html#pandas.tseries.offsets.Milli.nanos
    "pandas.tseries.offsets.Milli.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.normalize`](api/pandas.tseries.offsets.Milli.normalize.html#pandas.tseries.offsets.Milli.normalize
    "pandas.tseries.offsets.Milli.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.rule_code`](api/pandas.tseries.offsets.Milli.rule_code.html#pandas.tseries.offsets.Milli.rule_code
    "pandas.tseries.offsets.Milli.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.n`](api/pandas.tseries.offsets.Milli.n.html#pandas.tseries.offsets.Milli.n
    "pandas.tseries.offsets.Milli.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Milli.copy`](api/pandas.tseries.offsets.Milli.copy.html#pandas.tseries.offsets.Milli.copy
    "pandas.tseries.offsets.Milli.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_anchored`](api/pandas.tseries.offsets.Milli.is_anchored.html#pandas.tseries.offsets.Milli.is_anchored
    "pandas.tseries.offsets.Milli.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_on_offset`](api/pandas.tseries.offsets.Milli.is_on_offset.html#pandas.tseries.offsets.Milli.is_on_offset
    "pandas.tseries.offsets.Milli.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_month_start`](api/pandas.tseries.offsets.Milli.is_month_start.html#pandas.tseries.offsets.Milli.is_month_start
    "pandas.tseries.offsets.Milli.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_month_end`](api/pandas.tseries.offsets.Milli.is_month_end.html#pandas.tseries.offsets.Milli.is_month_end
    "pandas.tseries.offsets.Milli.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_quarter_start`](api/pandas.tseries.offsets.Milli.is_quarter_start.html#pandas.tseries.offsets.Milli.is_quarter_start
    "pandas.tseries.offsets.Milli.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_quarter_end`](api/pandas.tseries.offsets.Milli.is_quarter_end.html#pandas.tseries.offsets.Milli.is_quarter_end
    "pandas.tseries.offsets.Milli.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_year_start`](api/pandas.tseries.offsets.Milli.is_year_start.html#pandas.tseries.offsets.Milli.is_year_start
    "pandas.tseries.offsets.Milli.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_year_end`](api/pandas.tseries.offsets.Milli.is_year_end.html#pandas.tseries.offsets.Milli.is_year_end
    "pandas.tseries.offsets.Milli.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Milli.delta`](api/pandas.tseries.offsets.Milli.delta.html#pandas.tseries.offsets.Milli.delta
    "pandas.tseries.offsets.Milli.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.freqstr`](api/pandas.tseries.offsets.Milli.freqstr.html#pandas.tseries.offsets.Milli.freqstr
    "pandas.tseries.offsets.Milli.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.kwds`](api/pandas.tseries.offsets.Milli.kwds.html#pandas.tseries.offsets.Milli.kwds
    "pandas.tseries.offsets.Milli.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.name`](api/pandas.tseries.offsets.Milli.name.html#pandas.tseries.offsets.Milli.name
    "pandas.tseries.offsets.Milli.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.nanos`](api/pandas.tseries.offsets.Milli.nanos.html#pandas.tseries.offsets.Milli.nanos
    "pandas.tseries.offsets.Milli.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.normalize`](api/pandas.tseries.offsets.Milli.normalize.html#pandas.tseries.offsets.Milli.normalize
    "pandas.tseries.offsets.Milli.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.rule_code`](api/pandas.tseries.offsets.Milli.rule_code.html#pandas.tseries.offsets.Milli.rule_code
    "pandas.tseries.offsets.Milli.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.n`](api/pandas.tseries.offsets.Milli.n.html#pandas.tseries.offsets.Milli.n
    "pandas.tseries.offsets.Milli.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Milli.copy`](api/pandas.tseries.offsets.Milli.copy.html#pandas.tseries.offsets.Milli.copy
    "pandas.tseries.offsets.Milli.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_anchored`](api/pandas.tseries.offsets.Milli.is_anchored.html#pandas.tseries.offsets.Milli.is_anchored
    "pandas.tseries.offsets.Milli.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_on_offset`](api/pandas.tseries.offsets.Milli.is_on_offset.html#pandas.tseries.offsets.Milli.is_on_offset
    "pandas.tseries.offsets.Milli.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_month_start`](api/pandas.tseries.offsets.Milli.is_month_start.html#pandas.tseries.offsets.Milli.is_month_start
    "pandas.tseries.offsets.Milli.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_month_end`](api/pandas.tseries.offsets.Milli.is_month_end.html#pandas.tseries.offsets.Milli.is_month_end
    "pandas.tseries.offsets.Milli.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_quarter_start`](api/pandas.tseries.offsets.Milli.is_quarter_start.html#pandas.tseries.offsets.Milli.is_quarter_start
    "pandas.tseries.offsets.Milli.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_quarter_end`](api/pandas.tseries.offsets.Milli.is_quarter_end.html#pandas.tseries.offsets.Milli.is_quarter_end
    "pandas.tseries.offsets.Milli.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_year_start`](api/pandas.tseries.offsets.Milli.is_year_start.html#pandas.tseries.offsets.Milli.is_year_start
    "pandas.tseries.offsets.Milli.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Milli.is_year_end`](api/pandas.tseries.offsets.Milli.is_year_end.html#pandas.tseries.offsets.Milli.is_year_end
    "pandas.tseries.offsets.Milli.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Micro
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Micro`](api/pandas.tseries.offsets.Micro.html#pandas.tseries.offsets.Micro
    "pandas.tseries.offsets.Micro") | Offset `n` microseconds. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Micro.delta`](api/pandas.tseries.offsets.Micro.delta.html#pandas.tseries.offsets.Micro.delta
    "pandas.tseries.offsets.Micro.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.freqstr`](api/pandas.tseries.offsets.Micro.freqstr.html#pandas.tseries.offsets.Micro.freqstr
    "pandas.tseries.offsets.Micro.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.kwds`](api/pandas.tseries.offsets.Micro.kwds.html#pandas.tseries.offsets.Micro.kwds
    "pandas.tseries.offsets.Micro.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.name`](api/pandas.tseries.offsets.Micro.name.html#pandas.tseries.offsets.Micro.name
    "pandas.tseries.offsets.Micro.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.nanos`](api/pandas.tseries.offsets.Micro.nanos.html#pandas.tseries.offsets.Micro.nanos
    "pandas.tseries.offsets.Micro.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.normalize`](api/pandas.tseries.offsets.Micro.normalize.html#pandas.tseries.offsets.Micro.normalize
    "pandas.tseries.offsets.Micro.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.rule_code`](api/pandas.tseries.offsets.Micro.rule_code.html#pandas.tseries.offsets.Micro.rule_code
    "pandas.tseries.offsets.Micro.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.n`](api/pandas.tseries.offsets.Micro.n.html#pandas.tseries.offsets.Micro.n
    "pandas.tseries.offsets.Micro.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Micro.copy`](api/pandas.tseries.offsets.Micro.copy.html#pandas.tseries.offsets.Micro.copy
    "pandas.tseries.offsets.Micro.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_anchored`](api/pandas.tseries.offsets.Micro.is_anchored.html#pandas.tseries.offsets.Micro.is_anchored
    "pandas.tseries.offsets.Micro.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_on_offset`](api/pandas.tseries.offsets.Micro.is_on_offset.html#pandas.tseries.offsets.Micro.is_on_offset
    "pandas.tseries.offsets.Micro.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_month_start`](api/pandas.tseries.offsets.Micro.is_month_start.html#pandas.tseries.offsets.Micro.is_month_start
    "pandas.tseries.offsets.Micro.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_month_end`](api/pandas.tseries.offsets.Micro.is_month_end.html#pandas.tseries.offsets.Micro.is_month_end
    "pandas.tseries.offsets.Micro.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_quarter_start`](api/pandas.tseries.offsets.Micro.is_quarter_start.html#pandas.tseries.offsets.Micro.is_quarter_start
    "pandas.tseries.offsets.Micro.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_quarter_end`](api/pandas.tseries.offsets.Micro.is_quarter_end.html#pandas.tseries.offsets.Micro.is_quarter_end
    "pandas.tseries.offsets.Micro.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_year_start`](api/pandas.tseries.offsets.Micro.is_year_start.html#pandas.tseries.offsets.Micro.is_year_start
    "pandas.tseries.offsets.Micro.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_year_end`](api/pandas.tseries.offsets.Micro.is_year_end.html#pandas.tseries.offsets.Micro.is_year_end
    "pandas.tseries.offsets.Micro.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Micro.delta`](api/pandas.tseries.offsets.Micro.delta.html#pandas.tseries.offsets.Micro.delta
    "pandas.tseries.offsets.Micro.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.freqstr`](api/pandas.tseries.offsets.Micro.freqstr.html#pandas.tseries.offsets.Micro.freqstr
    "pandas.tseries.offsets.Micro.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.kwds`](api/pandas.tseries.offsets.Micro.kwds.html#pandas.tseries.offsets.Micro.kwds
    "pandas.tseries.offsets.Micro.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.name`](api/pandas.tseries.offsets.Micro.name.html#pandas.tseries.offsets.Micro.name
    "pandas.tseries.offsets.Micro.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.nanos`](api/pandas.tseries.offsets.Micro.nanos.html#pandas.tseries.offsets.Micro.nanos
    "pandas.tseries.offsets.Micro.nanos") | Return an integer of the total number
    of nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.normalize`](api/pandas.tseries.offsets.Micro.normalize.html#pandas.tseries.offsets.Micro.normalize
    "pandas.tseries.offsets.Micro.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.rule_code`](api/pandas.tseries.offsets.Micro.rule_code.html#pandas.tseries.offsets.Micro.rule_code
    "pandas.tseries.offsets.Micro.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.n`](api/pandas.tseries.offsets.Micro.n.html#pandas.tseries.offsets.Micro.n
    "pandas.tseries.offsets.Micro.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Micro.copy`](api/pandas.tseries.offsets.Micro.copy.html#pandas.tseries.offsets.Micro.copy
    "pandas.tseries.offsets.Micro.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_anchored`](api/pandas.tseries.offsets.Micro.is_anchored.html#pandas.tseries.offsets.Micro.is_anchored
    "pandas.tseries.offsets.Micro.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_on_offset`](api/pandas.tseries.offsets.Micro.is_on_offset.html#pandas.tseries.offsets.Micro.is_on_offset
    "pandas.tseries.offsets.Micro.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_month_start`](api/pandas.tseries.offsets.Micro.is_month_start.html#pandas.tseries.offsets.Micro.is_month_start
    "pandas.tseries.offsets.Micro.is_month_start")(ts) | Return boolean whether a
    timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_month_end`](api/pandas.tseries.offsets.Micro.is_month_end.html#pandas.tseries.offsets.Micro.is_month_end
    "pandas.tseries.offsets.Micro.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_quarter_start`](api/pandas.tseries.offsets.Micro.is_quarter_start.html#pandas.tseries.offsets.Micro.is_quarter_start
    "pandas.tseries.offsets.Micro.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_quarter_end`](api/pandas.tseries.offsets.Micro.is_quarter_end.html#pandas.tseries.offsets.Micro.is_quarter_end
    "pandas.tseries.offsets.Micro.is_quarter_end")(ts) | Return boolean whether a
    timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_year_start`](api/pandas.tseries.offsets.Micro.is_year_start.html#pandas.tseries.offsets.Micro.is_year_start
    "pandas.tseries.offsets.Micro.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Micro.is_year_end`](api/pandas.tseries.offsets.Micro.is_year_end.html#pandas.tseries.offsets.Micro.is_year_end
    "pandas.tseries.offsets.Micro.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Nano
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Nano`](api/pandas.tseries.offsets.Nano.html#pandas.tseries.offsets.Nano
    "pandas.tseries.offsets.Nano") | Offset `n` nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Nano.delta`](api/pandas.tseries.offsets.Nano.delta.html#pandas.tseries.offsets.Nano.delta
    "pandas.tseries.offsets.Nano.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.freqstr`](api/pandas.tseries.offsets.Nano.freqstr.html#pandas.tseries.offsets.Nano.freqstr
    "pandas.tseries.offsets.Nano.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.kwds`](api/pandas.tseries.offsets.Nano.kwds.html#pandas.tseries.offsets.Nano.kwds
    "pandas.tseries.offsets.Nano.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.name`](api/pandas.tseries.offsets.Nano.name.html#pandas.tseries.offsets.Nano.name
    "pandas.tseries.offsets.Nano.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.nanos`](api/pandas.tseries.offsets.Nano.nanos.html#pandas.tseries.offsets.Nano.nanos
    "pandas.tseries.offsets.Nano.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.normalize`](api/pandas.tseries.offsets.Nano.normalize.html#pandas.tseries.offsets.Nano.normalize
    "pandas.tseries.offsets.Nano.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.rule_code`](api/pandas.tseries.offsets.Nano.rule_code.html#pandas.tseries.offsets.Nano.rule_code
    "pandas.tseries.offsets.Nano.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.n`](api/pandas.tseries.offsets.Nano.n.html#pandas.tseries.offsets.Nano.n
    "pandas.tseries.offsets.Nano.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Nano.copy`](api/pandas.tseries.offsets.Nano.copy.html#pandas.tseries.offsets.Nano.copy
    "pandas.tseries.offsets.Nano.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_anchored`](api/pandas.tseries.offsets.Nano.is_anchored.html#pandas.tseries.offsets.Nano.is_anchored
    "pandas.tseries.offsets.Nano.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_on_offset`](api/pandas.tseries.offsets.Nano.is_on_offset.html#pandas.tseries.offsets.Nano.is_on_offset
    "pandas.tseries.offsets.Nano.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_month_start`](api/pandas.tseries.offsets.Nano.is_month_start.html#pandas.tseries.offsets.Nano.is_month_start
    "pandas.tseries.offsets.Nano.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_month_end`](api/pandas.tseries.offsets.Nano.is_month_end.html#pandas.tseries.offsets.Nano.is_month_end
    "pandas.tseries.offsets.Nano.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_quarter_start`](api/pandas.tseries.offsets.Nano.is_quarter_start.html#pandas.tseries.offsets.Nano.is_quarter_start
    "pandas.tseries.offsets.Nano.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_quarter_end`](api/pandas.tseries.offsets.Nano.is_quarter_end.html#pandas.tseries.offsets.Nano.is_quarter_end
    "pandas.tseries.offsets.Nano.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_year_start`](api/pandas.tseries.offsets.Nano.is_year_start.html#pandas.tseries.offsets.Nano.is_year_start
    "pandas.tseries.offsets.Nano.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_year_end`](api/pandas.tseries.offsets.Nano.is_year_end.html#pandas.tseries.offsets.Nano.is_year_end
    "pandas.tseries.offsets.Nano.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: Properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Nano.delta`](api/pandas.tseries.offsets.Nano.delta.html#pandas.tseries.offsets.Nano.delta
    "pandas.tseries.offsets.Nano.delta") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.freqstr`](api/pandas.tseries.offsets.Nano.freqstr.html#pandas.tseries.offsets.Nano.freqstr
    "pandas.tseries.offsets.Nano.freqstr") | Return a string representing the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.kwds`](api/pandas.tseries.offsets.Nano.kwds.html#pandas.tseries.offsets.Nano.kwds
    "pandas.tseries.offsets.Nano.kwds") | Return a dict of extra parameters for the
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.name`](api/pandas.tseries.offsets.Nano.name.html#pandas.tseries.offsets.Nano.name
    "pandas.tseries.offsets.Nano.name") | Return a string representing the base frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.nanos`](api/pandas.tseries.offsets.Nano.nanos.html#pandas.tseries.offsets.Nano.nanos
    "pandas.tseries.offsets.Nano.nanos") | Return an integer of the total number of
    nanoseconds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.normalize`](api/pandas.tseries.offsets.Nano.normalize.html#pandas.tseries.offsets.Nano.normalize
    "pandas.tseries.offsets.Nano.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.rule_code`](api/pandas.tseries.offsets.Nano.rule_code.html#pandas.tseries.offsets.Nano.rule_code
    "pandas.tseries.offsets.Nano.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.n`](api/pandas.tseries.offsets.Nano.n.html#pandas.tseries.offsets.Nano.n
    "pandas.tseries.offsets.Nano.n") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '| [`Nano.copy`](api/pandas.tseries.offsets.Nano.copy.html#pandas.tseries.offsets.Nano.copy
    "pandas.tseries.offsets.Nano.copy")() | Return a copy of the frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_anchored`](api/pandas.tseries.offsets.Nano.is_anchored.html#pandas.tseries.offsets.Nano.is_anchored
    "pandas.tseries.offsets.Nano.is_anchored")() | (DEPRECATED) Return False. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_on_offset`](api/pandas.tseries.offsets.Nano.is_on_offset.html#pandas.tseries.offsets.Nano.is_on_offset
    "pandas.tseries.offsets.Nano.is_on_offset")(dt) | Return boolean whether a timestamp
    intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_month_start`](api/pandas.tseries.offsets.Nano.is_month_start.html#pandas.tseries.offsets.Nano.is_month_start
    "pandas.tseries.offsets.Nano.is_month_start")(ts) | Return boolean whether a timestamp
    occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_month_end`](api/pandas.tseries.offsets.Nano.is_month_end.html#pandas.tseries.offsets.Nano.is_month_end
    "pandas.tseries.offsets.Nano.is_month_end")(ts) | Return boolean whether a timestamp
    occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_quarter_start`](api/pandas.tseries.offsets.Nano.is_quarter_start.html#pandas.tseries.offsets.Nano.is_quarter_start
    "pandas.tseries.offsets.Nano.is_quarter_start")(ts) | Return boolean whether a
    timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_quarter_end`](api/pandas.tseries.offsets.Nano.is_quarter_end.html#pandas.tseries.offsets.Nano.is_quarter_end
    "pandas.tseries.offsets.Nano.is_quarter_end")(ts) | Return boolean whether a timestamp
    occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_year_start`](api/pandas.tseries.offsets.Nano.is_year_start.html#pandas.tseries.offsets.Nano.is_year_start
    "pandas.tseries.offsets.Nano.is_year_start")(ts) | Return boolean whether a timestamp
    occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`Nano.is_year_end`](api/pandas.tseries.offsets.Nano.is_year_end.html#pandas.tseries.offsets.Nano.is_year_end
    "pandas.tseries.offsets.Nano.is_year_end")(ts) | Return boolean whether a timestamp
    occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: '# Frequencies'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`to_offset`](api/pandas.tseries.frequencies.to_offset.html#pandas.tseries.frequencies.to_offset
    "pandas.tseries.frequencies.to_offset")(freq[, is_period]) | Return DateOffset
    object from string or datetime.timedelta object. |'
  prefs: []
  type: TYPE_TB
