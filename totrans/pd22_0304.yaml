- en: pandas.DataFrame.rank
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rank.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rank.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute numerical data ranks (1 through n) along axis.
  prefs: []
  type: TYPE_NORMAL
- en: By default, equal values are assigned a rank that is the average of the ranks
    of those values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Index to direct ranking. For Series this parameter is unused and defaults to
    0.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**{‘average’, ‘min’, ‘max’, ‘first’, ‘dense’}, default ‘average’'
  prefs: []
  type: TYPE_NORMAL
- en: 'How to rank the group of records that have the same value (i.e. ties):'
  prefs: []
  type: TYPE_NORMAL
- en: 'average: average rank of the group'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'min: lowest rank in the group'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'max: highest rank in the group'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'first: ranks assigned in order they appear in the array'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'dense: like ‘min’, but rank always increases by 1 between groups.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**numeric_only**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: For DataFrame objects, rank only numeric columns if set to True.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 2.0.0: The default value of `numeric_only` is now `False`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**na_option**{‘keep’, ‘top’, ‘bottom’}, default ‘keep’'
  prefs: []
  type: TYPE_NORMAL
- en: 'How to rank NaN values:'
  prefs: []
  type: TYPE_NORMAL
- en: 'keep: assign NaN rank to NaN values'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'top: assign lowest rank to NaN values'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'bottom: assign highest rank to NaN values'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ascending**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Whether or not the elements should be ranked in ascending order.
  prefs: []
  type: TYPE_NORMAL
- en: '**pct**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Whether or not to display the returned rankings in percentile form.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: same type as caller
  prefs: []
  type: TYPE_NORMAL
- en: Return a Series or DataFrame with data ranks as values.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`core.groupby.DataFrameGroupBy.rank`](pandas.core.groupby.DataFrameGroupBy.rank.html#pandas.core.groupby.DataFrameGroupBy.rank
    "pandas.core.groupby.DataFrameGroupBy.rank")'
  prefs: []
  type: TYPE_NORMAL
- en: Rank of values within each group.
  prefs: []
  type: TYPE_NORMAL
- en: '[`core.groupby.SeriesGroupBy.rank`](pandas.core.groupby.SeriesGroupBy.rank.html#pandas.core.groupby.SeriesGroupBy.rank
    "pandas.core.groupby.SeriesGroupBy.rank")'
  prefs: []
  type: TYPE_NORMAL
- en: Rank of values within each group.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Ties are assigned the mean of the ranks (by default) for the group.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The following example shows how the method behaves with the above parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: 'default_rank: this is the default behaviour obtained without using any parameter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'max_rank: setting `method = ''max''` the records that have the same values
    are ranked using the highest rank (e.g.: since ‘cat’ and ‘dog’ are both in the
    2nd and 3rd position, rank 3 is assigned.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'NA_bottom: choosing `na_option = ''bottom''`, if there are records with NaN
    values they are placed at the bottom of the ranking.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'pct_rank: when setting `pct = True`, the ranking is expressed as percentile
    rank.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
