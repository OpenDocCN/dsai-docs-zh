- en: scipy.linalg.lu
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.linalg.lu
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.lu.html#scipy.linalg.lu](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.lu.html#scipy.linalg.lu)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.lu.html#scipy.linalg.lu](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.lu.html#scipy.linalg.lu)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute LU decomposition of a matrix with partial pivoting.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算带有部分枢轴的矩阵的LU分解。
- en: 'The decomposition satisfies:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 分解满足：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: where `P` is a permutation matrix, `L` lower triangular with unit diagonal elements,
    and `U` upper triangular. If *permute_l* is set to `True` then `L` is returned
    already permuted and hence satisfying `A = L @ U`.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`P`是一个排列矩阵，`L`是具有单位对角线元素的下三角矩阵，`U`是上三角矩阵。如果将*permute_l*设置为`True`，则`L`已排列并且满足`A
    = L @ U`。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**(M, N) array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**(M, N) array_like'
- en: Array to decompose
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要分解的数组
- en: '**permute_l**bool, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**permute_l**bool，可选'
- en: 'Perform the multiplication P*L (Default: do not permute)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 执行乘法P*L（默认情况下不排列）
- en: '**overwrite_a**bool, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**overwrite_a**bool，可选'
- en: Whether to overwrite data in a (may improve performance)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 是否覆盖数据中的数据（可能提高性能）
- en: '**check_finite**bool, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**check_finite**bool，可选'
- en: Whether to check that the input matrix contains only finite numbers. Disabling
    may give a performance gain, but may result in problems (crashes, non-termination)
    if the inputs do contain infinities or NaNs.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 是否检查输入矩阵仅包含有限数值。禁用可能会提高性能，但如果输入包含无穷大或NaN，可能会导致问题（崩溃、非终止）。
- en: '**p_indices**bool, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**p_indices**bool，可选'
- en: If `True` the permutation information is returned as row indices. The default
    is `False` for backwards-compatibility reasons.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为`True`，则返回排列信息作为行索引。出于向后兼容性的原因，默认为`False`。
- en: 'Returns:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(If `permute_l` is ``False``)**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**(如果 `permute_l` 是 ``False``)**'
- en: '**p**(…, M, M) ndarray'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**p**(…, M, M) ndarray'
- en: Permutation arrays or vectors depending on *p_indices*
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 取决于*p_indices*的排列数组或向量
- en: '**l**(…, M, K) ndarray'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**l**(…, M, K) ndarray'
- en: Lower triangular or trapezoidal array with unit diagonal. `K = min(M, N)`
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 具有单位对角线的下三角或梯形数组。`K = min(M, N)`
- en: '**u**(…, K, N) ndarray'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**u**(…, K, N) ndarray'
- en: Upper triangular or trapezoidal array
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 上三角或梯形数组
- en: '**(If `permute_l` is ``True``)**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**(如果 `permute_l` 是 ``True``)**'
- en: '**pl**(…, M, K) ndarray'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**pl**(…, M, K) ndarray'
- en: Permuted L matrix. `K = min(M, N)`
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 排列后的L矩阵。`K = min(M, N)`
- en: '**u**(…, K, N) ndarray'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**u**(…, K, N) ndarray'
- en: Upper triangular or trapezoidal array
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 上三角或梯形数组
- en: Notes
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: Permutation matrices are costly since they are nothing but row reorder of `L`
    and hence indices are strongly recommended to be used instead if the permutation
    is required. The relation in the 2D case then becomes simply `A = L[P, :] @ U`.
    In higher dimensions, it is better to use *permute_l* to avoid complicated indexing
    tricks.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 排列矩阵成本高昂，因为它们只是`L`的行重新排序，因此强烈建议使用索引，如果需要排列。在2D情况下，关系简单地变成`A = L[P, :] @ U`。在更高维度中，最好使用*permute_l*以避免复杂的索引技巧。
- en: In 2D case, if one has the indices however, for some reason, the permutation
    matrix is still needed then it can be constructed by `np.eye(M)[P, :]`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在2D情况下，如果出于某种原因需要索引，则仍然需要排列矩阵，可以通过`np.eye(M)[P, :]`构造。
- en: Examples
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can also use nd-arrays, for example, a demonstration with 4D array:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用nd数组，例如，一个4D数组的演示：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
