- en: scipy.interpolate.interp1d
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.interp1d.html#scipy.interpolate.interp1d](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.interp1d.html#scipy.interpolate.interp1d)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Interpolate a 1-D function.
  prefs: []
  type: TYPE_NORMAL
- en: Legacy
  prefs: []
  type: TYPE_NORMAL
- en: This class is considered legacy and will no longer receive updates. This could
    also mean it will be removed in future SciPy versions. For a guide to the intended
    replacements for [`interp1d`](#scipy.interpolate.interp1d "scipy.interpolate.interp1d")
    see [1-D interpolation](../../tutorial/interpolate/1D.html#tutorial-interpolate-1dsection).
  prefs: []
  type: TYPE_NORMAL
- en: '*x* and *y* are arrays of values used to approximate some function f: `y =
    f(x)`. This class returns a function whose call method uses interpolation to find
    the value of new points.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**(npoints, ) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A 1-D array of real values.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**(…, npoints, …) array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A N-D array of real values. The length of *y* along the interpolation axis must
    be equal to the length of *x*. Use the `axis` parameter to select correct axis.
    Unlike other interpolators, the default interpolation axis is the last axis of
    *y*.
  prefs: []
  type: TYPE_NORMAL
- en: '**kind**str or int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specifies the kind of interpolation as a string or as an integer specifying
    the order of the spline interpolator to use. The string has to be one of ‘linear’,
    ‘nearest’, ‘nearest-up’, ‘zero’, ‘slinear’, ‘quadratic’, ‘cubic’, ‘previous’,
    or ‘next’. ‘zero’, ‘slinear’, ‘quadratic’ and ‘cubic’ refer to a spline interpolation
    of zeroth, first, second or third order; ‘previous’ and ‘next’ simply return the
    previous or next value of the point; ‘nearest-up’ and ‘nearest’ differ when interpolating
    half-integers (e.g. 0.5, 1.5) in that ‘nearest-up’ rounds up and ‘nearest’ rounds
    down. Default is ‘linear’.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis in the `y` array corresponding to the x-coordinate values. Unlike other
    interpolators, defaults to `axis=-1`.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the class makes internal copies of x and y. If False, references to
    *x* and *y* are used. The default is to copy.
  prefs: []
  type: TYPE_NORMAL
- en: '**bounds_error**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, a ValueError is raised any time interpolation is attempted on a value
    outside of the range of x (where extrapolation is necessary). If False, out of
    bounds values are assigned [`fill_value`](scipy.interpolate.interp1d.fill_value.html#scipy.interpolate.interp1d.fill_value
    "scipy.interpolate.interp1d.fill_value"). By default, an error is raised unless
    `fill_value="extrapolate"`.
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**array-like or (array-like, array_like) or “extrapolate”, optional'
  prefs: []
  type: TYPE_NORMAL
- en: if a ndarray (or float), this value will be used to fill in for requested points
    outside of the data range. If not provided, then the default is NaN. The array-like
    must broadcast properly to the dimensions of the non-interpolation axes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If a two-element tuple, then the first element is used as a fill value for `x_new
    < x[0]` and the second element is used for `x_new > x[-1]`. Anything that is not
    a 2-element tuple (e.g., list or ndarray, regardless of shape) is taken to be
    a single array-like argument meant to be used for both bounds as `below, above
    = fill_value, fill_value`. Using a two-element tuple or ndarray requires `bounds_error=False`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 0.17.0.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If “extrapolate”, then points outside the data range will be extrapolated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 0.17.0.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**assume_sorted**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If False, values of *x* can be in any order and they are sorted first. If True,
    *x* has to be an array of monotonically increasing values.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`splrep`](scipy.interpolate.splrep.html#scipy.interpolate.splrep "scipy.interpolate.splrep"),
    [`splev`](scipy.interpolate.splev.html#scipy.interpolate.splev "scipy.interpolate.splev")'
  prefs: []
  type: TYPE_NORMAL
- en: Spline interpolation/smoothing based on FITPACK.
  prefs: []
  type: TYPE_NORMAL
- en: '[`UnivariateSpline`](scipy.interpolate.UnivariateSpline.html#scipy.interpolate.UnivariateSpline
    "scipy.interpolate.UnivariateSpline")'
  prefs: []
  type: TYPE_NORMAL
- en: An object-oriented wrapper of the FITPACK routines.
  prefs: []
  type: TYPE_NORMAL
- en: '[`interp2d`](scipy.interpolate.interp2d.html#scipy.interpolate.interp2d "scipy.interpolate.interp2d")'
  prefs: []
  type: TYPE_NORMAL
- en: 2-D interpolation
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Calling [`interp1d`](#scipy.interpolate.interp1d "scipy.interpolate.interp1d")
    with NaNs present in input values results in undefined behaviour.
  prefs: []
  type: TYPE_NORMAL
- en: Input values *x* and *y* must be convertible to *float* values like *int* or
    *float*.
  prefs: []
  type: TYPE_NORMAL
- en: If the values in *x* are not unique, the resulting behavior is undefined and
    specific to the choice of *kind*, i.e., changing *kind* will change the behavior
    for duplicates.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-interpolate-interp1d-1.png](../Images/d0f186839f72b601d2ad0c0ca88f500c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`fill_value`](scipy.interpolate.interp1d.fill_value.html#scipy.interpolate.interp1d.fill_value
    "scipy.interpolate.interp1d.fill_value")'
  prefs: []
  type: TYPE_NORMAL
- en: The fill value.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__call__`](scipy.interpolate.interp1d.__call__.html#scipy.interpolate.interp1d.__call__
    "scipy.interpolate.interp1d.__call__")(x) | Evaluate the interpolant |'
  prefs: []
  type: TYPE_TB
