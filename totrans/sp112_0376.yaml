- en: scipy.ndimage.spline_filter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.spline_filter.html#scipy.ndimage.spline_filter](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.spline_filter.html#scipy.ndimage.spline_filter)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Multidimensional spline filter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The order of the spline, default is 3.
  prefs: []
  type: TYPE_NORMAL
- en: '**output**ndarray or dtype, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The array in which to place the output, or the dtype of the returned array.
    Default is `numpy.float64`.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**{‘reflect’, ‘grid-mirror’, ‘constant’, ‘grid-constant’, ‘nearest’,
    ‘mirror’, ‘grid-wrap’, ‘wrap’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The *mode* parameter determines how the input array is extended beyond its
    boundaries. Default is ‘mirror’. Behavior for each valid value is as follows (see
    additional plots and details on [boundary modes](../../tutorial/ndimage.html#ndimage-interpolation-modes)):'
  prefs: []
  type: TYPE_NORMAL
- en: ‘reflect’ (*d c b a | a b c d | d c b a*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by reflecting about the edge of the last pixel. This mode
    is also sometimes referred to as half-sample symmetric.
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-mirror’
  prefs: []
  type: TYPE_NORMAL
- en: This is a synonym for ‘reflect’.
  prefs: []
  type: TYPE_NORMAL
- en: ‘constant’ (*k k k k | a b c d | k k k k*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by filling all values beyond the edge with the same constant
    value, defined by the *cval* parameter. No interpolation is performed beyond the
    edges of the input.
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-constant’ (*k k k k | a b c d | k k k k*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by filling all values beyond the edge with the same constant
    value, defined by the *cval* parameter. Interpolation occurs for samples outside
    the input’s extent as well.
  prefs: []
  type: TYPE_NORMAL
- en: ‘nearest’ (*a a a a | a b c d | d d d d*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by replicating the last pixel.
  prefs: []
  type: TYPE_NORMAL
- en: ‘mirror’ (*d c b | a b c d | c b a*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by reflecting about the center of the last pixel. This
    mode is also sometimes referred to as whole-sample symmetric.
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-wrap’ (*a b c d | a b c d | a b c d*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by wrapping around to the opposite edge.
  prefs: []
  type: TYPE_NORMAL
- en: ‘wrap’ (*d b c d | a b c d | b c a b*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by wrapping around to the opposite edge, but in a way
    such that the last point and initial point exactly overlap. In this case it is
    not well defined which sample will be chosen at the point of overlap.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**spline_filter**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Filtered array. Has the same shape as *input*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`spline_filter1d`](scipy.ndimage.spline_filter1d.html#scipy.ndimage.spline_filter1d
    "scipy.ndimage.spline_filter1d")'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate a 1-D spline filter along the given axis.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The multidimensional filter is implemented as a sequence of 1-D spline filters.
    The intermediate arrays are stored in the same data type as the output. Therefore,
    for output types with a limited precision, the results may be imprecise because
    intermediate results may be stored with insufficient precision.
  prefs: []
  type: TYPE_NORMAL
- en: For complex-valued *input*, this function processes the real and imaginary components
    independently.
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.6.0: Complex-valued support added.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'We can filter an image using multidimentional splines:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-ndimage-spline_filter-1.png](../Images/5bd1c02dec80c5089b38643ca4feaf35.png)'
  prefs: []
  type: TYPE_IMG
