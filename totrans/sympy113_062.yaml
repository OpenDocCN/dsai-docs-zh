- en: Gray Code
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gray码
- en: Original text：[https://docs.sympy.org/latest/modules/combinatorics/graycode.html](https://docs.sympy.org/latest/modules/combinatorics/graycode.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/combinatorics/graycode.html](https://docs.sympy.org/latest/modules/combinatorics/graycode.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A Gray code is essentially a Hamiltonian walk on a n-dimensional cube with edge
    length of one. The vertices of the cube are represented by vectors whose values
    are binary. The Hamilton walk visits each vertex exactly once. The Gray code for
    a 3d cube is [‘000’,’100’,’110’,’010’,’011’,’111’,’101’, ‘001’].
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Gray码本质上是n维立方体上的哈密顿路径，边长为1。立方体的顶点由其值为二进制的向量表示。哈密顿路径访问每个顶点恰好一次。3D立方体的Gray码是['000'，'100'，'110'，'010'，'011'，'111'，'101'，'001']。
- en: A Gray code solves the problem of sequentially generating all possible subsets
    of n objects in such a way that each subset is obtained from the previous one
    by either deleting or adding a single object. In the above example, 1 indicates
    that the object is present, and 0 indicates that its absent.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Gray码解决了顺序生成n个对象所有可能子集的问题，每个子集从前一个子集仅通过删除或添加一个对象获得。在上述示例中，1表示对象存在，0表示对象不存在。
- en: Gray codes have applications in statistics as well when we want to compute various
    statistics related to subsets in an efficient manner.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Gray码在统计学中也有应用，特别是当我们希望以高效的方式计算与子集相关的各种统计量时。
- en: Examples
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: References
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R44](#id1)]'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R44](#id1)]'
- en: Nijenhuis,A. and Wilf,H.S.(1978). Combinatorial Algorithms. Academic Press.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Nijenhuis,A. 和 Wilf,H.S.(1978). 组合算法. Academic Press.
- en: '[[R45](#id2)]'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R45](#id2)]'
- en: Knuth, D. (2011). The Art of Computer Programming, Vol 4 Addison Wesley
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Knuth, D. (2011). 计算机程序设计艺术，第4卷 Addison Wesley
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Returns the currently referenced Gray code as a bit string.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 返回当前引用的Gray码作为比特字符串。
- en: Examples
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Generates the sequence of bit vectors of a Gray Code.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 生成Gray码的比特向量序列。
- en: Examples
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: See also
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`skip`](#sympy.combinatorics.graycode.GrayCode.skip "sympy.combinatorics.graycode.GrayCode.skip")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`skip`](#sympy.combinatorics.graycode.GrayCode.skip "sympy.combinatorics.graycode.GrayCode.skip")'
- en: References
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R46](#id3)]'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R46](#id3)]'
- en: Knuth, D. (2011). The Art of Computer Programming, Vol 4, Addison Wesley
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Knuth, D. (2011). 计算机程序设计艺术，第4卷, Addison Wesley
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Returns the dimension of the Gray code.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回Gray码的维度。
- en: Examples
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Returns the Gray code a distance `delta` (default = 1) from the current value
    in canonical order.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 返回Gray码从当前值开始的距离`delta`（默认= 1）的Gray码。
- en: Examples
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Ranks the Gray code.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对Gray码进行排序。
- en: A ranking algorithm determines the position (or rank) of a combinatorial object
    among all the objects w.r.t. a given order. For example, the 4 bit binary reflected
    Gray code (BRGC) ‘0101’ has a rank of 6 as it appears in the 6th position in the
    canonical ordering of the family of 4 bit Gray codes.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 排名算法确定在给定顺序下，组合对象在所有对象中的位置（或排名）。例如，4位二进制反射Gray码（BRGC）'0101'的排名为6，因为它在4位Gray码家族的规范顺序中出现在第6个位置。
- en: Examples
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE11]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: See also
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`unrank`](#sympy.combinatorics.graycode.GrayCode.unrank "sympy.combinatorics.graycode.GrayCode.unrank")'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`unrank`](#sympy.combinatorics.graycode.GrayCode.unrank "sympy.combinatorics.graycode.GrayCode.unrank")'
- en: References
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R47](#id4)]'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R47](#id4)]'
- en: '[https://web.archive.org/web/20200224064753/http://statweb.stanford.edu/~susan/courses/s208/node12.html](https://web.archive.org/web/20200224064753/http://statweb.stanford.edu/~susan/courses/s208/node12.html)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://web.archive.org/web/20200224064753/http://statweb.stanford.edu/~susan/courses/s208/node12.html](https://web.archive.org/web/20200224064753/http://statweb.stanford.edu/~susan/courses/s208/node12.html)'
- en: '[PRE12]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Returns the number of bit vectors in the Gray code.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 返回Gray码中的比特向量数。
- en: Examples
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE13]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Skips the bit generation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 跳过比特生成。
- en: Examples
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE15]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: See also
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`generate_gray`](#sympy.combinatorics.graycode.GrayCode.generate_gray "sympy.combinatorics.graycode.GrayCode.generate_gray")'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[`generate_gray`](#sympy.combinatorics.graycode.GrayCode.generate_gray "sympy.combinatorics.graycode.GrayCode.generate_gray")'
- en: '[PRE16]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Unranks an n-bit sized Gray code of rank k. This method exists so that a derivative
    GrayCode class can define its own code of a given rank.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 反排n位大小的Gray码的排名k。此方法存在，以便派生GrayCode类可以定义其给定排名的自己的代码。
- en: The string here is generated in reverse order to allow for tail-call optimization.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这里生成的字符串是为了允许尾递归优化。
- en: Examples
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE17]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: See also
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`rank`](#sympy.combinatorics.graycode.GrayCode.rank "sympy.combinatorics.graycode.GrayCode.rank")'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rank`](#sympy.combinatorics.graycode.GrayCode.rank "sympy.combinatorics.graycode.GrayCode.rank")'
- en: '[PRE18]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Generates a random bitlist of length n.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 生成长度为n的随机比特列表。
- en: Examples
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE19]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Convert from Gray coding to binary coding.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 从Gray编码转换为二进制编码。
- en: We assume big endian encoding.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设使用大端编码。
- en: Examples
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE21]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: See also
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`bin_to_gray`](#sympy.combinatorics.graycode.bin_to_gray "sympy.combinatorics.graycode.bin_to_gray")'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bin_to_gray`](#sympy.combinatorics.graycode.bin_to_gray "sympy.combinatorics.graycode.bin_to_gray")'
- en: '[PRE22]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Convert from binary coding to gray coding.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 将二进制编码转换为格雷编码。
- en: We assume big endian encoding.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设使用大端编码。
- en: Examples
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE23]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: See also
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`gray_to_bin`](#sympy.combinatorics.graycode.gray_to_bin "sympy.combinatorics.graycode.gray_to_bin")'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gray_to_bin`](#sympy.combinatorics.graycode.gray_to_bin "sympy.combinatorics.graycode.gray_to_bin")'
- en: '[PRE24]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Gets the subset defined by the bitstring.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 获取由比特字符串定义的子集。
- en: Examples
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE25]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: See also
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`graycode_subsets`](#sympy.combinatorics.graycode.graycode_subsets "sympy.combinatorics.graycode.graycode_subsets")'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[`graycode_subsets`](#sympy.combinatorics.graycode.graycode_subsets "sympy.combinatorics.graycode.graycode_subsets")'
- en: '[PRE26]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Generates the subsets as enumerated by a Gray code.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 生成由格雷码枚举的子集。
- en: Examples
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE27]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: See also
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`get_subset_from_bitstring`](#sympy.combinatorics.graycode.get_subset_from_bitstring
    "sympy.combinatorics.graycode.get_subset_from_bitstring")'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[`get_subset_from_bitstring`](#sympy.combinatorics.graycode.get_subset_from_bitstring
    "sympy.combinatorics.graycode.get_subset_from_bitstring")'
