- en: scipy.signal.fftconvolve
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Convolve two N-dimensional arrays using FFT.
  prefs: []
  type: TYPE_NORMAL
- en: Convolve *in1* and *in2* using the fast Fourier transform method, with the output
    size determined by the *mode* argument.
  prefs: []
  type: TYPE_NORMAL
- en: This is generally much faster than [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve
    "scipy.signal.convolve") for large arrays (n > ~500), but can be slower when only
    a few output values are needed, and can only output float arrays (int or object
    array inputs will be cast to float).
  prefs: []
  type: TYPE_NORMAL
- en: As of v0.19, [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")
    automatically chooses this method or the direct method based on an estimation
    of which is faster.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**in1**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: First input.
  prefs: []
  type: TYPE_NORMAL
- en: '**in2**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Second input. Should have the same number of dimensions as *in1*.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**str {‘full’, ‘valid’, ‘same’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'A string indicating the size of the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '`full`'
  prefs: []
  type: TYPE_NORMAL
- en: The output is the full discrete linear convolution of the inputs. (Default)
  prefs: []
  type: TYPE_NORMAL
- en: '`valid`'
  prefs: []
  type: TYPE_NORMAL
- en: The output consists only of those elements that do not rely on the zero-padding.
    In ‘valid’ mode, either *in1* or *in2* must be at least as large as the other
    in every dimension.
  prefs: []
  type: TYPE_NORMAL
- en: '`same`'
  prefs: []
  type: TYPE_NORMAL
- en: The output is the same size as *in1*, centered with respect to the ‘full’ output.
  prefs: []
  type: TYPE_NORMAL
- en: '**axes**int or array_like of ints or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axes over which to compute the convolution. The default is over all axes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**array'
  prefs: []
  type: TYPE_NORMAL
- en: An N-dimensional array containing a subset of the discrete linear convolution
    of *in1* with *in2*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`convolve`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")'
  prefs: []
  type: TYPE_NORMAL
- en: Uses the direct convolution or FFT convolution algorithm depending on which
    is faster.
  prefs: []
  type: TYPE_NORMAL
- en: '[`oaconvolve`](scipy.signal.oaconvolve.html#scipy.signal.oaconvolve "scipy.signal.oaconvolve")'
  prefs: []
  type: TYPE_NORMAL
- en: Uses the overlap-add method to do convolution, which is generally faster when
    the input arrays are large and significantly different in size.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Autocorrelation of white noise is an impulse.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Gaussian blur implemented using FFT convolution. Notice the dark borders around
    the image, due to the zero-padding beyond its boundaries. The [`convolve2d`](scipy.signal.convolve2d.html#scipy.signal.convolve2d
    "scipy.signal.convolve2d") function allows for other types of image boundaries,
    but is far slower.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-fftconvolve-1_00.png](../Images/2765608e64e291f5a0de8c8102b7f8bb.png)![../../_images/scipy-signal-fftconvolve-1_01.png](../Images/4052979d354dc12955a908bf065674fd.png)'
  prefs: []
  type: TYPE_IMG
