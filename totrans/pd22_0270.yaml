- en: pandas.DataFrame.pipe
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pipe.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pipe.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Apply chainable functions that expect Series or DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**function'
  prefs: []
  type: TYPE_NORMAL
- en: Function to apply to the Series/DataFrame. `args`, and `kwargs` are passed into
    `func`. Alternatively a `(callable, data_keyword)` tuple where `data_keyword`
    is a string indicating the keyword of `callable` that expects the Series/DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '***args**iterable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Positional arguments passed into `func`.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**mapping, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A dictionary of keyword arguments passed into `func`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: the return type of `func`.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.apply`](pandas.DataFrame.apply.html#pandas.DataFrame.apply "pandas.DataFrame.apply")'
  prefs: []
  type: TYPE_NORMAL
- en: Apply a function along input axis of DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.map`](pandas.DataFrame.map.html#pandas.DataFrame.map "pandas.DataFrame.map")'
  prefs: []
  type: TYPE_NORMAL
- en: Apply a function elementwise on a whole DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.map`](pandas.Series.map.html#pandas.Series.map "pandas.Series.map")'
  prefs: []
  type: TYPE_NORMAL
- en: Apply a mapping correspondence on a [`Series`](pandas.Series.html#pandas.Series
    "pandas.Series").
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Use `.pipe` when chaining together functions that expect Series, DataFrames
    or GroupBy objects.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Constructing a income DataFrame from a dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Functions that perform tax reductions on an income DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Instead of writing
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: You can write
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'If you have a function that takes the data as (say) the second argument, pass
    a tuple indicating which keyword expects the data. For example, suppose `national_insurance`
    takes its data as `df` in the second argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
