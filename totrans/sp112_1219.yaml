- en: scipy.stats.dirichlet_multinomial
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.dirichlet_multinomial.html#scipy.stats.dirichlet_multinomial](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.dirichlet_multinomial.html#scipy.stats.dirichlet_multinomial)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A Dirichlet multinomial random variable.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Dirichlet multinomial distribution is a compound probability distribution:
    it is the multinomial distribution with number of trials *n* and class probabilities
    `p` randomly sampled from a Dirichlet distribution with concentration parameters
    `alpha`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**alpha**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The concentration parameters. The number of entries along the last axis determines
    the dimensionality of the distribution. Each entry must be strictly positive.
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int or array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The number of trials. Each element must be a strictly positive integer.
  prefs: []
  type: TYPE_NORMAL
- en: '**seed**{None, int, np.random.RandomState, np.random.Generator}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used for drawing random variates. If *seed* is *None*, the *RandomState* singleton
    is used. If *seed* is an int, a new `RandomState` instance is used, seeded with
    seed. If *seed* is already a `RandomState` or `Generator` instance, then that
    object is used. Default is *None*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.dirichlet`](scipy.stats.dirichlet.html#scipy.stats.dirichlet
    "scipy.stats.dirichlet")'
  prefs: []
  type: TYPE_NORMAL
- en: The dirichlet distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.multinomial`](scipy.stats.multinomial.html#scipy.stats.multinomial
    "scipy.stats.multinomial")'
  prefs: []
  type: TYPE_NORMAL
- en: The multinomial distribution.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: Dirichlet-multinomial distribution, Wikipedia, [https://www.wikipedia.org/wiki/Dirichlet-multinomial_distribution](https://www.wikipedia.org/wiki/Dirichlet-multinomial_distribution)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Get the PMF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: If the sum of category counts does not equal the number of trials, the probability
    mass is zero.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Get the log of the PMF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Get the mean
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Get the variance
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Get the covariance
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, the object may be called (as a function) to fix the [`alpha`](scipy.stats.alpha.html#scipy.stats.alpha
    "scipy.stats.alpha") and *n* parameters, returning a “frozen” Dirichlet multinomial
    random variable.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: All methods are fully vectorized. Each element of *x* and [`alpha`](scipy.stats.alpha.html#scipy.stats.alpha
    "scipy.stats.alpha") is a vector (along the last axis), each element of *n* is
    an integer (scalar), and the result is computed element-wise.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Broadcasting according to standard NumPy conventions is supported. Here, we
    have four sets of concentration parameters (each a two element vector) for each
    of three numbers of trials (each a scalar).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **logpmf(x, alpha, n):** | Log of the probability mass function. |'
  prefs: []
  type: TYPE_TB
- en: '| **pmf(x, alpha, n):** | Probability mass function. |'
  prefs: []
  type: TYPE_TB
- en: '| **mean(alpha, n):** | Mean of the Dirichlet multinomial distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **var(alpha, n):** | Variance of the Dirichlet multinomial distribution.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **cov(alpha, n):** | The covariance of the Dirichlet multinomial distribution.
    |'
  prefs: []
  type: TYPE_TB
