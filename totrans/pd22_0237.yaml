- en: pandas.DataFrame.isin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.isin.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.isin.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Whether each element in the DataFrame is contained in values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**values**iterable, Series, DataFrame or dict'
  prefs: []
  type: TYPE_NORMAL
- en: The result will only be true at a location if all the labels match. If values
    is a Series, that’s the index. If values is a dict, the keys must be the column
    names, which must match. If values is a DataFrame, then both the index and column
    labels must match.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame of booleans showing whether each element in the DataFrame is contained
    in values.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.eq`](pandas.DataFrame.eq.html#pandas.DataFrame.eq "pandas.DataFrame.eq")'
  prefs: []
  type: TYPE_NORMAL
- en: Equality test for DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.isin`](pandas.Series.isin.html#pandas.Series.isin "pandas.Series.isin")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent method on Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.str.contains`](pandas.Series.str.contains.html#pandas.Series.str.contains
    "pandas.Series.str.contains")'
  prefs: []
  type: TYPE_NORMAL
- en: Test if pattern or regex is contained within a string of a Series or Index.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: When `values` is a list check whether every value in the DataFrame is present
    in the list (which animals have 0 or 2 legs or wings)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'To check if `values` is *not* in the DataFrame, use the `~` operator:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'When `values` is a dict, we can pass values to check for each column separately:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: When `values` is a Series or DataFrame the index and column must match. Note
    that ‘falcon’ does not match based on the number of legs in other.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
