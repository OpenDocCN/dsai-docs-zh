- en: scipy.optimize.show_options
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.show_options
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.show_options.html#scipy.optimize.show_options](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.show_options.html#scipy.optimize.show_options)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.show_options.html#scipy.optimize.show_options](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.show_options.html#scipy.optimize.show_options)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Show documentation for additional options of optimization solvers.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 显示优化求解器附加选项的文档。
- en: These are method-specific options that can be supplied through the `options`
    dict.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是可以通过`options`字典提供的特定于方法的选项。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**solver**str'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**solver**str'
- en: Type of optimization solver. One of ‘minimize’, ‘minimize_scalar’, ‘root’, ‘root_scalar’,
    ‘linprog’, or ‘quadratic_assignment’.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 优化求解器的类型。可为‘minimize’、‘minimize_scalar’、‘root’、‘root_scalar’、‘linprog’或‘quadratic_assignment’之一。
- en: '**method**str, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**str，可选'
- en: If not given, shows all methods of the specified solver. Otherwise, show only
    the options for the specified method. Valid values corresponds to methods’ names
    of respective solver (e.g., ‘BFGS’ for ‘minimize’).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定，则显示指定求解器的所有方法。否则，仅显示指定方法的选项。有效值对应于相应求解器的方法名称（例如，‘minimize’的‘BFGS’）。
- en: '**disp**bool, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**disp**bool，可选'
- en: Whether to print the result rather than returning it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 是否打印结果而非返回结果。
- en: 'Returns:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: text
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 文本
- en: Either None (for disp=True) or the text string (disp=False)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为`disp=True`时为None，否则为文本字符串（disp=False）。
- en: Notes
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The solver-specific methods are:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 求解器特定的方法包括：
- en: '[`scipy.optimize.minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.optimize.minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize")'
- en: '[Nelder-Mead](../optimize.minimize-neldermead.html#optimize-minimize-neldermead)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Nelder-Mead](../optimize.minimize-neldermead.html#optimize-minimize-neldermead)'
- en: '[Powell](../optimize.minimize-powell.html#optimize-minimize-powell)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Powell](../optimize.minimize-powell.html#optimize-minimize-powell)'
- en: '[CG](../optimize.minimize-cg.html#optimize-minimize-cg)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CG](../optimize.minimize-cg.html#optimize-minimize-cg)'
- en: '[BFGS](../optimize.minimize-bfgs.html#optimize-minimize-bfgs)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[BFGS](../optimize.minimize-bfgs.html#optimize-minimize-bfgs)'
- en: '[Newton-CG](../optimize.minimize-newtoncg.html#optimize-minimize-newtoncg)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Newton-CG](../optimize.minimize-newtoncg.html#optimize-minimize-newtoncg)'
- en: '[L-BFGS-B](../optimize.minimize-lbfgsb.html#optimize-minimize-lbfgsb)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[L-BFGS-B](../optimize.minimize-lbfgsb.html#optimize-minimize-lbfgsb)'
- en: '[TNC](../optimize.minimize-tnc.html#optimize-minimize-tnc)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TNC](../optimize.minimize-tnc.html#optimize-minimize-tnc)'
- en: '[COBYLA](../optimize.minimize-cobyla.html#optimize-minimize-cobyla)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[COBYLA](../optimize.minimize-cobyla.html#optimize-minimize-cobyla)'
- en: '[SLSQP](../optimize.minimize-slsqp.html#optimize-minimize-slsqp)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SLSQP](../optimize.minimize-slsqp.html#optimize-minimize-slsqp)'
- en: '[dogleg](../optimize.minimize-dogleg.html#optimize-minimize-dogleg)'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[dogleg](../optimize.minimize-dogleg.html#optimize-minimize-dogleg)'
- en: '[trust-ncg](../optimize.minimize-trustncg.html#optimize-minimize-trustncg)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[trust-ncg](../optimize.minimize-trustncg.html#optimize-minimize-trustncg)'
- en: '[`scipy.optimize.root`](scipy.optimize.root.html#scipy.optimize.root "scipy.optimize.root")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.optimize.root`](scipy.optimize.root.html#scipy.optimize.root "scipy.optimize.root")'
- en: '[hybr](../optimize.root-hybr.html#optimize-root-hybr)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[hybr](../optimize.root-hybr.html#optimize-root-hybr)'
- en: '[lm](../optimize.root-lm.html#optimize-root-lm)'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[lm](../optimize.root-lm.html#optimize-root-lm)'
- en: '[broyden1](../optimize.root-broyden1.html#optimize-root-broyden1)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[broyden1](../optimize.root-broyden1.html#optimize-root-broyden1)'
- en: '[broyden2](../optimize.root-broyden2.html#optimize-root-broyden2)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[broyden2](../optimize.root-broyden2.html#optimize-root-broyden2)'
- en: '[anderson](../optimize.root-anderson.html#optimize-root-anderson)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[anderson](../optimize.root-anderson.html#optimize-root-anderson)'
- en: '[linearmixing](../optimize.root-linearmixing.html#optimize-root-linearmixing)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[linearmixing](../optimize.root-linearmixing.html#optimize-root-linearmixing)'
- en: '[diagbroyden](../optimize.root-diagbroyden.html#optimize-root-diagbroyden)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[diagbroyden](../optimize.root-diagbroyden.html#optimize-root-diagbroyden)'
- en: '[excitingmixing](../optimize.root-excitingmixing.html#optimize-root-excitingmixing)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[excitingmixing](../optimize.root-excitingmixing.html#optimize-root-excitingmixing)'
- en: '[krylov](../optimize.root-krylov.html#optimize-root-krylov)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[krylov](../optimize.root-krylov.html#optimize-root-krylov)'
- en: '[df-sane](../optimize.root-dfsane.html#optimize-root-dfsane)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[df-sane](../optimize.root-dfsane.html#optimize-root-dfsane)'
- en: '[`scipy.optimize.minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.optimize.minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")'
- en: '[brent](../optimize.minimize_scalar-brent.html#optimize-minimize-scalar-brent)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[brent](../optimize.minimize_scalar-brent.html#optimize-minimize-scalar-brent)'
- en: '[golden](../optimize.minimize_scalar-golden.html#optimize-minimize-scalar-golden)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[golden](../optimize.minimize_scalar-golden.html#optimize-minimize-scalar-golden)'
- en: '[bounded](../optimize.minimize_scalar-bounded.html#optimize-minimize-scalar-bounded)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[bounded](../optimize.minimize_scalar-bounded.html#optimize-minimize-scalar-bounded)'
- en: '[`scipy.optimize.root_scalar`](scipy.optimize.root_scalar.html#scipy.optimize.root_scalar
    "scipy.optimize.root_scalar")'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.optimize.root_scalar`](scipy.optimize.root_scalar.html#scipy.optimize.root_scalar
    "scipy.optimize.root_scalar")'
- en: '[bisect](../optimize.root_scalar-bisect.html#optimize-root-scalar-bisect)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[bisect](../optimize.root_scalar-bisect.html#optimize-root-scalar-bisect)'
- en: '[brentq](../optimize.root_scalar-brentq.html#optimize-root-scalar-brentq)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[brentq](../optimize.root_scalar-brentq.html#optimize-root-scalar-brentq)'
- en: '[brenth](../optimize.root_scalar-brenth.html#optimize-root-scalar-brenth)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[brenth](../optimize.root_scalar-brenth.html#optimize-root-scalar-brenth)'
- en: '[ridder](../optimize.root_scalar-ridder.html#optimize-root-scalar-ridder)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ridder](../optimize.root_scalar-ridder.html#optimize-root-scalar-ridder)'
- en: '[toms748](../optimize.root_scalar-toms748.html#optimize-root-scalar-toms748)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[toms748](../optimize.root_scalar-toms748.html#optimize-root-scalar-toms748)'
- en: '[newton](../optimize.root_scalar-newton.html#optimize-root-scalar-newton)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[newton](../optimize.root_scalar-newton.html#optimize-root-scalar-newton)'
- en: '[secant](../optimize.root_scalar-secant.html#optimize-root-scalar-secant)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[secant](../optimize.root_scalar-secant.html#optimize-root-scalar-secant)'
- en: '[halley](../optimize.root_scalar-halley.html#optimize-root-scalar-halley)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[halley](../optimize.root_scalar-halley.html#optimize-root-scalar-halley)'
- en: '[`scipy.optimize.linprog`](scipy.optimize.linprog.html#scipy.optimize.linprog
    "scipy.optimize.linprog")'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.optimize.linprog`](scipy.optimize.linprog.html#scipy.optimize.linprog
    "scipy.optimize.linprog")'
- en: '[simplex](../optimize.linprog-simplex.html#optimize-linprog-simplex)'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[simplex](../optimize.linprog-simplex.html#optimize-linprog-simplex)'
- en: '[interior-point](../optimize.linprog-interior-point.html#optimize-linprog-interior-point)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[interior-point](../optimize.linprog-interior-point.html#optimize-linprog-interior-point)'
- en: '[revised simplex](../optimize.linprog-revised_simplex.html#optimize-linprog-revised-simplex)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[revised simplex](../optimize.linprog-revised_simplex.html#optimize-linprog-revised-simplex)'
- en: '[highs](../optimize.linprog-highs.html#optimize-linprog-highs)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[highs](../optimize.linprog-highs.html#optimize-linprog-highs)'
- en: '[highs-ds](../optimize.linprog-highs-ds.html#optimize-linprog-highs-ds)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[highs-ds](../optimize.linprog-highs-ds.html#optimize-linprog-highs-ds)'
- en: '[highs-ipm](../optimize.linprog-highs-ipm.html#optimize-linprog-highs-ipm)'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[highs-ipm](../optimize.linprog-highs-ipm.html#optimize-linprog-highs-ipm)'
- en: '[`scipy.optimize.quadratic_assignment`](scipy.optimize.quadratic_assignment.html#scipy.optimize.quadratic_assignment
    "scipy.optimize.quadratic_assignment")'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.optimize.quadratic_assignment`](scipy.optimize.quadratic_assignment.html#scipy.optimize.quadratic_assignment
    "scipy.optimize.quadratic_assignment")'
- en: '[faq](../optimize.qap-faq.html#optimize-qap-faq)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[faq](../optimize.qap-faq.html#optimize-qap-faq)'
- en: '[2opt](../optimize.qap-2opt.html#optimize-qap-2opt)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2opt](../optimize.qap-2opt.html#optimize-qap-2opt)'
- en: Examples
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: 'We can print documentations of a solver in stdout:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在标准输出中打印求解器的文档：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Specifying a method is possible:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 可以指定使用的方法：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We can also get the documentations as a string:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以将文档作为字符串获取：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
