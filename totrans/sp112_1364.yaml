- en: scipy.stats.zscore
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.zscore.html#scipy.stats.zscore](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.zscore.html#scipy.stats.zscore)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the z score.
  prefs: []
  type: TYPE_NORMAL
- en: Compute the z score of each value in the sample, relative to the sample mean
    and standard deviation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: An array like object containing the sample data.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to operate. Default is 0\. If None, compute over the whole
    array *a*.
  prefs: []
  type: TYPE_NORMAL
- en: '**ddof**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Degrees of freedom correction in the calculation of the standard deviation.
    Default is 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**nan_policy**{‘propagate’, ‘raise’, ‘omit’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Defines how to handle when input contains nan. ‘propagate’ returns nan, ‘raise’
    throws an error, ‘omit’ performs the calculations ignoring nan values. Default
    is ‘propagate’. Note that when the value is ‘omit’, nans in the input also propagate
    to the output, but they do not affect the z-scores computed for the non-nan values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**zscore**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The z-scores, standardized by mean and standard deviation of input array *a*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.mean`](https://numpy.org/devdocs/reference/generated/numpy.mean.html#numpy.mean
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: Arithmetic average
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.std`](https://numpy.org/devdocs/reference/generated/numpy.std.html#numpy.std
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: Arithmetic standard deviation
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.gzscore`](scipy.stats.gzscore.html#scipy.stats.gzscore "scipy.stats.gzscore")'
  prefs: []
  type: TYPE_NORMAL
- en: Geometric standard score
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This function preserves ndarray subclasses, and works also with matrices and
    masked arrays (it uses *asanyarray* instead of *asarray* for parameters).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: “Standard score”, *Wikipedia*, [https://en.wikipedia.org/wiki/Standard_score](https://en.wikipedia.org/wiki/Standard_score).
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: Huck, S. W., Cross, T. L., Clark, S. B, “Overcoming misconceptions about Z-scores”,
    Teaching Statistics, vol. 8, pp. 38-40, 1986
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Computing along a specified axis, using n-1 degrees of freedom (`ddof=1`) to
    calculate the standard deviation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'An example with *nan_policy=’omit’*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
