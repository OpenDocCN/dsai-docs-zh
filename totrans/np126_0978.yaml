- en: numpy.lexsort
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.lexsort.html](https://numpy.org/doc/1.26/reference/generated/numpy.lexsort.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Perform an indirect stable sort using a sequence of keys.
  prefs: []
  type: TYPE_NORMAL
- en: Given multiple sorting keys, which can be interpreted as columns in a spreadsheet,
    lexsort returns an array of integer indices that describes the sort order by multiple
    columns. The last key in the sequence is used for the primary sort order, the
    second-to-last key for the secondary sort order, and so on. The keys argument
    must be a sequence of objects that can be converted to arrays of the same shape.
    If a 2D array is provided for the keys argument, its rows are interpreted as the
    sorting keys and sorting is according to the last row, second last row etc.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**keys**(k, N) array or tuple containing k (N,)-shaped sequences'
  prefs: []
  type: TYPE_NORMAL
- en: The *k* different “columns” to be sorted. The last column (or row if *keys*
    is a 2D array) is the primary sort key.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis to be indirectly sorted. By default, sort over the last axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**indices**(N,) ndarray of ints'
  prefs: []
  type: TYPE_NORMAL
- en: Array of indices that sort the keys along the specified axis.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`argsort`](numpy.argsort.html#numpy.argsort "numpy.argsort")'
  prefs: []
  type: TYPE_NORMAL
- en: Indirect sort.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.sort`](numpy.ndarray.sort.html#numpy.ndarray.sort "numpy.ndarray.sort")'
  prefs: []
  type: TYPE_NORMAL
- en: In-place sort.
  prefs: []
  type: TYPE_NORMAL
- en: '[`sort`](numpy.sort.html#numpy.sort "numpy.sort")'
  prefs: []
  type: TYPE_NORMAL
- en: Return a sorted copy of an array.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Sort names: first by surname, then by name.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Sort two columns of numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Note that sorting is first according to the elements of `a`. Secondary sorting
    is according to the elements of `b`.
  prefs: []
  type: TYPE_NORMAL
- en: 'A normal `argsort` would have yielded:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Structured arrays are sorted lexically by `argsort`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
