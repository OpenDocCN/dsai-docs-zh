- en: pandas.factorize
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.factorize
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.factorize.html](https://pandas.pydata.org/docs/reference/api/pandas.factorize.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.factorize.html](https://pandas.pydata.org/docs/reference/api/pandas.factorize.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Encode the object as an enumerated type or categorical variable.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将对象编码为枚举类型或分类变量。
- en: This method is useful for obtaining a numeric representation of an array when
    all that matters is identifying distinct values. factorize is available as both
    a top-level function [`pandas.factorize()`](#pandas.factorize "pandas.factorize"),
    and as a method [`Series.factorize()`](pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize") and [`Index.factorize()`](pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize").
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有重要的是识别不同值时，此方法对于获取数组的数值表示很有用。factorize可作为顶级函数[`pandas.factorize()`](#pandas.factorize
    "pandas.factorize")和方法[`Series.factorize()`](pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize")以及[`Index.factorize()`](pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize")。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**values**sequence'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**values**序列'
- en: A 1-D sequence. Sequences that aren’t pandas objects are coerced to ndarrays
    before factorization.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一个1-D序列。不是pandas对象的序列在因子化之前被强制转换为ndarrays。
- en: '**sort**bool, default False'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**sort**bool，默认为False'
- en: Sort uniques and shuffle codes to maintain the relationship.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对uniques进行排序并洗牌codes以保持关系。
- en: '**use_na_sentinel**bool, default True'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**use_na_sentinel**bool，默认为True'
- en: If True, the sentinel -1 will be used for NaN values. If False, NaN values will
    be encoded as non-negative integers and will not drop the NaN from the uniques
    of the values.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则NaN值将使用哨兵-1。如果为False，则NaN值将被编码为非负整数，并且不会从值的uniques中删除NaN。
- en: New in version 1.5.0.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 1.5.0版中的新功能。
- en: '**size_hint**int, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**size_hint**int，可选'
- en: Hint to the hashtable sizer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希表大小提示。
- en: 'Returns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**codes**ndarray'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**codes**ndarray'
- en: An integer ndarray that’s an indexer into uniques. `uniques.take(codes)` will
    have the same values as values.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一个整数ndarray，用作uniques的索引器。`uniques.take(codes)`将具有与values相同的值。
- en: '**uniques**ndarray, Index, or Categorical'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**uniques**ndarray、Index或Categorical'
- en: The unique valid values. When values is Categorical, uniques is a Categorical.
    When values is some other pandas object, an Index is returned. Otherwise, a 1-D
    ndarray is returned.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的有效值。当值为Categorical时，uniques是一个Categorical。当值为其他pandas对象时，返回一个Index。否则，返回一个1-D
    ndarray。
- en: Note
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Even if there’s a missing value in values, uniques will *not* contain an entry
    for it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 即使值中有缺失值，uniques也*不会*包含其条目���
- en: See also
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`cut`](pandas.cut.html#pandas.cut "pandas.cut")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`cut`](pandas.cut.html#pandas.cut "pandas.cut")'
- en: Discretize continuous-valued array.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 将连续值数组离散化。
- en: '[`unique`](pandas.unique.html#pandas.unique "pandas.unique")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`unique`](pandas.unique.html#pandas.unique "pandas.unique")'
- en: Find the unique value in an array.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在数组中查找唯一值。
- en: Notes
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Reference [the user guide](../../user_guide/reshaping.html#reshaping-factorize)
    for more examples.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[用户指南](../../user_guide/reshaping.html#reshaping-factorize)获取更多示例。
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: These examples all show factorize as a top-level method like `pd.factorize(values)`.
    The results are identical for methods like [`Series.factorize()`](pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize").
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例都显示了factorize作为类似`pd.factorize(values)`的顶级方法。对于类似[`Series.factorize()`](pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize")的方法，结果是相同的。
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: With `sort=True`, the uniques will be sorted, and codes will be shuffled so
    that the relationship is the maintained.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当`sort=True`时，uniques将被排序，codes将被洗牌，以保持关系。
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When `use_na_sentinel=True` (the default), missing values are indicated in the
    codes with the sentinel value `-1` and missing values are not included in uniques.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当`use_na_sentinel=True`（默认值）时，在代码中用哨兵值`-1`表示缺失值，并且缺失值不包括在uniques中。
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Thus far, we’ve only factorized lists (which are internally coerced to NumPy
    arrays). When factorizing pandas objects, the type of uniques will differ. For
    Categoricals, a Categorical is returned.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只对列表进行了因子化（这些列表在内部被强制转换为NumPy数组）。当对pandas对象进行因子化时，uniques的类型将不同。对于Categoricals，将返回一个Categorical。
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Notice that `'b'` is in `uniques.categories`, despite not being present in `cat.values`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`'b'`在`uniques.categories`中，尽管在`cat.values`中不存在。
- en: For all other pandas objects, an Index of the appropriate type is returned.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有其他pandas对象，将返回适当类型的Index。
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If NaN is in the values, and we want to include NaN in the uniques of the values,
    it can be achieved by setting `use_na_sentinel=False`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值中有NaN，并且我们希望在值的uniques中包含NaN，则可以通过设置`use_na_sentinel=False`来实现。
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
