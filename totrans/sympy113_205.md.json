["```py\nclass sympy.physics.quantum.cg.CG(j1, m1, j2, m2, j3, m3)\n```", "```py\n>>> from sympy.physics.quantum.cg import CG\n>>> from sympy import S\n>>> cg = CG(S(3)/2, S(3)/2, S(1)/2, -S(1)/2, 1, 1)\n>>> cg\nCG(3/2, 3/2, 1/2, -1/2, 1, 1)\n>>> cg.doit()\nsqrt(3)/2\n>>> CG(j1=S(1)/2, m1=-S(1)/2, j2=S(1)/2, m2=+S(1)/2, j3=1, m3=0).doit()\nsqrt(2)/2 \n```", "```py\nclass sympy.physics.quantum.cg.Wigner3j(j1, m1, j2, m2, j3, m3)\n```", "```py\n>>> from sympy.physics.quantum.cg import Wigner3j\n>>> w3j = Wigner3j(6,0,4,0,2,0)\n>>> w3j\nWigner3j(6, 0, 4, 0, 2, 0)\n>>> w3j.doit()\nsqrt(715)/143 \n```", "```py\nclass sympy.physics.quantum.cg.Wigner6j(j1, j2, j12, j3, j, j23)\n```", "```py\nclass sympy.physics.quantum.cg.Wigner9j(j1, j2, j12, j3, j4, j34, j13, j24, j)\n```", "```py\nsympy.physics.quantum.cg.cg_simp(e)\n```", "```py\n>>> from sympy.physics.quantum.cg import CG, cg_simp\n>>> a = CG(1,1,0,0,1,1)\n>>> b = CG(1,0,0,0,1,0)\n>>> c = CG(1,-1,0,0,1,-1)\n>>> cg_simp(a+b+c)\n3 \n```"]