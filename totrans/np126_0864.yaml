- en: numpy.frexp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.frexp.html](https://numpy.org/doc/1.26/reference/generated/numpy.frexp.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Decompose the elements of x into mantissa and twos exponent.
  prefs: []
  type: TYPE_NORMAL
- en: Returns (*mantissa*, *exponent*), where `x = mantissa * 2**exponent`. The mantissa
    lies in the open interval(-1, 1), while the twos exponent is a signed integer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array of numbers to be decomposed.
  prefs: []
  type: TYPE_NORMAL
- en: '**out1**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Output array for the mantissa. Must have the same shape as *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**out2**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Output array for the exponent. Must have the same shape as *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  prefs: []
  type: TYPE_NORMAL
- en: '**where**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**mantissa**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Floating values between -1 and 1. This is a scalar if *x* is a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: '**exponent**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Integer exponents of 2. This is a scalar if *x* is a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ldexp`](numpy.ldexp.html#numpy.ldexp "numpy.ldexp")'
  prefs: []
  type: TYPE_NORMAL
- en: Compute `y = x1 * 2**x2`, the inverse of [`frexp`](#numpy.frexp "numpy.frexp").
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Complex dtypes are not supported, they will raise a TypeError.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
