- en: scipy.stats.nbinom
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.nbinom.html#scipy.stats.nbinom](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.nbinom.html#scipy.stats.nbinom)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A negative binomial discrete random variable.
  prefs: []
  type: TYPE_NORMAL
- en: As an instance of the [`rv_discrete`](scipy.stats.rv_discrete.html#scipy.stats.rv_discrete
    "scipy.stats.rv_discrete") class, [`nbinom`](#scipy.stats.nbinom "scipy.stats.nbinom")
    object inherits from it a collection of generic methods (see below for the full
    list), and completes them with details specific for this particular distribution.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`hypergeom`](scipy.stats.hypergeom.html#scipy.stats.hypergeom "scipy.stats.hypergeom"),
    [`binom`](scipy.stats.binom.html#scipy.stats.binom "scipy.stats.binom"), [`nhypergeom`](scipy.stats.nhypergeom.html#scipy.stats.nhypergeom
    "scipy.stats.nhypergeom")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Negative binomial distribution describes a sequence of i.i.d. Bernoulli trials,
    repeated until a predefined, non-random number of successes occurs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The probability mass function of the number of failures for [`nbinom`](#scipy.stats.nbinom
    "scipy.stats.nbinom") is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[f(k) = \binom{k+n-1}{n-1} p^n (1-p)^k\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(k \ge 0\), \(0 < p \leq 1\)
  prefs: []
  type: TYPE_NORMAL
- en: '[`nbinom`](#scipy.stats.nbinom "scipy.stats.nbinom") takes \(n\) and \(p\)
    as shape parameters where \(n\) is the number of successes, \(p\) is the probability
    of a single success, and \(1-p\) is the probability of a single failure.'
  prefs: []
  type: TYPE_NORMAL
- en: Another common parameterization of the negative binomial distribution is in
    terms of the mean number of failures \(\mu\) to achieve \(n\) successes. The mean
    \(\mu\) is related to the probability of success as
  prefs: []
  type: TYPE_NORMAL
- en: \[p = \frac{n}{n + \mu}\]
  prefs: []
  type: TYPE_NORMAL
- en: The number of successes \(n\) may also be specified in terms of a “dispersion”,
    “heterogeneity”, or “aggregation” parameter \(\alpha\), which relates the mean
    \(\mu\) to the variance \(\sigma^2\), e.g. \(\sigma^2 = \mu + \alpha \mu^2\).
    Regardless of the convention used for \(\alpha\),
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}p &= \frac{\mu}{\sigma^2} \\ n &= \frac{\mu^2}{\sigma^2 - \mu}\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: The probability mass function above is defined in the “standardized” form. To
    shift distribution use the `loc` parameter. Specifically, `nbinom.pmf(k, n, p,
    loc)` is identically equivalent to `nbinom.pmf(k - loc, n, p)`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the first four moments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Display the probability mass function (`pmf`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, the distribution object can be called (as a function) to fix
    the shape and location. This returns a “frozen” RV object holding the given parameters
    fixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Freeze the distribution and display the frozen `pmf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-nbinom-1_00_00.png](../Images/dfd34d5b7c8bc7578cefff8995c75288.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Check accuracy of `cdf` and `ppf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate random numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **rvs(n, p, loc=0, size=1, random_state=None)** | Random variates. |'
  prefs: []
  type: TYPE_TB
- en: '| **pmf(k, n, p, loc=0)** | Probability mass function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpmf(k, n, p, loc=0)** | Log of the probability mass function. |'
  prefs: []
  type: TYPE_TB
- en: '| **cdf(k, n, p, loc=0)** | Cumulative distribution function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logcdf(k, n, p, loc=0)** | Log of the cumulative distribution function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **sf(k, n, p, loc=0)** | Survival function (also defined as `1 - cdf`, but
    *sf* is sometimes more accurate). |'
  prefs: []
  type: TYPE_TB
- en: '| **logsf(k, n, p, loc=0)** | Log of the survival function. |'
  prefs: []
  type: TYPE_TB
- en: '| **ppf(q, n, p, loc=0)** | Percent point function (inverse of `cdf` — percentiles).
    |'
  prefs: []
  type: TYPE_TB
- en: '| **isf(q, n, p, loc=0)** | Inverse survival function (inverse of `sf`). |'
  prefs: []
  type: TYPE_TB
- en: '| **stats(n, p, loc=0, moments=’mv’)** | Mean(‘m’), variance(‘v’), skew(‘s’),
    and/or kurtosis(‘k’). |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(n, p, loc=0)** | (Differential) entropy of the RV. |'
  prefs: []
  type: TYPE_TB
- en: '| **expect(func, args=(n, p), loc=0, lb=None, ub=None, conditional=False)**
    | Expected value of a function (of one argument) with respect to the distribution.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **median(n, p, loc=0)** | Median of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **mean(n, p, loc=0)** | Mean of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **var(n, p, loc=0)** | Variance of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **std(n, p, loc=0)** | Standard deviation of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **interval(confidence, n, p, loc=0)** | Confidence interval with equal areas
    around the median. |'
  prefs: []
  type: TYPE_TB
