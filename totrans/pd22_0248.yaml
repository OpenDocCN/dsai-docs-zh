- en: pandas.DataFrame.mod
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mod.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mod.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Get Modulo of dataframe and other, element-wise (binary operator mod).
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent to `dataframe % other`, but with support to substitute a fill_value
    for missing data in one of the inputs. With reverse version, rmod.
  prefs: []
  type: TYPE_NORMAL
- en: 'Among flexible wrappers (add, sub, mul, div, floordiv, mod, pow) to arithmetic
    operators: +, -, *, /, //, %, **.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**other**scalar, sequence, Series, dict or DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: Any single or multiple element data structure, or list-like object.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to compare by the index (0 or ‘index’) or columns. (1 or ‘columns’).
    For Series input, axis to match Series index on.
  prefs: []
  type: TYPE_NORMAL
- en: '**level**int or label'
  prefs: []
  type: TYPE_NORMAL
- en: Broadcast across a level, matching Index values on the passed MultiIndex level.
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**float or None, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Fill existing missing (NaN) values, and any new element needed for successful
    DataFrame alignment, with this value before computation. If data in both corresponding
    DataFrame locations is missing the result will be missing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Result of the arithmetic operation.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.add`](pandas.DataFrame.add.html#pandas.DataFrame.add "pandas.DataFrame.add")'
  prefs: []
  type: TYPE_NORMAL
- en: Add DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.sub`](pandas.DataFrame.sub.html#pandas.DataFrame.sub "pandas.DataFrame.sub")'
  prefs: []
  type: TYPE_NORMAL
- en: Subtract DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.mul`](pandas.DataFrame.mul.html#pandas.DataFrame.mul "pandas.DataFrame.mul")'
  prefs: []
  type: TYPE_NORMAL
- en: Multiply DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.div`](pandas.DataFrame.div.html#pandas.DataFrame.div "pandas.DataFrame.div")'
  prefs: []
  type: TYPE_NORMAL
- en: Divide DataFrames (float division).
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.truediv`](pandas.DataFrame.truediv.html#pandas.DataFrame.truediv
    "pandas.DataFrame.truediv")'
  prefs: []
  type: TYPE_NORMAL
- en: Divide DataFrames (float division).
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.floordiv`](pandas.DataFrame.floordiv.html#pandas.DataFrame.floordiv
    "pandas.DataFrame.floordiv")'
  prefs: []
  type: TYPE_NORMAL
- en: Divide DataFrames (integer division).
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.mod`](#pandas.DataFrame.mod "pandas.DataFrame.mod")'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate modulo (remainder after division).
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.pow`](pandas.DataFrame.pow.html#pandas.DataFrame.pow "pandas.DataFrame.pow")'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate exponential power.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Mismatched indices will be unioned together.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Add a scalar with operator version which return the same results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Divide by constant with reverse version.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Subtract a list and Series by axis with operator version.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Multiply a dictionary by axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Multiply a DataFrame of different shape with operator version.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Divide by a MultiIndex by level.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
