- en: numpy.sum
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.sum
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.sum.html](https://numpy.org/doc/1.26/reference/generated/numpy.sum.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.sum.html](https://numpy.org/doc/1.26/reference/generated/numpy.sum.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Sum of array elements over a given axis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 给定轴上数组元素的总和。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**a**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like'
- en: Elements to sum.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要求和的元素。
- en: '**axis**None or int or tuple of ints, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**None或int或int的元组，可选'
- en: Axis or axes along which a sum is performed. The default, axis=None, will sum
    all of the elements of the input array. If axis is negative it counts from the
    last to the first axis.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 执行求和的轴或轴。默认axis=None将对输入数组的所有元素求和。如果axis为负，则从最后一个轴到第一个轴计数。
- en: New in version 1.7.0.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 1.7.0版中新增。
- en: If axis is a tuple of ints, a sum is performed on all of the axes specified
    in the tuple instead of a single axis or all the axes as before.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果axis是int的元组，则对元组中指定的所有轴执行求和，而不是以前的单个轴或所有轴。
- en: '**dtype**dtype, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**dtype，可选'
- en: The type of the returned array and of the accumulator in which the elements
    are summed. The dtype of *a* is used by default unless *a* has an integer dtype
    of less precision than the default platform integer. In that case, if *a* is signed
    then the platform integer is used while if *a* is unsigned then an unsigned integer
    of the same precision as the platform integer is used.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的数组类型以及对元素求和的累加器的类型。除非*a*具有比默认平台整数更低精度的整数dtype，否则默认情况下使用*a*的dtype。在这种情况下，如果*a*为有符号数，则使用平台整数，而如果*a*为无符号数，则使用与平台整数相同精度的无符号整数。
- en: '**out**ndarray, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray，可选'
- en: Alternative output array in which to place the result. It must have the same
    shape as the expected output, but the type of the output values will be cast if
    necessary.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 可替代的输出数组，用于放置结果。它必须具有与期望输出相同的形状，但必要时将转换输出值的类型。
- en: '**keepdims**bool, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**keepdims**bool，可选'
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the input array.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设置为True，则经过规约的轴将作为大小为一的维度保留在结果中。使用此选项，结果将与输入数组正确广播。
- en: If the default value is passed, then *keepdims* will not be passed through to
    the [`sum`](#numpy.sum "numpy.sum") method of sub-classes of [`ndarray`](numpy.ndarray.html#numpy.ndarray
    "numpy.ndarray"), however any non-default value will be. If the sub-class’ method
    does not implement *keepdims* any exceptions will be raised.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递了默认值，则*keepdims*将不会传递给[`sum`](https://numpy.org/doc/1.26/reference/generated/numpy.sum.html#numpy.sum
    "numpy.sum")的子类方法，但任何非默认值都将传递。如果子类方法未实现*keepdims*，则会引发异常。
- en: '**initial**scalar, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**initial**scalar，可选'
- en: Starting value for the sum. See [`reduce`](numpy.ufunc.reduce.html#numpy.ufunc.reduce
    "numpy.ufunc.reduce") for details.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 求和的起始值。详情请参见[`reduce`](https://numpy.org/doc/1.26/reference/generated/numpy.sum.html#numpy.ufunc.reduce
    "numpy.ufunc.reduce")。
- en: New in version 1.15.0.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 1.15.0版中新增。
- en: '**where**array_like of bool, optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**bool数组，可选'
- en: Elements to include in the sum. See [`reduce`](numpy.ufunc.reduce.html#numpy.ufunc.reduce
    "numpy.ufunc.reduce") for details.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 包含在总和中的元素。详情请参见[`reduce`](https://numpy.org/doc/1.26/reference/generated/numpy.sum.html#numpy.ufunc.reduce
    "numpy.ufunc.reduce")。
- en: New in version 1.17.0.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 1.17.0版中新增。
- en: 'Returns:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '返回:'
- en: '**sum_along_axis**ndarray'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**sum_along_axis**ndarray'
- en: An array with the same shape as *a*, with the specified axis removed. If *a*
    is a 0-d array, or if *axis* is None, a scalar is returned. If an output array
    is specified, a reference to *out* is returned.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一个与*a*形状相同的数组，指定轴已移除。如果*a*是0维数组，或者axis为None，则返回一个标量。如果指定了输出数组，则返回*out*的引用。
- en: See also
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`ndarray.sum`](numpy.ndarray.sum.html#numpy.ndarray.sum "numpy.ndarray.sum")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ndarray.sum`](https://numpy.org/doc/1.26/reference/generated/numpy.sum.html#numpy.ndarray.sum
    "numpy.ndarray.sum")'
- en: Equivalent method.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 等效方法。
- en: '`add.reduce`'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`add.reduce`'
- en: Equivalent functionality of [`add`](numpy.add.html#numpy.add "numpy.add").
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 与[`add`](https://numpy.org/doc/1.26/reference/generated/numpy.sum.html#numpy.add
    "numpy.add")相同的功能。
- en: '[`cumsum`](numpy.cumsum.html#numpy.cumsum "numpy.cumsum")'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`cumsum`](https://numpy.org/doc/1.26/reference/generated/numpy.sum.html#numpy.cumsum
    "numpy.cumsum")'
- en: Cumulative sum of array elements.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 数组元素的累积和。
- en: '[`trapz`](numpy.trapz.html#numpy.trapz "numpy.trapz")'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trapz`](https://numpy.org/doc/1.26/reference/generated/numpy.trapz.html#numpy.trapz
    "numpy.trapz")'
- en: Integration of array values using the composite trapezoidal rule.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用复合梯形规则对数组值进行积分。
- en: '[`mean`](numpy.mean.html#numpy.mean "numpy.mean"), [`average`](numpy.average.html#numpy.average
    "numpy.average")'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mean`](https://numpy.org/doc/1.26/reference/generated/numpy.mean.html#numpy.mean
    "numpy.mean"), [`average`](https://numpy.org/doc/1.26/reference/generated/numpy.average.html#numpy.average
    "numpy.average")'
- en: Notes
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: Arithmetic is modular when using integer types, and no error is raised on overflow.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用整数类型时，算术是模数的，并且在溢出时不会引发错误。
- en: 'The sum of an empty array is the neutral element 0:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 空数组的总和是中性元素`0`：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For floating point numbers the numerical precision of sum (and `np.add.reduce`)
    is in general limited by directly adding each number individually to the result
    causing rounding errors in every step. However, often numpy will use a numerically
    better approach (partial pairwise summation) leading to improved precision in
    many use-cases. This improved precision is always provided when no `axis` is given.
    When `axis` is given, it will depend on which axis is summed. Technically, to
    provide the best speed possible, the improved precision is only used when the
    summation is along the fast axis in memory. Note that the exact precision may
    vary depending on other parameters. In contrast to NumPy, Python’s `math.fsum`
    function uses a slower but more precise approach to summation. Especially when
    summing a large number of lower precision floating point numbers, such as `float32`,
    numerical errors can become significant. In such cases it can be advisable to
    use *dtype=”float64”* to use a higher precision for the output.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于浮点数，`sum`（和`np.add.reduce`）的数值精度通常受到直接将每个数字逐个加到结果中的限制，从而在每一步都引起舍入误差。然而，numpy通常会使用一个数值更好的方法（部分成对求和），从而在许多用例中提供了改进的精度。当没有给出`axis`时，总是提供这种改进的精度。当给出`axis`时，它将取决于哪个轴被求和。从技术上讲，为了提供可能的最佳速度，只有在内存中的快速轴上进行求和时，才使用改进的精度。注意，确切的精度可能会因其他参数而异。与NumPy相反，Python的`math.fsum`函数使用了一种更慢但更精确的求和方法。特别是在求和大量低精度浮点数，如`float32`时，数值误差可能会变得显著。在这种情况下，建议使用*dtype="float64"*以使用更高的输出精度。
- en: Examples
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If the accumulator is too small, overflow occurs:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果累加器太小，就会发生溢出：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can also start the sum with a value other than zero:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以用一个不为零的值开始求和：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
