- en: Integrals
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 积分
- en: Original text：[https://docs.sympy.org/latest/modules/integrals/integrals.html](https://docs.sympy.org/latest/modules/integrals/integrals.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://docs.sympy.org/latest/modules/integrals/integrals.html](https://docs.sympy.org/latest/modules/integrals/integrals.html)
- en: The `integrals` module in SymPy implements methods to calculate definite and
    indefinite integrals of expressions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 中的 `integrals` 模块实现了计算表达式的定积分和不定积分的方法。
- en: Principal method in this module is [`integrate()`](#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate")
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块中的主要方法是 [`integrate()`](#sympy.integrals.integrals.integrate "sympy.integrals.integrals.integrate")
- en: '`integrate(f, x)` returns the indefinite integral \(\int f\,dx\)'
  id: totrans-4
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`integrate(f, x)` 返回不定积分 \(\int f\,dx\)'
- en: ''
  id: totrans-5
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-6
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`integrate(f, (x, a, b))` returns the definite integral \(\int_{a}^{b} f\,dx\)'
  id: totrans-7
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`integrate(f, (x, a, b))` 返回确定积分 \(\int_{a}^{b} f\,dx\)'
- en: Examples
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例
- en: 'SymPy can integrate a vast array of functions. It can integrate polynomial
    functions:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 可以积分各种函数。它可以积分多项式函数：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Rational functions:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有理函数：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Exponential-polynomial functions. These multiplicative combinations of polynomials
    and the functions `exp`, `cos` and `sin` can be integrated by hand using repeated
    integration by parts, which is an extremely tedious process. Happily, SymPy will
    deal with these integrals.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 指数多项式函数。这些多项式与函数 `exp`、`cos` 和 `sin` 的乘积组合可以通过重复分部积分手工积分，这是一个极其繁琐的过程。幸运的是，SymPy
    将处理这些积分。
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'even a few nonelementary integrals (in particular, some integrals involving
    the error function) can be evaluated:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 即使有一些非初等积分（特别是一些涉及误差函数的积分）也可以计算：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '## Integral Transforms'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '## 积分变换'
- en: SymPy has special support for definite integrals, and integral transforms.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 对确定积分和积分变换有特殊支持。
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Compute the Mellin transform \(F(s)\) of \(f(x)\),
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 \(f(x)\) 的 Mellin 变换 \(F(s)\)，
- en: \[F(s) = \int_0^\infty x^{s-1} f(x) \mathrm{d}x.\]
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: \[F(s) = \int_0^\infty x^{s-1} f(x) \mathrm{d}x.\]
- en: For all “sensible” functions, this converges absolutely in a strip
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有“合理”的函数，这在一个条带内绝对收敛。
- en: \(a < \operatorname{Re}(s) < b\).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: \(a < \operatorname{Re}(s) < b\).
- en: Explanation
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The Mellin transform is related via change of variables to the Fourier transform,
    and also to the (bilateral) Laplace transform.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Mellin 变换通过变量变换与 Fourier 变换相关联，并且与（双边）拉普拉斯变换也相关。
- en: This function returns `(F, (a, b), cond)` where `F` is the Mellin transform
    of `f`, `(a, b)` is the fundamental strip (as above), and `cond` are auxiliary
    convergence conditions.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回 `(F, (a, b), cond)`，其中 `F` 是 `f` 的 Mellin 变换，`(a, b)` 是基本条（如上所述），而 `cond`
    是辅助收敛条件。
- en: If the integral cannot be computed in closed form, this function returns an
    unevaluated [`MellinTransform`](#sympy.integrals.transforms.MellinTransform "sympy.integrals.transforms.MellinTransform")
    object.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果积分无法以闭合形式计算，则此函数返回一个未评估的 [`MellinTransform`](#sympy.integrals.transforms.MellinTransform
    "sympy.integrals.transforms.MellinTransform") 对象。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). If `noconds=False`, then
    only \(F\) will be returned (i.e. not `cond`, and also not the strip `(a, b)`).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可能提示的描述，请参阅 [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit") 的文档字符串。如果 `noconds=False`，则仅返回
    \(F\)（即不返回 `cond`，也不返回条带 `(a, b)`）。
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: See also
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`inverse_mellin_transform`](#sympy.integrals.transforms.inverse_mellin_transform
    "sympy.integrals.transforms.inverse_mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform"), [`fourier_transform`](#sympy.integrals.transforms.fourier_transform
    "sympy.integrals.transforms.fourier_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`inverse_mellin_transform`](#sympy.integrals.transforms.inverse_mellin_transform
    "sympy.integrals.transforms.inverse_mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform"), [`fourier_transform`](#sympy.integrals.transforms.fourier_transform
    "sympy.integrals.transforms.fourier_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")'
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Class representing unevaluated Mellin transforms.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未评估的 Mellin 变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如何使用这个类，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")文档字符串。
- en: For how to compute Mellin transforms, see the [`mellin_transform()`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform") docstring.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如何计算Mellin变换，请参阅[`mellin_transform()`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform")文档字符串。
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Compute the inverse Mellin transform of \(F(s)\) over the fundamental strip
    given by `strip=(a, b)`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定由`strip=(a, b)`确定的基本带上\(F(s)\)的逆Mellin变换。
- en: Explanation
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This can be defined as
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以定义为
- en: \[f(x) = \frac{1}{2\pi i} \int_{c - i\infty}^{c + i\infty} x^{-s} F(s) \mathrm{d}s,\]
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: \[f(x) = \frac{1}{2\pi i} \int_{c - i\infty}^{c + i\infty} x^{-s} F(s) \mathrm{d}s,\]
- en: for any \(c\) in the fundamental strip. Under certain regularity conditions
    on \(F\) and/or \(f\), this recovers \(f\) from its Mellin transform \(F\) (and
    vice versa), for positive real \(x\).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任意在基本带中的\(c\)。在\(F\)和/或\(f\)的某些正则条件下，这可以从其Mellin变换\(F\)（及反之）恢复\(f\)，对于正实数\(x\)。
- en: One of \(a\) or \(b\) may be passed as `None`; a suitable \(c\) will be inferred.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: \(a\)或\(b\)中的一个可以传递为`None`；适当的\(c\)将被推断。
- en: If the integral cannot be computed in closed form, this function returns an
    unevaluated [`InverseMellinTransform`](#sympy.integrals.transforms.InverseMellinTransform
    "sympy.integrals.transforms.InverseMellinTransform") object.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法闭合计算积分，则此函数返回一个未评估的[`InverseMellinTransform`](#sympy.integrals.transforms.InverseMellinTransform
    "sympy.integrals.transforms.InverseMellinTransform")对象。
- en: Note that this function will assume x to be positive and real, regardless of
    the SymPy assumptions!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此函数将假定x为正实数，不考虑SymPy的假设！
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit").
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可能提示的描述，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")文档字符串。
- en: Examples
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The fundamental strip matters:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 基本带很重要：
- en: '[PRE9]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: See also
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`mellin_transform`](#sympy.integrals.transforms.mellin_transform "sympy.integrals.transforms.mellin_transform"),
    [`hankel_transform`](#sympy.integrals.transforms.hankel_transform "sympy.integrals.transforms.hankel_transform"),
    [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mellin_transform`](#sympy.integrals.transforms.mellin_transform "sympy.integrals.transforms.mellin_transform"),
    [`hankel_transform`](#sympy.integrals.transforms.hankel_transform "sympy.integrals.transforms.hankel_transform"),
    [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")'
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Class representing unevaluated inverse Mellin transforms.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未评估逆Mellin变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如何使用这个类，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")文档字符串。
- en: For how to compute inverse Mellin transforms, see the [`inverse_mellin_transform()`](#sympy.integrals.transforms.inverse_mellin_transform
    "sympy.integrals.transforms.inverse_mellin_transform") docstring.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如何计算逆Mellin变换，请参阅[`inverse_mellin_transform()`](#sympy.integrals.transforms.inverse_mellin_transform
    "sympy.integrals.transforms.inverse_mellin_transform")文档字符串。
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Compute the Laplace Transform \(F(s)\) of \(f(t)\),
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 计算拉普拉斯变换 \(F(s)\) 的 \(f(t)\)，
- en: \[F(s) = \int_{0^{-}}^\infty e^{-st} f(t) \mathrm{d}t.\]
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: \[F(s) = \int_{0^{-}}^\infty e^{-st} f(t) \mathrm{d}t.\]
- en: Explanation
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For all sensible functions, this converges absolutely in a half-plane
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有合理的函数，这在半平面绝对收敛
- en: \[a < \operatorname{Re}(s)\]
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: \[a < \operatorname{Re}(s)\]
- en: This function returns `(F, a, cond)` where `F` is the Laplace transform of `f`,
    \(a\) is the half-plane of convergence, and \(cond\) are auxiliary convergence
    conditions.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回`(F, a, cond)`，其中`F`是`f`的Laplace变换，\(a\)是收敛的半平面，\(cond\)是辅助收敛条件。
- en: The implementation is rule-based, and if you are interested in which rules are
    applied, and whether integration is attempted, you can switch debug information
    on by setting `sympy.SYMPY_DEBUG=True`. The numbers of the rules in the debug
    information (and the code) refer to Bateman’s Tables of Integral Transforms [1].
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 实现是基于规则的，如果您对应用了哪些规则感兴趣，以及是否尝试了集成，可以通过设置`sympy.SYMPY_DEBUG=True`来打开调试信息。调试信息中的规则编号（及代码）参考Bateman的积分变换表[1]。
- en: The lower bound is \(0-\), meaning that this bound should be approached from
    the lower side. This is only necessary if distributions are involved. At present,
    it is only done if \(f(t)\) contains `DiracDelta`, in which case the Laplace transform
    is computed implicitly as
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 下限为 \( 0^- \)，意味着应该从下侧接近此下限。仅当涉及分布时才需要这样做。目前仅在 \( f(t) \) 包含 `DiracDelta` 时才执行此操作，此时
    Laplace 变换将隐式计算为
- en: \[F(s) = \lim_{\tau\to 0^{-}} \int_{\tau}^\infty e^{-st} f(t) \mathrm{d}t\]
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: \[F(s) = \lim_{\tau\to 0^{-}} \int_{\tau}^\infty e^{-st} f(t) \mathrm{d}t\]
- en: by applying rules.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用规则。
- en: If the Laplace transform cannot be fully computed in closed form, this function
    returns expressions containing unevaluated [`LaplaceTransform`](#sympy.integrals.transforms.LaplaceTransform
    "sympy.integrals.transforms.LaplaceTransform") objects.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Laplace 变换无法以封闭形式完全计算，则此函数将返回包含未评估的 [`LaplaceTransform`](#sympy.integrals.transforms.LaplaceTransform
    "sympy.integrals.transforms.LaplaceTransform") 对象的表达式。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). If `noconds=True`, only
    \(F\) will be returned (i.e. not `cond`, and also not the plane `a`).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取可能的提示描述，请参阅 [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit") 的文档字符串。如果 `noconds=True`，只返回
    \( F \)（即不包括 `cond`，也不包括平面 `a`）。
- en: 'Deprecated since version 1.9: Legacy behavior for matrices where `laplace_transform`
    with `noconds=False` (the default) returns a Matrix whose elements are tuples.
    The behavior of `laplace_transform` for matrices will change in a future release
    of SymPy to return a tuple of the transformed Matrix and the convergence conditions
    for the matrix as a whole. Use `legacy_matrix=False` to enable the new behavior.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本1.9起弃用：对于 `laplace_transform` 使用 `noconds=False`（默认），返回一个元素为元组的矩阵的旧行为。SymPy
    未来版本中，`laplace_transform` 在矩阵的行为将发生变化，以返回转换后的矩阵及其整体收敛条件的元组。使用 `legacy_matrix=False`
    可启用新行为。
- en: Examples
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: There are also helper functions that make it easy to solve differential equations
    by Laplace transform. For example, to solve
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些辅助函数可通过 Laplace 变换轻松解决微分方程。例如，要解决
- en: \[m x''(t) + d x'(t) + k x(t) = 0\]
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: \[m x''(t) + d x'(t) + k x(t) = 0\]
- en: 'with initial value \(0\) and initial derivative \(v\):'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 初始值为 \( 0 \)，初始导数为 \( v \)：
- en: '[PRE13]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: See also
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 也见
- en: '[`inverse_laplace_transform`](#sympy.integrals.transforms.inverse_laplace_transform
    "sympy.integrals.transforms.inverse_laplace_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`fourier_transform`](#sympy.integrals.transforms.fourier_transform
    "sympy.integrals.transforms.fourier_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[`inverse_laplace_transform`](#sympy.integrals.transforms.inverse_laplace_transform
    "sympy.integrals.transforms.inverse_laplace_transform")，[`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform")，[`fourier_transform`](#sympy.integrals.transforms.fourier_transform
    "sympy.integrals.transforms.fourier_transform")，[`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform")，[`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")'
- en: References
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R567](#id1)]'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R567](#id1)]'
- en: 'Erdelyi, A. (ed.), Tables of Integral Transforms, Volume 1, Bateman Manuscript
    Prooject, McGraw-Hill (1954), available: [https://resolver.caltech.edu/CaltechAUTHORS:20140123-101456353](https://resolver.caltech.edu/CaltechAUTHORS:20140123-101456353)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 埃尔德艾伊，A.（编），积分变换表，第1卷，贝特曼手稿项目，麦克格劳-希尔（1954），可用：[https://resolver.caltech.edu/CaltechAUTHORS:20140123-101456353](https://resolver.caltech.edu/CaltechAUTHORS:20140123-101456353)
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This helper function takes a function \(f\) that is the result of a `laplace_transform`
    or an `inverse_laplace_transform`. It replaces all unevaluated `LaplaceTransform(y(t),
    t, s)` by \(Y(s)\) for any \(s\) and all `InverseLaplaceTransform(Y(s), s, t)`
    by \(y(t)\) for any \(t\) if `fdict` contains a correspondence `{y: Y}`.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '此辅助函数接受一个函数 \( f \)，该函数是 `laplace_transform` 或 `inverse_laplace_transform`
    的结果。它将所有未评估的 `LaplaceTransform(y(t), t, s)` 替换为任何 \( s \) 的 \( Y(s) \)，并将所有 `InverseLaplaceTransform(Y(s),
    s, t)` 替换为任何 \( t \) 的 \( y(t) \)，如果 `fdict` 包含对应关系 `{y: Y}`。'
- en: 'Parameters:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : sympy expression'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：SymPy 表达式'
- en: Expression containing unevaluated `LaplaceTransform` or `LaplaceTransform` objects.
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包含未评估的 `LaplaceTransform` 或 `LaplaceTransform` 对象的表达式。
- en: '**fdict** : dictionary'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**fdict**：字典'
- en: 'Dictionary containing one or more function correspondences, e.g., `{x: X, y:
    Y}` meaning that `X` and `Y` are the Laplace transforms of `x` and `y`, respectively.'
  id: totrans-88
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '包含一个或多个函数对应关系的字典，例如`{x: X, y: Y}`，意味着`X`和`Y`分别是`x`和`y`的拉普拉斯变换。'
- en: Examples
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This helper function takes a function \(f\) that is the result of a `laplace_transform`.
    It takes an fdict of the form `{y: [1, 4, 2]}`, where the values in the list are
    the initial value, the initial slope, the initial second derivative, etc., of
    the function \(y(t)\), and replaces all unevaluated initial conditions.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '此辅助函数接受一个`laplace_transform`结果的函数\(f\)。它接受一个形如`{y: [1, 4, 2]}`的fdict，其中列表中的值是函数\(y(t)\)的初始值、初始斜率、初始二阶导数等，用以替换所有未评估的初始条件。'
- en: 'Parameters:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : sympy expression'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：sympy表达式'
- en: Expression containing initial conditions of unevaluated functions.
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包含未评估函数的初始条件的表达式。
- en: '**t** : sympy expression'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**t**：sympy表达式'
- en: Variable for which the initial conditions are to be applied.
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 初始条件要应用的变量。
- en: '**fdict** : dictionary'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**fdict**：字典'
- en: 'Dictionary containing a list of initial conditions for every function, e.g.,
    `{y: [0, 1, 2], x: [3, 4, 5]}`. The order of derivatives is ascending, so \(0\),
    \(1\), \(2\) are \(y(0)\), \(y''(0)\), and \(y''''(0)\), respectively.'
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '包含每个函数初始条件列表的字典，例如`{y: [0, 1, 2], x: [3, 4, 5]}`。导数顺序升序，因此\(0\)、\(1\)、\(2\)分别是\(y(0)\)、\(y''(0)\)和\(y''''(0)\)。'
- en: Examples
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE17]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Class representing unevaluated Laplace transforms.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未评估拉普拉斯变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此类用法，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")的文档字符串。
- en: For how to compute Laplace transforms, see the [`laplace_transform()`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform") docstring.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如何计算拉普拉斯变换，请参阅[`laplace_transform()`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")的文档字符串。
- en: If this is called with `.doit()`, it returns the Laplace transform as an expression.
    If it is called with `.doit(noconds=False)`, it returns a tuple containing the
    same expression, a convergence plane, and conditions.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用`.doit()`调用它，它将作为表达式返回拉普拉斯变换。如果使用`.doit(noconds=False)`调用它，则返回包含相同表达式、收敛平面和条件的元组。
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Try to evaluate the transform in closed form.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试以闭合形式评估变换。
- en: Explanation
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'Standard hints are the following: - `noconds`: if True, do not return convergence
    conditions. The default setting is \(True\). - `simplify`: if True, it simplifies
    the final result. The default setting is \(False\).'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 标准提示如下：- `noconds`：如果为True，则不返回收敛条件。默认设置为\(True\)。- `simplify`：如果为True，则简化最终结果。默认设置为\(False\)。
- en: '[PRE20]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Compute the inverse Laplace transform of \(F(s)\), defined as
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 计算\(F(s)\)的逆拉普拉斯变换，定义为
- en: \[f(t) = \frac{1}{2\pi i} \int_{c-i\infty}^{c+i\infty} e^{st} F(s) \mathrm{d}s,\]
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: \[f(t) = \frac{1}{2\pi i} \int_{c-i\infty}^{c+i\infty} e^{st} F(s) \mathrm{d}s,\]
- en: for \(c\) so large that \(F(s)\) has no singularites in the half-plane \(\operatorname{Re}(s)
    > c-\epsilon\).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 对于\(c\)足够大，以至于\(F(s)\)在半平面\(\operatorname{Re}(s) > c-\epsilon\)内无奇点。
- en: Explanation
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The plane can be specified by argument `plane`, but will be inferred if passed
    as None.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过参数`plane`指定平面，但如果作为None传递，则会推断。
- en: Under certain regularity conditions, this recovers \(f(t)\) from its Laplace
    Transform \(F(s)\), for non-negative \(t\), and vice versa.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些正则条件下，这从其拉普拉斯变换\(F(s)\)中恢复\(f(t)\)，对于非负的\(t\)，反之亦然。
- en: If the integral cannot be computed in closed form, this function returns an
    unevaluated [`InverseLaplaceTransform`](#sympy.integrals.transforms.InverseLaplaceTransform
    "sympy.integrals.transforms.InverseLaplaceTransform") object.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法计算闭合形式的积分，则此函数返回一个未评估的[`InverseLaplaceTransform`](#sympy.integrals.transforms.InverseLaplaceTransform
    "sympy.integrals.transforms.InverseLaplaceTransform")对象。
- en: Note that this function will always assume \(t\) to be real, regardless of the
    SymPy assumption on \(t\).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，此函数始终假定\(t\)为实数，而不考虑\(t\)的SymPy假设。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit").
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可能提示的描述，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform.doit")的文档字符串。
- en: Examples
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE21]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: See also
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`laplace_transform`](#sympy.integrals.transforms.laplace_transform "sympy.integrals.transforms.laplace_transform"),
    [`hankel_transform`](#sympy.integrals.transforms.hankel_transform "sympy.integrals.transforms.hankel_transform"),
    [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[`laplace_transform`](#sympy.integrals.transforms.laplace_transform "sympy.integrals.transforms.laplace_transform"),
    [`hankel_transform`](#sympy.integrals.transforms.hankel_transform "sympy.integrals.transforms.hankel_transform"),
    [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")'
- en: '[PRE22]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Class representing unevaluated inverse Laplace transforms.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未评估的逆拉普拉斯变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此类，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")的文档字符串。
- en: For how to compute inverse Laplace transforms, see the [`inverse_laplace_transform()`](#sympy.integrals.transforms.inverse_laplace_transform
    "sympy.integrals.transforms.inverse_laplace_transform") docstring.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如何计算逆拉普拉斯变换，请参阅[`inverse_laplace_transform()`](#sympy.integrals.transforms.inverse_laplace_transform
    "sympy.integrals.transforms.inverse_laplace_transform")的文档字符串。
- en: '[PRE23]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Try to evaluate the transform in closed form.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试以闭合形式评估变换。
- en: Explanation
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'Standard hints are the following: - `noconds`: if True, do not return convergence
    conditions. The default setting is \(True\). - `simplify`: if True, it simplifies
    the final result. The default setting is \(False\).'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 标准提示如下：- `noconds`：如果为True，则不返回收敛条件。默认设置为\(True\)。- `simplify`：如果为True，则简化最终结果。默认设置为\(False\)。
- en: '[PRE24]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Compute the unitary, ordinary-frequency Fourier transform of `f`, defined as
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f`的单位、普通频率傅里叶变换，定义为
- en: \[F(k) = \int_{-\infty}^\infty f(x) e^{-2\pi i x k} \mathrm{d} x.\]
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: \[F(k) = \int_{-\infty}^\infty f(x) e^{-2\pi i x k} \mathrm{d} x.\]
- en: Explanation
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If the transform cannot be computed in closed form, this function returns an
    unevaluated [`FourierTransform`](#sympy.integrals.transforms.FourierTransform
    "sympy.integrals.transforms.FourierTransform") object.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法以闭合形式计算变换，则此函数返回一个未评估的[`FourierTransform`](#sympy.integrals.transforms.FourierTransform
    "sympy.integrals.transforms.FourierTransform")对象。
- en: For other Fourier transform conventions, see the function [`sympy.integrals.transforms._fourier_transform()`](#sympy.integrals.transforms._fourier_transform
    "sympy.integrals.transforms._fourier_transform").
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他傅里叶变换约定，请参阅函数[`sympy.integrals.transforms._fourier_transform()`](#sympy.integrals.transforms._fourier_transform
    "sympy.integrals.transforms._fourier_transform")。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). Note that for this transform,
    by default `noconds=True`.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解可能的提示说明，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")的文档字符串。请注意，默认情况下，对于此变换，`noconds=True`。
- en: Examples
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE25]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: See also
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
- en: '[PRE26]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Compute a general Fourier-type transform
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 计算一般的傅里叶类型变换
- en: \[F(k) = a \int_{-\infty}^{\infty} e^{bixk} f(x)\, dx.\]
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: \[F(k) = a \int_{-\infty}^{\infty} e^{bixk} f(x)\, dx.\]
- en: For suitable choice of *a* and *b*, this reduces to the standard Fourier and
    inverse Fourier transforms.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 对于适当选择的*a*和*b*，这将简化为标准的傅里叶和逆傅里叶变换。
- en: '[PRE27]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Class representing unevaluated Fourier transforms.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未评估的傅里叶变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此类的使用，请参见[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")的文档字符串。
- en: For how to compute Fourier transforms, see the [`fourier_transform()`](#sympy.integrals.transforms.fourier_transform
    "sympy.integrals.transforms.fourier_transform") docstring.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如何计算傅里叶变换，请参见[`fourier_transform()`](#sympy.integrals.transforms.fourier_transform
    "sympy.integrals.transforms.fourier_transform")文档字符串。
- en: '[PRE28]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Compute the unitary, ordinary-frequency inverse Fourier transform of \(F\),
    defined as
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 计算单位、普通频率的逆傅里叶变换，定义为
- en: \[f(x) = \int_{-\infty}^\infty F(k) e^{2\pi i x k} \mathrm{d} k.\]
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: \[f(x) = \int_{-\infty}^\infty F(k) e^{2\pi i x k} \mathrm{d} k.\]
- en: Explanation
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If the transform cannot be computed in closed form, this function returns an
    unevaluated [`InverseFourierTransform`](#sympy.integrals.transforms.InverseFourierTransform
    "sympy.integrals.transforms.InverseFourierTransform") object.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不能以封闭形式计算变换，则此函数返回一个未评估的[`InverseFourierTransform`](#sympy.integrals.transforms.InverseFourierTransform
    "sympy.integrals.transforms.InverseFourierTransform")对象。
- en: For other Fourier transform conventions, see the function [`sympy.integrals.transforms._fourier_transform()`](#sympy.integrals.transforms._fourier_transform
    "sympy.integrals.transforms._fourier_transform").
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他傅里叶变换约定，请参见函数[`sympy.integrals.transforms._fourier_transform()`](#sympy.integrals.transforms._fourier_transform
    "sympy.integrals.transforms._fourier_transform")。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). Note that for this transform,
    by default `noconds=True`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 获取可能提示的说明，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")的文档字符串。请注意，默认情况下，对于此变换，`noconds=True`。
- en: Examples
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE29]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: See also
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`sine_transform`](#sympy.integrals.transforms.sine_transform "sympy.integrals.transforms.sine_transform"),
    [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform")，[`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform")，[`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform")，[`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform")，[`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform")，[`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform")，[`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")，[`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform")，[`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
- en: '[PRE30]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Class representing unevaluated inverse Fourier transforms.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未求值逆傅里叶变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 关于此类使用，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")文档字符串。
- en: For how to compute inverse Fourier transforms, see the [`inverse_fourier_transform()`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform") docstring.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 对于如何计算逆傅里叶变换，请参阅[`inverse_fourier_transform()`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform")文档字符串。
- en: '[PRE31]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Compute the unitary, ordinary-frequency sine transform of \(f\), defined as
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 计算定义为\(f\)的单位、普通频率正弦变换，如下所示：
- en: \[F(k) = \sqrt{\frac{2}{\pi}} \int_{0}^\infty f(x) \sin(2\pi x k) \mathrm{d}
    x.\]
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: \[F(k) = \sqrt{\frac{2}{\pi}} \int_{0}^\infty f(x) \sin(2\pi x k) \mathrm{d}
    x.\]
- en: Explanation
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If the transform cannot be computed in closed form, this function returns an
    unevaluated [`SineTransform`](#sympy.integrals.transforms.SineTransform "sympy.integrals.transforms.SineTransform")
    object.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不能以封闭形式计算变换，则此函数返回一个未求值的[`SineTransform`](#sympy.integrals.transforms.SineTransform
    "sympy.integrals.transforms.SineTransform")对象。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). Note that for this transform,
    by default `noconds=True`.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 关于可能的提示描述，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")文档字符串。注意，默认情况下对于此变换，`noconds=True`。
- en: Examples
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE32]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: See also
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
- en: '[PRE33]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Class representing unevaluated sine transforms.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未计算正弦变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此类的使用方法，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")的文档字符串。
- en: For how to compute sine transforms, see the [`sine_transform()`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform") docstring.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如何计算正弦变换，请参阅[`sine_transform()`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform")文档字符串。
- en: '[PRE34]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Compute the unitary, ordinary-frequency inverse sine transform of \(F\), defined
    as
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 计算\(F\)的单位、普通频率逆正弦变换，定义为
- en: \[f(x) = \sqrt{\frac{2}{\pi}} \int_{0}^\infty F(k) \sin(2\pi x k) \mathrm{d}
    k.\]
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: \[f(x) = \sqrt{\frac{2}{\pi}} \int_{0}^\infty F(k) \sin(2\pi x k) \mathrm{d}
    k.\]
- en: Explanation
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If the transform cannot be computed in closed form, this function returns an
    unevaluated [`InverseSineTransform`](#sympy.integrals.transforms.InverseSineTransform
    "sympy.integrals.transforms.InverseSineTransform") object.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法以封闭形式计算变换，则此函数返回一个未计算的[`InverseSineTransform`](#sympy.integrals.transforms.InverseSineTransform
    "sympy.integrals.transforms.InverseSineTransform")对象。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). Note that for this transform,
    by default `noconds=True`.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可能的提示说明，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")的文档字符串。请注意，对于此变换，默认情况下`noconds=True`。
- en: Examples
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE35]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: See also
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
- en: '[PRE36]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Class representing unevaluated inverse sine transforms.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未评估的反正弦变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此类，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")的文档字符串。
- en: For how to compute inverse sine transforms, see the [`inverse_sine_transform()`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform") docstring.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解如何计算反正弦变换，请参阅[`inverse_sine_transform()`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform")的文档字符串。
- en: '[PRE37]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Compute the unitary, ordinary-frequency cosine transform of \(f\), defined as
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 计算\(f\)的单位，普通频率余弦变换定义为
- en: \[F(k) = \sqrt{\frac{2}{\pi}} \int_{0}^\infty f(x) \cos(2\pi x k) \mathrm{d}
    x.\]
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: \[F(k) = \sqrt{\frac{2}{\pi}} \int_{0}^\infty f(x) \cos(2\pi x k) \mathrm{d}
    x.\]
- en: Explanation
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If the transform cannot be computed in closed form, this function returns an
    unevaluated [`CosineTransform`](#sympy.integrals.transforms.CosineTransform "sympy.integrals.transforms.CosineTransform")
    object.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法以封闭形式计算变换，则此函数返回未评估的[`CosineTransform`](#sympy.integrals.transforms.CosineTransform
    "sympy.integrals.transforms.CosineTransform")对象。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). Note that for this transform,
    by default `noconds=True`.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 获取可能的提示描述，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")的文档字符串。注意，默认情况下，此变换使用`noconds=True`。
- en: Examples
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE38]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: See also
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
- en: '[PRE39]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Class representing unevaluated cosine transforms.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未求值余弦变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 若要使用此类，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")的文档字符串。
- en: For how to compute cosine transforms, see the [`cosine_transform()`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform") docstring.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如需计算余弦变换，请参阅[`cosine_transform()`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform")文档字符串。
- en: '[PRE40]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Compute the unitary, ordinary-frequency inverse cosine transform of \(F\), defined
    as
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 计算\(F\)的单位、普通频率的反余弦变换，定义为
- en: \[f(x) = \sqrt{\frac{2}{\pi}} \int_{0}^\infty F(k) \cos(2\pi x k) \mathrm{d}
    k.\]
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: \[f(x) = \sqrt{\frac{2}{\pi}} \int_{0}^\infty F(k) \cos(2\pi x k) \mathrm{d}
    k.\]
- en: Explanation
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If the transform cannot be computed in closed form, this function returns an
    unevaluated [`InverseCosineTransform`](#sympy.integrals.transforms.InverseCosineTransform
    "sympy.integrals.transforms.InverseCosineTransform") object.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法计算该变换的闭合形式，则此函数返回一个未求值的[`InverseCosineTransform`](#sympy.integrals.transforms.InverseCosineTransform
    "sympy.integrals.transforms.InverseCosineTransform")对象。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). Note that for this transform,
    by default `noconds=True`.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 如需可能的提示说明，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")的文档字符串。请注意，默认情况下，对于此变换，`noconds=True`。
- en: Examples
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE41]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: See also
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
- en: '[PRE42]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Class representing unevaluated inverse cosine transforms.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未评估的反余弦变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此类的用法，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")文档字符串。
- en: For how to compute inverse cosine transforms, see the [`inverse_cosine_transform()`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform") docstring.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何计算反余弦变换，请参阅[`inverse_cosine_transform()`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform")的文档字符串。
- en: '[PRE43]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Compute the Hankel transform of \(f\), defined as
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 计算定义为\[f\]的Hankel变换
- en: \[F_\nu(k) = \int_{0}^\infty f(r) J_\nu(k r) r \mathrm{d} r.\]
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: \[F_\nu(k) = \int_{0}^\infty f(r) J_\nu(k r) r \mathrm{d} r.\]
- en: Explanation
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If the transform cannot be computed in closed form, this function returns an
    unevaluated [`HankelTransform`](#sympy.integrals.transforms.HankelTransform "sympy.integrals.transforms.HankelTransform")
    object.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法以闭合形式计算变换，则此函数返回一个未评估的[`HankelTransform`](#sympy.integrals.transforms.HankelTransform
    "sympy.integrals.transforms.HankelTransform")对象。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). Note that for this transform,
    by default `noconds=True`.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可能提示的描述，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")的文档字符串。请注意，默认情况下对于此变换，`noconds=True`。
- en: Examples
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE44]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: See also
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform")，[`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform")，[`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform")，[`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform")，[`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform")，[`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform")，[`inverse_hankel_transform`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform")，[`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform")，[`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
- en: '[PRE49]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Class representing unevaluated Hankel transforms.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未计算的汉克尔变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 关于该类的使用，请参阅[`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform")文档字符串。
- en: For how to compute Hankel transforms, see the [`hankel_transform()`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform") docstring.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如何计算汉克尔变换，请参阅[`hankel_transform()`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform")文档字符串。
- en: '[PRE50]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Compute the inverse Hankel transform of \(F\) defined as
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 计算定义为\(F\)的逆汉克尔变换，如下所示：
- en: \[f(r) = \int_{0}^\infty F_\nu(k) J_\nu(k r) k \mathrm{d} k.\]
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: \[f(r) = \int_{0}^\infty F_\nu(k) J_\nu(k r) k \mathrm{d} k.\]
- en: Explanation
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: If the transform cannot be computed in closed form, this function returns an
    unevaluated [`InverseHankelTransform`](#sympy.integrals.transforms.InverseHankelTransform
    "sympy.integrals.transforms.InverseHankelTransform") object.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法以封闭形式计算变换，则此函数返回一个未计算的[`InverseHankelTransform`](#sympy.integrals.transforms.InverseHankelTransform
    "sympy.integrals.transforms.InverseHankelTransform")对象。
- en: For a description of possible hints, refer to the docstring of [`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit"). Note that for this transform,
    by default `noconds=True`.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可能提示的描述，请参阅[`sympy.integrals.transforms.IntegralTransform.doit()`](#sympy.integrals.transforms.IntegralTransform.doit
    "sympy.integrals.transforms.IntegralTransform.doit")文档字符串。请注意，默认情况下，对于此变换，`noconds=True`。
- en: Examples
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE51]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: See also
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`fourier_transform`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform"),
    [`inverse_fourier_transform`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform"), [`sine_transform`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform"), [`inverse_sine_transform`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform"), [`cosine_transform`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform"), [`inverse_cosine_transform`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform"), [`hankel_transform`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform"), [`mellin_transform`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform"), [`laplace_transform`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '[`傅里叶变换`](#sympy.integrals.transforms.fourier_transform "sympy.integrals.transforms.fourier_transform")，[`逆傅里叶变换`](#sympy.integrals.transforms.inverse_fourier_transform
    "sympy.integrals.transforms.inverse_fourier_transform")，[`正弦变换`](#sympy.integrals.transforms.sine_transform
    "sympy.integrals.transforms.sine_transform")，[`逆正弦变换`](#sympy.integrals.transforms.inverse_sine_transform
    "sympy.integrals.transforms.inverse_sine_transform")，[`余弦变换`](#sympy.integrals.transforms.cosine_transform
    "sympy.integrals.transforms.cosine_transform")，[`逆余弦变换`](#sympy.integrals.transforms.inverse_cosine_transform
    "sympy.integrals.transforms.inverse_cosine_transform")，[`汉克尔变换`](#sympy.integrals.transforms.hankel_transform
    "sympy.integrals.transforms.hankel_transform")，[`梅林变换`](#sympy.integrals.transforms.mellin_transform
    "sympy.integrals.transforms.mellin_transform")，[`拉普拉斯变换`](#sympy.integrals.transforms.laplace_transform
    "sympy.integrals.transforms.laplace_transform")'
- en: '[PRE56]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Class representing unevaluated inverse Hankel transforms.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未计算逆汉克尔变换的类。
- en: For usage of this class, see the [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") docstring.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 如何使用此类，请参见 [`IntegralTransform`](#sympy.integrals.transforms.IntegralTransform
    "sympy.integrals.transforms.IntegralTransform") 的文档字符串。
- en: For how to compute inverse Hankel transforms, see the [`inverse_hankel_transform()`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform") docstring.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 如何计算逆汉克尔变换，请参见 [`inverse_hankel_transform()`](#sympy.integrals.transforms.inverse_hankel_transform
    "sympy.integrals.transforms.inverse_hankel_transform") 的文档字符串。
- en: '[PRE57]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Base class for integral transforms.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 积分变换的基类。
- en: Explanation
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This class represents unevaluated transforms.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 此类表示未计算的变换。
- en: To implement a concrete transform, derive from this class and implement the
    `_compute_transform(f, x, s, **hints)` and `_as_integral(f, x, s)` functions.
    If the transform cannot be computed, raise [`IntegralTransformError`](#sympy.integrals.transforms.IntegralTransformError
    "sympy.integrals.transforms.IntegralTransformError").
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现具体的变换，从这个类派生并实现 `_compute_transform(f, x, s, **hints)` 和 `_as_integral(f,
    x, s)` 函数。如果无法计算变换，则抛出 [`IntegralTransformError`](#sympy.integrals.transforms.IntegralTransformError
    "sympy.integrals.transforms.IntegralTransformError")。
- en: Also set `cls._name`. For instance,
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 还要设置 `cls._name`。例如，
- en: '[PRE58]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Implement `self._collapse_extra` if your function returns more than just a number
    and possibly a convergence condition.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的函数返回的不仅仅是一个数，可能还有一个收敛条件，则实现 `self._collapse_extra`。
- en: '[PRE59]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Try to evaluate the transform in closed form.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试以封闭形式评估变换。
- en: Explanation
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This general function handles linearity, but apart from that leaves pretty much
    everything to _compute_transform.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 此通用函数处理线性性，但除此之外几乎所有事情都留给 `_compute_transform`。
- en: 'Standard hints are the following:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 标准提示如下：
- en: '`simplify`: whether or not to simplify the result'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`simplify`: 是否简化结果'
- en: '`noconds`: if True, do not return convergence conditions'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`noconds`: 如果为 True，则不返回收敛条件'
- en: '`needeval`: if True, raise IntegralTransformError instead of'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`needeval`: 如果为 True，则抛出 IntegralTransformError 而不是'
- en: returning IntegralTransform objects
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回 IntegralTransform 对象
- en: The default values of these hints depend on the concrete transform, usually
    the default is `(simplify, noconds, needeval) = (True, False, False)`.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 这些提示的默认值取决于具体的变换，默认情况下是 `(simplify, noconds, needeval) = (True, False, False)`。
- en: '[PRE60]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: The function to be transformed.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行变换的函数。
- en: '[PRE61]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: The dependent variable of the function to be transformed.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行变换的函数的依赖变量。
- en: '[PRE62]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: The independent transform variable.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 变换的独立变量。
- en: '[PRE63]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Exception raised in relation to problems computing transforms.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 与计算变换相关的异常。
- en: Explanation
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This class is mostly used internally; if integrals cannot be computed objects
    representing unevaluated transforms are usually returned.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 此类主要用于内部使用；如果无法计算积分，则通常返回表示未计算的变换对象。
- en: The hint `needeval=True` can be used to disable returning transform objects,
    and instead raise this exception if an integral cannot be computed.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 提示 `needeval=True` 可用于禁用返回变换对象，并在无法计算积分时引发异常。
- en: Internals
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内部
- en: SymPy uses a number of algorithms to compute integrals. Algorithms are tried
    in order until one produces an answer. Most of these algorithms can be enabled
    or disabled manually using various flags to [`integrate()`](#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate") or [`doit()`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit").
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 使用多种算法来计算积分。按顺序尝试这些算法，直到一个产生答案。大多数算法可以通过各种标志手动启用或禁用，使用 [`integrate()`](#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate") 或 [`doit()`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit")。
- en: 'SymPy first applies several heuristic algorithms, as these are the fastest:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 首先应用几个启发式算法，因为它们是最快的：
- en: If the function is a rational function, there is a complete algorithm for integrating
    rational functions called the Lazard-Rioboo-Trager and the Horowitz-Ostrogradsky
    algorithms. They are implemented in [`ratint()`](#sympy.integrals.rationaltools.ratint
    "sympy.integrals.rationaltools.ratint").
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果函数是一个有理函数，有一个完整的算法用于集成有理函数，称为 Lazard-Rioboo-Trager 和 Horowitz-Ostrogradsky
    算法。它们在 [`ratint()`](#sympy.integrals.rationaltools.ratint "sympy.integrals.rationaltools.ratint")
    中实现。
- en: '[PRE64]'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Performs indefinite integration of rational functions.
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行有理函数的不定积分。
- en: Explanation
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: Given a field \(K\) and a rational function \(f = p/q\), where \(p\) and \(q\)
    are polynomials in \(K[x]\), returns a function \(g\) such that \(f = g'\).
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给定域 \(K\) 和有理函数 \(f = p/q\)，其中 \(p\) 和 \(q\) 是 \(K[x]\) 中的多项式，返回一个函数 \(g\)，使得
    \(f = g'\)。
- en: Examples
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE65]'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: See also
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.integrals.integrals.Integral.doit`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit"), [`sympy.integrals.rationaltools.ratint_logpart`](#sympy.integrals.rationaltools.ratint_logpart
    "sympy.integrals.rationaltools.ratint_logpart"), [`sympy.integrals.rationaltools.ratint_ratpart`](#sympy.integrals.rationaltools.ratint_ratpart
    "sympy.integrals.rationaltools.ratint_ratpart")'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sympy.integrals.integrals.Integral.doit`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit")，[`sympy.integrals.rationaltools.ratint_logpart`](#sympy.integrals.rationaltools.ratint_logpart
    "sympy.integrals.rationaltools.ratint_logpart")，[`sympy.integrals.rationaltools.ratint_ratpart`](#sympy.integrals.rationaltools.ratint_ratpart
    "sympy.integrals.rationaltools.ratint_ratpart")'
- en: References
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R568](#id2)]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[[R568](#id2)]'
- en: 'M. Bronstein, Symbolic Integration I: Transcendental Functions, Second Edition,
    Springer-Verlag, 2005, pp. 35-70'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'M. Bronstein, Symbolic Integration I: Transcendental Functions, Second Edition,
    Springer-Verlag, 2005, pp. 35-70'
- en: '[PRE67]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Horowitz-Ostrogradsky algorithm.
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Horowitz-Ostrogradsky 算法。
- en: Explanation
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: Given a field K and polynomials f and g in K[x], such that f and g are coprime
    and deg(f) < deg(g), returns fractions A and B in K(x), such that f/g = A’ + B
    and B has square-free denominator.
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给定域 K 和 K[x] 中的多项式 f 和 g，使得 f 和 g 互素且 deg(f) < deg(g)，返回 K(x) 中的分数 A 和 B，使得
    f/g = A’ + B，且 B 具有无平方分母。
- en: Examples
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE68]'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: See also
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另见
- en: '[`ratint`](#sympy.integrals.rationaltools.ratint "sympy.integrals.rationaltools.ratint"),
    [`ratint_logpart`](#sympy.integrals.rationaltools.ratint_logpart "sympy.integrals.rationaltools.ratint_logpart")'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`ratint`](#sympy.integrals.rationaltools.ratint "sympy.integrals.rationaltools.ratint")，[`ratint_logpart`](#sympy.integrals.rationaltools.ratint_logpart
    "sympy.integrals.rationaltools.ratint_logpart")'
- en: '[PRE69]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Lazard-Rioboo-Trager algorithm.
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Lazard-Rioboo-Trager 算法。
- en: Explanation
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: 'Given a field K and polynomials f and g in K[x], such that f and g are coprime,
    deg(f) < deg(g) and g is square-free, returns a list of tuples (s_i, q_i) of polynomials,
    for i = 1..n, such that s_i in K[t, x] and q_i in K[t], and:'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给定域 K 和 K[x] 中的多项式 f 和 g，使得 f 和 g 互素，deg(f) < deg(g) 且 g 是无平方的，返回多项式的元组 (s_i,
    q_i)，其中 i = 1..n，使得 s_i 在 K[t, x] 中，q_i 在 K[t] 中，并且：
- en: '[PRE70]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Examples
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE71]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: See also
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另见
- en: '[`ratint`](#sympy.integrals.rationaltools.ratint "sympy.integrals.rationaltools.ratint"),
    [`ratint_ratpart`](#sympy.integrals.rationaltools.ratint_ratpart "sympy.integrals.rationaltools.ratint_ratpart")'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`ratint`](#sympy.integrals.rationaltools.ratint "sympy.integrals.rationaltools.ratint")，[`ratint_ratpart`](#sympy.integrals.rationaltools.ratint_ratpart
    "sympy.integrals.rationaltools.ratint_ratpart")'
- en: '[`trigintegrate()`](#sympy.integrals.trigonometry.trigintegrate "sympy.integrals.trigonometry.trigintegrate")
    solves integrals of trigonometric functions using pattern matching'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[`trigintegrate()`](#sympy.integrals.trigonometry.trigintegrate "sympy.integrals.trigonometry.trigintegrate")
    使用模式匹配解决三角函数的积分'
- en: '[PRE72]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Integrate f = Mul(trig) over x.
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 x，集成 f = Mul(trig)。
- en: Examples
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE73]'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: See also
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.integrals.integrals.Integral.doit`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit"), [`sympy.integrals.integrals.Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral")'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sympy.integrals.integrals.Integral.doit`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit")，[`sympy.integrals.integrals.Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral")'
- en: References
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R569](#id3)]'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[[R569](#id3)]'
- en: '[https://en.wikibooks.org/wiki/Calculus/Integration_techniques](https://en.wikibooks.org/wiki/Calculus/Integration_techniques)'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://en.wikibooks.org/wiki/Calculus/Integration_techniques](https://en.wikibooks.org/wiki/Calculus/Integration_techniques)'
- en: '[`deltaintegrate()`](#sympy.integrals.deltafunctions.deltaintegrate "sympy.integrals.deltafunctions.deltaintegrate")
    solves integrals with [`DiracDelta`](../functions/special.html#sympy.functions.special.delta_functions.DiracDelta
    "sympy.functions.special.delta_functions.DiracDelta") objects.'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[`deltaintegrate()`](#sympy.integrals.deltafunctions.deltaintegrate "sympy.integrals.deltafunctions.deltaintegrate")
    解决带有[`DiracDelta`](../functions/special.html#sympy.functions.special.delta_functions.DiracDelta
    "sympy.functions.special.delta_functions.DiracDelta")对象的积分问题。'
- en: '[PRE78]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Explanation
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: 'The idea for integration is the following:'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 积分的思路如下：
- en: If we are dealing with a DiracDelta expression, i.e. DiracDelta(g(x)), we try
    to simplify it.
  id: totrans-339
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们正在处理DiracDelta表达式，即DiracDelta(g(x))，我们尝试简化它。
- en: If we could simplify it, then we integrate the resulting expression. We already
    know we can integrate a simplified expression, because only simple DiracDelta
    expressions are involved.
  id: totrans-340
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们能简化它，那么我们就积分得到的表达式。我们已经知道我们可以积分一个简化的表达式，因为只涉及简单的DiracDelta表达式。
- en: 'If we couldn’t simplify it, there are two cases:'
  id: totrans-341
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们无法简化它，有两种情况：
- en: 'The expression is a simple expression: we return the integral, taking care
    if we are dealing with a Derivative or with a proper DiracDelta.'
  id: totrans-342
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表达式是一个简单的表达式：我们返回积分结果，注意我们是否在处理导数或适当的DiracDelta。
- en: 'The expression is not simple (i.e. DiracDelta(cos(x))): we can do nothing at
    all.'
  id: totrans-343
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表达式不简单（例如DiracDelta(cos(x))）：我们根本无法处理。
- en: 'If the node is a multiplication node having a DiracDelta term:'
  id: totrans-344
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果节点是一个包含DiracDelta项的乘法节点：
- en: First we expand it.
  id: totrans-345
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先我们将其展开。
- en: If the expansion did work, then we try to integrate the expansion.
  id: totrans-346
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果展开成功，我们就尝试积分这个展开式。
- en: 'If not, we try to extract a simple DiracDelta term, then we have two cases:'
  id: totrans-347
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果不行，我们尝试提取一个简单的DiracDelta项，然后有两种情况：
- en: We have a simple DiracDelta term, so we return the integral.
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们有一个简单的DiracDelta项，所以我们返回积分结果。
- en: We didn’t have a simple term, but we do have an expression with simplified DiracDelta
    terms, so we integrate this expression.
  id: totrans-349
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们没有一个简单的项，但是我们有一个包含简化的DiracDelta项的表达式，所以我们积分这个表达式。
- en: Examples
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE79]'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: See also
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.functions.special.delta_functions.DiracDelta`](../functions/special.html#sympy.functions.special.delta_functions.DiracDelta
    "sympy.functions.special.delta_functions.DiracDelta"), [`sympy.integrals.integrals.Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral")'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sympy.functions.special.delta_functions.DiracDelta`](../functions/special.html#sympy.functions.special.delta_functions.DiracDelta
    "sympy.functions.special.delta_functions.DiracDelta")，[`sympy.integrals.integrals.Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral")'
- en: '[`singularityintegrate()`](#sympy.integrals.singularityfunctions.singularityintegrate
    "sympy.integrals.singularityfunctions.singularityintegrate") is applied if the
    function contains a [`SingularityFunction`](../functions/special.html#sympy.functions.special.singularity_functions.SingularityFunction
    "sympy.functions.special.singularity_functions.SingularityFunction")'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[`singularityintegrate()`](#sympy.integrals.singularityfunctions.singularityintegrate
    "sympy.integrals.singularityfunctions.singularityintegrate") 适用于函数包含[`SingularityFunction`](../functions/special.html#sympy.functions.special.singularity_functions.SingularityFunction
    "sympy.functions.special.singularity_functions.SingularityFunction")实例时。'
- en: '[PRE80]'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: This function handles the indefinite integrations of Singularity functions.
    The `integrate` function calls this function internally whenever an instance of
    SingularityFunction is passed as argument.
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数处理Singularity函数的不定积分。每当SingularityFunction的实例作为参数传递时，`integrate`函数内部都会调用此函数。
- en: Explanation
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: 'The idea for integration is the following:'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 积分的思路如下：
- en: If we are dealing with a SingularityFunction expression, i.e. `SingularityFunction(x,
    a, n)`, we just return `SingularityFunction(x, a, n + 1)/(n + 1)` if `n >= 0`
    and `SingularityFunction(x, a, n + 1)` if `n < 0`.
  id: totrans-359
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们正在处理SingularityFunction表达式，即`SingularityFunction(x, a, n)`，如果`n >= 0`，我们只需返回`SingularityFunction(x,
    a, n + 1)/(n + 1)`，如果`n < 0`，则返回`SingularityFunction(x, a, n + 1)`。
- en: If the node is a multiplication or power node having a SingularityFunction term
    we rewrite the whole expression in terms of Heaviside and DiracDelta and then
    integrate the output. Lastly, we rewrite the output of integration back in terms
    of SingularityFunction.
  id: totrans-360
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果节点是具有 SingularityFunction 项的乘法或幂节点，我们将整个表达式重写为 Heaviside 和 DiracDelta 的术语，然后积分输出。最后，我们将积分输出重新写成
    SingularityFunction 的术语。
- en: If none of the above case arises, we return None.
  id: totrans-361
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果上述情况都不符合，我们返回 None。
- en: Examples
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE81]'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: If the heuristic algorithms cannot be applied, [`risch_integrate()`](#sympy.integrals.risch.risch_integrate
    "sympy.integrals.risch.risch_integrate") is tried next. The *Risch algorithm*
    is a general method for calculating antiderivatives of elementary functions. The
    Risch algorithm is a decision procedure that can determine whether an elementary
    solution exists, and in that case calculate it. It can be extended to handle many
    nonelementary functions in addition to the elementary ones. However, the version
    implemented in SymPy only supports a small subset of the full algorithm, particularly,
    on part of the transcendental algorithm for exponentials and logarithms is implemented.
    An advantage of [`risch_integrate()`](#sympy.integrals.risch.risch_integrate "sympy.integrals.risch.risch_integrate")
    over other methods is that if it returns an instance of [`NonElementaryIntegral`](#sympy.integrals.risch.NonElementaryIntegral
    "sympy.integrals.risch.NonElementaryIntegral"), the integral is proven to be nonelementary
    by the algorithm, meaning the integral cannot be represented using a combination
    of exponentials, logarithms, trig functions, powers, rational functions, algebraic
    functions, and function composition.
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果启发式算法无法应用，接下来会尝试 [`risch_integrate()`](#sympy.integrals.risch.risch_integrate
    "sympy.integrals.risch.risch_integrate")。*Risch 算法* 是一种计算初等函数的反导数的通用方法。Risch 算法是一个决策过程，可以确定是否存在初等解，并在这种情况下计算它。它可以扩展到处理许多非初等函数，除了初等函数。但是，在
    SymPy 中实现的版本仅支持完整算法的一小部分，特别是仅实现了对指数和对数的超越算法的部分。[`risch_integrate()`](#sympy.integrals.risch.risch_integrate
    "sympy.integrals.risch.risch_integrate") 相比其他方法的一个优势是，如果返回 [`NonElementaryIntegral`](#sympy.integrals.risch.NonElementaryIntegral
    "sympy.integrals.risch.NonElementaryIntegral") 的一个实例，算法证明该积分为非初等的，这意味着积分不能用指数、对数、三角函数、幂函数、有理函数、代数函数和函数组合的组合表示。
- en: '[PRE82]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: The Risch Integration Algorithm.
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Risch 积分算法。
- en: Explanation
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: Only transcendental functions are supported. Currently, only exponentials and
    logarithms are supported, but support for trigonometric functions is forthcoming.
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅支持超越函数。目前仅支持指数和对数，但支持三角函数即将推出。
- en: If this function returns an unevaluated Integral in the result, it means that
    it has proven that integral to be nonelementary. Any errors will result in raising
    NotImplementedError. The unevaluated Integral will be an instance of NonElementaryIntegral,
    a subclass of Integral.
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果此函数在结果中返回一个未评估的积分，意味着它已证明该积分为非初等的。任何错误将导致抛出 NotImplementedError。未评估的积分将是 NonElementaryIntegral
    的一个实例，是 Integral 的一个子类。
- en: handle_first may be either ‘exp’ or ‘log’. This changes the order in which the
    extension is built, and may result in a different (but equivalent) solution (for
    an example of this, see issue 5109). It is also possible that the integral may
    be computed with one but not the other, because not all cases have been implemented
    yet. It defaults to ‘log’ so that the outer extension is exponential when possible,
    because more of the exponential case has been implemented.
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`handle_first` 可以是 ''exp'' 或者 ''log''。这会改变扩展的顺序，并可能导致不同（但等效）的解决方案（例如，参见问题 5109）。也有可能只能用其中一种计算积分，因为并未完全实现所有情况。默认为
    ''log''，这样外部扩展在可能时是指数的，因为更多的指数情况已经实现。'
- en: If `separate_integral` is `True`, the result is returned as a tuple (ans, i),
    where the integral is ans + i, ans is elementary, and i is either a NonElementaryIntegral
    or 0\. This useful if you want to try further integrating the NonElementaryIntegral
    part using other algorithms to possibly get a solution in terms of special functions.
    It is False by default.
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 `separate_integral` 为 `True`，则结果作为元组 (ans, i) 返回，其中积分为 ans + i，ans 是初等的，i
    是 NonElementaryIntegral 或 0。如果希望使用其他算法进一步积分 NonElementaryIntegral 部分以可能获得特殊函数的解，则此选项很有用。默认为
    False。
- en: Examples
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE83]'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: First, we try integrating exp(-x**2). Except for a constant factor of 2/sqrt(pi),
    this is the famous error function.
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先，我们尝试积分 exp(-x**2)。除了 sqrt(pi) 的常数因子为 2，这是著名的误差函数。
- en: '[PRE84]'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: The unevaluated Integral in the result means that risch_integrate() has proven
    that exp(-x**2) does not have an elementary anti-derivative.
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结果中的未求值积分意味着 risch_integrate() 已经证明了 exp(-x**2) 没有基本的反导数。
- en: In many cases, risch_integrate() can split out the elementary anti-derivative
    part from the nonelementary anti-derivative part. For example,
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在许多情况下，risch_integrate() 可以将非基本反导数部分分离出来。例如，
- en: '[PRE85]'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: This means that it has proven that the integral of 1/log(x) is nonelementary.
    This function is also known as the logarithmic integral, and is often denoted
    as Li(x).
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这意味着它已经证明了 1/log(x) 的积分是非基本的。这个函数也被称为对数积分，通常表示为 Li(x)。
- en: risch_integrate() currently only accepts purely transcendental functions with
    exponentials and logarithms, though note that this can include nested exponentials
    and logarithms, as well as exponentials with bases other than E.
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: risch_integrate() 目前只接受纯超越函数，包括指数和对数，尽管请注意，这可能包括嵌套的指数和对数，以及底数不为 E 的指数。
- en: '[PRE86]'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Represents a nonelementary Integral.
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 表示一个非基本积分。
- en: Explanation
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: If the result of integrate() is an instance of this class, it is guaranteed
    to be nonelementary. Note that integrate() by default will try to find any closed-form
    solution, even in terms of special functions which may themselves not be elementary.
    To make integrate() only give elementary solutions, or, in the cases where it
    can prove the integral to be nonelementary, instances of this class, use integrate(risch=True).
    In this case, integrate() may raise NotImplementedError if it cannot make such
    a determination.
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 integrate() 的结果是这个类的实例，则保证是非基本的。请注意，默认情况下，integrate() 将尝试找到任何闭合形式的解，即使是在可能本身不是基本的特殊函数中。为了使
    integrate() 只提供基本解，或者在可以证明积分是非基本的情况下，返回这个类的实例，请使用 integrate(risch=True)。在这种情况下，如果无法做出这样的判断，integrate()
    可能会引发 NotImplementedError。
- en: integrate() uses the deterministic Risch algorithm to integrate elementary functions
    or prove that they have no elementary integral. In some cases, this algorithm
    can split an integral into an elementary and nonelementary part, so that the result
    of integrate will be the sum of an elementary expression and a NonElementaryIntegral.
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: integrate() 使用确定性 Risch 算法来对基本函数进行积分或证明它们没有基本积分。在某些情况下，该算法可以将积分分解为基本和非基本部分，因此
    integrate 的结果将是基本表达式和非基本积分的和。
- en: Examples
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE90]'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: For non-elementary definite integrals, SymPy uses so-called Meijer G-functions.
    Details are described in [Computing Integrals using Meijer G-Functions](g-functions.html#g-functions).
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于非基本定积分，SymPy 使用所谓的 Meijer G 函数。详细信息请参见 [使用 Meijer G 函数计算积分](g-functions.html#g-functions)。
- en: All the algorithms mentioned thus far are either pattern-matching based heuristic,
    or solve integrals using algorithms that are much different from the way most
    people are taught in their calculus courses. SymPy also implements a method that
    can solve integrals in much the same way you would in calculus. The advantage
    of this method is that it is possible to extract the integration steps from, so
    that one can see how to compute the integral “by hand”. This is used by [SymPy
    Gamma](https://sympygamma.com). This is implemented in the [`manualintegrate()`](#sympy.integrals.manualintegrate.manualintegrate
    "sympy.integrals.manualintegrate.manualintegrate") function. The steps for an
    integral can be seen with the [`integral_steps()`](#sympy.integrals.manualintegrate.integral_steps
    "sympy.integrals.manualintegrate.integral_steps") function.
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到目前为止提到的所有算法都是基于模式匹配的启发式算法，或者使用与大多数人在微积分课程中所学的方式大不相同的算法来求解积分。SymPy 还实现了一种可以像在微积分中一样求解积分的方法。这种方法的优势在于可以提取出积分步骤，以便可以看到如何手工计算积分。这由
    [SymPy Gamma](https://sympygamma.com) 使用。这在 [`manualintegrate()`](#sympy.integrals.manualintegrate.manualintegrate
    "sympy.integrals.manualintegrate.manualintegrate") 函数中实现。可以通过 [`integral_steps()`](#sympy.integrals.manualintegrate.integral_steps
    "sympy.integrals.manualintegrate.integral_steps") 函数查看积分步骤。
- en: '[PRE93]'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Explanation
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: Compute indefinite integral of a single variable using an algorithm that resembles
    what a student would do by hand.
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用类似学生手工操作的算法计算单变量的不定积分。
- en: Unlike [`integrate()`](#sympy.integrals.integrals.integrate "sympy.integrals.integrals.integrate"),
    var can only be a single symbol.
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与 [`integrate()`](#sympy.integrals.integrals.integrate "sympy.integrals.integrals.integrate")
    不同，var 只能是单个符号。
- en: Examples
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE94]'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: See also
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.integrals.integrals.integrate`](#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate"), [`sympy.integrals.integrals.Integral.doit`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit"), [`sympy.integrals.integrals.Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral")'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sympy.integrals.integrals.integrate`](#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate"), [`sympy.integrals.integrals.Integral.doit`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit"), [`sympy.integrals.integrals.Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral")'
- en: '[PRE95]'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Returns the steps needed to compute an integral.
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回计算积分所需的步骤。
- en: 'Returns:'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回：
- en: '**rule** : Rule'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**规则**：规则'
- en: The first step; most rules have substeps that must also be considered. These
    substeps can be evaluated using `manualintegrate` to obtain a result.
  id: totrans-407
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 第一步；大多数规则还有必须考虑的子步骤。这些子步骤可以使用`manualintegrate`来评估以获得结果。
- en: Explanation
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: This function attempts to mirror what a student would do by hand as closely
    as possible.
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此函数尝试尽可能地模仿学生手工操作。
- en: SymPy Gamma uses this to provide a step-by-step explanation of an integral.
    The code it uses to format the results of this function can be found at [https://github.com/sympy/sympy_gamma/blob/master/app/logic/intsteps.py](https://github.com/sympy/sympy_gamma/blob/master/app/logic/intsteps.py).
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SymPy Gamma使用此方法提供积分的逐步解释。它用于格式化该函数结果的代码可以在[https://github.com/sympy/sympy_gamma/blob/master/app/logic/intsteps.py](https://github.com/sympy/sympy_gamma/blob/master/app/logic/intsteps.py)找到。
- en: Examples
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE96]'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'Finally, if all the above fail, SymPy also uses a simplified version of the
    Risch algorithm, called the *Risch-Norman algorithm*. This algorithm is tried
    last because it is often the slowest to compute. This is implemented in [`heurisch()`](#sympy.integrals.heurisch.heurisch
    "sympy.integrals.heurisch.heurisch"):'
  id: totrans-413
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如果上述所有方法都失败了，SymPy还使用了Risch-Norman算法的简化版本。这个算法通常是计算速度最慢的，因此被最后尝试。它在[`heurisch()`](#sympy.integrals.heurisch.heurisch
    "sympy.integrals.heurisch.heurisch")中实现：
- en: '[PRE97]'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Compute indefinite integral using heuristic Risch algorithm.
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用启发式Risch算法计算不定积分。
- en: Explanation
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 解释
- en: This is a heuristic approach to indefinite integration in finite terms using
    the extended heuristic (parallel) Risch algorithm, based on Manuel Bronstein’s
    “Poor Man’s Integrator”.
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是一种启发式方法，使用扩展的启发式（并行）Risch算法在有限项中进行不定积分，基于Manuel Bronstein的“穷人积分器”。
- en: The algorithm supports various classes of functions including transcendental
    elementary or special functions like Airy, Bessel, Whittaker and Lambert.
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该算法支持各类函数，包括超越元素或特殊函数，如Airy，Bessel，Whittaker和Lambert。
- en: Note that this algorithm is not a decision procedure. If it isn’t able to compute
    the antiderivative for a given function, then this is not a proof that such a
    functions does not exist. One should use recursive Risch algorithm in such case.
    It’s an open question if this algorithm can be made a full decision procedure.
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意，该算法不是一个决策过程。如果它无法计算给定函数的反导数，那么这并不证明这样的函数不存在。在这种情况下应使用递归的Risch算法。这个算法是否可以成为一个完全的决策过程尚未解决。
- en: This is an internal integrator procedure. You should use top level ‘integrate’
    function in most cases, as this procedure needs some preprocessing steps and otherwise
    may fail.
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是一个内部积分器过程。在大多数情况下，您应该使用顶层的‘integrate’函数，因为此过程需要一些预处理步骤，否则可能失败。
- en: Specification
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 规格
- en: heurisch(f, x, rewrite=False, hints=None)
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: heurisch(f, x, rewrite=False, hints=None)
- en: where
  id: totrans-423
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 其中
- en: ''
  id: totrans-424
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'f : expression x : symbol'
  id: totrans-425
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: f：表达式 x：符号
- en: ''
  id: totrans-426
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: rewrite -> force rewrite ‘f’ in terms of ‘tan’ and ‘tanh’ hints -> a list of
    functions that may appear in anti-derivate
  id: totrans-427
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 重写 -> 强制使用‘tan’和‘tanh’重写‘f’提示 -> 可能出现在反导数中的函数列表
- en: ''
  id: totrans-428
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: hints = None –> no suggestions at all
  id: totrans-429
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: hints = None –> 没有建议
- en: ''
  id: totrans-430
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-431
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: hints = [ ] –> try to figure out
  id: totrans-432
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: hints = [ ] –> 尝试解析
- en: ''
  id: totrans-433
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-434
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: hints = [f1, …, fn] –> we know better
  id: totrans-435
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: hints = [f1, …, fn] –> 我们更了解
- en: Examples
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE98]'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'See Manuel Bronstein’s “Poor Man’s Integrator”:'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参见Manuel Bronstein的“穷人积分器”：
- en: See also
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.integrals.integrals.Integral.doit`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit"), [`sympy.integrals.integrals.Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral"), [`sympy.integrals.heurisch.components`](#sympy.integrals.heurisch.components
    "sympy.integrals.heurisch.components")'
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`sympy.integrals.integrals.Integral.doit`](#sympy.integrals.integrals.Integral.doit
    "sympy.integrals.integrals.Integral.doit"), [`sympy.integrals.integrals.Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral"), [`sympy.integrals.heurisch.components`](#sympy.integrals.heurisch.components
    "sympy.integrals.heurisch.components")'
- en: References
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R570](#id4)]'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[[R570](#id4)]'
- en: '[https://www-sop.inria.fr/cafe/Manuel.Bronstein/pmint/index.html](https://www-sop.inria.fr/cafe/Manuel.Bronstein/pmint/index.html)'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://www-sop.inria.fr/cafe/Manuel.Bronstein/pmint/index.html](https://www-sop.inria.fr/cafe/Manuel.Bronstein/pmint/index.html)'
- en: 'For more information on the implemented algorithm refer to:'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有关已实现算法的更多信息，请参阅：
- en: '[[R571](#id5)]'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[[R571](#id5)]'
- en: K. Geddes, L. Stefanus, On the Risch-Norman Integration Method and its Implementation
    in Maple, Proceedings of ISSAC’89, ACM Press, 212-217.
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: K. Geddes, L. Stefanus, On the Risch-Norman Integration Method and its Implementation
    in Maple, Proceedings of ISSAC’89, ACM Press, 212-217.
- en: '[[R572](#id6)]'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[[R572](#id6)]'
- en: J. H. Davenport, On the Parallel Risch Algorithm (I), Proceedings of EUROCAM’82,
    LNCS 144, Springer, 144-157.
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: J. H. Davenport, On the Parallel Risch Algorithm (I), Proceedings of EUROCAM’82,
    LNCS 144, Springer, 144-157.
- en: '[[R573](#id7)]'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[[R573](#id7)]'
- en: 'J. H. Davenport, On the Parallel Risch Algorithm (III): Use of Tangents, SIGSAM
    Bulletin 16 (1982), 3-6.'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'J. H. Davenport, On the Parallel Risch Algorithm (III): Use of Tangents, SIGSAM
    Bulletin 16 (1982), 3-6.'
- en: '[[R574](#id8)]'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[[R574](#id8)]'
- en: J. H. Davenport, B. M. Trager, On the Parallel Risch Algorithm (II), ACM Transactions
    on Mathematical Software 11 (1985), 356-362.
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: J. H. Davenport, B. M. Trager, On the Parallel Risch Algorithm (II), ACM Transactions
    on Mathematical Software 11 (1985), 356-362.
- en: '[PRE100]'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Returns a set of all functional components of the given expression which includes
    symbols, function applications and compositions and non-integer powers. Fractional
    powers are collected with minimal, positive exponents.
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回给定表达式的所有功能组件，包括符号、函数应用和组合，以及非整数幂。分数幂以最小的正指数收集。
- en: Examples
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE101]'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: See also
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`heurisch`](#sympy.integrals.heurisch.heurisch "sympy.integrals.heurisch.heurisch")'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[`heurisch`](#sympy.integrals.heurisch.heurisch "sympy.integrals.heurisch.heurisch")'
- en: API reference
  id: totrans-461
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API 参考
- en: '[PRE103]'
  id: totrans-462
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'Deprecated since version 1.6: Using `integrate()` with [`Poly`](../polys/reference.html#sympy.polys.polytools.Poly
    "sympy.polys.polytools.Poly") is deprecated. Use [`Poly.integrate()`](../polys/reference.html#sympy.polys.polytools.Poly.integrate
    "sympy.polys.polytools.Poly.integrate") instead. See [Using integrate with Poly](../../explanation/active-deprecations.html#deprecated-integrate-poly).'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 自 1.6 版起已弃用：使用 [`Poly`](../polys/reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    的 `integrate()` 已弃用。请改用 [`Poly.integrate()`](../polys/reference.html#sympy.polys.polytools.Poly.integrate
    "sympy.polys.polytools.Poly.integrate")。参见 [使用 Poly 进行积分](../../explanation/active-deprecations.html#deprecated-integrate-poly)。
- en: Explanation
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Compute definite or indefinite integral of one or more variables using Risch-Norman
    algorithm and table lookup. This procedure is able to handle elementary algebraic
    and transcendental functions and also a huge class of special functions, including
    Airy, Bessel, Whittaker and Lambert.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Risch-Norman 算法和表查找计算一个或多个变量的定积分或不定积分。此过程能处理基本代数和超越函数，以及包括 Airy、Bessel、Whittaker
    和 Lambert 在内的大量特殊函数。
- en: 'var can be:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 变量 var 可以是：
- en: a symbol – indefinite integration
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个符号 – 不定积分
- en: a tuple (symbol, a) – indefinite integration with result
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个元组 (symbol, a) – 不定积分并返回结果
- en: given with `a` replacing `symbol`
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用 `a` 替换 `symbol` 给出的
- en: a tuple (symbol, a, b) – definite integration
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个元组 (symbol, a, b) – 定积分
- en: Several variables can be specified, in which case the result is multiple integration.
    (If var is omitted and the integrand is univariate, the indefinite integral in
    that variable will be performed.)
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 可指定多个变量，此时结果为多重积分。（如果省略 var 并且被积函数是一元的，则将在该变量上进行不定积分。）
- en: Indefinite integrals are returned without terms that are independent of the
    integration variables. (see examples)
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 不定积分返回时，与积分变量无关的项将被省略。（见示例）
- en: Definite improper integrals often entail delicate convergence conditions. Pass
    conds=’piecewise’, ‘separate’ or ‘none’ to have these returned, respectively,
    as a Piecewise function, as a separate result (i.e. result will be a tuple), or
    not at all (default is ‘piecewise’).
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 定积分不恰当时常需精确的收敛条件。分别传递 conds=’piecewise’、‘separate’ 或 ‘none’ 以得到以下返回：作为 Piecewise
    函数、作为单独结果（即结果将是一个元组），或者不返回（默认为 ‘piecewise’）。
- en: '**Strategy**'
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: '**策略**'
- en: SymPy uses various approaches to definite integration. One method is to find
    an antiderivative for the integrand, and then use the fundamental theorem of calculus.
    Various functions are implemented to integrate polynomial, rational and trigonometric
    functions, and integrands containing DiracDelta terms.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 使用多种方法进行定积分。一种方法是找到被积函数的反导函数，然后应用基本定理。实现了多项式、有理函数、三角函数以及包含 DiracDelta
    项的积分函数。
- en: SymPy also implements the part of the Risch algorithm, which is a decision procedure
    for integrating elementary functions, i.e., the algorithm can either find an elementary
    antiderivative, or prove that one does not exist. There is also a (very successful,
    albeit somewhat slow) general implementation of the heuristic Risch algorithm.
    This algorithm will eventually be phased out as more of the full Risch algorithm
    is implemented. See the docstring of Integral._eval_integral() for more details
    on computing the antiderivative using algebraic methods.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 还实现了 Risch 算法的部分，这是一个用于积分基本函数的决策过程，即，算法可以找到一个基本反导数，或者证明不存在这样的反导数。还有一个（非常成功但有些慢）启发式
    Risch 算法的通用实现。随着更多完整的 Risch 算法的实现，这种算法最终将被淘汰。有关使用代数方法计算反导数的更多详细信息，请参阅 Integral._eval_integral()
    的文档字符串。
- en: The option risch=True can be used to use only the (full) Risch algorithm. This
    is useful if you want to know if an elementary function has an elementary antiderivative.
    If the indefinite Integral returned by this function is an instance of NonElementaryIntegral,
    that means that the Risch algorithm has proven that integral to be non-elementary.
    Note that by default, additional methods (such as the Meijer G method outlined
    below) are tried on these integrals, as they may be expressible in terms of special
    functions, so if you only care about elementary answers, use risch=True. Also
    note that an unevaluated Integral returned by this function is not necessarily
    a NonElementaryIntegral, even with risch=True, as it may just be an indication
    that the particular part of the Risch algorithm needed to integrate that function
    is not yet implemented.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过选项 risch=True 来仅使用（完整的）Risch 算法。如果要知道一个基本函数是否有基本反导数，这是很有用的。如果这个函数返回的不定积分是
    NonElementaryIntegral 的实例，那么 Risch 算法已经证明该积分是非基本的。请注意，默认情况下，对这些积分尝试了其他方法（如下面概述的
    Meijer G 方法），因为它们可能可以用特殊函数表达，因此如果只关心基本答案，请使用 risch=True。还请注意，即使使用 risch=True，由这个函数返回的未计算积分也不一定是
    NonElementaryIntegral，因为这可能只是表示该函数的积分所需的 Risch 算法的特定部分尚未实现。
- en: Another family of strategies comes from re-writing the integrand in terms of
    so-called Meijer G-functions. Indefinite integrals of a single G-function can
    always be computed, and the definite integral of a product of two G-functions
    can be computed from zero to infinity. Various strategies are implemented to rewrite
    integrands as G-functions, and use this information to compute integrals (see
    the `meijerint` module).
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 另一族策略来自将被积函数重写为所谓的 Meijer G-函数。单个 G-函数的不定积分总是可以计算的，并且两个 G-函数乘积的定积分可以从零到无穷计算。实施了各种策略来将被积函数重写为
    G-函数，并使用此信息来计算积分（请参阅 `meijerint` 模块）。
- en: The option manual=True can be used to use only an algorithm that tries to mimic
    integration by hand. This algorithm does not handle as many integrands as the
    other algorithms implemented but may return results in a more familiar form. The
    `manualintegrate` module has functions that return the steps used (see the module
    docstring for more information).
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过选项 manual=True 来仅使用尝试模仿手工积分的算法。这种算法处理的积分因子较少，但可能以更熟悉的形式返回结果。`manualintegrate`
    模块具有返回使用的步骤的函数（更多信息请参阅模块文档字符串）。
- en: In general, the algebraic methods work best for computing antiderivatives of
    (possibly complicated) combinations of elementary functions. The G-function methods
    work best for computing definite integrals from zero to infinity of moderately
    complicated combinations of special functions, or indefinite integrals of very
    simple combinations of special functions.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，代数方法最适合计算（可能复杂的）基本函数组合的反导数。G-函数方法最适合计算从零到无穷的中度复杂的特殊函数组合的定积分，或者非常简单的特殊函数组合的不定积分。
- en: 'The strategy employed by the integration code is as follows:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 积分代码使用的策略如下：
- en: If computing a definite integral, and both limits are real, and at least one
    limit is +- oo, try the G-function method of definite integration first.
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果计算一个定积分，并且两个限制值都是实数，并且至少一个限制值是 +- oo，请首先尝试 G-函数方法进行定积分。
- en: Try to find an antiderivative, using all available methods, ordered by performance
    (that is try fastest method first, slowest last; in particular polynomial integration
    is tried first, Meijer G-functions second to last, and heuristic Risch last).
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试找到一个反导数，使用所有可用的方法，按性能排序（即首先尝试最快的方法，最后尝试最慢的方法；特别是首先尝试多项式积分，其次尝试 Meijer G-函数，最后尝试启发式
    Risch 算法）。
- en: If still not successful, try G-functions irrespective of the limits.
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果仍然不成功，请尝试G函数，无论限制如何。
- en: 'The option meijerg=True, False, None can be used to, respectively: always use
    G-function methods and no others, never use G-function methods, or use all available
    methods (in order as described above). It defaults to None.'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 选项meijerg=True, False, None可分别用于：始终使用G函数方法且不使用其他方法，永不使用G函数方法，或使用所有可用方法（如上述顺序）。默认为None。
- en: Examples
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE104]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'Terms that are independent of x are dropped by indefinite integration:'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 与x无关的项被不定积分舍弃：
- en: '[PRE109]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[PRE110]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Note that `integrate(x)` syntax is meant only for convenience in interactive
    sessions and should be avoided in library code.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`integrate(x)`语法仅用于交互式会话的方便，应在库代码中避免使用。
- en: '[PRE111]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: See also
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Integral`](#sympy.integrals.integrals.Integral "sympy.integrals.integrals.Integral"),
    [`Integral.doit`](#sympy.integrals.integrals.Integral.doit "sympy.integrals.integrals.Integral.doit")'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Integral`](#sympy.integrals.integrals.Integral "sympy.integrals.integrals.Integral"),
    [`Integral.doit`](#sympy.integrals.integrals.Integral.doit "sympy.integrals.integrals.Integral.doit")'
- en: '[PRE114]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Compute the line integral.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 计算线积分。
- en: Examples
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE115]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: See also
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.integrals.integrals.integrate`](#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate"), [`Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral")'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.integrals.integrals.integrate`](#sympy.integrals.integrals.integrate
    "sympy.integrals.integrals.integrate"), [`Integral`](#sympy.integrals.integrals.Integral
    "sympy.integrals.integrals.Integral")'
- en: The class [`Integral`](#sympy.integrals.integrals.Integral "sympy.integrals.integrals.Integral")
    represents an unevaluated integral and has some methods that help in the integration
    of an expression.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 类[`Integral`](#sympy.integrals.integrals.Integral "sympy.integrals.integrals.Integral")表示未评估的积分，并具有一些有助于表达式积分的方法。
- en: '[PRE116]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Represents unevaluated integral.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 表示未评估的积分。
- en: '[PRE117]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Returns whether all the free symbols in the integral are commutative.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 返回积分中所有自由符号是否可交换。
- en: '[PRE118]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Approximates a definite integral by a sum.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 通过求和近似确定积分。
- en: 'Parameters:'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n :**'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '**n :**'
- en: The number of subintervals to use, optional.
  id: totrans-516
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用的子区间数，可选。
- en: '**method :**'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '**method :**'
- en: 'One of: ‘left’, ‘right’, ‘midpoint’, ‘trapezoid’.'
  id: totrans-518
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 其中之一：'left', 'right', 'midpoint', 'trapezoid'。
- en: '**evaluate** : bool'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '**evaluate** : bool'
- en: If False, returns an unevaluated Sum expression. The default is True, evaluate
    the sum.
  id: totrans-520
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果为False，则返回一个未评估的求和表达式。默认为True，评估求和。
- en: Notes
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: These methods of approximate integration are described in [1].
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 这些近似积分方法在[1]中描述。
- en: Examples
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE119]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: For demonstration purposes, this interval will only be split into 2 regions,
    bounded by [3, 5] and [5, 7].
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 出于演示目的，此间隔仅将分为两个区域，由[3, 5]和[5, 7]界定。
- en: 'The left-hand rule uses function evaluations at the left of each interval:'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 左手法则使用每个区间左侧的函数评估：
- en: '[PRE120]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'The midpoint rule uses evaluations at the center of each interval:'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 中点法则使用每个区间的中心进行评估：
- en: '[PRE121]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'The right-hand rule uses function evaluations at the right of each interval:'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 右手法则使用每个区间右侧的函数评估：
- en: '[PRE122]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'The trapezoid rule uses function evaluations on both sides of the intervals.
    This is equivalent to taking the average of the left and right hand rule results:'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 梯形法则使用区间两侧的函数评估。这相当于取左手法和右手法结果的平均值：
- en: '[PRE123]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'Here, the discontinuity at x = 0 can be avoided by using the midpoint or right-hand
    method:'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，通过使用中点或右手法可以避免在x = 0处的不连续：
- en: '[PRE124]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'The left- or trapezoid method will encounter the discontinuity and return infinity:'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 左手法或梯形法将遇到不连续并返回无穷大：
- en: '[PRE125]'
  id: totrans-537
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: The number of intervals can be symbolic. If omitted, a dummy symbol will be
    used for it.
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 区间数可以是符号的。如果省略，将使用一个虚拟符号。
- en: '[PRE126]'
  id: totrans-539
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'This shows that the midpoint rule is more accurate, as its error term decays
    as the square of n:'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明中点法则更精确，因为其误差项按n的平方衰减：
- en: '[PRE127]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'A symbolic sum is returned with evaluate=False:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 当evaluate=False时返回一个符号求和：
- en: '[PRE128]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: See also
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`Integral.doit`](#sympy.integrals.integrals.Integral.doit "sympy.integrals.integrals.Integral.doit")'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Integral.doit`](#sympy.integrals.integrals.Integral.doit "sympy.integrals.integrals.Integral.doit")'
- en: Perform the integration using any hints
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 使用任何给定的提示执行积分
- en: References
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R575](#id9)]'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R575](#id9)]'
- en: '[https://en.wikipedia.org/wiki/Riemann_sum#Riemann_summation_methods](https://en.wikipedia.org/wiki/Riemann_sum#Riemann_summation_methods)'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Riemann_sum#Riemann_summation_methods](https://en.wikipedia.org/wiki/Riemann_sum#Riemann_summation_methods)'
- en: '[PRE129]'
  id: totrans-550
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Perform the integration using any hints given.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 使用任何给定的提示执行积分。
- en: Examples
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE130]'
  id: totrans-553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: See also
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.integrals.trigonometry.trigintegrate`](#sympy.integrals.trigonometry.trigintegrate
    "sympy.integrals.trigonometry.trigintegrate"), [`sympy.integrals.heurisch.heurisch`](#sympy.integrals.heurisch.heurisch
    "sympy.integrals.heurisch.heurisch"), [`sympy.integrals.rationaltools.ratint`](#sympy.integrals.rationaltools.ratint
    "sympy.integrals.rationaltools.ratint")'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.integrals.trigonometry.trigintegrate`](#sympy.integrals.trigonometry.trigintegrate
    "sympy.integrals.trigonometry.trigintegrate"), [`sympy.integrals.heurisch.heurisch`](#sympy.integrals.heurisch.heurisch
    "sympy.integrals.heurisch.heurisch"), [`sympy.integrals.rationaltools.ratint`](#sympy.integrals.rationaltools.ratint
    "sympy.integrals.rationaltools.ratint")'
- en: '[`as_sum`](#sympy.integrals.integrals.Integral.as_sum "sympy.integrals.integrals.Integral.as_sum")'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '[`as_sum`](#sympy.integrals.integrals.Integral.as_sum "sympy.integrals.integrals.Integral.as_sum")'
- en: Approximate the integral using a sum
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 通过求和来近似积分
- en: '[PRE131]'
  id: totrans-558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: This method returns the symbols that will exist when the integral is evaluated.
    This is useful if one is trying to determine whether an integral depends on a
    certain symbol or not.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要确定积分是否依赖于某个符号，则此方法返回积分计算时存在的符号。这在试图确定积分是否依赖于某个符号时非常有用。
- en: Examples
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE132]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: See also
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.concrete.expr_with_limits.ExprWithLimits.function`](#sympy.concrete.expr_with_limits.ExprWithLimits.function
    "sympy.concrete.expr_with_limits.ExprWithLimits.function"), [`sympy.concrete.expr_with_limits.ExprWithLimits.limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.limits
    "sympy.concrete.expr_with_limits.ExprWithLimits.limits"), [`sympy.concrete.expr_with_limits.ExprWithLimits.variables`](#sympy.concrete.expr_with_limits.ExprWithLimits.variables
    "sympy.concrete.expr_with_limits.ExprWithLimits.variables")'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.concrete.expr_with_limits.ExprWithLimits.function`](#sympy.concrete.expr_with_limits.ExprWithLimits.function
    "sympy.concrete.expr_with_limits.ExprWithLimits.function"), [`sympy.concrete.expr_with_limits.ExprWithLimits.limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.limits
    "sympy.concrete.expr_with_limits.ExprWithLimits.limits"), [`sympy.concrete.expr_with_limits.ExprWithLimits.variables`](#sympy.concrete.expr_with_limits.ExprWithLimits.variables
    "sympy.concrete.expr_with_limits.ExprWithLimits.variables")'
- en: '[PRE133]'
  id: totrans-564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: Compute the Cauchy Principal Value of the definite integral of a real function
    in the given interval on the real axis.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定实轴上给定区间内实函数的柯西主值。
- en: Explanation
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: In mathematics, the Cauchy principal value, is a method for assigning values
    to certain improper integrals which would otherwise be undefined.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 在数学中，柯西主值是一种方法，用于为某些原本未定义的不定积分赋值。
- en: Examples
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE134]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: References
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R576](#id10)]'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R576](#id10)]'
- en: '[https://en.wikipedia.org/wiki/Cauchy_principal_value](https://en.wikipedia.org/wiki/Cauchy_principal_value)'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Cauchy_principal_value](https://en.wikipedia.org/wiki/Cauchy_principal_value)'
- en: '[[R577](#id11)]'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R577](#id11)]'
- en: '[https://mathworld.wolfram.com/CauchyPrincipalValue.html](https://mathworld.wolfram.com/CauchyPrincipalValue.html)'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/CauchyPrincipalValue.html](https://mathworld.wolfram.com/CauchyPrincipalValue.html)'
- en: '[PRE135]'
  id: totrans-575
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: 'Performs a change of variables from \(x\) to \(u\) using the relationship given
    by \(x\) and \(u\) which will define the transformations \(f\) and \(F\) (which
    are inverses of each other) as follows:'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 执行从 \(x\) 到 \(u\) 的变量变换，使用由 \(x\) 和 \(u\) 之间的关系给出的关系，定义变换 \(f\) 和 \(F\)（它们是互为逆函数）如下：
- en: If \(x\) is a Symbol (which is a variable of integration) then \(u\) will be
    interpreted as some function, f(u), with inverse F(u). This, in effect, just makes
    the substitution of x with f(x).
  id: totrans-577
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 \(x\) 是一个符号（即积分的变量），那么 \(u\) 将被解释为某个函数 \(f(u)\)，其逆为 \(F(u)\)。这实际上只是将 \(x\)
    替换为 \(f(x)\)。
- en: If \(u\) is a Symbol then \(x\) will be interpreted as some function, F(x),
    with inverse f(u). This is commonly referred to as u-substitution.
  id: totrans-578
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 \(u\) 是一个符号，那么 \(x\) 将被解释为某个函数 \(F(x)\)，其逆为 \(f(u)\)。这通常被称为 u-替换。
- en: 'Once f and F have been identified, the transformation is made as follows:'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦识别出 \(f\) 和 \(F\)，变换如下进行：
- en: \[\int_a^b x \mathrm{d}x \rightarrow \int_{F(a)}^{F(b)} f(x) \frac{\mathrm{d}}{\mathrm{d}x}\]
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_a^b x \mathrm{d}x \rightarrow \int_{F(a)}^{F(b)} f(x) \frac{\mathrm{d}}{\mathrm{d}x}\]
- en: where \(F(x)\) is the inverse of \(f(x)\) and the limits and integrand have
    been corrected so as to retain the same value after integration.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 \(F(x)\) 是 \(f(x)\) 的逆函数，积分的限制和被积函数已经校正，以保证积分后的值保持不变。
- en: Notes
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 注记
- en: The mappings, F(x) or f(u), must lead to a unique integral. Linear or rational
    linear expression, `2*x`, `1/x` and `sqrt(x)`, will always work; quadratic expressions
    like `x**2 - 1` are acceptable as long as the resulting integrand does not depend
    on the sign of the solutions (see examples).
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 映射函数 \(F(x)\) 或 \(f(u)\) 必须导致唯一的积分结果。线性或有理线性表达式，如 `2*x`，`1/x` 和 `sqrt(x)`，始终有效；二次表达式如
    `x**2 - 1` 也是可接受的，只要积分被积函数不依赖解的符号（见示例）。
- en: The integral will be returned unchanged if `x` is not a variable of integration.
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`x`不是积分变量，则积分将保持不变。
- en: '`x` must be (or contain) only one of of the integration variables. If `u` has
    more than one free symbol then it should be sent as a tuple (`u`, `uvar`) where
    `uvar` identifies which variable is replacing the integration variable. XXX can
    it contain another integration variable?'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: '`x`必须是（或包含）积分变量之一。如果`u`有多个自由符号，则应作为元组(`u`, `uvar`)发送，其中`uvar`标识替换积分变量的变量。XXX
    它可以包含另一个积分变量吗？'
- en: Examples
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE136]'
  id: totrans-587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: '[PRE137]'
  id: totrans-588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: transform can change the variable of integration
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 变换可以改变积分变量
- en: '[PRE138]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'transform can perform u-substitution as long as a unique integrand is obtained:'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 变换可以执行u-替换，只要获得唯一的被积函数：
- en: '[PRE139]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'This attempt fails because x = +/-sqrt(u + 1) and the sign does not cancel
    out of the integrand:'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 此尝试失败，因为x = +/-sqrt(u + 1)，符号未从被积函数中取消：
- en: '[PRE140]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'transform can do a substitution. Here, the previous result is transformed back
    into the original expression using “u-substitution”:'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 变换可以进行替换。在这里，使用“u-替换”将先前的结果转换回原始表达式：
- en: '[PRE141]'
  id: totrans-596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'We can accomplish the same with a regular substitution:'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过常规替换来完成相同的操作：
- en: '[PRE142]'
  id: totrans-598
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'If the \(x\) does not contain a symbol of integration then the integral will
    be returned unchanged. Integral \(i\) does not have an integration variable \(a\)
    so no change is made:'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 如果\(x\)不包含积分符号，则积分将保持不变。积分\(i\)没有积分变量\(a\)，因此没有变化：
- en: '[PRE143]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'When \(u\) has more than one free symbol the symbol that is replacing \(x\)
    must be identified by passing \(u\) as a tuple:'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 当\(u\)有多个自由符号时，替换\(x\)的符号必须通过传递\(u\)作为元组来标识：
- en: '[PRE144]'
  id: totrans-602
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: See also
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.concrete.expr_with_limits.ExprWithLimits.variables`](#sympy.concrete.expr_with_limits.ExprWithLimits.variables
    "sympy.concrete.expr_with_limits.ExprWithLimits.variables")'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.concrete.expr_with_limits.ExprWithLimits.variables`](#sympy.concrete.expr_with_limits.ExprWithLimits.variables
    "sympy.concrete.expr_with_limits.ExprWithLimits.variables")'
- en: Lists the integration variables
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 列出积分变量
- en: '[`as_dummy`](../core.html#sympy.core.basic.Basic.as_dummy "sympy.core.basic.Basic.as_dummy")'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: '[`as_dummy`](../core.html#sympy.core.basic.Basic.as_dummy "sympy.core.basic.Basic.as_dummy")'
- en: Replace integration variables with dummy ones
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 用虚拟变量替换积分变量
- en: '[`Integral`](#sympy.integrals.integrals.Integral "sympy.integrals.integrals.Integral")
    subclasses from [`ExprWithLimits`](#sympy.concrete.expr_with_limits.ExprWithLimits
    "sympy.concrete.expr_with_limits.ExprWithLimits"), which is a common superclass
    of [`Integral`](#sympy.integrals.integrals.Integral "sympy.integrals.integrals.Integral")
    and [`Sum`](../concrete.html#sympy.concrete.summations.Sum "sympy.concrete.summations.Sum").'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Integral`](#sympy.integrals.integrals.Integral "sympy.integrals.integrals.Integral")
    继承自 [`ExprWithLimits`](#sympy.concrete.expr_with_limits.ExprWithLimits "sympy.concrete.expr_with_limits.ExprWithLimits")，这是
    [`Integral`](#sympy.integrals.integrals.Integral "sympy.integrals.integrals.Integral")
    和 [`Sum`](../concrete.html#sympy.concrete.summations.Sum "sympy.concrete.summations.Sum")
    的常见超类。'
- en: '[PRE145]'
  id: totrans-609
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: '[PRE146]'
  id: totrans-610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: Return only variables that are dummy variables.
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 只返回虚拟变量。
- en: Examples
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE147]'
  id: totrans-613
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: See also
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`function`](#sympy.concrete.expr_with_limits.ExprWithLimits.function "sympy.concrete.expr_with_limits.ExprWithLimits.function"),
    [`limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.limits "sympy.concrete.expr_with_limits.ExprWithLimits.limits"),
    [`free_symbols`](#sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols
    "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols")'
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: '[`function`](#sympy.concrete.expr_with_limits.ExprWithLimits.function "sympy.concrete.expr_with_limits.ExprWithLimits.function")，[`limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.limits
    "sympy.concrete.expr_with_limits.ExprWithLimits.limits")，[`free_symbols`](#sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols
    "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols")'
- en: '[`as_dummy`](../core.html#sympy.core.basic.Basic.as_dummy "sympy.core.basic.Basic.as_dummy")'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: '[`as_dummy`](../core.html#sympy.core.basic.Basic.as_dummy "sympy.core.basic.Basic.as_dummy")'
- en: Rename dummy variables
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 重命名虚拟变量
- en: '[`sympy.integrals.integrals.Integral.transform`](#sympy.integrals.integrals.Integral.transform
    "sympy.integrals.integrals.Integral.transform")'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.integrals.integrals.Integral.transform`](#sympy.integrals.integrals.Integral.transform
    "sympy.integrals.integrals.Integral.transform")'
- en: Perform mapping on the dummy variable
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 对虚拟变量执行映射
- en: '[PRE148]'
  id: totrans-620
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: This method returns the symbols in the object, excluding those that take on
    a specific value (i.e. the dummy symbols).
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法返回对象中的符号，不包括那些取特定值的符号（即虚拟符号）。
- en: Examples
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE149]'
  id: totrans-623
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: '[PRE150]'
  id: totrans-624
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Return the function applied across limits.
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: 返回应用于限制的函数。
- en: Examples
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE151]'
  id: totrans-627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: See also
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.limits "sympy.concrete.expr_with_limits.ExprWithLimits.limits"),
    [`variables`](#sympy.concrete.expr_with_limits.ExprWithLimits.variables "sympy.concrete.expr_with_limits.ExprWithLimits.variables"),
    [`free_symbols`](#sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols
    "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols")'
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: '[`limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.limits "sympy.concrete.expr_with_limits.ExprWithLimits.limits"),
    [`variables`](#sympy.concrete.expr_with_limits.ExprWithLimits.variables "sympy.concrete.expr_with_limits.ExprWithLimits.variables"),
    [`free_symbols`](#sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols
    "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols")'
- en: '[PRE152]'
  id: totrans-630
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Returns True if the limits are known to be finite, either by the explicit bounds,
    assumptions on the bounds, or assumptions on the variables. False if known to
    be infinite, based on the bounds. None if not enough information is available
    to determine.
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 如果极限已知为有限，则返回True，可以通过显式边界、边界假设或变量假设来确定。如果根据边界已知为无限，则返回False。如果没有足够的信息来确定，则返回None。
- en: Examples
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE153]'
  id: totrans-633
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '[PRE154]'
  id: totrans-634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: '[PRE155]'
  id: totrans-635
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-636
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: See also
  id: totrans-637
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`has_reversed_limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.has_reversed_limits
    "sympy.concrete.expr_with_limits.ExprWithLimits.has_reversed_limits")'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: '[`has_reversed_limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.has_reversed_limits
    "sympy.concrete.expr_with_limits.ExprWithLimits.has_reversed_limits")'
- en: '[PRE157]'
  id: totrans-639
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: Returns True if the limits are known to be in reversed order, either by the
    explicit bounds, assumptions on the bounds, or assumptions on the variables. False
    if known to be in normal order, based on the bounds. None if not enough information
    is available to determine.
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 如果极限已知为反向顺序，则返回True，可以通过显式边界、边界假设或变量假设来确定。如果根据边界已知为正常顺序，则返回False。如果没有足够的信息来确定，则返回None。
- en: Examples
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE158]'
  id: totrans-642
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '[PRE159]'
  id: totrans-643
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '[PRE160]'
  id: totrans-644
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: '[PRE161]'
  id: totrans-645
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: '[PRE162]'
  id: totrans-646
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '[PRE163]'
  id: totrans-647
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: See also
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence`](../concrete.html#sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence
    "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence")'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence`](../concrete.html#sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence
    "sympy.concrete.expr_with_intlimits.ExprWithIntLimits.has_empty_sequence")'
- en: '[PRE164]'
  id: totrans-650
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: Return True if the Sum has no free symbols, else False.
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Sum没有自由符号，则返回True，否则返回False。
- en: '[PRE165]'
  id: totrans-652
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: Return the limits of expression.
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 返回表达式的极限。
- en: Examples
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE166]'
  id: totrans-655
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: See also
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`function`](#sympy.concrete.expr_with_limits.ExprWithLimits.function "sympy.concrete.expr_with_limits.ExprWithLimits.function"),
    [`variables`](#sympy.concrete.expr_with_limits.ExprWithLimits.variables "sympy.concrete.expr_with_limits.ExprWithLimits.variables"),
    [`free_symbols`](#sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols
    "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols")'
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: '[`function`](#sympy.concrete.expr_with_limits.ExprWithLimits.function "sympy.concrete.expr_with_limits.ExprWithLimits.function"),
    [`variables`](#sympy.concrete.expr_with_limits.ExprWithLimits.variables "sympy.concrete.expr_with_limits.ExprWithLimits.variables"),
    [`free_symbols`](#sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols
    "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols")'
- en: '[PRE167]'
  id: totrans-658
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: Return a list of the limit variables.
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: 返回极限变量的列表。
- en: '[PRE168]'
  id: totrans-660
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: See also
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`function`](#sympy.concrete.expr_with_limits.ExprWithLimits.function "sympy.concrete.expr_with_limits.ExprWithLimits.function"),
    [`limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.limits "sympy.concrete.expr_with_limits.ExprWithLimits.limits"),
    [`free_symbols`](#sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols
    "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols")'
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: '[`function`](#sympy.concrete.expr_with_limits.ExprWithLimits.function "sympy.concrete.expr_with_limits.ExprWithLimits.function"),
    [`limits`](#sympy.concrete.expr_with_limits.ExprWithLimits.limits "sympy.concrete.expr_with_limits.ExprWithLimits.limits"),
    [`free_symbols`](#sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols
    "sympy.concrete.expr_with_limits.ExprWithLimits.free_symbols")'
- en: '[`as_dummy`](../core.html#sympy.core.basic.Basic.as_dummy "sympy.core.basic.Basic.as_dummy")'
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: '[`as_dummy`](../core.html#sympy.core.basic.Basic.as_dummy "sympy.core.basic.Basic.as_dummy")'
- en: Rename dummy variables
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 重命名虚拟变量
- en: '[`sympy.integrals.integrals.Integral.transform`](#sympy.integrals.integrals.Integral.transform
    "sympy.integrals.integrals.Integral.transform")'
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.integrals.integrals.Integral.transform`](#sympy.integrals.integrals.Integral.transform
    "sympy.integrals.integrals.Integral.transform")'
- en: Perform mapping on the dummy variable
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
  zh: 对虚拟变量执行映射
- en: TODO and Bugs
  id: totrans-667
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 待办事项和错误
- en: There are still lots of functions that SymPy does not know how to integrate.
    For bugs related to this module, see [https://github.com/sympy/sympy/issues?q=is%3Aissue+is%3Aopen+label%3Aintegrals](https://github.com/sympy/sympy/issues?q=is%3Aissue+is%3Aopen+label%3Aintegrals)
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy仍然有许多函数不知道如何进行积分。有关此模块的错误，请参见[https://github.com/sympy/sympy/issues?q=is%3Aissue+is%3Aopen+label%3Aintegrals](https://github.com/sympy/sympy/issues?q=is%3Aissue+is%3Aopen+label%3Aintegrals)
- en: Numeric Integrals
  id: totrans-669
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数值积分
- en: 'SymPy has functions to calculate points and weights for Gaussian quadrature
    of any order and any precision:'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy有函数来计算任何阶数和任何精度的高斯积分的点和权重：
- en: '[PRE169]'
  id: totrans-671
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: Computes the Gauss-Legendre quadrature [[R578]](#r578) points and weights.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: 计算高斯-勒让德积分[[R578]](#r578)的点和权重。
- en: 'Parameters:'
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n :**'
  id: totrans-674
  prefs: []
  type: TYPE_NORMAL
  zh: '**n：**'
- en: The order of quadrature.
  id: totrans-675
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 积分的秩序。
- en: '**n_digits :**'
  id: totrans-676
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_digits：**'
- en: Number of significant digits of the points and weights to return.
  id: totrans-677
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回要返回的点和权重的有效数字。
- en: 'Returns:'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(x, w)** : the `x` and `w` are lists of points and weights as Floats.'
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
  zh: '**(x, w)**：`x`和`w`是点和权重的浮点数列表。'
- en: The points \(x_i\) and weights \(w_i\) are returned as `(x, w)` tuple of lists.
  id: totrans-680
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 点\(x_i\)和权重\(w_i\)作为`(x, w)`列表的元组返回。
- en: Explanation
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Gauss-Legendre quadrature approximates the integral:'
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯-勒让德积分逼近积分：
- en: \[\int_{-1}^1 f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{-1}^1 f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
- en: 'The nodes \(x_i\) of an order \(n\) quadrature rule are the roots of \(P_n\)
    and the weights \(w_i\) are given by:'
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 一个秩为\(n\)的积分规则的节点\(x_i\)是\(P_n\)的根，权重\(w_i\)由以下给出：
- en: \[w_i = \frac{2}{\left(1-x_i^2\right) \left(P'_n(x_i)\right)^2}\]
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: \[w_i = \frac{2}{\left(1-x_i^2\right) \left(P'_n(x_i)\right)^2}\]
- en: Examples
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE170]'
  id: totrans-687
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: See also
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
- en: References
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R578] ([1](#id12),[2](#id13))'
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: '[R578] ([1](#id12),[2](#id13))'
- en: '[https://en.wikipedia.org/wiki/Gaussian_quadrature](https://en.wikipedia.org/wiki/Gaussian_quadrature)'
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Gaussian_quadrature](https://en.wikipedia.org/wiki/Gaussian_quadrature)'
- en: '[[R579](#id14)]'
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R579](#id14)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/legendre_rule/legendre_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/legendre_rule/legendre_rule.html)'
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/legendre_rule/legendre_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/legendre_rule/legendre_rule.html)'
- en: '[PRE171]'
  id: totrans-695
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: Computes the Gauss-Laguerre quadrature [[R580]](#r580) points and weights.
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 计算高斯-拉盖尔积分[[R580]](#r580)的点和权重。
- en: 'Parameters:'
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n :**'
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: '**n：**'
- en: The order of quadrature.
  id: totrans-699
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 积分的秩序。
- en: '**n_digits :**'
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_digits：**'
- en: Number of significant digits of the points and weights to return.
  id: totrans-701
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回要返回的点和权重的有效数字。
- en: 'Returns:'
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(x, w)** : The `x` and `w` are lists of points and weights as Floats.'
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: '**(x, w)**：`x`和`w`是点和权重的浮点数列表。'
- en: The points \(x_i\) and weights \(w_i\) are returned as `(x, w)` tuple of lists.
  id: totrans-704
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 点\(x_i\)和权重\(w_i\)作为`(x, w)`列表的元组返回。
- en: Explanation
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Gauss-Laguerre quadrature approximates the integral:'
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯-拉盖尔积分逼近积分：
- en: \[\int_0^{\infty} e^{-x} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_0^{\infty} e^{-x} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
- en: 'The nodes \(x_i\) of an order \(n\) quadrature rule are the roots of \(L_n\)
    and the weights \(w_i\) are given by:'
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 一个秩为\(n\)的积分规则的节点\(x_i\)是\(L_n\)的根，权重\(w_i\)由以下给出：
- en: \[w_i = \frac{x_i}{(n+1)^2 \left(L_{n+1}(x_i)\right)^2}\]
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: \[w_i = \frac{x_i}{(n+1)^2 \left(L_{n+1}(x_i)\right)^2}\]
- en: Examples
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE172]'
  id: totrans-711
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: See also
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
- en: References
  id: totrans-714
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R580] ([1](#id15),[2](#id16))'
  id: totrans-715
  prefs: []
  type: TYPE_NORMAL
  zh: '[R580] ([1](#id15),[2](#id16))'
- en: '[https://en.wikipedia.org/wiki/Gauss%E2%80%93Laguerre_quadrature](https://en.wikipedia.org/wiki/Gauss%E2%80%93Laguerre_quadrature)'
  id: totrans-716
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Gauss%E2%80%93Laguerre_quadrature](https://en.wikipedia.org/wiki/Gauss%E2%80%93Laguerre_quadrature)'
- en: '[[R581](#id17)]'
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R581](#id17)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/laguerre_rule/laguerre_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/laguerre_rule/laguerre_rule.html)'
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/laguerre_rule/laguerre_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/laguerre_rule/laguerre_rule.html)'
- en: '[PRE173]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: Computes the Gauss-Hermite quadrature [[R582]](#r582) points and weights.
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 Gauss-Hermite 积分 [[R582]](#r582) 的节点和权重。
- en: 'Parameters:'
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n :**'
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: '**n：**'
- en: The order of quadrature.
  id: totrans-723
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 积分的顺序。
- en: '**n_digits :**'
  id: totrans-724
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_digits：**'
- en: Number of significant digits of the points and weights to return.
  id: totrans-725
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回的节点和权重的有效数字位数。
- en: 'Returns:'
  id: totrans-726
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(x, w)** : The `x` and `w` are lists of points and weights as Floats.'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: '**(x, w)**：`x` 和 `w` 是浮点数列表。'
- en: The points \(x_i\) and weights \(w_i\) are returned as `(x, w)` tuple of lists.
  id: totrans-728
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 节点 \(x_i\) 和权重 \(w_i\) 返回为 `(x, w)` 列表的元组。
- en: Explanation
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Gauss-Hermite quadrature approximates the integral:'
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: Gauss-Hermite 积分近似于积分：
- en: \[\int_{-\infty}^{\infty} e^{-x^2} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{-\infty}^{\infty} e^{-x^2} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
- en: 'The nodes \(x_i\) of an order \(n\) quadrature rule are the roots of \(H_n\)
    and the weights \(w_i\) are given by:'
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: 秩为 \(n\) 的积分规则的节点 \(x_i\) 是 \(H_n\) 的根，权重 \(w_i\) 如下所示：
- en: \[w_i = \frac{2^{n-1} n! \sqrt{\pi}}{n^2 \left(H_{n-1}(x_i)\right)^2}\]
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: \[w_i = \frac{2^{n-1} n! \sqrt{\pi}}{n^2 \left(H_{n-1}(x_i)\right)^2}\]
- en: Examples
  id: totrans-734
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE174]'
  id: totrans-735
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: '[PRE175]'
  id: totrans-736
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: See also
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
- en: References
  id: totrans-739
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R582] ([1](#id18),[2](#id19))'
  id: totrans-740
  prefs: []
  type: TYPE_NORMAL
  zh: '[R582] ([1](#id18),[2](#id19))'
- en: '[https://en.wikipedia.org/wiki/Gauss-Hermite_Quadrature](https://en.wikipedia.org/wiki/Gauss-Hermite_Quadrature)'
  id: totrans-741
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Gauss-Hermite_Quadrature](https://en.wikipedia.org/wiki/Gauss-Hermite_Quadrature)'
- en: '[[R583](#id20)]'
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R583](#id20)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/hermite_rule/hermite_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/hermite_rule/hermite_rule.html)'
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/hermite_rule/hermite_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/hermite_rule/hermite_rule.html)'
- en: '[[R584](#id21)]'
  id: totrans-744
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R584](#id21)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/gen_hermite_rule/gen_hermite_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/gen_hermite_rule/gen_hermite_rule.html)'
  id: totrans-745
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/gen_hermite_rule/gen_hermite_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/gen_hermite_rule/gen_hermite_rule.html)'
- en: '[PRE176]'
  id: totrans-746
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: Computes the generalized Gauss-Laguerre quadrature [[R585]](#r585) points and
    weights.
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 计算广义 Gauss-Laguerre 积分 [[R585]](#r585) 的点和权重。
- en: 'Parameters:'
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n :**'
  id: totrans-749
  prefs: []
  type: TYPE_NORMAL
  zh: '**n :**'
- en: The order of quadrature.
  id: totrans-750
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 积分的顺序。
- en: '**alpha :**'
  id: totrans-751
  prefs: []
  type: TYPE_NORMAL
  zh: '**alpha :**'
- en: The exponent of the singularity, \(\alpha > -1\).
  id: totrans-752
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 奇异性的指数，\(\alpha > -1\)。
- en: '**n_digits :**'
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_digits :**'
- en: Number of significant digits of the points and weights to return.
  id: totrans-754
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要返回点和权重的显著数字的数量。
- en: 'Returns:'
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(x, w)** : the `x` and `w` are lists of points and weights as Floats.'
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: '**(x, w)** : `x` 和 `w` 是点和权重的列表，类型为 Float。'
- en: The points \(x_i\) and weights \(w_i\) are returned as `(x, w)` tuple of lists.
  id: totrans-757
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 点 \(x_i\) 和权重 \(w_i\) 以 `(x, w)` 的列表形式返回。
- en: Explanation
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The generalized Gauss-Laguerre quadrature approximates the integral:'
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: 广义 Gauss-Laguerre 积分近似于：
- en: \[\int_{0}^\infty x^{\alpha} e^{-x} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
  id: totrans-760
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{0}^\infty x^{\alpha} e^{-x} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
- en: 'The nodes \(x_i\) of an order \(n\) quadrature rule are the roots of \(L^{\alpha}_n\)
    and the weights \(w_i\) are given by:'
  id: totrans-761
  prefs: []
  type: TYPE_NORMAL
  zh: 秩为 \(n\) 的积分规则的节点 \(x_i\) 是 \(L^{\alpha}_n\) 的根，权重 \(w_i\) 由以下给出：
- en: \[w_i = \frac{\Gamma(\alpha+n)} {n \Gamma(n) L^{\alpha}_{n-1}(x_i) L^{\alpha+1}_{n-1}(x_i)}\]
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: \[w_i = \frac{\Gamma(\alpha+n)} {n \Gamma(n) L^{\alpha}_{n-1}(x_i) L^{\alpha+1}_{n-1}(x_i)}\]
- en: Examples
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE177]'
  id: totrans-764
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: '[PRE178]'
  id: totrans-765
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: See also
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: 见也
- en: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
- en: References
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R585] ([1](#id22),[2](#id23))'
  id: totrans-769
  prefs: []
  type: TYPE_NORMAL
  zh: '[R585] ([1](#id22),[2](#id23))'
- en: '[https://en.wikipedia.org/wiki/Gauss%E2%80%93Laguerre_quadrature](https://en.wikipedia.org/wiki/Gauss%E2%80%93Laguerre_quadrature)'
  id: totrans-770
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Gauss%E2%80%93Laguerre_quadrature](https://en.wikipedia.org/wiki/Gauss%E2%80%93Laguerre_quadrature)'
- en: '[[R586](#id24)]'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R586](#id24)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/gen_laguerre_rule/gen_laguerre_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/gen_laguerre_rule/gen_laguerre_rule.html)'
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/gen_laguerre_rule/gen_laguerre_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/gen_laguerre_rule/gen_laguerre_rule.html)'
- en: '[PRE179]'
  id: totrans-773
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: Computes the Gauss-Chebyshev quadrature [[R587]](#r587) points and weights of
    the first kind.
  id: totrans-774
  prefs: []
  type: TYPE_NORMAL
  zh: 计算第一类 Gauss-Chebyshev 积分 [[R587]](#r587) 的点和权重。
- en: 'Parameters:'
  id: totrans-775
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n :**'
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: '**n :**'
- en: The order of quadrature.
  id: totrans-777
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 积分的顺序。
- en: '**n_digits :**'
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_digits :**'
- en: Number of significant digits of the points and weights to return.
  id: totrans-779
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要返回点和权重的显著数字的数量。
- en: 'Returns:'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(x, w)** : the `x` and `w` are lists of points and weights as Floats.'
  id: totrans-781
  prefs: []
  type: TYPE_NORMAL
  zh: '**(x, w)** : `x` 和 `w` 是点和权重的列表，类型为 Float。'
- en: The points \(x_i\) and weights \(w_i\) are returned as `(x, w)` tuple of lists.
  id: totrans-782
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 点 \(x_i\) 和权重 \(w_i\) 以 `(x, w)` 的列表形式返回。
- en: Explanation
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Gauss-Chebyshev quadrature of the first kind approximates the integral:'
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类 Gauss-Chebyshev 积分近似于：
- en: \[\int_{-1}^{1} \frac{1}{\sqrt{1-x^2}} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{-1}^{1} \frac{1}{\sqrt{1-x^2}} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
- en: 'The nodes \(x_i\) of an order \(n\) quadrature rule are the roots of \(T_n\)
    and the weights \(w_i\) are given by:'
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: 秩为 \(n\) 的积分规则的节点 \(x_i\) 是 \(T_n\) 的根，权重 \(w_i\) 由以下给出：
- en: \[w_i = \frac{\pi}{n}\]
  id: totrans-787
  prefs: []
  type: TYPE_NORMAL
  zh: \[w_i = \frac{\pi}{n}\]
- en: Examples
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE180]'
  id: totrans-789
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: '[PRE181]'
  id: totrans-790
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: See also
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: 见也
- en: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
  id: totrans-792
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
- en: References
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R587] ([1](#id25),[2](#id26))'
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: '[R587] ([1](#id25),[2](#id26)]'
- en: '[https://en.wikipedia.org/wiki/Chebyshev%E2%80%93Gauss_quadrature](https://en.wikipedia.org/wiki/Chebyshev%E2%80%93Gauss_quadrature)'
  id: totrans-795
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/切比雪夫－高斯求积](https://zh.wikipedia.org/wiki/切比雪夫－高斯求积)'
- en: '[[R588](#id27)]'
  id: totrans-796
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R588](#id27)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/chebyshev1_rule/chebyshev1_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/chebyshev1_rule/chebyshev1_rule.html)'
  id: totrans-797
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/chebyshev1_rule/chebyshev1_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/chebyshev1_rule/chebyshev1_rule.html)'
- en: '[PRE182]'
  id: totrans-798
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: Computes the Gauss-Chebyshev quadrature [[R589]](#r589) points and weights of
    the second kind.
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: 计算第二类 Gauss-Chebyshev 求积 [[R589]](#r589) 的点和权重。
- en: 'Parameters:'
  id: totrans-800
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : the order of quadrature'
  id: totrans-801
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 求积的阶数'
- en: '**n_digits** : number of significant digits of the points and weights to return'
  id: totrans-802
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_digits** : 点和权重的有效数字位数'
- en: 'Returns:'
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(x, w)** : the `x` and `w` are lists of points and weights as Floats.'
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: '**(x, w)** : `x` 和 `w` 分别是浮点数列表。'
- en: The points \(x_i\) and weights \(w_i\) are returned as `(x, w)` tuple of lists.
  id: totrans-805
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回 `(x, w)` 的元组，包含点 `x_i` 和权重 `w_i` 的列表。
- en: Explanation
  id: totrans-806
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Gauss-Chebyshev quadrature of the second kind approximates the integral:'
  id: totrans-807
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类 Gauss-Chebyshev 求积近似于积分：
- en: \[\int_{-1}^{1} \sqrt{1-x^2} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
  id: totrans-808
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{-1}^{1} \sqrt{1-x^2} f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
- en: 'The nodes \(x_i\) of an order \(n\) quadrature rule are the roots of \(U_n\)
    and the weights \(w_i\) are given by:'
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
  zh: 一个阶数为 \(n\) 的求积规则的节点 \(x_i\) 是 \(U_n\) 的根，权重 \(w_i\) 由以下给出：
- en: \[w_i = \frac{\pi}{n+1} \sin^2 \left(\frac{i}{n+1}\pi\right)\]
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: \[w_i = \frac{\pi}{n+1} \sin^2 \left(\frac{i}{n+1}\pi\right)\]
- en: Examples
  id: totrans-811
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE183]'
  id: totrans-812
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: '[PRE184]'
  id: totrans-813
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: See also
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
- en: References
  id: totrans-816
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R589] ([1](#id28),[2](#id29))'
  id: totrans-817
  prefs: []
  type: TYPE_NORMAL
  zh: '[R589] ([1](#id28),[2](#id29))'
- en: '[https://en.wikipedia.org/wiki/Chebyshev%E2%80%93Gauss_quadrature](https://en.wikipedia.org/wiki/Chebyshev%E2%80%93Gauss_quadrature)'
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/切比雪夫－高斯求积](https://zh.wikipedia.org/wiki/切比雪夫－高斯求积)'
- en: '[[R590](#id30)]'
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R590](#id30)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/chebyshev2_rule/chebyshev2_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/chebyshev2_rule/chebyshev2_rule.html)'
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/chebyshev2_rule/chebyshev2_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/chebyshev2_rule/chebyshev2_rule.html)'
- en: '[PRE185]'
  id: totrans-821
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: Computes the Gauss-Jacobi quadrature [[R591]](#r591) points and weights.
  id: totrans-822
  prefs: []
  type: TYPE_NORMAL
  zh: 计算高斯-雅各比数值积分 [[R591]](#r591) 的点和权重。
- en: 'Parameters:'
  id: totrans-823
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : the order of quadrature'
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 数值积分的阶数'
- en: '**alpha** : the first parameter of the Jacobi Polynomial, \(\alpha > -1\)'
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '**alpha** : Jacobian 多项式的第一个参数，\(\alpha > -1\)'
- en: '**beta** : the second parameter of the Jacobi Polynomial, \(\beta > -1\)'
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: '**beta** : Jacobian 多项式的第二个参数，\(\beta > -1\)'
- en: '**n_digits** : number of significant digits of the points and weights to return'
  id: totrans-827
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_digits** : 返回的点和权重的有效数字数'
- en: 'Returns:'
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(x, w)** : the `x` and `w` are lists of points and weights as Floats.'
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: '**(x, w)** : `x` 和 `w` 分别为点和权重的浮点数列表。'
- en: The points \(x_i\) and weights \(w_i\) are returned as `(x, w)` tuple of lists.
  id: totrans-830
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回为 `(x, w)` 列表元组的点 \(x_i\) 和权重 \(w_i\)。
- en: Explanation
  id: totrans-831
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Gauss-Jacobi quadrature of the first kind approximates the integral:'
  id: totrans-832
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类高斯-雅各比数值积分近似计算积分：
- en: \[\int_{-1}^1 (1-x)^\alpha (1+x)^\beta f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{-1}^1 (1-x)^\alpha (1+x)^\beta f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
- en: 'The nodes \(x_i\) of an order \(n\) quadrature rule are the roots of \(P^{(\alpha,\beta)}_n\)
    and the weights \(w_i\) are given by:'
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: 节点 \(x_i\) 是一个阶 \(n\) 的数值积分规则的多项式 \(P^{(\alpha,\beta)}_n\) 的根，权重 \(w_i\) 给定为：
- en: \[w_i = -\frac{2n+\alpha+\beta+2}{n+\alpha+\beta+1} \frac{\Gamma(n+\alpha+1)\Gamma(n+\beta+1)}
    {\Gamma(n+\alpha+\beta+1)(n+1)!} \frac{2^{\alpha+\beta}}{P'_n(x_i) P^{(\alpha,\beta)}_{n+1}(x_i)}\]
  id: totrans-835
  prefs: []
  type: TYPE_NORMAL
  zh: \[w_i = -\frac{2n+\alpha+\beta+2}{n+\alpha+\beta+1} \frac{\Gamma(n+\alpha+1)\Gamma(n+\beta+1)}
    {\Gamma(n+\alpha+\beta+1)(n+1)!} \frac{2^{\alpha+\beta}}{P'_n(x_i) P^{(\alpha,\beta)}_{n+1}(x_i)}\]
- en: Examples
  id: totrans-836
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE186]'
  id: totrans-837
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: '[PRE187]'
  id: totrans-838
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: See also
  id: totrans-839
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
  id: totrans-840
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_lobatto`](#sympy.integrals.quadrature.gauss_lobatto "sympy.integrals.quadrature.gauss_lobatto")'
- en: References
  id: totrans-841
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R591] ([1](#id31),[2](#id32))'
  id: totrans-842
  prefs: []
  type: TYPE_NORMAL
  zh: '[R591] ([1](#id31),[2](#id32))'
- en: '[https://en.wikipedia.org/wiki/Gauss%E2%80%93Jacobi_quadrature](https://en.wikipedia.org/wiki/Gauss%E2%80%93Jacobi_quadrature)'
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Gauss%E2%80%93Jacobi_quadrature](https://en.wikipedia.org/wiki/Gauss%E2%80%93Jacobi_quadrature)'
- en: '[[R592](#id33)]'
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R592](#id33)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/jacobi_rule/jacobi_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/jacobi_rule/jacobi_rule.html)'
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/jacobi_rule/jacobi_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/jacobi_rule/jacobi_rule.html)'
- en: '[[R593](#id34)]'
  id: totrans-846
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R593](#id34)]'
- en: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/gegenbauer_rule/gegenbauer_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/gegenbauer_rule/gegenbauer_rule.html)'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://people.sc.fsu.edu/~jburkardt/cpp_src/gegenbauer_rule/gegenbauer_rule.html](https://people.sc.fsu.edu/~jburkardt/cpp_src/gegenbauer_rule/gegenbauer_rule.html)'
- en: '[PRE188]'
  id: totrans-848
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: Computes the Gauss-Lobatto quadrature [[R594]](#r594) points and weights.
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 计算高斯-洛巴托数值积分 [[R594]](#r594) 的点和权重。
- en: 'Parameters:'
  id: totrans-850
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : the order of quadrature'
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** : 数值积分的阶数'
- en: '**n_digits** : number of significant digits of the points and weights to return'
  id: totrans-852
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_digits** : 返回的点和权重的有效数字数'
- en: 'Returns:'
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(x, w)** : the `x` and `w` are lists of points and weights as Floats.'
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: '**(x, w)** : `x` 和 `w` 分别为点和权重的浮点数列表。'
- en: The points \(x_i\) and weights \(w_i\) are returned as `(x, w)` tuple of lists.
  id: totrans-855
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回为 `(x, w)` 列表元组的点 \(x_i\) 和权重 \(w_i\)。
- en: Explanation
  id: totrans-856
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'The Gauss-Lobatto quadrature approximates the integral:'
  id: totrans-857
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯-洛巴托数值积分近似计算积分：
- en: \[\int_{-1}^1 f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: \[\int_{-1}^1 f(x)\,dx \approx \sum_{i=1}^n w_i f(x_i)\]
- en: 'The nodes \(x_i\) of an order \(n\) quadrature rule are the roots of \(P''_(n-1)\)
    and the weights \(w_i\) are given by:'
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: 节点 \(x_i\) 是一个阶 \(n\) 的数值积分规则的多项式 \(P'_(n-1)\) 的根，权重 \(w_i\) 给定为：
- en: \[\begin{split}&w_i = \frac{2}{n(n-1) \left[P_{n-1}(x_i)\right]^2},\quad x\neq\pm
    1\\ &w_i = \frac{2}{n(n-1)},\quad x=\pm 1\end{split}\]
  id: totrans-860
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}&w_i = \frac{2}{n(n-1) \left[P_{n-1}(x_i)\right]^2},\quad x\neq\pm
    1\\ &w_i = \frac{2}{n(n-1)},\quad x=\pm 1\end{split}\]
- en: Examples
  id: totrans-861
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE189]'
  id: totrans-862
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: See also
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi")'
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: '[`gauss_legendre`](#sympy.integrals.quadrature.gauss_legendre "sympy.integrals.quadrature.gauss_legendre"),
    [`gauss_laguerre`](#sympy.integrals.quadrature.gauss_laguerre "sympy.integrals.quadrature.gauss_laguerre"),
    [`gauss_gen_laguerre`](#sympy.integrals.quadrature.gauss_gen_laguerre "sympy.integrals.quadrature.gauss_gen_laguerre"),
    [`gauss_hermite`](#sympy.integrals.quadrature.gauss_hermite "sympy.integrals.quadrature.gauss_hermite"),
    [`gauss_chebyshev_t`](#sympy.integrals.quadrature.gauss_chebyshev_t "sympy.integrals.quadrature.gauss_chebyshev_t"),
    [`gauss_chebyshev_u`](#sympy.integrals.quadrature.gauss_chebyshev_u "sympy.integrals.quadrature.gauss_chebyshev_u"),
    [`gauss_jacobi`](#sympy.integrals.quadrature.gauss_jacobi "sympy.integrals.quadrature.gauss_jacobi")'
- en: References
  id: totrans-865
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R594] ([1](#id35),[2](#id36))'
  id: totrans-866
  prefs: []
  type: TYPE_NORMAL
  zh: '[R594] ([1](#id35),[2](#id36))'
- en: '[https://en.wikipedia.org/wiki/Gaussian_quadrature#Gauss.E2.80.93Lobatto_rules](https://en.wikipedia.org/wiki/Gaussian_quadrature#Gauss.E2.80.93Lobatto_rules)'
  id: totrans-867
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zh.wikipedia.org/wiki/高斯求积#高斯－洛巴托规则](https://en.wikipedia.org/wiki/Gaussian_quadrature#Gauss.E2.80.93Lobatto_rules)'
- en: '[[R595](#id37)]'
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R595](#id37)]'
- en: '[https://web.archive.org/web/20200118141346/http://people.math.sfu.ca/~cbm/aands/page_888.htm](https://web.archive.org/web/20200118141346/http://people.math.sfu.ca/~cbm/aands/page_888.htm)'
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://web.archive.org/web/20200118141346/http://people.math.sfu.ca/~cbm/aands/page_888.htm](https://web.archive.org/web/20200118141346/http://people.math.sfu.ca/~cbm/aands/page_888.htm)'
- en: '### Integration over Polytopes'
  id: totrans-870
  prefs: []
  type: TYPE_NORMAL
  zh: '### 多面体积分'
- en: The `intpoly` module in SymPy implements methods to calculate the integral of
    a polynomial over 2/3-Polytopes. Uses evaluation techniques as described in Chin
    et al. (2015) [1].
  id: totrans-871
  prefs: []
  type: TYPE_NORMAL
  zh: SymPy 中的`intpoly`模块实现了计算多面体上多项式积分的方法。使用了 Chin 等人（2015年）[1] 中描述的评估技术。
- en: The input for 2-Polytope or Polygon uses the already existing `Polygon` data
    structure in SymPy. See [`sympy.geometry.polygon`](../geometry/polygons.html#module-sympy.geometry.polygon
    "sympy.geometry.polygon") for how to create a polygon.
  id: totrans-872
  prefs: []
  type: TYPE_NORMAL
  zh: 二维多边形或多边形的输入使用了 SymPy 中已有的 `Polygon` 数据结构。参见 [`sympy.geometry.polygon`](../geometry/polygons.html#module-sympy.geometry.polygon)
    如何创建多边形。
- en: For the 3-Polytope or Polyhedron, the most economical representation is to specify
    a list of vertices and then to provide each constituting face(Polygon) as a list
    of vertex indices.
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: 对于三维多面体或多胞形，最经济的表示方法是指定顶点列表，并将每个组成面（多边形）表示为顶点索引列表。
- en: For example, consider the unit cube. Here is how it would be represented.
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑单位立方体。其表示方法如下。
- en: '`unit_cube = [[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0),(1, 0,
    1), (1, 1, 0), (1, 1, 1)],`'
  id: totrans-875
  prefs: []
  type: TYPE_NORMAL
  zh: '`unit_cube = [[(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1), (1, 0, 0),(1, 0,
    1), (1, 1, 0), (1, 1, 1)],`'
- en: '`[3, 7, 6, 2], [1, 5, 7, 3], [5, 4, 6, 7], [0, 4, 5, 1], [2, 0, 1, 3], [2,
    6, 4, 0]]`'
  id: totrans-876
  prefs: []
  type: TYPE_NORMAL
  zh: '`[3, 7, 6, 2], [1, 5, 7, 3], [5, 4, 6, 7], [0, 4, 5, 1], [2, 0, 1, 3], [2,
    6, 4, 0]]`'
- en: Here, the first sublist is the list of vertices. The other smaller lists such
    as `[3, 7, 6, 2]` represent a 2D face of the polyhedra with vertices having index
    `3, 7, 6 and 2` in the first sublist(in that order).
  id: totrans-877
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，第一个子列表是顶点列表。其他小列表如`[3, 7, 6, 2]`表示多面体的二维面，其顶点在第一个子列表中的索引为`3, 7, 6, 2`（按顺序）。
- en: Principal method in this module is [`polytope_integrate()`](#sympy.integrals.intpoly.polytope_integrate
    "sympy.integrals.intpoly.polytope_integrate")
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: 本模块中的主要方法是 [`polytope_integrate()`](#sympy.integrals.intpoly.polytope_integrate
    "sympy.integrals.intpoly.polytope_integrate")
- en: '`polytope_integrate(Polygon((0, 0), (0, 1), (1, 0)), x)` returns the integral
    of \(x\) over the triangle with vertices (0, 0), (0, 1) and (1, 0)'
  id: totrans-879
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polytope_integrate(Polygon((0, 0), (0, 1), (1, 0)), x)` 返回三角形（顶点为 (0, 0),
    (0, 1), (1, 0)）上 \(x\) 的积分。'
- en: ''
  id: totrans-880
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-881
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`polytope_integrate(unit_cube, x + y + z)` returns the integral of \(x + y
    + z\) over the unit cube.'
  id: totrans-882
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`polytope_integrate(unit_cube, x + y + z)` 返回单位立方体上 \(x + y + z\) 的积分。'
- en: References
  id: totrans-883
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] : Chin, Eric B., Jean B. Lasserre, and N. Sukumar. “Numerical integration
    of homogeneous functions on convex and nonconvex polygons and polyhedra.” Computational
    Mechanics 56.6 (2015): 967-981'
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]：Chin, Eric B., Jean B. Lasserre 和 N. Sukumar。《计算力学》56.6（2015）：967-981。'
- en: 'PDF link : [http://dilbert.engr.ucdavis.edu/~suku/quadrature/cls-integration.pdf](http://dilbert.engr.ucdavis.edu/~suku/quadrature/cls-integration.pdf)'
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: PDF链接：[http://dilbert.engr.ucdavis.edu/~suku/quadrature/cls-integration.pdf](http://dilbert.engr.ucdavis.edu/~suku/quadrature/cls-integration.pdf)
- en: Examples
  id: totrans-886
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例
- en: For 2D Polygons
  id: totrans-887
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对于2D多边形
- en: 'Single Polynomial:'
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: 单一多项式：
- en: '[PRE190]'
  id: totrans-889
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: 'List of specified polynomials:'
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: 指定多项式列表：
- en: '[PRE191]'
  id: totrans-891
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: 'Computing all monomials up to a maximum degree:'
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: 计算所有单项式，直至最大次数：
- en: '[PRE192]'
  id: totrans-893
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: For 3-Polytopes/Polyhedra
  id: totrans-894
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对于3-多胞体/多面体
- en: 'Single Polynomial:'
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: 单一多项式：
- en: '[PRE193]'
  id: totrans-896
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: 'List of specified polynomials:'
  id: totrans-897
  prefs: []
  type: TYPE_NORMAL
  zh: 指定多项式列表：
- en: '[PRE194]'
  id: totrans-898
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: 'Computing all monomials up to a maximum degree:'
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: 计算所有单项式，直至最大次数：
- en: '[PRE195]'
  id: totrans-900
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: API reference
  id: totrans-901
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API参考
- en: '[PRE196]'
  id: totrans-902
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: Integrates polynomials over 2/3-Polytopes.
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: 在2/3-多胞体上进行多项式积分。
- en: 'Parameters:'
  id: totrans-904
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**poly** : The input Polygon.'
  id: totrans-905
  prefs: []
  type: TYPE_NORMAL
  zh: '**poly**：输入的多边形。'
- en: '**expr** : The input polynomial.'
  id: totrans-906
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr**：输入的多项式。'
- en: '**clockwise** : Binary value to sort input points of 2-Polytope clockwise.(Optional)'
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: '**clockwise**：对2-多面体输入点按顺时针排序的二进制值（可选）。'
- en: '**max_degree** : The maximum degree of any monomial of the input polynomial.(Optional)'
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: '**max_degree**：输入多项式的任何单项式的最大次数（可选）。'
- en: Explanation
  id: totrans-909
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function accepts the polytope in `poly` and the function in `expr` (uni/bi/trivariate
    polynomials are implemented) and returns the exact integral of `expr` over `poly`.
  id: totrans-910
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数接受`poly`中的多胞体和`expr`中的函数（实现了单/双/三变量多项式），并返回`expr`在`poly`上的精确积分。
- en: Examples
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE197]'
  id: totrans-912
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
