["```py\nIn [1]: import numpy.random\n\nIn [2]: rng = np.random.default_rng()\n\nIn [3]: %timeit -n 1 rng.standard_normal(100000)\n ...: %timeit -n 1 numpy.random.standard_normal(100000)\n ...: \n1.22 ms +- 17.9 us per loop (mean +- std. dev. of 7 runs, 1 loop each)\n2.19 ms +- 12.5 us per loop (mean +- std. dev. of 7 runs, 1 loop each) \n```", "```py\nIn [4]: %timeit -n 1 rng.standard_exponential(100000)\n ...: %timeit -n 1 numpy.random.standard_exponential(100000)\n ...: \n670 us +- 16.2 us per loop (mean +- std. dev. of 7 runs, 1 loop each)\n1.62 ms +- 17.8 us per loop (mean +- std. dev. of 7 runs, 1 loop each) \n```", "```py\nIn [5]: %timeit -n 1 rng.standard_gamma(3.0, 100000)\n ...: %timeit -n 1 numpy.random.standard_gamma(3.0, 100000)\n ...: \n2.46 ms +- 13 us per loop (mean +- std. dev. of 7 runs, 1 loop each)\n4.42 ms +- 7.76 us per loop (mean +- std. dev. of 7 runs, 1 loop each) \n```", "```py\nIn [6]: rng = np.random.default_rng()\n\nIn [7]: rng.random(3, dtype=np.float64)\nOut[7]: array([0.32742445, 0.00929327, 0.97225134])\n\nIn [8]: rng.random(3, dtype=np.float32)\nOut[8]: array([0.67851496, 0.9865629 , 0.23022616], dtype=float32)\n\nIn [9]: rng.integers(0, 256, size=3, dtype=np.uint8)\nOut[9]: array([164,  54, 133], dtype=uint8) \n```", "```py\nIn [10]: rng = np.random.default_rng()\n\nIn [11]: existing = np.zeros(4)\n\nIn [12]: rng.random(out=existing[:2])\nOut[12]: array([0.83108158, 0.52678072])\n\nIn [13]: print(existing)\n[0.83108158 0.52678072 0\\.         0\\.        ] \n```", "```py\nIn [14]: rng = np.random.default_rng()\n\nIn [15]: a = np.arange(12).reshape((3, 4))\n\nIn [16]: a\nOut[16]: \narray([[ 0,  1,  2,  3],\n [ 4,  5,  6,  7],\n [ 8,  9, 10, 11]])\n\nIn [17]: rng.choice(a, axis=1, size=5)\nOut[17]: \narray([[ 1,  1,  0,  3,  3],\n [ 5,  5,  4,  7,  7],\n [ 9,  9,  8, 11, 11]])\n\nIn [18]: rng.shuffle(a, axis=1)        # Shuffle in-place\n\nIn [19]: a\nOut[19]: \narray([[ 2,  0,  3,  1],\n [ 6,  4,  7,  5],\n [10,  8, 11,  9]]) \n```"]