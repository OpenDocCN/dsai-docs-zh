- en: 'YOLOv10: Real-Time End-to-End Object Detection'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: YOLOv10：实时端到端目标检测
- en: 原文：[`docs.ultralytics.com/models/yolov10/`](https://docs.ultralytics.com/models/yolov10/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/models/yolov10/`](https://docs.ultralytics.com/models/yolov10/)
- en: YOLOv10, built on the [Ultralytics](https://ultralytics.com) [Python package](https://pypi.org/project/ultralytics/)
    by researchers at [Tsinghua University](https://www.tsinghua.edu.cn/en/), introduces
    a new approach to real-time object detection, addressing both the post-processing
    and model architecture deficiencies found in previous YOLO versions. By eliminating
    non-maximum suppression (NMS) and optimizing various model components, YOLOv10
    achieves state-of-the-art performance with significantly reduced computational
    overhead. Extensive experiments demonstrate its superior accuracy-latency trade-offs
    across multiple model scales.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10，由[清华大学](https://www.tsinghua.edu.cn/en/)的研究人员开发，构建在[Ultralytics](https://ultralytics.com)的[Python包](https://pypi.org/project/ultralytics/)之上，引入了一种新的实时目标检测方法，解决了之前YOLO版本中存在的后处理和模型架构缺陷。通过消除非最大抑制（NMS）并优化各种模型组件，YOLOv10在显著减少计算开销的同时实现了最先进的性能。广泛的实验表明，它在多个模型尺度上具有优越的精度-延迟权衡。
- en: '![YOLOv10 consistent dual assignment for NMS-free training](img/f56ed2cd2a516bf95eb3eaa4b2572c8d.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![YOLOv10一致的双重分配，实现无NMS训练](img/f56ed2cd2a516bf95eb3eaa4b2572c8d.png)'
- en: '[`www.youtube.com/embed/_gRqR-miFPE`](https://www.youtube.com/embed/_gRqR-miFPE)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`www.youtube.com/embed/_gRqR-miFPE`](https://www.youtube.com/embed/_gRqR-miFPE)'
- en: '**Watch:** How to Train YOLOv10 on SKU-110k Dataset using Ultralytics | Retail
    Dataset'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**观看:** 如何使用Ultralytics | Retail数据集在SKU-110k数据集上训练YOLOv10'
- en: Overview
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: Real-time object detection aims to accurately predict object categories and
    positions in images with low latency. The YOLO series has been at the forefront
    of this research due to its balance between performance and efficiency. However,
    reliance on NMS and architectural inefficiencies have hindered optimal performance.
    YOLOv10 addresses these issues by introducing consistent dual assignments for
    NMS-free training and a holistic efficiency-accuracy driven model design strategy.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 实时目标检测旨在准确预测图像中的对象类别和位置，并具有低延迟。由于在性能和效率之间的平衡，YOLO系列一直处于研究前沿。然而，依赖于NMS和架构效率低下一直制约着其优化性能。YOLOv10通过引入一致的双重分配实现了无NMS训练，并采用整体的效率-精度驱动的模型设计策略来解决这些问题。
- en: Architecture
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 架构
- en: 'The architecture of YOLOv10 builds upon the strengths of previous YOLO models
    while introducing several key innovations. The model architecture consists of
    the following components:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10的架构建立在前几个YOLO模型的优势基础上，同时引入了几个关键的创新。模型架构包括以下组件：
- en: '**Backbone**: Responsible for feature extraction, the backbone in YOLOv10 uses
    an enhanced version of CSPNet (Cross Stage Partial Network) to improve gradient
    flow and reduce computational redundancy.'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Backbone**: 负责特征提取，YOLOv10中的骨干网络采用增强版的CSPNet（跨阶段部分网络），以改善梯度流动并减少计算冗余。'
- en: '**Neck**: The neck is designed to aggregate features from different scales
    and passes them to the head. It includes PAN (Path Aggregation Network) layers
    for effective multiscale feature fusion.'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Neck**: 颈部设计用于聚合不同尺度的特征并将其传递给头部。它包括PAN（路径聚合网络）层，用于有效的多尺度特征融合。'
- en: '**One-to-Many Head**: Generates multiple predictions per object during training
    to provide rich supervisory signals and improve learning accuracy.'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**一对多头部**: 在训练期间为每个对象生成多个预测，提供丰富的监督信号，提高学习精度。'
- en: '**One-to-One Head**: Generates a single best prediction per object during inference
    to eliminate the need for NMS, thereby reducing latency and improving efficiency.'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**一对一头部**: 在推断期间为每个对象生成单个最佳预测，消除了NMS的需求，从而降低延迟并提高效率。'
- en: Key Features
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关键特性
- en: '**NMS-Free Training**: Utilizes consistent dual assignments to eliminate the
    need for NMS, reducing inference latency.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**无NMS训练**: 利用一致的双重分配来消除NMS的需求，降低推断延迟。'
- en: '**Holistic Model Design**: Comprehensive optimization of various components
    from both efficiency and accuracy perspectives, including lightweight classification
    heads, spatial-channel decoupled down sampling, and rank-guided block design.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**整体模型设计**: 综合优化各种组件，包括轻量级分类头部、空间通道分离下采样和排名引导的块设计，从效率和精度两个角度考虑。'
- en: '**Enhanced Model Capabilities**: Incorporates large-kernel convolutions and
    partial self-attention modules to improve performance without significant computational
    cost.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**增强模型能力**: 结合了大卷积核和部分自注意模块，提高性能而不增加显著的计算成本。'
- en: Model Variants
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型变体
- en: 'YOLOv10 comes in various model scales to cater to different application needs:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10提供多种模型规模，以满足不同的应用需求：
- en: '**YOLOv10-N**: Nano version for extremely resource-constrained environments.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-N**: 面向极度资源受限环境的纳米版本。'
- en: '**YOLOv10-S**: Small version balancing speed and accuracy.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-S**: 平衡速度和准确性的小版本。'
- en: '**YOLOv10-M**: Medium version for general-purpose use.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-M**: 通用中型版本。'
- en: '**YOLOv10-B**: Balanced version with increased width for higher accuracy.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-B**: 增加宽度以提高准确性的平衡版本。'
- en: '**YOLOv10-L**: Large version for higher accuracy at the cost of increased computational
    resources.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-L**: 高精度大版本，但计算资源需求较高。'
- en: '**YOLOv10-X**: Extra-large version for maximum accuracy and performance.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-X**: 极大版本，追求最大准确性和性能。'
- en: Performance
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能
- en: YOLOv10 outperforms previous YOLO versions and other state-of-the-art models
    in terms of accuracy and efficiency. For example, YOLOv10-S is 1.8x faster than
    RT-DETR-R18 with similar AP on the COCO dataset, and YOLOv10-B has 46% less latency
    and 25% fewer parameters than YOLOv9-C with the same performance.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10在准确性和效率方面优于以往的YOLO版本和其他最先进模型。例如，YOLOv10-S比RT-DETR-R18在COCO数据集上速度快1.8倍，且具有类似的AP，而YOLOv10-B的延迟比YOLOv9-C少46%，参数少25%且性能相同。
- en: '| Model | Input Size | AP^(val) | FLOPs (G) | Latency (ms) |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 模型 | 输入尺寸 | AP^(val) | FLOPs (G) | 延迟 (ms) |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| [YOLOv10-N](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10n.pt)
    | 640 | 38.5 | **6.7** | **1.84** |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv10-N](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10n.pt)
    | 640 | 38.5 | **6.7** | **1.84** |'
- en: '| [YOLOv10-S](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10s.pt)
    | 640 | 46.3 | 21.6 | 2.49 |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv10-S](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10s.pt)
    | 640 | 46.3 | 21.6 | 2.49 |'
- en: '| [YOLOv10-M](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10m.pt)
    | 640 | 51.1 | 59.1 | 4.74 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv10-M](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10m.pt)
    | 640 | 51.1 | 59.1 | 4.74 |'
- en: '| [YOLOv10-B](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10b.pt)
    | 640 | 52.5 | 92.0 | 5.74 |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv10-B](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10b.pt)
    | 640 | 52.5 | 92.0 | 5.74 |'
- en: '| [YOLOv10-L](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10l.pt)
    | 640 | 53.2 | 120.3 | 7.28 |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv10-L](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10l.pt)
    | 640 | 53.2 | 120.3 | 7.28 |'
- en: '| [YOLOv10-X](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10x.pt)
    | 640 | **54.4** | 160.4 | 10.70 |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [YOLOv10-X](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10x.pt)
    | 640 | **54.4** | 160.4 | 10.70 |'
- en: Latency measured with TensorRT FP16 on T4 GPU.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用TensorRT FP16在T4 GPU上测量延迟。
- en: Methodology
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方法论
- en: Consistent Dual Assignments for NMS-Free Training
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一致的双赋值，无NMS训练
- en: YOLOv10 employs dual label assignments, combining one-to-many and one-to-one
    strategies during training to ensure rich supervision and efficient end-to-end
    deployment. The consistent matching metric aligns the supervision between both
    strategies, enhancing the quality of predictions during inference.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10在训练期间采用双标签赋值，结合一对多和一对一策略，确保丰富的监督并实现高效的端到端部署。一致的匹配度量使得两种策略之间的监督保持一致，在推理过程中增强预测质量。
- en: Holistic Efficiency-Accuracy Driven Model Design
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 全面的效率-准确度驱动模型设计
- en: Efficiency Enhancements
  id: totrans-41
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 效率增强
- en: '**Lightweight Classification Head**: Reduces the computational overhead of
    the classification head by using depth-wise separable convolutions.'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**轻量级分类头**: 使用深度可分离卷积减少分类头的计算开销。'
- en: '**Spatial-Channel Decoupled Down sampling**: Decouples spatial reduction and
    channel modulation to minimize information loss and computational cost.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**空间-通道分离下采样**: 分离空间减少和通道调制，以最小化信息丢失和计算成本。'
- en: '**Rank-Guided Block Design**: Adapts block design based on intrinsic stage
    redundancy, ensuring optimal parameter utilization.'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**排名导向的块设计**: 根据内在阶段冗余调整块设计，确保最佳参数利用率。'
- en: Accuracy Enhancements
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 准确度增强
- en: '**Large-Kernel Convolution**: Enlarges the receptive field to enhance feature
    extraction capability.'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**大卷积核**: 扩大感受野以增强特征提取能力。'
- en: '**Partial Self-Attention (PSA)**: Incorporates self-attention modules to improve
    global representation learning with minimal overhead.'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**部分自注意力（PSA）**: 结合自注意力模块，提高全局表示学习，且开销最小化。'
- en: Experiments and Results
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实验与结果
- en: YOLOv10 has been extensively tested on standard benchmarks like COCO, demonstrating
    superior performance and efficiency. The model achieves state-of-the-art results
    across different variants, showcasing significant improvements in latency and
    accuracy compared to previous versions and other contemporary detectors.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Comparisons
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![YOLOv10 comparison with SOTA object detectors](img/cd970eef603f0cb066dbb5552573b8ea.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
- en: 'Compared to other state-of-the-art detectors:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: YOLOv10-S / X are 1.8× / 1.3× faster than RT-DETR-R18 / R101 with similar accuracy
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: YOLOv10-B has 25% fewer parameters and 46% lower latency than YOLOv9-C at same
    accuracy
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: YOLOv10-L / X outperform YOLOv8-L / X by 0.3 AP / 0.5 AP with 1.8× / 2.3× fewer
    parameters
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is a detailed comparison of YOLOv10 variants with other state-of-the-art
    models:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '| Model | Params ^((M)) | FLOPs ^((G)) | mAP^(val 50-95) | Latency ^((ms))
    | Latency-forward ^((ms)) |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
- en: '| YOLOv6-3.0-N | 4.7 | 11.4 | 37.0 | 2.69 | **1.76** |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
- en: '| Gold-YOLO-N | 5.6 | 12.1 | **39.6** | 2.92 | 1.82 |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
- en: '| YOLOv8-N | 3.2 | 8.7 | 37.3 | 6.16 | 1.77 |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
- en: '| **[YOLOv10-N](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10n.pt)**
    | **2.3** | **6.7** | 39.5 | **1.84** | 1.79 |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
- en: '| YOLOv6-3.0-S | 18.5 | 45.3 | 44.3 | 3.42 | 2.35 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
- en: '| Gold-YOLO-S | 21.5 | 46.0 | 45.4 | 3.82 | 2.73 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
- en: '| YOLOv8-S | 11.2 | 28.6 | 44.9 | 7.07 | **2.33** |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
- en: '| **[YOLOv10-S](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10s.pt)**
    | **7.2** | **21.6** | **46.8** | **2.49** | 2.39 |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
- en: '| RT-DETR-R18 | 20.0 | 60.0 | 46.5 | **4.58** | **4.49** |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
- en: '| YOLOv6-3.0-M | 34.9 | 85.8 | 49.1 | 5.63 | 4.56 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
- en: '| Gold-YOLO-M | 41.3 | 87.5 | 49.8 | 6.38 | 5.45 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
- en: '| YOLOv8-M | 25.9 | 78.9 | 50.6 | 9.50 | 5.09 |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
- en: '| **[YOLOv10-M](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10m.pt)**
    | **15.4** | **59.1** | **51.3** | 4.74 | 4.63 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
- en: '| YOLOv6-3.0-L | 59.6 | 150.7 | 51.8 | 9.02 | 7.90 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
- en: '| Gold-YOLO-L | 75.1 | 151.7 | 51.8 | 10.65 | 9.78 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
- en: '| YOLOv8-L | 43.7 | 165.2 | 52.9 | 12.39 | 8.06 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
- en: '| RT-DETR-R50 | 42.0 | 136.0 | 53.1 | 9.20 | 9.07 |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
- en: '| **[YOLOv10-L](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10l.pt)**
    | **24.4** | **120.3** | **53.4** | **7.28** | **7.21** |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
- en: '| YOLOv8-X | 68.2 | 257.8 | 53.9 | 16.86 | 12.83 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
- en: '| RT-DETR-R101 | 76.0 | 259.0 | 54.3 | 13.71 | 13.58 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
- en: '| **[YOLOv10-X](https://github.com/ultralytics/assets/releases/download/v8.2.0/yolov10x.pt)**
    | **29.5** | **160.4** | **54.4** | **10.70** | **10.60** |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
- en: Usage Examples
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For predicting new images with YOLOv10:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Example
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For training YOLOv10 on a custom dataset:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Example
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Supported Tasks and Modes
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The YOLOv10 models series offers a range of models, each optimized for high-performance
    Object Detection. These models cater to varying computational needs and accuracy
    requirements, making them versatile for a wide array of applications.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '| Model | Filenames | Tasks | Inference | Validation | Training | Export |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| Model | Filenames | Tasks | Inference | Validation | Training | Export |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| YOLOv10 | `yolov10n.pt` `yolov10s.pt` `yolov10m.pt` `yolov10l.pt` `yolov10x.pt`
    | Object Detection | ✅ | ✅ | ✅ | ✅ |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| YOLOv10 | `yolov10n.pt` `yolov10s.pt` `yolov10m.pt` `yolov10l.pt` `yolov10x.pt`
    | 目标检测 | ✅ | ✅ | ✅ | ✅ |'
- en: Exporting YOLOv10
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导出YOLOv10
- en: Due to the new operations introduced with YOLOv10, not all export formats provided
    by Ultralytics are currently supported. The following table outlines which formats
    have been successfully converted using Ultralytics for YOLOv10\. Feel free to
    open a pull request if you're able to provide a contribution change for adding
    export support of additional formats for YOLOv10.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 由于YOLOv10引入了新的操作，目前并非所有由Ultralytics提供的导出格式都得到支持。以下表格概述了使用Ultralytics进行YOLOv10成功转换的格式。如果您能够提供贡献更改以增加YOLOv10其他导出格式的支持，请随时提交拉取请求。
- en: '| Export Format | Supported |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| 导出格式 | 支持情况 |'
- en: '| --- | --- |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| TorchScript | ✅ |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| TorchScript | ✅ |'
- en: '| ONNX | ✅ |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| ONNX | ✅ |'
- en: '| OpenVINO | ✅ |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| OpenVINO | ✅ |'
- en: '| TensorRT | ✅ |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| TensorRT | ✅ |'
- en: '| CoreML | ❌ |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| CoreML | ❌ |'
- en: '| TF SavedModel | ✅ |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| TF SavedModel | ✅ |'
- en: '| TF GraphDef | ✅ |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| TF GraphDef | ✅ |'
- en: '| TF Lite | ✅ |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| TF Lite | ✅ |'
- en: '| TF Edge TPU | ❌ |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| TF Edge TPU | ❌ |'
- en: '| TF.js | ❌ |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| TF.js | ❌ |'
- en: '| PaddlePaddle | ❌ |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| PaddlePaddle | ❌ |'
- en: '| NCNN | ❌ |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| NCNN | ❌ |'
- en: Conclusion
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: YOLOv10 sets a new standard in real-time object detection by addressing the
    shortcomings of previous YOLO versions and incorporating innovative design strategies.
    Its ability to deliver high accuracy with low computational cost makes it an ideal
    choice for a wide range of real-world applications.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10 通过解决以往版本的不足之处并采用创新设计策略，为实时目标检测设定了新的标准。其在低计算成本下能够提供高精度，使其成为广泛实际应用的理想选择。
- en: Citations and Acknowledgements
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引文和致谢
- en: 'We would like to acknowledge the YOLOv10 authors from [Tsinghua University](https://www.tsinghua.edu.cn/en/)
    for their extensive research and significant contributions to the [Ultralytics](https://ultralytics.com)
    framework:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要感谢清华大学的YOLOv10作者们，他们在[Ultralytics](https://ultralytics.com)框架中进行了广泛的研究并作出了重大贡献：
- en: '[PRE4]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For detailed implementation, architectural innovations, and experimental results,
    please refer to the YOLOv10 [research paper](https://arxiv.org/pdf/2405.14458)
    and [GitHub repository](https://github.com/THU-MIG/yolov10) by the Tsinghua University
    team.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 有关详细的实施、架构创新和实验结果，请参阅清华大学团队的YOLOv10 [研究论文](https://arxiv.org/pdf/2405.14458)和[GitHub存储库](https://github.com/THU-MIG/yolov10)。
- en: FAQ
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题
- en: What is YOLOv10 and how does it differ from previous YOLO versions?
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv10是什么，它与以前的YOLO版本有何不同？
- en: YOLOv10, developed by researchers at [Tsinghua University](https://www.tsinghua.edu.cn/en/),
    introduces several key innovations to real-time object detection. It eliminates
    the need for non-maximum suppression (NMS) by employing consistent dual assignments
    during training and optimized model components for superior performance with reduced
    computational overhead. For more details on its architecture and key features,
    check out the YOLOv10 overview section.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10 是由[清华大学](https://www.tsinghua.edu.cn/en/)研究人员开发的，为实时目标检测引入了几项关键创新。它通过在训练过程中采用一致的双重分配和优化模型组件，消除了非极大值抑制（NMS）的需求，从而在性能上表现优异且降低了计算开销。有关其架构和关键特性的更多详细信息，请查看YOLOv10概述部分。
- en: How can I get started with running inference using YOLOv10?
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何开始使用YOLOv10进行推理？
- en: 'For easy inference, you can use the Ultralytics YOLO Python library or the
    command line interface (CLI). Below are examples of predicting new images using
    YOLOv10:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于推理，您可以使用Ultralytics的YOLO Python库或命令行界面（CLI）。以下是使用YOLOv10预测新图像的示例：
- en: Example
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE5]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: For more usage examples, visit our Usage Examples section.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多使用示例，请访问我们的使用示例部分。
- en: Which model variants does YOLOv10 offer and what are their use cases?
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv10 提供了哪些模型变体，它们各自的用途是什么？
- en: 'YOLOv10 offers several model variants to cater to different use cases:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10提供了多个模型变体以满足不同的用途：
- en: '**YOLOv10-N**: Suitable for extremely resource-constrained environments'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-N**: 适用于资源极为有限的环境'
- en: '**YOLOv10-S**: Balances speed and accuracy'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-S**: 平衡速度和精度'
- en: '**YOLOv10-M**: General-purpose use'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-M**: 通用用途'
- en: '**YOLOv10-B**: Higher accuracy with increased width'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-B**: 增加宽度以提高精度'
- en: '**YOLOv10-L**: High accuracy at the cost of computational resources'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-L**: 在计算资源消耗的代价下提供高精度'
- en: '**YOLOv10-X**: Maximum accuracy and performance'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**YOLOv10-X**: 最高的精度和性能'
- en: Each variant is designed for different computational needs and accuracy requirements,
    making them versatile for a variety of applications. Explore the Model Variants
    section for more information.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 每个变体都针对不同的计算需求和准确性要求进行设计，使其在各种应用中都具有多功能性。有关更多信息，请查看模型变体部分。
- en: How does the NMS-free approach in YOLOv10 improve performance?
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv10中的无NMS方法如何提高性能？
- en: YOLOv10 eliminates the need for non-maximum suppression (NMS) during inference
    by employing consistent dual assignments for training. This approach reduces inference
    latency and enhances prediction efficiency. The architecture also includes a one-to-one
    head for inference, ensuring that each object gets a single best prediction. For
    a detailed explanation, see the Consistent Dual Assignments for NMS-Free Training
    section.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10通过采用一致的双重分配进行训练，消除了推理过程中对非最大抑制（NMS）的需求。这种方法减少了推理延迟并提高了预测效率。该架构还包括一个一对一的推理头，确保每个对象获得一个最佳预测。有关详细说明，请参见无NMS训练的一致双重分配部分。
- en: Where can I find the export options for YOLOv10 models?
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我在哪里可以找到YOLOv10模型的导出选项？
- en: YOLOv10 supports several export formats, including TorchScript, ONNX, OpenVINO,
    and TensorRT. However, not all export formats provided by Ultralytics are currently
    supported for YOLOv10 due to its new operations. For details on the supported
    formats and instructions on exporting, visit the Exporting YOLOv10 section.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10支持多种导出格式，包括TorchScript、ONNX、OpenVINO和TensorRT。然而，由于其新操作，并非所有Ultralytics提供的导出格式目前都支持YOLOv10。有关支持的格式和导出说明的详细信息，请访问导出YOLOv10部分。
- en: What are the performance benchmarks for YOLOv10 models?
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YOLOv10模型的性能基准是什么？
- en: YOLOv10 outperforms previous YOLO versions and other state-of-the-art models
    in both accuracy and efficiency. For example, YOLOv10-S is 1.8x faster than RT-DETR-R18
    with a similar AP on the COCO dataset. YOLOv10-B shows 46% less latency and 25%
    fewer parameters than YOLOv9-C with the same performance. Detailed benchmarks
    can be found in the Comparisons section.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv10在准确性和效率上都优于之前的YOLO版本和其他最先进的模型。例如，YOLOv10-S的速度比RT-DETR-R18快1.8倍，而在COCO数据集上的AP相似。YOLOv10-B的延迟减少了46%，参数比YOLOv9-C少25%，而性能相同。详细的基准测试可以在比较部分找到。
