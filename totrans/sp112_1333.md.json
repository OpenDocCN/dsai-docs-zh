["```py\nscipy.stats.kstest(rvs, cdf, args=(), N=20, alternative='two-sided', method='auto', *, axis=0, nan_policy='propagate', keepdims=False)\n```", "```py\n>>> import numpy as np\n>>> from scipy import stats\n>>> rng = np.random.default_rng()\n>>> stats.kstest(stats.uniform.rvs(size=100, random_state=rng),\n...              stats.norm.cdf)\nKstestResult(statistic=0.5001899973268688, pvalue=1.1616392184763533e-23) \n```", "```py\n>>> x = stats.norm.rvs(size=100, random_state=rng)\n>>> stats.kstest(x, stats.norm.cdf)\nKstestResult(statistic=0.05345882212970396, pvalue=0.9227159037744717) \n```", "```py\n>>> x = stats.norm.rvs(size=100, loc=0.5, random_state=rng)\n>>> stats.kstest(x, stats.norm.cdf, alternative='less')\nKstestResult(statistic=0.17482387821055168, pvalue=0.001913921057766743) \n```", "```py\n>>> stats.kstest(x, \"norm\", alternative='less')\nKstestResult(statistic=0.17482387821055168, pvalue=0.001913921057766743) \n```", "```py\n>>> sample1 = stats.laplace.rvs(size=105, random_state=rng)\n>>> sample2 = stats.laplace.rvs(size=95, random_state=rng)\n>>> stats.kstest(sample1, sample2)\nKstestResult(statistic=0.11779448621553884, pvalue=0.4494256912629795) \n```"]