["```py\nscipy.stats.levy_stable = <scipy.stats._levy_stable.levy_stable_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import levy_stable\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> alpha, beta = 1.8, -0.5\n>>> mean, var, skew, kurt = levy_stable.stats(alpha, beta, moments='mvsk') \n```", "```py\n>>> x = np.linspace(levy_stable.ppf(0.01, alpha, beta),\n...                 levy_stable.ppf(0.99, alpha, beta), 100)\n>>> ax.plot(x, levy_stable.pdf(x, alpha, beta),\n...        'r-', lw=5, alpha=0.6, label='levy_stable pdf') \n```", "```py\n>>> rv = levy_stable(alpha, beta)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = levy_stable.ppf([0.001, 0.5, 0.999], alpha, beta)\n>>> np.allclose([0.001, 0.5, 0.999], levy_stable.cdf(vals, alpha, beta))\nTrue \n```", "```py\n>>> r = levy_stable.rvs(alpha, beta, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]