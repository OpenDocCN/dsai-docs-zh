- en: pandas.DataFrame.shift
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shift.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shift.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Shift index by desired number of periods with an optional time freq.
  prefs: []
  type: TYPE_NORMAL
- en: When freq is not passed, shift the index without realigning the data. If freq
    is passed (in this case, the index must be date or datetime, or it will raise
    a NotImplementedError), the index will be increased using the periods and the
    freq. freq can be inferred when specified as “infer” as long as either freq or
    inferred_freq attribute is set in the index.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**periods**int or Sequence'
  prefs: []
  type: TYPE_NORMAL
- en: Number of periods to shift. Can be positive or negative. If an iterable of ints,
    the data will be shifted once by each int. This is equivalent to shifting by one
    value at a time and concatenating all resulting frames. The resulting columns
    will have the shift suffixed to their column names. For multiple periods, axis
    must not be 1.
  prefs: []
  type: TYPE_NORMAL
- en: '**freq**DateOffset, tseries.offsets, timedelta, or str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Offset to use from the tseries module or time rule (e.g. ‘EOM’). If freq is
    specified then the index values are shifted but the data is not realigned. That
    is, use freq if you would like to extend the index when shifting and preserve
    the original data. If freq is specified as “infer” then it will be inferred from
    the freq or inferred_freq attributes of the index. If neither of those attributes
    exist, a ValueError is thrown.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’, None}, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Shift direction. For Series this parameter is unused and defaults to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**object, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The scalar value to use for newly introduced missing values. the default depends
    on the dtype of self. For numeric data, `np.nan` is used. For datetime, timedelta,
    or period data, etc. [`NaT`](pandas.NaT.html#pandas.NaT "pandas.NaT") is used.
    For extension dtypes, `self.dtype.na_value` is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**suffix**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If str and periods is an iterable, this is added after the column name and before
    the shift value for each shifted column name.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Copy of input object, shifted.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Index.shift`](pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")'
  prefs: []
  type: TYPE_NORMAL
- en: Shift values of Index.
  prefs: []
  type: TYPE_NORMAL
- en: '`DatetimeIndex.shift`'
  prefs: []
  type: TYPE_NORMAL
- en: Shift values of DatetimeIndex.
  prefs: []
  type: TYPE_NORMAL
- en: '`PeriodIndex.shift`'
  prefs: []
  type: TYPE_NORMAL
- en: Shift values of PeriodIndex.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
