- en: Windowing operations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 窗口操作
- en: 原文：[https://pandas.pydata.org/docs/user_guide/window.html](https://pandas.pydata.org/docs/user_guide/window.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/user_guide/window.html](https://pandas.pydata.org/docs/user_guide/window.html)
- en: pandas contains a compact set of APIs for performing windowing operations -
    an operation that performs an aggregation over a sliding partition of values.
    The API functions similarly to the `groupby` API in that [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") call the windowing method with necessary parameters and then
    subsequently call the aggregation function.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: pandas包含一组紧凑的API，用于执行窗口操作 - 一种在值的滑动分区上执行聚合的操作。该API的功能类似于`groupby` API，[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")调用具有必要参数的窗口方法，然后随后调用聚合函数。
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The windows are comprised by looking back the length of the window from the
    current observation. The result above can be derived by taking the sum of the
    following windowed partitions of data:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口由从当前观察值向后查看窗口长度组成。上述结果可以通过对数据的以下窗口分区求和来得出：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '## Overview'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '## 概述'
- en: 'pandas supports 4 types of windowing operations:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: pandas支持4种类型的窗口操作：
- en: 'Rolling window: Generic fixed or variable sliding window over the values.'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动窗口：对值进行通用固定或可变滑动窗口。
- en: 'Weighted window: Weighted, non-rectangular window supplied by the `scipy.signal`
    library.'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加权窗口：由`scipy.signal`库提供的加权非矩形窗口。
- en: 'Expanding window: Accumulating window over the values.'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展窗口：对值进行累积窗口。
- en: 'Exponentially Weighted window: Accumulating and exponentially weighted window
    over the values.'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指数加权窗口：对值进行累积和指数加权窗口。
- en: '| Concept | Method | Returned Object | Supports time-based windows | Supports
    chained groupby | Supports table method | Supports online operations |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 概念 | 方法 | 返回对象 | 支持基于时间的窗口 | 支持链式分组 | 支持表方法 | 支持在线操作 |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| Rolling window | `rolling` | `pandas.typing.api.Rolling` | Yes | Yes | Yes
    (as of version 1.3) | No |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 滚动窗口 | `rolling` | `pandas.typing.api.Rolling` | 是 | 是 | 是（自1.3版本起） | 否 |'
- en: '| Weighted window | `rolling` | `pandas.typing.api.Window` | No | No | No |
    No |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 加权窗口 | `rolling` | `pandas.typing.api.Window` | 否 | 否 | 否 | 否 |'
- en: '| Expanding window | `expanding` | `pandas.typing.api.Expanding` | No | Yes
    | Yes (as of version 1.3) | No |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 扩展窗口 | `expanding` | `pandas.typing.api.Expanding` | 否 | 是 | 是（自1.3版本起） |
    否 |'
- en: '| Exponentially Weighted window | `ewm` | `pandas.typing.api.ExponentialMovingWindow`
    | No | Yes (as of version 1.2) | No | Yes (as of version 1.3) |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 指数加权窗口 | `ewm` | `pandas.typing.api.ExponentialMovingWindow` | 否 | 是（自1.2版本起）
    | 否 | 是（自1.3版本起） |'
- en: 'As noted above, some operations support specifying a window based on a time
    offset:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，一些操作支持根据时间偏移量指定窗口：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Additionally, some methods support chaining a `groupby` operation with a windowing
    operation which will first group the data by the specified keys and then perform
    a windowing operation per group.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一些方法支持将`groupby`操作与窗口操作链接在一起，该操作将首先按指定键对数据进行分组，然后对每个组执行窗口操作。
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Windowing operations currently only support numeric data (integer and float)
    and will always return `float64` values.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口操作目前仅支持数值数据（整数和浮点数），并且始终返回`float64`值。
- en: Warning
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Some windowing aggregation, `mean`, `sum`, `var` and `std` methods may suffer
    from numerical imprecision due to the underlying windowing algorithms accumulating
    sums. When values differ with magnitude \(1/np.finfo(np.double).eps\) this results
    in truncation. It must be noted, that large values may have an impact on windows,
    which do not include these values. [Kahan summation](https://en.wikipedia.org/wiki/Kahan_summation_algorithm)
    is used to compute the rolling sums to preserve accuracy as much as possible.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一些窗口聚合方法，`mean`，`sum`，`var`和`std`方法可能由于底层窗口算法累积和而受到数值不精确性的影响。当值的数量级不同时（1/np.finfo(np.double).eps），会导致截断。必须注意，大值可能会对不包括这些值的窗口产生影响。使用[Kahan求和算法](https://en.wikipedia.org/wiki/Kahan_summation_algorithm)来计算滚动求和以尽可能保持准确性。
- en: New in version 1.3.0.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 自1.3.0版本起新增。
- en: Some windowing operations also support the `method='table'` option in the constructor
    which performs the windowing operation over an entire [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead of a single column or row at a time. This can provide
    a useful performance benefit for a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with many columns or rows (with the corresponding `axis` argument)
    or the ability to utilize other columns during the windowing operation. The `method='table'`
    option can only be used if `engine='numba'` is specified in the corresponding
    method call.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一些窗口操作还支持构造函数中的`method='table'`选项，该选项可以在整个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")上执行窗口操作，而不是一次处理单个列或行。对于具有许多列或行（使用相应的`axis`参数）的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，这可以提供有用的性能优势，或者在窗口操作期间利用其他列。只有在相应的方法调用中指定了`engine='numba'`时，才能使用`method='table'`选项。
- en: For example, a [weighted mean](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean)
    calculation can be calculated with `apply()` by specifying a separate column of
    weights.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可以通过在`apply()`中指定一个权重列来计算[加权平均值](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean)。
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: New in version 1.3.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3版本中新增。
- en: Some windowing operations also support an `online` method after constructing
    a windowing object which returns a new object that supports passing in new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects to continue the windowing calculation with the new values
    (i.e. online calculations).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一些窗口操作在构造窗口对象后还支持`online`方法，该方法返回一个新对象，支持传入新的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")对象，以使用新值继续窗口计算（即在线计算）。
- en: The methods on this new windowing objects must call the aggregation method first
    to “prime” the initial state of the online calculation. Then, new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects can be passed in the `update` argument to continue the
    windowing calculation.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 新窗口对象上的方法必须首先调用聚合方法以“启动”在线计算的初始状态。然后，可以通过`update`参数传递新的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")对象来继续窗口计算。
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: All windowing operations support a `min_periods` argument that dictates the
    minimum amount of non-`np.nan` values a window must have; otherwise, the resulting
    value is `np.nan`. `min_periods` defaults to 1 for time-based windows and `window`
    for fixed windows
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 所有窗口操作都支持一个`min_periods`参数，该参数规定窗口必须具有的非`np.nan`值的最小数量；否则，结果值为`np.nan`。对于基于时间的窗口，默认值为1，对于固定窗口，默认为`window`。
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Additionally, all windowing operations supports the `aggregate` method for returning
    a result of multiple aggregations applied to a window.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，所有窗口操作都支持`aggregate`方法，用于返回应用于窗口的多个聚合的结果。
- en: '[PRE8]  ## Rolling window'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8]  ## 滚动窗口'
- en: Generic rolling windows support specifying windows as a fixed number of observations
    or variable number of observations based on an offset. If a time based offset
    is provided, the corresponding time based index must be monotonic.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 通用滚动窗口支持将窗口指定为固定数量的观测值或基于偏移量的可变数量的观测值。如果提供了基于时间的偏移量，则相应的基于时间的索引必须是单调的。
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: For all supported aggregation functions, see [Rolling window functions](../reference/window.html#api-functions-rolling).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 查看所有支持的聚合函数，请参阅[滚动窗口函数](../reference/window.html#api-functions-rolling)。
- en: '### Centering windows'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '### 居中窗口'
- en: By default the labels are set to the right edge of the window, but a `center`
    keyword is available so the labels can be set at the center.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，标签设置为窗口的右边缘，但可以使用`center`关键字将标签设置��中心。
- en: '[PRE10]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This can also be applied to datetime-like indices.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以应用于类似于日期时间的索引。
- en: New in version 1.3.0.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3.0版本中新增。
- en: '[PRE11]  ### Rolling window endpoints'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE11]  ### 滚动窗口端点'
- en: 'The inclusion of the interval endpoints in rolling window calculations can
    be specified with the `closed` parameter:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`closed`参数指定在滚动窗口计算中包含间隔端点的方式：
- en: '| Value | Behavior |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 值 | 行为 |'
- en: '| --- | --- |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `''right''` | close right endpoint |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| `''right''` | 关闭右端点 |'
- en: '| `''left''` | close left endpoint |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `''left''` | 关闭左端点 |'
- en: '| `''both''` | close both endpoints |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `''both''` | 关闭两个端点 |'
- en: '| `''neither''` | open endpoints |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `''neither''` | 开放端点 |'
- en: For example, having the right endpoint open is useful in many problems that
    require that there is no contamination from present information back to past information.
    This allows the rolling window to compute statistics “up to that point in time”,
    but not including that point in time.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，将右端点保持开放在许多需要确保没有来自当前信息到过去信息的污染的问题中非常有用。这允许滚动窗口计算统计数据“直到那个时间点”，但不包括那个时间点。
- en: '[PRE12]  ### Custom window rolling'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE12]  ### 自定义窗口滚动'
- en: In addition to accepting an integer or offset as a `window` argument, `rolling`
    also accepts a `BaseIndexer` subclass that allows a user to define a custom method
    for calculating window bounds. The `BaseIndexer` subclass will need to define
    a `get_window_bounds` method that returns a tuple of two arrays, the first being
    the starting indices of the windows and second being the ending indices of the
    windows. Additionally, `num_values`, `min_periods`, `center`, `closed` and `step`
    will automatically be passed to `get_window_bounds` and the defined method must
    always accept these arguments.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 除了接受整数或偏移作为`window`参数外，`rolling`还接受一个`BaseIndexer`子类，允许用户定义用于计算窗口边界的自定义方法。`BaseIndexer`子类将需要定义一个`get_window_bounds`方法，返回两个数组的元组，第一个是窗口的起始索引，第二个是窗口的结束索引。此外，`num_values`、`min_periods`、`center`、`closed`和`step`将自动传递给`get_window_bounds`，定义的方法必须始终接受这些参数。
- en: For example, if we have the following [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们有以下[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'and we want to use an expanding window where `use_expanding` is `True` otherwise
    a window of size 1, we can create the following `BaseIndexer` subclass:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要使用一个扩展窗口，其中`use_expanding`为`True`，否则为大小为1的窗口，我们可以创建以下`BaseIndexer`子类：
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You can view other examples of `BaseIndexer` subclasses [here](https://github.com/pandas-dev/pandas/blob/main/pandas/core/indexers/objects.py)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[这里](https://github.com/pandas-dev/pandas/blob/main/pandas/core/indexers/objects.py)查看其他`BaseIndexer`子类的示例。
- en: One subclass of note within those examples is the `VariableOffsetWindowIndexer`
    that allows rolling operations over a non-fixed offset like a `BusinessDay`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些示例中，一个值得注意的子类是`VariableOffsetWindowIndexer`，它允许在非固定偏移（如`BusinessDay`）上进行滚动操作。
- en: '[PRE15]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'For some problems knowledge of the future is available for analysis. For example,
    this occurs when each data point is a full time series read from an experiment,
    and the task is to extract underlying conditions. In these cases it can be useful
    to perform forward-looking rolling window computations. [`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") class is available for this purpose.
    This [`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass implements a closed fixed-width forward-looking
    rolling window, and we can use it as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些问题，未来的知识可用于分析。例如，当每个数据点都是从实验中读取的完整时间序列时，任务是提取潜在条件。在这些情况下，执行前瞻性滚动窗口计算可能很有用。为此，可以使用[`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer")类。这个[`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer")子类实现了一个闭合的固定宽度前瞻性滚动窗口，我们可以按照以下方式使用它：
- en: '[PRE16]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'We can also achieve this by using slicing, applying rolling aggregation, and
    then flipping the result as shown in example below:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过使用切片、应用滚动聚合，然后翻转结果来实现这一点，如下面的示例所示：
- en: '[PRE17]  ### Rolling apply'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE17]  ### 滚动应用'
- en: The `apply()` function takes an extra `func` argument and performs generic rolling
    computations. The `func` argument should be a single function that produces a
    single value from an ndarray input. `raw` specifies whether the windows are cast
    as [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects (`raw=False`) or ndarray objects (`raw=True`).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply()`函数接受额外的`func`参数并执行通用的滚动计算。`func`参数应该是一个从ndarray输入产生单个值的函数。`raw`指定窗口是作为[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")对象（`raw=False`）还是ndarray对象（`raw=True`）。'
- en: '[PRE18]  ### Numba engine'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE18]  ### Numba 引擎'
- en: Additionally, `apply()` can leverage [Numba](https://numba.pydata.org/) if installed
    as an optional dependency. The apply aggregation can be executed using Numba by
    specifying `engine='numba'` and `engine_kwargs` arguments (`raw` must also be
    set to `True`). See [enhancing performance with Numba](enhancingperf.html#enhancingperf-numba)
    for general usage of the arguments and performance considerations.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果安装了 [Numba](https://numba.pydata.org/) 作为可选依赖项，`apply()` 可以利用 Numba。通过指定
    `engine='numba'` 和 `engine_kwargs` 参数（`raw` 也必须设置为 `True`），可以使用 Numba 执行应用聚合。有关参数的一般用法和性能考虑，请参见[使用
    Numba 提升性能](enhancingperf.html#enhancingperf-numba)。
- en: 'Numba will be applied in potentially two routines:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Numba 将应用于可能的两个例程：
- en: If `func` is a standard Python function, the engine will [JIT](https://numba.pydata.org/numba-doc/latest/user/overview.html)
    the passed function. `func` can also be a JITed function in which case the engine
    will not JIT the function again.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 `func` 是一个标准的 Python 函数，引擎将[JIT](https://numba.pydata.org/numba-doc/latest/user/overview.html)传递的函数。`func`
    也可以是一个已经 JIT 的函数，在这种情况下，引擎将不会再次 JIT 函数。
- en: The engine will JIT the for loop where the apply function is applied to each
    window.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引擎将对应用函数应用于每个窗口的 for 循环进行 JIT。
- en: The `engine_kwargs` argument is a dictionary of keyword arguments that will
    be passed into the [numba.jit decorator](https://numba.pydata.org/numba-doc/latest/reference/jit-compilation.html#numba.jit).
    These keyword arguments will be applied to *both* the passed function (if a standard
    Python function) and the apply for loop over each window.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`engine_kwargs` 参数是一个关键字参数字典，将传递给[numba.jit装饰器](https://numba.pydata.org/numba-doc/latest/reference/jit-compilation.html#numba.jit)。这些关键字参数将应用于*传递的函数*（如果是标准的
    Python 函数）和对每个窗口进行的应用循环。'
- en: New in version 1.3.0.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 1.3.0 中的新功能。
- en: '`mean`, `median`, `max`, `min`, and `sum` also support the `engine` and `engine_kwargs`
    arguments.  ### Binary window functions'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`mean`、`median`、`max`、`min` 和 `sum` 也支持 `engine` 和 `engine_kwargs` 参数。### 二进制窗口函数'
- en: '`cov()` and `corr()` can compute moving window statistics about two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or any combination of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). Here is the behavior in each case:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`cov()` 和 `corr()` 可以计算关于两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或任何[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")组合的移动窗口统计。在每种情况下的行为如下：'
- en: 'two [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"):
    compute the statistic for the pairing.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")：计算配对的统计量。
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"): compute the statistics for each column of the DataFrame with
    the passed Series, thus returning a DataFrame.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")：计算 DataFrame 的每一列与传递的 Series 的统计量，从而返回一个 DataFrame。'
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"): by default compute the statistic for matching column names,
    returning a DataFrame. If the keyword argument `pairwise=True` is passed then
    computes the statistic for each pair of columns, returning a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") whose values are the dates in question (see [the next section](#window-corr-pairwise)).'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")：默认情况下计算匹配列名的统计量，返回一个 DataFrame。如果传递了关键字参数 `pairwise=True`，则为每对列计算统计量，返回一个具有值为相关日期的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")（请参见[下一节](#window-corr-pairwise)）。'
- en: 'For example:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE19]  ### Computing rolling pairwise covariances and correlations'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE19]### 计算滚动配对协方差和相关性'
- en: 'In financial data analysis and other fields it’s common to compute covariance
    and correlation matrices for a collection of time series. Often one is also interested
    in moving-window covariance and correlation matrices. This can be done by passing
    the `pairwise` keyword argument, which in the case of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") inputs will yield a MultiIndexed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") whose `index` are the dates in question. In the case of a
    single DataFrame argument the `pairwise` argument can even be omitted:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融数据分析和其他领域，常常需要计算一组时间序列的协方差和相关矩阵。通常也对移动窗口的协方差和相关矩阵感兴趣。可以通过传递`pairwise`关键字参数来实现这一点，在[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")输入的情况下，将产生一个多级索引的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，其`index`是相关日期。在单个DataFrame参数的情况下，甚至可以省略`pairwise`参数：
- en: Note
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Missing values are ignored and each entry is computed using the pairwise complete
    observations.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失值将被忽略，并且每个条目将使用成对完整观测值计算。
- en: Assuming the missing data are missing at random this results in an estimate
    for the covariance matrix which is unbiased. However, for many applications this
    estimate may not be acceptable because the estimated covariance matrix is not
    guaranteed to be positive semi-definite. This could lead to estimated correlations
    having absolute values which are greater than one, and/or a non-invertible covariance
    matrix. See [Estimation of covariance matrices](https://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices)
    for more details.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 假设缺失数据是随机缺失的，这将导致对协方差矩阵的估计是无偏的。然而，对于许多应用程序，这种估计可能不可接受，因为估计的协方差矩阵不能保证是半正定的。这可能导致估计的相关性具有绝对值大于一，和/或不可逆的协方差矩阵。有关更多详细信息，请参阅[协方差矩阵的估计](https://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices)。
- en: '[PRE20]  ## Weighted window'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE20]## 加权窗口'
- en: The `win_type` argument in `.rolling` generates a weighted windows that are
    commonly used in filtering and spectral estimation. `win_type` must be string
    that corresponds to a [scipy.signal window function](https://docs.scipy.org/doc/scipy/reference/signal.windows.html#module-scipy.signal.windows).
    Scipy must be installed in order to use these windows, and supplementary arguments
    that the Scipy window methods take must be specified in the aggregation function.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`.rolling`中的`win_type`参数生成了常用于滤波和频谱估计的加权窗口。`win_type`必须是一个对应于[scipy.signal窗口函数](https://docs.scipy.org/doc/scipy/reference/signal.windows.html#module-scipy.signal.windows)的字符串。必须安装Scipy才能使用这些窗口，并且必须在聚合函数中指定Scipy窗口方法所需的补充参数。'
- en: '[PRE21]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'For all supported aggregation functions, see [Weighted window functions](../reference/window.html#api-functions-window).  ##
    Expanding window'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有支持的聚合函数，请参阅[加权窗口函数](../reference/window.html#api-functions-window)。## 扩展窗口
- en: 'An expanding window yields the value of an aggregation statistic with all the
    data available up to that point in time. Since these calculations are a special
    case of rolling statistics, they are implemented in pandas such that the following
    two calls are equivalent:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展窗口产生一个聚合统计量的值，其中包含截至该时间点的所有可用数据。由于这些计算是滚动统计的特例，因此在pandas中实现了以下两个调用是等效的：
- en: '[PRE22]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'For all supported aggregation functions, see [Expanding window functions](../reference/window.html#api-functions-expanding).  ##
    Exponentially weighted window'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有支持的聚合函数，请参阅[扩展窗口函数](../reference/window.html#api-functions-expanding)。##
    指数加权窗口
- en: An exponentially weighted window is similar to an expanding window but with
    each prior point being exponentially weighted down relative to the current point.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 指数加权窗口类似于扩展窗口，但是每个先前点相对于当前点按指数方式加权。
- en: In general, a weighted moving average is calculated as
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，加权移动平均值计算如下
- en: \[y_t = \frac{\sum_{i=0}^t w_i x_{t-i}}{\sum_{i=0}^t w_i},\]
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \frac{\sum_{i=0}^t w_i x_{t-i}}{\sum_{i=0}^t w_i},\]
- en: where \(x_t\) is the input, \(y_t\) is the result and the \(w_i\) are the weights.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(x_t\)是输入，\(y_t\)是结果，\(w_i\)是权重。
- en: For all supported aggregation functions, see [Exponentially-weighted window
    functions](../reference/window.html#api-functions-ewm).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有支持的聚合函数，请参阅[指数加权窗口函数](../reference/window.html#api-functions-ewm)。
- en: The EW functions support two variants of exponential weights. The default, `adjust=True`,
    uses the weights \(w_i = (1 - \alpha)^i\) which gives
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: EW函数支持指数权重的两个变体。默认情况下，`adjust=True`使用权重\(w_i = (1 - \alpha)^i\)，得到
- en: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ... + (1
    - \alpha)^t x_{0}}{1 + (1 - \alpha) + (1 - \alpha)^2 + ... + (1 - \alpha)^t}\]
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ... + (1
    - \alpha)^t x_{0}}{1 + (1 - \alpha) + (1 - \alpha)^2 + ... + (1 - \alpha)^t}\]
- en: When `adjust=False` is specified, moving averages are calculated as
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定`adjust=False`时，移动平均值计算如下
- en: \[\begin{split}y_0 &= x_0 \\ y_t &= (1 - \alpha) y_{t-1} + \alpha x_t,\end{split}\]
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}y_0 &= x_0 \\ y_t &= (1 - \alpha) y_{t-1} + \alpha x_t,\end{split}\]
- en: which is equivalent to using weights
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这等价于使用权重
- en: \[\begin{split}w_i = \begin{cases} \alpha (1 - \alpha)^i & \text{if } i < t
    \\ (1 - \alpha)^i & \text{if } i = t. \end{cases}\end{split}\]
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}w_i = \begin{cases} \alpha (1 - \alpha)^i & \text{if } i < t
    \\ (1 - \alpha)^i & \text{if } i = t. \end{cases}\end{split}\]
- en: Note
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: These equations are sometimes written in terms of \(\alpha' = 1 - \alpha\),
    e.g.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 有时这些方程以\(\alpha' = 1 - \alpha\)的形式书写，例如
- en: \[y_t = \alpha' y_{t-1} + (1 - \alpha') x_t.\]
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \alpha' y_{t-1} + (1 - \alpha') x_t.\]
- en: 'The difference between the above two variants arises because we are dealing
    with series which have finite history. Consider a series of infinite history,
    with `adjust=True`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 上述两个变体之间的差异是因为我们处理的是具有有限历史记录的系列。考虑一个具有无限历史记录的系列，其中`adjust=True`：
- en: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ...} {1 +
    (1 - \alpha) + (1 - \alpha)^2 + ...}\]
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ...} {1 +
    (1 - \alpha) + (1 - \alpha)^2 + ...}\]
- en: Noting that the denominator is a geometric series with initial term equal to
    1 and a ratio of \(1 - \alpha\) we have
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 注意分母是一个初始项为1且比率为\(1 - \alpha\)的几何级数，我们有
- en: \[\begin{split}y_t &= \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2}
    + ...} {\frac{1}{1 - (1 - \alpha)}}\\ &= [x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2
    x_{t-2} + ...] \alpha \\ &= \alpha x_t + [(1-\alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2}
    + ...]\alpha \\ &= \alpha x_t + (1 - \alpha)[x_{t-1} + (1 - \alpha) x_{t-2} +
    ...]\alpha\\ &= \alpha x_t + (1 - \alpha) y_{t-1}\end{split}\]
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}y_t &= \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2}
    + ...} {\frac{1}{1 - (1 - \alpha)}}\\ &= [x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2
    x_{t-2} + ...] \alpha \\ &= \alpha x_t + [(1-\alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2}
    + ...]\alpha \\ &= \alpha x_t + (1 - \alpha)[x_{t-1} + (1 - \alpha) x_{t-2} +
    ...]\alpha\\ &= \alpha x_t + (1 - \alpha) y_{t-1}\end{split}\]
- en: which is the same expression as `adjust=False` above and therefore shows the
    equivalence of the two variants for infinite series. When `adjust=False`, we have
    \(y_0 = x_0\) and \(y_t = \alpha x_t + (1 - \alpha) y_{t-1}\). Therefore, there
    is an assumption that \(x_0\) is not an ordinary value but rather an exponentially
    weighted moment of the infinite series up to that point.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这与上面的`adjust=False`表达式相同，因此显示了无穷级数的两个变体的等价性。当`adjust=False`时，我们有\(y_0 = x_0\)和\(y_t
    = \alpha x_t + (1 - \alpha) y_{t-1}\)。因此，有一个假设，即\(x_0\)不是普通值，而是到目前为止无穷级数的指数加权矩。
- en: 'One must have \(0 < \alpha \leq 1\), and while it is possible to pass \(\alpha\)
    directly, it’s often easier to think about either the **span**, **center of mass
    (com)** or **half-life** of an EW moment:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 必须满足\(0 < \alpha \leq 1\)，虽然可以直接传递\(\alpha\)，但通常更容易考虑EW矩的**跨度**、**质心（com）**或**半衰期**：
- en: \[\begin{split}\alpha = \begin{cases} \frac{2}{s + 1}, & \text{for span}\ s
    \geq 1\\ \frac{1}{1 + c}, & \text{for center of mass}\ c \geq 0\\ 1 - \exp^{\frac{\log
    0.5}{h}}, & \text{for half-life}\ h > 0 \end{cases}\end{split}\]
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\alpha = \begin{cases} \frac{2}{s + 1}, & \text{对于跨度}\ s \geq
    1\\ \frac{1}{1 + c}, & \text{对于质心}\ c \geq 0\\ 1 - \exp^{\frac{\log 0.5}{h}},
    & \text{对于半衰期}\ h > 0 \end{cases}\end{split}\]
- en: 'One must specify precisely one of **span**, **center of mass**, **half-life**
    and **alpha** to the EW functions:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 必须精确指定**跨度**、**质心**、**半衰期**和**alpha**中的一个来使用EW函数：
- en: '**Span** corresponds to what is commonly called an “N-day EW moving average”.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨度**对应于通常称为“N天EW移动平均”的概念。'
- en: '**Center of mass** has a more physical interpretation and can be thought of
    in terms of span: \(c = (s - 1) / 2\).'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质心**具有更具物理意义的解释，可以按照跨度来考虑：\(c = (s - 1) / 2\)。'
- en: '**Half-life** is the period of time for the exponential weight to reduce to
    one half.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**半衰期**是指数权重减少到一半所需的时间段。'
- en: '**Alpha** specifies the smoothing factor directly.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Alpha**直接指定平滑因子。'
- en: You can also specify `halflife` in terms of a timedelta convertible unit to
    specify the amount of time it takes for an observation to decay to half its value
    when also specifying a sequence of `times`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以指定`halflife`，以时间间隔可转换的单位来指定观察值衰减到一半所需的时间，同时指定一系列`times`。
- en: '[PRE23]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The following formula is used to compute exponentially weighted mean with an
    input vector of times:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 以下公式用于计算具有时间输入向量的指数加权均值：
- en: \[y_t = \frac{\sum_{i=0}^t 0.5^\frac{t_{t} - t_{i}}{\lambda} x_{t-i}}{\sum_{i=0}^t
    0.5^\frac{t_{t} - t_{i}}{\lambda}},\]
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \frac{\sum_{i=0}^t 0.5^\frac{t_{t} - t_{i}}{\lambda} x_{t-i}}{\sum_{i=0}^t
    0.5^\frac{t_{t} - t_{i}}{\lambda}},\]
- en: ExponentialMovingWindow also has an `ignore_na` argument, which determines how
    intermediate null values affect the calculation of the weights. When `ignore_na=False`
    (the default), weights are calculated based on absolute positions, so that intermediate
    null values affect the result. When `ignore_na=True`, weights are calculated by
    ignoring intermediate null values. For example, assuming `adjust=True`, if `ignore_na=False`,
    the weighted average of `3, NaN, 5` would be calculated as
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 指数加权窗口也有一个`ignore_na`参数，用于确定中间空值如何影响权重的计算。当`ignore_na=False`（默认）时，权重是基于绝对位置计算的，因此中间的空值会影响结果。当`ignore_na=True`时，通过忽略中间的空值来计算权重。例如，假设`adjust=True`，如果`ignore_na=False`，则`3,
    NaN, 5`的加权平均值将被计算为
- en: \[\frac{(1-\alpha)^2 \cdot 3 + 1 \cdot 5}{(1-\alpha)^2 + 1}.\]
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{(1-\alpha)^2 \cdot 3 + 1 \cdot 5}{(1-\alpha)^2 + 1}.\]
- en: Whereas if `ignore_na=True`, the weighted average would be calculated as
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当`ignore_na=True`时，加权平均值将被计算为
- en: \[\frac{(1-\alpha) \cdot 3 + 1 \cdot 5}{(1-\alpha) + 1}.\]
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{(1-\alpha) \cdot 3 + 1 \cdot 5}{(1-\alpha) + 1}.\]
- en: The `var()`, `std()`, and `cov()` functions have a `bias` argument, specifying
    whether the result should contain biased or unbiased statistics. For example,
    if `bias=True`, `ewmvar(x)` is calculated as `ewmvar(x) = ewma(x**2) - ewma(x)**2`;
    whereas if `bias=False` (the default), the biased variance statistics are scaled
    by debiasing factors
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`var()`、`std()`和`cov()`函数有一个`bias`参数，指定结果是否应包含有偏或无偏的统计数据。例如，如果`bias=True`，则`ewmvar(x)`被计算为`ewmvar(x)
    = ewma(x**2) - ewma(x)**2`；而如果`bias=False`（默认），有偏方差统计数据将通过去偏因子进行缩放'
- en: \[\frac{\left(\sum_{i=0}^t w_i\right)^2}{\left(\sum_{i=0}^t w_i\right)^2 - \sum_{i=0}^t
    w_i^2}.\]
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{\left(\sum_{i=0}^t w_i\right)^2}{\left(\sum_{i=0}^t w_i\right)^2 - \sum_{i=0}^t
    w_i^2}.\]
- en: '(For \(w_i = 1\), this reduces to the usual \(N / (N - 1)\) factor, with \(N
    = t + 1\).) See [Weighted Sample Variance](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean#Weighted_sample_variance)
    on Wikipedia for further details.  ## Overview'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '（对于\(w_i = 1\)，这将减少到通常的\(N / (N - 1)\)因子，其中\(N = t + 1\)。）有关更多详细信息，请参阅维基百科上的[加权样本方差](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean#Weighted_sample_variance)。  ##
    概述'
- en: 'pandas supports 4 types of windowing operations:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: pandas支持4种类型的窗口操作：
- en: 'Rolling window: Generic fixed or variable sliding window over the values.'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动窗口：对数值进行通用的固定或可变滑动窗口。
- en: 'Weighted window: Weighted, non-rectangular window supplied by the `scipy.signal`
    library.'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加权窗口：由`scipy.signal`库提供的加权、非矩形窗口。
- en: 'Expanding window: Accumulating window over the values.'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展窗口：对数值进行累积窗口。
- en: 'Exponentially Weighted window: Accumulating and exponentially weighted window
    over the values.'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指数加权窗口：对数值进行累积和指数加权的窗口。
- en: '| Concept | Method | Returned Object | Supports time-based windows | Supports
    chained groupby | Supports table method | Supports online operations |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| 概念 | 方法 | 返回对象 | 支持基于时间的窗口 | 支持链接的groupby | 支持表方法 | 支持在线操作 |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| Rolling window | `rolling` | `pandas.typing.api.Rolling` | Yes | Yes | Yes
    (as of version 1.3) | No |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 滚动窗口 | `rolling` | `pandas.typing.api.Rolling` | 是 | 是 | 是（自版本1.3起） | 否 |'
- en: '| Weighted window | `rolling` | `pandas.typing.api.Window` | No | No | No |
    No |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| 加权窗口 | `rolling` | `pandas.typing.api.Window` | 否 | 否 | 否 | 否 |'
- en: '| Expanding window | `expanding` | `pandas.typing.api.Expanding` | No | Yes
    | Yes (as of version 1.3) | No |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| 扩展窗口 | `expanding` | `pandas.typing.api.Expanding` | 否 | 是 | 是（自版本1.3起） |
    否 |'
- en: '| Exponentially Weighted window | `ewm` | `pandas.typing.api.ExponentialMovingWindow`
    | No | Yes (as of version 1.2) | No | Yes (as of version 1.3) |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| 指数加权窗口 | `ewm` | `pandas.typing.api.ExponentialMovingWindow` | 否 | 是（自版本1.2起）
    | 否 | 是（自版本1.3起） |'
- en: 'As noted above, some operations support specifying a window based on a time
    offset:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，一些操作支持基于时间偏移量指定窗口：
- en: '[PRE24]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Additionally, some methods support chaining a `groupby` operation with a windowing
    operation which will first group the data by the specified keys and then perform
    a windowing operation per group.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，一些方法支持将`groupby`操作与窗口操作链接在一起，首先按指定键对数据进行分组，然后对每个组执行窗口操作。
- en: '[PRE25]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Windowing operations currently only support numeric data (integer and float)
    and will always return `float64` values.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口操作目前仅支持数值数据（整数和浮点数）���并且始终返回`float64`值。
- en: Warning
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Some windowing aggregation, `mean`, `sum`, `var` and `std` methods may suffer
    from numerical imprecision due to the underlying windowing algorithms accumulating
    sums. When values differ with magnitude \(1/np.finfo(np.double).eps\) this results
    in truncation. It must be noted, that large values may have an impact on windows,
    which do not include these values. [Kahan summation](https://en.wikipedia.org/wiki/Kahan_summation_algorithm)
    is used to compute the rolling sums to preserve accuracy as much as possible.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一些窗口聚合，`mean`，`sum`，`var`和`std`方法可能由于底层窗口算法累积和而遭受数值不精确性。当值的数量级不同时\(1/np.finfo(np.double).eps\)，会导致截断。必须注意，大值可能会影响不包括这些值的窗口。使用[Kahan求和算法](https://en.wikipedia.org/wiki/Kahan_summation_algorithm)来计算滚动求和以尽可能保持准确性。
- en: New in version 1.3.0.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 版本1.3.0中的新功能。
- en: Some windowing operations also support the `method='table'` option in the constructor
    which performs the windowing operation over an entire [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead of a single column or row at a time. This can provide
    a useful performance benefit for a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with many columns or rows (with the corresponding `axis` argument)
    or the ability to utilize other columns during the windowing operation. The `method='table'`
    option can only be used if `engine='numba'` is specified in the corresponding
    method call.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 一些窗口操作在构造函数中还支持`method='table'`选项，该选项可以在整个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")上执行窗口操作，而不是一次处理单个列或行。对于具有许多列或行（使用相应的`axis`参数）的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，或者在窗口操作期间利用其他列的能力，这可以提供有用的性能优势。只有在相应的方法调用中指定了`engine='numba'`时，才能使用`method='table'`选项。
- en: For example, a [weighted mean](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean)
    calculation can be calculated with `apply()` by specifying a separate column of
    weights.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可以通过指定一个单独的权重列，在`apply()`中计算[加权平均值](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean)。
- en: '[PRE26]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: New in version 1.3.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 版本1.3中的新功能。
- en: Some windowing operations also support an `online` method after constructing
    a windowing object which returns a new object that supports passing in new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects to continue the windowing calculation with the new values
    (i.e. online calculations).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在构造窗口对象后，一些窗口操作还支持`online`方法，该方法返回一个新对象，支持传入新的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")对象，以继续使用新值进行窗口计算（即在线计算）。
- en: The methods on this new windowing objects must call the aggregation method first
    to “prime” the initial state of the online calculation. Then, new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") objects can be passed in the `update` argument to continue the
    windowing calculation.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这些新窗口对象上的方法必须首先调用聚合方法来“启动”在线计算的初始状态。然后，可以通过`update`参数传入新的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")对象，以继续进行窗口计算。
- en: '[PRE27]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: All windowing operations support a `min_periods` argument that dictates the
    minimum amount of non-`np.nan` values a window must have; otherwise, the resulting
    value is `np.nan`. `min_periods` defaults to 1 for time-based windows and `window`
    for fixed windows
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 所有窗口操作都支持`min_periods`参数，该参数规定窗口必须具有的非`np.nan`值的最小数量；否则，结果值为`np.nan`。对于基于时间的窗口，默认值为1，对于固定窗口，默认值为`window`。
- en: '[PRE29]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Additionally, all windowing operations supports the `aggregate` method for returning
    a result of multiple aggregations applied to a window.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，所有窗口操作都支持`aggregate`方法，用于返回应用于窗口的多个聚合的结果。
- en: '[PRE30]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '## Rolling window'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '## 滚动窗口'
- en: Generic rolling windows support specifying windows as a fixed number of observations
    or variable number of observations based on an offset. If a time based offset
    is provided, the corresponding time based index must be monotonic.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 通用滚动窗口支持将窗口指定为固定数量的观测值或基于偏移量的可变数量的观测值。如果提供了基于时间的偏移量，则相应的基于时间的索引必须是单调的。
- en: '[PRE31]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: For all supported aggregation functions, see [Rolling window functions](../reference/window.html#api-functions-rolling).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 有关所有支持的聚合函数，请参见[滚动窗口函数](../reference/window.html#api-functions-rolling)。
- en: '### Centering windows'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '### 居中窗口'
- en: By default the labels are set to the right edge of the window, but a `center`
    keyword is available so the labels can be set at the center.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，标签设置为窗口的右边缘，但可以使用`center`关键字将标签设置为中心。
- en: '[PRE32]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This can also be applied to datetime-like indices.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以应用于类似日期时间的索引。
- en: New in version 1.3.0.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3.0版本中的新功能。
- en: '[PRE33]  ### Rolling window endpoints'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE33]  ### 滚动窗口端点'
- en: 'The inclusion of the interval endpoints in rolling window calculations can
    be specified with the `closed` parameter:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`closed`参数指定在滚动窗口计算中包含间隔端点：
- en: '| Value | Behavior |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| 值 | 行为 |'
- en: '| --- | --- |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `''right''` | close right endpoint |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| `''right''` | 关闭右端点 |'
- en: '| `''left''` | close left endpoint |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| `''left''` | 关闭左端点 |'
- en: '| `''both''` | close both endpoints |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| `''both''` | 关闭两个端点 |'
- en: '| `''neither''` | open endpoints |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| `''neither''` | 开放端点 |'
- en: For example, having the right endpoint open is useful in many problems that
    require that there is no contamination from present information back to past information.
    This allows the rolling window to compute statistics “up to that point in time”,
    but not including that point in time.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，正确地开放右端点在许多需要确保当前信息不会影响过去信息的问题中非常有用。这允许滚动窗口计算统计数据“直到那个时间点”，但不包括那个时间点。
- en: '[PRE34]  ### Custom window rolling'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE34]  ### 自定义窗口滚动'
- en: In addition to accepting an integer or offset as a `window` argument, `rolling`
    also accepts a `BaseIndexer` subclass that allows a user to define a custom method
    for calculating window bounds. The `BaseIndexer` subclass will need to define
    a `get_window_bounds` method that returns a tuple of two arrays, the first being
    the starting indices of the windows and second being the ending indices of the
    windows. Additionally, `num_values`, `min_periods`, `center`, `closed` and `step`
    will automatically be passed to `get_window_bounds` and the defined method must
    always accept these arguments.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 除了接受整数或偏移作为`window`参数外，`rolling`还接受一个`BaseIndexer`子类，允许用户定义计算窗口边界的自定义方法。`BaseIndexer`子类需要定义一个`get_window_bounds`方法，返回两个数组的元组，第一个是窗口的起始索引，第二个是窗口的结束索引。此外，`num_values`、`min_periods`、`center`、`closed`和`step`将自动传递给`get_window_bounds`，定义的方法必须始终接受这些参数。
- en: For example, if we have the following [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们有以下[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
- en: '[PRE35]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'and we want to use an expanding window where `use_expanding` is `True` otherwise
    a window of size 1, we can create the following `BaseIndexer` subclass:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要使用一个扩展窗口，其中`use_expanding`为`True`，否则为大小为1的窗口，我们可以创建以下`BaseIndexer`子类：
- en: '[PRE36]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: You can view other examples of `BaseIndexer` subclasses [here](https://github.com/pandas-dev/pandas/blob/main/pandas/core/indexers/objects.py)
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[这里](https://github.com/pandas-dev/pandas/blob/main/pandas/core/indexers/objects.py)查看其他`BaseIndexer`子类的示例
- en: One subclass of note within those examples is the `VariableOffsetWindowIndexer`
    that allows rolling operations over a non-fixed offset like a `BusinessDay`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些示例中，一个值得注意的子类是`VariableOffsetWindowIndexer`，它允许在非固定偏移（如`BusinessDay`）上进行滚动操作。
- en: '[PRE37]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'For some problems knowledge of the future is available for analysis. For example,
    this occurs when each data point is a full time series read from an experiment,
    and the task is to extract underlying conditions. In these cases it can be useful
    to perform forward-looking rolling window computations. [`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") class is available for this purpose.
    This [`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass implements a closed fixed-width forward-looking
    rolling window, and we can use it as follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些问题，未来的知识是可用于分析的。例如，当每个数据点是从实验中读取的完整时间序列时，任务是提取潜在条件。在这些情况下，执行前瞻性滚动窗口计算可能是有用的。为此目的提供了[`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer")类。这个[`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer")子类实现了一个封闭的固定宽度前瞻性滚动窗口，我们可以按以下方式使用它：
- en: '[PRE38]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'We can also achieve this by using slicing, applying rolling aggregation, and
    then flipping the result as shown in example below:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过使用切片、应用滚动聚合，然后翻转结果来实现，如下面的示例所示：
- en: '[PRE39]  ### Rolling apply'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE39]  ### 滚动应用'
- en: The `apply()` function takes an extra `func` argument and performs generic rolling
    computations. The `func` argument should be a single function that produces a
    single value from an ndarray input. `raw` specifies whether the windows are cast
    as [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects (`raw=False`) or ndarray objects (`raw=True`).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply()` 函数接受额外的 `func` 参数并执行通用的滚动计算。`func` 参数应该是一个从 ndarray 输入产生单个值的函数。`raw`
    指定窗口是作为 [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    对象 (`raw=False`) 还是 ndarray 对象 (`raw=True`)。'
- en: '[PRE40]  ### Numba engine'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE40] ### Numba 引擎'
- en: Additionally, `apply()` can leverage [Numba](https://numba.pydata.org/) if installed
    as an optional dependency. The apply aggregation can be executed using Numba by
    specifying `engine='numba'` and `engine_kwargs` arguments (`raw` must also be
    set to `True`). See [enhancing performance with Numba](enhancingperf.html#enhancingperf-numba)
    for general usage of the arguments and performance considerations.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果安装了 Numba 作为可选依赖项，`apply()` 可以利用 [Numba](https://numba.pydata.org/)。通过指定
    `engine='numba'` 和 `engine_kwargs` 参数（`raw` 也必须设置为 `True`），可以使用 Numba 执行 apply
    聚合。参见[使用 Numba 提升性能](enhancingperf.html#enhancingperf-numba)以获取参数的一般用法和性能考虑。
- en: 'Numba will be applied in potentially two routines:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Numba 将应用于可能的两个例程：
- en: If `func` is a standard Python function, the engine will [JIT](https://numba.pydata.org/numba-doc/latest/user/overview.html)
    the passed function. `func` can also be a JITed function in which case the engine
    will not JIT the function again.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 `func` 是标准 Python 函数，则引擎将[JIT](https://numba.pydata.org/numba-doc/latest/user/overview.html)传入的函数。`func`
    也可以是一个已经 JIT 的函数，此时引擎将不会再次 JIT 函数。
- en: The engine will JIT the for loop where the apply function is applied to each
    window.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引擎将 JIT 应用于将 apply 函数应用于每个窗口的循环。
- en: The `engine_kwargs` argument is a dictionary of keyword arguments that will
    be passed into the [numba.jit decorator](https://numba.pydata.org/numba-doc/latest/reference/jit-compilation.html#numba.jit).
    These keyword arguments will be applied to *both* the passed function (if a standard
    Python function) and the apply for loop over each window.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`engine_kwargs` 参数是一个关键字参数字典，将传递给 [numba.jit 装饰器](https://numba.pydata.org/numba-doc/latest/reference/jit-compilation.html#numba.jit)。这些关键字参数将应用于*传入的函数*（如果是标准
    Python 函数）和应用于每个窗口的 apply 循环。'
- en: New in version 1.3.0.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.3.0 中新增功能。
- en: '`mean`, `median`, `max`, `min`, and `sum` also support the `engine` and `engine_kwargs`
    arguments.  ### Binary window functions'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`mean`、`median`、`max`、`min` 和 `sum` 也支持 `engine` 和 `engine_kwargs` 参数。### 二进制窗口函数'
- en: '`cov()` and `corr()` can compute moving window statistics about two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or any combination of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). Here is the behavior in each case:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`cov()` 和 `corr()` 可以计算关于两个 [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") 或任何 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") 或 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 的移动窗口统计信息。在每种情况下的行为如下：'
- en: 'two [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"):
    compute the statistic for the pairing.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个 [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")：计算配对的统计信息。
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"): compute the statistics for each column of the DataFrame with
    the passed Series, thus returning a DataFrame.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")：使用传入的 Series 计算 DataFrame 的每一列的统计信息，从而返回一个 DataFrame。'
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"): by default compute the statistic for matching column names,
    returning a DataFrame. If the keyword argument `pairwise=True` is passed then
    computes the statistic for each pair of columns, returning a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") whose values are the dates in question (see [the next section](#window-corr-pairwise)).'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")：默认情况下，计算匹配列名的统计量，返回一个DataFrame。如果传递了关键字参数`pairwise=True`，则为每对列计算统计量，返回一个具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，其值是相关日期（请参见[下一节](#window-corr-pairwise)）。'
- en: 'For example:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE41]  ### Computing rolling pairwise covariances and correlations'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE41]  ### 计算滚动成对协方差和相关性'
- en: 'In financial data analysis and other fields it’s common to compute covariance
    and correlation matrices for a collection of time series. Often one is also interested
    in moving-window covariance and correlation matrices. This can be done by passing
    the `pairwise` keyword argument, which in the case of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") inputs will yield a MultiIndexed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") whose `index` are the dates in question. In the case of a
    single DataFrame argument the `pairwise` argument can even be omitted:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融数据分析和其他领域，通常会为一组时间序列计算协方差和相关性矩阵。通常还对移动窗口协方差和相关性矩阵感兴趣。可以通过传递`pairwise`关键字参数来实现这一点，在[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")输入的情况下，将产生一个具有`index`为相关日期的多重索引的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。在单个DataFrame参数的情况下，甚至可以省略`pairwise`参数：
- en: Note
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Missing values are ignored and each entry is computed using the pairwise complete
    observations.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 缺失值将被忽略，并且每个条目都是使用成对完整观察值计算的。
- en: Assuming the missing data are missing at random this results in an estimate
    for the covariance matrix which is unbiased. However, for many applications this
    estimate may not be acceptable because the estimated covariance matrix is not
    guaranteed to be positive semi-definite. This could lead to estimated correlations
    having absolute values which are greater than one, and/or a non-invertible covariance
    matrix. See [Estimation of covariance matrices](https://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices)
    for more details.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 假设缺失数据是随机缺失的，这将导致协方差矩阵的估计是无偏的。然而，对于许多应用程序来说，这种估计可能不可接受，因为估计的协方差矩阵不能保证是正半定的。这可能导致估计的相关性具有绝对值大于一，和/或一个不可逆的协方差矩阵。更多细节请参见[协方差矩阵的估计](https://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices)。
- en: '[PRE42]  ### Centering windows'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE42]  ### 居中窗口'
- en: By default the labels are set to the right edge of the window, but a `center`
    keyword is available so the labels can be set at the center.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，标签被设置在窗口的右边缘，但是有一个`center`关键字可用，因此标签可以设置在中心位置。
- en: '[PRE43]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This can also be applied to datetime-like indices.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以应用于类似日期时间的索引。
- en: New in version 1.3.0.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 1.3.0 中的新功能。
- en: '[PRE44]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '### Rolling window endpoints'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '### 滚动窗口端点'
- en: 'The inclusion of the interval endpoints in rolling window calculations can
    be specified with the `closed` parameter:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在滚动窗口计算中包含区间端点可以通过`closed`参数指定：
- en: '| Value | Behavior |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| 值 | 行为 |'
- en: '| --- | --- |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `''right''` | close right endpoint |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| `''right''` | 关闭右端点 |'
- en: '| `''left''` | close left endpoint |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| `''left''` | 关闭左端点 |'
- en: '| `''both''` | close both endpoints |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| `''both''` | 关闭两个端点 |'
- en: '| `''neither''` | open endpoints |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| `''neither''` | 开放端点 |'
- en: For example, having the right endpoint open is useful in many problems that
    require that there is no contamination from present information back to past information.
    This allows the rolling window to compute statistics “up to that point in time”,
    but not including that point in time.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，将右端点保持开放在许多需要确保没有来自当前信息到过去信息的污染的问题中是有用的。这允许滚动窗口计算统计量“直到那个时间点”，但不包括那个时间点。
- en: '[PRE45]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '### Custom window rolling'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '### 自定义窗口滚动'
- en: In addition to accepting an integer or offset as a `window` argument, `rolling`
    also accepts a `BaseIndexer` subclass that allows a user to define a custom method
    for calculating window bounds. The `BaseIndexer` subclass will need to define
    a `get_window_bounds` method that returns a tuple of two arrays, the first being
    the starting indices of the windows and second being the ending indices of the
    windows. Additionally, `num_values`, `min_periods`, `center`, `closed` and `step`
    will automatically be passed to `get_window_bounds` and the defined method must
    always accept these arguments.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 除了接受整数或偏移作为`window`参数外，`rolling`还接受一个`BaseIndexer`子类，允许用户定义用于计算窗口边界的自定义方法。`BaseIndexer`子类将需要定义一个`get_window_bounds`方法，返回两个数组的元组，第一个是窗口的起始索引，第二个是窗口的结束索引。此外，`num_values`、`min_periods`、`center`、`closed`和`step`将自动传递给`get_window_bounds`，并且定义的方法必须始终接受这些参数。
- en: For example, if we have the following [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们有以下[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")
- en: '[PRE46]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'and we want to use an expanding window where `use_expanding` is `True` otherwise
    a window of size 1, we can create the following `BaseIndexer` subclass:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要使用一个扩展窗口，其中`use_expanding`为`True`，否则为大小为1的窗口，我们可以创建以下`BaseIndexer`子类：
- en: '[PRE47]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: You can view other examples of `BaseIndexer` subclasses [here](https://github.com/pandas-dev/pandas/blob/main/pandas/core/indexers/objects.py)
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以查看其他`BaseIndexer`子类的示例[这里](https://github.com/pandas-dev/pandas/blob/main/pandas/core/indexers/objects.py)
- en: One subclass of note within those examples is the `VariableOffsetWindowIndexer`
    that allows rolling operations over a non-fixed offset like a `BusinessDay`.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些示例中，一个值得注意的子类是`VariableOffsetWindowIndexer`，它允许在非固定偏移（如`BusinessDay`）上进行滚动操作。
- en: '[PRE48]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'For some problems knowledge of the future is available for analysis. For example,
    this occurs when each data point is a full time series read from an experiment,
    and the task is to extract underlying conditions. In these cases it can be useful
    to perform forward-looking rolling window computations. [`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") class is available for this purpose.
    This [`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") subclass implements a closed fixed-width forward-looking
    rolling window, and we can use it as follows:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些问题，未来的知识是可用于分析的。例如，当每个数据点都是从实验中读取的完整时间序列时，任务是提取潜在条件。在这些情况下，执行前瞻性滚动窗口计算可能很有用。为此，可以使用[`FixedForwardWindowIndexer`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer")类。这个[`BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer")子类实现了一个封闭的固定宽度前瞻性滚动窗口，我们可以按以下方式使用它：
- en: '[PRE49]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'We can also achieve this by using slicing, applying rolling aggregation, and
    then flipping the result as shown in example below:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用切片、应用滚动聚合，然后翻转结果，我们也可以实现这一点，如下例所示：
- en: '[PRE50]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '### Rolling apply'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '### 滚动应用'
- en: The `apply()` function takes an extra `func` argument and performs generic rolling
    computations. The `func` argument should be a single function that produces a
    single value from an ndarray input. `raw` specifies whether the windows are cast
    as [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    objects (`raw=False`) or ndarray objects (`raw=True`).
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`apply()`函数接受额外的`func`参数并执行通用的滚动计算。`func`参数应该是一个从ndarray输入中产生单个值的函数。`raw`指定窗口是作为[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")对象(`raw=False`)还是ndarray对象(`raw=True`)。'
- en: '[PRE51]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '### Numba engine'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '### Numba 引擎'
- en: Additionally, `apply()` can leverage [Numba](https://numba.pydata.org/) if installed
    as an optional dependency. The apply aggregation can be executed using Numba by
    specifying `engine='numba'` and `engine_kwargs` arguments (`raw` must also be
    set to `True`). See [enhancing performance with Numba](enhancingperf.html#enhancingperf-numba)
    for general usage of the arguments and performance considerations.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果已安装[Numba](https://numba.pydata.org/)，`apply()`还可以利用它作为可选依赖项。可以通过指定`engine='numba'`和`engine_kwargs`参数来使用Numba执行应用聚合（`raw`也必须设置为`True`）。有关参数的一般用法和性能考虑，请参见[使用Numba增强性能](enhancingperf.html#enhancingperf-numba)。
- en: 'Numba will be applied in potentially two routines:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: Numba 将应用于可能的两个例程：
- en: If `func` is a standard Python function, the engine will [JIT](https://numba.pydata.org/numba-doc/latest/user/overview.html)
    the passed function. `func` can also be a JITed function in which case the engine
    will not JIT the function again.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 `func` 是标准 Python 函数，则引擎将[JIT](https://numba.pydata.org/numba-doc/latest/user/overview.html)传递的函数。`func`
    也可以是一个 JITed 函数，在这种情况下，引擎将不会再次 JIT 函数。
- en: The engine will JIT the for loop where the apply function is applied to each
    window.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引擎将 JIT 应用函数应用于每个窗口的循环。
- en: The `engine_kwargs` argument is a dictionary of keyword arguments that will
    be passed into the [numba.jit decorator](https://numba.pydata.org/numba-doc/latest/reference/jit-compilation.html#numba.jit).
    These keyword arguments will be applied to *both* the passed function (if a standard
    Python function) and the apply for loop over each window.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`engine_kwargs` 参数是一个关键字参数字典，将传递给[numba.jit 装饰器](https://numba.pydata.org/numba-doc/latest/reference/jit-compilation.html#numba.jit)。这些关键字参数将应用于*传递的函数*（如果是标准
    Python 函数）和对每个窗口的应用循环。'
- en: New in version 1.3.0.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 1.3.0 中的新功能。
- en: '`mean`, `median`, `max`, `min`, and `sum` also support the `engine` and `engine_kwargs`
    arguments.'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '`mean`、`median`、`max`、`min` 和 `sum` 也支持 `engine` 和 `engine_kwargs` 参数。'
- en: '### Binary window functions'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '### 二进制窗口函数'
- en: '`cov()` and `corr()` can compute moving window statistics about two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or any combination of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). Here is the behavior in each case:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`cov()` 和 `corr()` 可以计算关于两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或任何[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的移动窗口统计。在每种情况下的行为如下：'
- en: 'two [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"):
    compute the statistic for the pairing.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")：计算配对的统计信息。
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"): compute the statistics for each column of the DataFrame with
    the passed Series, thus returning a DataFrame.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")：计算 DataFrame 的每一列与传递的 Series 的统计信息，从而返回一个 DataFrame。'
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"): by default compute the statistic for matching column names,
    returning a DataFrame. If the keyword argument `pairwise=True` is passed then
    computes the statistic for each pair of columns, returning a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") whose values are the dates in question (see [the next section](#window-corr-pairwise)).'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")/[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")：默认情况下计算匹配列名的统计信息，返回一个 DataFrame。如果传递了关键字参数 `pairwise=True`，则为每对列计算统计信息，返回一个具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，其值是相关日期（请参阅[下一节](#window-corr-pairwise)）。'
- en: 'For example:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE52]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '### Computing rolling pairwise covariances and correlations'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '### 计算滚动成对协方差和相关性'
- en: 'In financial data analysis and other fields it’s common to compute covariance
    and correlation matrices for a collection of time series. Often one is also interested
    in moving-window covariance and correlation matrices. This can be done by passing
    the `pairwise` keyword argument, which in the case of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") inputs will yield a MultiIndexed [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") whose `index` are the dates in question. In the case of a
    single DataFrame argument the `pairwise` argument can even be omitted:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融数据分析和其他领域，通常会为一组时间序列计算协方差和相关矩阵。通常还会对移动窗口协方差和相关矩阵感兴趣。这可以通过传递`pairwise`关键字参数来实现，对于[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")输入，将产生一个多索引的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，其`index`是相关日期。对于单个DataFrame参数的情况，甚至可以省略`pairwise`参数：
- en: Note
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Missing values are ignored and each entry is computed using the pairwise complete
    observations.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 忽略缺失值，并使用成对完整观测值计算每个条目。
- en: Assuming the missing data are missing at random this results in an estimate
    for the covariance matrix which is unbiased. However, for many applications this
    estimate may not be acceptable because the estimated covariance matrix is not
    guaranteed to be positive semi-definite. This could lead to estimated correlations
    having absolute values which are greater than one, and/or a non-invertible covariance
    matrix. See [Estimation of covariance matrices](https://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices)
    for more details.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 假设缺失数据是随机缺失的，这将导致对协方差矩阵的估计是无偏的。然而，对于许多应用程序来说，这种估计可能是不可接受的，因为估计的协方差矩阵不能保证是半正定的。这可能导致估计的相关性具有绝对值大于一的情况，和/或一个不可逆的协方差矩阵。更多详情请参见[协方差矩阵的估计](https://en.wikipedia.org/w/index.php?title=Estimation_of_covariance_matrices)。
- en: '[PRE53]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '## Weighted window'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '## 加权窗口'
- en: The `win_type` argument in `.rolling` generates a weighted windows that are
    commonly used in filtering and spectral estimation. `win_type` must be string
    that corresponds to a [scipy.signal window function](https://docs.scipy.org/doc/scipy/reference/signal.windows.html#module-scipy.signal.windows).
    Scipy must be installed in order to use these windows, and supplementary arguments
    that the Scipy window methods take must be specified in the aggregation function.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`.rolling`中的`win_type`参数生成了在滤波和频谱估计中常用的加权窗口。`win_type`必须是一个字符串，对应于[scipy.signal窗口函数](https://docs.scipy.org/doc/scipy/reference/signal.windows.html#module-scipy.signal.windows)。必须安装Scipy才能使用这些窗口，并且必须在聚合函数中指定Scipy窗口方法所需的补充参数。'
- en: '[PRE54]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: For all supported aggregation functions, see [Weighted window functions](../reference/window.html#api-functions-window).
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有支持的聚合函数，请参见[加权窗口函数](../reference/window.html#api-functions-window)。
- en: '## Expanding window'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '## 扩展窗口'
- en: 'An expanding window yields the value of an aggregation statistic with all the
    data available up to that point in time. Since these calculations are a special
    case of rolling statistics, they are implemented in pandas such that the following
    two calls are equivalent:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展窗口提供了一个聚合统计量的值，其中包含截至该时间点的所有可用数据。由于这些计算是滚动统计的一个特例，因此在pandas中实现了以下两种调用是等效的：
- en: '[PRE55]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: For all supported aggregation functions, see [Expanding window functions](../reference/window.html#api-functions-expanding).
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有支持的聚合函数，请参见[扩展窗口函数](../reference/window.html#api-functions-expanding)。
- en: '## Exponentially weighted window'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '## 指数加权窗口'
- en: An exponentially weighted window is similar to an expanding window but with
    each prior point being exponentially weighted down relative to the current point.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 指数加权窗口类似于扩展窗口，但是每个先前点相对于当前点被指数加权降低。
- en: In general, a weighted moving average is calculated as
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，加权移动平均值计算如下
- en: \[y_t = \frac{\sum_{i=0}^t w_i x_{t-i}}{\sum_{i=0}^t w_i},\]
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \frac{\sum_{i=0}^t w_i x_{t-i}}{\sum_{i=0}^t w_i},\]
- en: where \(x_t\) is the input, \(y_t\) is the result and the \(w_i\) are the weights.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(x_t\)是输入，\(y_t\)是结果，\(w_i\)是权重。
- en: For all supported aggregation functions, see [Exponentially-weighted window
    functions](../reference/window.html#api-functions-ewm).
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有支持的聚合函数，请参见[指数加权窗口函数](../reference/window.html#api-functions-ewm)。
- en: The EW functions support two variants of exponential weights. The default, `adjust=True`,
    uses the weights \(w_i = (1 - \alpha)^i\) which gives
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: EW函数支持指数权重的两个变体。默认情况下，`adjust=True`使用权重\(w_i = (1 - \alpha)^i\)，得到
- en: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ... + (1
    - \alpha)^t x_{0}}{1 + (1 - \alpha) + (1 - \alpha)^2 + ... + (1 - \alpha)^t}\]
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ... + (1
    - \alpha)^t x_{0}}{1 + (1 - \alpha) + (1 - \alpha)^2 + ... + (1 - \alpha)^t}\]
- en: When `adjust=False` is specified, moving averages are calculated as
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 当指定`adjust=False`时，移动平均值计算如下
- en: \[\begin{split}y_0 &= x_0 \\ y_t &= (1 - \alpha) y_{t-1} + \alpha x_t,\end{split}\]
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}y_0 &= x_0 \\ y_t &= (1 - \alpha) y_{t-1} + \alpha x_t,\end{split}\]
- en: which is equivalent to using weights
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 这等价于使用权重
- en: \[\begin{split}w_i = \begin{cases} \alpha (1 - \alpha)^i & \text{if } i < t
    \\ (1 - \alpha)^i & \text{if } i = t. \end{cases}\end{split}\]
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}w_i = \begin{cases} \alpha (1 - \alpha)^i & \text{如果 } i < t
    \\ (1 - \alpha)^i & \text{如果 } i = t. \end{cases}\end{split}\]
- en: Note
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: These equations are sometimes written in terms of \(\alpha' = 1 - \alpha\),
    e.g.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方程有时以\(\alpha' = 1 - \alpha\)的形式编写，例如
- en: \[y_t = \alpha' y_{t-1} + (1 - \alpha') x_t.\]
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \alpha' y_{t-1} + (1 - \alpha') x_t.\]
- en: 'The difference between the above two variants arises because we are dealing
    with series which have finite history. Consider a series of infinite history,
    with `adjust=True`:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 以上两个变体之间的差异是因为我们处理的是具有有限历史的系列。考虑一个具有`adjust=True`的无限历史的系列：
- en: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ...} {1 +
    (1 - \alpha) + (1 - \alpha)^2 + ...}\]
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2} + ...} {1 +
    (1 - \alpha) + (1 - \alpha)^2 + ...}\]
- en: Noting that the denominator is a geometric series with initial term equal to
    1 and a ratio of \(1 - \alpha\) we have
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 注意分母是一个几何级数，初始项为1，比率为\(1 - \alpha\)，我们有
- en: \[\begin{split}y_t &= \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2}
    + ...} {\frac{1}{1 - (1 - \alpha)}}\\ &= [x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2
    x_{t-2} + ...] \alpha \\ &= \alpha x_t + [(1-\alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2}
    + ...]\alpha \\ &= \alpha x_t + (1 - \alpha)[x_{t-1} + (1 - \alpha) x_{t-2} +
    ...]\alpha\\ &= \alpha x_t + (1 - \alpha) y_{t-1}\end{split}\]
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}y_t &= \frac{x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2}
    + ...} {\frac{1}{1 - (1 - \alpha)}}\\ &= [x_t + (1 - \alpha)x_{t-1} + (1 - \alpha)^2
    x_{t-2} + ...] \alpha \\ &= \alpha x_t + [(1-\alpha)x_{t-1} + (1 - \alpha)^2 x_{t-2}
    + ...]\alpha \\ &= \alpha x_t + (1 - \alpha)[x_{t-1} + (1 - \alpha) x_{t-2} +
    ...]\alpha\\ &= \alpha x_t + (1 - \alpha) y_{t-1}\end{split}\]
- en: which is the same expression as `adjust=False` above and therefore shows the
    equivalence of the two variants for infinite series. When `adjust=False`, we have
    \(y_0 = x_0\) and \(y_t = \alpha x_t + (1 - \alpha) y_{t-1}\). Therefore, there
    is an assumption that \(x_0\) is not an ordinary value but rather an exponentially
    weighted moment of the infinite series up to that point.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 这与上面的`adjust=False`表达式相同，因此显示了无限级数的两个变体的等价性。当指定`adjust=False`时，我们有\(y_0 = x_0\)和\(y_t
    = \alpha x_t + (1 - \alpha) y_{t-1}\)。因此，有一个假设，即\(x_0\)不是普通值，而是无限系列在那一点的指数加权瞬时值。
- en: 'One must have \(0 < \alpha \leq 1\), and while it is possible to pass \(\alpha\)
    directly, it’s often easier to think about either the **span**, **center of mass
    (com)** or **half-life** of an EW moment:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 必须满足\(0 < \alpha \leq 1\)，虽然可以直接传递\(\alpha\)，但通常更容易考虑EW瞬时的**跨度**、**质心（com）**或**半衰期**：
- en: \[\begin{split}\alpha = \begin{cases} \frac{2}{s + 1}, & \text{for span}\ s
    \geq 1\\ \frac{1}{1 + c}, & \text{for center of mass}\ c \geq 0\\ 1 - \exp^{\frac{\log
    0.5}{h}}, & \text{for half-life}\ h > 0 \end{cases}\end{split}\]
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\alpha = \begin{cases} \frac{2}{s + 1}, & \text{对于跨度}\ s \geq
    1\\ \frac{1}{1 + c}, & \text{对于质心}\ c \geq 0\\ 1 - \exp^{\frac{\log 0.5}{h}},
    & \text{对于半衰期}\ h > 0 \end{cases}\end{split}\]
- en: 'One must specify precisely one of **span**, **center of mass**, **half-life**
    and **alpha** to the EW functions:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 必须向EW函数精确指定**跨度**、**质心**、**半衰期**和**alpha**中的一个：
- en: '**Span** corresponds to what is commonly called an “N-day EW moving average”.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨度**对应于通常称为“N天EW移动平均”的内容。'
- en: '**Center of mass** has a more physical interpretation and can be thought of
    in terms of span: \(c = (s - 1) / 2\).'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质心**具有更物理的解释，可以��虑为跨度：\(c = (s - 1) / 2\)。'
- en: '**Half-life** is the period of time for the exponential weight to reduce to
    one half.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**半衰期**是指数权重减少到一半所需的时间段。'
- en: '**Alpha** specifies the smoothing factor directly.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Alpha**直接指定平滑因子。'
- en: You can also specify `halflife` in terms of a timedelta convertible unit to
    specify the amount of time it takes for an observation to decay to half its value
    when also specifying a sequence of `times`.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以指定`halflife`，以时间间隔可转换的单位来指定观察值衰减到一半所需的时间，同时指定一系列`times`。
- en: '[PRE56]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'The following formula is used to compute exponentially weighted mean with an
    input vector of times:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 以下公式用于计算具有时间输入向量的指数加权均值：
- en: \[y_t = \frac{\sum_{i=0}^t 0.5^\frac{t_{t} - t_{i}}{\lambda} x_{t-i}}{\sum_{i=0}^t
    0.5^\frac{t_{t} - t_{i}}{\lambda}},\]
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: \[y_t = \frac{\sum_{i=0}^t 0.5^\frac{t_{t} - t_{i}}{\lambda} x_{t-i}}{\sum_{i=0}^t
    0.5^\frac{t_{t} - t_{i}}{\lambda}},\]
- en: ExponentialMovingWindow also has an `ignore_na` argument, which determines how
    intermediate null values affect the calculation of the weights. When `ignore_na=False`
    (the default), weights are calculated based on absolute positions, so that intermediate
    null values affect the result. When `ignore_na=True`, weights are calculated by
    ignoring intermediate null values. For example, assuming `adjust=True`, if `ignore_na=False`,
    the weighted average of `3, NaN, 5` would be calculated as
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: ExponentialMovingWindow还有一个`ignore_na`参数，用于确定中间空值如何影响权重的计算。当`ignore_na=False`（默认值）时，权重是基于绝对位置计算的，因此中间空值会影响结果。当`ignore_na=True`时，权重是通过忽略中间空值计算的。例如，假设`adjust=True`，如果`ignore_na=False`，则`3,
    NaN, 5`的加权平均值将被计算为
- en: \[\frac{(1-\alpha)^2 \cdot 3 + 1 \cdot 5}{(1-\alpha)^2 + 1}.\]
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{(1-\alpha)^2 \cdot 3 + 1 \cdot 5}{(1-\alpha)^2 + 1}.\]
- en: Whereas if `ignore_na=True`, the weighted average would be calculated as
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 若`ignore_na=True`，则加权平均值将被计算为
- en: \[\frac{(1-\alpha) \cdot 3 + 1 \cdot 5}{(1-\alpha) + 1}.\]
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{(1-\alpha) \cdot 3 + 1 \cdot 5}{(1-\alpha) + 1}.\]
- en: The `var()`, `std()`, and `cov()` functions have a `bias` argument, specifying
    whether the result should contain biased or unbiased statistics. For example,
    if `bias=True`, `ewmvar(x)` is calculated as `ewmvar(x) = ewma(x**2) - ewma(x)**2`;
    whereas if `bias=False` (the default), the biased variance statistics are scaled
    by debiasing factors
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '`var()`、`std()`和`cov()`函数有一个`bias`参数，指定结果是否应包含有偏或无偏统计数据。例如，如果`bias=True`，则`ewmvar(x)`被计算为`ewmvar(x)
    = ewma(x**2) - ewma(x)**2`；而如果`bias=False`（默认值），有偏方差统计数据将通过去偏因子进行缩放。'
- en: \[\frac{\left(\sum_{i=0}^t w_i\right)^2}{\left(\sum_{i=0}^t w_i\right)^2 - \sum_{i=0}^t
    w_i^2}.\]
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: \[\frac{\left(\sum_{i=0}^t w_i\right)^2}{\left(\sum_{i=0}^t w_i\right)^2 - \sum_{i=0}^t
    w_i^2}.\]
- en: (For \(w_i = 1\), this reduces to the usual \(N / (N - 1)\) factor, with \(N
    = t + 1\).) See [Weighted Sample Variance](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean#Weighted_sample_variance)
    on Wikipedia for further details.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: (对于\(w_i = 1\)，这将缩减为通常的\(N / (N - 1)\)因子，其中\(N = t + 1\)。请参阅维基百科上的[加权样本方差](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean#Weighted_sample_variance)以获取更多详细信息。
