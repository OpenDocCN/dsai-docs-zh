- en: pandas.DataFrame.loc
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.loc.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.loc.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Access a group of rows and columns by label(s) or a boolean array.
  prefs: []
  type: TYPE_NORMAL
- en: '`.loc[]` is primarily label based, but may also be used with a boolean array.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Allowed inputs are:'
  prefs: []
  type: TYPE_NORMAL
- en: A single label, e.g. `5` or `'a'`, (note that `5` is interpreted as a *label*
    of the index, and `never` as an integer position along the index).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A list or array of labels, e.g. `['a', 'b', 'c']`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A slice object with labels, e.g. `'a':'f'`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note that contrary to usual python slices, **both** the start and the stop are
    included
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A boolean array of the same length as the axis being sliced, e.g. `[True, False,
    True]`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An alignable boolean Series. The index of the key will be aligned before masking.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An alignable Index. The Index of the returned selection will be the input.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A `callable` function with one argument (the calling Series or DataFrame) and
    that returns valid output for indexing (one of the above)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See more at [Selection by Label](../../user_guide/indexing.html#indexing-label).
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: KeyError
  prefs: []
  type: TYPE_NORMAL
- en: If any items are not found.
  prefs: []
  type: TYPE_NORMAL
- en: IndexingError
  prefs: []
  type: TYPE_NORMAL
- en: If an indexed key is passed and its index is unalignable to the frame index.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.at`](pandas.DataFrame.at.html#pandas.DataFrame.at "pandas.DataFrame.at")'
  prefs: []
  type: TYPE_NORMAL
- en: Access a single value for a row/column label pair.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.iloc`](pandas.DataFrame.iloc.html#pandas.DataFrame.iloc "pandas.DataFrame.iloc")'
  prefs: []
  type: TYPE_NORMAL
- en: Access group of rows and columns by integer position(s).
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.xs`](pandas.DataFrame.xs.html#pandas.DataFrame.xs "pandas.DataFrame.xs")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns a cross-section (row(s) or column(s)) from the Series/DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.loc`](pandas.Series.loc.html#pandas.Series.loc "pandas.Series.loc")'
  prefs: []
  type: TYPE_NORMAL
- en: Access group of values using labels.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '**Getting values**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Single label. Note this returns the row as a Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: List of labels. Note using `[[]]` returns a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Single label for row and column
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Slice with labels for row and single label for column. As mentioned above, note
    that both the start and stop of the slice are included.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Boolean list with the same length as the row axis
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Alignable boolean Series:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Index (same behavior as `df.reindex`)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Conditional that returns a boolean Series
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Conditional that returns a boolean Series with column labels specified
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Multiple conditional using `&` that returns a boolean Series
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Multiple conditional using `|` that returns a boolean Series
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Please ensure that each condition is wrapped in parentheses `()`. See the [user
    guide](../../user_guide/indexing.html#indexing-boolean) for more details and explanations
    of Boolean indexing.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you find yourself using 3 or more conditionals in `.loc[]`, consider using
    [advanced indexing](../../user_guide/advanced.html#advanced-advanced-hierarchical).
  prefs: []
  type: TYPE_NORMAL
- en: See below for using `.loc[]` on MultiIndex DataFrames.
  prefs: []
  type: TYPE_NORMAL
- en: Callable that returns a boolean Series
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '**Setting values**'
  prefs: []
  type: TYPE_NORMAL
- en: Set value for all items matching the list of labels
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Set value for an entire row
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Set value for an entire column
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Set value for rows matching callable condition
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Add value matching location
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Setting using a `Series` or a `DataFrame` sets the values matching the index
    labels, not the index positions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '**Getting values on a DataFrame with an index that has integer labels**'
  prefs: []
  type: TYPE_NORMAL
- en: Another example using integers for the index
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Slice with integer labels for rows. As mentioned above, note that both the start
    and stop of the slice are included.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '**Getting values with a MultiIndex**'
  prefs: []
  type: TYPE_NORMAL
- en: A number of examples using a DataFrame with a MultiIndex
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Single label. Note this returns a DataFrame with a single index.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Single index tuple. Note this returns a Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Single label for row and column. Similar to passing in a tuple, this returns
    a Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Single tuple. Note using `[[]]` returns a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Single tuple for the index with a single label for the column
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Slice from index tuple to single label
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Slice from index tuple to index tuple
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Please see the [user guide](../../user_guide/advanced.html#advanced-advanced-hierarchical)
    for more details and explanations of advanced indexing.
  prefs: []
  type: TYPE_NORMAL
