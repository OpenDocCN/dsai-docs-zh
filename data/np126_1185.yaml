- en: NumPy 1.8.1 Release Notes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NumPy 1.8.1 发布说明
- en: 原文：[https://numpy.org/doc/1.26/release/1.8.1-notes.html](https://numpy.org/doc/1.26/release/1.8.1-notes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/release/1.8.1-notes.html](https://numpy.org/doc/1.26/release/1.8.1-notes.html)
- en: This is a bugfix only release in the 1.8.x series.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这是1.8.x系列中仅修复错误的发布。
- en: Issues fixed
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题已解决
- en: 'gh-4276: Fix mean, var, std methods for object arrays'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4276: 修复了对象数组的mean、var、std方法'
- en: 'gh-4262: remove insecure mktemp usage'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4262: 移除了不安全的mktemp使用'
- en: 'gh-2385: absolute(complex(inf)) raises invalid warning in python3'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-2385: complex(inf)的绝对值在python3中引发无效警告'
- en: 'gh-4024: Sequence assignment doesn’t raise exception on shape mismatch'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4024: 序列赋值在形状不匹配时不会引发异常'
- en: 'gh-4027: Fix chunked reading of strings longer than BUFFERSIZE'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4027: 修复了对长于BUFFERSIZE的字符串进行分块读取'
- en: 'gh-4109: Fix object scalar return type of 0-d array indices'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4109: 修复了0维数组索引的对象标量返回类型'
- en: 'gh-4018: fix missing check for memory allocation failure in ufuncs'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4018: 修复了ufunc中内存分配失败的缺失检查'
- en: 'gh-4156: high order linalg.norm discards imaginary elements of complex arrays'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4156: 高阶linalg.norm丢弃了复数数组的虚部'
- en: 'gh-4144: linalg: norm fails on longdouble, signed int'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4144: linalg: norm在longdouble、signed int上失败'
- en: 'gh-4094: fix NaT handling in _strided_to_strided_string_to_datetime'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4094: 修复了_strided_to_strided_string_to_datetime中的NaT处理'
- en: 'gh-4051: fix uninitialized use in _strided_to_strided_string_to_datetime'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4051: 修复了_strided_to_strided_string_to_datetime中的未初始化使用'
- en: 'gh-4093: Loading compressed .npz file fails under Python 2.6.6'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4093: 在Python 2.6.6下加载压缩的.npz文件失败'
- en: 'gh-4138: segfault with non-native endian memoryview in python 3.4'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4138: 在Python 3.4中，非本机字节序memoryview导致段错误'
- en: 'gh-4123: Fix missing NULL check in lexsort'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4123: 修复了lexsort中缺失的NULL检查'
- en: 'gh-4170: fix native-only long long check in memoryviews'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4170: 修复了在memoryviews中仅本机长长检查'
- en: 'gh-4187: Fix large file support on 32 bit'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4187: 修复了32位大文件支持'
- en: 'gh-4152: fromfile: ensure file handle positions are in sync in python3'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4152: fromfile: 确保python3中文件句柄位置同步'
- en: 'gh-4176: clang compatibility: Typos in conversion_utils'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4176: clang兼容性: 转换工具中的拼写错误'
- en: 'gh-4223: Fetching a non-integer item caused array return'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4223: 获取非整数项导致数组返回'
- en: 'gh-4197: fix minor memory leak in memoryview failure case'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4197: 修复了memoryview失败情况下的轻微内存泄漏'
- en: 'gh-4206: fix build with single-threaded python'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4206: 修复了与单线程Python的构建'
- en: 'gh-4220: add versionadded:: 1.8.0 to ufunc.at docstring'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4220: 在ufunc.at文档字符串中添加versionadded:: 1.8.0'
- en: 'gh-4267: improve handling of memory allocation failure'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4267: 改进了内存分配失败的处理'
- en: 'gh-4267: fix use of capi without gil in ufunc.at'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4267: ���复了ufunc.at中在没有gil的情况下使用capi'
- en: 'gh-4261: Detect vendor versions of GNU Compilers'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4261: 检测GNU编译器的供应商版本'
- en: 'gh-4253: IRR was returning nan instead of valid negative answer'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4253: IRR返回nan而不是有效的负答案'
- en: 'gh-4254: fix unnecessary byte order flag change for byte arrays'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4254: 修复了对字节数组不必要的字节顺序标志更改'
- en: 'gh-3263: numpy.random.shuffle clobbers mask of a MaskedArray'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3263: numpy.random.shuffle破坏了MaskedArray的掩码'
- en: 'gh-4270: np.random.shuffle not work with flexible dtypes'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4270: np.random.shuffle无法处理灵活数据类型'
- en: 'gh-3173: Segmentation fault when ‘size’ argument to random.multinomial'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3173: random.multinomial的‘size’参数导致分段错误'
- en: 'gh-2799: allow using unique with lists of complex'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-2799: 允许使用复杂列表进行唯一性处理'
- en: 'gh-3504: fix linspace truncation for integer array scalar'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3504: 修复了整数数组标量的linspace截断'
- en: 'gh-4191: get_info(‘openblas’) does not read libraries key'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4191: get_info(''openblas'')无法读取libraries键'
- en: 'gh-3348: Access violation in _descriptor_from_pep3118_format'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3348: _descriptor_from_pep3118_format中的访问冲突'
- en: 'gh-3175: segmentation fault with numpy.array() from bytearray'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3175: 从bytearray中使用numpy.array()导致分段错误'
- en: 'gh-4266: histogramdd - wrong result for entries very close to last boundary'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4266: histogramdd - 对于非常接近最后边界的条目，结果错误'
- en: 'gh-4408: Fix stride_stricks.as_strided function for object arrays'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4408: 修复了对象数组的stride_stricks.as_strided函数'
- en: 'gh-4225: fix log1p and exmp1 return for np.inf on windows compiler builds'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4225: 修复了在Windows编译器构建中对np.inf的log1p和exmp1返回'
- en: 'gh-4359: Fix infinite recursion in str.format of flex arrays'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4359: 修复了flex数组中str.format的无限递归'
- en: 'gh-4145: Incorrect shape of broadcast result with the exponent operator'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4145: 使用指数运算符时广播结果的形状不正确'
- en: 'gh-4483: Fix commutativity of {dot,multiply,inner}(scalar, matrix_of_objs)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4483: 修复了{dot,multiply,inner}(scalar, matrix_of_objs)的可交换性'
- en: 'gh-4466: Delay npyiter size check when size may change'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4466: 当大小可能会改变时，延迟npyiter大小检查'
- en: 'gh-4485: Buffered stride was erroneously marked fixed'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4485: 缓冲步幅错误地标记为固定'
- en: 'gh-4354: byte_bounds fails with datetime dtypes'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4354: byte_bounds在datetime dtypes中失败'
- en: 'gh-4486: segfault/error converting from/to high-precision datetime64 objects'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4486: 从/到高精度datetime64对象的转换导致段错误/错误'
- en: 'gh-4428: einsum(None, None, None, None) causes segfault'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4428: einsum(None, None, None, None)导致分段错误'
- en: 'gh-4134: uninitialized use for for size 1 object reductions'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4134: 对于大小为1的对象缩减未初始化使用'
- en: Changes
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变更
- en: NDIter
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NDIter
- en: When `NpyIter_RemoveAxis` is now called, the iterator range will be reset.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当现在调用`NpyIter_RemoveAxis`时，迭代器范围将被重置。
- en: When a multi index is being tracked and an iterator is not buffered, it is possible
    to use `NpyIter_RemoveAxis`. In this case an iterator can shrink in size. Because
    the total size of an iterator is limited, the iterator may be too large before
    these calls. In this case its size will be set to `-1` and an error issued not
    at construction time but when removing the multi index, setting the iterator range,
    or getting the next function.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当跟踪多索引并且迭代器未缓冲时，可以使用`NpyIter_RemoveAxis`。在这种情况下，迭代器的大小可能会缩小。由于迭代器的总大小是有限的，因此在这些调用之前，迭代器可能会过大。在这种情况下，其大小将被设置为`-1`，并且不是在构建时而是在移除多索引、设置迭代器范围或获取下一个函数时发出错误。
- en: This has no effect on currently working code, but highlights the necessity of
    checking for an error return if these conditions can occur. In most cases the
    arrays being iterated are as large as the iterator so that such a problem cannot
    occur.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这对当前正常工作的代码没有影响，但强调了如果这些情况可能发生时检查错误返回的必要性。在大多数情况下，被迭代的数组与迭代器一样大，因此不会出现这样的问题。
- en: Optional reduced verbosity for np.distutils
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可选减少`np.distutils`的冗长输出
- en: Set `numpy.distutils.system_info.system_info.verbosity = 0` and then calls to
    `numpy.distutils.system_info.get_info('blas_opt')` will not print anything on
    the output. This is mostly for other packages using numpy.distutils.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 设置`numpy.distutils.system_info.system_info.verbosity = 0`，然后调用`numpy.distutils.system_info.get_info('blas_opt')`将不会在输出中打印任何内容。这主要是为了其他使用`numpy.distutils`的包。
- en: Deprecations
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弃用
- en: C-API
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C-API
- en: The utility function npy_PyFile_Dup and npy_PyFile_DupClose are broken by the
    internal buffering python 3 applies to its file objects. To fix this two new functions
    npy_PyFile_Dup2 and npy_PyFile_DupClose2 are declared in npy_3kcompat.h and the
    old functions are deprecated. Due to the fragile nature of these functions it
    is recommended to instead use the python API when possible.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 实用函数`npy_PyFile_Dup`和`npy_PyFile_DupClose`被Python 3对其文件对象应用的内部缓冲破坏了。为了解决这个问题，在`npy_3kcompat.h`中声明了两个新函数`npy_PyFile_Dup2`和`npy_PyFile_DupClose2`，并弃用了旧函数。由于这些函数的脆弱性，建议尽可能使用Python
    API来代替。
- en: Issues fixed
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题已解决
- en: 'gh-4276: Fix mean, var, std methods for object arrays'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4276: 修复对象数组的`mean`、`var`、`std`方法'
- en: 'gh-4262: remove insecure mktemp usage'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4262: 移除不安全的`mktemp`使用'
- en: 'gh-2385: absolute(complex(inf)) raises invalid warning in python3'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-2385: `complex(inf)`的绝对值在Python 3中引发无效警告'
- en: 'gh-4024: Sequence assignment doesn’t raise exception on shape mismatch'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4024: 序列赋值在形状不匹配时不会引发异常'
- en: 'gh-4027: Fix chunked reading of strings longer than BUFFERSIZE'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4027: 修复对长于`BUFFERSIZE`的字符串进行分块读取的问题'
- en: 'gh-4109: Fix object scalar return type of 0-d array indices'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4109: 修复0维数组索引的对象标量返回类型'
- en: 'gh-4018: fix missing check for memory allocation failure in ufuncs'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4018: 修复ufunc中对内存分配失败的缺失检查'
- en: 'gh-4156: high order linalg.norm discards imaginary elements of complex arrays'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4156: 高阶`linalg.norm`丢弃了复数数组的虚部'
- en: 'gh-4144: linalg: norm fails on longdouble, signed int'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4144: `linalg.norm`在`longdouble`、`signed int`上失败'
- en: 'gh-4094: fix NaT handling in _strided_to_strided_string_to_datetime'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4094: 修复在`_strided_to_strided_string_to_datetime`中对NaT的处理'
- en: 'gh-4051: fix uninitialized use in _strided_to_strided_string_to_datetime'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4051: 修复在`_strided_to_strided_string_to_datetime`中未初始化使用的问题'
- en: 'gh-4093: Loading compressed .npz file fails under Python 2.6.6'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4093: 在Python 2.6.6下加载压缩的`.npz`文件失败'
- en: 'gh-4138: segfault with non-native endian memoryview in python 3.4'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4138: 在Python 3.4中使用非本机字节序`memoryview`导致段错误'
- en: 'gh-4123: Fix missing NULL check in lexsort'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4123: 修复`lexsort`中缺少的NULL检查'
- en: 'gh-4170: fix native-only long long check in memoryviews'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4170: 修复在`memoryviews`中仅本机长长检查的问题'
- en: 'gh-4187: Fix large file support on 32 bit'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4187: 修复32位系统上的大文件支持'
- en: 'gh-4152: fromfile: ensure file handle positions are in sync in python3'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4152: `fromfile`：确保在Python 3中文件句柄位置同步'
- en: 'gh-4176: clang compatibility: Typos in conversion_utils'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4176: clang兼容性：`conversion_utils`中的拼写错误'
- en: 'gh-4223: Fetching a non-integer item caused array return'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4223: 获取非整数项导致数组返回'
- en: 'gh-4197: fix minor memory leak in memoryview failure case'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4197: 修复`memoryview`失败情况下的轻微内存泄漏'
- en: 'gh-4206: fix build with single-threaded python'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4206: 修复与单线程Python的构建问题'
- en: 'gh-4220: add versionadded:: 1.8.0 to ufunc.at docstring'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4220: 在`ufunc.at`文档字符串中添加`versionadded:: 1.8.0`'
- en: 'gh-4267: improve handling of memory allocation failure'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4267: 改进内存分配失败的处理'
- en: 'gh-4267: fix use of capi without gil in ufunc.at'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4267: 修复在`ufunc.at`中无GIL使用CAPI的问题'
- en: 'gh-4261: Detect vendor versions of GNU Compilers'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4261: 检测GNU编译器的供应商版本'
- en: 'gh-4253: IRR was returning nan instead of valid negative answer'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4253: IRR 返回 nan 而不是有效的负答案'
- en: 'gh-4254: fix unnecessary byte order flag change for byte arrays'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4254: 修复字节数组不必要的字节顺序标志更改'
- en: 'gh-3263: numpy.random.shuffle clobbers mask of a MaskedArray'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3263: numpy.random.shuffle 破坏了 MaskedArray 的掩码'
- en: 'gh-4270: np.random.shuffle not work with flexible dtypes'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4270: np.random.shuffle 无法与灵活的 dtypes 一起使用'
- en: 'gh-3173: Segmentation fault when ‘size’ argument to random.multinomial'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3173: ‘size’ 参数传递给 random.multinomial 时出现分段错误'
- en: 'gh-2799: allow using unique with lists of complex'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-2799: 允许对复数列表使用唯一性'
- en: 'gh-3504: fix linspace truncation for integer array scalar'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3504: 修复整数数组标量的 linspace 截断'
- en: 'gh-4191: get_info(‘openblas’) does not read libraries key'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4191: get_info(‘openblas’) 未读取库键'
- en: 'gh-3348: Access violation in _descriptor_from_pep3118_format'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3348: _descriptor_from_pep3118_format 中的访问冲突'
- en: 'gh-3175: segmentation fault with numpy.array() from bytearray'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-3175: 使用 numpy.array() 从 bytearray 时出现分段错误'
- en: 'gh-4266: histogramdd - wrong result for entries very close to last boundary'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4266: histogramdd - 对于非常接近最后边界的条目，结果错误'
- en: 'gh-4408: Fix stride_stricks.as_strided function for object arrays'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4408: 修复对象数组的 stride_stricks.as_strided 函数'
- en: 'gh-4225: fix log1p and exmp1 return for np.inf on windows compiler builds'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4225: 修复 np.inf 在 Windows 编译器构建上的 log1p 和 exmp1 返回'
- en: 'gh-4359: Fix infinite recursion in str.format of flex arrays'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4359: 修复灵活数组的 str.format 中的无限递归'
- en: 'gh-4145: Incorrect shape of broadcast result with the exponent operator'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4145: 使用指数运算符时广播结果的形状不正确'
- en: 'gh-4483: Fix commutativity of {dot,multiply,inner}(scalar, matrix_of_objs)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4483: 修复 {dot,multiply,inner}(scalar, matrix_of_objs) 的交换性'
- en: 'gh-4466: Delay npyiter size check when size may change'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4466: 当大小可能会改变时，延迟 npyiter 大小检查'
- en: 'gh-4485: Buffered stride was erroneously marked fixed'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4485: 缓冲的步幅错误地标记为固定'
- en: 'gh-4354: byte_bounds fails with datetime dtypes'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4354: byte_bounds 与日期时间 dtypes 失败'
- en: 'gh-4486: segfault/error converting from/to high-precision datetime64 objects'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4486: 从/到高精度 datetime64 对象的转换导致段错误/错误'
- en: 'gh-4428: einsum(None, None, None, None) causes segfault'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4428: einsum(None, None, None, None) 导致段错误'
- en: 'gh-4134: uninitialized use for for size 1 object reductions'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'gh-4134: 未初始化使用大小为 1 的对象缩减'
- en: Changes
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变更
- en: NDIter
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NDIter
- en: When `NpyIter_RemoveAxis` is now called, the iterator range will be reset.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当现在调用 `NpyIter_RemoveAxis` 时，迭代器范围将���重置。
- en: When a multi index is being tracked and an iterator is not buffered, it is possible
    to use `NpyIter_RemoveAxis`. In this case an iterator can shrink in size. Because
    the total size of an iterator is limited, the iterator may be too large before
    these calls. In this case its size will be set to `-1` and an error issued not
    at construction time but when removing the multi index, setting the iterator range,
    or getting the next function.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当跟踪多索引并且迭代器未缓冲时，可以使用 `NpyIter_RemoveAxis`。在这种情况下，迭代器的大小可能会缩小。由于迭代器的总大小受限，因此在这些调用之前，迭代器可能太大。在这种情况下，其大小将设置为
    `-1`，并且在构造时不会发出错误，而是在删除多索引、设置迭代器范围或获取下一个函数时发出错误。
- en: This has no effect on currently working code, but highlights the necessity of
    checking for an error return if these conditions can occur. In most cases the
    arrays being iterated are as large as the iterator so that such a problem cannot
    occur.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这对当前正常工作的代码没有影响，但强调了如果这些条件可能发生时需要检查错误返回的必要性。在大多数情况下，被迭代的数组与迭代器一样大，因此不会出现这样的问题。
- en: Optional reduced verbosity for np.distutils
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可选减少 np.distutils 的冗长
- en: Set `numpy.distutils.system_info.system_info.verbosity = 0` and then calls to
    `numpy.distutils.system_info.get_info('blas_opt')` will not print anything on
    the output. This is mostly for other packages using numpy.distutils.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 `numpy.distutils.system_info.system_info.verbosity = 0`，然后调用 `numpy.distutils.system_info.get_info('blas_opt')`
    将不会在输出中打印任何内容。这主要是为了其他使用 numpy.distutils 的包。
- en: NDIter
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: NDIter
- en: When `NpyIter_RemoveAxis` is now called, the iterator range will be reset.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当现在调用 `NpyIter_RemoveAxis` 时，迭代器范围将被重置。
- en: When a multi index is being tracked and an iterator is not buffered, it is possible
    to use `NpyIter_RemoveAxis`. In this case an iterator can shrink in size. Because
    the total size of an iterator is limited, the iterator may be too large before
    these calls. In this case its size will be set to `-1` and an error issued not
    at construction time but when removing the multi index, setting the iterator range,
    or getting the next function.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当跟踪多索引并且迭代器未缓冲时，可以使用 `NpyIter_RemoveAxis`。在这种情况下，迭代器的大小可能会缩小。由于迭代器的总大小受限，因此在这些调用之前，迭代器可能太大。在这种情况下，其大小将设置为
    `-1`，并且在构造时不会发出错误，而是在删除多索引、设置迭代器范围或获取下一个函数时发出错误。
- en: This has no effect on currently working code, but highlights the necessity of
    checking for an error return if these conditions can occur. In most cases the
    arrays being iterated are as large as the iterator so that such a problem cannot
    occur.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这对当前正常工作的代码没有影响，但强调了如果这些条件可能发生时需要检查错误返回的必要性。在大多数情况下，被迭代的数组与迭代器一样大，因此不会出现这样的问题。
- en: Optional reduced verbosity for np.distutils
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可选减少 np.distutils 的冗长
- en: Set `numpy.distutils.system_info.system_info.verbosity = 0` and then calls to
    `numpy.distutils.system_info.get_info('blas_opt')` will not print anything on
    the output. This is mostly for other packages using numpy.distutils.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 `numpy.distutils.system_info.system_info.verbosity = 0`，然后调用 `numpy.distutils.system_info.get_info('blas_opt')`
    将不会在输出中打印任何内容。这主要是为了其他使用 numpy.distutils 的包。
- en: Deprecations
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弃用
- en: C-API
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C-API
- en: The utility function npy_PyFile_Dup and npy_PyFile_DupClose are broken by the
    internal buffering python 3 applies to its file objects. To fix this two new functions
    npy_PyFile_Dup2 and npy_PyFile_DupClose2 are declared in npy_3kcompat.h and the
    old functions are deprecated. Due to the fragile nature of these functions it
    is recommended to instead use the python API when possible.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 实用函数 npy_PyFile_Dup 和 npy_PyFile_DupClose 受到 Python 3 对其文件对象应用的内部缓冲的影响而出现问题。为了解决这个问题，在
    npy_3kcompat.h 中声明了两个新函数 npy_PyFile_Dup2 和 npy_PyFile_DupClose2，并弃用了旧函数。由于这些函数的脆弱性，建议尽可能使用
    Python API。
- en: C-API
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C-API
- en: The utility function npy_PyFile_Dup and npy_PyFile_DupClose are broken by the
    internal buffering python 3 applies to its file objects. To fix this two new functions
    npy_PyFile_Dup2 and npy_PyFile_DupClose2 are declared in npy_3kcompat.h and the
    old functions are deprecated. Due to the fragile nature of these functions it
    is recommended to instead use the python API when possible.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 实用函数 npy_PyFile_Dup 和 npy_PyFile_DupClose 受到 Python 3 对其文件对象应用的内部缓冲的影响而出现问题。为了解决这个问题，在
    npy_3kcompat.h 中声明了两个新函数 npy_PyFile_Dup2 和 npy_PyFile_DupClose2，并弃用了旧函数。由于这些函数的脆弱性，建议尽可能使用
    Python API。
