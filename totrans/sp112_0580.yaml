- en: scipy.signal.lp2bp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lp2bp.html#scipy.signal.lp2bp](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lp2bp.html#scipy.signal.lp2bp)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Transform a lowpass filter prototype to a bandpass filter.
  prefs: []
  type: TYPE_NORMAL
- en: Return an analog band-pass filter with center frequency *wo* and bandwidth *bw*
    from an analog low-pass filter prototype with unity cutoff frequency, in transfer
    function (‘ba’) representation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**b**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Numerator polynomial coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Denominator polynomial coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: '**wo**float'
  prefs: []
  type: TYPE_NORMAL
- en: Desired passband center, as angular frequency (e.g., rad/s). Defaults to no
    change.
  prefs: []
  type: TYPE_NORMAL
- en: '**bw**float'
  prefs: []
  type: TYPE_NORMAL
- en: Desired passband width, as angular frequency (e.g., rad/s). Defaults to 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**b**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Numerator polynomial coefficients of the transformed band-pass filter.
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Denominator polynomial coefficients of the transformed band-pass filter.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`lp2lp`](scipy.signal.lp2lp.html#scipy.signal.lp2lp "scipy.signal.lp2lp"),
    [`lp2hp`](scipy.signal.lp2hp.html#scipy.signal.lp2hp "scipy.signal.lp2hp"), [`lp2bs`](scipy.signal.lp2bs.html#scipy.signal.lp2bs
    "scipy.signal.lp2bs"), [`bilinear`](scipy.signal.bilinear.html#scipy.signal.bilinear
    "scipy.signal.bilinear")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`lp2bp_zpk`](scipy.signal.lp2bp_zpk.html#scipy.signal.lp2bp_zpk "scipy.signal.lp2bp_zpk")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This is derived from the s-plane substitution
  prefs: []
  type: TYPE_NORMAL
- en: \[s \rightarrow \frac{s^2 + {\omega_0}^2}{s \cdot \mathrm{BW}}\]
  prefs: []
  type: TYPE_NORMAL
- en: This is the “wideband” transformation, producing a passband with geometric (log
    frequency) symmetry about *wo*.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-lp2bp-1.png](../Images/c9a9ec8f7e6bc784f809d9f005cc9e19.png)'
  prefs: []
  type: TYPE_IMG
