- en: numpy.arctan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.arctan.html](https://numpy.org/doc/1.26/reference/generated/numpy.arctan.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Trigonometric inverse tangent, element-wise.
  prefs: []
  type: TYPE_NORMAL
- en: The inverse of tan, so that if `y = tan(x)` then `x = arctan(y)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  prefs: []
  type: TYPE_NORMAL
- en: '**where**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray or scalar'
  prefs: []
  type: TYPE_NORMAL
- en: Out has the same shape as *x*. Its real part is in `[-pi/2, pi/2]` (`arctan(+/-inf)`
    returns `+/-pi/2`). This is a scalar if *x* is a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`arctan2`](numpy.arctan2.html#numpy.arctan2 "numpy.arctan2")'
  prefs: []
  type: TYPE_NORMAL
- en: The “four quadrant” arctan of the angle formed by (*x*, *y*) and the positive
    *x*-axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[`angle`](numpy.angle.html#numpy.angle "numpy.angle")'
  prefs: []
  type: TYPE_NORMAL
- en: Argument of complex values.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '[`arctan`](#numpy.arctan "numpy.arctan") is a multi-valued function: for each
    *x* there are infinitely many numbers *z* such that tan(*z*) = *x*. The convention
    is to return the angle *z* whose real part lies in [-pi/2, pi/2].'
  prefs: []
  type: TYPE_NORMAL
- en: For real-valued input data types, [`arctan`](#numpy.arctan "numpy.arctan") always
    returns real output. For each value that cannot be expressed as a real number
    or infinity, it yields `nan` and sets the *invalid* floating point error flag.
  prefs: []
  type: TYPE_NORMAL
- en: For complex-valued input, [`arctan`](#numpy.arctan "numpy.arctan") is a complex
    analytic function that has [`1j, infj`] and [`-1j, -infj`] as branch cuts, and
    is continuous from the left on the former and from the right on the latter.
  prefs: []
  type: TYPE_NORMAL
- en: The inverse tangent is also known as *atan* or tan^{-1}.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: 'Abramowitz, M. and Stegun, I. A., *Handbook of Mathematical Functions*, 10th
    printing, New York: Dover, 1964, pp. 79. [https://personal.math.ubc.ca/~cbm/aands/page_79.htm](https://personal.math.ubc.ca/~cbm/aands/page_79.htm)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'We expect the arctan of 0 to be 0, and of 1 to be pi/4:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Plot arctan:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/numpy-arctan-1.png](../Images/26025b19f7613f2b887547163d28f9bb.png)'
  prefs: []
  type: TYPE_IMG
