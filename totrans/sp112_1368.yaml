- en: scipy.stats.rvs_ratio_uniforms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.rvs_ratio_uniforms.html#scipy.stats.rvs_ratio_uniforms](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.rvs_ratio_uniforms.html#scipy.stats.rvs_ratio_uniforms)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Generate random samples from a probability density function using the ratio-of-uniforms
    method.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12.0: [`rvs_ratio_uniforms`](#scipy.stats.rvs_ratio_uniforms
    "scipy.stats.rvs_ratio_uniforms") is deprecated in favour of [`scipy.stats.sampling.RatioUniforms`](scipy.stats.sampling.RatioUniforms.html#scipy.stats.sampling.RatioUniforms
    "scipy.stats.sampling.RatioUniforms") from version 1.12.0 and will be removed
    in SciPy 1.15.0'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pdf**callable'
  prefs: []
  type: TYPE_NORMAL
- en: A function with signature *pdf(x)* that is proportional to the probability density
    function of the distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '**umax**float'
  prefs: []
  type: TYPE_NORMAL
- en: The upper bound of the bounding rectangle in the u-direction.
  prefs: []
  type: TYPE_NORMAL
- en: '**vmin**float'
  prefs: []
  type: TYPE_NORMAL
- en: The lower bound of the bounding rectangle in the v-direction.
  prefs: []
  type: TYPE_NORMAL
- en: '**vmax**float'
  prefs: []
  type: TYPE_NORMAL
- en: The upper bound of the bounding rectangle in the v-direction.
  prefs: []
  type: TYPE_NORMAL
- en: '**size**int or tuple of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Defining number of random variates (default is 1).
  prefs: []
  type: TYPE_NORMAL
- en: '**c**float, optional.'
  prefs: []
  type: TYPE_NORMAL
- en: Shift parameter of ratio-of-uniforms method, see Notes. Default is 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**random_state**{None, int, [`numpy.random.Generator`](https://numpy.org/devdocs/reference/random/generator.html#numpy.random.Generator
    "(in NumPy v2.0.dev0)"),'
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)")}, optional'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If *seed* is None (or *np.random*), the [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)") singleton is used. If *seed* is an int, a new `RandomState`
    instance is used, seeded with *seed*. If *seed* is already a `Generator` or `RandomState`
    instance then that instance is used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**rvs**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The random variates distributed according to the probability distribution defined
    by the pdf.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Please refer to [`scipy.stats.sampling.RatioUniforms`](scipy.stats.sampling.RatioUniforms.html#scipy.stats.sampling.RatioUniforms
    "scipy.stats.sampling.RatioUniforms") for the documentation.
  prefs: []
  type: TYPE_NORMAL
