["```py\nclass numpy.memmap(filename, dtype=<class 'numpy.ubyte'>, mode='r+', offset=0, shape=None, order='C')\n```", "```py\n>>> data = np.arange(12, dtype='float32')\n>>> data.resize((3,4)) \n```", "```py\n>>> from tempfile import mkdtemp\n>>> import os.path as path\n>>> filename = path.join(mkdtemp(), 'newfile.dat') \n```", "```py\n>>> fp = np.memmap(filename, dtype='float32', mode='w+', shape=(3,4))\n>>> fp\nmemmap([[0., 0., 0., 0.],\n [0., 0., 0., 0.],\n [0., 0., 0., 0.]], dtype=float32) \n```", "```py\n>>> fp[:] = data[:]\n>>> fp\nmemmap([[  0.,   1.,   2.,   3.],\n [  4.,   5.,   6.,   7.],\n [  8.,   9.,  10.,  11.]], dtype=float32) \n```", "```py\n>>> fp.filename == path.abspath(filename)\nTrue \n```", "```py\n>>> fp.flush() \n```", "```py\n>>> newfp = np.memmap(filename, dtype='float32', mode='r', shape=(3,4))\n>>> newfp\nmemmap([[  0.,   1.,   2.,   3.],\n [  4.,   5.,   6.,   7.],\n [  8.,   9.,  10.,  11.]], dtype=float32) \n```", "```py\n>>> fpr = np.memmap(filename, dtype='float32', mode='r', shape=(3,4))\n>>> fpr.flags.writeable\nFalse \n```", "```py\n>>> fpc = np.memmap(filename, dtype='float32', mode='c', shape=(3,4))\n>>> fpc.flags.writeable\nTrue \n```", "```py\n>>> fpc\nmemmap([[  0.,   1.,   2.,   3.],\n [  4.,   5.,   6.,   7.],\n [  8.,   9.,  10.,  11.]], dtype=float32)\n>>> fpc[0,:] = 0\n>>> fpc\nmemmap([[  0.,   0.,   0.,   0.],\n [  4.,   5.,   6.,   7.],\n [  8.,   9.,  10.,  11.]], dtype=float32) \n```", "```py\n>>> fpr\nmemmap([[  0.,   1.,   2.,   3.],\n [  4.,   5.,   6.,   7.],\n [  8.,   9.,  10.,  11.]], dtype=float32) \n```", "```py\n>>> fpo = np.memmap(filename, dtype='float32', mode='r', offset=16)\n>>> fpo\nmemmap([  4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.], dtype=float32) \n```"]