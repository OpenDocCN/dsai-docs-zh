- en: scipy.signal.morlet2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.morlet2.html#scipy.signal.morlet2](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.morlet2.html#scipy.signal.morlet2)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Complex Morlet wavelet, designed to work with [`cwt`](scipy.signal.cwt.html#scipy.signal.cwt
    "scipy.signal.cwt").
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12.0: scipy.signal.morlet2 is deprecated in SciPy
    1.12 and will be removed in SciPy 1.15\. We recommend using PyWavelets instead.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns the complete version of morlet wavelet, normalised according to *s*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**M**int'
  prefs: []
  type: TYPE_NORMAL
- en: Length of the wavelet.
  prefs: []
  type: TYPE_NORMAL
- en: '**s**float'
  prefs: []
  type: TYPE_NORMAL
- en: Width parameter of the wavelet.
  prefs: []
  type: TYPE_NORMAL
- en: '**w**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Omega0\. Default is 5
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**morlet**(M,) ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`morlet`](scipy.signal.morlet.html#scipy.signal.morlet "scipy.signal.morlet")'
  prefs: []
  type: TYPE_NORMAL
- en: Implementation of Morlet wavelet, incompatible with [`cwt`](scipy.signal.cwt.html#scipy.signal.cwt
    "scipy.signal.cwt")
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: This function was designed to work with [`cwt`](scipy.signal.cwt.html#scipy.signal.cwt
    "scipy.signal.cwt"). Because [`morlet2`](#scipy.signal.morlet2 "scipy.signal.morlet2")
    returns an array of complex numbers, the *dtype* argument of [`cwt`](scipy.signal.cwt.html#scipy.signal.cwt
    "scipy.signal.cwt") should be set to *complex128* for best results.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note the difference in implementation with [`morlet`](scipy.signal.morlet.html#scipy.signal.morlet
    "scipy.signal.morlet"). The fundamental frequency of this wavelet in Hz is given
    by:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'where `fs` is the sampling rate and *s* is the wavelet width parameter. Similarly
    we can get the wavelet width parameter at `f`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-morlet2-1_00_00.png](../Images/9faeb5307e5e82b7b0293551170913b8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This example shows basic use of [`morlet2`](#scipy.signal.morlet2 "scipy.signal.morlet2")
    with [`cwt`](scipy.signal.cwt.html#scipy.signal.cwt "scipy.signal.cwt") in time-frequency
    analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-morlet2-1_01_00.png](../Images/ce444169867b0526ee7f312d33eb0f92.png)'
  prefs: []
  type: TYPE_IMG
