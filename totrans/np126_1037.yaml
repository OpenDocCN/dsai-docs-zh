- en: numpy.testing.decorate_methods
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.testing.decorate_methods
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.decorate_methods.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.decorate_methods.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.decorate_methods.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.decorate_methods.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Apply a decorator to all methods in a class matching a regular expression.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将装饰器应用于类中匹配正则表达式的所有方法。
- en: The given decorator is applied to all public methods of *cls* that are matched
    by the regular expression *testmatch* (`testmatch.search(methodname)`). Methods
    that are private, i.e. start with an underscore, are ignored.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 给定的装饰器应用于所有由正则表达式*testmatch*匹配的*cls*的公共方法（`testmatch.search(methodname)`）。以下划线开头的私有方法将被忽略。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**cls**class'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**cls**类'
- en: Class whose methods to decorate.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要装饰方法的类。
- en: '**decorator**function'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**decorator**函数'
- en: Decorator to apply to methods
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要应用装饰器的方法
- en: '**testmatch**compiled regexp or str, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**testmatch**编译后的正则表达式或字符串，可选'
- en: The regular expression. Default value is None, in which case the nose default
    (`re.compile(r'(?:^|[\b_\.%s-])[Tt]est' % os.sep)`) is used. If *testmatch* is
    a string, it is compiled to a regular expression first.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正则表达式。默认值为None，此时使用nose默认值（`re.compile(r'(?:^|[\b_\.%s-])[Tt]est' % os.sep)`）。如果*testmatch*是一个字符串，则首先将其编译为正则表达式。
