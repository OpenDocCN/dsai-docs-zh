["```py\nStyler.format(formatter=None, subset=None, na_rep=None, precision=None, decimal='.', thousands=None, escape=None, hyperlinks=None)\n```", "```py\n>>> df = pd.DataFrame([[np.nan, 1.0, 'A'], [2.0, np.nan, 3.0]])\n>>> df.style.format(na_rep='MISS', precision=3)  \n 0       1       2\n0    MISS   1.000       A\n1   2.000    MISS   3.000 \n```", "```py\n>>> df.style.format('{:.2f}', na_rep='MISS', subset=[0,1])  \n 0      1          2\n0    MISS   1.00          A\n1    2.00   MISS   3.000000 \n```", "```py\n>>> df.style.format({0: '{:.2f}', 1: '\u00a3 {:.1f}'}, na_rep='MISS', precision=1)\n...  \n 0      1     2\n0    MISS   \u00a3 1.0     A\n1    2.00    MISS   3.0 \n```", "```py\n>>> (df.style.format(na_rep='MISS', precision=1, subset=[0])\n...     .format(na_rep='PASS', precision=2, subset=[1, 2]))  \n 0      1      2\n0    MISS   1.00      A\n1     2.0   PASS   3.00 \n```", "```py\n>>> func = lambda s: 'STRING' if isinstance(s, str) else 'FLOAT'\n>>> df.style.format({0: '{:.1f}', 2: func}, precision=4, na_rep='MISS')\n...  \n 0        1        2\n0    MISS   1.0000   STRING\n1     2.0     MISS    FLOAT \n```", "```py\n>>> df = pd.DataFrame([['<div></div>', '\"A&B\"', None]])\n>>> s = df.style.format(\n...     '<a href=\"a.com/{0}\">{0}</a>', escape=\"html\", na_rep=\"NA\"\n...     )\n>>> s.to_html()  \n...\n<td .. ><a href=\"a.com/&lt;div&gt;&lt;/div&gt;\">&lt;div&gt;&lt;/div&gt;</a></td>\n<td .. ><a href=\"a.com/&#34;A&amp;B&#34;\">&#34;A&amp;B&#34;</a></td>\n<td .. >NA</td>\n... \n```", "```py\n>>> df = pd.DataFrame([[\"123\"], [\"~ ^\"], [\"$%#\"]])\n>>> df.style.format(\"\\\\textbf{{{}}}\", escape=\"latex\").to_latex()\n...  \n\\begin{tabular}{ll}\n & 0 \\\\\n0 & \\textbf{123} \\\\\n1 & \\textbf{\\textasciitilde \\space \\textasciicircum } \\\\\n2 & \\textbf{\\$\\%\\#} \\\\\n\\end{tabular} \n```", "```py\n>>> df = pd.DataFrame([[r\"$\\sum_{i=1}^{10} a_i$ a~b $\\alpha \\\n...     = \\frac{\\beta}{\\zeta^2}$\"], [\"%#^ $ \\$x^2 $\"]])\n>>> df.style.format(escape=\"latex-math\").to_latex()\n...  \n\\begin{tabular}{ll}\n & 0 \\\\\n0 & $\\sum_{i=1}^{10} a_i$ a\\textasciitilde b $\\alpha = \\frac{\\beta}{\\zeta^2}$ \\\\\n1 & \\%\\#\\textasciicircum \\space $ \\$x^2 $ \\\\\n\\end{tabular} \n```", "```py\n>>> df = pd.DataFrame([[r\"\\(\\sum_{i=1}^{10} a_i\\) a~b \\(\\alpha \\\n...     = \\frac{\\beta}{\\zeta^2}\\)\"], [\"%#^ \\( \\$x^2 \\)\"]])\n>>> df.style.format(escape=\"latex-math\").to_latex()\n...  \n\\begin{tabular}{ll}\n & 0 \\\\\n0 & \\(\\sum_{i=1}^{10} a_i\\) a\\textasciitilde b \\(\\alpha\n= \\frac{\\beta}{\\zeta^2}\\) \\\\\n1 & \\%\\#\\textasciicircum \\space \\( \\$x^2 \\) \\\\\n\\end{tabular} \n```", "```py\n>>> df = pd.DataFrame([[r\"\\( x^2 \\)  $x^2$\"], \\\n...     [r\"$\\frac{\\beta}{\\zeta}$ \\(\\frac{\\beta}{\\zeta}\\)\"]])\n>>> df.style.format(escape=\"latex-math\").to_latex()\n...  \n\\begin{tabular}{ll}\n & 0 \\\\\n0 & \\textbackslash ( x\\textasciicircum 2 \\textbackslash )  $x^2$ \\\\\n1 & $\\frac{\\beta}{\\zeta}$ \\textbackslash (\\textbackslash\nfrac\\{\\textbackslash beta\\}\\{\\textbackslash zeta\\}\\textbackslash ) \\\\\n\\end{tabular} \n```", "```py\n>>> df = pd.DataFrame({\"A\": [1, 0, -1]})\n>>> pseudo_css = \"number-format: 0\u00a7[Red](0)\u00a7-\u00a7@;\"\n>>> filename = \"formatted_file.xlsx\"\n>>> df.style.map(lambda v: pseudo_css).to_excel(filename) \n```"]