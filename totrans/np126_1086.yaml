- en: Contributing to NumPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/dev/index.html](https://numpy.org/doc/1.26/dev/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Not a coder? Not a problem! NumPy is multi-faceted, and we can use a lot of
    help. These are all activities we’d like to get help with (they’re all important,
    so we list them in alphabetical order):'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Code maintenance and development
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Community coordination
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DevOps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing educational content & narrative documentation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fundraising
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marketing
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project management
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Translating content
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Website design and development
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Writing technical documentation
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The rest of this document discusses working on the NumPy code base and documentation.
    We’re in the process of updating our descriptions of other activities and roles.
    If you are interested in these other activities, please contact us! You can do
    this via the [numpy-discussion mailing list](https://mail.python.org/mailman/listinfo/numpy-discussion),
    or on [GitHub](https://github.com/numpy/numpy) (open an issue or comment on a
    relevant issue). These are our preferred communication channels (open source is
    open by nature!), however if you prefer to discuss in private first, please reach
    out to our community coordinators at [numpy-team@googlegroups.com](/cdn-cgi/l/email-protection#5b7474352e362b22762f3e3a367d78686c607d786e69607d786f63603c34343c373e3c29342e2b287d786f6d60383436)
    or [numpy-team.slack.com](https://numpy-team.slack.com) (send an email to [numpy-team@googlegroups.com](/cdn-cgi/l/email-protection#c4ebebaab1a9b4bde9b0a1a5a9e2e7f7f3ffe2e7f1f6ffe2e7f0fcffa3ababa3a8a1a3b6abb1b4b7e2e7f0f2ffa7aba9)
    for an invite the first time).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Development process - summary
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here’s the short summary, complete TOC links are below:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are a first-time contributor:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to [https://github.com/numpy/numpy](https://github.com/numpy/numpy) and click
    the “fork” button to create your own copy of the project.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Clone the project to your local computer:'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Change the directory:'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Add the upstream repository:'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, `git remote -v` will show two remote repositories named:'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`upstream`, which refers to the `numpy` repository'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`origin`, which refers to your personal fork'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pull the latest changes from upstream, including tags:'
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Initialize numpy’s submodules:'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Develop your contribution:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a branch for the feature you want to work on. Since the branch name
    will appear in the merge message, use a sensible name such as ‘linspace-speedups’:'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Commit locally as you progress (`git add` and `git commit`) Use a [properly
    formatted](development_workflow.html#writing-the-commit-message) commit message,
    write tests that fail before your change and pass afterward, run all the [tests
    locally](development_environment.html#development-environment). Be sure to document
    any changed behavior in docstrings, keeping to the NumPy docstring [standard](howto-docs.html#howto-document).
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To submit your contribution:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Push your changes back to your fork on GitHub:'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Enter your GitHub username and password (repeat contributors or advanced users
    can remove this step by connecting to GitHub with [SSH](gitwash/development_setup.html#set-up-and-configure-a-github-account)).
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Go to GitHub. The new branch will show up with a green Pull Request button.
    Make sure the title and message are clear, concise, and self- explanatory. Then
    click the button to submit it.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If your commit introduces a new feature or changes functionality, post on the
    [mailing list](https://mail.python.org/mailman/listinfo/numpy-discussion) to explain
    your changes. For bug fixes, documentation updates, etc., this is generally not
    necessary, though if you do not get any reaction, do feel free to ask for review.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Review process:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Reviewers (the other developers and interested community members) will write
    inline and/or general comments on your Pull Request (PR) to help you improve its
    implementation, documentation and style. Every single developer working on the
    project has their code reviewed, and we’ve come to see it as friendly conversation
    from which we all learn and the overall code quality benefits. Therefore, please
    don’t let the review discourage you from contributing: its only aim is to improve
    the quality of project, not to criticize (we are, after all, very grateful for
    the time you’re donating!). See our [Reviewer Guidelines](reviewer_guidelines.html#reviewer-guidelines)
    for more information.'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: To update your PR, make your changes on your local repository, commit, **run
    tests, and only if they succeed** push to your fork. As soon as those changes
    are pushed up (to the same branch as before) the PR will update automatically.
    If you have no idea how to fix the test failures, you may push your changes anyway
    and ask for help in a PR comment.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Various continuous integration (CI) services are triggered after each PR update
    to build the code, run unit tests, measure code coverage and check coding style
    of your branch. The CI tests must pass before your PR can be merged. If CI fails,
    you can find out why by clicking on the “failed” icon (red cross) and inspecting
    the build and test log. To avoid overuse and waste of this resource, [test your
    work](development_environment.html#recommended-development-setup) locally before
    committing.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A PR must be **approved** by at least one core team member before merging. Approval
    means the core team member has carefully reviewed the changes, and the PR is ready
    for merging.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Document changes
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Beyond changes to a functions docstring and possible description in the general
    documentation, if your change introduces any user-facing modifications they may
    need to be mentioned in the release notes. To add your change to the release notes,
    you need to create a short file with a summary and place it in `doc/release/upcoming_changes`.
    The file `doc/release/upcoming_changes/README.rst` details the format and filename
    conventions.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If your change introduces a deprecation, make sure to discuss this first on
    GitHub or the mailing list first. If agreement on the deprecation is reached,
    follow [NEP 23 deprecation policy](https://numpy.org/neps/nep-0023-backwards-compatibility.html#nep23
    "(in NumPy Enhancement Proposals)") to add the deprecation.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您的更改引入了弃用，请确保首先在 GitHub 或邮件列表上讨论此事。如果就弃用达成协议，请遵循[NEP 23弃用政策](https://numpy.org/neps/nep-0023-backwards-compatibility.html#nep23
    "(in NumPy Enhancement Proposals)") 添加弃用。
- en: Cross referencing issues
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 交叉引用问题
- en: If the PR relates to any issues, you can add the text `xref gh-xxxx` where `xxxx`
    is the number of the issue to github comments. Likewise, if the PR solves an issue,
    replace the `xref` with `closes`, `fixes` or any of the other flavors [github
    accepts](https://help.github.com/en/articles/closing-issues-using-keywords).
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 PR 与任何问题相关，则可以将文本 `xref gh-xxxx` 添加到 GitHub 评论中，其中 `xxxx` 是问题编号。同样，如果 PR
    解决了一个问题，用 `closes`、`fixes` 或其他任何GitHub接受的 [变体](https://help.github.com/en/articles/closing-issues-using-keywords)
    替换 `xref`。
- en: In the source code, be sure to preface any issue or PR reference with `gh-xxxx`.
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在源代码中，请务必在任何问题或 PR 引用之前加上 `gh-xxxx`。
- en: For a more detailed discussion, read on and follow the links at the bottom of
    this page.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更详细的讨论，请继续阅读并关注本页面底部的链接。
- en: Divergence between `upstream/main` and your feature branch
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`upstream/main` 和您的 feature 分支之间的分歧'
- en: If GitHub indicates that the branch of your Pull Request can no longer be merged
    automatically, you have to incorporate changes that have been made since you started
    into your branch. Our recommended way to do this is to [rebase on main](development_workflow.html#rebasing-on-main).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 GitHub 指示您的 Pull Request 分支无法再自动合并，则必须将自您开始以来所做的更改合并到您的分支中。我们建议的做法是[在 main
    上变基](development_workflow.html#rebasing-on-main)。
- en: '### Guidelines'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '### 指南'
- en: All code should have tests (see [test coverage](#test-coverage) below for more
    details).
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有代码都应该有测试（有关更多详细信息，请参见下文的[test coverage](#test-coverage)）。
- en: All code should be [documented](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard).
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有代码都应被[文档化](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard)。
- en: 'No changes are ever committed without review and approval by a core team member.
    Please ask politely on the PR or on the [mailing list](https://mail.python.org/mailman/listinfo/numpy-discussion)
    if you get no response to your pull request within a week.  ### Stylistic Guidelines'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '没有经核心团队成员审查和批准的更改会被提交。如果您的拉取请求一周内没有任何回应，请礼貌地在 PR 上或[邮件列表](https://mail.python.org/mailman/listinfo/numpy-discussion)上询问。  ###
    风格指南'
- en: Set up your editor to follow [PEP 8](https://www.python.org/dev/peps/pep-0008/)
    (remove trailing white space, no tabs, etc.). Check code with pyflakes / flake8.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置您的编辑器遵循[PEP 8](https://www.python.org/dev/peps/pep-0008/)（去除末尾空格，不使用制表符等）。使用
    pyflakes / flake8 检查代码。
- en: Use NumPy data types instead of strings (`np.uint8` instead of `"uint8"`).
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 NumPy 数据类型而不是字符串（`np.uint8` 而不是 `"uint8"`）。
- en: 'Use the following import conventions:'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下的导入约定：
- en: '[PRE7]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: For C code, see [NEP 45](https://numpy.org/neps/nep-0045-c_style_guide.html#nep45
    "(in NumPy Enhancement Proposals)").
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 C 代码，请参阅[NEP 45](https://numpy.org/neps/nep-0045-c_style_guide.html#nep45
    "(in NumPy Enhancement Proposals)")。
- en: Test coverage
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试覆盖率
- en: Pull requests (PRs) that modify code should either have new tests, or modify
    existing tests to fail before the PR and pass afterwards. You should [run the
    tests](development_environment.html#development-environment) before pushing a
    PR.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 修改代码的拉取请求（PRs）应该有新的测试，或修改现有测试以确保在 PR 之前失败后通过。在推送 PR 之前，应[运行测试](development_environment.html#development-environment)。
- en: 'Running NumPy’s test suite locally requires some additional packages, such
    as `pytest` and `hypothesis`. The additional testing dependencies are listed in
    `test_requirements.txt` in the top-level directory, and can conveniently be installed
    with:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地运行 NumPy 的测试套件需要一些额外的包，如 `pytest` 和 `hypothesis`。其他测试依赖项列在顶级目录中的 `test_requirements.txt`
    中，并可以通过以下命令方便地安装：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Tests for a module should ideally cover all code in that module, i.e., statement
    coverage should be at 100%.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 模块的测试理想情况下应覆盖该模块中的所有代码，即语句覆盖率应为 100%。
- en: 'To measure the test coverage, run:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要测量测试覆盖率，请运行：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This will create a report in `html` format at `build/coverage`, which can be
    viewed with your browser, e.g.:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在 `build/coverage` 中以 `html` 格式创建报告，可用浏览器查看，例如：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '### Building docs'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '### 构建文档'
- en: 'To build the HTML documentation, use:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建 HTML 文档，请使用：
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You can also run `make` from the `doc` directory. `make help` lists all targets.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从 `doc` 目录运行 `make`。`make help` 列出所有目标。
- en: To get the appropriate dependencies and other requirements, see [Building the
    NumPy API and reference docs](howto_build_docs.html#howto-build-docs).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: Fixing Warnings
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '“citation not found: R###” There is probably an underscore after a reference
    in the first line of a docstring (e.g. [1]_). Use this method to find the source
    file: $ cd doc/build; grep -rin R####'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “Duplicate citation R###, other instance in…”” There is probably a [2] without
    a [1] in one of the docstrings
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Development process - details
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The rest of the story
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '[Git Basics](gitwash/index.html)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Install git](gitwash/git_intro.html)'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Get the local copy of the code](gitwash/following_latest.html)'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Updating the code](gitwash/following_latest.html#updating-the-code)'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Setting up git for NumPy development](gitwash/development_setup.html)'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Git configuration](gitwash/configure_git.html)'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Two and three dots in difference specs](gitwash/dot2_dot3.html)'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Additional Git resources](gitwash/git_resources.html)'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Setting up and using your development environment](development_environment.html)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recommended development setup](development_environment.html#recommended-development-setup)'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using virtual environments](development_environment.html#using-virtual-environments)'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Testing builds](development_environment.html#testing-builds)'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other build options](development_environment.html#other-build-options)'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Running tests](development_environment.html#running-tests)'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Running Linting](development_environment.html#running-linting)'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Rebuilding & cleaning the workspace](development_environment.html#rebuilding-cleaning-the-workspace)'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Debugging](development_environment.html#debugging)'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding the code & getting started](development_environment.html#understanding-the-code-getting-started)'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building the NumPy API and reference docs](howto_build_docs.html)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Development environments](howto_build_docs.html#development-environments)'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Prerequisites](howto_build_docs.html#prerequisites)'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Instructions](howto_build_docs.html#instructions)'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Development workflow](development_workflow.html)'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Basic workflow](development_workflow.html#basic-workflow)'
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Additional things you might want to do](development_workflow.html#additional-things-you-might-want-to-do)'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Advanced debugging tools](development_advanced_debugging.html)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Finding C errors with additional tooling](development_advanced_debugging.html#finding-c-errors-with-additional-tooling)'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Reviewer guidelines](reviewer_guidelines.html)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Who can be a reviewer?](reviewer_guidelines.html#who-can-be-a-reviewer)'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Communication Guidelines](reviewer_guidelines.html#communication-guidelines)'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Reviewer Checklist](reviewer_guidelines.html#reviewer-checklist)'
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Standard replies for reviewing](reviewer_guidelines.html#standard-replies-for-reviewing)'
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NumPy benchmarks](../benchmarking.html)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Usage](../benchmarking.html#usage)'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Benchmarking versions](../benchmarking.html#benchmarking-versions)'
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Writing benchmarks](../benchmarking.html#writing-benchmarks)'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NumPy C style guide](https://numpy.org/neps/nep-0045-c_style_guide.html)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[For downstream package authors](depending_on_numpy.html)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding NumPy’s versioning and API/ABI stability](depending_on_numpy.html#understanding-numpy-s-versioning-and-api-abi-stability)'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Testing against the NumPy main branch or pre-releases](depending_on_numpy.html#testing-against-the-numpy-main-branch-or-pre-releases)'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Adding a dependency on NumPy](depending_on_numpy.html#adding-a-dependency-on-numpy)'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Releasing a version](releasing.html)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to prepare a release](releasing.html#how-to-prepare-a-release)'
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Step-by-step directions](releasing.html#step-by-step-directions)'
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Branch walkthrough](releasing.html#branch-walkthrough)'
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NumPy governance](governance/index.html)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NumPy project governance and decision-making](governance/governance.html)'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to contribute to the NumPy documentation](howto-docs.html)'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Documentation team meetings](howto-docs.html#documentation-team-meetings)'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What’s needed](howto-docs.html#what-s-needed)'
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributing fixes](howto-docs.html#contributing-fixes)'
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributing new pages](howto-docs.html#contributing-new-pages)'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributing indirectly](howto-docs.html#contributing-indirectly)'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Documentation style](howto-docs.html#documentation-style)'
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Documentation reading](howto-docs.html#documentation-reading)'
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy-specific workflow is in [numpy-development-workflow](development_workflow.html#development-workflow).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Development process - summary
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here’s the short summary, complete TOC links are below:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are a first-time contributor:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to [https://github.com/numpy/numpy](https://github.com/numpy/numpy) and click
    the “fork” button to create your own copy of the project.
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Clone the project to your local computer:'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Change the directory:'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Add the upstream repository:'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now, `git remote -v` will show two remote repositories named:'
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`upstream`, which refers to the `numpy` repository'
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`origin`, which refers to your personal fork'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pull the latest changes from upstream, including tags:'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Initialize numpy’s submodules:'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Develop your contribution:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a branch for the feature you want to work on. Since the branch name
    will appear in the merge message, use a sensible name such as ‘linspace-speedups’:'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Commit locally as you progress (`git add` and `git commit`) Use a [properly
    formatted](development_workflow.html#writing-the-commit-message) commit message,
    write tests that fail before your change and pass afterward, run all the [tests
    locally](development_environment.html#development-environment). Be sure to document
    any changed behavior in docstrings, keeping to the NumPy docstring [standard](howto-docs.html#howto-document).
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To submit your contribution:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Push your changes back to your fork on GitHub:'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Enter your GitHub username and password (repeat contributors or advanced users
    can remove this step by connecting to GitHub with [SSH](gitwash/development_setup.html#set-up-and-configure-a-github-account)).
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Go to GitHub. The new branch will show up with a green Pull Request button.
    Make sure the title and message are clear, concise, and self- explanatory. Then
    click the button to submit it.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转到GitHub。新分支将显示一个绿色的Pull Request按钮。请确保标题和消息清晰、简洁且自解释。然后点击按钮提交。
- en: If your commit introduces a new feature or changes functionality, post on the
    [mailing list](https://mail.python.org/mailman/listinfo/numpy-discussion) to explain
    your changes. For bug fixes, documentation updates, etc., this is generally not
    necessary, though if you do not get any reaction, do feel free to ask for review.
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您的提交引入新功能或更改功能，请在[邮件列表](https://mail.python.org/mailman/listinfo/numpy-discussion)上解释您的更改。对于错误修复、文档更新等，通常不需要这样做，但如果您没有得到任何反应，请随时要求审查。
- en: 'Review process:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查流程：
- en: 'Reviewers (the other developers and interested community members) will write
    inline and/or general comments on your Pull Request (PR) to help you improve its
    implementation, documentation and style. Every single developer working on the
    project has their code reviewed, and we’ve come to see it as friendly conversation
    from which we all learn and the overall code quality benefits. Therefore, please
    don’t let the review discourage you from contributing: its only aim is to improve
    the quality of project, not to criticize (we are, after all, very grateful for
    the time you’re donating!). See our [Reviewer Guidelines](reviewer_guidelines.html#reviewer-guidelines)
    for more information.'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评审人员（其他开发人员和感兴趣的社区成员）将对您的Pull Request(PR)编写行内和/或常规评论，以帮助您改进其实现、文档和风格。项目中的每个开发人员都要进行代码审查，我们认为这是友好对话，我们都从中学到了东西，并且整体的代码质量得到了提高。因此，请不要让审查使您不敢贡献：它的唯一目的是提高项目的质量，而不是批评（我们非常感谢您愿意捐赠时间！）。有关更多信息，请参阅我们的[评审人准则](reviewer_guidelines.html#reviewer-guidelines)。
- en: To update your PR, make your changes on your local repository, commit, **run
    tests, and only if they succeed** push to your fork. As soon as those changes
    are pushed up (to the same branch as before) the PR will update automatically.
    If you have no idea how to fix the test failures, you may push your changes anyway
    and ask for help in a PR comment.
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要更新您的PR，在本地仓库上进行更改，提交，运行测试，并且只有测试通过时才推送到您的分支。当这些更改被推送上去（到与之前相同的分支上）时，PR将自动更新。如果对于如何修复测试失败没有任何想法，您仍然可以推送更改并在PR评论中寻求帮助。
- en: Various continuous integration (CI) services are triggered after each PR update
    to build the code, run unit tests, measure code coverage and check coding style
    of your branch. The CI tests must pass before your PR can be merged. If CI fails,
    you can find out why by clicking on the “failed” icon (red cross) and inspecting
    the build and test log. To avoid overuse and waste of this resource, [test your
    work](development_environment.html#recommended-development-setup) locally before
    committing.
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次PR更新后，会触发各种持续集成（CI）服务来构建代码，运行单元测试，测量代码覆盖率和检查分支的编码风格。在合并您的PR之前，CI测试必须通过。如果CI失败，您可以点击“失败”图标（红叉）查看构建和测试日志，找出失败的原因。为了避免滥用和浪费这些资源，在提交之前，请在本地进行[测试工作](development_environment.html#recommended-development-setup)。
- en: A PR must be **approved** by at least one core team member before merging. Approval
    means the core team member has carefully reviewed the changes, and the PR is ready
    for merging.
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在合并之前，PR必须由至少一个核心团队成员**批准**。批准意味着核心团队成员仔细审查了更改，并且PR已经准备好进行合并。
- en: Document changes
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文档更改
- en: Beyond changes to a functions docstring and possible description in the general
    documentation, if your change introduces any user-facing modifications they may
    need to be mentioned in the release notes. To add your change to the release notes,
    you need to create a short file with a summary and place it in `doc/release/upcoming_changes`.
    The file `doc/release/upcoming_changes/README.rst` details the format and filename
    conventions.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了对函数docstring的更改和总体文档中的可能描述之外，如果您的更改引入了任何面向用户的修改，可能需要在发布说明中提到。要将您的更改添加到发布说明中，您需要创建一个简短的文件概述，并将其放置在`doc/release/upcoming_changes`目录中。文件`doc/release/upcoming_changes/README.rst`详细说明了格式和文件名约定。
- en: If your change introduces a deprecation, make sure to discuss this first on
    GitHub or the mailing list first. If agreement on the deprecation is reached,
    follow [NEP 23 deprecation policy](https://numpy.org/neps/nep-0023-backwards-compatibility.html#nep23
    "(in NumPy Enhancement Proposals)") to add the deprecation.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Cross referencing issues
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the PR relates to any issues, you can add the text `xref gh-xxxx` where `xxxx`
    is the number of the issue to github comments. Likewise, if the PR solves an issue,
    replace the `xref` with `closes`, `fixes` or any of the other flavors [github
    accepts](https://help.github.com/en/articles/closing-issues-using-keywords).
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the source code, be sure to preface any issue or PR reference with `gh-xxxx`.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For a more detailed discussion, read on and follow the links at the bottom of
    this page.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: Divergence between `upstream/main` and your feature branch
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If GitHub indicates that the branch of your Pull Request can no longer be merged
    automatically, you have to incorporate changes that have been made since you started
    into your branch. Our recommended way to do this is to [rebase on main](development_workflow.html#rebasing-on-main).
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '### Guidelines'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: All code should have tests (see [test coverage](#test-coverage) below for more
    details).
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All code should be [documented](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard).
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No changes are ever committed without review and approval by a core team member.
    Please ask politely on the PR or on the [mailing list](https://mail.python.org/mailman/listinfo/numpy-discussion)
    if you get no response to your pull request within a week.  ### Stylistic Guidelines'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set up your editor to follow [PEP 8](https://www.python.org/dev/peps/pep-0008/)
    (remove trailing white space, no tabs, etc.). Check code with pyflakes / flake8.
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use NumPy data types instead of strings (`np.uint8` instead of `"uint8"`).
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use the following import conventions:'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: For C code, see [NEP 45](https://numpy.org/neps/nep-0045-c_style_guide.html#nep45
    "(in NumPy Enhancement Proposals)").
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test coverage
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Pull requests (PRs) that modify code should either have new tests, or modify
    existing tests to fail before the PR and pass afterwards. You should [run the
    tests](development_environment.html#development-environment) before pushing a
    PR.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: 'Running NumPy’s test suite locally requires some additional packages, such
    as `pytest` and `hypothesis`. The additional testing dependencies are listed in
    `test_requirements.txt` in the top-level directory, and can conveniently be installed
    with:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Tests for a module should ideally cover all code in that module, i.e., statement
    coverage should be at 100%.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: 'To measure the test coverage, run:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This will create a report in `html` format at `build/coverage`, which can be
    viewed with your browser, e.g.:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '### Building docs'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: 'To build the HTML documentation, use:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: You can also run `make` from the `doc` directory. `make help` lists all targets.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: To get the appropriate dependencies and other requirements, see [Building the
    NumPy API and reference docs](howto_build_docs.html#howto-build-docs).
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: Fixing Warnings
  id: totrans-203
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '“citation not found: R###” There is probably an underscore after a reference
    in the first line of a docstring (e.g. [1]_). Use this method to find the source
    file: $ cd doc/build; grep -rin R####'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “Duplicate citation R###, other instance in…”” There is probably a [2] without
    a [1] in one of the docstrings
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Divergence between `upstream/main` and your feature branch
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If GitHub indicates that the branch of your Pull Request can no longer be merged
    automatically, you have to incorporate changes that have been made since you started
    into your branch. Our recommended way to do this is to [rebase on main](development_workflow.html#rebasing-on-main).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: '### Guidelines'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: All code should have tests (see [test coverage](#test-coverage) below for more
    details).
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All code should be [documented](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard).
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No changes are ever committed without review and approval by a core team member.
    Please ask politely on the PR or on the [mailing list](https://mail.python.org/mailman/listinfo/numpy-discussion)
    if you get no response to your pull request within a week.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Stylistic Guidelines'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: Set up your editor to follow [PEP 8](https://www.python.org/dev/peps/pep-0008/)
    (remove trailing white space, no tabs, etc.). Check code with pyflakes / flake8.
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use NumPy data types instead of strings (`np.uint8` instead of `"uint8"`).
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use the following import conventions:'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: For C code, see [NEP 45](https://numpy.org/neps/nep-0045-c_style_guide.html#nep45
    "(in NumPy Enhancement Proposals)").
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test coverage
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Pull requests (PRs) that modify code should either have new tests, or modify
    existing tests to fail before the PR and pass afterwards. You should [run the
    tests](development_environment.html#development-environment) before pushing a
    PR.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: 'Running NumPy’s test suite locally requires some additional packages, such
    as `pytest` and `hypothesis`. The additional testing dependencies are listed in
    `test_requirements.txt` in the top-level directory, and can conveniently be installed
    with:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Tests for a module should ideally cover all code in that module, i.e., statement
    coverage should be at 100%.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: 'To measure the test coverage, run:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'This will create a report in `html` format at `build/coverage`, which can be
    viewed with your browser, e.g.:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '### Building docs'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: 'To build the HTML documentation, use:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: You can also run `make` from the `doc` directory. `make help` lists all targets.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: To get the appropriate dependencies and other requirements, see [Building the
    NumPy API and reference docs](howto_build_docs.html#howto-build-docs).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: Fixing Warnings
  id: totrans-232
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '“citation not found: R###” There is probably an underscore after a reference
    in the first line of a docstring (e.g. [1]_). Use this method to find the source
    file: $ cd doc/build; grep -rin R####'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “Duplicate citation R###, other instance in…”” There is probably a [2] without
    a [1] in one of the docstrings
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “重复引用 R###，其他实例在…” 可能有一个 [2] 而没有 [1] 在其中的一个文档字符串中
- en: Fixing Warnings
  id: totrans-235
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 修复警告
- en: '“citation not found: R###” There is probably an underscore after a reference
    in the first line of a docstring (e.g. [1]_). Use this method to find the source
    file: $ cd doc/build; grep -rin R####'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “引用未找到：R###” 第一行的文档字符串中可能有一个引用后面有下划线 (e.g. [1]_)。使用以下方法来找到源文件：$ cd doc/build;
    grep -rin R####
- en: “Duplicate citation R###, other instance in…”” There is probably a [2] without
    a [1] in one of the docstrings
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “重复引用 R###，其他实例在…” 可能有一个 [2] 而没有 [1] 在其中的一个文档字符串中
- en: Development process - details
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开发流程 - 详细信息
- en: The rest of the story
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 故事的余下部分
- en: '[Git Basics](gitwash/index.html)'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Git 基础知识](gitwash/index.html)'
- en: '[Install git](gitwash/git_intro.html)'
  id: totrans-241
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[安装 git](gitwash/git_intro.html)'
- en: '[Get the local copy of the code](gitwash/following_latest.html)'
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[获取代码的本地副本](gitwash/following_latest.html)'
- en: '[Updating the code](gitwash/following_latest.html#updating-the-code)'
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[更新代码](gitwash/following_latest.html#updating-the-code)'
- en: '[Setting up git for NumPy development](gitwash/development_setup.html)'
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[为 NumPy 开发设置 git](gitwash/development_setup.html)'
- en: '[Git configuration](gitwash/configure_git.html)'
  id: totrans-245
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Git 配置](gitwash/configure_git.html)'
- en: '[Two and three dots in difference specs](gitwash/dot2_dot3.html)'
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[差异规范中的两个和三个点](gitwash/dot2_dot3.html)'
- en: '[Additional Git resources](gitwash/git_resources.html)'
  id: totrans-247
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他 Git 资源](gitwash/git_resources.html)'
- en: '[Setting up and using your development environment](development_environment.html)'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[设置和使用您的开发环境](development_environment.html)'
- en: '[Recommended development setup](development_environment.html#recommended-development-setup)'
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[推荐的开发环境设置](development_environment.html#recommended-development-setup)'
- en: '[Using virtual environments](development_environment.html#using-virtual-environments)'
  id: totrans-250
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用虚拟环境](development_environment.html#using-virtual-environments)'
- en: '[Testing builds](development_environment.html#testing-builds)'
  id: totrans-251
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[测试构建](development_environment.html#testing-builds)'
- en: '[Other build options](development_environment.html#other-build-options)'
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[其他构建选项](development_environment.html#other-build-options)'
- en: '[Running tests](development_environment.html#running-tests)'
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[运行测试](development_environment.html#running-tests)'
- en: '[Running Linting](development_environment.html#running-linting)'
  id: totrans-254
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[运行代码检查](development_environment.html#running-linting)'
- en: '[Rebuilding & cleaning the workspace](development_environment.html#rebuilding-cleaning-the-workspace)'
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[重建和清理工作区](development_environment.html#rebuilding-cleaning-the-workspace)'
- en: '[Debugging](development_environment.html#debugging)'
  id: totrans-256
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[调试](development_environment.html#debugging)'
- en: '[Understanding the code & getting started](development_environment.html#understanding-the-code-getting-started)'
  id: totrans-257
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[理解代码和入门](development_environment.html#understanding-the-code-getting-started)'
- en: '[Building the NumPy API and reference docs](howto_build_docs.html)'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[构建 NumPy API 和参考文档](howto_build_docs.html)'
- en: '[Development environments](howto_build_docs.html#development-environments)'
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开发环境](howto_build_docs.html#development-environments)'
- en: '[Prerequisites](howto_build_docs.html#prerequisites)'
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[先决条件](howto_build_docs.html#prerequisites)'
- en: '[Instructions](howto_build_docs.html#instructions)'
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[说明](howto_build_docs.html#instructions)'
- en: '[Development workflow](development_workflow.html)'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开发工作流程](development_workflow.html)'
- en: '[Basic workflow](development_workflow.html#basic-workflow)'
  id: totrans-263
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[基本工作流程](development_workflow.html#basic-workflow)'
- en: '[Additional things you might want to do](development_workflow.html#additional-things-you-might-want-to-do)'
  id: totrans-264
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[您可能想要做的其他事情](development_workflow.html#additional-things-you-might-want-to-do)'
- en: '[Advanced debugging tools](development_advanced_debugging.html)'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[高级调试工具](development_advanced_debugging.html)'
- en: '[Finding C errors with additional tooling](development_advanced_debugging.html#finding-c-errors-with-additional-tooling)'
  id: totrans-266
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用其他工具寻找 C 错误](development_advanced_debugging.html#finding-c-errors-with-additional-tooling)'
- en: '[Reviewer guidelines](reviewer_guidelines.html)'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[审核者指南](reviewer_guidelines.html)'
- en: '[Who can be a reviewer?](reviewer_guidelines.html#who-can-be-a-reviewer)'
  id: totrans-268
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[谁可以成为审核者？](reviewer_guidelines.html#who-can-be-a-reviewer)'
- en: '[Communication Guidelines](reviewer_guidelines.html#communication-guidelines)'
  id: totrans-269
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[沟通指南](reviewer_guidelines.html#communication-guidelines)'
- en: '[Reviewer Checklist](reviewer_guidelines.html#reviewer-checklist)'
  id: totrans-270
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[审核者清单](reviewer_guidelines.html#reviewer-checklist)'
- en: '[Standard replies for reviewing](reviewer_guidelines.html#standard-replies-for-reviewing)'
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[审核的标准回复](reviewer_guidelines.html#standard-replies-for-reviewing)'
- en: '[NumPy benchmarks](../benchmarking.html)'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NumPy 基准测试](../benchmarking.html)'
- en: '[Usage](../benchmarking.html#usage)'
  id: totrans-273
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[用法](../benchmarking.html#usage)'
- en: '[Benchmarking versions](../benchmarking.html#benchmarking-versions)'
  id: totrans-274
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[基准测试版本](../benchmarking.html#benchmarking-versions)'
- en: '[Writing benchmarks](../benchmarking.html#writing-benchmarks)'
  id: totrans-275
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[编写基准测试](../benchmarking.html#writing-benchmarks)'
- en: '[NumPy C style guide](https://numpy.org/neps/nep-0045-c_style_guide.html)'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[NumPy C 代码风格指南](https://numpy.org/neps/nep-0045-c_style_guide.html)'
- en: '[For downstream package authors](depending_on_numpy.html)'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Understanding NumPy’s versioning and API/ABI stability](depending_on_numpy.html#understanding-numpy-s-versioning-and-api-abi-stability)'
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Testing against the NumPy main branch or pre-releases](depending_on_numpy.html#testing-against-the-numpy-main-branch-or-pre-releases)'
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Adding a dependency on NumPy](depending_on_numpy.html#adding-a-dependency-on-numpy)'
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Releasing a version](releasing.html)'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to prepare a release](releasing.html#how-to-prepare-a-release)'
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Step-by-step directions](releasing.html#step-by-step-directions)'
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Branch walkthrough](releasing.html#branch-walkthrough)'
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NumPy governance](governance/index.html)'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NumPy project governance and decision-making](governance/governance.html)'
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to contribute to the NumPy documentation](howto-docs.html)'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Documentation team meetings](howto-docs.html#documentation-team-meetings)'
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What’s needed](howto-docs.html#what-s-needed)'
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributing fixes](howto-docs.html#contributing-fixes)'
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributing new pages](howto-docs.html#contributing-new-pages)'
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributing indirectly](howto-docs.html#contributing-indirectly)'
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Documentation style](howto-docs.html#documentation-style)'
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Documentation reading](howto-docs.html#documentation-reading)'
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: NumPy-specific workflow is in [numpy-development-workflow](development_workflow.html#development-workflow).
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
