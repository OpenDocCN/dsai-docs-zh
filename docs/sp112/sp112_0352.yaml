- en: scipy.ndimage.generic_filter1d
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.ndimage.generic_filter1d
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter1d.html#scipy.ndimage.generic_filter1d](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter1d.html#scipy.ndimage.generic_filter1d)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter1d.html#scipy.ndimage.generic_filter1d](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.generic_filter1d.html#scipy.ndimage.generic_filter1d)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Calculate a 1-D filter along the given axis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算给定轴上的1-D滤波器。
- en: '[`generic_filter1d`](#scipy.ndimage.generic_filter1d "scipy.ndimage.generic_filter1d")
    iterates over the lines of the array, calling the given function at each line.
    The arguments of the line are the input line, and the output line. The input and
    output lines are 1-D double arrays. The input line is extended appropriately according
    to the filter size and origin. The output line must be modified in-place with
    the result.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[`generic_filter1d`](#scipy.ndimage.generic_filter1d "scipy.ndimage.generic_filter1d")迭代数组的行，每行调用给定的函数。行的参数是输入行和输出行。输入和输出行是1-D双精度数组。根据滤波器大小和原点适当地扩展输入行。输出行必须通过结果就地修改。'
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**input**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**input**类似数组'
- en: The input array.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**function**{callable, scipy.LowLevelCallable}'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**function**{可调用对象，scipy.LowLevelCallable}'
- en: Function to apply along given axis.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定轴上应用的函数。
- en: '**filter_size**scalar'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**filter_size**标量'
- en: Length of the filter.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 滤波器的长度。
- en: '**axis**int, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**整数，可选'
- en: The axis of *input* along which to calculate. Default is -1.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*input*的轴沿其计算的轴。默认为-1。'
- en: '**output**array or dtype, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**output**数组或dtype，可选'
- en: The array in which to place the output, or the dtype of the returned array.
    By default an array of the same dtype as input will be created.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 用于放置输出的数组或返回数组的dtype。默认情况下，将创建与输入相同dtype的数组。
- en: '**mode**{‘reflect’, ‘constant’, ‘nearest’, ‘mirror’, ‘wrap’}, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**{‘reflect’，‘constant’，‘nearest’，‘mirror’，‘wrap’}，可选'
- en: 'The *mode* parameter determines how the input array is extended beyond its
    boundaries. Default is ‘reflect’. Behavior for each valid value is as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*mode*参数确定如何扩展输入数组超出其边界。默认为“reflect”。每个有效值的行为如下：'
- en: ‘reflect’ (*d c b a | a b c d | d c b a*)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ‘reflect’（*d c b a | a b c d | d c b a*）
- en: The input is extended by reflecting about the edge of the last pixel. This mode
    is also sometimes referred to as half-sample symmetric.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过关于最后一个像素边缘的反射来扩展。有时也称为半样本对称。
- en: ‘constant’ (*k k k k | a b c d | k k k k*)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: ‘constant’（*k k k k | a b c d | k k k k*）
- en: The input is extended by filling all values beyond the edge with the same constant
    value, defined by the *cval* parameter.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过用由*cval*参数定义的相同常量值填充超出边缘的所有值来扩展。
- en: ‘nearest’ (*a a a a | a b c d | d d d d*)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ‘nearest’（*a a a a | a b c d | d d d d*）
- en: The input is extended by replicating the last pixel.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过复制最后一个像素来扩展。
- en: ‘mirror’ (*d c b | a b c d | c b a*)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ‘mirror’（*d c b | a b c d | c b a*）
- en: The input is extended by reflecting about the center of the last pixel. This
    mode is also sometimes referred to as whole-sample symmetric.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过关于最后一个像素中心的反射来扩展。有时也称为整体样本对称。
- en: ‘wrap’ (*a b c d | a b c d | a b c d*)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: ‘wrap’（*a b c d | a b c d | a b c d*）
- en: The input is extended by wrapping around to the opposite edge.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 输入通过环绕到相反边缘来扩展。
- en: 'For consistency with the interpolation functions, the following mode names
    can also be used:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与插值函数保持一致，还可以使用以下模式名称：
- en: ‘grid-mirror’
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-mirror’
- en: This is a synonym for ‘reflect’.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是“reflect”的同义词。
- en: ‘grid-constant’
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-constant’
- en: This is a synonym for ‘constant’.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是“constant”的同义词。
- en: ‘grid-wrap’
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: ‘grid-wrap’
- en: This is a synonym for ‘wrap’.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这是“wrap”的同义词。
- en: '**cval**scalar, optional'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**cval**标量，可选'
- en: Value to fill past edges of input if *mode* is ‘constant’. Default is 0.0.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*mode*为‘constant’，则在输入边缘之外填充值。默认值为0.0。
- en: '**origin**int, optional'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**origin**整数，可选'
- en: Controls the placement of the filter on the input array’s pixels. A value of
    0 (the default) centers the filter over the pixel, with positive values shifting
    the filter to the left, and negative ones to the right.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 控制滤波器放置在输入数组像素上的位置。值为0（默认值）将滤波器居中于像素上，正值将滤波器向左移动，负值向右移动。
- en: '**extra_arguments**sequence, optional'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**extra_arguments**序列，可选'
- en: Sequence of extra positional arguments to pass to passed function.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给传递函数的额外位置参数序列。
- en: '**extra_keywords**dict, optional'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**extra_keywords**字典，可选'
- en: dict of extra keyword arguments to pass to passed function.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给传递函数的额外关键字参数字典。
- en: 'Returns:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**generic_filter1d**ndarray'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**generic_filter1d** ndarray'
- en: Filtered array. Has the same shape as *input*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤后的数组。与*input*具有相同的形状。
- en: Notes
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'This function also accepts low-level callback functions with one of the following
    signatures and wrapped in [`scipy.LowLevelCallable`](scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable"):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数还接受带有以下签名之一的低级回调函数，并且包装在[`scipy.LowLevelCallable`](https://docs.scipy.org/doc/scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable")中：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The calling function iterates over the lines of the input and output arrays,
    calling the callback function at each line. The current line is extended according
    to the border conditions set by the calling function, and the result is copied
    into the array that is passed through `input_line`. The length of the input line
    (after extension) is passed through `input_length`. The callback function should
    apply the filter and store the result in the array passed through `output_line`.
    The length of the output line is passed through `output_length`. `user_data` is
    the data pointer provided to [`scipy.LowLevelCallable`](scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable") as-is.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 调用函数迭代输入和输出数组的各行，并在每行调用回调函数。当前行根据调用函数设定的边界条件进行扩展，并将结果复制到通过`input_line`传递的数组中。输入行的长度（扩展后）通过`input_length`传递。回调函数应用过滤器并将结果存储在通过`output_line`传递的数组中。输出行的长度通过`output_length`传递。`user_data`是作为[`scipy.LowLevelCallable`](https://docs.scipy.org/doc/scipy.LowLevelCallable.html#scipy.LowLevelCallable
    "scipy.LowLevelCallable")提供给数据指针。
- en: The callback function must return an integer error status that is zero if something
    went wrong and one otherwise. If an error occurs, you should normally set the
    python error status with an informative message before returning, otherwise a
    default error message is set by the calling function.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 回调函数必须返回一个整数错误状态，如果出现问题则为零，否则为一。如果发生错误，通常应在返回之前设置带有详细信息的Python错误状态，否则调用函数将设置默认错误消息。
- en: In addition, some other low-level function pointer specifications are accepted,
    but these are for backward compatibility only and should not be used in new code.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还接受其他一些低级功能指针规范，但这些仅用于向后兼容，不应在新代码中使用。
