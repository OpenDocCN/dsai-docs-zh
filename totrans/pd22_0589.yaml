- en: pandas.Categorical.from_codes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Categorical.from_codes.html](https://pandas.pydata.org/docs/reference/api/pandas.Categorical.from_codes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Make a Categorical type from codes and categories or dtype.
  prefs: []
  type: TYPE_NORMAL
- en: This constructor is useful if you already have codes and categories/dtype and
    so do not need the (computation intensive) factorization step, which is usually
    done on the constructor.
  prefs: []
  type: TYPE_NORMAL
- en: If your data does not follow this convention, please use the normal constructor.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**codes**array-like of int'
  prefs: []
  type: TYPE_NORMAL
- en: An integer array, where each integer points to a category in categories or dtype.categories,
    or else is -1 for NaN.
  prefs: []
  type: TYPE_NORMAL
- en: '**categories**index-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The categories for the categorical. Items need to be unique. If the categories
    are not given here, then they must be provided in dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '**ordered**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether or not this categorical is treated as an ordered categorical. If not
    given here or in dtype, the resulting categorical will be unordered.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**CategoricalDtype or “category”, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If [`CategoricalDtype`](pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype"), cannot be used together with categories or ordered.
  prefs: []
  type: TYPE_NORMAL
- en: '**validate**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: If True, validate that the codes are valid for the dtype. If False, don’t validate
    that the codes are valid. Be careful about skipping validation, as invalid codes
    can lead to severe problems, such as segfaults.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 2.1.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
