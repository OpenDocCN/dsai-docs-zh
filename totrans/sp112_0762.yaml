- en: scipy.special.elliprc
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.elliprc.html#scipy.special.elliprc](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.elliprc.html#scipy.special.elliprc)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Degenerate symmetric elliptic integral.
  prefs: []
  type: TYPE_NORMAL
- en: The function RC is defined as [[1]](#rf894d4f64620-1)
  prefs: []
  type: TYPE_NORMAL
- en: \[R_{\mathrm{C}}(x, y) = \frac{1}{2} \int_0^{+\infty} (t + x)^{-1/2} (t + y)^{-1}
    dt = R_{\mathrm{F}}(x, y, y)\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x, y**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Real or complex input parameters. *x* can be any number in the complex plane
    cut along the negative real axis. *y* must be non-zero.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function values
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**R**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Value of the integral. If *y* is real and negative, the Cauchy principal value
    is returned. If both of *x* and *y* are real, the return value is real. Otherwise,
    the return value is complex.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`elliprf`](scipy.special.elliprf.html#scipy.special.elliprf "scipy.special.elliprf")'
  prefs: []
  type: TYPE_NORMAL
- en: Completely-symmetric elliptic integral of the first kind.
  prefs: []
  type: TYPE_NORMAL
- en: '[`elliprd`](scipy.special.elliprd.html#scipy.special.elliprd "scipy.special.elliprd")'
  prefs: []
  type: TYPE_NORMAL
- en: Symmetric elliptic integral of the second kind.
  prefs: []
  type: TYPE_NORMAL
- en: '[`elliprg`](scipy.special.elliprg.html#scipy.special.elliprg "scipy.special.elliprg")'
  prefs: []
  type: TYPE_NORMAL
- en: Completely-symmetric elliptic integral of the second kind.
  prefs: []
  type: TYPE_NORMAL
- en: '[`elliprj`](scipy.special.elliprj.html#scipy.special.elliprj "scipy.special.elliprj")'
  prefs: []
  type: TYPE_NORMAL
- en: Symmetric elliptic integral of the third kind.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'RC is a degenerate case of the symmetric integral RF: `elliprc(x, y) == elliprf(x,
    y, y)`. It is an elementary function rather than an elliptic integral.'
  prefs: []
  type: TYPE_NORMAL
- en: The code implements Carlson’s algorithm based on the duplication theorems and
    series expansion up to the 7th order. [[2]](#rf894d4f64620-2)
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.8.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: B. C. Carlson, ed., Chapter 19 in “Digital Library of Mathematical Functions,”
    NIST, US Dept. of Commerce. [https://dlmf.nist.gov/19.16.E6](https://dlmf.nist.gov/19.16.E6)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: B. C. Carlson, “Numerical computation of real or complex elliptic integrals,”
    Numer. Algorithm, vol. 10, no. 1, pp. 13-26, 1995. [https://arxiv.org/abs/math/9409227](https://arxiv.org/abs/math/9409227)
    [https://doi.org/10.1007/BF02198293](https://doi.org/10.1007/BF02198293)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Basic homogeneity property:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'When the two arguments coincide, the integral is particularly simple:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Another simple case: the first argument vanishes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: When *x* and *y* are both positive, we can express \(R_C(x,y)\) in terms of
    more elementary functions. For the case \(0 \le x < y\),
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: And for the case \(0 \le y < x\),
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
