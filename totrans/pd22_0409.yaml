- en: pandas.DataFrame.to_csv
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Write object to a comma-separated values (csv) file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**path_or_buf**str, path object, file-like object, or None, default None'
  prefs: []
  type: TYPE_NORMAL
- en: String, path object (implementing os.PathLike[str]), or file-like object implementing
    a write() function. If None, the result is returned as a string. If a non-binary
    file object is passed, it should be opened with newline=’’, disabling universal
    newlines. If a binary file object is passed, mode might need to contain a ‘b’.
  prefs: []
  type: TYPE_NORMAL
- en: '**sep**str, default ‘,’'
  prefs: []
  type: TYPE_NORMAL
- en: String of length 1\. Field delimiter for the output file.
  prefs: []
  type: TYPE_NORMAL
- en: '**na_rep**str, default ‘’'
  prefs: []
  type: TYPE_NORMAL
- en: Missing data representation.
  prefs: []
  type: TYPE_NORMAL
- en: '**float_format**str, Callable, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Format string for floating point numbers. If a Callable is given, it takes precedence
    over other numeric formatting parameters, like decimal.
  prefs: []
  type: TYPE_NORMAL
- en: '**columns**sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Columns to write.
  prefs: []
  type: TYPE_NORMAL
- en: '**header**bool or list of str, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Write out the column names. If a list of strings is given it is assumed to be
    aliases for the column names.
  prefs: []
  type: TYPE_NORMAL
- en: '**index**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Write row names (index).
  prefs: []
  type: TYPE_NORMAL
- en: '**index_label**str or sequence, or False, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Column label for index column(s) if desired. If None is given, and header and
    index are True, then the index names are used. A sequence should be given if the
    object uses MultiIndex. If False do not print fields for index names. Use index_label=False
    for easier importing in R.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**{‘w’, ‘x’, ‘a’}, default ‘w’'
  prefs: []
  type: TYPE_NORMAL
- en: 'Forwarded to either open(mode=) or fsspec.open(mode=) to control the file opening.
    Typical values include:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘w’, truncate the file first.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘x’, exclusive creation, failing if the file already exists.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘a’, append to the end of file if it exists.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**encoding**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A string representing the encoding to use in the output file, defaults to ‘utf-8’.
    encoding is not supported if path_or_buf is a non-binary file object.
  prefs: []
  type: TYPE_NORMAL
- en: '**compression**str or dict, default ‘infer’'
  prefs: []
  type: TYPE_NORMAL
- en: 'For on-the-fly compression of the output data. If ‘infer’ and ‘path_or_buf’
    is path-like, then detect compression from the following extensions: ‘.gz’, ‘.bz2’,
    ‘.zip’, ‘.xz’, ‘.zst’, ‘.tar’, ‘.tar.gz’, ‘.tar.xz’ or ‘.tar.bz2’ (otherwise no
    compression). Set to `None` for no compression. Can also be a dict with key `''method''`
    set to one of {`''zip''`, `''gzip''`, `''bz2''`, `''zstd''`, `''xz''`, `''tar''`}
    and other key-value pairs are forwarded to `zipfile.ZipFile`, `gzip.GzipFile`,
    `bz2.BZ2File`, `zstandard.ZstdCompressor`, `lzma.LZMAFile` or `tarfile.TarFile`,
    respectively. As an example, the following could be passed for faster compression
    and to create a reproducible gzip archive: `compression={''method'': ''gzip'',
    ''compresslevel'': 1, ''mtime'': 1}`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.5.0: Added support for .tar files.'
  prefs: []
  type: TYPE_NORMAL
- en: May be a dict with key ‘method’ as compression mode and other entries as additional
    compression options if compression mode is ‘zip’.
  prefs: []
  type: TYPE_NORMAL
- en: Passing compression options as keys in dict is supported for compression modes
    ‘gzip’, ‘bz2’, ‘zstd’, and ‘zip’.
  prefs: []
  type: TYPE_NORMAL
- en: '**quoting**optional constant from csv module'
  prefs: []
  type: TYPE_NORMAL
- en: Defaults to csv.QUOTE_MINIMAL. If you have set a float_format then floats are
    converted to strings and thus csv.QUOTE_NONNUMERIC will treat them as non-numeric.
  prefs: []
  type: TYPE_NORMAL
- en: '**quotechar**str, default ‘"’'
  prefs: []
  type: TYPE_NORMAL
- en: String of length 1\. Character used to quote fields.
  prefs: []
  type: TYPE_NORMAL
- en: '**lineterminator**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The newline character or character sequence to use in the output file. Defaults
    to os.linesep, which depends on the OS in which this method is called (’\n’ for
    linux, ‘\r\n’ for Windows, i.e.).
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.5.0: Previously was line_terminator, changed for consistency
    with read_csv and the standard library ‘csv’ module.'
  prefs: []
  type: TYPE_NORMAL
- en: '**chunksize**int or None'
  prefs: []
  type: TYPE_NORMAL
- en: Rows to write at a time.
  prefs: []
  type: TYPE_NORMAL
- en: '**date_format**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Format string for datetime objects.
  prefs: []
  type: TYPE_NORMAL
- en: '**doublequote**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Control quoting of quotechar inside a field.
  prefs: []
  type: TYPE_NORMAL
- en: '**escapechar**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: String of length 1\. Character used to escape sep and quotechar when appropriate.
  prefs: []
  type: TYPE_NORMAL
- en: '**decimal**str, default ‘.’'
  prefs: []
  type: TYPE_NORMAL
- en: Character recognized as decimal separator. E.g. use ‘,’ for European data.
  prefs: []
  type: TYPE_NORMAL
- en: '**errors**str, default ‘strict’'
  prefs: []
  type: TYPE_NORMAL
- en: Specifies how encoding and decoding errors are to be handled. See the errors
    argument for [`open()`](https://docs.python.org/3/library/functions.html#open
    "(in Python v3.12)") for a full list of options.
  prefs: []
  type: TYPE_NORMAL
- en: '**storage_options**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Extra options that make sense for a particular storage connection, e.g. host,
    port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded
    to `urllib.request.Request` as header options. For other URLs (e.g. starting with
    “s3://”, and “gcs://”) the key-value pairs are forwarded to `fsspec.open`. Please
    see `fsspec` and `urllib` for more details, and for more examples on storage options
    refer [here](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: None or str
  prefs: []
  type: TYPE_NORMAL
- en: If path_or_buf is None, returns the resulting csv format as a string. Otherwise
    returns None.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv`](pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  prefs: []
  type: TYPE_NORMAL
- en: Load a CSV file into a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_excel`](pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel "pandas.DataFrame.to_excel")'
  prefs: []
  type: TYPE_NORMAL
- en: Write DataFrame to an Excel file.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Create ‘out.csv’ containing ‘df’ without indices
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Create ‘out.zip’ containing ‘out.csv’
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'To write a csv file to a new folder or nested folder you will first need to
    create it using either Pathlib or os:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
