- en: numpy.allclose
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.allclose
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.allclose.html](https://numpy.org/doc/1.26/reference/generated/numpy.allclose.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.allclose.html](https://numpy.org/doc/1.26/reference/generated/numpy.allclose.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Returns True if two arrays are element-wise equal within a tolerance.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果两个数组在容差范围内逐元素相等，则返回True。
- en: The tolerance values are positive, typically very small numbers. The relative
    difference (*rtol* * abs(*b*)) and the absolute difference *atol* are added together
    to compare against the absolute difference between *a* and *b*.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 容差值为正，通常是非常小的数字。相对差异（*rtol* * abs(*b*)）和绝对差异*atol*相加要与*a*和*b*之间的绝对差异进行比较。
- en: NaNs are treated as equal if they are in the same place and if `equal_nan=True`.
    Infs are treated as equal if they are in the same place and of the same sign in
    both arrays.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果NaN位于相同位置且`equal_nan=True`，则将其视为相等。如果Infs位于相同位置且两个数组中的符号相同，则将其视为相等。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a, b**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**a, b**类似数组'
- en: Input arrays to compare.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要比较的输入数组。
- en: '**rtol**float'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**rtol**浮点数'
- en: The relative tolerance parameter (see Notes).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 相对容差参数（见注释）。
- en: '**atol**float'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**atol**浮点数'
- en: The absolute tolerance parameter (see Notes).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 绝对容差参数（见注释）。
- en: '**equal_nan**bool'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**equal_nan**布尔值'
- en: Whether to compare NaN’s as equal. If True, NaN’s in *a* will be considered
    equal to NaN’s in *b* in the output array.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 是否将NaN视为相等。如果为True，则输出数组中的NaN将被视为与*b*中的NaN相等。
- en: New in version 1.10.0.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.10.0 中新增。
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**allclose**bool'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**allclose**布尔值'
- en: Returns True if the two arrays are equal within the given tolerance; False otherwise.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果两个数组在给定的容差范围内相等，则返回True；否则返回False。
- en: See also
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`isclose`](numpy.isclose.html#numpy.isclose "numpy.isclose"), [`all`](numpy.all.html#numpy.all
    "numpy.all"), [`any`](numpy.any.html#numpy.any "numpy.any"), [`equal`](numpy.equal.html#numpy.equal
    "numpy.equal")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`isclose`](numpy.isclose.html#numpy.isclose "numpy.isclose")，[`all`](numpy.all.html#numpy.all
    "numpy.all")，[`any`](numpy.any.html#numpy.any "numpy.any")，[`equal`](numpy.equal.html#numpy.equal
    "numpy.equal")'
- en: Notes
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: If the following equation is element-wise True, then allclose returns True.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果以下方程逐元素为True，则allclose返回True。
- en: absolute(*a* - *b*) <= (*atol* + *rtol* * absolute(*b*))
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: absolute(*a* - *b*) <= (*atol* + *rtol* * absolute(*b*))
- en: The above equation is not symmetric in *a* and *b*, so that `allclose(a, b)`
    might be different from `allclose(b, a)` in some rare cases.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 上述公式在*a*和*b*中不对称，因此`allclose(a, b)`在一些罕见情况下可能与`allclose(b, a)`不同。
- en: The comparison of *a* and *b* uses standard broadcasting, which means that *a*
    and *b* need not have the same shape in order for `allclose(a, b)` to evaluate
    to True. The same is true for [`equal`](numpy.equal.html#numpy.equal "numpy.equal")
    but not [`array_equal`](numpy.array_equal.html#numpy.array_equal "numpy.array_equal").
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对*a*和*b*的比较使用标准广播，这意味着`allclose(a, b)`为True时，*a*和*b*不需要具有相同的形状。对于[`equal`](numpy.equal.html#numpy.equal
    "numpy.equal")也是如此，但对于[`array_equal`](numpy.array_equal.html#numpy.array_equal
    "numpy.array_equal")则不是。
- en: '[`allclose`](#numpy.allclose "numpy.allclose") is not defined for non-numeric
    data types. *bool* is considered a numeric data-type for this purpose.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`allclose`](#numpy.allclose "numpy.allclose")对非数值数据类型未定义。对于此目的，*bool*被视为数值数据类型。'
- en: Examples
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
