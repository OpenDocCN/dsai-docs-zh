["```py\nStyler.apply(func, axis=0, subset=None, **kwargs)\n```", "```py\n>>> def highlight_max(x, color):\n...     return np.where(x == np.nanmax(x.to_numpy()), f\"color: {color};\", None)\n>>> df = pd.DataFrame(np.random.randn(5, 2), columns=[\"A\", \"B\"])\n>>> df.style.apply(highlight_max, color='red')  \n>>> df.style.apply(highlight_max, color='blue', axis=1)  \n>>> df.style.apply(highlight_max, color='green', axis=None) \n```", "```py\n>>> df.style.apply(highlight_max, color='red', subset=\"A\")\n... \n>>> df.style.apply(highlight_max, color='red', subset=[\"A\", \"B\"])\n... \n```", "```py\n>>> df.style.apply(highlight_max, color='red', subset=([0, 1, 2], slice(None)))\n... \n>>> df.style.apply(highlight_max, color='red', subset=(slice(0, 5, 2), \"A\"))\n... \n```", "```py\n>>> df = pd.DataFrame([[1, 2], [3, 4], [4, 6]], index=[\"A1\", \"A2\", \"Total\"])\n>>> total_style = pd.Series(\"font-weight: bold;\", index=[\"Total\"])\n>>> df.style.apply(lambda s: total_style) \n```"]