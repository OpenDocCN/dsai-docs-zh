- en: pandas.read_sql
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.read_sql
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.read_sql.html](https://pandas.pydata.org/docs/reference/api/pandas.read_sql.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.read_sql.html](https://pandas.pydata.org/docs/reference/api/pandas.read_sql.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Read SQL query or database table into a DataFrame.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SQL 查询或数据库表读入 DataFrame。
- en: This function is a convenience wrapper around `read_sql_table` and `read_sql_query`
    (for backward compatibility). It will delegate to the specific function depending
    on the provided input. A SQL query will be routed to `read_sql_query`, while a
    database table name will be routed to `read_sql_table`. Note that the delegated
    function might have more specific notes about their functionality not listed here.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数是 `read_sql_table` 和 `read_sql_query` 的便利包装器（用于向后兼容）。它将根据提供的输入委托给特定函数。SQL
    查询将被路由到 `read_sql_query`，而数据库表名将被路由到 `read_sql_table`。请注意，被委托的函数可能有关于其功能的更具体说明，这里未列出。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**sql**str or SQLAlchemy Selectable (select or text object)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**sql**str 或 SQLAlchemy Selectable（select 或 text 对象）'
- en: SQL query to be executed or a table name.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行的 SQL 查询或表名。
- en: '**con**ADBC Connection, SQLAlchemy connectable, str, or sqlite3 connection'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**con**ADBC 连接、SQLAlchemy 可连接对象、str 或 sqlite3 连接'
- en: ADBC provides high performance I/O with native type support, where available.
    Using SQLAlchemy makes it possible to use any DB supported by that library. If
    a DBAPI2 object, only sqlite3 is supported. The user is responsible for engine
    disposal and connection closure for the ADBC connection and SQLAlchemy connectable;
    str connections are closed automatically. See [here](https://docs.sqlalchemy.org/en/20/core/connections.html).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ADBC 提供了具有本机类型支持的高性能 I/O，如果可用。使用 SQLAlchemy 可以使用该库支持的任何 DB。如果是 DBAPI2 对象，则仅支持
    sqlite3。用户负责处理 ADBC 连接和 SQLAlchemy 可连接对象的引擎处理和连接关闭；str 连接会自动关闭。请参阅 [这里](https://docs.sqlalchemy.org/en/20/core/connections.html)。
- en: '**index_col**str or list of str, optional, default: None'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**index_col**str 或 str 列表，可选，默认值：None'
- en: Column(s) to set as index(MultiIndex).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置为索引（MultiIndex）的列。
- en: '**coerce_float**bool, default True'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**coerce_float**布尔值，默认为 True'
- en: Attempts to convert values of non-string, non-numeric objects (like decimal.Decimal)
    to floating point, useful for SQL result sets.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试将非字符串、非数值对象（如 decimal.Decimal）的值转换为浮点数，对于 SQL 结果集很有用。
- en: '**params**list, tuple or dict, optional, default: None'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**params**列表、元组或字典，可选，默认值：None'
- en: 'List of parameters to pass to execute method. The syntax used to pass parameters
    is database driver dependent. Check your database driver documentation for which
    of the five syntax styles, described in PEP 249’s paramstyle, is supported. Eg.
    for psycopg2, uses %(name)s so use params={‘name’ : ‘value’}.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '要传递给 execute 方法的参数列表。用于传递参数的语法取决于数据库驱动程序。检查数据库驱动程序文档，了解 PEP 249 中描述的五种语法样式中的哪一种受支持。例如，对于
    psycopg2，使用 %(name)s，因此使用 params={‘name’ : ‘value’}。'
- en: '**parse_dates**list or dict, default: None'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**parse_dates**列表或字典，默认值：None'
- en: List of column names to parse as dates.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要解析为日期的列名列表。
- en: 'Dict of `{column_name: format string}` where format string is strftime compatible
    in case of parsing string times, or is one of (D, s, ns, ms, us) in case of parsing
    integer timestamps.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{column_name: format string}` 的字典，其中 format string 在解析字符串时间时与 strftime 兼容，或者在解析整数时间戳时是
    (D, s, ns, ms, us) 之一。'
- en: 'Dict of `{column_name: arg dict}`, where the arg dict corresponds to the keyword
    arguments of [`pandas.to_datetime()`](pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") Especially useful with databases without native Datetime
    support, such as SQLite.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{column_name: arg dict}` 的字典，其中 arg dict 对应于 [`pandas.to_datetime()`](pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") 的关键字参数。在没有本地日期时间支持的数据库中特别有用，例如 SQLite。'
- en: '**columns**list, default: None'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**columns**列表，默认值：None'
- en: List of column names to select from SQL table (only used when reading a table).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 SQL 表中选择的列名列表（仅在读取表时使用）。
- en: '**chunksize**int, default None'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**chunksize**int, 默认为 None'
- en: If specified, return an iterator where chunksize is the number of rows to include
    in each chunk.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定，返回一个迭代器，其中 chunksize 是每个块中要包含的行数。
- en: '**dtype_backend**{‘numpy_nullable’, ‘pyarrow’}, default ‘numpy_nullable’'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype_backend**{‘numpy_nullable’, ‘pyarrow’}, 默认为 ‘numpy_nullable’'
- en: 'Back-end data type applied to the resultant [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (still experimental). Behaviour is as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 应用于结果 [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    的后端数据类型（仍处于实验阶段）。行为如下：
- en: '`"numpy_nullable"`: returns nullable-dtype-backed [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (default).'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"numpy_nullable"`：返回支持可空数据类型的 [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")（默认）。'
- en: '`"pyarrow"`: returns pyarrow-backed nullable [`ArrowDtype`](pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrame.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"pyarrow"`：返回基于 pyarrow 的可空 [`ArrowDtype`](pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrame。'
- en: New in version 2.0.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本 2.0 开始。
- en: '**dtype**Type name or dict of columns'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**类型名称或列的字典'
- en: 'Data type for data or columns. E.g. np.float64 or {‘a’: np.float64, ‘b’: np.int32,
    ‘c’: ‘Int64’}. The argument is ignored if a table is passed instead of a query.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 数据或列的数据类型。例如，np.float64 或 {'a'：np.float64，'b'：np.int32，'c'：'Int64'}。如果传递的是表而不是查询，则忽略该参数。
- en: New in version 2.0.0.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本 2.0.0 开始。
- en: 'Returns:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: DataFrame or Iterator[DataFrame]
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame 或 Iterator[DataFrame]
- en: See also
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`read_sql_table`](pandas.read_sql_table.html#pandas.read_sql_table "pandas.read_sql_table")'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_sql_table`](pandas.read_sql_table.html#pandas.read_sql_table "pandas.read_sql_table")'
- en: Read SQL database table into a DataFrame.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SQL 数据库表读入 DataFrame。
- en: '[`read_sql_query`](pandas.read_sql_query.html#pandas.read_sql_query "pandas.read_sql_query")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`read_sql_query`](pandas.read_sql_query.html#pandas.read_sql_query "pandas.read_sql_query")'
- en: Read SQL query into a DataFrame.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 将 SQL 查询读入 DataFrame。
- en: Examples
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Read data from SQL via either a SQL query or a SQL tablename. When using a SQLite
    database only SQL queries are accepted, providing only the SQL tablename will
    result in an error.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 SQL 查询或 SQL 表名从 SQL 中读取数据。仅在使用 SQLite 数据库时，才接受 SQL 查询，仅提供 SQL 表名将导致错误。
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Apply date parsing to columns through the `parse_dates` argument The `parse_dates`
    argument calls `pd.to_datetime` on the provided columns. Custom argument values
    for applying `pd.to_datetime` on a column are specified via a dictionary format:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 `parse_dates` 参数对列应用日期解析 `parse_dates` 参数在提供的列上调用 `pd.to_datetime`。在字典格式中指定对列应用
    `pd.to_datetime` 的自定义参数值：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'New in version 2.2.0: pandas now supports reading via ADBC drivers'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本 2.2.0 开始：pandas 现在支持通过 ADBC 驱动程序进行读取
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
