- en: pandas.DataFrame.map
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.map.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.map.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Apply a function to a Dataframe elementwise.
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 2.1.0: DataFrame.applymap was deprecated and renamed to DataFrame.map.'
  prefs: []
  type: TYPE_NORMAL
- en: This method applies a function that accepts and returns a scalar to every element
    of a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**callable'
  prefs: []
  type: TYPE_NORMAL
- en: Python function, returns a single value from a single value.
  prefs: []
  type: TYPE_NORMAL
- en: '**na_action**{None, ‘ignore’}, default None'
  prefs: []
  type: TYPE_NORMAL
- en: If ‘ignore’, propagate NaN values, without passing them to func.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: Additional keyword arguments to pass as keywords arguments to func.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Transformed DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.apply`](pandas.DataFrame.apply.html#pandas.DataFrame.apply "pandas.DataFrame.apply")'
  prefs: []
  type: TYPE_NORMAL
- en: Apply a function along input axis of DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.replace`](pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace")'
  prefs: []
  type: TYPE_NORMAL
- en: Replace values given in to_replace with value.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.map`](pandas.Series.map.html#pandas.Series.map "pandas.Series.map")'
  prefs: []
  type: TYPE_NORMAL
- en: Apply a function elementwise on a Series.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Like Series.map, NA values can be ignored:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'It is also possible to use map with functions that are not lambda functions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Note that a vectorized version of func often exists, which will be much faster.
    You could square each number elementwise.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: But it’s better to avoid map in that case.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
