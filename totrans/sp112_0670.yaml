- en: scipy.signal.czt
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/czt-function.html#scipy.signal.czt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/czt-function.html#scipy.signal.czt)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the frequency response around a spiral in the Z plane.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array'
  prefs: []
  type: TYPE_NORMAL
- en: The signal to transform.
  prefs: []
  type: TYPE_NORMAL
- en: '**m**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The number of output points desired. Default is the length of the input data.
  prefs: []
  type: TYPE_NORMAL
- en: '**w**complex, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The ratio between points in each step. This must be precise or the accumulated
    error will degrade the tail of the output sequence. Defaults to equally spaced
    points around the entire unit circle.
  prefs: []
  type: TYPE_NORMAL
- en: '**a**complex, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The starting point in the complex plane. Default is 1+0j.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis over which to compute the FFT. If not given, the last axis is used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: An array of the same dimensions as *x*, but with the length of the transformed
    axis set to *m*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`CZT`](scipy.signal.CZT.html#scipy.signal.CZT "scipy.signal.CZT")'
  prefs: []
  type: TYPE_NORMAL
- en: Class that creates a callable chirp z-transform function.
  prefs: []
  type: TYPE_NORMAL
- en: '[`zoom_fft`](scipy.signal.zoom_fft.html#scipy.signal.zoom_fft "scipy.signal.zoom_fft")'
  prefs: []
  type: TYPE_NORMAL
- en: Convenience function for partial FFT calculations.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The defaults are chosen such that `signal.czt(x)` is equivalent to `fft.fft(x)`
    and, if `m > len(x)`, that `signal.czt(x, m)` is equivalent to `fft.fft(x, m)`.
  prefs: []
  type: TYPE_NORMAL
- en: If the transform needs to be repeated, use [`CZT`](scipy.signal.CZT.html#scipy.signal.CZT
    "scipy.signal.CZT") to construct a specialized transform function which can be
    reused without recomputing constants.
  prefs: []
  type: TYPE_NORMAL
- en: An example application is in system identification, repeatedly evaluating small
    slices of the z-transform of a system, around where a pole is expected to exist,
    to refine the estimate of the pole’s true location. [[1]](#r617e9b1d1987-1)
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Steve Alan Shilling, “A study of the chirp z-transform and its applications”,
    pg 20 (1970) [https://krex.k-state.edu/dspace/bitstream/handle/2097/7844/LD2668R41972S43.pdf](https://krex.k-state.edu/dspace/bitstream/handle/2097/7844/LD2668R41972S43.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Generate a sinusoid:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/czt-function-1_00_00.png](../Images/32ff817821a4418761bddc3a2e7b72ab.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Its discrete Fourier transform has all of its energy in a single frequency
    bin:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/czt-function-1_01_00.png](../Images/32be3b9379e147477c793199a4734038.png)'
  prefs: []
  type: TYPE_IMG
- en: 'However, if the sinusoid is logarithmically-decaying:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/czt-function-1_02_00.png](../Images/22f9f46281b4afaefccf27acee0bbd33.png)'
  prefs: []
  type: TYPE_IMG
- en: 'the DFT will have spectral leakage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/czt-function-1_03_00.png](../Images/4f5640cc316e3631fa519f7813f08b2a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'While the DFT always samples the z-transform around the unit circle, the chirp
    z-transform allows us to sample the Z-transform along any logarithmic spiral,
    such as a circle with radius smaller than unity:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/czt-function-1_04_00.png](../Images/d44b4d8b21691315e2fa79c9672e387a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'With the correct radius, this transforms the decaying sinusoid (and others
    with the same decay rate) without spectral leakage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/czt-function-1_05_00.png](../Images/a82fd03748bea89ef25b165610d1921a.png)'
  prefs: []
  type: TYPE_IMG
