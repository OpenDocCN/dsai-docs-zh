- en: pandas.DataFrame.interpolate
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.DataFrame.interpolate
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Fill NaN values using an interpolation method.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用插值方法填充NaN值。
- en: Please note that only `method='linear'` is supported for DataFrame/Series with
    a MultiIndex.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，仅支持DataFrame/Series具有MultiIndex的`method='linear'`。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**method**str, default ‘linear’'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**str，默认为‘linear’'
- en: 'Interpolation technique to use. One of:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用的插值技术。其中之一：
- en: '‘linear’: Ignore the index and treat the values as equally spaced. This is
    the only method supported on MultiIndexes.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘linear’：忽略索引并将值视为等间距。这是MultiIndexes支持的唯一方法。
- en: '‘time’: Works on daily and higher resolution data to interpolate given length
    of interval.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘time’: 用于对每日及更高分辨率数据进行插值，以插值给定长度的间隔。'
- en: '‘index’, ‘values’: use the actual numerical values of the index.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘index’，‘values’：使用索引的实际数值。
- en: '‘pad’: Fill in NaNs using existing values.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘pad’: 使用现有值填充NaN。'
- en: '‘nearest’, ‘zero’, ‘slinear’, ‘quadratic’, ‘cubic’, ‘barycentric’, ‘polynomial’:
    Passed to scipy.interpolate.interp1d, whereas ‘spline’ is passed to scipy.interpolate.UnivariateSpline.
    These methods use the numerical values of the index. Both ‘polynomial’ and ‘spline’
    require that you also specify an order (int), e.g. `df.interpolate(method=''polynomial'',
    order=5)`. Note that, slinear method in Pandas refers to the Scipy first order
    spline instead of Pandas first order spline.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘nearest’, ‘zero’, ‘slinear’, ‘quadratic’, ‘cubic’, ‘barycentric’, ‘polynomial’:
    传递给scipy.interpolate.interp1d，而‘spline’传递给scipy.interpolate.UnivariateSpline。这些方法使用索引的数值。‘polynomial’和‘spline’都要求您还指定一个阶数（int），例如`df.interpolate(method=''polynomial'',
    order=5)`。请注意，Pandas中的slinear方法指的是Scipy的一阶样条，而不是Pandas的一阶样条。'
- en: '‘krogh’, ‘piecewise_polynomial’, ‘spline’, ‘pchip’, ‘akima’, ‘cubicspline’:
    Wrappers around the SciPy interpolation methods of similar names. See Notes.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘krogh’, ‘piecewise_polynomial’, ‘spline’, ‘pchip’, ‘akima’, ‘cubicspline’:
    SciPy插值方法的包装器，与类似名称的方法相似。请参阅注释。'
- en: '‘from_derivatives’: Refers to scipy.interpolate.BPoly.from_derivatives.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘from_derivatives’：指的是scipy.interpolate.BPoly.from_derivatives。
- en: '**axis**{{0 or ‘index’, 1 or ‘columns’, None}}, default None'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**{{0或‘index’，1或‘columns’，None}}，默认为None'
- en: Axis to interpolate along. For Series this parameter is unused and defaults
    to 0.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行插值的轴。对于Series，此参数未使用且默认为0。
- en: '**limit**int, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**limit**int，可选'
- en: Maximum number of consecutive NaNs to fill. Must be greater than 0.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要填充的最大连续NaN数。必须大于0。
- en: '**inplace**bool, default False'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**inplace**bool，默认为False'
- en: Update the data in place if possible.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 尽可能就地更新数据。
- en: '**limit_direction**{{‘forward’, ‘backward’, ‘both’}}, Optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**limit_direction**{{‘forward’，‘backward’，‘both’}}，可选'
- en: Consecutive NaNs will be filled in this direction.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 连续的NaN将以此方向填充。
- en: 'If limit is specified:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定了限制：
- en: If ‘method’ is ‘pad’ or ‘ffill’, ‘limit_direction’ must be ‘forward’.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果‘method’为‘pad’或‘ffill’，‘limit_direction’必须为‘forward’。
- en: If ‘method’ is ‘backfill’ or ‘bfill’, ‘limit_direction’ must be ‘backwards’.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果‘method’为‘backfill’或‘bfill’，‘limit_direction’必须为‘backwards’。
- en: 'If ‘limit’ is not specified:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定‘limit’：
- en: If ‘method’ is ‘backfill’ or ‘bfill’, the default is ‘backward’
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果‘method’为‘backfill’或‘bfill’，默认为‘backward’
- en: else the default is ‘forward’
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则默认为‘forward’
- en: raises ValueError if limit_direction is ‘forward’ or ‘both’ and
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果limit_direction为‘forward’或‘both’且引发ValueError
- en: method is ‘backfill’ or ‘bfill’.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果‘method’为‘backfill’或‘bfill’。
- en: raises ValueError if limit_direction is ‘backward’ or ‘both’ and
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果limit_direction为‘backward’或‘both’且引发ValueError
- en: method is ‘pad’ or ‘ffill’.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果‘method’为‘pad’或‘ffill’。
- en: '**limit_area**{{None, ‘inside’, ‘outside’}}, default None'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**limit_area**{{None，‘inside’，‘outside’}}，默认为None'
- en: If limit is specified, consecutive NaNs will be filled with this restriction.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定了限制，连续的NaN将受到此限制的填充。
- en: '`None`: No fill restriction.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`None`：无填充限制。'
- en: '‘inside’: Only fill NaNs surrounded by valid values (interpolate).'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘inside’：仅填充被有效值包围的NaN（插值）。
- en: '‘outside’: Only fill NaNs outside valid values (extrapolate).'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘outside’：仅填充有效值之外的NaN（外推）。
- en: '**downcast**optional, ‘infer’ or None, defaults to None'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**downcast**可选，‘infer’或None，默认为None'
- en: Downcast dtypes if possible.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 尽可能降低数据类型。
- en: Deprecated since version 2.1.0.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本2.1.0起已弃用。
- en: '**``**kwargs``**optional'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**``**kwargs``**可选'
- en: Keyword arguments to pass on to the interpolating function.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给插值函数的关键字参数。
- en: 'Returns:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: Series or DataFrame or None
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Series或DataFrame或None
- en: Returns the same object type as the caller, interpolated at some or all `NaN`
    values or None if `inplace=True`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与调用者相同的对象类型，在一些或所有`NaN`值进行插值，如果`inplace=True`则返回None。
- en: See also
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`fillna`](pandas.DataFrame.fillna.html#pandas.DataFrame.fillna "pandas.DataFrame.fillna")'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fillna`](pandas.DataFrame.fillna.html#pandas.DataFrame.fillna "pandas.DataFrame.fillna")'
- en: Fill missing values using different methods.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用不同的方法填充缺失值。
- en: '[`scipy.interpolate.Akima1DInterpolator`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.Akima1DInterpolator.html#scipy.interpolate.Akima1DInterpolator
    "(in SciPy v1.13.0)")'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.interpolate.Akima1DInterpolator`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.Akima1DInterpolator.html#scipy.interpolate.Akima1DInterpolator
    "(在 SciPy v1.13.0 中)")'
- en: Piecewise cubic polynomials (Akima interpolator).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 分段立方多项式（Akima 插值器）。
- en: '[`scipy.interpolate.BPoly.from_derivatives`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.BPoly.from_derivatives.html#scipy.interpolate.BPoly.from_derivatives
    "(in SciPy v1.13.0)")'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.interpolate.BPoly.from_derivatives`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.BPoly.from_derivatives.html#scipy.interpolate.BPoly.from_derivatives
    "(在 SciPy v1.13.0 中)")'
- en: Piecewise polynomial in the Bernstein basis.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Bernstein 基础的分段多项式。
- en: '[`scipy.interpolate.interp1d`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.interp1d.html#scipy.interpolate.interp1d
    "(in SciPy v1.13.0)")'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.interpolate.interp1d`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.interp1d.html#scipy.interpolate.interp1d
    "(在 SciPy v1.13.0 中)")'
- en: Interpolate a 1-D function.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 插值 1-D 函数。
- en: '[`scipy.interpolate.KroghInterpolator`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.KroghInterpolator.html#scipy.interpolate.KroghInterpolator
    "(in SciPy v1.13.0)")'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.interpolate.KroghInterpolator`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.KroghInterpolator.html#scipy.interpolate.KroghInterpolator
    "(在 SciPy v1.13.0 中)")'
- en: Interpolate polynomial (Krogh interpolator).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 插值多项式（Krogh 插值器）。
- en: '[`scipy.interpolate.PchipInterpolator`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.PchipInterpolator.html#scipy.interpolate.PchipInterpolator
    "(in SciPy v1.13.0)")'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.interpolate.PchipInterpolator`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.PchipInterpolator.html#scipy.interpolate.PchipInterpolator
    "(在 SciPy v1.13.0 中)")'
- en: PCHIP 1-d monotonic cubic interpolation.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: PCHIP 1 维单调立方插值。
- en: '[`scipy.interpolate.CubicSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline
    "(in SciPy v1.13.0)")'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.interpolate.CubicSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline
    "(在 SciPy v1.13.0 中)")'
- en: Cubic spline data interpolator.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 立方样条数据插值器。
- en: Notes
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: The ‘krogh’, ‘piecewise_polynomial’, ‘spline’, ‘pchip’ and ‘akima’ methods are
    wrappers around the respective SciPy implementations of similar names. These use
    the actual numerical values of the index. For more information on their behavior,
    see the [SciPy documentation](https://docs.scipy.org/doc/scipy/reference/interpolate.html#univariate-interpolation).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: ‘krogh’、‘piecewise_polynomial’、‘spline’、‘pchip’ 和 ‘akima’ 方法都是类似名字的 SciPy 实现的包装器。这些方法使用索引的实际数值。有关它们的行为的更多信息，请参阅[SciPy
    文档](https://docs.scipy.org/doc/scipy/reference/interpolate.html#univariate-interpolation)。
- en: Examples
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: Filling in `NaN` in a [`Series`](pandas.Series.html#pandas.Series "pandas.Series")
    via linear interpolation.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过线性插值填充 [`Series`](pandas.Series.html#pandas.Series "pandas.Series") 中的 `NaN`。
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Filling in `NaN` in a Series via polynomial interpolation or splines: Both
    ‘polynomial’ and ‘spline’ methods require that you also specify an `order` (int).'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 通过多项式插值或样条插值填充 Series 中的 `NaN`：‘polynomial’ 和 ‘spline’ 方法都要求您指定一个 `order`（整数）。
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Fill the DataFrame forward (that is, going down) along each column using linear
    interpolation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 沿着每列向下填充 DataFrame（即向下填充）使用线性插值。
- en: Note how the last entry in column ‘a’ is interpolated differently, because there
    is no entry after it to use for interpolation. Note how the first entry in column
    ‘b’ remains `NaN`, because there is no entry before it to use for interpolation.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 注意‘a’ 列中的最后一个条目如何进行不同的插值，因为它后面没有条目可用于插值。注意‘b’ 列中的第一个条目保持为 `NaN`，因为它前面没有条目可用于插值。
- en: '[PRE3]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Using polynomial interpolation.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用多项式插值。
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
