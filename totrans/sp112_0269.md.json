["```py\nscipy.linalg.lu_factor(a, overwrite_a=False, check_finite=True)\n```", "```py\nA = P L U \n```", "```py\n>>> import numpy as np\n>>> from scipy.linalg import lu_factor\n>>> A = np.array([[2, 5, 8, 7], [5, 2, 2, 8], [7, 5, 6, 6], [5, 4, 4, 8]])\n>>> lu, piv = lu_factor(A)\n>>> piv\narray([2, 2, 3, 3], dtype=int32) \n```", "```py\n>>> def pivot_to_permutation(piv):\n...     perm = np.arange(len(piv))\n...     for i in range(len(piv)):\n...         perm[i], perm[piv[i]] = perm[piv[i]], perm[i]\n...     return perm\n...\n>>> p_inv = pivot_to_permutation(piv)\n>>> p_inv\narray([2, 0, 3, 1])\n>>> L, U = np.tril(lu, k=-1) + np.eye(4), np.triu(lu)\n>>> np.allclose(A[p_inv] - L @ U, np.zeros((4, 4)))\nTrue \n```", "```py\n>>> p = np.argsort(p_inv)\n>>> p\narray([1, 3, 0, 2])\n>>> np.allclose(A - L[p] @ U, np.zeros((4, 4)))\nTrue \n```", "```py\n>>> P = np.eye(4)[p]\n>>> np.allclose(A - P @ L @ U, np.zeros((4, 4)))\nTrue \n```"]