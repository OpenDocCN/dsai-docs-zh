- en: pandas.DataFrame.to_clipboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_clipboard.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_clipboard.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Copy object to the system clipboard.
  prefs: []
  type: TYPE_NORMAL
- en: Write a text representation of object to the system clipboard. This can be pasted
    into Excel, for example.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**excel**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Produce output in a csv format for easy pasting into excel.
  prefs: []
  type: TYPE_NORMAL
- en: True, use the provided separator for csv pasting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: False, write a string representation of the object to the clipboard.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sep**str, default `''\t''`'
  prefs: []
  type: TYPE_NORMAL
- en: Field delimiter.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: These parameters will be passed to DataFrame.to_csv.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv`](pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv "pandas.DataFrame.to_csv")'
  prefs: []
  type: TYPE_NORMAL
- en: Write a DataFrame to a comma-separated values (csv) file.
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_clipboard`](pandas.read_clipboard.html#pandas.read_clipboard "pandas.read_clipboard")'
  prefs: []
  type: TYPE_NORMAL
- en: Read text from clipboard and pass to read_csv.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Requirements for your platform.
  prefs: []
  type: TYPE_NORMAL
- en: 'Linux : xclip, or xsel (with PyQt4 modules)'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Windows : none'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'macOS : none'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: This method uses the processes developed for the package pyperclip. A solution
    to render any output string format is given in the examples.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Copy the contents of a DataFrame to the clipboard.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We can omit the index by passing the keyword index and setting it to false.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Using the original pyperclip package for any string output format.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
