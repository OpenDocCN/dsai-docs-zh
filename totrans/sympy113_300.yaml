- en: Setup Development Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/contributing/new-contributors-guide/dev-setup.html](https://docs.sympy.org/latest/contributing/new-contributors-guide/dev-setup.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This guide is intended for people who have never contributed to an open source
    project on GitHub before. If you have already completed the steps in this guide,
    you do not need to complete them again.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This guide is intended for people have never contributed to an open source project
    on GitHub before. If you are already familiar with how to contribute to an open
    source project on GitHub, go to the [Development Workflow Process](workflow-process.html)
    guide
  prefs: []
  type: TYPE_NORMAL
- en: The first step to contributing to the code base is creating your development
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Important
  prefs: []
  type: TYPE_NORMAL
- en: Each of the steps in this guide only need to be done once. Once you have completed
    them, you do not need to repeat them, even if you are making a second contribution.
  prefs: []
  type: TYPE_NORMAL
- en: Install Git
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SymPy is available on [GitHub](https://github.com/sympy/sympy) and uses [Git](https://git-scm.com/)
    for source control. The workflow is such that code is pulled and pushed to and
    from the main repository. Install the respective version of Git for your operating
    system to start development.
  prefs: []
  type: TYPE_NORMAL
- en: '**Linux-like systems**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Install git via your native package management system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'or:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Windows and macOS**:'
  prefs: []
  type: TYPE_NORMAL
- en: The easiest way to get git is to download [GitHub desktop](https://desktop.github.com/),
    which will install git, and also provide a nice GUI (this tutorial will be based
    on the command line interface). Note, you may need to go into the GitHub preferences
    and choose the “Install Command Line Tools” option to get git installed into the
    terminal.
  prefs: []
  type: TYPE_NORMAL
- en: If you do decide to use the GitHub GUI, you should make sure that any “sync
    does rebase” option is disabled in the settings.
  prefs: []
  type: TYPE_NORMAL
- en: '### Configure Your Name and Email in Git'
  prefs: []
  type: TYPE_NORMAL
- en: Git tracks who makes each commit by checking the user’s name and email. In addition,
    we use this info to associate your commits with your GitHub account.
  prefs: []
  type: TYPE_NORMAL
- en: 'To set these, enter the code below, replacing the name and email with your
    own (`--global` is optional).:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The name should be your actual name, not your GitHub username. Use the email
    you used for your GitHub account (see [below](#dev-setup-create-github-account)).
  prefs: []
  type: TYPE_NORMAL
- en: (Optional) Configure Git Settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*This step is not required, but it can make working with git on the command
    line easier.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'These global options (i.e. applying to all repositories) are placed in `~/.gitconfig`.
    If you want, you can edit this file to enable some handy shortcuts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: See [https://git-scm.com/book/sv/v2/Customizing-Git-Git-Configuration](https://git-scm.com/book/sv/v2/Customizing-Git-Git-Configuration)
    for some more common git configuration options.
  prefs: []
  type: TYPE_NORMAL
- en: Setup GitHub
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next you will need to setup your GitHub account. Note that all the steps here
    only need to be done once. If you already have a GitHub account and have setup
    SSH keys, even if it was for a different project than SymPy, you do not need to
    do them again.
  prefs: []
  type: TYPE_NORMAL
- en: '### Create a GitHub Account'
  prefs: []
  type: TYPE_NORMAL
- en: A [GitHub](https://github.com) account is required to contribute to SymPy. If
    you have not one yet then sign up at [https://github.com/join](https://github.com/join).
    Your GitHub account is your presence in the open source world, so we recommend
    choosing a professional username.
  prefs: []
  type: TYPE_NORMAL
- en: Setup SSH Keys
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To establish a secure connection between your computer and GitHub see detailed
    instructions in [https://docs.github.com/get-started/getting-started-with-git/set-up-git](https://docs.github.com/get-started/getting-started-with-git/set-up-git)
    or at [https://docs.github.com/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account](https://docs.github.com/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account).
  prefs: []
  type: TYPE_NORMAL
- en: If you have any problems with SSH access to GitHub, read the troubleshooting
    instructions at [https://docs.github.com/authentication/troubleshooting-ssh](https://docs.github.com/authentication/troubleshooting-ssh),
    or ask us on the [mailing list](https://groups.google.com/g/sympy).
  prefs: []
  type: TYPE_NORMAL
- en: Fork SymPy
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create your own *fork* of the SymPy project on GitHub. If you have already done
    this before, you do not need to do it again.
  prefs: []
  type: TYPE_NORMAL
- en: Go to the [SymPy GitHub repository](https://github.com/sympy/sympy) and click
    the **Fork** button.
  prefs: []
  type: TYPE_NORMAL
- en: Now you have your own repository for the SymPy project. The address of the forked
    project will look something like `https://github.com/<your-github-username>/sympy`,
    where `<your-github-username>` is your GitHub username.
  prefs: []
  type: TYPE_NORMAL
- en: Get the SymPy Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It is recommended practice to create a fork of the SymPy project for your development
    purposes. Create your own fork of the SymPy project (if you have not yet). Go
    to the SymPy GitHub repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: You will now have a fork at `https://github.com/<your-user-name>/sympy`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, on your machine browse to where you would like to store SymPy, and clone
    (download) the latest code from SymPy’s original repository (about 77 MiB):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Then assign your read-and-write repo to a remote called “github” (replace `<your-github-username>`
    with your GitHub username):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'For more information about GitHub forking and tuning see: [https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests](https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests),
    [https://docs.github.com/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo](https://docs.github.com/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo),
    and [https://docs.github.com/get-started/quickstart/set-up-git](https://docs.github.com/get-started/quickstart/set-up-git)'
  prefs: []
  type: TYPE_NORMAL
- en: 'After the configuration, your setup should be similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Virtual Environment Setup
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You may want to take advantage of using virtual environments to isolate your
    development version of SymPy from any system wide installed versions, e.g. from
    `apt-get install python-sympy`.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you use `conda`, you can use it to create a virtual environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: If you prefer to use `pip` and `venv`, you can use something like
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: You can add any other packages to this command that you might find useful for
    your contribution, such as the [optional dependencies](../dependencies.html).
  prefs: []
  type: TYPE_NORMAL
- en: You now have a environment that you can use for testing your development copy
    of SymPy.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now activate the environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
