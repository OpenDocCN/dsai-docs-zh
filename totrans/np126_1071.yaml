- en: Data Type API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据类型API
- en: 原文：[https://numpy.org/doc/1.26/reference/c-api/dtype.html](https://numpy.org/doc/1.26/reference/c-api/dtype.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/c-api/dtype.html](https://numpy.org/doc/1.26/reference/c-api/dtype.html)
- en: The standard array can have 24 different data types (and has some support for
    adding your own types). These data types all have an enumerated type, an enumerated
    type-character, and a corresponding array scalar Python type object (placed in
    a hierarchy). There are also standard C typedefs to make it easier to manipulate
    elements of the given data type. For the numeric types, there are also bit-width
    equivalent C typedefs and named typenumbers that make it easier to select the
    precision desired.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 标准数组可以有24种不同的数据类型（并具有一些支持添加自己类型的支持）。所有这些数据类型都有一个枚举类型，一个枚举类型字符，以及一个对应的数组标量Python类型对象（放在一个层次结构中）。还有标准的C
    typedefs，以便更容易地操作给定数据类型的元素。对于数值类型，还有相应的位宽C typedefs和命名的typenumbers，使得更容易选择所需的精度。
- en: Warning
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: The names for the types in c code follows c naming conventions more closely.
    The Python names for these types follow Python conventions. Thus, [`NPY_FLOAT`](#c.NPY_TYPES.NPY_FLOAT
    "NPY_FLOAT") picks up a 32-bit float in C, but [`numpy.float_`](../arrays.scalars.html#numpy.float_
    "numpy.float_") in Python corresponds to a 64-bit double. The bit-width names
    can be used in both Python and C for clarity.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: c代码中这些类型的名称更接近c命名惯例。这些类型的Python名称遵循Python约定。因此，[`NPY_FLOAT`](#c.NPY_TYPES.NPY_FLOAT
    "NPY_FLOAT")在C中代表32位浮点数，但在Python中，[`numpy.float_`](../arrays.scalars.html#numpy.float_
    "numpy.float_")对应64位双精度浮点数。为了清晰起见，位宽名称可以在Python和C中使用。
- en: Enumerated Types
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 枚举类型
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'There is a list of enumerated types defined providing the basic 24 data types
    plus some useful generic names. Whenever the code requires a type number, one
    of these enumerated types is requested. The types are all called `NPY_{NAME}`:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '已定义了枚举类型列表，提供基本的24种数据类型以及一些有用的通用名称。无论何时，当代码需要一种类型编号时，都会请求其中一个枚举类型。所有类型都称为`NPY_{NAME}`:'
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The enumeration value for the boolean type, stored as one byte. It may only
    be set to the values 0 and 1.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 存储为一个字节的布尔类型的枚举值。只能设置为值为0和1。
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The enumeration value for an 8-bit/1-byte signed integer.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 8位/1字节有符号整数的枚举值。
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The enumeration value for a 16-bit/2-byte signed integer.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 16位/2字节有符号整数的枚举值。
- en: '[PRE6]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The enumeration value for a 32-bit/4-byte signed integer.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 32位/4字节有符号整数的枚举值。
- en: '[PRE8]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Equivalent to either NPY_INT or NPY_LONGLONG, depending on the platform.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 根据平台而定，等价于NPY_INT或NPY_LONGLONG。
- en: '[PRE9]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The enumeration value for a 64-bit/8-byte signed integer.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 64位/8字节有符号整数的枚举值。
- en: '[PRE11]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The enumeration value for an 8-bit/1-byte unsigned integer.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 8位/1字节无符号整数的枚举值。
- en: '[PRE13]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The enumeration value for a 16-bit/2-byte unsigned integer.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 16位/2字节无符号整数的枚举值。
- en: '[PRE15]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The enumeration value for a 32-bit/4-byte unsigned integer.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 32位/4字节无符号整数的枚举值。
- en: '[PRE17]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Equivalent to either NPY_UINT or NPY_ULONGLONG, depending on the platform.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 根据平台而定，等价于NPY_UINT或NPY_ULONGLONG。
- en: '[PRE18]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The enumeration value for a 64-bit/8-byte unsigned integer.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 64位/8字节无符号整数的枚举值。
- en: '[PRE20]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The enumeration value for a 16-bit/2-byte IEEE 754-2008 compatible floating
    point type.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 16位/2字节IEEE 754-2008兼容浮点类型的枚举值。
- en: '[PRE22]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The enumeration value for a 32-bit/4-byte IEEE 754 compatible floating point
    type.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 32位/4字节IEEE 754兼容浮点类型的枚举值。
- en: '[PRE24]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The enumeration value for a 64-bit/8-byte IEEE 754 compatible floating point
    type.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 64位/8字节IEEE 754兼容浮点类型的枚举值。
- en: '[PRE26]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The enumeration value for a platform-specific floating point type which is at
    least as large as NPY_DOUBLE, but larger on many platforms.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 至少与NPY_DOUBLE一样大的特定于平台的浮点类型的枚举值，在许多平台上更大。
- en: '[PRE27]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The enumeration value for a 64-bit/8-byte complex type made up of two NPY_FLOAT
    values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由两个NPY_FLOAT值组成的64位/8字节复数类型的枚举值。
- en: '[PRE29]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The enumeration value for a 128-bit/16-byte complex type made up of two NPY_DOUBLE
    values.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由两个NPY_DOUBLE值组成的128位/16字节复数类型的枚举值。
- en: '[PRE31]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The enumeration value for a platform-specific complex floating point type which
    is made up of two NPY_LONGDOUBLE values.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由两个NPY_LONGDOUBLE值组成的特定于平台的复数浮点类型的枚举值。
- en: '[PRE32]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The enumeration value for a data type which holds dates or datetimes with a
    precision based on selectable date or time units.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 保存日期或日期时间，其精度基于可选择的日期或时间单位。
- en: '[PRE33]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The enumeration value for a data type which holds lengths of times in integers
    of selectable date or time units.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以可选的日期或时间单位的整数长度为基础的数据类型的枚举值。
- en: '[PRE34]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The enumeration value for ASCII strings of a selectable size. The strings have
    a fixed maximum size within a given array.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 表示可选择大小的ASCII字符串的枚举值。这些字符串在给定数组内具有固定的最大大小。
- en: '[PRE35]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The enumeration value for UCS4 strings of a selectable size. The strings have
    a fixed maximum size within a given array.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 表示可选择大小的UCS4字符串的枚举值。这些字符串在给定数组内具有固定的最大大小。
- en: '[PRE36]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The enumeration value for references to arbitrary Python objects.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 指向任意Python对象的引用的枚举值。
- en: '[PRE37]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Primarily used to hold struct dtypes, but can contain arbitrary binary data.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 主要用于保存结构dtype，但可以包含任意二进制数据。
- en: Some useful aliases of the above types are
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 上述类型的一些有用的别名是
- en: '[PRE38]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The enumeration value for a signed integer type which is the same size as a
    (void *) pointer. This is the type used by all arrays of indices.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 表示与（void *）指针大小相同的有符号整数类型的枚举值。这是所有索引数组使用的类型。
- en: '[PRE39]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The enumeration value for an unsigned integer type which is the same size as
    a (void *) pointer.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 表示与（void *）指针大小相同的无符号整数类型的枚举值。
- en: '[PRE40]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The enumeration value of the type used for masks, such as with the [`NPY_ITER_ARRAYMASK`](iterator.html#c.NPY_ITER_ARRAYMASK
    "NPY_ITER_ARRAYMASK") iterator flag. This is equivalent to [`NPY_UINT8`](#c.NPY_TYPES.NPY_UINT8
    "NPY_UINT8").
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 用于掩码的类型的枚举值，例如使用[`NPY_ITER_ARRAYMASK`](iterator.html#c.NPY_ITER_ARRAYMASK "NPY_ITER_ARRAYMASK")迭代器标志。这相当于[`NPY_UINT8`](#c.NPY_TYPES.NPY_UINT8
    "NPY_UINT8")。
- en: '[PRE41]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The default type to use when no dtype is explicitly specified, for example when
    calling np.zero(shape). This is equivalent to [`NPY_DOUBLE`](#c.NPY_TYPES.NPY_DOUBLE
    "NPY_DOUBLE").
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当没有明确指定dtype时要使用的默认类型，例如调用np.zero(shape)时。这相当于[`NPY_DOUBLE`](#c.NPY_TYPES.NPY_DOUBLE
    "NPY_DOUBLE")。
- en: Other useful related constants are
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 其他有用的相关常量包括
- en: '[PRE42]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The total number of built-in NumPy types. The enumeration covers the range from
    0 to NPY_NTYPES-1.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy内置类型的总数。枚举值的范围为0到NPY_NTYPES-1。
- en: '[PRE43]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: A signal value guaranteed not to be a valid type enumeration number.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 保证不是有效类型枚举数的信号值。
- en: '[PRE44]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The start of type numbers used for Custom Data types.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 用于自定义数据类型的类型号起始值。
- en: The various character codes indicating certain types are also part of an enumerated
    list. References to type characters (should they be needed at all) should always
    use these enumerations. The form of them is `NPY_{NAME}LTR` where `{NAME}` can
    be
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 表示某些类型的各种字符代码也是枚举列表的一部分。有关类型字符（如果需要）的引用应始终使用这些枚举。它们的形式是`NPY_{NAME}LTR`，其中`{NAME}`可能是
- en: '**BOOL**, **BYTE**, **UBYTE**, **SHORT**, **USHORT**, **INT**, **UINT**, **LONG**,
    **ULONG**, **LONGLONG**, **ULONGLONG**, **HALF**, **FLOAT**, **DOUBLE**, **LONGDOUBLE**,
    **CFLOAT**, **CDOUBLE**, **CLONGDOUBLE**, **DATETIME**, **TIMEDELTA**, **OBJECT**,
    **STRING**, **VOID**'
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**BOOL**，**BYTE**，**UBYTE**，**SHORT**，**USHORT**，**INT**，**UINT**，**LONG**，**ULONG**，**LONGLONG**，**ULONGLONG**，**HALF**，**FLOAT**，**DOUBLE**，**LONGDOUBLE**，**CFLOAT**，**CDOUBLE**，**CLONGDOUBLE**，**DATETIME**，**TIMEDELTA**，**OBJECT**，**STRING**，**VOID**'
- en: ''
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**INTP**, **UINTP**'
  id: totrans-88
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**INTP**，**UINTP**'
- en: ''
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**GENBOOL**, **SIGNED**, **UNSIGNED**, **FLOATING**, **COMPLEX**'
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**GENBOOL**，**SIGNED**，**UNSIGNED**，**FLOATING**，**COMPLEX**'
- en: The latter group of `{NAME}s` corresponds to letters used in the array interface
    typestring specification.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 后一组`{NAME}s`对应于数组接口类型字符串规范中使用的字符。
- en: Defines
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义
- en: Max and min values for integers
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 整数的最大和最小值
- en: '`NPY_MAX_INT{bits}`, `NPY_MAX_UINT{bits}`, `NPY_MIN_INT{bits}`'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MAX_INT{bits}`, `NPY_MAX_UINT{bits}`, `NPY_MIN_INT{bits}`'
- en: 'These are defined for `{bits}` = 8, 16, 32, 64, 128, and 256 and provide the
    maximum (minimum) value of the corresponding (unsigned) integer type. Note: the
    actual integer type may not be available on all platforms (i.e. 128-bit and 256-bit
    integers are rare).'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这些对`{bits}` = 8, 16, 32, 64, 128和256进行定义，并提供相应（无符号）整数类型的最大（最小）值。注意：实际整数类型可能不会在所有平台上都可用（即128位和256位整数很少见）。
- en: '`NPY_MIN_{type}`'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MIN_{type}`'
- en: This is defined for `{type}` = **BYTE**, **SHORT**, **INT**, **LONG**, **LONGLONG**,
    **INTP**
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`{type}` = **BYTE**, **SHORT**, **INT**, **LONG**, **LONGLONG**, **INTP**，都有此定义。
- en: '`NPY_MAX_{type}`'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MAX_{type}`'
- en: This is defined for all defined for `{type}` = **BYTE**, **UBYTE**, **SHORT**,
    **USHORT**, **INT**, **UINT**, **LONG**, **ULONG**, **LONGLONG**, **ULONGLONG**,
    **INTP**, **UINTP**
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有已定义的`{type}` = **BYTE**, **UBYTE**, **SHORT**, **USHORT**, **INT**, **UINT**,
    **LONG**, **ULONG**, **LONGLONG**, **ULONGLONG**, **INTP**, **UINTP**，都有此定义。
- en: Number of bits in data types
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据类型中的位数
- en: All `NPY_SIZEOF_{CTYPE}` constants have corresponding `NPY_BITSOF_{CTYPE}` constants
    defined. The `NPY_BITSOF_{CTYPE}` constants provide the number of bits in the
    data type. Specifically, the available `{CTYPE}s` are
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 所有`NPY_SIZEOF_{CTYPE}`常量都有相应的`NPY_BITSOF_{CTYPE}`常量定义。`NPY_BITSOF_{CTYPE}`常量提供数据类型中的位数。具体来说，可用的`{CTYPE}s`是
- en: '**BOOL**, **CHAR**, **SHORT**, **INT**, **LONG**, **LONGLONG**, **FLOAT**,
    **DOUBLE**, **LONGDOUBLE**'
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**BOOL**、**CHAR**、**SHORT**、**INT**、**LONG**、**LONGLONG**、**FLOAT**、**DOUBLE**、**LONGDOUBLE**'
- en: Bit-width references to enumerated typenums
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 位宽引用到枚举类型号
- en: All of the numeric data types (integer, floating point, and complex) have constants
    that are defined to be a specific enumerated type number. Exactly which enumerated
    type a bit-width type refers to is platform dependent. In particular, the constants
    available are `PyArray_{NAME}{BITS}` where `{NAME}` is **INT**, **UINT**, **FLOAT**,
    **COMPLEX** and `{BITS}` can be 8, 16, 32, 64, 80, 96, 128, 160, 192, 256, and
    512\. Obviously not all bit-widths are available on all platforms for all the
    kinds of numeric types. Commonly 8-, 16-, 32-, 64-bit integers; 32-, 64-bit floats;
    and 64-, 128-bit complex types are available.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 所有数值数据类型（整数、浮点数和复数）都具有被定义为特定枚举类型编号的常量。具体指的是哪个位宽类型对应哪种枚举类型是取决于平台的。特别是，可用的常量是`PyArray_{NAME}{BITS}`，其中`{NAME}`为**INT**、**UINT**、**FLOAT**、**COMPLEX**，`{BITS}`可以是8、16、32、64、80、96、128、160、192、256和512。显然，并非所有平台上都有所有种类数值类型的所有位宽。通常可用的是8、16、32、64位整数；32、64位浮点数；以及64、128位复数类型。
- en: Integer that can hold a pointer
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可以容纳指针的整数
- en: The constants **NPY_INTP** and **NPY_UINTP** refer to an enumerated integer
    type that is large enough to hold a pointer on the platform. Index arrays should
    always be converted to **NPY_INTP** , because the dimension of the array is of
    type npy_intp.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 常量**NPY_INTP**和**NPY_UINTP**指代一个枚举整数类型，其大小足够大，可以在平台上容纳指针。索引数组应始终转换为**NPY_INTP**，因为数组的维度是np_intp类型。
- en: C-type names
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: C类型名称
- en: There are standard variable types for each of the numeric data types and the
    bool data type. Some of these are already available in the C-specification. You
    can create variables in extension code with these types.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 每种数值数据类型和布尔数据类型都有标准的变量类型。其中一些已经在C规范中提供。您可以使用这些类型在扩展代码中创建变量。
- en: Boolean
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE45]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: unsigned char; The constants [`NPY_FALSE`](array.html#c.NPY_FALSE "NPY_FALSE")
    and [`NPY_TRUE`](array.html#c.NPY_TRUE "NPY_TRUE") are also defined.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号字符；也定义了常量[`NPY_FALSE`](array.html#c.NPY_FALSE "NPY_FALSE")和[`NPY_TRUE`](array.html#c.NPY_TRUE
    "NPY_TRUE")。
- en: (Un)Signed Integer
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: (非)符号整数
- en: Unsigned versions of the integers can be defined by pre-pending a ‘u’ to the
    front of the integer name.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 整数的无符号版本可以通过在整数名称前面添加'u'来定义。
- en: '[PRE46]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: char
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 字符
- en: '[PRE47]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: unsigned char
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号字符
- en: '[PRE48]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: short
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 短
- en: '[PRE49]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: unsigned short
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号短整数
- en: '[PRE50]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: int
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 整数
- en: '[PRE51]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: unsigned int
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号整数
- en: '[PRE52]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 16-bit integer
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 16位整数
- en: '[PRE53]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 16-bit unsigned integer
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 16位无符号整数
- en: '[PRE54]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 32-bit integer
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 32位整数
- en: '[PRE55]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 32-bit unsigned integer
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 32位无符号整数
- en: '[PRE56]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 64-bit integer
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 64位整数
- en: '[PRE57]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 64-bit unsigned integer
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 64位无符号整数
- en: '[PRE58]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: long int
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 长整型
- en: '[PRE59]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: unsigned long int
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号长整数
- en: '[PRE60]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: long long int
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 长长整数
- en: '[PRE61]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: unsigned long long int
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号长长整数
- en: '[PRE62]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Py_intptr_t (an integer that is the size of a pointer on the platform).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Py_intptr_t（与平台上的指针大小相同的整数）。
- en: '[PRE63]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: unsigned Py_intptr_t (an integer that is the size of a pointer on the platform).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号Py_intptr_t（与平台上的指针大小相同的整数）。
- en: (Complex) Floating point
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: (复数)浮点数
- en: '[PRE64]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 16-bit float
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 16位浮点数
- en: '[PRE65]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 32-bit float
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 32位浮点数
- en: '[PRE66]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 32-bit complex float
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 32位复数浮点数
- en: '[PRE67]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 64-bit double
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 64位双精度
- en: '[PRE68]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 64-bit complex double
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 64位复数双精度
- en: '[PRE69]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: long double
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 长双精度
- en: '[PRE70]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: long complex double
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 长复双精度
- en: complex types are structures with **.real** and **.imag** members (in that order).
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 复数类型是具有**.real**和**.imag**成员（按照这种顺序）的结构。
- en: Bit-width names
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 位宽名称
- en: There are also typedefs for signed integers, unsigned integers, floating point,
    and complex floating point types of specific bit- widths. The available type names
    are
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 还有用于特定位宽的有符号整数、无符号整数、浮点数和复数浮点数的typedefs。可用的类型名称包括
- en: '`npy_int{bits}`, `npy_uint{bits}`, `npy_float{bits}`, and `npy_complex{bits}`'
  id: totrans-168
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`npy_int{bits}`, `npy_uint{bits}`, `npy_float{bits}`, 和 `npy_complex{bits}`'
- en: where `{bits}` is the number of bits in the type and can be **8**, **16**, **32**,
    **64**, 128, and 256 for integer types; 16, **32** , **64**, 80, 96, 128, and
    256 for floating-point types; and 32, **64**, **128**, 160, 192, and 512 for complex-valued
    types. Which bit-widths are available is platform dependent. The bolded bit-widths
    are usually available on all platforms.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`{bits}`表示类型中的位数，可以是**8**、**16**、**32**、**64**、128和256，用于整数类型；16、**32**、**64**、80、96、128和256用于浮点数类型；以及32、**64**、**128**、160、192和512用于复数数值类型。可用的位宽取决于平台。粗体位宽通常在所有平台上都可用。
- en: Printf Formatting
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Printf格式化
- en: For help in printing, the following strings are defined as the correct format
    specifier in printf and related commands.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了打印，以下字符串被定义为printf和相关命令中的正确格式说明符。
- en: '[PRE71]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Enumerated Types
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 枚举类型
- en: '[PRE76]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'There is a list of enumerated types defined providing the basic 24 data types
    plus some useful generic names. Whenever the code requires a type number, one
    of these enumerated types is requested. The types are all called `NPY_{NAME}`:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 定义了基本的24种数据类型以及一些有用的常用名称的枚举类型列表。每当代码需要一个类型号时，就会请求其中一个枚举类型。所有类型都称为`NPY_{NAME}`：
- en: '[PRE77]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: The enumeration value for the boolean type, stored as one byte. It may only
    be set to the values 0 and 1.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 存储为一个字节的布尔类型的枚举值。只能设置为值0和1。
- en: '[PRE78]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: The enumeration value for an 8-bit/1-byte signed integer.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 8位/1字节带符号整数的枚举值。
- en: '[PRE80]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '[PRE81]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: The enumeration value for a 16-bit/2-byte signed integer.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 16位/2字节带符号整数的枚举值。
- en: '[PRE82]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: The enumeration value for a 32-bit/4-byte signed integer.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 32位/4字节带符号整数的枚举值。
- en: '[PRE84]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Equivalent to either NPY_INT or NPY_LONGLONG, depending on the platform.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 和平台有关，等同于NPY_INT或NPY_LONGLONG。
- en: '[PRE85]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: The enumeration value for a 64-bit/8-byte signed integer.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 64位/8字节带符号整数的枚举值。
- en: '[PRE87]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: The enumeration value for an 8-bit/1-byte unsigned integer.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 8位/1字节无符号整数的枚举值。
- en: '[PRE89]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: The enumeration value for a 16-bit/2-byte unsigned integer.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 16位/2字节无符号整数的枚举值。
- en: '[PRE91]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: The enumeration value for a 32-bit/4-byte unsigned integer.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 32位/4字节无符号整数的枚举值。
- en: '[PRE93]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Equivalent to either NPY_UINT or NPY_ULONGLONG, depending on the platform.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 和平台有关，等同于NPY_UINT或NPY_ULONGLONG。
- en: '[PRE94]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: The enumeration value for a 64-bit/8-byte unsigned integer.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 64位/8字节无符号整数的枚举值。
- en: '[PRE96]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: The enumeration value for a 16-bit/2-byte IEEE 754-2008 compatible floating
    point type.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 16位/2字节IEEE 754-2008兼容浮点类型的枚举值。
- en: '[PRE98]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: The enumeration value for a 32-bit/4-byte IEEE 754 compatible floating point
    type.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 32位/4字节IEEE 754兼容浮点类型的枚举值。
- en: '[PRE100]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: The enumeration value for a 64-bit/8-byte IEEE 754 compatible floating point
    type.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 64位/8字节IEEE 754兼容浮点类型的枚举值。
- en: '[PRE102]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: The enumeration value for a platform-specific floating point type which is at
    least as large as NPY_DOUBLE, but larger on many platforms.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 平台特定的浮点类型，至少和NPY_DOUBLE一样大，但在许多平台上更大的浮点类型的枚举值。
- en: '[PRE103]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: The enumeration value for a 64-bit/8-byte complex type made up of two NPY_FLOAT
    values.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 64位/8字节复数类型的枚举值，由两个NPY_FLOAT值组成。
- en: '[PRE105]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: The enumeration value for a 128-bit/16-byte complex type made up of two NPY_DOUBLE
    values.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 128位/16字节复杂类型的枚举值，由两个NPY_DOUBLE值组成。
- en: '[PRE107]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: The enumeration value for a platform-specific complex floating point type which
    is made up of two NPY_LONGDOUBLE values.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 由两个NPY_LONGDOUBLE值组成的平台特定的复数浮点类型的枚举值。
- en: '[PRE108]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: The enumeration value for a data type which holds dates or datetimes with a
    precision based on selectable date or time units.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 根据可选择的日期或时间单位精度保存日期或日期时间的数据类型的枚举值。
- en: '[PRE109]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: The enumeration value for a data type which holds lengths of times in integers
    of selectable date or time units.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 以可选择的日期或时间单位中的整数形式保存时长的数据类型的枚举值。
- en: '[PRE110]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: The enumeration value for ASCII strings of a selectable size. The strings have
    a fixed maximum size within a given array.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 可选择大小的ASCII字符串的枚举值。字符串在给定数组中有固定的最大大小。
- en: '[PRE111]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: The enumeration value for UCS4 strings of a selectable size. The strings have
    a fixed maximum size within a given array.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 可选择大小的UCS4字符串的枚举值。字符串在给定数组中有固定的最大大小。
- en: '[PRE112]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: The enumeration value for references to arbitrary Python objects.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 对任意Python对象的引用的枚举值。
- en: '[PRE113]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Primarily used to hold struct dtypes, but can contain arbitrary binary data.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 主要用于保存struct dtypes，但可以包含任意的二进制数据。
- en: Some useful aliases of the above types are
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 一些上述类型的有用别名是
- en: '[PRE114]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: The enumeration value for a signed integer type which is the same size as a
    (void *) pointer. This is the type used by all arrays of indices.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 和(void *)指针大小相同的带符号整数类型的枚举值。这是所有索引数组使用的类型。
- en: '[PRE115]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: The enumeration value for an unsigned integer type which is the same size as
    a (void *) pointer.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 和(void *)指针大小相同的无符号整数类型的枚举值。
- en: '[PRE116]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: The enumeration value of the type used for masks, such as with the [`NPY_ITER_ARRAYMASK`](iterator.html#c.NPY_ITER_ARRAYMASK
    "NPY_ITER_ARRAYMASK") iterator flag. This is equivalent to [`NPY_UINT8`](#c.NPY_TYPES.NPY_UINT8
    "NPY_UINT8").
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 用于掩码的类型的枚举值，例如使用[`NPY_ITER_ARRAYMASK`](iterator.html#c.NPY_ITER_ARRAYMASK "NPY_ITER_ARRAYMASK")迭代器标志。这相当于[`NPY_UINT8`](#c.NPY_TYPES.NPY_UINT8
    "NPY_UINT8")。
- en: '[PRE117]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: The default type to use when no dtype is explicitly specified, for example when
    calling np.zero(shape). This is equivalent to [`NPY_DOUBLE`](#c.NPY_TYPES.NPY_DOUBLE
    "NPY_DOUBLE").
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 当未明确指定dtype时要使用的默认类型，例如在调用np.zero(shape)时。这相当于[`NPY_DOUBLE`](#c.NPY_TYPES.NPY_DOUBLE
    "NPY_DOUBLE")。
- en: Other useful related constants are
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 其他有用的相关常量为
- en: '[PRE118]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: The total number of built-in NumPy types. The enumeration covers the range from
    0 to NPY_NTYPES-1.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 内置NumPy类型的总数。枚举范围从0到NPY_NTYPES-1。
- en: '[PRE119]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: A signal value guaranteed not to be a valid type enumeration number.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 一个信号值保证不是有效的类型枚举数字。
- en: '[PRE120]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: The start of type numbers used for Custom Data types.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 用于自定义数据类型的类型编号的起始部分。
- en: The various character codes indicating certain types are also part of an enumerated
    list. References to type characters (should they be needed at all) should always
    use these enumerations. The form of them is `NPY_{NAME}LTR` where `{NAME}` can
    be
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 表示某些类型的各种字符代码也是枚举列表的一部分。对类型字符的引用（如果有必要）应始终使用这些枚举。它们的形式是`NPY_{NAME}LTR`，其中`{NAME}`可以是
- en: '**BOOL**, **BYTE**, **UBYTE**, **SHORT**, **USHORT**, **INT**, **UINT**, **LONG**,
    **ULONG**, **LONGLONG**, **ULONGLONG**, **HALF**, **FLOAT**, **DOUBLE**, **LONGDOUBLE**,
    **CFLOAT**, **CDOUBLE**, **CLONGDOUBLE**, **DATETIME**, **TIMEDELTA**, **OBJECT**,
    **STRING**, **VOID**'
  id: totrans-258
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**BOOL**、**BYTE**、**UBYTE**、**SHORT**、**USHORT**、**INT**、**UINT**、**LONG**、**ULONG**、**LONGLONG**、**ULONGLONG**、**HALF**、**FLOAT**、**DOUBLE**、**LONGDOUBLE**、**CFLOAT**、**CDOUBLE**、**CLONGDOUBLE**、**DATETIME**、**TIMEDELTA**、**OBJECT**、**STRING**、**VOID**'
- en: ''
  id: totrans-259
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**INTP**, **UINTP**'
  id: totrans-260
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**INTP**、**UINTP**'
- en: ''
  id: totrans-261
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**GENBOOL**, **SIGNED**, **UNSIGNED**, **FLOATING**, **COMPLEX**'
  id: totrans-262
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**GENBOOL**、**SIGNED**、**UNSIGNED**、**FLOATING**、**COMPLEX**'
- en: The latter group of `{NAME}s` corresponds to letters used in the array interface
    typestring specification.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 后一组`{NAME}s`对应于数组接口类型字符串规范中使用的字母。
- en: Defines
  id: totrans-264
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义
- en: Max and min values for integers
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 整数的最大和最小值
- en: '`NPY_MAX_INT{bits}`, `NPY_MAX_UINT{bits}`, `NPY_MIN_INT{bits}`'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MAX_INT{bits}`、`NPY_MAX_UINT{bits}`、`NPY_MIN_INT{bits}`'
- en: 'These are defined for `{bits}` = 8, 16, 32, 64, 128, and 256 and provide the
    maximum (minimum) value of the corresponding (unsigned) integer type. Note: the
    actual integer type may not be available on all platforms (i.e. 128-bit and 256-bit
    integers are rare).'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这些被定义为`{bits}` = 8、16、32、64、128和256，并且提供相应（无符号）整数类型的最大（最小）值。注意：实际整数类型可能不在所有平台上可用（即128位和256位整数很少见）。
- en: '`NPY_MIN_{type}`'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MIN_{type}`'
- en: This is defined for `{type}` = **BYTE**, **SHORT**, **INT**, **LONG**, **LONGLONG**,
    **INTP**
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为`{type}` = **BYTE**、**SHORT**、**INT**、**LONG**、**LONGLONG**、**INTP**定义的。
- en: '`NPY_MAX_{type}`'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MAX_{type}`'
- en: This is defined for all defined for `{type}` = **BYTE**, **UBYTE**, **SHORT**,
    **USHORT**, **INT**, **UINT**, **LONG**, **ULONG**, **LONGLONG**, **ULONGLONG**,
    **INTP**, **UINTP**
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于所有定义的`{type}` = **BYTE**、**UBYTE**、**SHORT**、**USHORT**、**INT**、**UINT**、**LONG**、**ULONG**、**LONGLONG**、**ULONGLONG**、**INTP**、**UINTP**都有定义。
- en: Number of bits in data types
  id: totrans-272
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据类型的位数
- en: All `NPY_SIZEOF_{CTYPE}` constants have corresponding `NPY_BITSOF_{CTYPE}` constants
    defined. The `NPY_BITSOF_{CTYPE}` constants provide the number of bits in the
    data type. Specifically, the available `{CTYPE}s` are
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的`NPY_SIZEOF_{CTYPE}`常量都有相应的`NPY_BITSOF_{CTYPE}`常量定义。`NPY_BITSOF_{CTYPE}`常量提供数据类型的位数。具体来说，可用的`{CTYPE}s`是
- en: '**BOOL**, **CHAR**, **SHORT**, **INT**, **LONG**, **LONGLONG**, **FLOAT**,
    **DOUBLE**, **LONGDOUBLE**'
  id: totrans-274
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**BOOL**、**CHAR**、**SHORT**、**INT**、**LONG**、**LONGLONG**、**FLOAT**、**DOUBLE**、**LONGDOUBLE**'
- en: Bit-width references to enumerated typenums
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 位宽引用枚举类型编号
- en: All of the numeric data types (integer, floating point, and complex) have constants
    that are defined to be a specific enumerated type number. Exactly which enumerated
    type a bit-width type refers to is platform dependent. In particular, the constants
    available are `PyArray_{NAME}{BITS}` where `{NAME}` is **INT**, **UINT**, **FLOAT**,
    **COMPLEX** and `{BITS}` can be 8, 16, 32, 64, 80, 96, 128, 160, 192, 256, and
    512\. Obviously not all bit-widths are available on all platforms for all the
    kinds of numeric types. Commonly 8-, 16-, 32-, 64-bit integers; 32-, 64-bit floats;
    and 64-, 128-bit complex types are available.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的数值数据类型（整数、浮点数和复数）都有被定义为特定枚举类型数字的常量。具体来说，位宽类型指的是哪个枚举类型取决于平台。特别地，可用的常量为`PyArray_{NAME}{BITS}`，其中`{NAME}`为**INT**、**UINT**、**FLOAT**、**COMPLEX**，`{BITS}`可以是8、16、32、64、80、96、128、160、192、256和512。显然，并非所有的位宽在所有平台上都可用于所有类型的数值类型。通常有8位、16位、32位、64位整数；32位、64位浮点数；以及64位、128位复数类型可用。
- en: Integer that can hold a pointer
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可以容纳指针的整数
- en: The constants **NPY_INTP** and **NPY_UINTP** refer to an enumerated integer
    type that is large enough to hold a pointer on the platform. Index arrays should
    always be converted to **NPY_INTP** , because the dimension of the array is of
    type npy_intp.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 常量**NPY_INTP**和**NPY_UINTP**指的是足够大以容纳指针的枚举整数类型。索引数组应始终转换为**NPY_INTP**，因为数组的维度是np.intp类型。
- en: Max and min values for integers
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 整数的最大和最小值
- en: '`NPY_MAX_INT{bits}`, `NPY_MAX_UINT{bits}`, `NPY_MIN_INT{bits}`'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MAX_INT{bits}`, `NPY_MAX_UINT{bits}`, `NPY_MIN_INT{bits}`'
- en: 'These are defined for `{bits}` = 8, 16, 32, 64, 128, and 256 and provide the
    maximum (minimum) value of the corresponding (unsigned) integer type. Note: the
    actual integer type may not be available on all platforms (i.e. 128-bit and 256-bit
    integers are rare).'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是为`{bits}` = 8、16、32、64、128和256定义的，并提供相应（无符号）整数类型的最大（最小）值。注意：实际整数类型可能不在所有平台上都可用（即128位和256位整数很少见）。
- en: '`NPY_MIN_{type}`'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MIN_{type}`'
- en: This is defined for `{type}` = **BYTE**, **SHORT**, **INT**, **LONG**, **LONGLONG**,
    **INTP**
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为`{type}` = **BYTE**，**SHORT**，**INT**，**LONG**，**LONGLONG**，**INTP**定义的。
- en: '`NPY_MAX_{type}`'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_MAX_{type}`'
- en: This is defined for all defined for `{type}` = **BYTE**, **UBYTE**, **SHORT**,
    **USHORT**, **INT**, **UINT**, **LONG**, **ULONG**, **LONGLONG**, **ULONGLONG**,
    **INTP**, **UINTP**
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为所有已定义的`{type}` = **BYTE**，**UBYTE**，**SHORT**，**USHORT**，**INT**，**UINT**，**LONG**，**ULONG**，**LONGLONG**，**ULONGLONG**，**INTP**，**UINTP**定义的。
- en: Number of bits in data types
  id: totrans-286
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据类型中的位数
- en: All `NPY_SIZEOF_{CTYPE}` constants have corresponding `NPY_BITSOF_{CTYPE}` constants
    defined. The `NPY_BITSOF_{CTYPE}` constants provide the number of bits in the
    data type. Specifically, the available `{CTYPE}s` are
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 所有`NPY_SIZEOF_{CTYPE}`常量都有相应的`NPY_BITSOF_{CTYPE}`常量定义。`NPY_BITSOF_{CTYPE}`常量提供了数据类型中的位数。具体来说，可用的`{CTYPE}s`为
- en: '**BOOL**, **CHAR**, **SHORT**, **INT**, **LONG**, **LONGLONG**, **FLOAT**,
    **DOUBLE**, **LONGDOUBLE**'
  id: totrans-288
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**BOOL**，**CHAR**，**SHORT**，**INT**，**LONG**，**LONGLONG**，**FLOAT**，**DOUBLE**，**LONGDOUBLE**'
- en: Bit-width references to enumerated typenums
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 位宽参考枚举类型编号
- en: All of the numeric data types (integer, floating point, and complex) have constants
    that are defined to be a specific enumerated type number. Exactly which enumerated
    type a bit-width type refers to is platform dependent. In particular, the constants
    available are `PyArray_{NAME}{BITS}` where `{NAME}` is **INT**, **UINT**, **FLOAT**,
    **COMPLEX** and `{BITS}` can be 8, 16, 32, 64, 80, 96, 128, 160, 192, 256, and
    512\. Obviously not all bit-widths are available on all platforms for all the
    kinds of numeric types. Commonly 8-, 16-, 32-, 64-bit integers; 32-, 64-bit floats;
    and 64-, 128-bit complex types are available.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 所有数字数据类型（整数、浮点和复数）都有常量定义为特定的枚举类型编号。位宽类型引用的具体枚举类型取决于平台。特别是，可用的常量是`PyArray_{NAME}{BITS}`，其中`{NAME}`为**INT**，**UINT**，**FLOAT**，**COMPLEX**，`{BITS}`可以是8、16、32、64、80、96、128、160、192、256和512\.
    很明显，并非所有位宽都在所有数字类型的所有平台上都可用。通常可用的是8位、16位、32位、64位整数；32位、64位浮点数；64位、128位复数类型。
- en: Integer that can hold a pointer
  id: totrans-291
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可以保存指针的整数
- en: The constants **NPY_INTP** and **NPY_UINTP** refer to an enumerated integer
    type that is large enough to hold a pointer on the platform. Index arrays should
    always be converted to **NPY_INTP** , because the dimension of the array is of
    type npy_intp.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 常量**NPY_INTP**和**NPY_UINTP**指的是枚举整数类型，足以在平台上保存指针。索引数组应始终转换为**NPY_INTP**，因为数组的维度是np_intp类型。
- en: C-type names
  id: totrans-293
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: C类型名称
- en: There are standard variable types for each of the numeric data types and the
    bool data type. Some of these are already available in the C-specification. You
    can create variables in extension code with these types.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每种数字数据类型和布尔数据类型，都有标准的变量类型。其中一些已经在C规范中可用。您可以使用这些类型在扩展代码中创建变量。
- en: Boolean
  id: totrans-295
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE121]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: unsigned char; The constants [`NPY_FALSE`](array.html#c.NPY_FALSE "NPY_FALSE")
    and [`NPY_TRUE`](array.html#c.NPY_TRUE "NPY_TRUE") are also defined.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号字符；还定义了常量[`NPY_FALSE`](array.html#c.NPY_FALSE "NPY_FALSE")和[`NPY_TRUE`](array.html#c.NPY_TRUE
    "NPY_TRUE")。
- en: (Un)Signed Integer
  id: totrans-298
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: （无）符号整数
- en: Unsigned versions of the integers can be defined by pre-pending a ‘u’ to the
    front of the integer name.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号整数的版本可以通过在整数名称前加上‘u’来定义。
- en: '[PRE122]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: char
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: char
- en: '[PRE123]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: unsigned char
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号字符
- en: '[PRE124]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: short
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: short
- en: '[PRE125]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: unsigned short
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号短整数
- en: '[PRE126]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: int
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: int
- en: '[PRE127]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: unsigned int
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号整数
- en: '[PRE128]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 16-bit integer
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 16位整数
- en: '[PRE129]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: 16-bit unsigned integer
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 16位无符号整数
- en: '[PRE130]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 32-bit integer
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 32位整数
- en: '[PRE131]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: 32-bit unsigned integer
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 32位无符号整数
- en: '[PRE132]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 64-bit integer
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 64位整数
- en: '[PRE133]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: 64-bit unsigned integer
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 64位无符号整数
- en: '[PRE134]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: long int
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 长整型
- en: '[PRE135]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: unsigned long int
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号长整数
- en: '[PRE136]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: long long int
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 长长整型
- en: '[PRE137]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: unsigned long long int
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号长长整型
- en: '[PRE138]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: Py_intptr_t (an integer that is the size of a pointer on the platform).
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: Py_intptr_t（在平台上与指针大小相同的整数）。
- en: '[PRE139]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: unsigned Py_intptr_t (an integer that is the size of a pointer on the platform).
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号Py_intptr_t（在平台上具有指针大小的整数）。
- en: (Complex) Floating point
  id: totrans-336
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: （复数）浮点数
- en: '[PRE140]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 16-bit float
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 16位浮点数
- en: '[PRE141]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 32-bit float
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 32位浮点数
- en: '[PRE142]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 32-bit complex float
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 32位复数浮点数
- en: '[PRE143]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 64-bit double
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 64位双精度
- en: '[PRE144]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 64-bit complex double
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 64位复数双精度
- en: '[PRE145]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: long double
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 长双精度
- en: '[PRE146]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: long complex double
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 长复数双精度
- en: complex types are structures with **.real** and **.imag** members (in that order).
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂类型是具有**.real**和**.imag**成员（按顺序排列）的结构。
- en: Bit-width names
  id: totrans-352
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 位宽名称
- en: There are also typedefs for signed integers, unsigned integers, floating point,
    and complex floating point types of specific bit- widths. The available type names
    are
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 还有用于特定位宽的有符号整数、无符号整数、浮点数和复数浮点数的 typedef。可用的类型名称包括
- en: '`npy_int{bits}`, `npy_uint{bits}`, `npy_float{bits}`, and `npy_complex{bits}`'
  id: totrans-354
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`npy_int{bits}`, `npy_uint{bits}`, `npy_float{bits}`, 和 `npy_complex{bits}`'
- en: where `{bits}` is the number of bits in the type and can be **8**, **16**, **32**,
    **64**, 128, and 256 for integer types; 16, **32** , **64**, 80, 96, 128, and
    256 for floating-point types; and 32, **64**, **128**, 160, 192, and 512 for complex-valued
    types. Which bit-widths are available is platform dependent. The bolded bit-widths
    are usually available on all platforms.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `{bits}` 是类型中的位数，可以是 **8**、**16**、**32**、**64**、128，和 256 用于整数类型；16、**32**、**64**、80、96、128
    和 256 用于浮点类型；以及 32、**64**、**128**、160、192 和 512 用于复数值类型。可用的位宽取决于平台。加粗的位宽通常在所有平台上都可用。
- en: Boolean
  id: totrans-356
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE147]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: unsigned char; The constants [`NPY_FALSE`](array.html#c.NPY_FALSE "NPY_FALSE")
    and [`NPY_TRUE`](array.html#c.NPY_TRUE "NPY_TRUE") are also defined.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号字符；常量 [`NPY_FALSE`](array.html#c.NPY_FALSE "NPY_FALSE") 和 [`NPY_TRUE`](array.html#c.NPY_TRUE
    "NPY_TRUE") 也被定义了。
- en: (Un)Signed Integer
  id: totrans-359
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: （非）有符号整数
- en: Unsigned versions of the integers can be defined by pre-pending a ‘u’ to the
    front of the integer name.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 整数的无符号版本可以通过在整数名称前加上‘u’来定义。
- en: '[PRE148]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: char
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 字符
- en: '[PRE149]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: unsigned char
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号字符
- en: '[PRE150]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: short
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 短
- en: '[PRE151]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: unsigned short
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号短整型
- en: '[PRE152]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: int
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 整型
- en: '[PRE153]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: unsigned int
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号整数
- en: '[PRE154]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 16-bit integer
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 16 位整数
- en: '[PRE155]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: 16-bit unsigned integer
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 16 位无符号整数
- en: '[PRE156]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: 32-bit integer
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 32 位整数
- en: '[PRE157]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 32-bit unsigned integer
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 32 位无符号整数
- en: '[PRE158]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 64-bit integer
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 64 位整数
- en: '[PRE159]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 64-bit unsigned integer
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 64 位无符号整数
- en: '[PRE160]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: long int
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 长整型
- en: '[PRE161]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: unsigned long int
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号长整型
- en: '[PRE162]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: long long int
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 长长整型
- en: '[PRE163]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: unsigned long long int
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号长长整型
- en: '[PRE164]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: Py_intptr_t (an integer that is the size of a pointer on the platform).
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: Py_intptr_t（与平台上指针大小相同的整数）。
- en: '[PRE165]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: unsigned Py_intptr_t (an integer that is the size of a pointer on the platform).
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 无符号 Py_intptr_t（与平台上指针大小相同的整数）。
- en: (Complex) Floating point
  id: totrans-397
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: （复数）浮点数
- en: '[PRE166]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: 16-bit float
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 16 位浮点数
- en: '[PRE167]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 32-bit float
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 32 位浮点数
- en: '[PRE168]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 32-bit complex float
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 32 位复数浮点数
- en: '[PRE169]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 64-bit double
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 64 位双精度
- en: '[PRE170]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: 64-bit complex double
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 64 位复数双精度
- en: '[PRE171]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: long double
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 长双精度
- en: '[PRE172]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: long complex double
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 长复数双精度
- en: complex types are structures with **.real** and **.imag** members (in that order).
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂类型是具有**.real**和**.imag**成员（按顺序排列）的结构。
- en: Bit-width names
  id: totrans-413
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 位宽名称
- en: There are also typedefs for signed integers, unsigned integers, floating point,
    and complex floating point types of specific bit- widths. The available type names
    are
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 还有用于特定位宽的有符号整数、无符号整数、浮点数和复数浮点数的 typedef。可用的类型名称包括
- en: '`npy_int{bits}`, `npy_uint{bits}`, `npy_float{bits}`, and `npy_complex{bits}`'
  id: totrans-415
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`npy_int{bits}`, `npy_uint{bits}`, `npy_float{bits}`, 和 `npy_complex{bits}`'
- en: where `{bits}` is the number of bits in the type and can be **8**, **16**, **32**,
    **64**, 128, and 256 for integer types; 16, **32** , **64**, 80, 96, 128, and
    256 for floating-point types; and 32, **64**, **128**, 160, 192, and 512 for complex-valued
    types. Which bit-widths are available is platform dependent. The bolded bit-widths
    are usually available on all platforms.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `{bits}` 是类型中的位数，可以是 **8**、**16**、**32**、**64**、128，和 256 用于整数类型；16、**32**、**64**、80、96、128
    和 256 用于浮点类型；以及 32、**64**、**128**、160、192 和 512 用于复数值类型。可用的位宽取决于平台。加粗的位宽通常在所有平台上都可用。
- en: Printf Formatting
  id: totrans-417
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Printf 格式化
- en: For help in printing, the following strings are defined as the correct format
    specifier in printf and related commands.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 对于打印帮助，以下字符串被定义为 printf 和相关命令中的正确格式说明符。
- en: '[PRE173]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: '[PRE174]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: '[PRE175]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: '[PRE176]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: '[PRE177]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
