["```py\nma.nonzero(self) = <numpy.ma.core._frommethod object>\n```", "```py\na[a.nonzero()] \n```", "```py\nnp.transpose(a.nonzero()) \n```", "```py\n>>> import numpy.ma as ma\n>>> x = ma.array(np.eye(3))\n>>> x\nmasked_array(\n data=[[1., 0., 0.],\n [0., 1., 0.],\n [0., 0., 1.]],\n mask=False,\n fill_value=1e+20)\n>>> x.nonzero()\n(array([0, 1, 2]), array([0, 1, 2])) \n```", "```py\n>>> x[1, 1] = ma.masked\n>>> x\nmasked_array(\n data=[[1.0, 0.0, 0.0],\n [0.0, --, 0.0],\n [0.0, 0.0, 1.0]],\n mask=[[False, False, False],\n [False,  True, False],\n [False, False, False]],\n fill_value=1e+20)\n>>> x.nonzero()\n(array([0, 2]), array([0, 2])) \n```", "```py\n>>> np.transpose(x.nonzero())\narray([[0, 0],\n [2, 2]]) \n```", "```py\n>>> a = ma.array([[1,2,3],[4,5,6],[7,8,9]])\n>>> a > 3\nmasked_array(\n data=[[False, False, False],\n [ True,  True,  True],\n [ True,  True,  True]],\n mask=False,\n fill_value=True)\n>>> ma.nonzero(a > 3)\n(array([1, 1, 1, 2, 2, 2]), array([0, 1, 2, 0, 1, 2])) \n```", "```py\n>>> (a > 3).nonzero()\n(array([1, 1, 1, 2, 2, 2]), array([0, 1, 2, 0, 1, 2])) \n```"]