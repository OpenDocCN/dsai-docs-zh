- en: Entities
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/geometry/entities.html](https://docs.sympy.org/latest/modules/geometry/entities.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The base class for all geometrical entities.
  prefs: []
  type: TYPE_NORMAL
- en: This class does not represent any particular geometric entity, it only provides
    the implementation of some methods common to all subclasses.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: What is the dimension of the space that the object is contained in?
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Return a tuple (xmin, ymin, xmax, ymax) representing the bounding rectangle
    for the geometric figure.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Return True if o is inside (not on or outside) the boundaries of self.
  prefs: []
  type: TYPE_NORMAL
- en: The object will be decomposed into Points and individual Entities need only
    define an encloses_point method for their class.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.ellipse.Ellipse.encloses_point`](ellipses.html#sympy.geometry.ellipse.Ellipse.encloses_point
    "sympy.geometry.ellipse.Ellipse.encloses_point"), [`sympy.geometry.polygon.Polygon.encloses_point`](polygons.html#sympy.geometry.polygon.Polygon.encloses_point
    "sympy.geometry.polygon.Polygon.encloses_point")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Returns a list of all of the intersections of self with o.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: An entity is not required to implement this method.
  prefs: []
  type: TYPE_NORMAL
- en: If two different types of entities can intersect, the item with higher index
    in ordering_of_classes should implement intersections with anything having a lower
    index.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.util.intersection`](utils.html#sympy.geometry.util.intersection
    "sympy.geometry.util.intersection")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Is this geometrical entity similar to another geometrical entity?
  prefs: []
  type: TYPE_NORMAL
- en: Two entities are similar if a uniform scaling (enlarging or shrinking) of one
    of the entities will allow one to obtain the other.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This method is not intended to be used directly but rather through the \(are_similar\)
    function found in util.py. An entity is not required to implement this method.
    If two different types of entities can be similar, it is only required that one
    of them be able to determine this.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scale`](#sympy.geometry.entity.GeometryEntity.scale "sympy.geometry.entity.GeometryEntity.scale")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Return the parameter corresponding to the given point. Evaluating an arbitrary
    point of the entity at this parameter value will return the given point.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Reflects an object across a line.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**line: Line**'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Rotate `angle` radians counterclockwise about Point `pt`.
  prefs: []
  type: TYPE_NORMAL
- en: The default pt is the origin, Point(0, 0)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scale`](#sympy.geometry.entity.GeometryEntity.scale "sympy.geometry.entity.GeometryEntity.scale"),
    [`translate`](#sympy.geometry.entity.GeometryEntity.translate "sympy.geometry.entity.GeometryEntity.translate")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Scale the object by multiplying the x,y-coordinates by x and y.
  prefs: []
  type: TYPE_NORMAL
- en: If pt is given, the scaling is done relative to that point; the object is shifted
    by -pt, scaled, and shifted by pt.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`rotate`](#sympy.geometry.entity.GeometryEntity.rotate "sympy.geometry.entity.GeometryEntity.rotate"),
    [`translate`](#sympy.geometry.entity.GeometryEntity.translate "sympy.geometry.entity.GeometryEntity.translate")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Shift the object by adding to the x,y-coordinates the values x and y.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`rotate`](#sympy.geometry.entity.GeometryEntity.rotate "sympy.geometry.entity.GeometryEntity.rotate"),
    [`scale`](#sympy.geometry.entity.GeometryEntity.scale "sympy.geometry.entity.GeometryEntity.scale")'
  prefs: []
  type: TYPE_NORMAL
