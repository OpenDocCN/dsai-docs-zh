- en: numpy.floor_divide
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.floor_divide
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.floor_divide.html](https://numpy.org/doc/1.26/reference/generated/numpy.floor_divide.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.floor_divide.html](https://numpy.org/doc/1.26/reference/generated/numpy.floor_divide.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the largest integer smaller or equal to the division of the inputs. It
    is equivalent to the Python `//` operator and pairs with the Python `%` ([`remainder`](numpy.remainder.html#numpy.remainder
    "numpy.remainder")), function so that `a = a % b + b * (a // b)` up to roundoff.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回小于或等于输入除法的最大整数。它等同于Python的`//`运算符，并与Python的%（[`remainder`](numpy.remainder.html#numpy.remainder
    "numpy.remainder")）函数配对，因此`a = a % b + b * (a // b)`直到舍入误差。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x1**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**x1**array_like'
- en: Numerator.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 分子。
- en: '**x2**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**x2**array_like'
- en: Denominator. If `x1.shape != x2.shape`, they must be broadcastable to a common
    shape (which becomes the shape of the output).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 分母。如果`x1.shape != x2.shape`，它们必须能够广播到一个公共形状（这将成为输出的形状）。
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray、None或ndarray和None的元组，可选'
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 存储结果的位置。如果提供，它必须具有输入广播到的形状。如果未提供或为None，则返回一个新分配的数组。一个元组（仅作为关键字参数）的长度必须等于输出的数量。
- en: '**where**array_like, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**array_like，可选'
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此条件广播到输入。在条件为True的位置，*out*数组将设置为ufunc结果。在其他地方，*out*数组将保留其原始值。请注意，如果通过默认的`out=None`创建了一个未初始化的*out*数组，则其中条件为False的位置将保持未初始化状态。
- en: '****kwargs**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他仅限关键字参数，请参阅[ufunc文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'Returns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**ndarray'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**ndarray'
- en: y = floor(*x1*/*x2*) This is a scalar if both *x1* and *x2* are scalars.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: y = floor(*x1*/*x2*) 如果*x1*和*x2*都是标量，则为标量。
- en: See also
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`remainder`](numpy.remainder.html#numpy.remainder "numpy.remainder")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`remainder`](numpy.remainder.html#numpy.remainder "numpy.remainder")'
- en: Remainder complementary to floor_divide.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 余数，与floor_divide互补。
- en: '[`divmod`](numpy.divmod.html#numpy.divmod "numpy.divmod")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`divmod`](numpy.divmod.html#numpy.divmod "numpy.divmod")'
- en: Simultaneous floor division and remainder.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 同时执行地板除法和余数计算。
- en: '[`divide`](numpy.divide.html#numpy.divide "numpy.divide")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`divide`](numpy.divide.html#numpy.divide "numpy.divide")'
- en: Standard division.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 标准除法。
- en: '[`floor`](numpy.floor.html#numpy.floor "numpy.floor")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`floor`](numpy.floor.html#numpy.floor "numpy.floor")'
- en: Round a number to the nearest integer toward minus infinity.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 将数字四舍五入到最接近的整数向下取整。
- en: '[`ceil`](numpy.ceil.html#numpy.ceil "numpy.ceil")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ceil`](numpy.ceil.html#numpy.ceil "numpy.ceil")'
- en: Round a number to the nearest integer toward infinity.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 将数字四舍五入到最接近的整数向上取整。
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `//` operator can be used as a shorthand for `np.floor_divide` on ndarrays.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`//`运算符可用作ndarrays上`np.floor_divide`的简写。'
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
