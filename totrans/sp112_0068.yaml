- en: scipy.fft.idst
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.idst.html#scipy.fft.idst](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.idst.html#scipy.fft.idst)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the Inverse Discrete Sine Transform of an arbitrary type sequence.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**type**{1, 2, 3, 4}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Type of the DST (see Notes). Default type is 2.
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Length of the transform. If `n < x.shape[axis]`, *x* is truncated. If `n > x.shape[axis]`,
    *x* is zero-padded. The default results in `n = x.shape[axis]`.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which the idst is computed; the default is over the last axis (i.e.,
    `axis=-1`).
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Normalization mode (see Notes). Default is “backward”.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_x**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, the contents of *x* can be destroyed; the default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**workers**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum number of workers to use for parallel computation. If negative, the
    value wraps around from `os.cpu_count()`. See [`fft`](scipy.fft.fft.html#scipy.fft.fft
    "scipy.fft.fft") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**orthogonalize**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to use the orthogonalized IDST variant (see Notes). Defaults to `True`
    when `norm="ortho"` and `False` otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.8.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**idst**ndarray of real'
  prefs: []
  type: TYPE_NORMAL
- en: The transformed input array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`dst`](scipy.fft.dst.html#scipy.fft.dst "scipy.fft.dst")'
  prefs: []
  type: TYPE_NORMAL
- en: Forward DST
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: For `type in {2, 3}`, `norm="ortho"` breaks the direct correspondence with the
    inverse direct Fourier transform.
  prefs: []
  type: TYPE_NORMAL
- en: For `norm="ortho"` both the [`dst`](scipy.fft.dst.html#scipy.fft.dst "scipy.fft.dst")
    and [`idst`](#scipy.fft.idst "scipy.fft.idst") are scaled by the same overall
    factor in both directions. By default, the transform is also orthogonalized which
    for types 2 and 3 means the transform definition is modified to give orthogonality
    of the DST matrix (see [`dst`](scipy.fft.dst.html#scipy.fft.dst "scipy.fft.dst")
    for the full definitions).
  prefs: []
  type: TYPE_NORMAL
- en: ‘The’ IDST is the IDST-II, which is the same as the normalized DST-III.
  prefs: []
  type: TYPE_NORMAL
- en: The IDST is equivalent to a normal DST except for the normalization and type.
    DST type 1 and 4 are their own inverse and DSTs 2 and 3 are each other’s inverses.
  prefs: []
  type: TYPE_NORMAL
