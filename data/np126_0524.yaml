- en: numpy.load
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.load
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.load.html](https://numpy.org/doc/1.26/reference/generated/numpy.load.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.load.html](https://numpy.org/doc/1.26/reference/generated/numpy.load.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Load arrays or pickled objects from `.npy`, `.npz` or pickled files.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从`.npy`、`.npz`或拾取文件中加载数组或拾取对象。
- en: Warning
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Loading files that contain object arrays uses the `pickle` module, which is
    not secure against erroneous or maliciously constructed data. Consider passing
    `allow_pickle=False` to load data that is known not to contain object arrays for
    the safer handling of untrusted sources.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 包含对象数组的文件使用`pickle`模块，该模块不安全，可能导致错误或恶意构造的数据。考虑传递`allow_pickle=False`来加载已知不包含对象数组的数据，以更安全地处理不受信任的来源。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**file**file-like object, string, or pathlib.Path'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**file**类文件对象，字符串或pathlib.Path'
- en: The file to read. File-like objects must support the `seek()` and `read()` methods
    and must always be opened in binary mode. Pickled files require that the file-like
    object support the `readline()` method as well.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要读取的文件。类文件对象必须支持`seek()`和`read()`方法，并且必须始终以二进制模式打开。已经拾取的文件需要类文件对象也支持`readline()`方法。
- en: '**mmap_mode**{None, ‘r+’, ‘r’, ‘w+’, ‘c’}, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**mmap_mode**{None, ‘r+’, ‘r’, ‘w+’, ‘c’}，可选'
- en: If not None, then memory-map the file, using the given mode (see [`numpy.memmap`](numpy.memmap.html#numpy.memmap
    "numpy.memmap") for a detailed description of the modes). A memory-mapped array
    is kept on disk. However, it can be accessed and sliced like any ndarray. Memory
    mapping is especially useful for accessing small fragments of large files without
    reading the entire file into memory.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不是None，则使用给定的模式内存映射文件（查看[`numpy.memmap`](numpy.memmap.html#numpy.memmap "numpy.memmap")以获取模式的详细描述）。内存映射数组保存在磁盘上。但是，它可以像任何ndarray一样被访问和切片。内存映射对于在不将整个文件读入内存的情况下访问大文件的小片段特别有用。
- en: '**allow_pickle**bool, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**allow_pickle**布尔型，可选'
- en: 'Allow loading pickled object arrays stored in npy files. Reasons for disallowing
    pickles include security, as loading pickled data can execute arbitrary code.
    If pickles are disallowed, loading object arrays will fail. Default: False'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 允许加载存储在npy文件中的拾取对象数组。不允许拾取的原因包括安全性，因为加载拾取数据可以执行任意代码。如果不允许拾取，加载对象数组将失败。默认值：False
- en: 'Changed in version 1.16.3: Made default False in response to CVE-2019-6446.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在版本1.16.3中更改：对CVE-2019-6446作出默认为False的响应。
- en: '**fix_imports**bool, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**fix_imports**布尔型，可选'
- en: Only useful when loading Python 2 generated pickled files on Python 3, which
    includes npy/npz files containing object arrays. If *fix_imports* is True, pickle
    will try to map the old Python 2 names to the new names used in Python 3.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在Python 3上加载Python 2生成的拾取文件时才有用，其中包括包含对象数组的npy/npz文件。如果*fix_imports*为True，pickle将尝试将旧的Python
    2名称映射到Python 3中使用的新名称。
- en: '**encoding**str, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**encoding**字符串，可选'
- en: 'What encoding to use when reading Python 2 strings. Only useful when loading
    Python 2 generated pickled files in Python 3, which includes npy/npz files containing
    object arrays. Values other than ‘latin1’, ‘ASCII’, and ‘bytes’ are not allowed,
    as they can corrupt numerical data. Default: ‘ASCII’'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 读取Python 2字符串时要使用的编码。仅在Python 3中加载Python 2生成的拾取文件时才有用，其中包括包含对象数组的npy/npz文件。不允许使用除'latin1'、'ASCII'和'bytes'以外的值，因为它们可能会破坏数值数据。默认值：'ASCII'
- en: '**max_header_size**int, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**max_header_size**整数，可选'
- en: Maximum allowed size of the header. Large headers may not be safe to load securely
    and thus require explicitly passing a larger value. See [`ast.literal_eval`](https://docs.python.org/3/library/ast.html#ast.literal_eval
    "(in Python v3.11)") for details. This option is ignored when *allow_pickle* is
    passed. In that case the file is by definition trusted and the limit is unnecessary.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 标头的最大允许大小。大标头可能无法安全加载，因此需要显式传递较大的值。有关详细信息，请参见[`ast.literal_eval`](https://docs.python.org/3/library/ast.html#ast.literal_eval
    "(在Python v3.11中)")。在传递*allow_pickle*时，此选项将被忽略。在这种情况下，文件从定义上是受信任的，限制是不必要的。
- en: 'Returns:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**result**array, tuple, dict, etc.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**result**数组，元组，字典等。'
- en: Data stored in the file. For `.npz` files, the returned instance of NpzFile
    class must be closed to avoid leaking file descriptors.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 文件中存储的数据。对于`.npz`文件，返回的NpzFile类实例必须关闭，以避免泄漏文件描述符。
- en: 'Raises:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: OSError
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: OSError
- en: If the input file does not exist or cannot be read.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入文件不存在或无法读取。
- en: UnpicklingError
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: UnpicklingError
- en: If `allow_pickle=True`, but the file cannot be loaded as a pickle.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`allow_pickle=True`，但文件无法作为拾取加载。
- en: ValueError
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: The file contains an object array, but `allow_pickle=False` given.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 文件包含对象数组，但给定“allow_pickle=False”。
- en: EOFError
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: EOFError
- en: When calling `np.load` multiple times on the same file handle, if all data has
    already been read
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一文件句柄上多次调用`np.load`时，如果所有数据已被读取
- en: See also
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`save`](numpy.save.html#numpy.save "numpy.save"), [`savez`](numpy.savez.html#numpy.savez
    "numpy.savez"), [`savez_compressed`](numpy.savez_compressed.html#numpy.savez_compressed
    "numpy.savez_compressed"), [`loadtxt`](numpy.loadtxt.html#numpy.loadtxt "numpy.loadtxt")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`save`](numpy.save.html#numpy.save "numpy.save"), [`savez`](numpy.savez.html#numpy.savez
    "numpy.savez"), [`savez_compressed`](numpy.savez_compressed.html#numpy.savez_compressed
    "numpy.savez_compressed"), [`loadtxt`](numpy.loadtxt.html#numpy.loadtxt "numpy.loadtxt")'
- en: '[`memmap`](numpy.memmap.html#numpy.memmap "numpy.memmap")'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`memmap`](numpy.memmap.html#numpy.memmap "numpy.memmap")'
- en: Create a memory-map to an array stored in a file on disk.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个内存映射到存储在磁盘文件中的数组。
- en: '[`lib.format.open_memmap`](numpy.lib.format.open_memmap.html#numpy.lib.format.open_memmap
    "numpy.lib.format.open_memmap")'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lib.format.open_memmap`](numpy.lib.format.open_memmap.html#numpy.lib.format.open_memmap
    "numpy.lib.format.open_memmap")'
- en: Create or load a memory-mapped `.npy` file.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 创建或加载一个内存映射的`.npy`文件。
- en: Notes
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If the file contains pickle data, then whatever object is stored in the pickle
    is returned.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件包含pickle数据，那么将返回pickle中存储的任何对象。
- en: If the file is a `.npy` file, then a single array is returned.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件是一个`.npy`文件，则返回一个单个数组。
- en: 'If the file is a `.npz` file, then a dictionary-like object is returned, containing
    `{filename: array}` key-value pairs, one for each file in the archive.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如果文件是一个`.npz`文件，那么将返回一个类似字典的对象，包含了存档中每个文件的`{文件名: 数组}`键值对。'
- en: 'If the file is a `.npz` file, the returned value supports the context manager
    protocol in a similar fashion to the open function:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件是一个`.npz`文件，则返回的值支持上下文管理器协议，类似于`open`函数：
- en: '[PRE1]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The underlying file descriptor is closed when exiting the ‘with’ block.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当退出‘with’块时，底层文件描述符将被关闭。
- en: Examples
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Store data to disk, and load it again:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据存储到磁盘，然后再次加载它：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Store compressed data to disk, and load it again:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 将压缩数据存储到磁盘，然后再次加载它：
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Mem-map the stored array, and then access the second row directly from disk:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 内存映射存储的数组，直接从磁盘访问第二行：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
