- en: pandas.read_pickle
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.read_pickle.html](https://pandas.pydata.org/docs/reference/api/pandas.read_pickle.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Load pickled pandas object (or any object) from file.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Loading pickled data received from untrusted sources can be unsafe. See [here](https://docs.python.org/3/library/pickle.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**filepath_or_buffer**str, path object, or file-like object'
  prefs: []
  type: TYPE_NORMAL
- en: String, path object (implementing `os.PathLike[str]`), or file-like object implementing
    a binary `readlines()` function. Also accepts URL. URL is not limited to S3 and
    GCS.
  prefs: []
  type: TYPE_NORMAL
- en: '**compression**str or dict, default ‘infer’'
  prefs: []
  type: TYPE_NORMAL
- en: 'For on-the-fly decompression of on-disk data. If ‘infer’ and ‘filepath_or_buffer’
    is path-like, then detect compression from the following extensions: ‘.gz’, ‘.bz2’,
    ‘.zip’, ‘.xz’, ‘.zst’, ‘.tar’, ‘.tar.gz’, ‘.tar.xz’ or ‘.tar.bz2’ (otherwise no
    compression). If using ‘zip’ or ‘tar’, the ZIP file must contain only one data
    file to be read in. Set to `None` for no decompression. Can also be a dict with
    key `''method''` set to one of {`''zip''`, `''gzip''`, `''bz2''`, `''zstd''`,
    `''xz''`, `''tar''`} and other key-value pairs are forwarded to `zipfile.ZipFile`,
    `gzip.GzipFile`, `bz2.BZ2File`, `zstandard.ZstdDecompressor`, `lzma.LZMAFile`
    or `tarfile.TarFile`, respectively. As an example, the following could be passed
    for Zstandard decompression using a custom compression dictionary: `compression={''method'':
    ''zstd'', ''dict_data'': my_compression_dict}`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.5.0: Added support for .tar files.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.4.0: Zstandard support.'
  prefs: []
  type: TYPE_NORMAL
- en: '**storage_options**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Extra options that make sense for a particular storage connection, e.g. host,
    port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded
    to `urllib.request.Request` as header options. For other URLs (e.g. starting with
    “s3://”, and “gcs://”) the key-value pairs are forwarded to `fsspec.open`. Please
    see `fsspec` and `urllib` for more details, and for more examples on storage options
    refer [here](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: same type as object stored in file
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.to_pickle`](pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")'
  prefs: []
  type: TYPE_NORMAL
- en: Pickle (serialize) DataFrame object to file.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.to_pickle`](pandas.Series.to_pickle.html#pandas.Series.to_pickle "pandas.Series.to_pickle")'
  prefs: []
  type: TYPE_NORMAL
- en: Pickle (serialize) Series object to file.
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_hdf`](pandas.read_hdf.html#pandas.read_hdf "pandas.read_hdf")'
  prefs: []
  type: TYPE_NORMAL
- en: Read HDF5 file into a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_sql`](pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  prefs: []
  type: TYPE_NORMAL
- en: Read SQL query or database table into a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_parquet`](pandas.read_parquet.html#pandas.read_parquet "pandas.read_parquet")'
  prefs: []
  type: TYPE_NORMAL
- en: Load a parquet object, returning a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: read_pickle is only guaranteed to be backwards compatible to pandas 0.20.3 provided
    the object was serialized with to_pickle.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
