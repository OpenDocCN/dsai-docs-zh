- en: scipy.interpolate.PPoly
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.PPoly.html#scipy.interpolate.PPoly](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.PPoly.html#scipy.interpolate.PPoly)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Piecewise polynomial in terms of coefficients and breakpoints
  prefs: []
  type: TYPE_NORMAL
- en: 'The polynomial between `x[i]` and `x[i + 1]` is written in the local power
    basis:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: where `k` is the degree of the polynomial.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**c**ndarray, shape (k, m, …)'
  prefs: []
  type: TYPE_NORMAL
- en: Polynomial coefficients, order *k* and *m* intervals.
  prefs: []
  type: TYPE_NORMAL
- en: '**x**ndarray, shape (m+1,)'
  prefs: []
  type: TYPE_NORMAL
- en: Polynomial breakpoints. Must be sorted in either increasing or decreasing order.
  prefs: []
  type: TYPE_NORMAL
- en: '**extrapolate**bool or ‘periodic’, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If bool, determines whether to extrapolate to out-of-bounds points based on
    first and last intervals, or to return NaNs. If ‘periodic’, periodic extrapolation
    is used. Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Interpolation axis. Default is zero.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`BPoly`](scipy.interpolate.BPoly.html#scipy.interpolate.BPoly "scipy.interpolate.BPoly")'
  prefs: []
  type: TYPE_NORMAL
- en: piecewise polynomials in the Bernstein basis
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: High-order polynomials in the power basis can be numerically unstable. Precision
    problems can start to appear for orders larger than 20-30.
  prefs: []
  type: TYPE_NORMAL
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Breakpoints.
  prefs: []
  type: TYPE_NORMAL
- en: '**c**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Coefficients of the polynomials. They are reshaped to a 3-D array with the last
    dimension representing the trailing dimensions of the original coefficient array.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int'
  prefs: []
  type: TYPE_NORMAL
- en: Interpolation axis.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__call__`](scipy.interpolate.PPoly.__call__.html#scipy.interpolate.PPoly.__call__
    "scipy.interpolate.PPoly.__call__")(x[, nu, extrapolate]) | Evaluate the piecewise
    polynomial or its derivative. |'
  prefs: []
  type: TYPE_TB
- en: '| [`derivative`](scipy.interpolate.PPoly.derivative.html#scipy.interpolate.PPoly.derivative
    "scipy.interpolate.PPoly.derivative")([nu]) | Construct a new piecewise polynomial
    representing the derivative. |'
  prefs: []
  type: TYPE_TB
- en: '| [`antiderivative`](scipy.interpolate.PPoly.antiderivative.html#scipy.interpolate.PPoly.antiderivative
    "scipy.interpolate.PPoly.antiderivative")([nu]) | Construct a new piecewise polynomial
    representing the antiderivative. |'
  prefs: []
  type: TYPE_TB
- en: '| [`integrate`](scipy.interpolate.PPoly.integrate.html#scipy.interpolate.PPoly.integrate
    "scipy.interpolate.PPoly.integrate")(a, b[, extrapolate]) | Compute a definite
    integral over a piecewise polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`solve`](scipy.interpolate.PPoly.solve.html#scipy.interpolate.PPoly.solve
    "scipy.interpolate.PPoly.solve")([y, discontinuity, extrapolate]) | Find real
    solutions of the equation `pp(x) == y`. |'
  prefs: []
  type: TYPE_TB
- en: '| [`roots`](scipy.interpolate.PPoly.roots.html#scipy.interpolate.PPoly.roots
    "scipy.interpolate.PPoly.roots")([discontinuity, extrapolate]) | Find real roots
    of the piecewise polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`extend`](scipy.interpolate.PPoly.extend.html#scipy.interpolate.PPoly.extend
    "scipy.interpolate.PPoly.extend")(c, x) | Add additional breakpoints and coefficients
    to the polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`from_spline`](scipy.interpolate.PPoly.from_spline.html#scipy.interpolate.PPoly.from_spline
    "scipy.interpolate.PPoly.from_spline")(tck[, extrapolate]) | Construct a piecewise
    polynomial from a spline |'
  prefs: []
  type: TYPE_TB
- en: '| [`from_bernstein_basis`](scipy.interpolate.PPoly.from_bernstein_basis.html#scipy.interpolate.PPoly.from_bernstein_basis
    "scipy.interpolate.PPoly.from_bernstein_basis")(bp[, extrapolate]) | Construct
    a piecewise polynomial in the power basis from a polynomial in Bernstein basis.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`construct_fast`](scipy.interpolate.PPoly.construct_fast.html#scipy.interpolate.PPoly.construct_fast
    "scipy.interpolate.PPoly.construct_fast")(c, x[, extrapolate, axis]) | Construct
    the piecewise polynomial without making checks. |'
  prefs: []
  type: TYPE_TB
