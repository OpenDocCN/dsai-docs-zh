["```py\nscipy.stats.betaprime = <scipy.stats._continuous_distns.betaprime_gen object>\n```", "```py\n>>> from scipy.stats import betaprime, f\n>>> x = [1, 2, 5, 10]\n>>> a = 12\n>>> b = 5\n>>> betaprime.pdf(x, a, b, scale=2)\narray([0.00541179, 0.08331299, 0.14669185, 0.03150079])\n>>> f.pdf(x, 2*a, 2*b, scale=(a/b)*2)\narray([0.00541179, 0.08331299, 0.14669185, 0.03150079]) \n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import betaprime\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> a, b = 5, 6\n>>> mean, var, skew, kurt = betaprime.stats(a, b, moments='mvsk') \n```", "```py\n>>> x = np.linspace(betaprime.ppf(0.01, a, b),\n...                 betaprime.ppf(0.99, a, b), 100)\n>>> ax.plot(x, betaprime.pdf(x, a, b),\n...        'r-', lw=5, alpha=0.6, label='betaprime pdf') \n```", "```py\n>>> rv = betaprime(a, b)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = betaprime.ppf([0.001, 0.5, 0.999], a, b)\n>>> np.allclose([0.001, 0.5, 0.999], betaprime.cdf(vals, a, b))\nTrue \n```", "```py\n>>> r = betaprime.rvs(a, b, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]