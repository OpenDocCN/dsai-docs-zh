- en: scipy.optimize.LbfgsInvHessProduct
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.LbfgsInvHessProduct
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.LbfgsInvHessProduct.html#scipy.optimize.LbfgsInvHessProduct](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.LbfgsInvHessProduct.html#scipy.optimize.LbfgsInvHessProduct)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.LbfgsInvHessProduct.html#scipy.optimize.LbfgsInvHessProduct](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.LbfgsInvHessProduct.html#scipy.optimize.LbfgsInvHessProduct)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Linear operator for the L-BFGS approximate inverse Hessian.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: L-BFGS近似逆海森线性操作器。
- en: This operator computes the product of a vector with the approximate inverse
    of the Hessian of the objective function, using the L-BFGS limited memory approximation
    to the inverse Hessian, accumulated during the optimization.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 该操作器使用L-BFGS有限存储逆海森近似，在优化过程中累积的目标函数海森逆的向量与向量的乘积。
- en: Objects of this class implement the `scipy.sparse.linalg.LinearOperator` interface.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本类对象实现了`scipy.sparse.linalg.LinearOperator`接口。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**sk**array_like, shape=(n_corr, n)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**sk**array_like, shape=(n_corr, n)'
- en: Array of *n_corr* most recent updates to the solution vector. (See [1]).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*n_corr*最近的解向量更新数组（见[1]）。'
- en: '**yk**array_like, shape=(n_corr, n)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**yk**array_like, shape=(n_corr, n)'
- en: Array of *n_corr* most recent updates to the gradient. (See [1]).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*n_corr*最近的梯度更新数组（见[1]）。'
- en: References
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1]'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: 'Nocedal, Jorge. “Updating quasi-Newton matrices with limited storage.” Mathematics
    of computation 35.151 (1980): 773-782.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 'Nocedal, Jorge. “使用有限存储更新拟牛顿矩阵。” 计算数学 35.151 (1980): 773-782.'
- en: 'Attributes:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '[`H`](scipy.optimize.LbfgsInvHessProduct.H.html#scipy.optimize.LbfgsInvHessProduct.H
    "scipy.optimize.LbfgsInvHessProduct.H")'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`H`](scipy.optimize.LbfgsInvHessProduct.H.html#scipy.optimize.LbfgsInvHessProduct.H
    "scipy.optimize.LbfgsInvHessProduct.H")'
- en: Hermitian adjoint.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 共轭转置。
- en: '[`T`](scipy.optimize.LbfgsInvHessProduct.T.html#scipy.optimize.LbfgsInvHessProduct.T
    "scipy.optimize.LbfgsInvHessProduct.T")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`T`](scipy.optimize.LbfgsInvHessProduct.T.html#scipy.optimize.LbfgsInvHessProduct.T
    "scipy.optimize.LbfgsInvHessProduct.T")'
- en: Transpose this linear operator.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 转置此线性操作器。
- en: Methods
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 方法：
- en: '| [`__call__`](scipy.optimize.LbfgsInvHessProduct.__call__.html#scipy.optimize.LbfgsInvHessProduct.__call__
    "scipy.optimize.LbfgsInvHessProduct.__call__")(x) | Call self as a function. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`__call__`](scipy.optimize.LbfgsInvHessProduct.__call__.html#scipy.optimize.LbfgsInvHessProduct.__call__
    "scipy.optimize.LbfgsInvHessProduct.__call__")(x) | 作为函数调用自身。 |'
- en: '| [`adjoint`](scipy.optimize.LbfgsInvHessProduct.adjoint.html#scipy.optimize.LbfgsInvHessProduct.adjoint
    "scipy.optimize.LbfgsInvHessProduct.adjoint")() | Hermitian adjoint. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`adjoint`](scipy.optimize.LbfgsInvHessProduct.adjoint.html#scipy.optimize.LbfgsInvHessProduct.adjoint
    "scipy.optimize.LbfgsInvHessProduct.adjoint")() | 共轭转置。 |'
- en: '| [`dot`](scipy.optimize.LbfgsInvHessProduct.dot.html#scipy.optimize.LbfgsInvHessProduct.dot
    "scipy.optimize.LbfgsInvHessProduct.dot")(x) | Matrix-matrix or matrix-vector
    multiplication. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`dot`](scipy.optimize.LbfgsInvHessProduct.dot.html#scipy.optimize.LbfgsInvHessProduct.dot
    "scipy.optimize.LbfgsInvHessProduct.dot")(x) | 矩阵-矩阵或矩阵-向量乘法。 |'
- en: '| [`matmat`](scipy.optimize.LbfgsInvHessProduct.matmat.html#scipy.optimize.LbfgsInvHessProduct.matmat
    "scipy.optimize.LbfgsInvHessProduct.matmat")(X) | Matrix-matrix multiplication.
    |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`matmat`](scipy.optimize.LbfgsInvHessProduct.matmat.html#scipy.optimize.LbfgsInvHessProduct.matmat
    "scipy.optimize.LbfgsInvHessProduct.matmat")(X) | 矩阵-矩阵乘法。 |'
- en: '| [`matvec`](scipy.optimize.LbfgsInvHessProduct.matvec.html#scipy.optimize.LbfgsInvHessProduct.matvec
    "scipy.optimize.LbfgsInvHessProduct.matvec")(x) | Matrix-vector multiplication.
    |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`matvec`](scipy.optimize.LbfgsInvHessProduct.matvec.html#scipy.optimize.LbfgsInvHessProduct.matvec
    "scipy.optimize.LbfgsInvHessProduct.matvec")(x) | 矩阵-向量乘法。 |'
- en: '| [`rmatmat`](scipy.optimize.LbfgsInvHessProduct.rmatmat.html#scipy.optimize.LbfgsInvHessProduct.rmatmat
    "scipy.optimize.LbfgsInvHessProduct.rmatmat")(X) | Adjoint matrix-matrix multiplication.
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`rmatmat`](scipy.optimize.LbfgsInvHessProduct.rmatmat.html#scipy.optimize.LbfgsInvHessProduct.rmatmat
    "scipy.optimize.LbfgsInvHessProduct.rmatmat")(X) | 共轭矩阵-矩阵乘法。 |'
- en: '| [`rmatvec`](scipy.optimize.LbfgsInvHessProduct.rmatvec.html#scipy.optimize.LbfgsInvHessProduct.rmatvec
    "scipy.optimize.LbfgsInvHessProduct.rmatvec")(x) | Adjoint matrix-vector multiplication.
    |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`rmatvec`](scipy.optimize.LbfgsInvHessProduct.rmatvec.html#scipy.optimize.LbfgsInvHessProduct.rmatvec
    "scipy.optimize.LbfgsInvHessProduct.rmatvec")(x) | 共轭矩阵-向量乘法。 |'
- en: '| [`todense`](scipy.optimize.LbfgsInvHessProduct.todense.html#scipy.optimize.LbfgsInvHessProduct.todense
    "scipy.optimize.LbfgsInvHessProduct.todense")() | Return a dense array representation
    of this operator. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`todense`](scipy.optimize.LbfgsInvHessProduct.todense.html#scipy.optimize.LbfgsInvHessProduct.todense
    "scipy.optimize.LbfgsInvHessProduct.todense")() | 返回此操作器的密集数组表示。 |'
- en: '| [`transpose`](scipy.optimize.LbfgsInvHessProduct.transpose.html#scipy.optimize.LbfgsInvHessProduct.transpose
    "scipy.optimize.LbfgsInvHessProduct.transpose")() | Transpose this linear operator.
    |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`transpose`](scipy.optimize.LbfgsInvHessProduct.transpose.html#scipy.optimize.LbfgsInvHessProduct.transpose
    "scipy.optimize.LbfgsInvHessProduct.transpose")() | 转置这个线性操作符。'
- en: '| **__mul__** |  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| **__mul__** |  |'
