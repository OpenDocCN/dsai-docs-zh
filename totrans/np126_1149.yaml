- en: NumPy 1.16.4 Release Notes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NumPy 1.16.4 发行说明
- en: 原文：[https://numpy.org/doc/1.26/release/1.16.4-notes.html](https://numpy.org/doc/1.26/release/1.16.4-notes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/release/1.16.4-notes.html](https://numpy.org/doc/1.26/release/1.16.4-notes.html)
- en: The NumPy 1.16.4 release fixes bugs reported against the 1.16.3 release, and
    also backports several enhancements from master that seem appropriate for a release
    series that is the last to support Python 2.7\. The wheels on PyPI are linked
    with OpenBLAS v0.3.7-dev, which should fix issues on Skylake series cpus.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 1.16.4 发布版本修复了针对 1.16.3 发布版本报告的错误，并且还从主分支中回溯了几个看起来适合作为最后支持 Python 2.7
    发布系列的增强功能。在 PyPI 上的 wheels 与 OpenBLAS v0.3.7-dev 进行了链接，这可以解决 Skylake 系列 CPU 上的问题。
- en: Downstream developers building this release should use Cython >= 0.29.2 and,
    if using OpenBLAS, OpenBLAS > v0.3.7\. The supported Python versions are 2.7 and
    3.5-3.7.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 构建此发布版本的下游开发人员应使用 Cython >= 0.29.2，并且，如果使用 OpenBLAS，则 OpenBLAS > v0.3.7。支持的
    Python 版本是 2.7 和 3.5-3.7。
- en: New deprecations
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新的弃用项
- en: Writeable flag of C-API wrapped arrays
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C-API 包装数组的可写标志
- en: When an array is created from the C-API to wrap a pointer to data, the only
    indication we have of the read-write nature of the data is the `writeable` flag
    set during creation. It is dangerous to force the flag to writeable. In the future
    it will not be possible to switch the writeable flag to `True` from python. This
    deprecation should not affect many users since arrays created in such a manner
    are very rare in practice and only available through the NumPy C-API.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当从 C-API 创建数组以包装一个指向数据的指针时，我们唯一可以判断数据读写性质的方式是在创建时设置 `writeable` 标志。强制该标志为可写是危险的。未来将不可能从
    Python 中将可写标志切换为 `True`。此弃用项不会影响许多用户，因为以这种方式创建的数组在实践中非常罕见，并且仅通过 NumPy C-API 可用。
- en: Compatibility notes
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 兼容性说明
- en: Potential changes to the random stream
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对随机流的潜在更改
- en: Due to bugs in the application of log to random floating point numbers, the
    stream may change when sampling from `np.random.beta`, `np.random.binomial`, `np.random.laplace`,
    `np.random.logistic`, `np.random.logseries` or `np.random.multinomial` if a 0
    is generated in the underlying MT19937 random stream. There is a 1 in \(10^{53}\)
    chance of this occurring, and so the probability that the stream changes for any
    given seed is extremely small. If a 0 is encountered in the underlying generator,
    then the incorrect value produced (either `np.inf` or `np.nan`) is now dropped.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在将对随机浮点数进行对数操作时出现 bug，因此在从`np.random.beta`、`np.random.binomial`、`np.random.laplace`、`np.random.logistic`、`np.random.logseries`或`np.random.multinomial`进行采样时，流可能会发生变化，如果在底层
    MT19937 随机流中生成了一个 0。发生这种情况的概率为 \(10^{53}\) 中的 1，因此针对任何给定的种子，流发生变化的概率是非常小的。如果在底层生成器中遇到
    0，则现在会放弃生成的错误值（`np.inf` 或 `np.nan`）。
- en: Changes
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变更
- en: '[`numpy.lib.recfunctions.structured_to_unstructured`](../user/basics.rec.html#numpy.lib.recfunctions.structured_to_unstructured
    "numpy.lib.recfunctions.structured_to_unstructured") does not squeeze single-field
    views'
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[`numpy.lib.recfunctions.structured_to_unstructured`](../user/basics.rec.html#numpy.lib.recfunctions.structured_to_unstructured
    "numpy.lib.recfunctions.structured_to_unstructured") 不会挤压单字段视图'
- en: Previously `structured_to_unstructured(arr[['a']])` would produce a squeezed
    result inconsistent with `structured_to_unstructured(arr[['a', b']])`. This was
    accidental. The old behavior can be retained with `structured_to_unstructured(arr[['a']]).squeeze(axis=-1)`
    or far more simply, `arr['a']`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 之前 `structured_to_unstructured(arr[['a']])` 会产生一个与 `structured_to_unstructured(arr[['a',
    b']])` 不一致的挤压结果。这是意外的。旧的行为可以通过`structured_to_unstructured(arr[['a']]).squeeze(axis=-1)`或者更简单的`arr['a']`来保留。
- en: Contributors
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贡献者
- en: A total of 10 people contributed to this release. People with a “+” by their
    names contributed a patch for the first time.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有 10 人贡献了这个发布版本。名字旁边带有“+”符号的人是首次贡献补丁的。
- en: Charles Harris
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Charles Harris
- en: Eric Wieser
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric Wieser
- en: Dennis Zollo +
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dennis Zollo +
- en: Hunter Damron +
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hunter Damron +
- en: Jingbei Li +
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jingbei Li +
- en: Kevin Sheppard
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kevin Sheppard
- en: Matti Picus
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matti Picus
- en: Nicola Soranzo +
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nicola Soranzo +
- en: Sebastian Berg
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastian Berg
- en: Tyler Reddy
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tyler Reddy
- en: Pull requests merged
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并的拉取请求
- en: A total of 16 pull requests were merged for this release.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有 16 个拉取请求合并到了这个发布版本中。
- en: '[#13392](https://github.com/numpy/numpy/pull/13392): BUG: Some PyPy versions
    lack PyStructSequence_InitType2.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13392](https://github.com/numpy/numpy/pull/13392): BUG：某些 PyPy 版本缺少 PyStructSequence_InitType2。'
- en: '[#13394](https://github.com/numpy/numpy/pull/13394): MAINT, DEP: Fix deprecated
    `assertEquals()`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13394](https://github.com/numpy/numpy/pull/13394): MAINT, DEP: 修复了弃用的 `assertEquals()`'
- en: '[#13396](https://github.com/numpy/numpy/pull/13396): BUG: Fix structured_to_unstructured
    on single-field types (backport)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13396](https://github.com/numpy/numpy/pull/13396): BUG: 修复了单字段类型上的 structured_to_unstructured（回溯）'
- en: '[#13549](https://github.com/numpy/numpy/pull/13549): BLD: Make CI pass again
    with pytest 4.5'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13549](https://github.com/numpy/numpy/pull/13549): BLD: 使 CI 通过 pytest 4.5'
- en: '[#13552](https://github.com/numpy/numpy/pull/13552): TST: Register markers
    in conftest.py.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13552](https://github.com/numpy/numpy/pull/13552): TST: 在conftest.py中注册标记'
- en: '[#13559](https://github.com/numpy/numpy/pull/13559): BUG: Removes ValueError
    for empty kwargs in arraymultiter_new'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13559](https://github.com/numpy/numpy/pull/13559): BUG: 在 arraymultiter_new
    中去除空kwargs的ValueError'
- en: '[#13560](https://github.com/numpy/numpy/pull/13560): BUG: Add TypeError to
    accepted exceptions in crackfortran.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13560](https://github.com/numpy/numpy/pull/13560): BUG: 在 crackfortran 中添加TypeError到接受的异常中'
- en: '[#13561](https://github.com/numpy/numpy/pull/13561): BUG: Handle subarrays
    in descr_to_dtype'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13561](https://github.com/numpy/numpy/pull/13561): BUG: 在descr_to_dtype中处理子数组'
- en: '[#13562](https://github.com/numpy/numpy/pull/13562): BUG: Protect generators
    from log(0.0)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13562](https://github.com/numpy/numpy/pull/13562): BUG: 保护生成器不受log(0.0)的影响'
- en: '[#13563](https://github.com/numpy/numpy/pull/13563): BUG: Always return views
    from structured_to_unstructured when…'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13563](https://github.com/numpy/numpy/pull/13563): BUG: 从structured_to_unstructured中始终返回视图'
- en: '[#13564](https://github.com/numpy/numpy/pull/13564): BUG: Catch stderr when
    checking compiler version'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13564](https://github.com/numpy/numpy/pull/13564): BUG: 检查编译器版本时捕获stderr输出'
- en: '[#13565](https://github.com/numpy/numpy/pull/13565): BUG: longdouble(int) does
    not work'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13565](https://github.com/numpy/numpy/pull/13565): BUG: longdouble(int) 无法正常工作'
- en: '[#13587](https://github.com/numpy/numpy/pull/13587): BUG: distutils/system_info.py
    fix missing subprocess import (#13523)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13587](https://github.com/numpy/numpy/pull/13587): BUG: distutils/system_info.py
    修复丢失的subprocess导入（＃13523）'
- en: '[#13620](https://github.com/numpy/numpy/pull/13620): BUG,DEP: Fix writeable
    flag setting for arrays without base'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13620](https://github.com/numpy/numpy/pull/13620): BUG,DEP: 修复没有基础的数组设置为可写标志'
- en: '[#13641](https://github.com/numpy/numpy/pull/13641): MAINT: Prepare for the
    1.16.4 release.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13641](https://github.com/numpy/numpy/pull/13641): MAINT: 为1.16.4版本做准备。'
- en: '[#13644](https://github.com/numpy/numpy/pull/13644): BUG: special case object
    arrays when printing rel-, abs-error'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13644](https://github.com/numpy/numpy/pull/13644): BUG: 特殊情况下，当打印相对误差、绝对误差时处理对象数组'
- en: New deprecations
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新的废弃通知
- en: Writeable flag of C-API wrapped arrays
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C-API封装数组的可写标志
- en: When an array is created from the C-API to wrap a pointer to data, the only
    indication we have of the read-write nature of the data is the `writeable` flag
    set during creation. It is dangerous to force the flag to writeable. In the future
    it will not be possible to switch the writeable flag to `True` from python. This
    deprecation should not affect many users since arrays created in such a manner
    are very rare in practice and only available through the NumPy C-API.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当从C-API创建数组以包装数据指针时，我们唯一可以得知数据可读写性质的指示是在创建过程中设置`writeable`标志。强制将标志设置为可写是危险的。在未来，不可能从Python将可写标志切换为`True`。此废弃应不会影响许多用户，因为用这种方式创建的数组在实践中非常罕见，并且仅能通过NumPy
    C-API获得。
- en: Writeable flag of C-API wrapped arrays
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C-API封装数组的可写标志
- en: When an array is created from the C-API to wrap a pointer to data, the only
    indication we have of the read-write nature of the data is the `writeable` flag
    set during creation. It is dangerous to force the flag to writeable. In the future
    it will not be possible to switch the writeable flag to `True` from python. This
    deprecation should not affect many users since arrays created in such a manner
    are very rare in practice and only available through the NumPy C-API.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当从C-API创建数组以包装数据指针时，我们唯一可以得知数据可读写性质的指示是在创建过程中设置`writeable`标志。强制将标志设置为可写是危险的。在未来，不可能从Python将可写标志切换为`True`。此废弃应不会影响许多用户，因为用这种方式创建的数组在实践中非常罕见，并且仅能通过NumPy
    C-API获得。
- en: Compatibility notes
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 兼容性说明
- en: Potential changes to the random stream
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 随机流的潜在变更
- en: Due to bugs in the application of log to random floating point numbers, the
    stream may change when sampling from `np.random.beta`, `np.random.binomial`, `np.random.laplace`,
    `np.random.logistic`, `np.random.logseries` or `np.random.multinomial` if a 0
    is generated in the underlying MT19937 random stream. There is a 1 in \(10^{53}\)
    chance of this occurring, and so the probability that the stream changes for any
    given seed is extremely small. If a 0 is encountered in the underlying generator,
    then the incorrect value produced (either `np.inf` or `np.nan`) is now dropped.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在对随机浮点数应用对数的程序中存在bug，如果在从 `np.random.beta`、`np.random.binomial`、`np.random.laplace`、`np.random.logistic`、`np.random.logseries`
    或 `np.random.multinomial` 中取样时在底层MT19937随机流中生成了一个0，流可能会发生变化。这种情况发生的概率是 \(10^{53}\)
    中的1，因此对于任何给定的种子，流发生变化的概率极小。如果在底层生成器中遇到0，那么现在会丢弃产生的错误值（`np.inf` 或 `np.nan`）。
- en: Potential changes to the random stream
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 随机流的潜在变化
- en: Due to bugs in the application of log to random floating point numbers, the
    stream may change when sampling from `np.random.beta`, `np.random.binomial`, `np.random.laplace`,
    `np.random.logistic`, `np.random.logseries` or `np.random.multinomial` if a 0
    is generated in the underlying MT19937 random stream. There is a 1 in \(10^{53}\)
    chance of this occurring, and so the probability that the stream changes for any
    given seed is extremely small. If a 0 is encountered in the underlying generator,
    then the incorrect value produced (either `np.inf` or `np.nan`) is now dropped.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在对随机浮点数应用对数时的bug，如果在底层MT19937随机流中生成了一个0，那么从 `np.random.beta`、`np.random.binomial`、`np.random.laplace`、`np.random.logistic`、`np.random.logseries`
    或 `np.random.multinomial` 中取样时，流可能会发生变化。这种情况发生的概率是 \(10^{53}\) 中的1，因此对于任何给定的种子，流发生变化的概率极小。如果在底层生成器中遇到0，那么现在会丢弃产生的错误值（`np.inf`
    或 `np.nan`）。
- en: Changes
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变更
- en: '[`numpy.lib.recfunctions.structured_to_unstructured`](../user/basics.rec.html#numpy.lib.recfunctions.structured_to_unstructured
    "numpy.lib.recfunctions.structured_to_unstructured") does not squeeze single-field
    views'
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[`numpy.lib.recfunctions.structured_to_unstructured`](../user/basics.rec.html#numpy.lib.recfunctions.structured_to_unstructured
    "numpy.lib.recfunctions.structured_to_unstructured") 不会压缩单字段视图'
- en: Previously `structured_to_unstructured(arr[['a']])` would produce a squeezed
    result inconsistent with `structured_to_unstructured(arr[['a', b']])`. This was
    accidental. The old behavior can be retained with `structured_to_unstructured(arr[['a']]).squeeze(axis=-1)`
    or far more simply, `arr['a']`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，`structured_to_unstructured(arr[['a']])` 会产生一个与 `structured_to_unstructured(arr[['a',
    b']])` 不一致的被挤压的结果。这是意外的。可以使用 `structured_to_unstructured(arr[['a']]).squeeze(axis=-1)`
    或更简单地使用 `arr['a']` 来保留旧的行为。
- en: '[`numpy.lib.recfunctions.structured_to_unstructured`](../user/basics.rec.html#numpy.lib.recfunctions.structured_to_unstructured
    "numpy.lib.recfunctions.structured_to_unstructured") does not squeeze single-field
    views'
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[`numpy.lib.recfunctions.structured_to_unstructured`](../user/basics.rec.html#numpy.lib.recfunctions.structured_to_unstructured
    "numpy.lib.recfunctions.structured_to_unstructured") 不会压缩单字段视图'
- en: Previously `structured_to_unstructured(arr[['a']])` would produce a squeezed
    result inconsistent with `structured_to_unstructured(arr[['a', b']])`. This was
    accidental. The old behavior can be retained with `structured_to_unstructured(arr[['a']]).squeeze(axis=-1)`
    or far more simply, `arr['a']`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，`structured_to_unstructured(arr[['a']])` 会产生一个与 `structured_to_unstructured(arr[['a',
    b']])` 不一致的被挤压的结果。这是意外的。可以使用 `structured_to_unstructured(arr[['a']]).squeeze(axis=-1)`
    或更简单地使用 `arr['a']` 来保留旧的行为。
- en: Contributors
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 贡献者
- en: A total of 10 people contributed to this release. People with a “+” by their
    names contributed a patch for the first time.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有10人为这个版本做出了贡献。名字后面带有“+”的人是第一次贡献补丁。
- en: Charles Harris
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Charles Harris
- en: Eric Wieser
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric Wieser
- en: Dennis Zollo +
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dennis Zollo +
- en: Hunter Damron +
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hunter Damron +
- en: Jingbei Li +
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jingbei Li +
- en: Kevin Sheppard
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kevin Sheppard
- en: Matti Picus
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Matti Picus
- en: Nicola Soranzo +
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nicola Soranzo +
- en: Sebastian Berg
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sebastian Berg
- en: Tyler Reddy
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tyler Reddy
- en: Pull requests merged
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并的拉取请求
- en: A total of 16 pull requests were merged for this release.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有16个拉取请求合并到此版本。
- en: '[#13392](https://github.com/numpy/numpy/pull/13392): BUG: Some PyPy versions
    lack PyStructSequence_InitType2.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13392](https://github.com/numpy/numpy/pull/13392): BUG: 一些PyPy版本缺少PyStructSequence_InitType2。'
- en: '[#13394](https://github.com/numpy/numpy/pull/13394): MAINT, DEP: Fix deprecated
    `assertEquals()`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13394](https://github.com/numpy/numpy/pull/13394): MAINT, DEP: 修复已弃用的 `assertEquals()`'
- en: '[#13396](https://github.com/numpy/numpy/pull/13396): BUG: Fix structured_to_unstructured
    on single-field types (backport)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13396](https://github.com/numpy/numpy/pull/13396): BUG: 修复了对单字段类型的structured_to_unstructured（backport）'
- en: '[#13549](https://github.com/numpy/numpy/pull/13549): BLD: Make CI pass again
    with pytest 4.5'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13549](https://github.com/numpy/numpy/pull/13549): BLD: 使用 pytest 4.5 使 CI
    重新通过。'
- en: '[#13552](https://github.com/numpy/numpy/pull/13552): TST: Register markers
    in conftest.py.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13552](https://github.com/numpy/numpy/pull/13552): TST: 在 conftest.py 中注册标记。'
- en: '[#13559](https://github.com/numpy/numpy/pull/13559): BUG: Removes ValueError
    for empty kwargs in arraymultiter_new'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13559](https://github.com/numpy/numpy/pull/13559): BUG: 移除 arraymultiter_new
    中空 kwargs 的 ValueError。'
- en: '[#13560](https://github.com/numpy/numpy/pull/13560): BUG: Add TypeError to
    accepted exceptions in crackfortran.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13560](https://github.com/numpy/numpy/pull/13560): BUG: 在 crackfortran 中添加
    TypeError 到被接受的异常中。'
- en: '[#13561](https://github.com/numpy/numpy/pull/13561): BUG: Handle subarrays
    in descr_to_dtype'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13561](https://github.com/numpy/numpy/pull/13561): BUG: 处理 descr_to_dtype
    中的子数组。'
- en: '[#13562](https://github.com/numpy/numpy/pull/13562): BUG: Protect generators
    from log(0.0)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13562](https://github.com/numpy/numpy/pull/13562): BUG: 保护生成器免受 log(0.0)。'
- en: '[#13563](https://github.com/numpy/numpy/pull/13563): BUG: Always return views
    from structured_to_unstructured when…'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13563](https://github.com/numpy/numpy/pull/13563): BUG: 在 structured_to_unstructured
    中始终返回视图 when…'
- en: '[#13564](https://github.com/numpy/numpy/pull/13564): BUG: Catch stderr when
    checking compiler version'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13564](https://github.com/numpy/numpy/pull/13564): BUG: 检查编译器版本时捕获 stderr。'
- en: '[#13565](https://github.com/numpy/numpy/pull/13565): BUG: longdouble(int) does
    not work'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13565](https://github.com/numpy/numpy/pull/13565): BUG: longdouble(int) 不起作用。'
- en: '[#13587](https://github.com/numpy/numpy/pull/13587): BUG: distutils/system_info.py
    fix missing subprocess import (#13523)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13587](https://github.com/numpy/numpy/pull/13587): BUG: distutils/system_info.py
    修复缺少的 subprocess 导入（#13523）。'
- en: '[#13620](https://github.com/numpy/numpy/pull/13620): BUG,DEP: Fix writeable
    flag setting for arrays without base'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13620](https://github.com/numpy/numpy/pull/13620): BUG,DEP: 为没有基础的数组修复可写标志设置。'
- en: '[#13641](https://github.com/numpy/numpy/pull/13641): MAINT: Prepare for the
    1.16.4 release.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13641](https://github.com/numpy/numpy/pull/13641): MAINT: 为1.16.4版本做准备。'
- en: '[#13644](https://github.com/numpy/numpy/pull/13644): BUG: special case object
    arrays when printing rel-, abs-error'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[#13644](https://github.com/numpy/numpy/pull/13644): BUG: 在打印 rel-, abs-error
    时特殊处理对象数组。'
