- en: scipy.optimize.minimize_scalar
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.minimize_scalar
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Local minimization of scalar function of one variable.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 标量函数的局部最小化。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fun**callable'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**fun**可调用对象'
- en: Objective function. Scalar function, must return a scalar.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数。标量函数，必须返回一个标量。
- en: '**bracket**sequence, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**bracket**序列，可选'
- en: For methods ‘brent’ and ‘golden’, [`bracket`](scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket") defines the bracketing interval and is required. Either
    a triple `(xa, xb, xc)` satisfying `xa < xb < xc` and `func(xb) < func(xa) and 
    func(xb) < func(xc)`, or a pair `(xa, xb)` to be used as initial points for a
    downhill bracket search (see [`scipy.optimize.bracket`](scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket")). The minimizer `res.x` will not necessarily satisfy
    `xa <= res.x <= xb`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于方法‘brent’和‘golden’，[`bracket`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket")定义了锁定间隔并且是必需的。可以是三元组`(xa, xb, xc)`，满足`xa < xb < xc`和`func(xb)
    < func(xa) and  func(xb) < func(xc)`，或者是一对`(xa, xb)`，用于进行下山锁定搜索的初始点（参见[`scipy.optimize.bracket`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket")）。最小化器`res.x`不一定满足`xa <= res.x <= xb`。
- en: '**bounds**sequence, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**bounds**序列，可选'
- en: For method ‘bounded’, *bounds* is mandatory and must have two finite items corresponding
    to the optimization bounds.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于方法‘bounded’，*bounds*是必须的，必须有两个有限项与优化边界相对应。
- en: '**args**tuple, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**元组，可选'
- en: Extra arguments passed to the objective function.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给目标函数的额外参数。
- en: '**method**str or callable, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**字符串或可调用对象，可选'
- en: 'Type of solver. Should be one of:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 求解器类型。应为以下之一：
- en: '[Brent](../optimize.minimize_scalar-brent.html#optimize-minimize-scalar-brent)'
  id: totrans-15
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Brent](../optimize.minimize_scalar-brent.html#optimize-minimize-scalar-brent)'
- en: ''
  id: totrans-16
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-17
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Bounded](../optimize.minimize_scalar-bounded.html#optimize-minimize-scalar-bounded)'
  id: totrans-18
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Bounded](../optimize.minimize_scalar-bounded.html#optimize-minimize-scalar-bounded)'
- en: ''
  id: totrans-19
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Golden](../optimize.minimize_scalar-golden.html#optimize-minimize-scalar-golden)'
  id: totrans-21
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Golden](../optimize.minimize_scalar-golden.html#optimize-minimize-scalar-golden)'
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: custom - a callable object (added in version 0.14.0), see below
  id: totrans-24
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 - 可调用对象（从版本0.14.0开始添加），请参见下文
- en: Default is “Bounded” if bounds are provided and “Brent” otherwise. See the ‘Notes’
    section for details of each solver.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了边界，则默认为“Bounded”，否则为“Brent”。有关每个求解器的详细信息，请参见‘Notes’部分。
- en: '**tol**float, optional'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**tol**浮点数，可选'
- en: Tolerance for termination. For detailed control, use solver-specific options.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 终止容差。要进行详细控制，请使用特定于解算器的选项。
- en: '**options**dict, optional'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**options**字典，可选'
- en: A dictionary of solver options.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 求解器选项的字典。
- en: maxiterint
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: maxiterint
- en: ''
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Maximum number of iterations to perform.
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最大迭代次数。
- en: ''
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: dispbool
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: dispbool
- en: ''
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Set to True to print convergence messages.
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 设置为True以打印收敛消息。
- en: See [`show_options`](scipy.optimize.show_options.html#scipy.optimize.show_options
    "scipy.optimize.show_options") for solver-specific options.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[`show_options`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.show_options.html#scipy.optimize.show_options
    "scipy.optimize.show_options")以获取特定于解算器的选项。
- en: 'Returns:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**res**OptimizeResult'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**res**OptimizeResult'
- en: 'The optimization result represented as a `OptimizeResult` object. Important
    attributes are: `x` the solution array, `success` a Boolean flag indicating if
    the optimizer exited successfully and `message` which describes the cause of the
    termination. See [`OptimizeResult`](scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult") for a description of other attributes.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 表示优化结果的`OptimizeResult`对象。重要属性包括：`x`解决方案数组，`success`指示优化器是否成功退出的布尔标志，`message`描述终止原因。参见[`OptimizeResult`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult")以获取其他属性的描述。
- en: See also
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize "scipy.optimize.minimize")'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[`minimize`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize")'
- en: Interface to minimization algorithms for scalar multivariate functions
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 用于标量多变量函数的最小化算法接口
- en: '[`show_options`](scipy.optimize.show_options.html#scipy.optimize.show_options
    "scipy.optimize.show_options")'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`show_options`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.show_options.html#scipy.optimize.show_options
    "scipy.optimize.show_options")'
- en: Additional options accepted by the solvers
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 解算器接受的额外选项
- en: Notes
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: This section describes the available solvers that can be selected by the ‘method’
    parameter. The default method is the `"Bounded"` Brent method if *bounds* are
    passed and unbounded `"Brent"` otherwise.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了可以通过“method”参数选择的可用求解器。如果传递了*bounds*，默认方法是“Bounded” Brent 方法；否则是无界的“Brent”方法。
- en: Method [Brent](../optimize.minimize_scalar-brent.html#optimize-minimize-scalar-brent)
    uses Brent’s algorithm [[1]](#rdd22a8c46f25-1) to find a local minimum. The algorithm
    uses inverse parabolic interpolation when possible to speed up convergence of
    the golden section method.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 [Brent](../optimize.minimize_scalar-brent.html#optimize-minimize-scalar-brent)
    使用Brent算法 [[1]](#rdd22a8c46f25-1) 寻找局部最小值。在可能的情况下，该算法使用反向抛物插值来加速黄金分割法的收敛速度。
- en: Method [Golden](../optimize.minimize_scalar-golden.html#optimize-minimize-scalar-golden)
    uses the golden section search technique [[1]](#rdd22a8c46f25-1). It uses analog
    of the bisection method to decrease the bracketed interval. It is usually preferable
    to use the *Brent* method.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 [Golden](../optimize.minimize_scalar-golden.html#optimize-minimize-scalar-golden)
    使用黄金分割搜索技术 [[1]](#rdd22a8c46f25-1)。它使用二分法的类似物来缩小括号内的区间。通常优先选择使用*Brent*方法。
- en: Method [Bounded](../optimize.minimize_scalar-bounded.html#optimize-minimize-scalar-bounded)
    can perform bounded minimization [[2]](#rdd22a8c46f25-2) [[3]](#rdd22a8c46f25-3).
    It uses the Brent method to find a local minimum in the interval x1 < xopt < x2.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 [Bounded](../optimize.minimize_scalar-bounded.html#optimize-minimize-scalar-bounded)
    可以执行有界最小化 [[2]](#rdd22a8c46f25-2) [[3]](#rdd22a8c46f25-3)。它使用Brent方法在区间x1 < xopt
    < x2中找到局部最小值。
- en: Note that the Brent and Golden methods do not guarantee success unless a valid
    `bracket` triple is provided. If a three-point bracket cannot be found, consider
    [`scipy.optimize.minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize"). Also, all methods are intended only for local minimization.
    When the function of interest has more than one local minimum, consider [Global
    optimization](../optimize.html#global-optimization).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，除非提供了有效的`bracket`三元组，否则Brent和Golden方法不能保证成功。如果无法找到三点括号，请考虑使用[`scipy.optimize.minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize")。此外，所有方法仅用于局部最小化。当感兴趣的函数具有多个局部最小值时，请考虑[全局优化](../optimize.html#global-optimization)。
- en: '**Custom minimizers**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**自定义最小化器**'
- en: It may be useful to pass a custom minimization method, for example when using
    some library frontend to minimize_scalar. You can simply pass a callable as the
    `method` parameter.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用一些库的前端来进行`minimize_scalar`时，传递自定义最小化方法可能很有用。您可以简单地将一个可调用对象作为`method`参数传递。
- en: The callable is called as `method(fun, args, **kwargs, **options)` where `kwargs`
    corresponds to any other parameters passed to [`minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize") (such as [`bracket`](scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket"), *tol*, etc.), except the *options* dict, which has
    its contents also passed as *method* parameters pair by pair. The method shall
    return an [`OptimizeResult`](scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult") object.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 可调用对象的调用形式为`method(fun, args, **kwargs, **options)`，其中`kwargs`对应于传递给[`minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize")的其他参数（如[`bracket`](scipy.optimize.bracket.html#scipy.optimize.bracket
    "scipy.optimize.bracket")、*tol*等），除了*options*字典，其内容也会一对一地作为*method*参数传递。该方法应返回一个[`OptimizeResult`](scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult")对象。
- en: The provided *method* callable must be able to accept (and possibly ignore)
    arbitrary parameters; the set of parameters accepted by [`minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize") may expand in future versions and then these parameters
    will be passed to the method. You can find an example in the scipy.optimize tutorial.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的*method*可调用对象必须能够接受（并可能忽略）任意参数；由于[`minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize
    "scipy.optimize.minimize")接受的参数集在将来版本中可能会扩展，这些参数也将一一传递给方法。您可以在scipy.optimize教程中找到一个例子。
- en: New in version 0.11.0.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 版本0.11.0中的新功能。
- en: References
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] ([1](#id1),[2](#id2))'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] ([1](#id1),[2](#id2))'
- en: Press, W., S.A. Teukolsky, W.T. Vetterling, and B.P. Flannery. Numerical Recipes
    in C. Cambridge University Press.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Press, W., S.A. Teukolsky, W.T. Vetterling, and B.P. Flannery. Numerical Recipes
    in C. Cambridge University Press.
- en: '[[2](#id3)]'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2](#id3)]'
- en: Forsythe, G.E., M. A. Malcolm, and C. B. Moler. “Computer Methods for Mathematical
    Computations.” Prentice-Hall Series in Automatic Computation 259 (1977).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Forsythe, G.E., M. A. Malcolm, and C. B. Moler. “Mathematical Computations的计算机方法。”
    Prentice-Hall Series in Automatic Computation 259 (1977).
- en: '[[3](#id4)]'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[[3](#id4)]'
- en: Brent, Richard P. Algorithms for Minimization Without Derivatives. Courier Corporation,
    2013.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Brent, Richard P. Algorithms for Minimization Without Derivatives. Courier Corporation,
    2013.
- en: Examples
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Consider the problem of minimizing the following function.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑最小化以下函数的问题。
- en: '[PRE1]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Using the *Brent* method, we find the local minimum as:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用*Brent*方法，我们找到了局部最小值如下：
- en: '[PRE2]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The minimizer is:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 最小化器是：
- en: '[PRE3]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Using the *Bounded* method, we find a local minimum with specified bounds as:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用*Bounded*方法，我们找到了具有指定边界的局部最小值如下：
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
