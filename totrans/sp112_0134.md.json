["```py\nscipy.integrate.newton_cotes(rn, equal=0)\n```", "```py\n>>> from scipy.integrate import newton_cotes\n>>> import numpy as np\n>>> def f(x):\n...     return np.sin(x)\n>>> a = 0\n>>> b = np.pi\n>>> exact = 2\n>>> for N in [2, 4, 6, 8, 10]:\n...     x = np.linspace(a, b, N + 1)\n...     an, B = newton_cotes(N, 1)\n...     dx = (b - a) / N\n...     quad = dx * np.sum(an * f(x))\n...     error = abs(quad - exact)\n...     print('{:2d}  {:10.9f}  {:.5e}'.format(N, quad, error))\n...\n 2   2.094395102   9.43951e-02\n 4   1.998570732   1.42927e-03\n 6   2.000017814   1.78136e-05\n 8   1.999999835   1.64725e-07\n10   2.000000001   1.14677e-09 \n```"]