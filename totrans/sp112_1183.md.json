["```py\nscipy.stats.nct = <scipy.stats._continuous_distns.nct_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import nct\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> df, nc = 14, 0.24\n>>> mean, var, skew, kurt = nct.stats(df, nc, moments='mvsk') \n```", "```py\n>>> x = np.linspace(nct.ppf(0.01, df, nc),\n...                 nct.ppf(0.99, df, nc), 100)\n>>> ax.plot(x, nct.pdf(x, df, nc),\n...        'r-', lw=5, alpha=0.6, label='nct pdf') \n```", "```py\n>>> rv = nct(df, nc)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = nct.ppf([0.001, 0.5, 0.999], df, nc)\n>>> np.allclose([0.001, 0.5, 0.999], nct.cdf(vals, df, nc))\nTrue \n```", "```py\n>>> r = nct.rvs(df, nc, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]