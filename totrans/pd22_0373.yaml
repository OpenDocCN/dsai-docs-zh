- en: pandas.DataFrame.update
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.update.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.update.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Modify in place using non-NA values from another DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Aligns on indices. There is no return value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**other**DataFrame, or object coercible into a DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: Should have at least one matching index/column label with the original DataFrame.
    If a Series is passed, its name attribute must be set, and that will be used as
    the column name to align with the original DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '**join**{‘left’}, default ‘left’'
  prefs: []
  type: TYPE_NORMAL
- en: Only left join is implemented, keeping the index and columns of the original
    object.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: 'How to handle non-NA values for overlapping keys:'
  prefs: []
  type: TYPE_NORMAL
- en: 'True: overwrite original DataFrame’s values with values from other.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'False: only update values that are NA in the original DataFrame.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**filter_func**callable(1d-array) -> bool 1d-array, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Can choose to replace values other than NA. Return True for values that should
    be updated.
  prefs: []
  type: TYPE_NORMAL
- en: '**errors**{‘raise’, ‘ignore’}, default ‘ignore’'
  prefs: []
  type: TYPE_NORMAL
- en: If ‘raise’, will raise a ValueError if the DataFrame and other both contain
    non-NA data in the same place.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: None
  prefs: []
  type: TYPE_NORMAL
- en: This method directly changes calling object.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: When errors=’raise’ and there’s overlapping non-NA data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When errors is not either ‘ignore’ or ‘raise’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NotImplementedError
  prefs: []
  type: TYPE_NORMAL
- en: If join != ‘left’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`dict.update`](https://docs.python.org/3/library/stdtypes.html#dict.update
    "(in Python v3.12)")'
  prefs: []
  type: TYPE_NORMAL
- en: Similar method for dictionaries.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.merge`](pandas.DataFrame.merge.html#pandas.DataFrame.merge "pandas.DataFrame.merge")'
  prefs: []
  type: TYPE_NORMAL
- en: For column(s)-on-column(s) operations.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The DataFrame’s length does not increase as a result of the update, only values
    at matching index/column labels are updated.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For Series, its name attribute must be set.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: If other contains NaNs the corresponding values are not updated in the original
    dataframe.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
