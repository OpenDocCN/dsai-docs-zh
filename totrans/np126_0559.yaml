- en: numpy.einsum_path
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.einsum_path
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.einsum_path.html](https://numpy.org/doc/1.26/reference/generated/numpy.einsum_path.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.einsum_path.html](https://numpy.org/doc/1.26/reference/generated/numpy.einsum_path.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Evaluates the lowest cost contraction order for an einsum expression by considering
    the creation of intermediate arrays.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通过考虑中间数组的创建，评估`einsum`表达式的最低成本收缩顺序。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**subscripts**str'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**subscripts**字符串'
- en: Specifies the subscripts for summation.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 指定求和的下标。
- en: '***operands**list of array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '***operands**数组列表'
- en: These are the arrays for the operation.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是操作的数组。
- en: '**optimize**{bool, list, tuple, ‘greedy’, ‘optimal’}'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**optimize**{布尔值，列表，元组，‘贪婪’，‘最佳’}'
- en: Choose the type of path. If a tuple is provided, the second argument is assumed
    to be the maximum intermediate size created. If only a single argument is provided
    the largest input or output array size is used as a maximum intermediate size.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 选择路径类型。如果提供了一个元组，则假定第二个参数是创建的最大中间大小。如果只提供了一个参数，则使用最大输入或输出数组大小作为最大中间大小。
- en: if a list is given that starts with `einsum_path`, uses this as the contraction
    path
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果给定以`einsum_path`开头的列表，则将其用作收缩路径
- en: if False no optimization is taken
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为False，则不进行优化
- en: if True defaults to the ‘greedy’ algorithm
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果为True，默认为‘贪婪’算法
- en: ‘optimal’ An algorithm that combinatorially explores all possible ways of contracting
    the listed tensors and chooses the least costly path. Scales exponentially with
    the number of terms in the contraction.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘最佳’ 一种算法，通过组合地探索列出的张量的所有可能的收缩方式，并选择成本最低的路径。随着收缩项数量的增加呈指数级增长。
- en: ‘greedy’ An algorithm that chooses the best pair contraction at each step. Effectively,
    this algorithm searches the largest inner, Hadamard, and then outer products at
    each step. Scales cubically with the number of terms in the contraction. Equivalent
    to the ‘optimal’ path for most contractions.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘贪婪’ 一种算法，每一步选择最佳的对收缩。实际上，该算法在每一步搜索最大的内部、Hadamard，然后外部乘积。随着收缩项数量的增加呈立方比例增长。对于大多数收缩来说，等同于‘最佳’路径。
- en: Default is ‘greedy’.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 默认为‘贪婪’。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**path**list of tuples'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**path**元组列表'
- en: A list representation of the einsum path.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个`einsum`路径的列表表示。
- en: '**string_repr**str'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**string_repr**字符串'
- en: A printable representation of the einsum path.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`einsum`路径的可打印表示。'
- en: See also
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`einsum`](numpy.einsum.html#numpy.einsum "numpy.einsum"), [`linalg.multi_dot`](numpy.linalg.multi_dot.html#numpy.linalg.multi_dot
    "numpy.linalg.multi_dot")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`einsum`](numpy.einsum.html#numpy.einsum "numpy.einsum"), [`linalg.multi_dot`](numpy.linalg.multi_dot.html#numpy.linalg.multi_dot
    "numpy.linalg.multi_dot")'
- en: Notes
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The resulting path indicates which terms of the input contraction should be
    contracted first, the result of this contraction is then appended to the end of
    the contraction list. This list can then be iterated over until all intermediate
    contractions are complete.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 结果路径指示应首先收缩输入收缩的哪些项，然后将此收缩的结果附加到收缩列表的末尾。然后可以对此列表进行迭代，直到所有中间收缩完成。
- en: Examples
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: We can begin with a chain dot example. In this case, it is optimal to contract
    the `b` and `c` tensors first as represented by the first element of the path
    `(1, 2)`. The resulting tensor is added to the end of the contraction and the
    remaining contraction `(0, 1)` is then completed.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从一个链点示例开始。在这种情况下，最佳的做法是首先收缩`b`和`c`张量，如路径的第一个元素`(1, 2)`所示。结果张量添加到收缩的末尾，然后完成剩余的收缩`(0,
    1)`。
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A more complex index transformation example.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更复杂的索引转换示例。
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
