- en: scipy.optimize.RootResults
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.RootResults.html#scipy.optimize.RootResults](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.RootResults.html#scipy.optimize.RootResults)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Represents the root finding result.
  prefs: []
  type: TYPE_NORMAL
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**root**float'
  prefs: []
  type: TYPE_NORMAL
- en: Estimated root location.
  prefs: []
  type: TYPE_NORMAL
- en: '**iterations**int'
  prefs: []
  type: TYPE_NORMAL
- en: Number of iterations needed to find the root.
  prefs: []
  type: TYPE_NORMAL
- en: '**function_calls**int'
  prefs: []
  type: TYPE_NORMAL
- en: Number of times the function was called.
  prefs: []
  type: TYPE_NORMAL
- en: '**converged**bool'
  prefs: []
  type: TYPE_NORMAL
- en: True if the routine converged.
  prefs: []
  type: TYPE_NORMAL
- en: '**flag**str'
  prefs: []
  type: TYPE_NORMAL
- en: Description of the cause of termination.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**str'
  prefs: []
  type: TYPE_NORMAL
- en: Root finding method used.
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__getitem__`](scipy.optimize.RootResults.__getitem__.html#scipy.optimize.RootResults.__getitem__
    "scipy.optimize.RootResults.__getitem__") | x.__getitem__(y) <==> x[y] |'
  prefs: []
  type: TYPE_TB
- en: '| [`__len__`](scipy.optimize.RootResults.__len__.html#scipy.optimize.RootResults.__len__
    "scipy.optimize.RootResults.__len__")(/) | Return len(self). |'
  prefs: []
  type: TYPE_TB
- en: '| [`clear`](scipy.optimize.RootResults.clear.html#scipy.optimize.RootResults.clear
    "scipy.optimize.RootResults.clear")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`copy`](scipy.optimize.RootResults.copy.html#scipy.optimize.RootResults.copy
    "scipy.optimize.RootResults.copy")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`fromkeys`](scipy.optimize.RootResults.fromkeys.html#scipy.optimize.RootResults.fromkeys
    "scipy.optimize.RootResults.fromkeys")(iterable[, value]) | Create a new dictionary
    with keys from iterable and values set to value. |'
  prefs: []
  type: TYPE_TB
- en: '| [`get`](scipy.optimize.RootResults.get.html#scipy.optimize.RootResults.get
    "scipy.optimize.RootResults.get")(key[, default]) | Return the value for key if
    key is in the dictionary, else default. |'
  prefs: []
  type: TYPE_TB
- en: '| [`items`](scipy.optimize.RootResults.items.html#scipy.optimize.RootResults.items
    "scipy.optimize.RootResults.items")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`keys`](scipy.optimize.RootResults.keys.html#scipy.optimize.RootResults.keys
    "scipy.optimize.RootResults.keys")() |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`pop`](scipy.optimize.RootResults.pop.html#scipy.optimize.RootResults.pop
    "scipy.optimize.RootResults.pop")(key[, default]) | If key is not found, default
    is returned if given, otherwise KeyError is raised |'
  prefs: []
  type: TYPE_TB
- en: '| [`popitem`](scipy.optimize.RootResults.popitem.html#scipy.optimize.RootResults.popitem
    "scipy.optimize.RootResults.popitem")(/) | Remove and return a (key, value) pair
    as a 2-tuple. |'
  prefs: []
  type: TYPE_TB
- en: '| [`setdefault`](scipy.optimize.RootResults.setdefault.html#scipy.optimize.RootResults.setdefault
    "scipy.optimize.RootResults.setdefault")(key[, default]) | Insert key with a value
    of default if key is not in the dictionary. |'
  prefs: []
  type: TYPE_TB
- en: '| [`update`](scipy.optimize.RootResults.update.html#scipy.optimize.RootResults.update
    "scipy.optimize.RootResults.update")([E, ]**F) | If E is present and has a .keys()
    method, then does: for k in E: D[k] = E[k] If E is present and lacks a .keys()
    method, then does: for k, v in E: D[k] = v In either case, this is followed by:
    for k in F: D[k] = F[k] |'
  prefs: []
  type: TYPE_TB
- en: '| [`values`](scipy.optimize.RootResults.values.html#scipy.optimize.RootResults.values
    "scipy.optimize.RootResults.values")() |  |'
  prefs: []
  type: TYPE_TB
