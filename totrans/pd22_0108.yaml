- en: General functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通用函数
- en: 原文：[https://pandas.pydata.org/docs/reference/general_functions.html](https://pandas.pydata.org/docs/reference/general_functions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/general_functions.html](https://pandas.pydata.org/docs/reference/general_functions.html)
- en: '## Data manipulations'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 数据操作'
- en: '| [`melt`](api/pandas.melt.html#pandas.melt "pandas.melt")(frame[, id_vars, value_vars, var_name, ...])
    | Unpivot a DataFrame from wide to long format, optionally leaving identifiers
    set. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| [`melt`](api/pandas.melt.html#pandas.melt "pandas.melt")(frame[, id_vars, value_vars, var_name, ...])
    | 将 DataFrame 从宽格式转换为长格式，可选择保留标识符设置。'
- en: '| [`pivot`](api/pandas.pivot.html#pandas.pivot "pandas.pivot")(data, *, columns[, index, values])
    | Return reshaped DataFrame organized by given index / column values. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`pivot`](api/pandas.pivot.html#pandas.pivot "pandas.pivot")(data, *, columns[, index, values])
    | 返回按给定索引/列值组织的重塑后的 DataFrame。'
- en: '| [`pivot_table`](api/pandas.pivot_table.html#pandas.pivot_table "pandas.pivot_table")(data[, values, index, columns, ...])
    | Create a spreadsheet-style pivot table as a DataFrame. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`pivot_table`](api/pandas.pivot_table.html#pandas.pivot_table "pandas.pivot_table")(data[, values, index, columns, ...])
    | 创建一个类似电子表格样式的透视表作为 DataFrame。'
- en: '| [`crosstab`](api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")(index, columns[, values, rownames, ...])
    | Compute a simple cross tabulation of two (or more) factors. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`crosstab`](api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")(index, columns[, values, rownames, ...])
    | 计算两个（或更多）因子的简单交叉制表。'
- en: '| [`cut`](api/pandas.cut.html#pandas.cut "pandas.cut")(x, bins[, right, labels, retbins, ...])
    | Bin values into discrete intervals. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`cut`](api/pandas.cut.html#pandas.cut "pandas.cut")(x, bins[, right, labels, retbins, ...])
    | 将值分成离散的区间。'
- en: '| [`qcut`](api/pandas.qcut.html#pandas.qcut "pandas.qcut")(x, q[, labels, retbins, precision, ...])
    | Quantile-based discretization function. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`qcut`](api/pandas.qcut.html#pandas.qcut "pandas.qcut")(x, q[, labels, retbins, precision, ...])
    | 基于分位数的离散化函数。'
- en: '| [`merge`](api/pandas.merge.html#pandas.merge "pandas.merge")(left, right[, how, on, left_on, ...])
    | Merge DataFrame or named Series objects with a database-style join. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`merge`](api/pandas.merge.html#pandas.merge "pandas.merge")(left, right[, how, on, left_on, ...])
    | 用数据库风格的连接合并 DataFrame 或命名 Series 对象。'
- en: '| [`merge_ordered`](api/pandas.merge_ordered.html#pandas.merge_ordered "pandas.merge_ordered")(left, right[, on, left_on, ...])
    | Perform a merge for ordered data with optional filling/interpolation. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`merge_ordered`](api/pandas.merge_ordered.html#pandas.merge_ordered "pandas.merge_ordered")(left, right[, on, left_on, ...])
    | 执行有序数据的合并，可选填充/插值。'
- en: '| [`merge_asof`](api/pandas.merge_asof.html#pandas.merge_asof "pandas.merge_asof")(left, right[, on, left_on, ...])
    | Perform a merge by key distance. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`merge_asof`](api/pandas.merge_asof.html#pandas.merge_asof "pandas.merge_asof")(left, right[, on, left_on, ...])
    | 按键距离执行合并。'
- en: '| [`concat`](api/pandas.concat.html#pandas.concat "pandas.concat")(objs, *[, axis, join, ignore_index, ...])
    | Concatenate pandas objects along a particular axis. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`concat`](api/pandas.concat.html#pandas.concat "pandas.concat")(objs, *[, axis, join, ignore_index, ...])
    | 沿特定轴连接 pandas 对象。'
- en: '| [`get_dummies`](api/pandas.get_dummies.html#pandas.get_dummies "pandas.get_dummies")(data[, prefix, prefix_sep, ...])
    | Convert categorical variable into dummy/indicator variables. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`get_dummies`](api/pandas.get_dummies.html#pandas.get_dummies "pandas.get_dummies")(data[, prefix, prefix_sep, ...])
    | 将分类变量转换为虚拟/指示变量。'
- en: '| [`from_dummies`](api/pandas.from_dummies.html#pandas.from_dummies "pandas.from_dummies")(data[, sep, default_category])
    | Create a categorical `DataFrame` from a `DataFrame` of dummy variables. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`from_dummies`](api/pandas.from_dummies.html#pandas.from_dummies "pandas.from_dummies")(data[, sep, default_category])
    | 从虚拟变量的 DataFrame 创建一个分类 `DataFrame`。'
- en: '| [`factorize`](api/pandas.factorize.html#pandas.factorize "pandas.factorize")(values[, sort, use_na_sentinel, ...])
    | Encode the object as an enumerated type or categorical variable. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`factorize`](api/pandas.factorize.html#pandas.factorize "pandas.factorize")(values[, sort, use_na_sentinel, ...])
    | 将对象编码为枚举类型或分类变量。'
- en: '| [`unique`](api/pandas.unique.html#pandas.unique "pandas.unique")(values)
    | Return unique values based on a hash table. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`unique`](api/pandas.unique.html#pandas.unique "pandas.unique")(values)
    | 基于哈希表返回唯一值。'
- en: '| [`lreshape`](api/pandas.lreshape.html#pandas.lreshape "pandas.lreshape")(data, groups[, dropna])
    | Reshape wide-format data to long. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`lreshape`](api/pandas.lreshape.html#pandas.lreshape "pandas.lreshape")(data, groups[, dropna])
    | 将宽格式数据重塑为长格式。'
- en: '| [`wide_to_long`](api/pandas.wide_to_long.html#pandas.wide_to_long "pandas.wide_to_long")(df, stubnames, i, j[, sep, suffix])
    | Unpivot a DataFrame from wide to long format. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`wide_to_long`](api/pandas.wide_to_long.html#pandas.wide_to_long "pandas.wide_to_long")(df, stubnames, i, j[, sep, suffix])
    | 将 DataFrame 从宽格式转换为长格式。'
- en: Top-level missing data
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 顶层缺失数据
- en: '| [`isna`](api/pandas.isna.html#pandas.isna "pandas.isna")(obj) | Detect missing
    values for an array-like object. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`isna`](api/pandas.isna.html#pandas.isna "pandas.isna")(obj) | 检测数组样式对象中的缺失值。
    |'
- en: '| [`isnull`](api/pandas.isnull.html#pandas.isnull "pandas.isnull")(obj) | Detect
    missing values for an array-like object. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`isnull`](api/pandas.isnull.html#pandas.isnull "pandas.isnull")(obj) | 检测数组样式对象中的缺失值。
    |'
- en: '| [`notna`](api/pandas.notna.html#pandas.notna "pandas.notna")(obj) | Detect
    non-missing values for an array-like object. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`notna`](api/pandas.notna.html#pandas.notna "pandas.notna")(obj) | 检测数组样式对象中的非缺失值。
    |'
- en: '| [`notnull`](api/pandas.notnull.html#pandas.notnull "pandas.notnull")(obj)
    | Detect non-missing values for an array-like object. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`notnull`](api/pandas.notnull.html#pandas.notnull "pandas.notnull")(obj)
    | 检测数组样式对象中的非缺失值。 |'
- en: Top-level dealing with numeric data
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理数值数据的顶层函数
- en: '| [`to_numeric`](api/pandas.to_numeric.html#pandas.to_numeric "pandas.to_numeric")(arg[, errors, downcast, ...])
    | Convert argument to a numeric type. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`to_numeric`](api/pandas.to_numeric.html#pandas.to_numeric "pandas.to_numeric")(arg[, errors, downcast, ...])
    | 将参数转换为数值类型。 |'
- en: Top-level dealing with datetimelike data
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理日期时间数据的顶层函数
- en: '| [`to_datetime`](api/pandas.to_datetime.html#pandas.to_datetime "pandas.to_datetime")(arg[, errors, dayfirst, ...])
    | Convert argument to datetime. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`to_datetime`](api/pandas.to_datetime.html#pandas.to_datetime "pandas.to_datetime")(arg[, errors, dayfirst, ...])
    | 将参数转换为日期时间格式。 |'
- en: '| [`to_timedelta`](api/pandas.to_timedelta.html#pandas.to_timedelta "pandas.to_timedelta")(arg[, unit, errors])
    | Convert argument to timedelta. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`to_timedelta`](api/pandas.to_timedelta.html#pandas.to_timedelta "pandas.to_timedelta")(arg[, unit, errors])
    | 将参数转换为时间间隔。 |'
- en: '| [`date_range`](api/pandas.date_range.html#pandas.date_range "pandas.date_range")([start, end, periods, freq, tz, ...])
    | Return a fixed frequency DatetimeIndex. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`date_range`](api/pandas.date_range.html#pandas.date_range "pandas.date_range")([start, end, periods, freq, tz, ...])
    | 返回固定频率的日期时间索引。 |'
- en: '| [`bdate_range`](api/pandas.bdate_range.html#pandas.bdate_range "pandas.bdate_range")([start, end, periods, freq, tz, ...])
    | Return a fixed frequency DatetimeIndex with business day as the default. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`bdate_range`](api/pandas.bdate_range.html#pandas.bdate_range "pandas.bdate_range")([start, end, periods, freq, tz, ...])
    | 返回固定频率的工作日为默认的日期时间索引。 |'
- en: '| [`period_range`](api/pandas.period_range.html#pandas.period_range "pandas.period_range")([start, end, periods, freq, name])
    | Return a fixed frequency PeriodIndex. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`period_range`](api/pandas.period_range.html#pandas.period_range "pandas.period_range")([start, end, periods, freq, name])
    | 返回固定频率的周期索引。 |'
- en: '| [`timedelta_range`](api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range")([start, end, periods, freq, ...]) | Return a fixed frequency
    TimedeltaIndex with day as the default. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`timedelta_range`](api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range")([start, end, periods, freq, ...]) | 返回固定频率以天为默认的时间间隔索引。
    |'
- en: '| [`infer_freq`](api/pandas.infer_freq.html#pandas.infer_freq "pandas.infer_freq")(index)
    | Infer the most likely frequency given the input index. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`infer_freq`](api/pandas.infer_freq.html#pandas.infer_freq "pandas.infer_freq")(index)
    | 推断给定输入索引的最可能频率。 |'
- en: Top-level dealing with Interval data
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理区间数据的顶层函数
- en: '| [`interval_range`](api/pandas.interval_range.html#pandas.interval_range "pandas.interval_range")([start, end, periods, freq, ...])
    | Return a fixed frequency IntervalIndex. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`interval_range`](api/pandas.interval_range.html#pandas.interval_range "pandas.interval_range")([start, end, periods, freq, ...])
    | 返回固定频率的区间索引。 |'
- en: Top-level evaluation
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 顶层评估
- en: '| [`eval`](api/pandas.eval.html#pandas.eval "pandas.eval")(expr[, parser, engine, local_dict, ...])
    | Evaluate a Python expression as a string using various backends. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`eval`](api/pandas.eval.html#pandas.eval "pandas.eval")(expr[, parser, engine, local_dict, ...])
    | 使用不同的后端评估Python表达式字符串。 |'
- en: Datetime formats
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日期时间格式
- en: '| [`tseries.api.guess_datetime_format`](api/pandas.tseries.api.guess_datetime_format.html#pandas.tseries.api.guess_datetime_format
    "pandas.tseries.api.guess_datetime_format")(dt_str[, ...]) | Guess the datetime
    format of a given datetime string. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`tseries.api.guess_datetime_format`](api/pandas.tseries.api.guess_datetime_format.html#pandas.tseries.api.guess_datetime_format
    "pandas.tseries.api.guess_datetime_format")(dt_str[, ...]) | 猜测给定日期时间字符串的日期时间格式。
    |'
- en: Hashing
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 哈希处理
- en: '| [`util.hash_array`](api/pandas.util.hash_array.html#pandas.util.hash_array
    "pandas.util.hash_array")(vals[, encoding, hash_key, ...]) | Given a 1d array,
    return an array of deterministic integers. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`util.hash_array`](api/pandas.util.hash_array.html#pandas.util.hash_array
    "pandas.util.hash_array")(vals[, encoding, hash_key, ...]) | 给定一维数组，返回一组确定性整数。
    |'
- en: '| [`util.hash_pandas_object`](api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object")(obj[, index, ...]) | Return a data hash of the
    Index/Series/DataFrame. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`util.hash_pandas_object`](api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object")(obj[, index, ...]) | 返回索引/系列/数据框的数据哈希值。 |'
- en: Importing from other DataFrame libraries
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从其他DataFrame库导入
- en: '| [`api.interchange.from_dataframe`](api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe")(df[, allow_copy]) | Build a `pd.DataFrame`
    from any DataFrame supporting the interchange protocol. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`api.interchange.from_dataframe`](api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe")(df[, allow_copy]) | 从支持交换协议的任何DataFrame构建`pd.DataFrame`。
    |'
- en: Data manipulations
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据操作
- en: '| [`melt`](api/pandas.melt.html#pandas.melt "pandas.melt")(frame[, id_vars, value_vars, var_name, ...])
    | Unpivot a DataFrame from wide to long format, optionally leaving identifiers
    set. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`melt`](api/pandas.melt.html#pandas.melt "pandas.melt")(frame[, id_vars, value_vars, var_name, ...])
    | 将DataFrame从宽格式转换为长格式，可选择保留标识符设置。 |'
- en: '| [`pivot`](api/pandas.pivot.html#pandas.pivot "pandas.pivot")(data, *, columns[, index, values])
    | Return reshaped DataFrame organized by given index / column values. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`pivot`](api/pandas.pivot.html#pandas.pivot "pandas.pivot")(data, *, columns[, index, values])
    | 返回按给定索引/列值组织的重塑DataFrame。 |'
- en: '| [`pivot_table`](api/pandas.pivot_table.html#pandas.pivot_table "pandas.pivot_table")(data[, values, index, columns, ...])
    | Create a spreadsheet-style pivot table as a DataFrame. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`pivot_table`](api/pandas.pivot_table.html#pandas.pivot_table "pandas.pivot_table")(data[, values, index, columns, ...])
    | 创建一个类似电子表格的透视表作为DataFrame。 |'
- en: '| [`crosstab`](api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")(index, columns[, values, rownames, ...])
    | Compute a simple cross tabulation of two (or more) factors. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`crosstab`](api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")(index, columns[, values, rownames, ...])
    | 计算两个（或更多）因子的简单交叉制表。 |'
- en: '| [`cut`](api/pandas.cut.html#pandas.cut "pandas.cut")(x, bins[, right, labels, retbins, ...])
    | Bin values into discrete intervals. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`cut`](api/pandas.cut.html#pandas.cut "pandas.cut")(x, bins[, right, labels, retbins, ...])
    | 将值分成离散区间。 |'
- en: '| [`qcut`](api/pandas.qcut.html#pandas.qcut "pandas.qcut")(x, q[, labels, retbins, precision, ...])
    | Quantile-based discretization function. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`qcut`](api/pandas.qcut.html#pandas.qcut "pandas.qcut")(x, q[, labels, retbins, precision, ...])
    | 基于分位数的离散化函数。 |'
- en: '| [`merge`](api/pandas.merge.html#pandas.merge "pandas.merge")(left, right[, how, on, left_on, ...])
    | Merge DataFrame or named Series objects with a database-style join. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`merge`](api/pandas.merge.html#pandas.merge "pandas.merge")(left, right[, how, on, left_on, ...])
    | 用数据库风格的连接合并DataFrame或命名Series对象。 |'
- en: '| [`merge_ordered`](api/pandas.merge_ordered.html#pandas.merge_ordered "pandas.merge_ordered")(left, right[, on, left_on, ...])
    | Perform a merge for ordered data with optional filling/interpolation. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`merge_ordered`](api/pandas.merge_ordered.html#pandas.merge_ordered "pandas.merge_ordered")(left, right[, on, left_on, ...])
    | 对有序数据执行合并，可选择填充/插值。 |'
- en: '| [`merge_asof`](api/pandas.merge_asof.html#pandas.merge_asof "pandas.merge_asof")(left, right[, on, left_on, ...])
    | Perform a merge by key distance. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`merge_asof`](api/pandas.merge_asof.html#pandas.merge_asof "pandas.merge_asof")(left, right[, on, left_on, ...])
    | 按键距离执行合并。 |'
- en: '| [`concat`](api/pandas.concat.html#pandas.concat "pandas.concat")(objs, *[, axis, join, ignore_index, ...])
    | Concatenate pandas objects along a particular axis. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`concat`](api/pandas.concat.html#pandas.concat "pandas.concat")(objs, *[, axis, join, ignore_index, ...])
    | 沿特定轴连接pandas对象。 |'
- en: '| [`get_dummies`](api/pandas.get_dummies.html#pandas.get_dummies "pandas.get_dummies")(data[, prefix, prefix_sep, ...])
    | Convert categorical variable into dummy/indicator variables. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`get_dummies`](api/pandas.get_dummies.html#pandas.get_dummies "pandas.get_dummies")(data[, prefix, prefix_sep, ...])
    | 将分类变量转换为虚拟/指示变量。 |'
- en: '| [`from_dummies`](api/pandas.from_dummies.html#pandas.from_dummies "pandas.from_dummies")(data[, sep, default_category])
    | Create a categorical `DataFrame` from a `DataFrame` of dummy variables. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`from_dummies`](api/pandas.from_dummies.html#pandas.from_dummies "pandas.from_dummies")(data[, sep, default_category])
    | 从虚拟变量的DataFrame创建一个分类`DataFrame`。 |'
- en: '| [`factorize`](api/pandas.factorize.html#pandas.factorize "pandas.factorize")(values[, sort, use_na_sentinel, ...])
    | Encode the object as an enumerated type or categorical variable. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`factorize`](api/pandas.factorize.html#pandas.factorize "pandas.factorize")(values[, sort, use_na_sentinel, ...])
    | 将对象编码为枚举类型或分类变量。 |'
- en: '| [`unique`](api/pandas.unique.html#pandas.unique "pandas.unique")(values)
    | Return unique values based on a hash table. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`unique`](api/pandas.unique.html#pandas.unique "pandas.unique")(values)
    | 基于哈希表返回唯一值。 |'
- en: '| [`lreshape`](api/pandas.lreshape.html#pandas.lreshape "pandas.lreshape")(data, groups[, dropna])
    | Reshape wide-format data to long. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`lreshape`](api/pandas.lreshape.html#pandas.lreshape "pandas.lreshape")(data, groups[, dropna])
    | 将宽格式数据重塑为长格式。 |'
- en: '| [`wide_to_long`](api/pandas.wide_to_long.html#pandas.wide_to_long "pandas.wide_to_long")(df, stubnames, i, j[, sep, suffix])
    | Unpivot a DataFrame from wide to long format. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`wide_to_long`](api/pandas.wide_to_long.html#pandas.wide_to_long "pandas.wide_to_long")
    | 将宽格式的 DataFrame 重塑为长格式。 |'
- en: Top-level missing data
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理缺失数据的顶级函数
- en: '| [`isna`](api/pandas.isna.html#pandas.isna "pandas.isna")(obj) | Detect missing
    values for an array-like object. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`isna`](api/pandas.isna.html#pandas.isna "pandas.isna") | 检测类数组对象中的缺失值。
    |'
- en: '| [`isnull`](api/pandas.isnull.html#pandas.isnull "pandas.isnull")(obj) | Detect
    missing values for an array-like object. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`isnull`](api/pandas.isnull.html#pandas.isnull "pandas.isnull") | 检测类数组对象中的缺失值。
    |'
- en: '| [`notna`](api/pandas.notna.html#pandas.notna "pandas.notna")(obj) | Detect
    non-missing values for an array-like object. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`notna`](api/pandas.notna.html#pandas.notna "pandas.notna") | 检测类数组对象中的非缺失值。
    |'
- en: '| [`notnull`](api/pandas.notnull.html#pandas.notnull "pandas.notnull")(obj)
    | Detect non-missing values for an array-like object. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`notnull`](api/pandas.notnull.html#pandas.notnull "pandas.notnull") | 检测类数组对象中的非缺失值。
    |'
- en: Top-level dealing with numeric data
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理数值数据的顶级函数
- en: '| [`to_numeric`](api/pandas.to_numeric.html#pandas.to_numeric "pandas.to_numeric")(arg[, errors, downcast, ...])
    | Convert argument to a numeric type. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`to_numeric`](api/pandas.to_numeric.html#pandas.to_numeric "pandas.to_numeric")
    | 将参数转换为数字类型。 |'
- en: Top-level dealing with datetimelike data
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理日期时间数据的顶级函数
- en: '| [`to_datetime`](api/pandas.to_datetime.html#pandas.to_datetime "pandas.to_datetime")(arg[, errors, dayfirst, ...])
    | Convert argument to datetime. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`to_datetime`](api/pandas.to_datetime.html#pandas.to_datetime "pandas.to_datetime")
    | 将参数转换为日期时间。 |'
- en: '| [`to_timedelta`](api/pandas.to_timedelta.html#pandas.to_timedelta "pandas.to_timedelta")(arg[, unit, errors])
    | Convert argument to timedelta. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`to_timedelta`](api/pandas.to_timedelta.html#pandas.to_timedelta "pandas.to_timedelta")
    | 将参数转换为时间增量。 |'
- en: '| [`date_range`](api/pandas.date_range.html#pandas.date_range "pandas.date_range")([start, end, periods, freq, tz, ...])
    | Return a fixed frequency DatetimeIndex. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`date_range`](api/pandas.date_range.html#pandas.date_range "pandas.date_range")
    | 返回固定频率的 DatetimeIndex。 |'
- en: '| [`bdate_range`](api/pandas.bdate_range.html#pandas.bdate_range "pandas.bdate_range")([start, end, periods, freq, tz, ...])
    | Return a fixed frequency DatetimeIndex with business day as the default. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`bdate_range`](api/pandas.bdate_range.html#pandas.bdate_range "pandas.bdate_range")
    | 返回以工作日为默认值的固定频率 DatetimeIndex。 |'
- en: '| [`period_range`](api/pandas.period_range.html#pandas.period_range "pandas.period_range")([start, end, periods, freq, name])
    | Return a fixed frequency PeriodIndex. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`period_range`](api/pandas.period_range.html#pandas.period_range "pandas.period_range")
    | 返回固定频率的 PeriodIndex。 |'
- en: '| [`timedelta_range`](api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range")([start, end, periods, freq, ...]) | Return a fixed frequency
    TimedeltaIndex with day as the default. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`timedelta_range`](api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") | 返回以天为默认值的固定频率 TimedeltaIndex。 |'
- en: '| [`infer_freq`](api/pandas.infer_freq.html#pandas.infer_freq "pandas.infer_freq")(index)
    | Infer the most likely frequency given the input index. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`infer_freq`](api/pandas.infer_freq.html#pandas.infer_freq "pandas.infer_freq")
    | 推断给定输入索引的最可能频率。 |'
- en: Top-level dealing with Interval data
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理区间数据的顶级函数
- en: '| [`interval_range`](api/pandas.interval_range.html#pandas.interval_range "pandas.interval_range")([start, end, periods, freq, ...])
    | Return a fixed frequency IntervalIndex. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`interval_range`](api/pandas.interval_range.html#pandas.interval_range "pandas.interval_range")
    | 返回固定频率的 IntervalIndex。 |'
- en: Top-level evaluation
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 顶级评估函数
- en: '| [`eval`](api/pandas.eval.html#pandas.eval "pandas.eval")(expr[, parser, engine, local_dict, ...])
    | Evaluate a Python expression as a string using various backends. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`eval`](api/pandas.eval.html#pandas.eval "pandas.eval") | 使用各种后端评估字符串形式的
    Python 表达式。 |'
- en: Datetime formats
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日期时间格式
- en: '| [`tseries.api.guess_datetime_format`](api/pandas.tseries.api.guess_datetime_format.html#pandas.tseries.api.guess_datetime_format
    "pandas.tseries.api.guess_datetime_format")(dt_str[, ...]) | Guess the datetime
    format of a given datetime string. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`tseries.api.guess_datetime_format`](api/pandas.tseries.api.guess_datetime_format.html#pandas.tseries.api.guess_datetime_format
    "pandas.tseries.api.guess_datetime_format") | 猜测给定日期时间字符串的日期时间格式。 |'
- en: Hashing
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 哈希处理
- en: '| [`util.hash_array`](api/pandas.util.hash_array.html#pandas.util.hash_array
    "pandas.util.hash_array")(vals[, encoding, hash_key, ...]) | Given a 1d array,
    return an array of deterministic integers. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`util.hash_array`](api/pandas.util.hash_array.html#pandas.util.hash_array
    "pandas.util.hash_array") | 给定一维数组，返回一组确定性整数。 |'
- en: '| [`util.hash_pandas_object`](api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object")(obj[, index, ...]) | Return a data hash of the
    Index/Series/DataFrame. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`util.hash_pandas_object`](api/pandas.util.hash_pandas_object.html#pandas.util.hash_pandas_object
    "pandas.util.hash_pandas_object")(obj[, index, ...]) | 返回索引/系列/数据框的数据哈希。 |'
- en: Importing from other DataFrame libraries
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入其他数据框库
- en: '| [`api.interchange.from_dataframe`](api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe")(df[, allow_copy]) | Build a `pd.DataFrame`
    from any DataFrame supporting the interchange protocol. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`api.interchange.from_dataframe`](api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe")(df[, allow_copy]) | 从支持交换协议的任何数据框构建一个`pd.DataFrame`。
    |'
