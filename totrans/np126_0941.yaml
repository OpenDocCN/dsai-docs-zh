- en: numpy.exceptions.DTypePromotionError
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.exceptions.DTypePromotionError.html](https://numpy.org/doc/1.26/reference/generated/numpy.exceptions.DTypePromotionError.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Multiple DTypes could not be converted to a common one.
  prefs: []
  type: TYPE_NORMAL
- en: This exception derives from `TypeError` and is raised whenever dtypes cannot
    be converted to a single common one. This can be because they are of a different
    category/class or incompatible instances of the same one (see Examples).
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Many functions will use promotion to find the correct result and implementation.
    For these functions the error will typically be chained with a more specific error
    indicating that no implementation was found for the input dtypes.
  prefs: []
  type: TYPE_NORMAL
- en: Typically promotion should be considered “invalid” between the dtypes of two
    arrays when *arr1 == arr2* can safely return all `False` because the dtypes are
    fundamentally different.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Datetimes and complex numbers are incompatible classes and cannot be promoted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'For example for structured dtypes, the structure can mismatch and the same
    `DTypePromotionError` is given when two structured dtypes with a mismatch in their
    number of fields is given:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
