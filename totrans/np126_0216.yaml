- en: numpy.tril_indices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.tril_indices.html](https://numpy.org/doc/1.26/reference/generated/numpy.tril_indices.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the indices for the lower-triangle of an (n, m) array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int'
  prefs: []
  type: TYPE_NORMAL
- en: The row dimension of the arrays for which the returned indices will be valid.
  prefs: []
  type: TYPE_NORMAL
- en: '**k**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Diagonal offset (see [`tril`](numpy.tril.html#numpy.tril "numpy.tril") for details).
  prefs: []
  type: TYPE_NORMAL
- en: '**m**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.9.0.
  prefs: []
  type: TYPE_NORMAL
- en: The column dimension of the arrays for which the returned arrays will be valid.
    By default *m* is taken equal to *n*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**inds**tuple of arrays'
  prefs: []
  type: TYPE_NORMAL
- en: The indices for the triangle. The returned tuple contains two arrays, each with
    the indices along one dimension of the array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`triu_indices`](numpy.triu_indices.html#numpy.triu_indices "numpy.triu_indices")'
  prefs: []
  type: TYPE_NORMAL
- en: similar function, for upper-triangular.
  prefs: []
  type: TYPE_NORMAL
- en: '[`mask_indices`](numpy.mask_indices.html#numpy.mask_indices "numpy.mask_indices")'
  prefs: []
  type: TYPE_NORMAL
- en: generic function accepting an arbitrary mask function.
  prefs: []
  type: TYPE_NORMAL
- en: '[`tril`](numpy.tril.html#numpy.tril "numpy.tril"), [`triu`](numpy.triu.html#numpy.triu
    "numpy.triu")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.4.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Compute two different sets of indices to access 4x4 arrays, one for the lower
    triangular part starting at the main diagonal, and one starting two diagonals
    further right:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is how they can be used with a sample array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Both for indexing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'And for assigning values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'These cover almost the whole array (two diagonals right of the main one):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
