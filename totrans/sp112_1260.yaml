- en: scipy.stats.expectile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.expectile.html#scipy.stats.expectile](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.expectile.html#scipy.stats.expectile)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the expectile at the specified level.
  prefs: []
  type: TYPE_NORMAL
- en: Expectiles are a generalization of the expectation in the same way as quantiles
    are a generalization of the median. The expectile at level *alpha = 0.5* is the
    mean (average). See Notes for more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array containing numbers whose expectile is desired.
  prefs: []
  type: TYPE_NORMAL
- en: '**alpha**float, default: 0.5'
  prefs: []
  type: TYPE_NORMAL
- en: The level of the expectile; e.g., *alpha=0.5* gives the mean.
  prefs: []
  type: TYPE_NORMAL
- en: '**weights**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An array of weights associated with the values in *a*. The *weights* must be
    broadcastable to the same shape as *a*. Default is None, which gives each value
    a weight of 1.0. An integer valued weight element acts like repeating the corresponding
    observation in *a* that many times. See Notes for more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**expectile**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The empirical expectile at level [`alpha`](scipy.stats.alpha.html#scipy.stats.alpha
    "scipy.stats.alpha").
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.mean`](https://numpy.org/devdocs/reference/generated/numpy.mean.html#numpy.mean
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: Arithmetic average
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.quantile`](https://numpy.org/devdocs/reference/generated/numpy.quantile.html#numpy.quantile
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: Quantile
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'In general, the expectile at level \(\alpha\) of a random variable \(X\) with
    cumulative distribution function (CDF) \(F\) is given by the unique solution \(t\)
    of:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\alpha E((X - t)_+) = (1 - \alpha) E((t - X)_+) \,.\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, \((x)_+ = \max(0, x)\) is the positive part of \(x\). This equation can
    be equivalently written as:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\alpha \int_t^\infty (x - t)\mathrm{d}F(x) = (1 - \alpha) \int_{-\infty}^t
    (t - x)\mathrm{d}F(x) \,.\]
  prefs: []
  type: TYPE_NORMAL
- en: 'The empirical expectile at level \(\alpha\) ([`alpha`](scipy.stats.alpha.html#scipy.stats.alpha
    "scipy.stats.alpha")) of a sample \(a_i\) (the array *a*) is defined by plugging
    in the empirical CDF of *a*. Given sample or case weights \(w\) (the array *weights*),
    it reads \(F_a(x) = \frac{1}{\sum_i w_i} \sum_i w_i 1_{a_i \leq x}\) with indicator
    function \(1_{A}\). This leads to the definition of the empirical expectile at
    level [`alpha`](scipy.stats.alpha.html#scipy.stats.alpha "scipy.stats.alpha")
    as the unique solution \(t\) of:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\alpha \sum_{i=1}^n w_i (a_i - t)_+ = (1 - \alpha) \sum_{i=1}^n w_i (t - a_i)_+
    \,.\]
  prefs: []
  type: TYPE_NORMAL
- en: For \(\alpha=0.5\), this simplifies to the weighted average. Furthermore, the
    larger \(\alpha\), the larger the value of the expectile.
  prefs: []
  type: TYPE_NORMAL
- en: As a final remark, the expectile at level \(\alpha\) can also be written as
    a minimization problem. One often used choice is
  prefs: []
  type: TYPE_NORMAL
- en: \[\operatorname{argmin}_t E(\lvert 1_{t\geq X} - \alpha\rvert(t - X)^2) \,.\]
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: W. K. Newey and J. L. Powell (1987), “Asymmetric Least Squares Estimation and
    Testing,” Econometrica, 55, 819-847.
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: T. Gneiting (2009). “Making and Evaluating Point Forecasts,” Journal of the
    American Statistical Association, 106, 746 - 762. [DOI:10.48550/arXiv.0912.0902](https://doi.org/10.48550/arXiv.0912.0902)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
