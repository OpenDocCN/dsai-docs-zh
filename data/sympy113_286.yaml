- en: Internals of the Polynomial Manipulation Module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多项式操作模块的内部结构
- en: Original text：[https://docs.sympy.org/latest/modules/polys/internals.html](https://docs.sympy.org/latest/modules/polys/internals.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/polys/internals.html](https://docs.sympy.org/latest/modules/polys/internals.html)
- en: The implementation of the polynomials module is structured internally in “levels”.
    There are four levels, called L0, L1, L2 and L3\. The levels three and four contain
    the user-facing functionality and were described in the previous section. This
    section focuses on levels zero and one.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式模块的实现在内部结构上被划分为“级别”。有四个级别，分别为 L0、L1、L2 和 L3。三级和四级包含面向用户的功能，并在上一节中进行了描述。本节重点介绍零级和一级。
- en: Level zero provides core polynomial manipulation functionality with C-like,
    low-level interfaces. Level one wraps this low-level functionality into object
    oriented structures. These are *not* the classes seen by the user, but rather
    classes used internally throughout the polys module.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 零级提供了核心的类 C 风格低级接口的多项式操作功能。一级将这些低级功能封装到面向对象的结构中。这些并*非*用户可见的类，而是整个 polys 模块内部使用的类。
- en: There is one additional complication in the implementation. This comes from
    the fact that all polynomial manipulations are relative to a *ground domain*.
    For example, when factoring a polynomial like \(x^{10} - 1\), one has to decide
    what ring the coefficients are supposed to belong to, or less trivially, what
    coefficients are allowed to appear in the factorization. This choice of coefficients
    is called a ground domain. Typical choices include the integers \(\mathbb{Z}\),
    the rational numbers \(\mathbb{Q}\) or various related rings and fields. But it
    is perfectly legitimate (although in this case uninteresting) to factorize over
    polynomial rings such as \(k[Y]\), where \(k\) is some fixed field.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 实现中还有一个额外的复杂性。这源于所有多项式操作都是相对于*基础域*进行的。例如，在因式分解多项式 \(x^{10} - 1\) 时，必须决定系数应属于哪个环，或者更不显然地，哪些系数允许在因式分解中出现。这种系数的选择称为基础域。典型的选择包括整数
    \(\mathbb{Z}\)，有理数 \(\mathbb{Q}\) 或各种相关的环和域。但在这种情况下，可以合法地（尽管无趣地）在多项式环上如 \(k[Y]\)
    进行因式分解，其中 \(k\) 是某个固定域。
- en: 'Thus the polynomial manipulation algorithms (both complicated ones like factoring,
    and simpler ones like addition or multiplication) have to rely on other code to
    manipulate the coefficients. In the polynomial manipulation module, such code
    is encapsulated in so-called “domains”. A domain is basically a factory object:
    it takes various representations of data, and converts them into objects with
    unified interface. Every object created by a domain has to implement the arithmetic
    operations \(+\), \(-\) and \(\times\). Other operations are accessed through
    the domain, e.g. as in `ZZ.quo(ZZ(4), ZZ(2))`.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，多项式操作算法（包括复杂的如因式分解和简单的如加法或乘法）必须依赖其他代码来操作系数。在多项式操作模块中，这样的代码封装在所谓的“域”中。域基本上是一个工厂对象：它接受各种数据表示，并将它们转换为具有统一接口的对象。域创建的每个对象都必须实现算术运算
    \(+\)、\(-\) 和 \(\times\)。其他操作通过域访问，例如像 `ZZ.quo(ZZ(4), ZZ(2))`。
- en: 'Note that there is some amount of *circularity*: the polynomial ring domains
    use the level one classes, the level one classes use the level zero functions,
    and level zero functions use domains. It is possible, in principle, but not in
    the current implementation, to work in rings like \(k[X][Y]\). This would create
    even more layers. For this reason, working in the isomorphic ring \(k[X, Y]\)
    is preferred.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，这里存在一定的*循环性*：多项式环域使用一级类，一级类使用零级函数，而零级函数则使用环域。原则上可以，但在当前实现中无法像 \(k[X][Y]\)
    这样工作。这会创建更多层级。因此，首选在同构环 \(k[X, Y]\) 中工作。
- en: Level Zero
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 零级
- en: Level zero contains the bulk code of the polynomial manipulation module.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 零级包含了多项式操作模块的大部分代码。
- en: Manipulation of dense, multivariate polynomials
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 稠密、多变量多项式的操作
- en: These functions can be used to manipulate polynomials in \(K[X_0, \ldots, X_u]\).
    Functions for manipulating multivariate polynomials in the dense representation
    have the prefix `dmp_`. Functions which only apply to univariate polynomials (i.e.
    \(u = 0\)) have the prefix `dup__`. The ground domain \(K\) has to be passed explicitly.
    For many multivariate polynomial manipulation functions also the level \(u\),
    i.e. the number of generators minus one, has to be passed. (Note that, in many
    cases, `dup_` versions of functions are available, which may be slightly more
    efficient.)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数可用于操纵`K[X_0, \ldots, X_u]`中的多项式。仅适用于单变量多项式（即\( u = 0 \)）的函数带有前缀`dup_`。必须显式传递地域\(
    K \)。对于许多多变量多项式操作函数，还必须传递级别\( u \)，即生成器数量减一。（请注意，在许多情况下，`dup_`版本的函数可用，可能会稍微更有效。）
- en: '**Basic manipulation:**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**基本操作：**'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return leading coefficient of `f`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的主导系数。
- en: Examples
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Return trailing coefficient of `f`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的尾随系数。
- en: Examples
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Return the ground leading coefficient.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 返回地主导系数。
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE7]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Return the ground trailing coefficient.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 返回地尾随系数。
- en: Examples
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE11]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Return the leading term `c * x_1**n_1 ... x_k**n_k`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 返回主导项 `c * x_1**n_1 ... x_k**n_k`。
- en: Examples
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE15]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Return the leading degree of `f` in `x_0` in `K[X]`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`在`K[X]`中关于`x_0`的主导度。
- en: Note that the degree of 0 is negative infinity (`float('-inf')`).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，0的度是负无穷 (`float('-inf')`)。
- en: Examples
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE19]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Return the leading degree of `f` in `x_j` in `K[X]`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`在`K[X]`中关于`x_j`的主导度。
- en: Examples
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE24]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Return a list of degrees of `f` in `K[X]`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`在`K[X]`中的度列表。
- en: Examples
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE28]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Remove leading zeros from `f` in `K[X]`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从`K[X]`中的`f`中移除前导零。
- en: Examples
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE32]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Return the number of levels in `f` and recursively strip it.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`中的级别数，并递归地剥离它。
- en: Examples
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE35]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Compute `x**n * f(1/x)`, i.e.: reverse `f` in `K[x]`.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`x**n * f(1/x)`，即在`K[x]`中反转`f`。
- en: Examples
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE39]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Create a new copy of a polynomial `f` in `K[X]`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中创建`f`的新拷贝。
- en: Examples
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE43]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Convert \(f\) into a nested tuple of tuples.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`转换为嵌套元组的元组。
- en: This is needed for hashing. This is similar to dmp_copy().
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是为了哈希而需要的。这类似于`dmp_copy()`。
- en: Examples
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE47]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Normalize a multivariate polynomial in the given domain.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定域中规范化多变量多项式。
- en: Examples
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE51]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Convert the ground domain of `f` from `K0` to `K1`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`的地域从`K0`转换为`K1`。
- en: Examples
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE54]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Convert the ground domain of `f` from SymPy to `K`.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`的地域从SymPy转换为`K`。
- en: Examples
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE58]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Return the `n`-th coefficient of `f` in `K[x]`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`在`K[x]`中的第`n`个系数。
- en: Examples
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE61]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Return the ground `n`-th coefficient of `f` in `K[x]`.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`在`K[x]`中关于`n`的地`n`次系数。
- en: Examples
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE65]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Return `True` if `f` is zero in `K[X]`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`在`K[X]`中为零则返回`True`。
- en: Examples
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE69]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Return a multivariate zero.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个多变量零点。
- en: Examples
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE72]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Return `True` if `f` is one in `K[X]`.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`在`K[X]`中是一则返回`True`。
- en: Examples
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE75]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Return a multivariate one over `K`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在`K`上的一个多变量一。
- en: Examples
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE78]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Return True if `f` is constant in `K[X]`.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`f`在`K[X]`中是常量则返回`True`。
- en: Examples
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE81]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Return a multivariate constant.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个多变量常数。
- en: Examples
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE84]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Return a list of multivariate zeros.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多变量零点列表。
- en: Examples
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE87]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Return a list of multivariate constants.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多变量常数列表。
- en: Examples
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE90]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Return `True` if `LC(f)` is negative.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`LC(f)`为负则返回`True`。
- en: Examples
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE93]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Return `True` if `LC(f)` is positive.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`LC(f)`为正则返回`True`。
- en: Examples
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE96]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Create a `K[X]` polynomial from a `dict`.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 从`dict`创建一个`K[X]`多项式。
- en: Examples
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE99]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Convert a `K[X]` polynomial to a [PRE102].
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 将`K[X]`多项式转换为[PRE102]。
- en: Examples
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE103]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Transform `K[..x_i..x_j..]` to `K[..x_j..x_i..]`.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 将`K[..x_i..x_j..]`转换为`K[..x_j..x_i..]`。
- en: Examples
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE106]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '[PRE109]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Return a polynomial in `K[x_{P(1)},..,x_{P(n)}]`.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个多项式在`K[x_{P(1)},..,x_{P(n)}]`中。
- en: Examples
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE110]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Return a multivariate value nested `l`-levels.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 返回嵌套`l`级别的多变量值。
- en: Examples
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE114]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Return a multivariate polynomial raised `l`-levels.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 返回提升`l`级别的多变量多项式。
- en: Examples
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE117]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Map `x_i**m_i` to `y_i` in a polynomial in `K[X]`.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`多项式中将`x_i**m_i`映射到`y_i`。
- en: Examples
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE121]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '[PRE122]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '[PRE124]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: Map `x_i**m_i` to `y_i` in a set of polynomials in `K[X]`.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`多项式集合中将`x_i**m_i`映射到`y_i`。
- en: Examples
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE125]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: '[PRE126]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '[PRE127]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: Map `y_i` to `x_i**k_i` in a polynomial in `K[X]`.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中的多项式中将`y_i`映射到`x_i**k_i`。
- en: Examples
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE129]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '[PRE130]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '[PRE131]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '[PRE132]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Exclude useless levels from `f`.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 从`f`中排除无用的级别。
- en: Return the levels excluded, the new excluded `f`, and the new `u`.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 返回排除的级别，新排除的`f`和新的`u`。
- en: Examples
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE133]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[PRE134]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: '[PRE135]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Include useless levels in `f`.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在`f`中包括无用的级别。
- en: Examples
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE137]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '[PRE138]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: '[PRE139]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '[PRE140]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: Convert `f` from `K[X][Y]` to `K[X,Y]`.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`从`K[X][Y]`转换为`K[X,Y]`。
- en: Examples
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE141]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: '[PRE142]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: '[PRE143]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: '[PRE144]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: Convert `f` from `K[X,Y]` to `K[X][Y]`.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`从`K[X,Y]`转换为`K[X][Y]`。
- en: Examples
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE145]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: '[PRE146]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: '[PRE147]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Remove GCD of terms from `f` in `K[X]`.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 从`K[X]`中去除`f`的项的最大公约数。
- en: Examples
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE148]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: '[PRE150]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: '[PRE151]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: List all non-zero terms from `f` in the given order `order`.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 按给定顺序`order`列出`f`中的所有非零项。
- en: Examples
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE152]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '[PRE154]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: '[PRE155]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: Apply `h` to pairs of coefficients of `f` and `g`.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 对`f`和`g`的系数对应应用`h`。
- en: Examples
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE156]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: '[PRE157]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '[PRE158]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '[PRE159]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: Take a continuous subsequence of terms of `f` in `K[X]`.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中取`f`的连续子序列。
- en: '[PRE160]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: Return a polynomial of degree `n` with coefficients in `[a, b]`.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`n`阶多项式，其系数在`[a, b]`中。
- en: Examples
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE161]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: '[PRE162]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '**Arithmetic operations:**'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '**算术运算:**'
- en: '[PRE163]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: Add `c(x_2..x_u)*x_0**i` to `f` in `K[X]`.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中将`c(x_2..x_u)*x_0**i`添加到`f`中。
- en: Examples
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE164]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '[PRE165]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: '[PRE166]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: Subtract `c(x_2..x_u)*x_0**i` from `f` in `K[X]`.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 从`K[X]`中的`f`中减去`c(x_2..x_u)*x_0**i`。
- en: Examples
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE167]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '[PRE168]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: '[PRE169]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: Multiply `f` by `c(x_2..x_u)*x_0**i` in `K[X]`.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中将`f`乘以`c(x_2..x_u)*x_0**i`。
- en: Examples
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE170]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: '[PRE171]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: '[PRE172]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: Add an element of the ground domain to `f`.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 向`f`中添加地域域的元素。
- en: Examples
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE173]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: '[PRE174]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: '[PRE175]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: Subtract an element of the ground domain from `f`.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 从`f`中减去地域域的元素。
- en: Examples
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE176]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: '[PRE177]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: '[PRE178]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: Multiply `f` by a constant value in `K[X]`.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中将`f`乘以一个常数值。
- en: Examples
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE179]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: '[PRE180]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: '[PRE181]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: Quotient by a constant in `K[X]`.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中对常数进行除法。
- en: Examples
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE182]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: '[PRE183]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: '[PRE184]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: '[PRE185]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: Exact quotient by a constant in `K[X]`.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中对常数进行精确除法。
- en: Examples
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE186]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: '[PRE187]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: '[PRE188]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: Efficiently multiply `f` by `x**n` in `K[x]`.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[x]`中高效地将`f`乘以`x**n`。
- en: Examples
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE189]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: '[PRE190]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: '[PRE191]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: Efficiently divide `f` by `x**n` in `K[x]`.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[x]`中高效地将`f`除以`x**n`。
- en: Examples
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE192]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: '[PRE193]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: '[PRE194]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: Make all coefficients positive in `K[X]`.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 使`K[X]`中所有系数为正。
- en: Examples
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE195]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: '[PRE196]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: '[PRE197]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: Negate a polynomial in `K[X]`.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中对`f`进行否定。
- en: Examples
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE198]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: '[PRE199]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: '[PRE200]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: Add dense polynomials in `K[X]`.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中添加密集多项式。
- en: Examples
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE201]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE201]'
- en: '[PRE202]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE202]'
- en: '[PRE203]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE203]'
- en: Subtract dense polynomials in `K[X]`.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中减去密集多项式。
- en: Examples
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE204]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE204]'
- en: '[PRE205]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE205]'
- en: '[PRE206]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE206]'
- en: Returns `f + g*h` where `f, g, h` are in `K[X]`.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f + g*h`，其中`f, g, h`在`K[X]`中。
- en: Examples
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE207]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE207]'
- en: '[PRE208]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE208]'
- en: '[PRE209]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE209]'
- en: Returns `f - g*h` where `f, g, h` are in `K[X]`.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f - g*h`，其中`f, g, h`在`K[X]`中。
- en: Examples
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE210]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE210]'
- en: '[PRE211]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE211]'
- en: '[PRE212]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE212]'
- en: Multiply dense polynomials in `K[X]`.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中乘以密集多项式。
- en: Examples
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE213]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE213]'
- en: '[PRE214]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE214]'
- en: '[PRE215]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE215]'
- en: Square dense polynomials in `K[X]`.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中平方密集多项式。
- en: Examples
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE216]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE216]'
- en: '[PRE217]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE217]'
- en: '[PRE218]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE218]'
- en: Raise `f` to the `n`-th power in `K[X]`.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 将`f`提升到`n`次幂在`K[X]`中。
- en: Examples
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE219]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE219]'
- en: '[PRE220]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE220]'
- en: '[PRE221]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE221]'
- en: Polynomial pseudo-division in `K[X]`.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中进行多项式伪除法。
- en: Examples
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE222]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE222]'
- en: '[PRE223]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE223]'
- en: '[PRE224]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE224]'
- en: Polynomial pseudo-remainder in `K[X]`.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中进行多项式伪除法。
- en: Examples
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE225]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE225]'
- en: '[PRE226]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE226]'
- en: '[PRE227]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE227]'
- en: Polynomial exact pseudo-quotient in `K[X]`.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中进行精确的多项式伪除法。
- en: Examples
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE228]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE228]'
- en: '[PRE229]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE229]'
- en: '[PRE230]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE230]'
- en: '[PRE231]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE231]'
- en: '[PRE232]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE232]'
- en: Polynomial pseudo-quotient in `K[X]`.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中进行多项式伪除法。
- en: Examples
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE233]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE233]'
- en: '[PRE234]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE234]'
- en: '[PRE235]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE235]'
- en: '[PRE236]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE236]'
- en: '[PRE237]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE237]'
- en: Multivariate division with remainder over a ring.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 在环上进行多变量除法并得到余数。
- en: Examples
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE238]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE238]'
- en: '[PRE239]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE239]'
- en: '[PRE240]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE240]'
- en: Polynomial division with remainder over a field.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个域上进行多项式除法并得到余数。
- en: Examples
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE241]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE241]'
- en: '[PRE242]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE242]'
- en: '[PRE243]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE243]'
- en: Polynomial division with remainder in `K[X]`.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中进行多项式除法并得到余数。
- en: Examples
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE244]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE244]'
- en: '[PRE245]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE245]'
- en: '[PRE246]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE246]'
- en: '[PRE247]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE247]'
- en: Returns polynomial remainder in `K[X]`.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`K[X]`中的多项式余数。
- en: Examples
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE248]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE248]'
- en: '[PRE249]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE249]'
- en: '[PRE250]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE250]'
- en: '[PRE251]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE251]'
- en: Returns exact polynomial quotient in `K[X]`.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`K[X]`中的精确多项式商。
- en: Examples
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE252]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE252]'
- en: '[PRE253]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE253]'
- en: '[PRE254]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE254]'
- en: '[PRE255]'
  id: totrans-417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE255]'
- en: Returns polynomial quotient in `K[X]`.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`K[X]`中的多项式商。
- en: Examples
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE256]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE256]'
- en: '[PRE257]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE257]'
- en: '[PRE258]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE258]'
- en: '[PRE259]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE259]'
- en: '[PRE260]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE260]'
- en: Returns maximum norm of a polynomial in `K[X]`.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`K[X]`中多项式的最大范数。
- en: Examples
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE261]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE261]'
- en: '[PRE262]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE262]'
- en: '[PRE263]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE263]'
- en: Returns l1 norm of a polynomial in `K[X]`.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`K[X]`中多项式的l1范数。
- en: Examples
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE264]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE264]'
- en: '[PRE265]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE265]'
- en: '[PRE266]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE266]'
- en: Multiply together several polynomials in `K[X]`.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中将多个多项式相乘。
- en: Examples
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE267]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE267]'
- en: '[PRE268]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE268]'
- en: '**Further tools:**'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步的工具:**'
- en: '[PRE269]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE269]'
- en: Computes the indefinite integral of `f` in `x_0` in `K[X]`.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中计算`x_0`的`f`的不定积分。
- en: Examples
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE270]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE270]'
- en: '[PRE271]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE271]'
- en: '[PRE272]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE272]'
- en: Computes the indefinite integral of `f` in `x_j` in `K[X]`.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中计算`x_j`的`f`的不定积分。
- en: Examples
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE273]'
  id: totrans-448
  prefs: []
  type: TYPE_PRE
  zh: '[PRE273]'
- en: '[PRE274]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE274]'
- en: '[PRE275]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE275]'
- en: '`m`-th order derivative in `x_0` of a polynomial in `K[X]`.'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中`x_0`的`m`阶导数。
- en: Examples
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE276]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE276]'
- en: '[PRE277]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE277]'
- en: '[PRE278]'
  id: totrans-455
  prefs: []
  type: TYPE_PRE
  zh: '[PRE278]'
- en: '[PRE279]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE279]'
- en: '`m`-th order derivative in `x_j` of a polynomial in `K[X]`.'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中`x_j`的`m`阶导数。
- en: Examples
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE280]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE280]'
- en: '[PRE281]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE281]'
- en: '[PRE282]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE282]'
- en: '[PRE283]'
  id: totrans-462
  prefs: []
  type: TYPE_PRE
  zh: '[PRE283]'
- en: Evaluate a polynomial at `x_0 = a` in `K[X]` using the Horner scheme.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Horner方案在`K[X]`中评估多项式在`x_0 = a`处的值。
- en: Examples
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE284]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE284]'
- en: '[PRE285]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE285]'
- en: '[PRE286]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE286]'
- en: Evaluate a polynomial at `x_j = a` in `K[X]` using the Horner scheme.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Horner方案在`K[X]`中评估多项式在`x_j = a`处的值。
- en: Examples
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE287]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE287]'
- en: '[PRE288]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE288]'
- en: '[PRE289]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE289]'
- en: '[PRE290]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE290]'
- en: Evaluate a polynomial at `x_j = a_j, ...` in `K[X]`.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中评估多项式在`x_j = a_j, ...`处。
- en: Examples
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE291]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE291]'
- en: '[PRE292]'
  id: totrans-477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE292]'
- en: '[PRE293]'
  id: totrans-478
  prefs: []
  type: TYPE_PRE
  zh: '[PRE293]'
- en: '[PRE294]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE294]'
- en: Differentiate and evaluate a polynomial in `x_j` at `a` in `K[X]`.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中以`x_j`处于`a`时区分和评估多项式。
- en: Examples
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE295]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE295]'
- en: '[PRE296]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE296]'
- en: '[PRE297]'
  id: totrans-484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE297]'
- en: '[PRE298]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE298]'
- en: Reduce a `K[X]` polynomial modulo a polynomial `p` in `K[Y]`.
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[Y]`中用多项式`p`对`K[X]`中的多项式进行取模。
- en: Examples
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE299]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE299]'
- en: '[PRE300]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE300]'
- en: '[PRE301]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE301]'
- en: '[PRE302]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE302]'
- en: Reduce a `K[X]` polynomial modulo a constant `p` in `K`.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K`中用常数`p`对`K[X]`多项式进行取模。
- en: Examples
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE303]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE303]'
- en: '[PRE304]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE304]'
- en: '[PRE305]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE305]'
- en: '[PRE306]'
  id: totrans-497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE306]'
- en: Divide all coefficients by `LC(f)` in `K[x]`.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[x]`中将所有系数除以`LC(f)`。
- en: Examples
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE307]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE307]'
- en: '[PRE308]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE308]'
- en: '[PRE309]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE309]'
- en: '[PRE310]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE310]'
- en: Divide all coefficients by `LC(f)` in `K[X]`.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 在`K[X]`中将所有系数除以`LC(f)`。
- en: Examples
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE311]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE311]'
- en: '[PRE312]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE312]'
- en: '[PRE313]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE313]'
- en: '[PRE314]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE314]'
- en: '[PRE315]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE315]'
- en: '[PRE316]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE316]'
- en: Compute the GCD of coefficients of `f` in `K[x]`.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`K[x]`中`f`的系数的最大公约数。
- en: Examples
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE317]'
  id: totrans-514
  prefs: []
  type: TYPE_PRE
  zh: '[PRE317]'
- en: '[PRE318]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE318]'
- en: '[PRE319]'
  id: totrans-516
  prefs: []
  type: TYPE_PRE
  zh: '[PRE319]'
- en: '[PRE320]'
  id: totrans-517
  prefs: []
  type: TYPE_PRE
  zh: '[PRE320]'
- en: '[PRE321]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE321]'
- en: '[PRE322]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE322]'
- en: Compute the GCD of coefficients of `f` in `K[X]`.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`K[X]`中`f`的系数的最大公约数。
- en: Examples
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE323]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE323]'
- en: '[PRE324]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE324]'
- en: '[PRE325]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE325]'
- en: '[PRE326]'
  id: totrans-525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE326]'
- en: '[PRE327]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE327]'
- en: '[PRE328]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE328]'
- en: Compute content and the primitive form of `f` in `K[x]`.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 在 `K[x]` 中的内容和原始形式。
- en: Examples
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE329]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE329]'
- en: '[PRE330]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE330]'
- en: '[PRE331]'
  id: totrans-532
  prefs: []
  type: TYPE_PRE
  zh: '[PRE331]'
- en: '[PRE332]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE332]'
- en: '[PRE333]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE333]'
- en: '[PRE334]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE334]'
- en: Compute content and the primitive form of `f` in `K[X]`.
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 在 `K[X]` 中的内容和原始形式。
- en: Examples
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE335]'
  id: totrans-538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE335]'
- en: '[PRE336]'
  id: totrans-539
  prefs: []
  type: TYPE_PRE
  zh: '[PRE336]'
- en: '[PRE337]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE337]'
- en: '[PRE338]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE338]'
- en: '[PRE339]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE339]'
- en: '[PRE340]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE340]'
- en: Extract common content from a pair of polynomials in `K[x]`.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 从一对 `K[x]` 中的多项式中提取共同内容。
- en: Examples
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE341]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE341]'
- en: '[PRE342]'
  id: totrans-547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE342]'
- en: '[PRE343]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE343]'
- en: Extract common content from a pair of polynomials in `K[X]`.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 从一对 `K[X]` 中的多项式中提取共同内容。
- en: Examples
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE344]'
  id: totrans-551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE344]'
- en: '[PRE345]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE345]'
- en: '[PRE346]'
  id: totrans-553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE346]'
- en: Find `f1` and `f2`, such that `f(x+I*y) = f1(x,y) + f2(x,y)*I`.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 找到 `f1` 和 `f2`，使得 `f(x+I*y) = f1(x,y) + f2(x,y)*I`。
- en: Examples
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE347]'
  id: totrans-556
  prefs: []
  type: TYPE_PRE
  zh: '[PRE347]'
- en: '[PRE348]'
  id: totrans-557
  prefs: []
  type: TYPE_PRE
  zh: '[PRE348]'
- en: '[PRE349]'
  id: totrans-558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE349]'
- en: '[PRE350]'
  id: totrans-559
  prefs: []
  type: TYPE_PRE
  zh: '[PRE350]'
- en: Evaluate efficiently the composition `f(-x)` in `K[x]`.
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 高效评估 `K[x]` 中的组合 `f(-x)`。
- en: Examples
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE351]'
  id: totrans-562
  prefs: []
  type: TYPE_PRE
  zh: '[PRE351]'
- en: '[PRE352]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE352]'
- en: '[PRE353]'
  id: totrans-564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE353]'
- en: Evaluate efficiently composition `f(a*x)` in `K[x]`.
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 高效评估 `K[x]` 中的组合 `f(a*x)`。
- en: Examples
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE354]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE354]'
- en: '[PRE355]'
  id: totrans-568
  prefs: []
  type: TYPE_PRE
  zh: '[PRE355]'
- en: '[PRE356]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE356]'
- en: Evaluate efficiently Taylor shift `f(x + a)` in `K[x]`.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 高效评估 `K[x]` 中的泰勒变换 `f(x + a)`。
- en: Examples
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE357]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE357]'
- en: '[PRE358]'
  id: totrans-573
  prefs: []
  type: TYPE_PRE
  zh: '[PRE358]'
- en: '[PRE359]'
  id: totrans-574
  prefs: []
  type: TYPE_PRE
  zh: '[PRE359]'
- en: Evaluate functional transformation `q**n * f(p/q)` in `K[x]`.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `K[x]` 中评估函数变换 `q**n * f(p/q)`。
- en: Examples
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE360]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE360]'
- en: '[PRE361]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE361]'
- en: '[PRE362]'
  id: totrans-579
  prefs: []
  type: TYPE_PRE
  zh: '[PRE362]'
- en: Evaluate functional composition `f(g)` in `K[X]`.
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `K[X]` 中评估函数组合 `f(g)`。
- en: Examples
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE363]'
  id: totrans-582
  prefs: []
  type: TYPE_PRE
  zh: '[PRE363]'
- en: '[PRE364]'
  id: totrans-583
  prefs: []
  type: TYPE_PRE
  zh: '[PRE364]'
- en: '[PRE365]'
  id: totrans-584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE365]'
- en: Computes functional decomposition of `f` in `K[x]`.
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 在 `K[x]` 中的函数分解。
- en: 'Given a univariate polynomial `f` with coefficients in a field of characteristic
    zero, returns list `[f_1, f_2, ..., f_n]`, where:'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 给定系数为零特征场中的一元多项式 `f`，返回列表 `[f_1, f_2, ..., f_n]`，其中：
- en: '[PRE366]'
  id: totrans-587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE366]'
- en: and `f_2, ..., f_n` are monic and homogeneous polynomials of at least second
    degree.
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 而 `f_2, ..., f_n` 是至少二次的单项且齐次多项式。
- en: 'Unlike factorization, complete functional decompositions of polynomials are
    not unique, consider examples:'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 与因式分解不同，多项式的完整函数分解并非唯一，考虑示例：
- en: '`f o g = f(x + b) o (g - b)`'
  id: totrans-590
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`f o g = f(x + b) o (g - b)`'
- en: '`x**n o x**m = x**m o x**n`'
  id: totrans-591
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`x**n o x**m = x**m o x**n`'
- en: '`T_n o T_m = T_m o T_n`'
  id: totrans-592
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`T_n o T_m = T_m o T_n`'
- en: where `T_n` and `T_m` are Chebyshev polynomials.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 `T_n` 和 `T_m` 是切比雪夫多项式。
- en: Examples
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE367]'
  id: totrans-595
  prefs: []
  type: TYPE_PRE
  zh: '[PRE367]'
- en: '[PRE368]'
  id: totrans-596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE368]'
- en: References
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R784](#id2)]'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R784](#id2)]'
- en: '[[Kozen89]](literature.html#kozen89)'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Kozen89]](literature.html#kozen89)'
- en: '[PRE369]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE369]'
- en: Convert algebraic coefficients to integers in `K[X]`.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 将代数系数转换为 `K[X]` 中的整数。
- en: Examples
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE370]'
  id: totrans-603
  prefs: []
  type: TYPE_PRE
  zh: '[PRE370]'
- en: '[PRE371]'
  id: totrans-604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE371]'
- en: '[PRE372]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE372]'
- en: '[PRE373]'
  id: totrans-606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE373]'
- en: '[PRE374]'
  id: totrans-607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE374]'
- en: Compute the number of sign variations of `f` in `K[x]`.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 在 `K[x]` 中的符号变化数。
- en: Examples
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE375]'
  id: totrans-610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE375]'
- en: '[PRE376]'
  id: totrans-611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE376]'
- en: '[PRE377]'
  id: totrans-612
  prefs: []
  type: TYPE_PRE
  zh: '[PRE377]'
- en: Clear denominators, i.e. transform `K_0` to `K_1`.
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 清除分母，即将 `K_0` 转换为 `K_1`。
- en: Examples
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE378]'
  id: totrans-615
  prefs: []
  type: TYPE_PRE
  zh: '[PRE378]'
- en: '[PRE379]'
  id: totrans-616
  prefs: []
  type: TYPE_PRE
  zh: '[PRE379]'
- en: '[PRE380]'
  id: totrans-617
  prefs: []
  type: TYPE_PRE
  zh: '[PRE380]'
- en: '[PRE381]'
  id: totrans-618
  prefs: []
  type: TYPE_PRE
  zh: '[PRE381]'
- en: Compute `f**(-1)` mod `x**n` using Newton iteration.
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 使用牛顿迭代计算 `f**(-1)` mod `x**n`。
- en: Examples
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE382]'
  id: totrans-621
  prefs: []
  type: TYPE_PRE
  zh: '[PRE382]'
- en: Manipulation of dense, univariate polynomials with finite field coefficients
  id: totrans-622
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理具有有限域系数的密集单变量多项式
- en: Functions in this module carry the prefix `gf_`, referring to the classical
    name “Galois Fields” for finite fields. Note that many polynomial factorization
    algorithms work by reduction to the finite field case, so having special implementations
    for this case is justified both by performance, and by the necessity of certain
    methods which do not even make sense over general fields.
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 本模块中的函数具有前缀 `gf_`，指的是有限域的经典名称“伽罗瓦场”。需要指出，许多多项式因式分解算法通过将问题归约到有限域情况来实现，因此对这种情况进行特殊实现既有性能上的正当性，也有某些方法在一般域上甚至是没有意义的必要性。
- en: '[PRE383]'
  id: totrans-624
  prefs: []
  type: TYPE_PRE
  zh: '[PRE383]'
- en: Chinese Remainder Theorem.
  id: totrans-625
  prefs: []
  type: TYPE_NORMAL
  zh: 中国剩余定理。
- en: Given a set of integer residues `u_0,...,u_n` and a set of co-prime integer
    moduli `m_0,...,m_n`, returns an integer `u`, such that `u = u_i mod m_i` for
    [PRE384].
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 给定整数余数集合 `u_0,...,u_n` 和互质整数模数集合 `m_0,...,m_n`，返回一个整数 `u`，使得 `u = u_i mod m_i`
    for [PRE384]。
- en: Examples
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Consider a set of residues `U = [49, 76, 65]` and a set of moduli `M = [99,
    97, 95]`. Then we have:'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个余数集合 `U = [49, 76, 65]` 和一个模数集合 `M = [99, 97, 95]`。然后我们有：
- en: '[PRE385]'
  id: totrans-629
  prefs: []
  type: TYPE_PRE
  zh: '[PRE385]'
- en: 'This is the correct result because:'
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 这是正确的结果，因为：
- en: '[PRE386]'
  id: totrans-631
  prefs: []
  type: TYPE_PRE
  zh: '[PRE386]'
- en: 'Note: this is a low-level routine with no error checking.'
  id: totrans-632
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：这是一个低级别的例程，没有错误检查。
- en: See also
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.ntheory.modular.crt`](../ntheory.html#sympy.ntheory.modular.crt "sympy.ntheory.modular.crt")'
  id: totrans-634
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.ntheory.modular.crt`](../ntheory.html#sympy.ntheory.modular.crt "sympy.ntheory.modular.crt")'
- en: a higher level crt routine
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更高级的 crt 例程
- en: '[`sympy.ntheory.modular.solve_congruence`](../ntheory.html#sympy.ntheory.modular.solve_congruence
    "sympy.ntheory.modular.solve_congruence")'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.ntheory.modular.solve_congruence`](../ntheory.html#sympy.ntheory.modular.solve_congruence
    "sympy.ntheory.modular.solve_congruence")'
- en: '[PRE387]'
  id: totrans-637
  prefs: []
  type: TYPE_PRE
  zh: '[PRE387]'
- en: First part of the Chinese Remainder Theorem.
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 中国剩余定理的第一部分。
- en: Examples
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE388]'
  id: totrans-640
  prefs: []
  type: TYPE_PRE
  zh: '[PRE388]'
- en: The following two codes have the same result.
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
  zh: 下面两个代码有相同的结果。
- en: '[PRE389]'
  id: totrans-642
  prefs: []
  type: TYPE_PRE
  zh: '[PRE389]'
- en: '[PRE390]'
  id: totrans-643
  prefs: []
  type: TYPE_PRE
  zh: '[PRE390]'
- en: 'However, it is faster when we want to fix `M` and compute for multiple U, i.e.
    the following cases:'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当我们想要固定 `M` 并为多个 `U` 计算时，速度更快，即以下情况：
- en: '[PRE391]'
  id: totrans-645
  prefs: []
  type: TYPE_PRE
  zh: '[PRE391]'
- en: See also
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.ntheory.modular.crt1`](../ntheory.html#sympy.ntheory.modular.crt1 "sympy.ntheory.modular.crt1")'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.ntheory.modular.crt1`](../ntheory.html#sympy.ntheory.modular.crt1 "sympy.ntheory.modular.crt1")'
- en: a higher level crt routine
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更高级的 crt 例程
- en: '[`sympy.polys.galoistools.gf_crt`](#sympy.polys.galoistools.gf_crt "sympy.polys.galoistools.gf_crt"),
    [`sympy.polys.galoistools.gf_crt2`](#sympy.polys.galoistools.gf_crt2 "sympy.polys.galoistools.gf_crt2")'
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.galoistools.gf_crt`](#sympy.polys.galoistools.gf_crt "sympy.polys.galoistools.gf_crt")，[`sympy.polys.galoistools.gf_crt2`](#sympy.polys.galoistools.gf_crt2
    "sympy.polys.galoistools.gf_crt2")'
- en: '[PRE392]'
  id: totrans-650
  prefs: []
  type: TYPE_PRE
  zh: '[PRE392]'
- en: Second part of the Chinese Remainder Theorem.
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: 中国剩余定理的第二部分。
- en: See `gf_crt1` for usage.
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: 查看`gf_crt1`的使用方法。
- en: Examples
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE393]'
  id: totrans-654
  prefs: []
  type: TYPE_PRE
  zh: '[PRE393]'
- en: '[PRE394]'
  id: totrans-655
  prefs: []
  type: TYPE_PRE
  zh: '[PRE394]'
- en: '[PRE395]'
  id: totrans-656
  prefs: []
  type: TYPE_PRE
  zh: '[PRE395]'
- en: See also
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.ntheory.modular.crt2`](../ntheory.html#sympy.ntheory.modular.crt2 "sympy.ntheory.modular.crt2")'
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.ntheory.modular.crt2`](../ntheory.html#sympy.ntheory.modular.crt2 "sympy.ntheory.modular.crt2")'
- en: a higher level crt routine
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更高级别的CRT例程
- en: '[`sympy.polys.galoistools.gf_crt`](#sympy.polys.galoistools.gf_crt "sympy.polys.galoistools.gf_crt"),
    [`sympy.polys.galoistools.gf_crt1`](#sympy.polys.galoistools.gf_crt1 "sympy.polys.galoistools.gf_crt1")'
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.galoistools.gf_crt`](#sympy.polys.galoistools.gf_crt "sympy.polys.galoistools.gf_crt")，[`sympy.polys.galoistools.gf_crt1`](#sympy.polys.galoistools.gf_crt1
    "sympy.polys.galoistools.gf_crt1")'
- en: '[PRE396]'
  id: totrans-661
  prefs: []
  type: TYPE_PRE
  zh: '[PRE396]'
- en: Coerce `a mod p` to an integer in the range `[-p/2, p/2]`.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 将`a mod p`强制转换为范围为`[-p/2, p/2]`的整数。
- en: Examples
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE397]'
  id: totrans-664
  prefs: []
  type: TYPE_PRE
  zh: '[PRE397]'
- en: '[PRE398]'
  id: totrans-665
  prefs: []
  type: TYPE_PRE
  zh: '[PRE398]'
- en: '[PRE399]'
  id: totrans-666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE399]'
- en: Return the leading degree of `f`.
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的最高次数。
- en: Examples
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE400]'
  id: totrans-669
  prefs: []
  type: TYPE_PRE
  zh: '[PRE400]'
- en: '[PRE401]'
  id: totrans-670
  prefs: []
  type: TYPE_PRE
  zh: '[PRE401]'
- en: '[PRE402]'
  id: totrans-671
  prefs: []
  type: TYPE_PRE
  zh: '[PRE402]'
- en: Return the leading coefficient of `f`.
  id: totrans-672
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的最高系数。
- en: Examples
  id: totrans-673
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE403]'
  id: totrans-674
  prefs: []
  type: TYPE_PRE
  zh: '[PRE403]'
- en: '[PRE404]'
  id: totrans-675
  prefs: []
  type: TYPE_PRE
  zh: '[PRE404]'
- en: '[PRE405]'
  id: totrans-676
  prefs: []
  type: TYPE_PRE
  zh: '[PRE405]'
- en: Return the trailing coefficient of `f`.
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f`的尾系数。
- en: Examples
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE406]'
  id: totrans-679
  prefs: []
  type: TYPE_PRE
  zh: '[PRE406]'
- en: '[PRE407]'
  id: totrans-680
  prefs: []
  type: TYPE_PRE
  zh: '[PRE407]'
- en: '[PRE408]'
  id: totrans-681
  prefs: []
  type: TYPE_PRE
  zh: '[PRE408]'
- en: Remove leading zeros from `f`.
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 从`f`中去除前导零。
- en: Examples
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE409]'
  id: totrans-684
  prefs: []
  type: TYPE_PRE
  zh: '[PRE409]'
- en: '[PRE410]'
  id: totrans-685
  prefs: []
  type: TYPE_PRE
  zh: '[PRE410]'
- en: '[PRE411]'
  id: totrans-686
  prefs: []
  type: TYPE_PRE
  zh: '[PRE411]'
- en: Reduce all coefficients modulo `p`.
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有系数模`p`减小。
- en: Examples
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE412]'
  id: totrans-689
  prefs: []
  type: TYPE_PRE
  zh: '[PRE412]'
- en: '[PRE413]'
  id: totrans-690
  prefs: []
  type: TYPE_PRE
  zh: '[PRE413]'
- en: '[PRE414]'
  id: totrans-691
  prefs: []
  type: TYPE_PRE
  zh: '[PRE414]'
- en: Normalize all coefficients in `K`.
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: 将`K`中的所有系数标准化。
- en: Examples
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE415]'
  id: totrans-694
  prefs: []
  type: TYPE_PRE
  zh: '[PRE415]'
- en: '[PRE416]'
  id: totrans-695
  prefs: []
  type: TYPE_PRE
  zh: '[PRE416]'
- en: '[PRE417]'
  id: totrans-696
  prefs: []
  type: TYPE_PRE
  zh: '[PRE417]'
- en: Create a `GF(p)[x]` polynomial from a dict.
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: 从字典创建`GF(p)[x]`多项式。
- en: Examples
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE418]'
  id: totrans-699
  prefs: []
  type: TYPE_PRE
  zh: '[PRE418]'
- en: '[PRE419]'
  id: totrans-700
  prefs: []
  type: TYPE_PRE
  zh: '[PRE419]'
- en: '[PRE420]'
  id: totrans-701
  prefs: []
  type: TYPE_PRE
  zh: '[PRE420]'
- en: Convert a `GF(p)[x]` polynomial to a dict.
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: 将`GF(p)[x]`多项式转换为字典。
- en: Examples
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE421]'
  id: totrans-704
  prefs: []
  type: TYPE_PRE
  zh: '[PRE421]'
- en: '[PRE422]'
  id: totrans-705
  prefs: []
  type: TYPE_PRE
  zh: '[PRE422]'
- en: '[PRE423]'
  id: totrans-706
  prefs: []
  type: TYPE_PRE
  zh: '[PRE423]'
- en: Create a `GF(p)[x]` polynomial from `Z[x]`.
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个从`Z[x]`到`GF(p)[x]`的多项式。
- en: Examples
  id: totrans-708
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE424]'
  id: totrans-709
  prefs: []
  type: TYPE_PRE
  zh: '[PRE424]'
- en: '[PRE425]'
  id: totrans-710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE425]'
- en: '[PRE426]'
  id: totrans-711
  prefs: []
  type: TYPE_PRE
  zh: '[PRE426]'
- en: Convert a `GF(p)[x]` polynomial to `Z[x]`.
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 将`GF(p)[x]`多项式转换为`Z[x]`。
- en: Examples
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE427]'
  id: totrans-714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE427]'
- en: '[PRE428]'
  id: totrans-715
  prefs: []
  type: TYPE_PRE
  zh: '[PRE428]'
- en: '[PRE429]'
  id: totrans-716
  prefs: []
  type: TYPE_PRE
  zh: '[PRE429]'
- en: Negate a polynomial in `GF(p)[x]`.
  id: totrans-717
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中取负多项式。
- en: Examples
  id: totrans-718
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE430]'
  id: totrans-719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE430]'
- en: '[PRE431]'
  id: totrans-720
  prefs: []
  type: TYPE_PRE
  zh: '[PRE431]'
- en: '[PRE432]'
  id: totrans-721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE432]'
- en: Compute `f + a` where `f` in `GF(p)[x]` and `a` in `GF(p)`.
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f + a`，其中`f`在`GF(p)[x]`，`a`在`GF(p)`。
- en: Examples
  id: totrans-723
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE433]'
  id: totrans-724
  prefs: []
  type: TYPE_PRE
  zh: '[PRE433]'
- en: '[PRE434]'
  id: totrans-725
  prefs: []
  type: TYPE_PRE
  zh: '[PRE434]'
- en: '[PRE435]'
  id: totrans-726
  prefs: []
  type: TYPE_PRE
  zh: '[PRE435]'
- en: Compute `f - a` where `f` in `GF(p)[x]` and `a` in `GF(p)`.
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f - a`，其中`f`在`GF(p)[x]`，`a`在`GF(p)`。
- en: Examples
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE436]'
  id: totrans-729
  prefs: []
  type: TYPE_PRE
  zh: '[PRE436]'
- en: '[PRE437]'
  id: totrans-730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE437]'
- en: '[PRE438]'
  id: totrans-731
  prefs: []
  type: TYPE_PRE
  zh: '[PRE438]'
- en: Compute `f * a` where `f` in `GF(p)[x]` and `a` in `GF(p)`.
  id: totrans-732
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f * a`，其中`f`在`GF(p)[x]`，`a`在`GF(p)`。
- en: Examples
  id: totrans-733
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE439]'
  id: totrans-734
  prefs: []
  type: TYPE_PRE
  zh: '[PRE439]'
- en: '[PRE440]'
  id: totrans-735
  prefs: []
  type: TYPE_PRE
  zh: '[PRE440]'
- en: '[PRE441]'
  id: totrans-736
  prefs: []
  type: TYPE_PRE
  zh: '[PRE441]'
- en: Compute `f/a` where `f` in `GF(p)[x]` and `a` in `GF(p)`.
  id: totrans-737
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f/a`，其中`f`在`GF(p)[x]`，`a`在`GF(p)`。
- en: Examples
  id: totrans-738
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE442]'
  id: totrans-739
  prefs: []
  type: TYPE_PRE
  zh: '[PRE442]'
- en: '[PRE443]'
  id: totrans-740
  prefs: []
  type: TYPE_PRE
  zh: '[PRE443]'
- en: '[PRE444]'
  id: totrans-741
  prefs: []
  type: TYPE_PRE
  zh: '[PRE444]'
- en: Add polynomials in `GF(p)[x]`.
  id: totrans-742
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中添加多项式。
- en: Examples
  id: totrans-743
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE445]'
  id: totrans-744
  prefs: []
  type: TYPE_PRE
  zh: '[PRE445]'
- en: '[PRE446]'
  id: totrans-745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE446]'
- en: '[PRE447]'
  id: totrans-746
  prefs: []
  type: TYPE_PRE
  zh: '[PRE447]'
- en: Subtract polynomials in `GF(p)[x]`.
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中减去多项式。
- en: Examples
  id: totrans-748
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE448]'
  id: totrans-749
  prefs: []
  type: TYPE_PRE
  zh: '[PRE448]'
- en: '[PRE449]'
  id: totrans-750
  prefs: []
  type: TYPE_PRE
  zh: '[PRE449]'
- en: '[PRE450]'
  id: totrans-751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE450]'
- en: Multiply polynomials in `GF(p)[x]`.
  id: totrans-752
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中乘法多项式。
- en: Examples
  id: totrans-753
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE451]'
  id: totrans-754
  prefs: []
  type: TYPE_PRE
  zh: '[PRE451]'
- en: '[PRE452]'
  id: totrans-755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE452]'
- en: '[PRE453]'
  id: totrans-756
  prefs: []
  type: TYPE_PRE
  zh: '[PRE453]'
- en: Square polynomials in `GF(p)[x]`.
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中平方多项式。
- en: Examples
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE454]'
  id: totrans-759
  prefs: []
  type: TYPE_PRE
  zh: '[PRE454]'
- en: '[PRE455]'
  id: totrans-760
  prefs: []
  type: TYPE_PRE
  zh: '[PRE455]'
- en: '[PRE456]'
  id: totrans-761
  prefs: []
  type: TYPE_PRE
  zh: '[PRE456]'
- en: Returns `f + g*h` where `f`, `g`, `h` in `GF(p)[x]`.
  id: totrans-762
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`f + g*h`，其中`f`，`g`，`h`在`GF(p)[x]`。
- en: Examples
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE457]'
  id: totrans-764
  prefs: []
  type: TYPE_PRE
  zh: '[PRE457]'
- en: '[PRE458]'
  id: totrans-765
  prefs: []
  type: TYPE_PRE
  zh: '[PRE458]'
- en: Compute `f - g*h` where `f`, `g`, `h` in `GF(p)[x]`.
  id: totrans-766
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`f - g*h`，其中`f`，`g`，`h`在`GF(p)[x]`。
- en: Examples
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE459]'
  id: totrans-768
  prefs: []
  type: TYPE_PRE
  zh: '[PRE459]'
- en: '[PRE460]'
  id: totrans-769
  prefs: []
  type: TYPE_PRE
  zh: '[PRE460]'
- en: '[PRE461]'
  id: totrans-770
  prefs: []
  type: TYPE_PRE
  zh: '[PRE461]'
- en: Expand results of [`factor()`](reference.html#sympy.polys.polytools.factor "sympy.polys.polytools.factor")
    in `GF(p)[x]`.
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展[`factor()`](reference.html#sympy.polys.polytools.factor "sympy.polys.polytools.factor")在`GF(p)[x]`中的结果。
- en: Examples
  id: totrans-772
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE462]'
  id: totrans-773
  prefs: []
  type: TYPE_PRE
  zh: '[PRE462]'
- en: '[PRE463]'
  id: totrans-774
  prefs: []
  type: TYPE_PRE
  zh: '[PRE463]'
- en: '[PRE464]'
  id: totrans-775
  prefs: []
  type: TYPE_PRE
  zh: '[PRE464]'
- en: Division with remainder in `GF(p)[x]`.
  id: totrans-776
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中进行除法与余数。
- en: Given univariate polynomials `f` and `g` with coefficients in a finite field
    with `p` elements, returns polynomials `q` and `r` (quotient and remainder) such
    that `f = q*g + r`.
  id: totrans-777
  prefs: []
  type: TYPE_NORMAL
  zh: 给定系数在有限元素`p`的域中的一元多项式`f`和`g`，返回多项式`q`和`r`（商和余数），使得`f = q*g + r`。
- en: 'Consider polynomials `x**3 + x + 1` and `x**2 + x` in GF(2):'
  id: totrans-778
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑GF(2)中的多项式`x**3 + x + 1`和`x**2 + x`：
- en: '[PRE465]'
  id: totrans-779
  prefs: []
  type: TYPE_PRE
  zh: '[PRE465]'
- en: 'As result we obtained quotient `x + 1` and remainder `1`, thus:'
  id: totrans-780
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是商`x + 1`和余数`1`，因此：
- en: '[PRE466]'
  id: totrans-781
  prefs: []
  type: TYPE_PRE
  zh: '[PRE466]'
- en: References
  id: totrans-782
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R785](#id5)]'
  id: totrans-783
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R785](#id5)]'
- en: '[[Monagan93]](literature.html#monagan93)'
  id: totrans-784
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Monagan93]](literature.html#monagan93)'
- en: '[[R786](#id6)]'
  id: totrans-785
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R786](#id6)]'
- en: '[[Gathen99]](literature.html#gathen99)'
  id: totrans-786
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen99]](literature.html#gathen99)'
- en: '[PRE467]'
  id: totrans-787
  prefs: []
  type: TYPE_PRE
  zh: '[PRE467]'
- en: Compute polynomial remainder in `GF(p)[x]`.
  id: totrans-788
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中计算多项式余数。
- en: Examples
  id: totrans-789
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE468]'
  id: totrans-790
  prefs: []
  type: TYPE_PRE
  zh: '[PRE468]'
- en: '[PRE469]'
  id: totrans-791
  prefs: []
  type: TYPE_PRE
  zh: '[PRE469]'
- en: '[PRE470]'
  id: totrans-792
  prefs: []
  type: TYPE_PRE
  zh: '[PRE470]'
- en: Compute exact quotient in `GF(p)[x]`.
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中计算精确的商。
- en: Examples
  id: totrans-794
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE471]'
  id: totrans-795
  prefs: []
  type: TYPE_PRE
  zh: '[PRE471]'
- en: '[PRE472]'
  id: totrans-796
  prefs: []
  type: TYPE_PRE
  zh: '[PRE472]'
- en: '[PRE473]'
  id: totrans-797
  prefs: []
  type: TYPE_PRE
  zh: '[PRE473]'
- en: Compute polynomial quotient in `GF(p)[x]`.
  id: totrans-798
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中计算多项式商。
- en: Examples
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE474]'
  id: totrans-800
  prefs: []
  type: TYPE_PRE
  zh: '[PRE474]'
- en: '[PRE475]'
  id: totrans-801
  prefs: []
  type: TYPE_PRE
  zh: '[PRE475]'
- en: '[PRE476]'
  id: totrans-802
  prefs: []
  type: TYPE_PRE
  zh: '[PRE476]'
- en: '[PRE477]'
  id: totrans-803
  prefs: []
  type: TYPE_PRE
  zh: '[PRE477]'
- en: Efficiently multiply `f` by `x**n`.
  id: totrans-804
  prefs: []
  type: TYPE_NORMAL
  zh: 高效地将`f`乘以`x**n`。
- en: Examples
  id: totrans-805
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE478]'
  id: totrans-806
  prefs: []
  type: TYPE_PRE
  zh: '[PRE478]'
- en: '[PRE479]'
  id: totrans-807
  prefs: []
  type: TYPE_PRE
  zh: '[PRE479]'
- en: '[PRE480]'
  id: totrans-808
  prefs: []
  type: TYPE_PRE
  zh: '[PRE480]'
- en: Efficiently divide `f` by `x**n`.
  id: totrans-809
  prefs: []
  type: TYPE_NORMAL
  zh: 高效地将`f`除以`x**n`。
- en: Examples
  id: totrans-810
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE481]'
  id: totrans-811
  prefs: []
  type: TYPE_PRE
  zh: '[PRE481]'
- en: '[PRE482]'
  id: totrans-812
  prefs: []
  type: TYPE_PRE
  zh: '[PRE482]'
- en: '[PRE483]'
  id: totrans-813
  prefs: []
  type: TYPE_PRE
  zh: '[PRE483]'
- en: Compute `f**n` in `GF(p)[x]` using repeated squaring.
  id: totrans-814
  prefs: []
  type: TYPE_NORMAL
  zh: 使用重复平方算法在`GF(p)[x]`中计算`f**n`。
- en: Examples
  id: totrans-815
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE484]'
  id: totrans-816
  prefs: []
  type: TYPE_PRE
  zh: '[PRE484]'
- en: '[PRE485]'
  id: totrans-817
  prefs: []
  type: TYPE_PRE
  zh: '[PRE485]'
- en: '[PRE486]'
  id: totrans-818
  prefs: []
  type: TYPE_PRE
  zh: '[PRE486]'
- en: Compute `f**n` in `GF(p)[x]/(g)` using repeated squaring.
  id: totrans-819
  prefs: []
  type: TYPE_NORMAL
  zh: 使用重复平方算法在`GF(p)[x]/(g)`中计算`f**n`。
- en: Given polynomials `f` and `g` in `GF(p)[x]` and a non-negative integer `n`,
    efficiently computes `f**n (mod g)` i.e. the remainder of `f**n` from division
    by `g`, using the repeated squaring algorithm.
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定的多项式`f`和`g`在`GF(p)[x]`以及非负整数`n`，高效地计算`f**n (mod g)`，即通过重复平方算法得到`f**n`除以`g`的余数。
- en: Examples
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE487]'
  id: totrans-822
  prefs: []
  type: TYPE_PRE
  zh: '[PRE487]'
- en: '[PRE488]'
  id: totrans-823
  prefs: []
  type: TYPE_PRE
  zh: '[PRE488]'
- en: References
  id: totrans-824
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R787](#id8)]'
  id: totrans-825
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R787](#id8)]'
- en: '[[Gathen99]](literature.html#gathen99)'
  id: totrans-826
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen99]](literature.html#gathen99)'
- en: '[PRE489]'
  id: totrans-827
  prefs: []
  type: TYPE_PRE
  zh: '[PRE489]'
- en: Euclidean Algorithm in `GF(p)[x]`.
  id: totrans-828
  prefs: []
  type: TYPE_NORMAL
  zh: '`GF(p)[x]`中的欧几里得算法。'
- en: Examples
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE490]'
  id: totrans-830
  prefs: []
  type: TYPE_PRE
  zh: '[PRE490]'
- en: '[PRE491]'
  id: totrans-831
  prefs: []
  type: TYPE_PRE
  zh: '[PRE491]'
- en: '[PRE492]'
  id: totrans-832
  prefs: []
  type: TYPE_PRE
  zh: '[PRE492]'
- en: Compute polynomial LCM in `GF(p)[x]`.
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中计算多项式LCM。
- en: Examples
  id: totrans-834
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE493]'
  id: totrans-835
  prefs: []
  type: TYPE_PRE
  zh: '[PRE493]'
- en: '[PRE494]'
  id: totrans-836
  prefs: []
  type: TYPE_PRE
  zh: '[PRE494]'
- en: '[PRE495]'
  id: totrans-837
  prefs: []
  type: TYPE_PRE
  zh: '[PRE495]'
- en: Compute polynomial GCD and cofactors in `GF(p)[x]`.
  id: totrans-838
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`GF(p)[x]`中的多项式GCD和余因子。
- en: Examples
  id: totrans-839
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE496]'
  id: totrans-840
  prefs: []
  type: TYPE_PRE
  zh: '[PRE496]'
- en: '[PRE497]'
  id: totrans-841
  prefs: []
  type: TYPE_PRE
  zh: '[PRE497]'
- en: '[PRE498]'
  id: totrans-842
  prefs: []
  type: TYPE_PRE
  zh: '[PRE498]'
- en: Extended Euclidean Algorithm in `GF(p)[x]`.
  id: totrans-843
  prefs: []
  type: TYPE_NORMAL
  zh: '`GF(p)[x]`中的扩展欧几里得算法。'
- en: Given polynomials `f` and `g` in `GF(p)[x]`, computes polynomials `s`, `t` and
    `h`, such that `h = gcd(f, g)` and `s*f + t*g = h`. The typical application of
    EEA is solving polynomial diophantine equations.
  id: totrans-844
  prefs: []
  type: TYPE_NORMAL
  zh: 给定`GF(p)[x]`中的多项式`f`和`g`，计算多项式`s`，`t`和`h`，使得`h = gcd(f, g)`和`s*f + t*g = h`。扩展欧几里得算法的典型应用是解多项式丢番图方程。
- en: 'Consider polynomials `f = (x + 7) (x + 1)`, `g = (x + 7) (x**2 + 1)` in `GF(11)[x]`.
    Application of Extended Euclidean Algorithm gives:'
  id: totrans-845
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑`GF(11)[x]`中的多项式`f = (x + 7) (x + 1)`，`g = (x + 7) (x**2 + 1)`。应用扩展欧几里得算法得到：
- en: '[PRE499]'
  id: totrans-846
  prefs: []
  type: TYPE_PRE
  zh: '[PRE499]'
- en: 'As result we obtained polynomials `s = 5*x + 6` and `t = 6`, and additionally
    `gcd(f, g) = x + 7`. This is correct because:'
  id: totrans-847
  prefs: []
  type: TYPE_NORMAL
  zh: 作为结果，我们得到多项式`s = 5*x + 6`和`t = 6`，而且另外`gcd(f, g) = x + 7`。这是正确的，因为：
- en: '[PRE500]'
  id: totrans-848
  prefs: []
  type: TYPE_PRE
  zh: '[PRE500]'
- en: References
  id: totrans-849
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R788](#id10)]'
  id: totrans-850
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R788](#id10)]'
- en: '[[Gathen99]](literature.html#gathen99)'
  id: totrans-851
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen99]](literature.html#gathen99)'
- en: '[PRE501]'
  id: totrans-852
  prefs: []
  type: TYPE_PRE
  zh: '[PRE501]'
- en: Compute LC and a monic polynomial in `GF(p)[x]`.
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`GF(p)[x]`中的LC和首一多项式。
- en: Examples
  id: totrans-854
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE502]'
  id: totrans-855
  prefs: []
  type: TYPE_PRE
  zh: '[PRE502]'
- en: '[PRE503]'
  id: totrans-856
  prefs: []
  type: TYPE_PRE
  zh: '[PRE503]'
- en: '[PRE504]'
  id: totrans-857
  prefs: []
  type: TYPE_PRE
  zh: '[PRE504]'
- en: Differentiate polynomial in `GF(p)[x]`.
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中不同地化多项式。
- en: Examples
  id: totrans-859
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE505]'
  id: totrans-860
  prefs: []
  type: TYPE_PRE
  zh: '[PRE505]'
- en: '[PRE506]'
  id: totrans-861
  prefs: []
  type: TYPE_PRE
  zh: '[PRE506]'
- en: '[PRE507]'
  id: totrans-862
  prefs: []
  type: TYPE_PRE
  zh: '[PRE507]'
- en: Evaluate `f(a)` in `GF(p)` using Horner scheme.
  id: totrans-863
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Horner方案在`GF(p)`中评估`f(a)`。
- en: Examples
  id: totrans-864
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE508]'
  id: totrans-865
  prefs: []
  type: TYPE_PRE
  zh: '[PRE508]'
- en: '[PRE509]'
  id: totrans-866
  prefs: []
  type: TYPE_PRE
  zh: '[PRE509]'
- en: '[PRE510]'
  id: totrans-867
  prefs: []
  type: TYPE_PRE
  zh: '[PRE510]'
- en: Evaluate `f(a)` for `a` in `[a_1, ..., a_n]`.
  id: totrans-868
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`GF(p)`中的`f(a)`进行评估，其中`a`在`[a_1, ..., a_n]`中。
- en: Examples
  id: totrans-869
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE511]'
  id: totrans-870
  prefs: []
  type: TYPE_PRE
  zh: '[PRE511]'
- en: '[PRE512]'
  id: totrans-871
  prefs: []
  type: TYPE_PRE
  zh: '[PRE512]'
- en: '[PRE513]'
  id: totrans-872
  prefs: []
  type: TYPE_PRE
  zh: '[PRE513]'
- en: Compute polynomial composition `f(g)` in `GF(p)[x]`.
  id: totrans-873
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`GF(p)[x]`中的多项式组合`f(g)`。
- en: Examples
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE514]'
  id: totrans-875
  prefs: []
  type: TYPE_PRE
  zh: '[PRE514]'
- en: '[PRE515]'
  id: totrans-876
  prefs: []
  type: TYPE_PRE
  zh: '[PRE515]'
- en: '[PRE516]'
  id: totrans-877
  prefs: []
  type: TYPE_PRE
  zh: '[PRE516]'
- en: Compute polynomial composition `g(h)` in `GF(p)[x]/(f)`.
  id: totrans-878
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]/(f)`中计算多项式组合`g(h)`。
- en: Examples
  id: totrans-879
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE517]'
  id: totrans-880
  prefs: []
  type: TYPE_PRE
  zh: '[PRE517]'
- en: '[PRE518]'
  id: totrans-881
  prefs: []
  type: TYPE_PRE
  zh: '[PRE518]'
- en: '[PRE519]'
  id: totrans-882
  prefs: []
  type: TYPE_PRE
  zh: '[PRE519]'
- en: Compute polynomial trace map in `GF(p)[x]/(f)`.
  id: totrans-883
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]/(f)`中计算多项式迹映射。
- en: 'Given a polynomial `f` in `GF(p)[x]`, polynomials `a`, `b`, `c` in the quotient
    ring `GF(p)[x]/(f)` such that `b = c**t (mod f)` for some positive power `t` of
    `p`, and a positive integer `n`, returns a mapping:'
  id: totrans-884
  prefs: []
  type: TYPE_NORMAL
  zh: 给定`GF(p)[x]`中的多项式`f`，商环`GF(p)[x]/(f)`中的多项式`a`，`b`，`c`，使得对于某个正幂`t`，`b = c**t
    (mod f)`和正整数`n`，返回映射：
- en: '[PRE520]'
  id: totrans-885
  prefs: []
  type: TYPE_PRE
  zh: '[PRE520]'
- en: In factorization context, `b = x**p mod f` and `c = x mod f`. This way we can
    efficiently compute trace polynomials in equal degree factorization routine, much
    faster than with other methods, like iterated Frobenius algorithm, for large degrees.
  id: totrans-886
  prefs: []
  type: TYPE_NORMAL
  zh: 在因式分解上下文中，`b = x**p mod f`和`c = x mod f`。通过这种方式，我们可以在等阶因式分解程序中有效地计算迹多项式，比如对于大阶数，比其他方法（如迭代Frobenius算法）要快得多。
- en: Examples
  id: totrans-887
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE521]'
  id: totrans-888
  prefs: []
  type: TYPE_PRE
  zh: '[PRE521]'
- en: '[PRE522]'
  id: totrans-889
  prefs: []
  type: TYPE_PRE
  zh: '[PRE522]'
- en: References
  id: totrans-890
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R789](#id12)]'
  id: totrans-891
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R789](#id12)]'
- en: '[[Gathen92]](literature.html#gathen92)'
  id: totrans-892
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen92]](literature.html#gathen92)'
- en: '[PRE523]'
  id: totrans-893
  prefs: []
  type: TYPE_PRE
  zh: '[PRE523]'
- en: Generate a random polynomial in `GF(p)[x]` of degree `n`.
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中生成随机多项式`n`次。
- en: Examples
  id: totrans-895
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE524]'
  id: totrans-896
  prefs: []
  type: TYPE_PRE
  zh: '[PRE524]'
- en: '[PRE525]'
  id: totrans-897
  prefs: []
  type: TYPE_PRE
  zh: '[PRE525]'
- en: Generate random irreducible polynomial of degree `n` in `GF(p)[x]`.
  id: totrans-898
  prefs: []
  type: TYPE_NORMAL
  zh: 在`GF(p)[x]`中生成随机不可约多项式`n`次。
- en: Examples
  id: totrans-899
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE526]'
  id: totrans-900
  prefs: []
  type: TYPE_PRE
  zh: '[PRE526]'
- en: '[PRE527]'
  id: totrans-901
  prefs: []
  type: TYPE_PRE
  zh: '[PRE527]'
- en: Test irreducibility of a polynomial `f` in `GF(p)[x]`.
  id: totrans-902
  prefs: []
  type: TYPE_NORMAL
  zh: 测试多项式`GF(p)[x]`的不可约性。
- en: Examples
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE528]'
  id: totrans-904
  prefs: []
  type: TYPE_PRE
  zh: '[PRE528]'
- en: '[PRE529]'
  id: totrans-905
  prefs: []
  type: TYPE_PRE
  zh: '[PRE529]'
- en: '[PRE530]'
  id: totrans-906
  prefs: []
  type: TYPE_PRE
  zh: '[PRE530]'
- en: Return `True` if `f` is square-free in `GF(p)[x]`.
  id: totrans-907
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`GF(p)[x]`中的`f`是平方自由的，则返回`True`。
- en: Examples
  id: totrans-908
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE531]'
  id: totrans-909
  prefs: []
  type: TYPE_PRE
  zh: '[PRE531]'
- en: '[PRE532]'
  id: totrans-910
  prefs: []
  type: TYPE_PRE
  zh: '[PRE532]'
- en: '[PRE533]'
  id: totrans-911
  prefs: []
  type: TYPE_PRE
  zh: '[PRE533]'
- en: Return square-free part of a `GF(p)[x]` polynomial.
  id: totrans-912
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`GF(p)[x]`多项式的平方自由部分。
- en: Examples
  id: totrans-913
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE534]'
  id: totrans-914
  prefs: []
  type: TYPE_PRE
  zh: '[PRE534]'
- en: '[PRE535]'
  id: totrans-915
  prefs: []
  type: TYPE_PRE
  zh: '[PRE535]'
- en: '[PRE536]'
  id: totrans-916
  prefs: []
  type: TYPE_PRE
  zh: '[PRE536]'
- en: Return the square-free decomposition of a `GF(p)[x]` polynomial.
  id: totrans-917
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`GF(p)[x]`多项式的平方自由分解。
- en: Given a polynomial `f` in `GF(p)[x]`, returns the leading coefficient of `f`
    and a square-free decomposition `f_1**e_1 f_2**e_2 ... f_k**e_k` such that all
    `f_i` are monic polynomials and `(f_i, f_j)` for `i != j` are co-prime and `e_1
    ... e_k` are given in increasing order. All trivial terms (i.e. `f_i = 1`) are
    not included in the output.
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: 给定`GF(p)[x]`中的多项式`f`，返回`f`的首项系数和平方自由分解`f_1**e_1 f_2**e_2 ... f_k**e_k`，其中所有`f_i`都是首一多项式且`(f_i,
    f_j)`对于`i != j`互质，`e_1 ... e_k`按递增顺序给出。所有平凡项（即`f_i = 1`）都不包括在输出中。
- en: 'Consider polynomial `f = x**11 + 1` over `GF(11)[x]`:'
  id: totrans-919
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑`GF(11)[x]`中的多项式`f = x**11 + 1`：
- en: '[PRE537]'
  id: totrans-920
  prefs: []
  type: TYPE_PRE
  zh: '[PRE537]'
- en: 'Note that `f''(x) = 0`:'
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: 注意`f'(x) = 0`：
- en: '[PRE538]'
  id: totrans-922
  prefs: []
  type: TYPE_PRE
  zh: '[PRE538]'
- en: 'This phenomenon does not happen in characteristic zero. However we can still
    compute square-free decomposition of `f` using `gf_sqf()`:'
  id: totrans-923
  prefs: []
  type: TYPE_NORMAL
  zh: 在零特征中不会发生这种现象。但是我们仍然可以使用`gf_sqf()`计算`f`的平方自由分解：
- en: '[PRE539]'
  id: totrans-924
  prefs: []
  type: TYPE_PRE
  zh: '[PRE539]'
- en: 'We obtained factorization `f = (x + 1)**11`. This is correct because:'
  id: totrans-925
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到因式分解`f = (x + 1)**11`。这是正确的，因为：
- en: '[PRE540]'
  id: totrans-926
  prefs: []
  type: TYPE_PRE
  zh: '[PRE540]'
- en: References
  id: totrans-927
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R790](#id14)]'
  id: totrans-928
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R790](#id14)]'
- en: '[[Geddes92]](literature.html#geddes92)'
  id: totrans-929
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Geddes92]](literature.html#geddes92)'
- en: '[PRE541]'
  id: totrans-930
  prefs: []
  type: TYPE_PRE
  zh: '[PRE541]'
- en: Calculate Berlekamp’s `Q` matrix.
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: 计算Berlekamp的`Q`矩阵。
- en: Examples
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE542]'
  id: totrans-933
  prefs: []
  type: TYPE_PRE
  zh: '[PRE542]'
- en: '[PRE543]'
  id: totrans-934
  prefs: []
  type: TYPE_PRE
  zh: '[PRE543]'
- en: '[PRE544]'
  id: totrans-935
  prefs: []
  type: TYPE_PRE
  zh: '[PRE544]'
- en: '[PRE545]'
  id: totrans-936
  prefs: []
  type: TYPE_PRE
  zh: '[PRE545]'
- en: Compute a basis of the kernel of `Q`.
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: 计算`Q`的核的基础。
- en: Examples
  id: totrans-938
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE546]'
  id: totrans-939
  prefs: []
  type: TYPE_PRE
  zh: '[PRE546]'
- en: '[PRE547]'
  id: totrans-940
  prefs: []
  type: TYPE_PRE
  zh: '[PRE547]'
- en: '[PRE548]'
  id: totrans-941
  prefs: []
  type: TYPE_PRE
  zh: '[PRE548]'
- en: '[PRE549]'
  id: totrans-942
  prefs: []
  type: TYPE_PRE
  zh: '[PRE549]'
- en: Factor a square-free `f` in `GF(p)[x]` for small `p`.
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: 对小`p`中的平方自由`f`进行因式分解。
- en: Examples
  id: totrans-944
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE550]'
  id: totrans-945
  prefs: []
  type: TYPE_PRE
  zh: '[PRE550]'
- en: '[PRE551]'
  id: totrans-946
  prefs: []
  type: TYPE_PRE
  zh: '[PRE551]'
- en: '[PRE552]'
  id: totrans-947
  prefs: []
  type: TYPE_PRE
  zh: '[PRE552]'
- en: Factor a square-free `f` in `GF(p)[x]` for medium `p`.
  id: totrans-948
  prefs: []
  type: TYPE_NORMAL
  zh: 对中等`p`中的平方自由`f`进行因式分解。
- en: Examples
  id: totrans-949
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE553]'
  id: totrans-950
  prefs: []
  type: TYPE_PRE
  zh: '[PRE553]'
- en: '[PRE554]'
  id: totrans-951
  prefs: []
  type: TYPE_PRE
  zh: '[PRE554]'
- en: '[PRE555]'
  id: totrans-952
  prefs: []
  type: TYPE_PRE
  zh: '[PRE555]'
- en: Factor a square-free `f` in `GF(p)[x]` for large `p`.
  id: totrans-953
  prefs: []
  type: TYPE_NORMAL
  zh: 在大的 `p` 下，对 `GF(p)[x]` 中的无平方 `f` 进行因式分解。
- en: Examples
  id: totrans-954
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE556]'
  id: totrans-955
  prefs: []
  type: TYPE_PRE
  zh: '[PRE556]'
- en: '[PRE557]'
  id: totrans-956
  prefs: []
  type: TYPE_PRE
  zh: '[PRE557]'
- en: '[PRE558]'
  id: totrans-957
  prefs: []
  type: TYPE_PRE
  zh: '[PRE558]'
- en: Factor a square-free polynomial `f` in `GF(p)[x]`.
  id: totrans-958
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `GF(p)[x]` 中因式分解无平方多项式 `f`。
- en: Examples
  id: totrans-959
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE559]'
  id: totrans-960
  prefs: []
  type: TYPE_PRE
  zh: '[PRE559]'
- en: '[PRE560]'
  id: totrans-961
  prefs: []
  type: TYPE_PRE
  zh: '[PRE560]'
- en: '[PRE561]'
  id: totrans-962
  prefs: []
  type: TYPE_PRE
  zh: '[PRE561]'
- en: Factor (non square-free) polynomials in `GF(p)[x]`.
  id: totrans-963
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `GF(p)[x]` 中因式分解（非无平方）多项式。
- en: 'Given a possibly non square-free polynomial `f` in `GF(p)[x]`, returns its
    complete factorization into irreducibles:'
  id: totrans-964
  prefs: []
  type: TYPE_NORMAL
  zh: 给定在 `GF(p)[x]` 中可能非无平方的多项式 `f`，返回其完整的不可约因式分解：
- en: '[PRE562]'
  id: totrans-965
  prefs: []
  type: TYPE_PRE
  zh: '[PRE562]'
- en: where each `f_i` is a monic polynomial and `gcd(f_i, f_j) == 1`, for `i != j`.
    The result is given as a tuple consisting of the leading coefficient of `f` and
    a list of factors of `f` with their multiplicities.
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: 这里每个 `f_i` 是单阶多项式，且对于 `i != j`，有 `gcd(f_i, f_j) == 1`。结果以领导系数的元组形式给出，以及具有它们乘数的
    `f` 因子列表。
- en: The algorithm proceeds by first computing square-free decomposition of `f` and
    then iteratively factoring each of square-free factors.
  id: totrans-967
  prefs: []
  type: TYPE_NORMAL
  zh: 算法首先通过计算 `f` 的无平方因子分解，然后迭代地对每个无平方因子进行因式分解。
- en: 'Consider a non square-free polynomial `f = (7*x + 1) (x + 2)**2` in `GF(11)[x]`.
    We obtain its factorization into irreducibles as follows:'
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑在 `GF(11)[x]` 中的非无平方多项式 `f = (7*x + 1) (x + 2)**2`。我们得到其不可约因式分解如下：
- en: '[PRE563]'
  id: totrans-969
  prefs: []
  type: TYPE_PRE
  zh: '[PRE563]'
- en: We arrived with factorization `f = 5 (x + 2) (x + 8)**2`. We did not recover
    the exact form of the input polynomial because we requested to get monic factors
    of `f` and its leading coefficient separately.
  id: totrans-970
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了因式分解 `f = 5 (x + 2) (x + 8)**2`。我们没有恢复输入多项式的确切形式，因为我们要求单独获取 `f` 的单阶因子及其领导系数。
- en: 'Square-free factors of `f` can be factored into irreducibles over `GF(p)` using
    three very different methods:'
  id: totrans-971
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 的无平方因子可以使用三种非常不同的方法在 `GF(p)` 上进行不可约因式分解：'
- en: Berlekamp
  id: totrans-972
  prefs: []
  type: TYPE_NORMAL
  zh: Berlekamp
- en: efficient for very small values of `p` (usually `p < 25`)
  id: totrans-973
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非常小的 `p` 值（通常 `p < 25`）效率高。
- en: Cantor-Zassenhaus
  id: totrans-974
  prefs: []
  type: TYPE_NORMAL
  zh: Cantor-Zassenhaus
- en: efficient on average input and with “typical” `p`
  id: totrans-975
  prefs: []
  type: TYPE_NORMAL
  zh: 对于平均输入和“典型” `p`，效率很高。
- en: Shoup-Kaltofen-Gathen
  id: totrans-976
  prefs: []
  type: TYPE_NORMAL
  zh: Shoup-Kaltofen-Gathen
- en: efficient with very large inputs and modulus
  id: totrans-977
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非常大的输入和模数，效率高。
- en: If you want to use a specific factorization method, instead of the default one,
    set `GF_FACTOR_METHOD` with one of `berlekamp`, `zassenhaus` or `shoup` values.
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用特定的因式分解方法而不是默认方法，请设置 `GF_FACTOR_METHOD` 为 `berlekamp`、`zassenhaus` 或 `shoup`
    中的一个值。
- en: References
  id: totrans-979
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R791](#id16)]'
  id: totrans-980
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R791](#id16)]'
- en: '[[Gathen99]](literature.html#gathen99)'
  id: totrans-981
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen99]](literature.html#gathen99)'
- en: '[PRE564]'
  id: totrans-982
  prefs: []
  type: TYPE_PRE
  zh: '[PRE564]'
- en: Value of polynomial ‘f’ at ‘a’ in field R.
  id: totrans-983
  prefs: []
  type: TYPE_NORMAL
  zh: 在域 R 中多项式 'f' 在 'a' 处的值。
- en: Examples
  id: totrans-984
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE565]'
  id: totrans-985
  prefs: []
  type: TYPE_PRE
  zh: '[PRE565]'
- en: '[PRE566]'
  id: totrans-986
  prefs: []
  type: TYPE_PRE
  zh: '[PRE566]'
- en: '[PRE567]'
  id: totrans-987
  prefs: []
  type: TYPE_PRE
  zh: '[PRE567]'
- en: To solve f(x) congruent 0 mod(n).
  id: totrans-988
  prefs: []
  type: TYPE_NORMAL
  zh: 解决 f(x) 同余于 0 mod(n)。
- en: n is divided into canonical factors and f(x) cong 0 mod(p**e) will be solved
    for each factor. Applying the Chinese Remainder Theorem to the results returns
    the final answers.
  id: totrans-989
  prefs: []
  type: TYPE_NORMAL
  zh: 将 n 分解为规范因子，并为每个因子解决 f(x) cong 0 mod(p**e)。将中国剩余定理应用于结果返回最终答案。
- en: Examples
  id: totrans-990
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: 'Solve [1, 1, 7] congruent 0 mod(189):'
  id: totrans-991
  prefs: []
  type: TYPE_NORMAL
  zh: 解 [1, 1, 7] 同余于 0 mod(189)：
- en: '[PRE568]'
  id: totrans-992
  prefs: []
  type: TYPE_PRE
  zh: '[PRE568]'
- en: See also
  id: totrans-993
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.ntheory.residue_ntheory.polynomial_congruence`](../ntheory.html#sympy.ntheory.residue_ntheory.polynomial_congruence
    "sympy.ntheory.residue_ntheory.polynomial_congruence")'
  id: totrans-994
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.ntheory.residue_ntheory.polynomial_congruence`](../ntheory.html#sympy.ntheory.residue_ntheory.polynomial_congruence
    "sympy.ntheory.residue_ntheory.polynomial_congruence")'
- en: a higher level solving routine
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更高层次的解决程序
- en: References
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R792](#id17)]'
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R792](#id17)]'
- en: ‘An introduction to the Theory of Numbers’ 5th Edition by Ivan Niven, Zuckerman
    and Montgomery.
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: ‘An introduction to the Theory of Numbers’ 5th Edition by Ivan Niven, Zuckerman
    and Montgomery.
- en: Manipulation of sparse, distributed polynomials and vectors
  id: totrans-999
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 稀疏分布多项式和向量的操作
- en: Dense representations quickly require infeasible amounts of storage and computation
    time if the number of variables increases. For this reason, there is code to manipulate
    polynomials in a *sparse* representation. The Ring object and elements are implemented
    by the classes [`PolyRing`](domainsref.html#sympy.polys.rings.PolyRing "sympy.polys.rings.PolyRing")
    and [`PolyElement`](domainsref.html#sympy.polys.rings.PolyElement "sympy.polys.rings.PolyElement").
  id: totrans-1000
  prefs: []
  type: TYPE_NORMAL
  zh: 如果变量数量增加，密集表示会迅速需要不可行的存储量和计算时间。因此，有代码来在*稀疏*表示中操作多项式。环对象和元素由类[`PolyRing`](domainsref.html#sympy.polys.rings.PolyRing
    "sympy.polys.rings.PolyRing")和[`PolyElement`](domainsref.html#sympy.polys.rings.PolyElement
    "sympy.polys.rings.PolyElement")实现。
- en: In commutative algebra, one often studies not only polynomials, but also *modules*
    over polynomial rings. The polynomial manipulation module provides rudimentary
    low-level support for finitely generated free modules. This is mainly used for
    Groebner basis computations (see there), so manipulation functions are only provided
    to the extend needed. They carry the prefix `sdm_`. Note that in examples, the
    generators of the free module are called \(f_1, f_2, \ldots\).
  id: totrans-1001
  prefs: []
  type: TYPE_NORMAL
  zh: 在交换代数中，人们经常研究不仅是多项式，还有多项式环上的 *模块*。多项式操作模块提供了有限生成自由模块的基本低级支持。这主要用于格罗布纳基础计算（见那里），因此仅提供所需的操作函数。它们带有前缀
    `sdm_`。请注意，在示例中，自由模块的生成器称为 \(f_1, f_2, \ldots\)。
- en: '[PRE569]'
  id: totrans-1002
  prefs: []
  type: TYPE_PRE
  zh: '[PRE569]'
- en: Multiply tuple `X` representing a monomial of \(K[X]\) into the tuple `M` representing
    a monomial of \(F\).
  id: totrans-1003
  prefs: []
  type: TYPE_NORMAL
  zh: 将表示 `K[X]` 单项式的元组 `X` 乘到表示 `F` 单项式的元组 `M` 中。
- en: Examples
  id: totrans-1004
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Multiplying \(xy^3\) into \(x f_1\) yields \(x^2 y^3 f_1\):'
  id: totrans-1005
  prefs: []
  type: TYPE_NORMAL
  zh: 将 \(xy^3\) 乘到 \(x f_1\) 中得到 \(x^2 y^3 f_1\)：
- en: '[PRE570]'
  id: totrans-1006
  prefs: []
  type: TYPE_PRE
  zh: '[PRE570]'
- en: '[PRE571]'
  id: totrans-1007
  prefs: []
  type: TYPE_PRE
  zh: '[PRE571]'
- en: Return the total degree of `M`.
  id: totrans-1008
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `M` 的总次数。
- en: Examples
  id: totrans-1009
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'For example, the total degree of \(x^2 y f_5\) is 3:'
  id: totrans-1010
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，\(x^2 y f_5\) 的总次数为 3：
- en: '[PRE572]'
  id: totrans-1011
  prefs: []
  type: TYPE_PRE
  zh: '[PRE572]'
- en: '[PRE573]'
  id: totrans-1012
  prefs: []
  type: TYPE_PRE
  zh: '[PRE573]'
- en: Does there exist a (polynomial) monomial X such that XA = B?
  id: totrans-1013
  prefs: []
  type: TYPE_NORMAL
  zh: 是否存在（多项式）单项式 X，使得 XA = B？
- en: Examples
  id: totrans-1014
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Positive examples:'
  id: totrans-1015
  prefs: []
  type: TYPE_NORMAL
  zh: 正例：
- en: 'In the following examples, the monomial is given in terms of x, y and the generator(s),
    f_1, f_2 etc. The tuple form of that monomial is used in the call to sdm_monomial_divides.
    Note: the generator appears last in the expression but first in the tuple and
    other factors appear in the same order that they appear in the monomial expression.'
  id: totrans-1016
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，单项式以 x、y 和生成器（f_1, f_2 等）的形式给出。该单项式的元组形式用于调用 `sdm_monomial_divides`。注意：生成器在表达式中最后出现，但在元组中首先出现，其他因子按它们在单项式表达式中出现的顺序出现。
- en: \(A = f_1\) divides \(B = f_1\)
  id: totrans-1017
  prefs: []
  type: TYPE_NORMAL
  zh: \(A = f_1\) 整除 \(B = f_1\)
- en: '[PRE574]'
  id: totrans-1018
  prefs: []
  type: TYPE_PRE
  zh: '[PRE574]'
- en: \(A = f_1\) divides \(B = x^2 y f_1\)
  id: totrans-1019
  prefs: []
  type: TYPE_NORMAL
  zh: \(A = f_1\) 整除 \(B = x^2 y f_1\)
- en: '[PRE575]'
  id: totrans-1020
  prefs: []
  type: TYPE_PRE
  zh: '[PRE575]'
- en: \(A = xy f_5\) divides \(B = x^2 y f_5\)
  id: totrans-1021
  prefs: []
  type: TYPE_NORMAL
  zh: \(A = xy f_5\) 整除 \(B = x^2 y f_5\)
- en: '[PRE576]'
  id: totrans-1022
  prefs: []
  type: TYPE_PRE
  zh: '[PRE576]'
- en: 'Negative examples:'
  id: totrans-1023
  prefs: []
  type: TYPE_NORMAL
  zh: 负例：
- en: \(A = f_1\) does not divide \(B = f_2\)
  id: totrans-1024
  prefs: []
  type: TYPE_NORMAL
  zh: \(A = f_1\) 不整除 \(B = f_2\)
- en: '[PRE577]'
  id: totrans-1025
  prefs: []
  type: TYPE_PRE
  zh: '[PRE577]'
- en: \(A = x f_1\) does not divide \(B = f_1\)
  id: totrans-1026
  prefs: []
  type: TYPE_NORMAL
  zh: \(A = x f_1\) 不整除 \(B = f_1\)
- en: '[PRE578]'
  id: totrans-1027
  prefs: []
  type: TYPE_PRE
  zh: '[PRE578]'
- en: \(A = xy^2 f_5\) does not divide \(B = y f_5\)
  id: totrans-1028
  prefs: []
  type: TYPE_NORMAL
  zh: \(A = xy^2 f_5\) 不能整除 \(B = y f_5\)
- en: '[PRE579]'
  id: totrans-1029
  prefs: []
  type: TYPE_PRE
  zh: '[PRE579]'
- en: '[PRE580]'
  id: totrans-1030
  prefs: []
  type: TYPE_PRE
  zh: '[PRE580]'
- en: Returns the leading coefficient of `f`.
  id: totrans-1031
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的主系数。
- en: '[PRE581]'
  id: totrans-1032
  prefs: []
  type: TYPE_PRE
  zh: '[PRE581]'
- en: Make a dictionary from a distributed polynomial.
  id: totrans-1033
  prefs: []
  type: TYPE_NORMAL
  zh: 从分布多项式创建字典。
- en: '[PRE582]'
  id: totrans-1034
  prefs: []
  type: TYPE_PRE
  zh: '[PRE582]'
- en: Create an sdm from a dictionary.
  id: totrans-1035
  prefs: []
  type: TYPE_NORMAL
  zh: 从字典创建一个 sdm。
- en: Here `O` is the monomial order to use.
  id: totrans-1036
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 `O` 是要使用的单项式顺序。
- en: Examples
  id: totrans-1037
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE583]'
  id: totrans-1038
  prefs: []
  type: TYPE_PRE
  zh: '[PRE583]'
- en: '[PRE584]'
  id: totrans-1039
  prefs: []
  type: TYPE_PRE
  zh: '[PRE584]'
- en: Add two module elements `f`, `g`.
  id: totrans-1040
  prefs: []
  type: TYPE_NORMAL
  zh: 添加两个模元素 `f`, `g`。
- en: Addition is done over the ground field `K`, monomials are ordered according
    to `O`.
  id: totrans-1041
  prefs: []
  type: TYPE_NORMAL
  zh: 加法是在底域 `K` 上进行的，单项式按 `O` 排序。
- en: Examples
  id: totrans-1042
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: All examples use lexicographic order.
  id: totrans-1043
  prefs: []
  type: TYPE_NORMAL
  zh: 所有示例使用词典序。
- en: \((xy f_1) + (f_2) = f_2 + xy f_1\)
  id: totrans-1044
  prefs: []
  type: TYPE_NORMAL
  zh: \((xy f_1) + (f_2) = f_2 + xy f_1\)
- en: '[PRE585]'
  id: totrans-1045
  prefs: []
  type: TYPE_PRE
  zh: '[PRE585]'
- en: \((xy f_1) + (-xy f_1)\) = 0`
  id: totrans-1046
  prefs: []
  type: TYPE_NORMAL
  zh: \((xy f_1) + (-xy f_1)\) = 0`
- en: '[PRE586]'
  id: totrans-1047
  prefs: []
  type: TYPE_PRE
  zh: '[PRE586]'
- en: \((f_1) + (2f_1) = 3f_1\)
  id: totrans-1048
  prefs: []
  type: TYPE_NORMAL
  zh: \((f_1) + (2f_1) = 3f_1\)
- en: '[PRE587]'
  id: totrans-1049
  prefs: []
  type: TYPE_PRE
  zh: '[PRE587]'
- en: \((yf_1) + (xf_1) = xf_1 + yf_1\)
  id: totrans-1050
  prefs: []
  type: TYPE_NORMAL
  zh: \((yf_1) + (xf_1) = xf_1 + yf_1\)
- en: '[PRE588]'
  id: totrans-1051
  prefs: []
  type: TYPE_PRE
  zh: '[PRE588]'
- en: '[PRE589]'
  id: totrans-1052
  prefs: []
  type: TYPE_PRE
  zh: '[PRE589]'
- en: Returns the leading monomial of `f`.
  id: totrans-1053
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的主单项式。
- en: Only valid if \(f \ne 0\).
  id: totrans-1054
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在 `f \ne 0` 时有效。
- en: Examples
  id: totrans-1055
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE590]'
  id: totrans-1056
  prefs: []
  type: TYPE_PRE
  zh: '[PRE590]'
- en: '[PRE591]'
  id: totrans-1057
  prefs: []
  type: TYPE_PRE
  zh: '[PRE591]'
- en: Returns the leading term of `f`.
  id: totrans-1058
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `f` 的主项。
- en: Only valid if \(f \ne 0\).
  id: totrans-1059
  prefs: []
  type: TYPE_NORMAL
  zh: 仅在 `f \ne 0` 时有效。
- en: Examples
  id: totrans-1060
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE592]'
  id: totrans-1061
  prefs: []
  type: TYPE_PRE
  zh: '[PRE592]'
- en: '[PRE593]'
  id: totrans-1062
  prefs: []
  type: TYPE_PRE
  zh: '[PRE593]'
- en: Multiply a distributed module element `f` by a (polynomial) term `term`.
  id: totrans-1063
  prefs: []
  type: TYPE_NORMAL
  zh: 将分布模元素 `f` 乘以（多项式）项 `term`。
- en: Multiplication of coefficients is done over the ground field `K`, and monomials
    are ordered according to `O`.
  id: totrans-1064
  prefs: []
  type: TYPE_NORMAL
  zh: 系数的乘法是在底域 `K` 上进行的，并且单项式按 `O` 排序。
- en: Examples
  id: totrans-1065
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: \(0 f_1 = 0\)
  id: totrans-1066
  prefs: []
  type: TYPE_NORMAL
  zh: \(0 f_1 = 0\)
- en: '[PRE594]'
  id: totrans-1067
  prefs: []
  type: TYPE_PRE
  zh: '[PRE594]'
- en: \(x 0 = 0\)
  id: totrans-1068
  prefs: []
  type: TYPE_NORMAL
  zh: \(x 0 = 0\)
- en: '[PRE595]'
  id: totrans-1069
  prefs: []
  type: TYPE_PRE
  zh: '[PRE595]'
- en: \((x) (f_1) = xf_1\)
  id: totrans-1070
  prefs: []
  type: TYPE_NORMAL
  zh: \((x) (f_1) = xf_1\)
- en: '[PRE596]'
  id: totrans-1071
  prefs: []
  type: TYPE_PRE
  zh: '[PRE596]'
- en: \((2xy) (3x f_1 + 4y f_2) = 8xy^2 f_2 + 6x^2y f_1\)
  id: totrans-1072
  prefs: []
  type: TYPE_NORMAL
  zh: \((2xy) (3x f_1 + 4y f_2) = 8xy^2 f_2 + 6x^2y f_1\)
- en: '[PRE597]'
  id: totrans-1073
  prefs: []
  type: TYPE_PRE
  zh: '[PRE597]'
- en: '[PRE598]'
  id: totrans-1074
  prefs: []
  type: TYPE_PRE
  zh: '[PRE598]'
- en: Return the zero module element.
  id: totrans-1075
  prefs: []
  type: TYPE_NORMAL
  zh: 返回零模元素。
- en: '[PRE599]'
  id: totrans-1076
  prefs: []
  type: TYPE_PRE
  zh: '[PRE599]'
- en: Degree of `f`.
  id: totrans-1077
  prefs: []
  type: TYPE_NORMAL
  zh: '`f` 的次数。'
- en: This is the maximum of the degrees of all its monomials. Invalid if `f` is zero.
  id: totrans-1078
  prefs: []
  type: TYPE_NORMAL
  zh: 这是其所有单项式的次数的最大值。如果 `f` 是零，则无效。
- en: Examples
  id: totrans-1079
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE600]'
  id: totrans-1080
  prefs: []
  type: TYPE_PRE
  zh: '[PRE600]'
- en: '[PRE601]'
  id: totrans-1081
  prefs: []
  type: TYPE_PRE
  zh: '[PRE601]'
- en: Create an sdm from an iterable of expressions.
  id: totrans-1082
  prefs: []
  type: TYPE_NORMAL
  zh: 从表达式的可迭代对象创建一个 sdm。
- en: Coefficients are created in the ground field `K`, and terms are ordered according
    to monomial order `O`. Named arguments are passed on to the polys conversion code
    and can be used to specify for example generators.
  id: totrans-1083
  prefs: []
  type: TYPE_NORMAL
  zh: 系数在底域 `K` 中创建，项根据单项式顺序 `O` 排序。命名参数传递给 polys 转换代码，并可用于指定例如生成器。
- en: Examples
  id: totrans-1084
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE602]'
  id: totrans-1085
  prefs: []
  type: TYPE_PRE
  zh: '[PRE602]'
- en: '[PRE603]'
  id: totrans-1086
  prefs: []
  type: TYPE_PRE
  zh: '[PRE603]'
- en: Convert sdm `f` into a list of polynomial expressions.
  id: totrans-1087
  prefs: []
  type: TYPE_NORMAL
  zh: 将 sdm `f` 转换为多项式表达式列表。
- en: The generators for the polynomial ring are specified via `gens`. The rank of
    the module is guessed, or passed via `n`. The ground field is assumed to be `K`.
  id: totrans-1088
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式环的生成器通过 `gens` 指定。模块的秩是猜测的，或者通过 `n` 传递。假定底域是 `K`。
- en: Examples
  id: totrans-1089
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE604]'
  id: totrans-1090
  prefs: []
  type: TYPE_PRE
  zh: '[PRE604]'
- en: Polynomial factorization algorithms
  id: totrans-1091
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多项式因式分解算法
- en: 'Many variants of Euclid’s algorithm:'
  id: totrans-1092
  prefs: []
  type: TYPE_NORMAL
  zh: Euclid's algorithm 的许多变种：
- en: Classical remainder sequence
  id: totrans-1093
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 经典余序列
- en: Let \(K\) be a field, and consider the ring \(K[X]\) of polynomials in a single
    indeterminate \(X\) with coefficients in \(K\). Given two elements \(f\) and \(g\)
    of \(K[X]\) with \(g\neq 0\) there are unique polynomials \(q\) and \(r\) such
    that \(f = qg + r\) and \(\deg(r) < \deg(g)\) or \(r = 0\). They are denoted by
    \(\mathrm{quo}(f,g)\) (*quotient*) and \(\mathrm{rem}(f,g)\) (*remainder*), so
    we have the *division identity*
  id: totrans-1094
  prefs: []
  type: TYPE_NORMAL
  zh: 设 \(K\) 是一个域，并考虑单变元 \(X\) 的多项式的环 \(K[X]\)，其系数在 \(K\) 中。给定 \(K[X]\) 中的两个元素 \(f\)
    和 \(g\)，其中 \(g \neq 0\)，存在唯一的多项式 \(q\) 和 \(r\) 使得 \(f = qg + r\) 且 \(\deg(r) <
    \deg(g)\) 或 \(r = 0\)。它们由 \(\mathrm{quo}(f,g)\)（*商*）和 \(\mathrm{rem}(f,g)\)（*余*）表示，因此我们有*除法恒等式*
- en: \[f = \mathrm{quo}(f,g)g + \mathrm{rem}(f,g).\]
  id: totrans-1095
  prefs: []
  type: TYPE_NORMAL
  zh: \[f = \mathrm{quo}(f,g)g + \mathrm{rem}(f,g).\]
- en: It follows that every ideal \(I\) of \(K[X]\) is a principal ideal, generated
    by any element \(\neq 0\) of minimum degree (assuming \(I\) non-zero). In fact,
    if \(g\) is such a polynomial and \(f\) is any element of \(I\), \(\mathrm{rem}(f,g)\)
    belongs to \(I\) as a linear combination of \(f\) and \(g\), hence must be zero;
    therefore \(f\) is a multiple of \(g\).
  id: totrans-1096
  prefs: []
  type: TYPE_NORMAL
  zh: 由此可知，\(K[X]\) 的每一个理想 \(I\) 都是主理想，由任意非零最小次元的元素生成（假设 \(I\) 非零）。事实上，如果 \(g\) 是这样的多项式，\(f\)
    是 \(I\) 中的任意元素，则 \(\mathrm{rem}(f,g)\) 作为 \(f\) 和 \(g\) 的线性组合属于 \(I\)，因此必须为零；因此
    \(f\) 是 \(g\) 的倍数。
- en: Using this result it is possible to find a [greatest common divisor](https://en.wikipedia.org/wiki/Greatest_common_divisor)
    (gcd) of any polynomials \(f,g,\ldots\) in \(K[X]\). If \(I\) is the ideal formed
    by all linear combinations of the given polynomials with coefficients in \(K[X]\),
    and \(d\) is its generator, then every common divisor of the polynomials also
    divides \(d\). On the other hand, the given polynomials are multiples of the generator
    \(d\); hence \(d\) is a gcd of the polynomials, denoted \(\mathrm{gcd}(f,g,\ldots)\).
  id: totrans-1097
  prefs: []
  type: TYPE_NORMAL
  zh: 利用此结果可以在 \(K[X]\) 中找到任何多项式 \(f,g,\ldots\) 的[最大公约数](https://zh.wikipedia.org/wiki/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0)。如果
    \(I\) 是由给定多项式的所有线性组合形成的理想，\(d\) 是其生成元，那么多项式的每一个公因子也会除 \(d\)。另一方面，给定的多项式是生成元 \(d\)
    的倍数；因此 \(d\) 是多项式的最大公约数，表示为 \(\mathrm{gcd}(f,g,\ldots)\)。
- en: An algorithm for the gcd of two polynomials \(f\) and \(g\) in \(K[X]\) can
    now be obtained as follows. By the division identity, \(r = \mathrm{rem}(f,g)\)
    is in the ideal generated by \(f\) and \(g\), as well as \(f\) is in the ideal
    generated by \(g\) and \(r\). Hence the ideals generated by the pairs \((f,g)\)
    and \((g,r)\) are the same. Set \(f_0 = f\), \(f_1 = g\), and define recursively
    \(f_i = \mathrm{rem}(f_{i-2},f_{i-1})\) for \(i\ge 2\). The recursion ends after
    a finite number of steps with \(f_{k+1}=0\), since the degrees of the polynomials
    are strictly decreasing. By the above remark, all the pairs \((f_{i-1},f_i)\)
    generate the same ideal. In particular, the ideal generated by \(f\) and \(g\)
    is generated by \(f_k\) alone as \(f_{k+1} = 0\). Hence \(d = f_k\) is a gcd of
    \(f\) and \(g\).
  id: totrans-1098
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以获得 \(K[X]\) 中两个多项式 \(f\) 和 \(g\) 的最大公约数算法如下。根据除法恒等式，\(r = \mathrm{rem}(f,g)\)
    在由 \(f\) 和 \(g\) 生成的理想中，同时 \(f\) 在由 \(g\) 和 \(r\) 生成的理想中。因此，由对 \((f,g)\) 和 \((g,r)\)
    生成的理想是相同的。设 \(f_0 = f\)，\(f_1 = g\)，并递归定义 \(f_i = \mathrm{rem}(f_{i-2},f_{i-1})\)
    对 \(i \ge 2\)。递归在有限步后结束，因为多项式的次数严格递减。根据上述评论，所有对 \((f_{i-1},f_i)\) 生成相同的理想。特别地，由
    \(f\) 和 \(g\) 生成的理想仅由 \(f_k\) 生成，因为 \(f_{k+1} = 0\)。因此 \(d = f_k\) 是 \(f\) 和 \(g\)
    的最大公约数。
- en: The sequence of polynomials \(f_0\), \(f_1,\ldots, f_k\) is called the *Euclidean
    polynomial remainder sequence* determined by \((f,g)\) because of the analogy
    with the classical [Euclidean algorithm](https://en.wikipedia.org/wiki/Euclidean_algorithm)
    for the gcd of natural numbers.
  id: totrans-1099
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式序列 \(f_0\), \(f_1,\ldots, f_k\) 称为由 \((f,g)\) 确定的*欧几里得多项式余序列*，因为类似于自然数的[欧几里得算法](https://zh.wikipedia.org/wiki/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95)。
- en: The algorithm may be extended to obtain an expression for \(d\) in terms of
    \(f\) and \(g\) by using the full division identities to write recursively each
    \(f_i\) as a linear combination of \(f\) and \(g\). This leads to an equation
  id: totrans-1100
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过使用完整的除法恒等式将每个 \(f_i\) 递归地写成 \(f\) 和 \(g\) 的线性组合来扩展算法，从而获得 \(d\) 的表达式。这导致一个方程
- en: \[d = uf + vg\qquad (u,v \in K[X])\]
  id: totrans-1101
  prefs: []
  type: TYPE_NORMAL
  zh: \[d = uf + vg\qquad (u,v \in K[X])\]
- en: analogous to [Bézout’s identity](https://en.wikipedia.org/wiki/B%C3%A9zout%27s_identity)
    in the case of integers.
  id: totrans-1102
  prefs: []
  type: TYPE_NORMAL
  zh: 在整数情况下类似于[贝祖等式](https://zh.wikipedia.org/wiki/%E8%B4%9D%E5%A3%AB%E7%AD%89%E5%BC%8F)。
- en: '[PRE605]'
  id: totrans-1103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE605]'
- en: Half extended Euclidean algorithm in \(F[X]\).
  id: totrans-1104
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(F[X]\) 中的半扩展欧几里得算法。
- en: Examples
  id: totrans-1105
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE606]'
  id: totrans-1106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE606]'
- en: '[PRE607]'
  id: totrans-1107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE607]'
- en: Extended Euclidean algorithm in \(F[X]\).
  id: totrans-1108
  prefs: []
  type: TYPE_NORMAL
  zh: \(F[X]\) 中的扩展欧几里得算法。
- en: Examples
  id: totrans-1109
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE608]'
  id: totrans-1110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE608]'
- en: '[PRE609]'
  id: totrans-1111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE609]'
- en: Compute multiplicative inverse of \(f\) modulo \(g\) in \(F[X]\).
  id: totrans-1112
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(F[X]\) 中计算 \(f\) 模 \(g\) 的乘法逆元。
- en: Examples
  id: totrans-1113
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE610]'
  id: totrans-1114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE610]'
- en: '[PRE611]'
  id: totrans-1115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE611]'
- en: Euclidean polynomial remainder sequence (PRS) in \(K[X]\).
  id: totrans-1116
  prefs: []
  type: TYPE_NORMAL
  zh: \(K[X]\) 中的欧几里得多项式余数序列（PRS）。
- en: Examples
  id: totrans-1117
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE612]'
  id: totrans-1118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE612]'
- en: Simplified remainder sequences
  id: totrans-1119
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 简化的余数序列
- en: Assume, as is usual, that the coefficient field \(K\) is the field of fractions
    of an integral domain \(A\). In this case the coefficients (numerators and denominators)
    of the polynomials in the Euclidean remainder sequence tend to grow very fast.
  id: totrans-1120
  prefs: []
  type: TYPE_NORMAL
  zh: 假设按照通常情况，系数域 \(K\) 是整环 \(A\) 的分式域。在这种情况下，欧几里得余数序列中多项式的系数（分子和分母）往往会快速增长。
- en: 'If \(A\) is a unique factorization domain, the coefficients may be reduced
    by cancelling common factors of numerators and denominators. Further reduction
    is possible noting that a gcd of polynomials in \(K[X]\) is not unique: it may
    be multiplied by any (non-zero) constant factor.'
  id: totrans-1121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \(A\) 是唯一因子分解域，则可以通过取消分子和分母的公因子来减少系数。进一步的简化可能性在于注意到 \(K[X]\) 中的多项式的 gcd 不唯一：它可以乘以任何（非零）常数因子。
- en: Any polynomial \(f\) in \(K[X]\) can be simplified by extracting the denominators
    and common factors of the numerators of its coefficients. This yields the representation
    \(f = cF\) where \(c\in K\) is the *content* of \(f\) and \(F\) is a *primitive*
    polynomial, i.e., a polynomial in \(A[X]\) with coprime coefficients.
  id: totrans-1122
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 \(K[X]\) 中的多项式 \(f\) 都可以通过提取其系数的分母和公因子来简化。这导致了表示 \(f = cF\)，其中 \(c\in K\)
    是 \(f\) 的*内容*，\(F\) 是一个*原始*多项式，即 \(A[X]\) 中具有互质系数的多项式。
- en: It is possible to start the algorithm by replacing the given polynomials \(f\)
    and \(g\) with their primitive parts. This will only modify \(\mathrm{rem}(f,g)\)
    by a constant factor. Replacing it with its primitive part and continuing recursively
    we obtain all the primitive parts of the polynomials in the Euclidean remainder
    sequence, including the primitive \(\mathrm{gcd}(f,g)\).
  id: totrans-1123
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过用给定多项式 \(f\) 和 \(g\) 的原始部分替换来启动算法。这只会通过一个常数因子修改 \(\mathrm{rem}(f,g)\)。用其原始部分替换后，继续递归地获得欧几里得余数序列中所有多项式的原始部分，包括原始
    \(\mathrm{gcd}(f,g)\)。
- en: This sequence is the *primitive polynomial remainder sequence*. It is an example
    of *general polynomial remainder sequences* where the computed remainders are
    modified by constant multipliers (or divisors) in order to simplify the results.
  id: totrans-1124
  prefs: []
  type: TYPE_NORMAL
  zh: 这个序列是*原始多项式余数序列*。它是*一般多项式余数序列*的一个例子，其中计算得到的余数通过常数乘法器（或除法器）进行修改，以简化结果。
- en: '[PRE613]'
  id: totrans-1125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE613]'
- en: Primitive polynomial remainder sequence (PRS) in \(K[X]\).
  id: totrans-1126
  prefs: []
  type: TYPE_NORMAL
  zh: \(K[X]\) 中的原始多项式余数序列（PRS）。
- en: Examples
  id: totrans-1127
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE614]'
  id: totrans-1128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE614]'
- en: Subresultant sequence
  id: totrans-1129
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 子结果序列
- en: The coefficients of the primitive polynomial sequence do not grow exceedingly,
    but the computation of the primitive parts requires extra processing effort. Besides,
    the method only works with fraction fields of unique factorization domains, excluding,
    for example, the general number fields.
  id: totrans-1130
  prefs: []
  type: TYPE_NORMAL
  zh: 原始多项式序列的系数并不会过分增长，但计算原始部分需要额外的处理工作。此外，该方法仅适用于唯一因子分解域的分式域，例如一般数域则不包括在内。
- en: Collins [Collins67] realized that the so-called *subresultant polynomials* of
    a pair of polynomials also form a generalized remainder sequence. The coefficients
    of these polynomials are expressible as determinants in the coefficients of the
    given polynomials. Hence (the logarithm of) their size only grows linearly. In
    addition, if the coefficients of the given polynomials are in the subdomain \(A\),
    so are those of the subresultant polynomials. This means that the subresultant
    sequence is comparable to the primitive remainder sequence without relying on
    unique factorization in \(A\).
  id: totrans-1131
  prefs: []
  type: TYPE_NORMAL
  zh: Collins [Collins67] 意识到一对多项式的所谓*子结果多项式*也形成了广义的余数序列。这些多项式的系数可以表示为给定多项式系数的行列式。因此，它们（的对数）的大小仅线性增长。此外，如果给定多项式的系数在子域
    \(A\) 中，那么子结果多项式的系数也在子域中。这意味着子结果序列与不依赖于 \(A\) 中唯一因子分解的原始余数序列是可比较的。
- en: To see how subresultants are associated with remainder sequences recall that
    all polynomials \(h\) in the sequence are linear combinations of the given polynomials
    \(f\) and \(g\)
  id: totrans-1132
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解子结果与余数序列的关联，回想一下序列中的所有多项式 \(h\) 都是给定多项式 \(f\) 和 \(g\) 的线性组合。
- en: \[h = uf+vg\]
  id: totrans-1133
  prefs: []
  type: TYPE_NORMAL
  zh: \[h = uf+vg\]
- en: with polynomials \(u\) and \(v\) in \(K[X]\). Moreover, as is seen from the
    extended Euclidean algorithm, the degrees of \(u\) and \(v\) are relatively low,
    with limited growth from step to step.
  id: totrans-1134
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(u\)和\(v\)是\(K[X]\)中的多项式。此外，正如从扩展欧几里德算法中可以看到的那样，\(u\)和\(v\)的次数相对较低，并且从步骤到步骤的增长是有限的。
- en: Let \(n = \deg(f)\), and \(m = \deg(g)\), and assume \(n\ge m\). If \(\deg(h)
    = j < m\), the coefficients of the powers \(X^k\) (\(k > j\)) in the products
    \(uf\) and \(vg\) cancel each other. In particular, the products must have the
    same degree, say, \(l\). Then \(\deg(u) = l - n\) and \(\deg(v) = l - m\) with
    a total of \(2l -n - m + 2\) coefficients to be determined.
  id: totrans-1135
  prefs: []
  type: TYPE_NORMAL
  zh: 设\(n = \deg(f)\)，\(m = \deg(g)\)，并假设\(n \ge m\)。如果\(\deg(h) = j < m\)，则在乘积\(uf\)和\(vg\)中，幂\(X^k\)
    (\(k > j\))的系数会互相抵消。特别地，这些乘积必须有相同的次数，称为\(l\)。然后\(\deg(u) = l - n\)和\(\deg(v) =
    l - m\)，需要确定的系数总数为\(2l - n - m + 2\)。
- en: On the other hand, the equality \(h = uf + vg\) implies that \(l - j\) linear
    combinations of the coefficients are zero, those associated with the powers \(X^i\)
    (\(j < i \leq l\)), and one has a given non-zero value, namely the leading coefficient
    of \(h\).
  id: totrans-1136
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，等式\(h = uf + vg\)意味着系数的\(l - j\)线性组合为零，这些系数与幂\(X^i\) (\(j < i \leq l\))相关联，并且其中一个具有给定的非零值，即\(h\)的首项系数。
- en: To satisfy these \(l - j + 1\) linear equations the total number of coefficients
    to be determined cannot be lower than \(l - j + 1\), in general. This leads to
    the inequality \(l \ge n + m - j - 1\). Taking \(l = n + m - j - 1\), we obtain
    \(\deg(u) = m - j - 1\) and \(\deg(v) = n - j - 1\).
  id: totrans-1137
  prefs: []
  type: TYPE_NORMAL
  zh: 要满足这些\(l - j + 1\)个线性方程，要确定的系数总数一般不能低于\(l - j + 1\)。这导致不等式\(l \ge n + m - j
    - 1\)。取\(l = n + m - j - 1\)，我们得到\(\deg(u) = m - j - 1\)和\(\deg(v) = n - j - 1\)。
- en: In the case \(j = 0\) the matrix of the resulting system of linear equations
    is the [Sylvester matrix](https://en.wikipedia.org/wiki/Sylvester_matrix) \(S(f,g)\)
    associated to \(f\) and \(g\), an \((n+m)\times (n+m)\) matrix with coefficients
    of \(f\) and \(g\) as entries. Its determinant is the [resultant](https://en.wikipedia.org/wiki/Resultant)
    \(\mathrm{res}(f,g)\) of the pair \((f,g)\). It is non-zero if and only if \(f\)
    and \(g\) are relatively prime.
  id: totrans-1138
  prefs: []
  type: TYPE_NORMAL
  zh: 当\(j = 0\)时，导致线性方程组的矩阵是与\(f\)和\(g\)相关的[Sylvester矩阵](https://en.wikipedia.org/wiki/Sylvester_matrix)\(S(f,g)\)，一个\((n+m)\times
    (n+m)\)的矩阵，其系数是\(f\)和\(g\)的系数。它的行列式是对偶\(f\)和\(g\)的[结果式](https://en.wikipedia.org/wiki/Resultant)\(\mathrm{res}(f,g)\)。当且仅当\(f\)和\(g\)互素时，它是非零的。
- en: For any \(j\) in the interval from \(0\) to \(m\) the matrix of the linear system
    is an \((n+m-2j)\times (n+m-2j)\) submatrix of the Sylvester matrix. Its determinant
    \(s_j(f,g)\) is called the \(j\) th *scalar subresultant* of \(f\) and \(g\).
  id: totrans-1139
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任意的\(j\)，其取值范围在\(0\)到\(m\)之间，线性系统的矩阵是Sylvester矩阵的一个\((n+m-2j)\times (n+m-2j)\)子矩阵。它的行列式\(s_j(f,g)\)被称为\(f\)和\(g\)的第\(j\)个*标量子结果式*。
- en: If \(s_j(f,g)\) is not zero, the associated equation \(h = uf + vg\) has a unique
    solution where \(\deg(h) = j\) and the leading coefficient of \(h\) has any given
    value; the one with leading coefficient \(s_j(f,g)\) is the \(j\) th *subresultant
    polynomial* or, briefly, *subresultant* of the pair \((f,g)\), and denoted \(S_j(f,g)\).
    This choice guarantees that the remainining coefficients are also certain subdeterminants
    of the Sylvester matrix. In particular, if \(f\) and \(g\) are in \(A[X]\), so
    is \(S_j(f,g)\) as well. This construction of subresultants applies to any \(j\)
    between \(0\) and \(m\) regardless of the value of \(s_j(f,g)\); if it is zero,
    then \(\deg(S_j(f,g)) < j\).
  id: totrans-1140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果\(s_j(f,g)\)不为零，则相关的方程\(h = uf + vg\)有一个唯一的解，其中\(\deg(h) = j\)且\(h\)的首项系数具有任意给定的值；其中具有首项系数\(s_j(f,g)\)的是第\(j\)个*子结果式多项式*或简称为*子结果式*\((f,g)\)，记作\(S_j(f,g)\)。这个选择确保其余系数也是Sylvester矩阵的某些子行列式。特别地，如果\(f\)和\(g\)在\(A[X]\)中，则\(S_j(f,g)\)也在其中。这种子结果式的构造适用于\(0\)到\(m\)之间的任何\(j\)，无论\(s_j(f,g)\)的值如何；如果它为零，则\(\deg(S_j(f,g))
    < j\)。
- en: The properties of subresultants are as follows. Let \(n_0 = \deg(f)\), \(n_1
    = \deg(g)\), \(n_2, \ldots, n_k\) be the decreasing sequence of degrees of polynomials
    in a remainder sequence. Let \(0 \le j \le n_1\); then
  id: totrans-1141
  prefs: []
  type: TYPE_NORMAL
  zh: 子结果式的性质如下。设\(n_0 = \deg(f)\)，\(n_1 = \deg(g)\)，\(n_2, \ldots, n_k\)是余序列中多项式次数的递减序列。设\(0
    \le j \le n_1\)；则
- en: \(s_j(f,g)\ne 0\) if and only if \(j = n_i\) for some \(i\).
  id: totrans-1142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(s_j(f,g)\ne 0\) if and only if \(j = n_i\) for some \(i\).
- en: \(S_j(f,g)\ne 0\) if and only if \(j = n_i\) or \(j = n_i - 1\) for some \(i\).
  id: totrans-1143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: \(S_j(f,g)\ne 0\) if and only if \(j = n_i\) or \(j = n_i - 1\) for some \(i\).
- en: Normally, \(n_{i-1} - n_i = 1\) for \(1 < i \le k\). If \(n_{i-1} - n_i > 1\)
    for some \(i\) (the *abnormal* case), then \(S_{n_{i-1}-1}(f,g)\) and \(S_{n_i}(f,g)\)
    are constant multiples of each other. Hence either one could be included in the
    polynomial remainder sequence. The former is given by smaller determinants, so
    it is expected to have smaller coefficients.
  id: totrans-1144
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，对于\(1 < i \le k\)，\(n_{i-1} - n_i = 1\)。如果某些\(i\)（*异常*情况）中\(n_{i-1} -
    n_i > 1\)，那么\(S_{n_{i-1}-1}(f,g)\)和\(S_{n_i}(f,g)\)是彼此的常数倍数。因此，多项式余序列中可以包含任意一个。前者由更小的行列式给出，因此预计其系数较小。
- en: Collins defined the *subresultant remainder sequence* by setting
  id: totrans-1145
  prefs: []
  type: TYPE_NORMAL
  zh: Collins通过设定*子结果余算法*定义了
- en: \[f_i = S_{n_{i-1}-1}(f,g) \qquad (2\le i \le k).\]
  id: totrans-1146
  prefs: []
  type: TYPE_NORMAL
  zh: \[f_i = S_{n_{i-1}-1}(f,g) \qquad (2\le i \le k).\]
- en: In the normal case, these are the same as the \(S_{n_i}(f,g)\). He also derived
    expressions for the constants \(\gamma_i\) in the remainder formulas
  id: totrans-1147
  prefs: []
  type: TYPE_NORMAL
  zh: 在正常情况下，这些与\(S_{n_i}(f,g)\)相同。他还推导出了余式公式中常数\(\gamma_i\)的表达式。
- en: \[\gamma_i f_i = \mathrm{rem}(f_{i-2},f_{i-1})\]
  id: totrans-1148
  prefs: []
  type: TYPE_NORMAL
  zh: \[\gamma_i f_i = \mathrm{rem}(f_{i-2},f_{i-1})\]
- en: in terms of the leading coefficients of \(f_1,\ldots,f_{i-1}\), working in the
    field \(K\).
  id: totrans-1149
  prefs: []
  type: TYPE_NORMAL
  zh: 关于在域\(K\)中的\(f_1,\ldots,f_{i-1}\)的首项系数工作。
- en: Brown and Traub [BrownTraub71] later developed a recursive procedure for computing
    the coefficients \(\gamma_i\). Their algorithm deals with elements of the domain
    \(A\) exclusively (assuming \(f,g\in A[X]\)). However, in the abnormal case there
    was a problem, a division in \(A\) which could only be conjectured to be exact.
  id: totrans-1150
  prefs: []
  type: TYPE_NORMAL
  zh: Brown和Traub [BrownTraub71]随后开发了一个递归过程来计算系数\(\gamma_i\)。他们的算法专门处理域\(A\)的元素（假设\(f,g\in
    A[X]\)）。然而，在异常情况下存在一个问题，即在\(A\)中的除法可能只能猜测是精确的。
- en: This was subsequently justified by Brown [Brown78] who showed that the result
    of the division is, in fact, a scalar subresultant. More specifically, the constant
    appearing in the computation of \(f_i\) is \(s_{n_{i-2}}(f,g)\) (Theorem 3). The
    implication of this discovery is that the scalar subresultants are computed as
    by-products of the algorithm, all but \(s_{n_k}(f,g)\) which is not needed after
    finding \(f_{k+1} = 0\). Completing the last step we obtain all non-zero scalar
    subresultants, including the last one which is the resultant if this does not
    vanish.
  id: totrans-1151
  prefs: []
  type: TYPE_NORMAL
  zh: 这后来被Brown [Brown78]证明，他表明除法的结果实际上是标量子结果。更具体地说，在计算\(f_i\)中出现的常数是\(s_{n_{i-2}}(f,g)\)（定理3）。这一发现的含义是，在算法的副产品中计算出了除\(f_{k+1}=0\)之外的所有非零标量子结果。完成最后一步我们得到了所有非零的标量子结果，包括最后一个如果它不为零的话就是结果。
- en: '[PRE615]'
  id: totrans-1152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE615]'
- en: Subresultant PRS algorithm in \(K[X]\).
  id: totrans-1153
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(K[X]\)中的子结果多项式剩余序列算法。
- en: Examples
  id: totrans-1154
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE616]'
  id: totrans-1155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE616]'
- en: '[PRE617]'
  id: totrans-1156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE617]'
- en: '[PRE618]'
  id: totrans-1157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE618]'
- en: '[PRE619]'
  id: totrans-1158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE619]'
- en: '[PRE620]'
  id: totrans-1159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE620]'
- en: '[PRE621]'
  id: totrans-1160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE621]'
- en: Computes subresultant PRS of two polynomials in \(K[X]\).
  id: totrans-1161
  prefs: []
  type: TYPE_NORMAL
  zh: 计算\(K[X]\)中两个多项式的子结果多项式剩余序列。
- en: Examples
  id: totrans-1162
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE622]'
  id: totrans-1163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE622]'
- en: '[PRE623]'
  id: totrans-1164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE623]'
- en: '[PRE624]'
  id: totrans-1165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE624]'
- en: '[PRE625]'
  id: totrans-1166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE625]'
- en: '[PRE626]'
  id: totrans-1167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE626]'
- en: Resultant algorithm in \(K[X]\) using subresultant PRS.
  id: totrans-1168
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(K[X]\)中使用子结果多项式剩余序列算法得到的结果算法。
- en: Examples
  id: totrans-1169
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE627]'
  id: totrans-1170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE627]'
- en: '[PRE628]'
  id: totrans-1171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE628]'
- en: '[PRE629]'
  id: totrans-1172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE629]'
- en: '[PRE630]'
  id: totrans-1173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE630]'
- en: '[PRE631]'
  id: totrans-1174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE631]'
- en: '[PRE632]'
  id: totrans-1175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE632]'
- en: Compute resultant of \(f\) and \(g\) modulo a prime \(p\).
  id: totrans-1176
  prefs: []
  type: TYPE_NORMAL
  zh: 计算\(f\)和\(g\)模素数\(p\)的结果。
- en: Examples
  id: totrans-1177
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE633]'
  id: totrans-1178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE633]'
- en: '[PRE634]'
  id: totrans-1179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE634]'
- en: '[PRE635]'
  id: totrans-1180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE635]'
- en: '[PRE636]'
  id: totrans-1181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE636]'
- en: Collins’s modular resultant algorithm in \(Z[X]\).
  id: totrans-1182
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(Z[X]\)中的Collins模余结果算法。
- en: Examples
  id: totrans-1183
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE637]'
  id: totrans-1184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE637]'
- en: '[PRE638]'
  id: totrans-1185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE638]'
- en: '[PRE639]'
  id: totrans-1186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE639]'
- en: '[PRE640]'
  id: totrans-1187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE640]'
- en: Collins’s modular resultant algorithm in \(Q[X]\).
  id: totrans-1188
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(Q[X]\)中的Collins模余结果算法。
- en: Examples
  id: totrans-1189
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE641]'
  id: totrans-1190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE641]'
- en: '[PRE642]'
  id: totrans-1191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE642]'
- en: '[PRE643]'
  id: totrans-1192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE643]'
- en: '[PRE644]'
  id: totrans-1193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE644]'
- en: Computes resultant of two polynomials in \(K[X]\).
  id: totrans-1194
  prefs: []
  type: TYPE_NORMAL
  zh: 计算\(K[X]\)中两个多项式的结果。
- en: Examples
  id: totrans-1195
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE645]'
  id: totrans-1196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE645]'
- en: '[PRE646]'
  id: totrans-1197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE646]'
- en: '[PRE647]'
  id: totrans-1198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE647]'
- en: '[PRE648]'
  id: totrans-1199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE648]'
- en: Computes discriminant of a polynomial in \(K[X]\).
  id: totrans-1200
  prefs: []
  type: TYPE_NORMAL
  zh: 计算\(K[X]\)中多项式的判别式。
- en: Examples
  id: totrans-1201
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE649]'
  id: totrans-1202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE649]'
- en: '[PRE650]'
  id: totrans-1203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE650]'
- en: '[PRE651]'
  id: totrans-1204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE651]'
- en: Computes polynomial GCD using subresultants over a ring.
  id: totrans-1205
  prefs: []
  type: TYPE_NORMAL
  zh: 使用环上的子结果多项式剩余序列计算多项式最大公因数。
- en: Returns `(h, cff, cfg)` such that `a = gcd(f, g)`, `cff = quo(f, h)`, and `cfg
    = quo(g, h)`.
  id: totrans-1206
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`(h, cff, cfg)`，使得`a = gcd(f, g)`，`cff = quo(f, h)`，以及`cfg = quo(g, h)`。
- en: Examples
  id: totrans-1207
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE652]'
  id: totrans-1208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE652]'
- en: '[PRE653]'
  id: totrans-1209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE653]'
- en: '[PRE654]'
  id: totrans-1210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE654]'
- en: '[PRE655]'
  id: totrans-1211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE655]'
- en: Computes polynomial GCD using subresultants over a field.
  id: totrans-1212
  prefs: []
  type: TYPE_NORMAL
  zh: 使用域上的子结果多项式剩余序列计算多项式最大公因数。
- en: Returns `(h, cff, cfg)` such that `a = gcd(f, g)`, `cff = quo(f, h)`, and `cfg
    = quo(g, h)`.
  id: totrans-1213
  prefs: []
  type: TYPE_NORMAL
  zh: 返回`(h, cff, cfg)`，使得`a = gcd(f, g)`，`cff = quo(f, h)`，以及`cfg = quo(g, h)`。
- en: Examples
  id: totrans-1214
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE656]'
  id: totrans-1215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE656]'
- en: '[PRE657]'
  id: totrans-1216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE657]'
- en: '[PRE658]'
  id: totrans-1217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE658]'
- en: '[PRE659]'
  id: totrans-1218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE659]'
- en: Heuristic polynomial GCD in \(Z[X]\).
  id: totrans-1219
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(Z[X]\)中的启发式多项式最大公因数。
- en: 'Given univariate polynomials \(f\) and \(g\) in \(Z[X]\), returns their GCD
    and cofactors, i.e. polynomials `h`, `cff` and `cfg` such that:'
  id: totrans-1220
  prefs: []
  type: TYPE_NORMAL
  zh: 给定整系数一元多项式\(f\)和\(g\)，返回它们的最大公因数及其余因子，即多项式`h`，`cff`和`cfg`，使得：
- en: '[PRE660]'
  id: totrans-1221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE660]'
- en: The algorithm is purely heuristic which means it may fail to compute the GCD.
    This will be signaled by raising an exception. In this case you will need to switch
    to another GCD method.
  id: totrans-1222
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法是纯启发式的，这意味着它可能无法计算最大公因数。这将通过引发异常来表示。在这种情况下，您需要切换到另一种最大公因数的方法。
- en: The algorithm computes the polynomial GCD by evaluating polynomials f and g
    at certain points and computing (fast) integer GCD of those evaluations. The polynomial
    GCD is recovered from the integer image by interpolation. The evaluation process
    reduces f and g variable by variable into a large integer. The final step is to
    verify if the interpolated polynomial is the correct GCD. This gives cofactors
    of the input polynomials as a side effect.
  id: totrans-1223
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法通过在特定点评估多项式 \(f\) 和 \(g\) 并计算这些评估的（快速）整数最大公约数来计算多项式的最大公约数。通过插值从整数图像中恢复多项式最大公约数。评估过程逐步将
    \(f\) 和 \(g\) 逐变量减少为一个大整数。最后一步是验证插值多项式是否是正确的最大公约数。这会作为副作用给出输入多项式的余式。
- en: Examples
  id: totrans-1224
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE661]'
  id: totrans-1225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE661]'
- en: '[PRE662]'
  id: totrans-1226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE662]'
- en: '[PRE663]'
  id: totrans-1227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE663]'
- en: References
  id: totrans-1228
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R793](#id19)]'
  id: totrans-1229
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R793](#id19)]'
- en: '[[Liao95]](literature.html#liao95)'
  id: totrans-1230
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Liao95]](literature.html#liao95)'
- en: '[PRE664]'
  id: totrans-1231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE664]'
- en: Heuristic polynomial GCD in \(Q[X]\).
  id: totrans-1232
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(Q[X]\) 中的启发式多项式最大公约数。
- en: Returns `(h, cff, cfg)` such that `a = gcd(f, g)`, `cff = quo(f, h)`, and `cfg
    = quo(g, h)`.
  id: totrans-1233
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `(h, cff, cfg)`，使得 `a = gcd(f, g)`，`cff = quo(f, h)`，且 `cfg = quo(g, h)`。
- en: Examples
  id: totrans-1234
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE665]'
  id: totrans-1235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE665]'
- en: '[PRE666]'
  id: totrans-1236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE666]'
- en: '[PRE667]'
  id: totrans-1237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE667]'
- en: '[PRE668]'
  id: totrans-1238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE668]'
- en: Computes polynomial GCD and cofactors of \(f\) and \(g\) in \(K[X]\).
  id: totrans-1239
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 \(K[X]\) 中多项式 \(f\) 和 \(g\) 的最大公约数及其余式。
- en: Returns `(h, cff, cfg)` such that `a = gcd(f, g)`, `cff = quo(f, h)`, and `cfg
    = quo(g, h)`.
  id: totrans-1240
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `(h, cff, cfg)`，使得 `a = gcd(f, g)`，`cff = quo(f, h)`，且 `cfg = quo(g, h)`。
- en: Examples
  id: totrans-1241
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE669]'
  id: totrans-1242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE669]'
- en: '[PRE670]'
  id: totrans-1243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE670]'
- en: '[PRE671]'
  id: totrans-1244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE671]'
- en: '[PRE672]'
  id: totrans-1245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE672]'
- en: Computes polynomial GCD of \(f\) and \(g\) in \(K[X]\).
  id: totrans-1246
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(K[X]\) 中计算多项式 \(f\) 和 \(g\) 的最大公约数。
- en: Examples
  id: totrans-1247
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE673]'
  id: totrans-1248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE673]'
- en: '[PRE674]'
  id: totrans-1249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE674]'
- en: '[PRE675]'
  id: totrans-1250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE675]'
- en: '[PRE676]'
  id: totrans-1251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE676]'
- en: Computes polynomial LCM of \(f\) and \(g\) in \(K[X]\).
  id: totrans-1252
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 \(K[X]\) 中多项式 \(f\) 和 \(g\) 的最小公倍数。
- en: Examples
  id: totrans-1253
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE677]'
  id: totrans-1254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE677]'
- en: '[PRE678]'
  id: totrans-1255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE678]'
- en: '[PRE679]'
  id: totrans-1256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE679]'
- en: '[PRE680]'
  id: totrans-1257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE680]'
- en: Returns GCD of multivariate coefficients.
  id: totrans-1258
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多变量系数的最大公约数。
- en: Examples
  id: totrans-1259
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE681]'
  id: totrans-1260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE681]'
- en: '[PRE682]'
  id: totrans-1261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE682]'
- en: '[PRE683]'
  id: totrans-1262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE683]'
- en: Returns multivariate content and a primitive polynomial.
  id: totrans-1263
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多变量内容和原始多项式。
- en: Examples
  id: totrans-1264
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE684]'
  id: totrans-1265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE684]'
- en: '[PRE685]'
  id: totrans-1266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE685]'
- en: '[PRE686]'
  id: totrans-1267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE686]'
- en: Cancel common factors in a rational function \(f/g\).
  id: totrans-1268
  prefs: []
  type: TYPE_NORMAL
  zh: 取消有理函数 \(f/g\) 中的公因子。
- en: Examples
  id: totrans-1269
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE687]'
  id: totrans-1270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE687]'
- en: '[PRE688]'
  id: totrans-1271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE688]'
- en: 'Polynomial factorization in characteristic zero:'
  id: totrans-1272
  prefs: []
  type: TYPE_NORMAL
  zh: 零特征下的多项式因子化：
- en: '[PRE689]'
  id: totrans-1273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE689]'
- en: Determine multiplicities of factors for a univariate polynomial using trial
    division.
  id: totrans-1274
  prefs: []
  type: TYPE_NORMAL
  zh: 使用试除法确定单变量多项式的因子重数。
- en: An error will be raised if any factor does not divide `f`.
  id: totrans-1275
  prefs: []
  type: TYPE_NORMAL
  zh: 如果任何因子不除 `f`，将引发错误。
- en: '[PRE690]'
  id: totrans-1276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE690]'
- en: Determine multiplicities of factors for a multivariate polynomial using trial
    division.
  id: totrans-1277
  prefs: []
  type: TYPE_NORMAL
  zh: 使用试除法确定多变量多项式的因子重数。
- en: An error will be raised if any factor does not divide `f`.
  id: totrans-1278
  prefs: []
  type: TYPE_NORMAL
  zh: 如果任何因子不除 `f`，将引发错误。
- en: '[PRE691]'
  id: totrans-1279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE691]'
- en: The Knuth-Cohen variant of Mignotte bound for univariate polynomials in `K[x]`.
  id: totrans-1280
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `K[x]` 中，Knuth-Cohen变体的单变量多项式的Mignotte界。
- en: Examples
  id: totrans-1281
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE692]'
  id: totrans-1282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE692]'
- en: '[PRE693]'
  id: totrans-1283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE693]'
- en: By checking `factor(f)` we can see that max coeff is 8
  id: totrans-1284
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查 `factor(f)`，我们可以看到最大系数为8。
- en: Also consider a case that `f` is irreducible for example `f = 2*x**2 + 3*x +
    4`. To avoid a bug for these cases, we return the bound plus the max coefficient
    of `f`
  id: totrans-1285
  prefs: []
  type: TYPE_NORMAL
  zh: 也考虑 `f` 是不可约的情况，例如 `f = 2*x**2 + 3*x + 4`。为了避免这些情况下的错误，我们返回界限以及 `f` 的最大系数。
- en: '[PRE694]'
  id: totrans-1286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE694]'
- en: 'Lastly, to see the difference between the new and the old Mignotte bound consider
    the irreducible polynomial:'
  id: totrans-1287
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了查看新旧Mignotte界的区别，请考虑不可约多项式：
- en: '[PRE695]'
  id: totrans-1288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE695]'
- en: The new Mignotte bound is 744 whereas the old one (SymPy 1.5.1) is 1937664.
  id: totrans-1289
  prefs: []
  type: TYPE_NORMAL
  zh: 新的Mignotte界为744，而旧的（SymPy 1.5.1）为1937664。
- en: References
  id: totrans-1290
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: ..[1] [[Abbott13]](literature.html#abbott13)
  id: totrans-1291
  prefs: []
  type: TYPE_NORMAL
  zh: ..[1] [[Abbott13]](literature.html#abbott13)
- en: '[PRE696]'
  id: totrans-1292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE696]'
- en: Mignotte bound for multivariate polynomials in \(K[X]\).
  id: totrans-1293
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(K[X]\) 中多变量多项式的Mignotte界。
- en: '[PRE697]'
  id: totrans-1294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE697]'
- en: One step in Hensel lifting in \(Z[x]\).
  id: totrans-1295
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(Z[x]\) 中的Hensel提升的一个步骤。
- en: 'Given positive integer \(m\) and \(Z[x]\) polynomials \(f\), \(g\), \(h\),
    \(s\) and \(t\) such that:'
  id: totrans-1296
  prefs: []
  type: TYPE_NORMAL
  zh: 给定正整数 \(m\) 和 \(Z[x]\) 多项式 \(f\), \(g\), \(h\), \(s\) 和 \(t\)，使得：
- en: '[PRE698]'
  id: totrans-1297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE698]'
- en: 'returns polynomials \(G\), \(H\), \(S\) and \(T\), such that:'
  id: totrans-1298
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多项式 \(G\), \(H\), \(S\) 和 \(T\)，使得：
- en: '[PRE699]'
  id: totrans-1299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE699]'
- en: References
  id: totrans-1300
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R794](#id22)]'
  id: totrans-1301
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R794](#id22)]'
- en: '[[Gathen99]](literature.html#gathen99)'
  id: totrans-1302
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen99]](literature.html#gathen99)'
- en: '[PRE700]'
  id: totrans-1303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE700]'
- en: Multifactor Hensel lifting in \(Z[x]\).
  id: totrans-1304
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(Z[x]\) 中进行多项式的Hensel提升。
- en: 'Given a prime \(p\), polynomial \(f\) over \(Z[x]\) such that \(lc(f)\) is
    a unit modulo \(p\), monic pair-wise coprime polynomials \(f_i\) over \(Z[x]\)
    satisfying:'
  id: totrans-1305
  prefs: []
  type: TYPE_NORMAL
  zh: 给定素数 \(p\)，在 \(Z[x]\) 上的多项式 \(f\)，使得 \(lc(f)\) 在模 \(p\) 时是单位，且在 \(Z[x]\) 上满足互质的单项式：
- en: '[PRE701]'
  id: totrans-1306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE701]'
- en: 'and a positive integer \(l\), returns a list of monic polynomials \(F_1,\ F_2,\
    \dots,\ F_r\) satisfying:'
  id: totrans-1307
  prefs: []
  type: TYPE_NORMAL
  zh: 和正整数 \(l\)，返回满足条件的单变量多项式 \(F_1,\ F_2,\ \dots,\ F_r\) 的单项式多项式列表：
- en: '[PRE702]'
  id: totrans-1308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE702]'
- en: References
  id: totrans-1309
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R795](#id24)]'
  id: totrans-1310
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R795](#id24)]'
- en: '[[Gathen99]](literature.html#gathen99)'
  id: totrans-1311
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen99]](literature.html#gathen99)'
- en: '[PRE703]'
  id: totrans-1312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE703]'
- en: Factor primitive square-free polynomials in \(Z[x]\).
  id: totrans-1313
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(Z[x]\) 中因子化原始的平方自由多项式。
- en: '[PRE704]'
  id: totrans-1314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE704]'
- en: Test irreducibility using Eisenstein’s criterion.
  id: totrans-1315
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Eisenstein准则测试不可约性。
- en: '[PRE705]'
  id: totrans-1316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE705]'
- en: Efficiently test if `f` is a cyclotomic polynomial.
  id: totrans-1317
  prefs: []
  type: TYPE_NORMAL
  zh: 高效地测试 `f` 是否为旋转多项式。
- en: Examples
  id: totrans-1318
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE706]'
  id: totrans-1319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE706]'
- en: '[PRE707]'
  id: totrans-1320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE707]'
- en: '[PRE708]'
  id: totrans-1321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE708]'
- en: References
  id: totrans-1322
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: Bradford, Russell J., and James H. Davenport. “Effective tests for cyclotomic
    polynomials.” In International Symposium on Symbolic and Algebraic Computation,
    pp. 244-251\. Springer, Berlin, Heidelberg, 1988.
  id: totrans-1323
  prefs: []
  type: TYPE_NORMAL
  zh: Bradford, Russell J., and James H. Davenport. “Effective tests for cyclotomic
    polynomials.” In International Symposium on Symbolic and Algebraic Computation,
    pp. 244-251. Springer, Berlin, Heidelberg, 1988.
- en: '[PRE709]'
  id: totrans-1324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE709]'
- en: Efficiently generate n-th cyclotomic polynomial.
  id: totrans-1325
  prefs: []
  type: TYPE_NORMAL
  zh: 高效生成第n个旋多项式。
- en: '[PRE710]'
  id: totrans-1326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE710]'
- en: Efficiently factor polynomials \(x**n - 1\) and \(x**n + 1\) in \(Z[x]\).
  id: totrans-1327
  prefs: []
  type: TYPE_NORMAL
  zh: 高效地在\(Z[x]\)中因式分解多项式\(x**n - 1\)和\(x**n + 1\)。
- en: Given a univariate polynomial \(f\) in \(Z[x]\) returns a list of factors of
    \(f\), provided that \(f\) is in the form \(x**n - 1\) or \(x**n + 1\) for \(n
    >= 1\). Otherwise returns None.
  id: totrans-1328
  prefs: []
  type: TYPE_NORMAL
  zh: 给定\(Z[x]\)中的单变量多项式\(f\)，如果\(f\)为\(x**n - 1\)或\(x**n + 1\)（其中\(n >= 1\)），则返回\(f\)的因子列表。否则返回None。
- en: Factorization is performed using cyclotomic decomposition of \(f\), which makes
    this method much faster that any other direct factorization approach (e.g. Zassenhaus’s).
  id: totrans-1329
  prefs: []
  type: TYPE_NORMAL
  zh: 使用\(f\)的循环分解来执行因式分解，这使得此方法比任何其他直接因式分解方法（例如Zassenhaus的方法）快得多。
- en: References
  id: totrans-1330
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R796](#id26)]'
  id: totrans-1331
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R796](#id26)]'
- en: '[[Weisstein09]](literature.html#weisstein09)'
  id: totrans-1332
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Weisstein09]](literature.html#weisstein09)'
- en: '[PRE711]'
  id: totrans-1333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE711]'
- en: Factor square-free (non-primitive) polynomials in \(Z[x]\).
  id: totrans-1334
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(Z[x]\)中因式分解无平方因子（非原始）多项式。
- en: '[PRE712]'
  id: totrans-1335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE712]'
- en: Factor (non square-free) polynomials in \(Z[x]\).
  id: totrans-1336
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(Z[x]\)中因式分解（非平方自由）多项式。
- en: 'Given a univariate polynomial \(f\) in \(Z[x]\) computes its complete factorization
    \(f_1, ..., f_n\) into irreducibles over integers:'
  id: totrans-1337
  prefs: []
  type: TYPE_NORMAL
  zh: 给定\(Z[x]\)中的单变量多项式\(f\)，计算其在整数上的完全因式分解\(f_1, ..., f_n\)成为不可约多项式：
- en: '[PRE713]'
  id: totrans-1338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE713]'
- en: The factorization is computed by reducing the input polynomial into a primitive
    square-free polynomial and factoring it using Zassenhaus algorithm. Trial division
    is used to recover the multiplicities of factors.
  id: totrans-1339
  prefs: []
  type: TYPE_NORMAL
  zh: 因式分解通过将输入多项式简化为原始无平方多项式，并使用Zassenhaus算法进行因式分解。试除法用于恢复因子的重数。
- en: 'The result is returned as a tuple consisting of:'
  id: totrans-1340
  prefs: []
  type: TYPE_NORMAL
  zh: 结果以元组形式返回：
- en: '[PRE714]'
  id: totrans-1341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE714]'
- en: Examples
  id: totrans-1342
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Consider the polynomial \(f = 2*x**4 - 2\):'
  id: totrans-1343
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑多项式\(f = 2*x**4 - 2\)：
- en: '[PRE715]'
  id: totrans-1344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE715]'
- en: 'In result we got the following factorization:'
  id: totrans-1345
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下进行了因式分解：
- en: '[PRE716]'
  id: totrans-1346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE716]'
- en: Note that this is a complete factorization over integers, however over Gaussian
    integers we can factor the last term.
  id: totrans-1347
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这是对整数的完全因式分解，然而在高斯整数上，我们可以因式分解最后一项。
- en: By default, polynomials \(x**n - 1\) and \(x**n + 1\) are factored using cyclotomic
    decomposition to speedup computations. To disable this behaviour set cyclotomic=False.
  id: totrans-1348
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，多项式\(x**n - 1\)和\(x**n + 1\)使用循环分解进行因式分解以加快计算速度。要禁用此行为，请设置cyclotomic=False。
- en: References
  id: totrans-1349
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R797](#id28)]'
  id: totrans-1350
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R797](#id28)]'
- en: '[[Gathen99]](literature.html#gathen99)'
  id: totrans-1351
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen99]](literature.html#gathen99)'
- en: '[PRE717]'
  id: totrans-1352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE717]'
- en: 'Wang/EEZ: Compute a set of valid divisors.'
  id: totrans-1353
  prefs: []
  type: TYPE_NORMAL
  zh: 'Wang/EEZ: 计算一组有效的除数。'
- en: '[PRE718]'
  id: totrans-1354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE718]'
- en: 'Wang/EEZ: Test evaluation points for suitability.'
  id: totrans-1355
  prefs: []
  type: TYPE_NORMAL
  zh: 'Wang/EEZ: 评估点的测试适用性。'
- en: '[PRE719]'
  id: totrans-1356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE719]'
- en: 'Wang/EEZ: Compute correct leading coefficients.'
  id: totrans-1357
  prefs: []
  type: TYPE_NORMAL
  zh: 'Wang/EEZ: 计算正确的主导系数。'
- en: '[PRE720]'
  id: totrans-1358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE720]'
- en: 'Wang/EEZ: Solve univariate Diophantine equations.'
  id: totrans-1359
  prefs: []
  type: TYPE_NORMAL
  zh: 'Wang/EEZ: 解决单变量丢番图方程。'
- en: '[PRE721]'
  id: totrans-1360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE721]'
- en: 'Wang/EEZ: Solve multivariate Diophantine equations.'
  id: totrans-1361
  prefs: []
  type: TYPE_NORMAL
  zh: 'Wang/EEZ: 解决多变量丢番图方程。'
- en: '[PRE722]'
  id: totrans-1362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE722]'
- en: 'Wang/EEZ: Parallel Hensel lifting algorithm.'
  id: totrans-1363
  prefs: []
  type: TYPE_NORMAL
  zh: 'Wang/EEZ: 并行Hensel提升算法。'
- en: '[PRE723]'
  id: totrans-1364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE723]'
- en: Factor primitive square-free polynomials in \(Z[X]\).
  id: totrans-1365
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(Z[X]\)中因式分解原始的无平方因子多项式。
- en: Given a multivariate polynomial \(f\) in \(Z[x_1,...,x_n]\), which is primitive
    and square-free in \(x_1\), computes factorization of \(f\) into irreducibles
    over integers.
  id: totrans-1366
  prefs: []
  type: TYPE_NORMAL
  zh: 给定\(Z[x_1,...,x_n]\)中的多变量多项式\(f\)，该多项式在\(x_1\)中是原始的且无平方因子，计算\(f\)在整数上的不可约因式分解。
- en: 'The procedure is based on Wang’s Enhanced Extended Zassenhaus algorithm. The
    algorithm works by viewing \(f\) as a univariate polynomial in \(Z[x_2,...,x_n][x_1]\),
    for which an evaluation mapping is computed:'
  id: totrans-1367
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程基于Wang的增强扩展Zassenhaus算法。该算法通过将\(f\)视为\(Z[x_2,...,x_n][x_1]\)中的单变量多项式来运行。
- en: '[PRE724]'
  id: totrans-1368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE724]'
- en: where \(a_i\), for \(i = 2, \dots, n\), are carefully chosen integers. The mapping
    is used to transform \(f\) into a univariate polynomial in \(Z[x_1]\), which can
    be factored efficiently using Zassenhaus algorithm. The last step is to lift univariate
    factors to obtain true multivariate factors. For this purpose a parallel Hensel
    lifting procedure is used.
  id: totrans-1369
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(a_i\), 对于\(i = 2, \dots, n\), 是精心选择的整数。这种映射用于将\(f\)转化为\(Z[x_1]\)中的单变量多项式，可以通过Zassenhaus算法高效地进行因式分解。最后一步是提升单变量因子以获得真正的多变量因子。为此，使用了并行的Hensel提升过程。
- en: The parameter `seed` is passed to _randint and can be used to seed randint (when
    an integer) or (for testing purposes) can be a sequence of numbers.
  id: totrans-1370
  prefs: []
  type: TYPE_NORMAL
  zh: 参数`seed`被传递给_randint，可用于种子randint（当为整数时），或（用于测试目的）可以是一个数字序列。
- en: References
  id: totrans-1371
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R798](#id31)]'
  id: totrans-1372
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R798](#id31)]'
- en: '[[Wang78]](literature.html#wang78)'
  id: totrans-1373
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Wang78]](literature.html#wang78)'
- en: '[[R799](#id32)]'
  id: totrans-1374
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R799](#id32)]'
- en: '[[Geddes92]](literature.html#geddes92)'
  id: totrans-1375
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Geddes92]](literature.html#geddes92)'
- en: '[PRE725]'
  id: totrans-1376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE725]'
- en: Factor (non square-free) polynomials in \(Z[X]\).
  id: totrans-1377
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(Z[X]\)中因式分解（非无平方因子的多项式）。
- en: 'Given a multivariate polynomial \(f\) in \(Z[x]\) computes its complete factorization
    \(f_1, \dots, f_n\) into irreducibles over integers:'
  id: totrans-1378
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个多变量多项式\(f\)在\(Z[x]\)中，计算其在整数上的完全因式分解\(f_1, \dots, f_n\)：
- en: '[PRE726]'
  id: totrans-1379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE726]'
- en: The factorization is computed by reducing the input polynomial into a primitive
    square-free polynomial and factoring it using Enhanced Extended Zassenhaus (EEZ)
    algorithm. Trial division is used to recover the multiplicities of factors.
  id: totrans-1380
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将输入多项式化简为原始无平方因子多项式，并使用增强的扩展Zassenhaus（EEZ）算法进行因式分解。试除法用于恢复因子的重数。
- en: 'The result is returned as a tuple consisting of:'
  id: totrans-1381
  prefs: []
  type: TYPE_NORMAL
  zh: 结果作为一个元组返回：
- en: '[PRE727]'
  id: totrans-1382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE727]'
- en: 'Consider polynomial \(f = 2*(x**2 - y**2)\):'
  id: totrans-1383
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑多项式\(f = 2*(x**2 - y**2)\)：
- en: '[PRE728]'
  id: totrans-1384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE728]'
- en: 'In result we got the following factorization:'
  id: totrans-1385
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下所示的因式分解：
- en: '[PRE729]'
  id: totrans-1386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE729]'
- en: References
  id: totrans-1387
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R800](#id34)]'
  id: totrans-1388
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R800](#id34)]'
- en: '[[Gathen99]](literature.html#gathen99)'
  id: totrans-1389
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Gathen99]](literature.html#gathen99)'
- en: '[PRE730]'
  id: totrans-1390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE730]'
- en: Factor univariate polynomials into irreducibles in \(QQ_I[x]\).
  id: totrans-1391
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(QQ_I[x]\)中将一元多项式分解为不可约因式。
- en: '[PRE731]'
  id: totrans-1392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE731]'
- en: Factor univariate polynomials into irreducibles in \(ZZ_I[x]\).
  id: totrans-1393
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(ZZ_I[x]\)中将一元多项式分解为不可约因式。
- en: '[PRE732]'
  id: totrans-1394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE732]'
- en: Factor multivariate polynomials into irreducibles in \(QQ_I[X]\).
  id: totrans-1395
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(QQ_I[X]\)中将多变量多项式分解为不可约因式。
- en: '[PRE733]'
  id: totrans-1396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE733]'
- en: Factor multivariate polynomials into irreducibles in \(ZZ_I[X]\).
  id: totrans-1397
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(ZZ_I[X]\)中将多变量多项式分解为不可约因式。
- en: '[PRE734]'
  id: totrans-1398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE734]'
- en: Factor univariate polynomials over algebraic number fields.
  id: totrans-1399
  prefs: []
  type: TYPE_NORMAL
  zh: 在代数数域上将一元多项式分解为不可约因式。
- en: The domain \(K\) must be an algebraic number field \(k(a)\) (see [QQ<a>](domainsref.html#qq-a)).
  id: totrans-1400
  prefs: []
  type: TYPE_NORMAL
  zh: 域\(K\)必须是代数数域\(k(a)\)（参见[QQ<a>](domainsref.html#qq-a)）。
- en: Examples
  id: totrans-1401
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: 'First define the algebraic number field \(K = \mathbb{Q}(\sqrt{2})\):'
  id: totrans-1402
  prefs: []
  type: TYPE_NORMAL
  zh: 首先定义代数数域\(K = \mathbb{Q}(\sqrt{2})\)：
- en: '[PRE735]'
  id: totrans-1403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE735]'
- en: 'We can now factorise the polynomial \(x^2 - 2\) over \(K\):'
  id: totrans-1404
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在\(K\)上对多项式\(x^2 - 2\)进行因式分解：
- en: '[PRE736]'
  id: totrans-1405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE736]'
- en: 'Usually this would be done at a higher level:'
  id: totrans-1406
  prefs: []
  type: TYPE_NORMAL
  zh: 通常这将在更高的层次上完成：
- en: '[PRE737]'
  id: totrans-1407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE737]'
- en: Explanation
  id: totrans-1408
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Uses Trager’s algorithm. In particular this function is algorithm `alg_factor`
    from [[Trager76]](literature.html#trager76).
  id: totrans-1409
  prefs: []
  type: TYPE_NORMAL
  zh: 使用了特拉格尔的算法。特别是这个函数是来自[[Trager76]](literature.html#trager76)的算法`alg_factor`。
- en: If \(f\) is a polynomial in \(k(a)[x]\) then its norm \(g(x)\) is a polynomial
    in \(k[x]\). If \(g(x)\) is square-free and has irreducible factors \(g_1(x)\),
    \(g_2(x)\), \(\cdots\) then the irreducible factors of \(f\) in \(k(a)[x]\) are
    given by \(f_i(x) = \gcd(f(x), g_i(x))\) where the GCD is computed in \(k(a)[x]\).
  id: totrans-1410
  prefs: []
  type: TYPE_NORMAL
  zh: 如果\(f\)是\(k(a)[x]\)中的多项式，则其范数\(g(x)\)是\(k[x]\)中的多项式。如果\(g(x)\)是无平方因子且具有不可约因子\(g_1(x)\)、\(g_2(x)\)、\(\cdots\)，则\(f\)在\(k(a)[x]\)中的不可约因子由\(f_i(x)
    = \gcd(f(x), g_i(x))\)给出，其中GCD在\(k(a)[x]\)中计算。
- en: The first step in Trager’s algorithm is to find an integer shift \(s\) so that
    \(f(x-sa)\) has square-free norm. Then the norm is factorized in \(k[x]\) and
    the GCD of (shifted) \(f\) with each factor gives the shifted factors of \(f\).
    At the end the shift is undone to recover the unshifted factors of \(f\) in \(k(a)[x]\).
  id: totrans-1411
  prefs: []
  type: TYPE_NORMAL
  zh: 特拉格尔算法的第一步是找到整数偏移\(s\)，使得\(f(x-sa)\)具有无平方因子的范数。然后在\(k[x]\)中对范数进行因式分解，并且与每个因子的（偏移后的）\(f\)的GCD给出\(f\)在\(k(a)[x]\)中的偏移后因子。最后取消偏移以恢复\(f\)在\(k(a)[x]\)中的未偏移因子。
- en: The algorithm reduces the problem of factorization in \(k(a)[x]\) to factorization
    in \(k[x]\) with the main additional steps being to compute the norm (a resultant
    calculation in \(k[x,y]\)) and some polynomial GCDs in \(k(a)[x]\).
  id: totrans-1412
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法将\(k(a)[x]\)中的因式分解问题化简为在\(k[x]\)中的因式分解，主要额外步骤包括计算范数（在\(k[x,y]\)中的结果计算）和在\(k(a)[x]\)中的一些多项式GCD。
- en: In practice in SymPy the base field \(k\) will be the rationals [QQ](domainsref.html#qq)
    and this function factorizes a polynomial with coefficients in an algebraic number
    field like \(\mathbb{Q}(\sqrt{2})\).
  id: totrans-1413
  prefs: []
  type: TYPE_NORMAL
  zh: 在SymPy的实践中，基础域\(k\)通常是有理数域[QQ](domainsref.html#qq)，而此函数用于将系数在类似于\(\mathbb{Q}(\sqrt{2})\)的代数数域中的多项式进行因式分解。
- en: See also
  id: totrans-1414
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`dmp_ext_factor`](#sympy.polys.factortools.dmp_ext_factor "sympy.polys.factortools.dmp_ext_factor")'
  id: totrans-1415
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dmp_ext_factor`](#sympy.polys.factortools.dmp_ext_factor "sympy.polys.factortools.dmp_ext_factor")'
- en: Analogous function for multivariate polynomials over `k(a)`.
  id: totrans-1416
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量多项式在`k(a)`上的类似函数。
- en: '[`dup_sqf_norm`](#sympy.polys.sqfreetools.dup_sqf_norm "sympy.polys.sqfreetools.dup_sqf_norm")'
  id: totrans-1417
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dup_sqf_norm`](#sympy.polys.sqfreetools.dup_sqf_norm "sympy.polys.sqfreetools.dup_sqf_norm")'
- en: Subroutine `sqfr_norm` also from [[Trager76]](literature.html#trager76).
  id: totrans-1418
  prefs: []
  type: TYPE_NORMAL
  zh: 来自[[Trager76]](literature.html#trager76)的子程序`sqfr_norm`。
- en: '[`sympy.polys.polytools.factor`](reference.html#sympy.polys.polytools.factor
    "sympy.polys.polytools.factor")'
  id: totrans-1419
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.factor`](reference.html#sympy.polys.polytools.factor
    "sympy.polys.polytools.factor")'
- en: The high-level function that ultimately uses this function as needed.
  id: totrans-1420
  prefs: []
  type: TYPE_NORMAL
  zh: 最终使用此函数所需的高层函数。
- en: '[PRE738]'
  id: totrans-1421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE738]'
- en: Factor multivariate polynomials over algebraic number fields.
  id: totrans-1422
  prefs: []
  type: TYPE_NORMAL
  zh: 在代数数域上将多变元多项式因式分解为不可约多项式。
- en: The domain \(K\) must be an algebraic number field \(k(a)\) (see [QQ<a>](domainsref.html#qq-a)).
  id: totrans-1423
  prefs: []
  type: TYPE_NORMAL
  zh: 域 \(K\) 必须是代数数域 \(k(a)\)（见 [QQ<a>](domainsref.html#qq-a)）。
- en: Examples
  id: totrans-1424
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: 'First define the algebraic number field \(K = \mathbb{Q}(\sqrt{2})\):'
  id: totrans-1425
  prefs: []
  type: TYPE_NORMAL
  zh: 首先定义代数数域 \(K = \mathbb{Q}(\sqrt{2})\)：
- en: '[PRE739]'
  id: totrans-1426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE739]'
- en: 'We can now factorise the polynomial \(x^2 y^2 - 2\) over \(K\):'
  id: totrans-1427
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在 \(K\) 上因式分解多元多项式 \(x^2 y^2 - 2\)：
- en: '[PRE740]'
  id: totrans-1428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE740]'
- en: 'Usually this would be done at a higher level:'
  id: totrans-1429
  prefs: []
  type: TYPE_NORMAL
  zh: 通常这在更高层次上完成：
- en: '[PRE741]'
  id: totrans-1430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE741]'
- en: Explanation
  id: totrans-1431
  prefs: []
  type: TYPE_NORMAL
  zh: 解释：
- en: This is Trager’s algorithm for multivariate polynomials. In particular this
    function is algorithm `alg_factor` from [[Trager76]](literature.html#trager76).
  id: totrans-1432
  prefs: []
  type: TYPE_NORMAL
  zh: 这是特拉格尔（Trager）的多变元多项式算法。特别地，此函数是来自[[Trager76]](literature.html#trager76)的算法
    `alg_factor`。
- en: See [`dup_ext_factor()`](#sympy.polys.factortools.dup_ext_factor "sympy.polys.factortools.dup_ext_factor")
    for explanation.
  id: totrans-1433
  prefs: []
  type: TYPE_NORMAL
  zh: 详见 [`dup_ext_factor()`](#sympy.polys.factortools.dup_ext_factor "sympy.polys.factortools.dup_ext_factor")
    进行解释。
- en: See also
  id: totrans-1434
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见：
- en: '[`dup_ext_factor`](#sympy.polys.factortools.dup_ext_factor "sympy.polys.factortools.dup_ext_factor")'
  id: totrans-1435
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dup_ext_factor`](#sympy.polys.factortools.dup_ext_factor "sympy.polys.factortools.dup_ext_factor")'
- en: Analogous function for univariate polynomials over `k(a)`.
  id: totrans-1436
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一元多项式在 `k(a)` 上的类似函数。
- en: '[`dmp_sqf_norm`](#sympy.polys.sqfreetools.dmp_sqf_norm "sympy.polys.sqfreetools.dmp_sqf_norm")'
  id: totrans-1437
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dmp_sqf_norm`](#sympy.polys.sqfreetools.dmp_sqf_norm "sympy.polys.sqfreetools.dmp_sqf_norm")'
- en: Multivariate version of subroutine `sqfr_norm` also from [[Trager76]](literature.html#trager76).
  id: totrans-1438
  prefs: []
  type: TYPE_NORMAL
  zh: 从[[Trager76]](literature.html#trager76)也是多变元多项式的 `sqfr_norm` 子程序的多变元版本。
- en: '[`sympy.polys.polytools.factor`](reference.html#sympy.polys.polytools.factor
    "sympy.polys.polytools.factor")'
  id: totrans-1439
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.factor`](reference.html#sympy.polys.polytools.factor
    "sympy.polys.polytools.factor")'
- en: The high-level function that ultimately uses this function as needed.
  id: totrans-1440
  prefs: []
  type: TYPE_NORMAL
  zh: 最终使用此函数所需的高层函数。
- en: '[PRE742]'
  id: totrans-1441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE742]'
- en: Factor univariate polynomials over finite fields.
  id: totrans-1442
  prefs: []
  type: TYPE_NORMAL
  zh: 在有限域上分解一元多项式。
- en: '[PRE743]'
  id: totrans-1443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE743]'
- en: Factor multivariate polynomials over finite fields.
  id: totrans-1444
  prefs: []
  type: TYPE_NORMAL
  zh: 在有限域上将多变元多项式因式分解。
- en: '[PRE744]'
  id: totrans-1445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE744]'
- en: Factor univariate polynomials into irreducibles in \(K[x]\).
  id: totrans-1446
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(K[x]\) 中将一元多项式因式分解为不可约的多项式。
- en: '[PRE745]'
  id: totrans-1447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE745]'
- en: Factor univariate polynomials into irreducibles in \(K[x]\).
  id: totrans-1448
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(K[x]\) 中将一元多项式因式分解为不可约的多项式。
- en: '[PRE746]'
  id: totrans-1449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE746]'
- en: Factor multivariate polynomials into irreducibles in \(K[X]\).
  id: totrans-1450
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(K[X]\) 中将多变元多项式因式分解为不可约多项式。
- en: '[PRE747]'
  id: totrans-1451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE747]'
- en: Factor multivariate polynomials into irreducibles in \(K[X]\).
  id: totrans-1452
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(K[X]\) 中将多变元多项式因式分解为不可约多项式。
- en: '[PRE748]'
  id: totrans-1453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE748]'
- en: Returns `True` if a univariate polynomial `f` has no factors over its domain.
  id: totrans-1454
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一元多项式 `f` 在其域上没有因子，则返回 `True`。
- en: '[PRE749]'
  id: totrans-1455
  prefs: []
  type: TYPE_PRE
  zh: '[PRE749]'
- en: Returns `True` if a multivariate polynomial `f` has no factors over its domain.
  id: totrans-1456
  prefs: []
  type: TYPE_NORMAL
  zh: 如果多变元多项式 `f` 在其域上没有因子，则返回 `True`。
- en: 'Square-free factorization:'
  id: totrans-1457
  prefs: []
  type: TYPE_NORMAL
  zh: 平方因子分解：
- en: '[PRE750]'
  id: totrans-1458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE750]'
- en: Return `True` if `f` is a square-free polynomial in `K[x]`.
  id: totrans-1459
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是在 `K[x]` 中的平方自由多项式，则返回 `True`。
- en: Examples
  id: totrans-1460
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE751]'
  id: totrans-1461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE751]'
- en: '[PRE752]'
  id: totrans-1462
  prefs: []
  type: TYPE_PRE
  zh: '[PRE752]'
- en: '[PRE753]'
  id: totrans-1463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE753]'
- en: Return `True` if `f` is a square-free polynomial in `K[X]`.
  id: totrans-1464
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 是在 `K[X]` 中的平方自由多项式，则返回 `True`。
- en: Examples
  id: totrans-1465
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE754]'
  id: totrans-1466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE754]'
- en: '[PRE755]'
  id: totrans-1467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE755]'
- en: '[PRE756]'
  id: totrans-1468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE756]'
- en: Find a shift of \(f\) in \(K[x]\) that has square-free norm.
  id: totrans-1469
  prefs: []
  type: TYPE_NORMAL
  zh: 在 \(K[x]\) 中找到一个使得 \(f\) 的移位具有平方自由规范。
- en: The domain \(K\) must be an algebraic number field \(k(a)\) (see [QQ<a>](domainsref.html#qq-a)).
  id: totrans-1470
  prefs: []
  type: TYPE_NORMAL
  zh: 域 \(K\) 必须是代数数域 \(k(a)\)（见 [QQ<a>](domainsref.html#qq-a)）。
- en: Returns \((s,g,r)\), such that \(g(x)=f(x-sa)\), \(r(x)=\text{Norm}(g(x))\)
    and \(r\) is a square-free polynomial over \(k\).
  id: totrans-1471
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \((s,g,r)\)，使得 \(g(x)=f(x-sa)\)，\(r(x)=\text{Norm}(g(x))\) 并且 \(r\) 是在 \(k\)
    上的平方自由多项式。
- en: Examples
  id: totrans-1472
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: 'We first create the algebraic number field \(K=k(a)=\mathbb{Q}(\sqrt{3})\)
    and rings \(K[x]\) and \(k[x]\):'
  id: totrans-1473
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们创建代数数域 \(K=k(a)=\mathbb{Q}(\sqrt{3})\) 和环 \(K[x]\) 以及 \(k[x]\)：
- en: '[PRE757]'
  id: totrans-1474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE757]'
- en: '[PRE758]'
  id: totrans-1475
  prefs: []
  type: TYPE_PRE
  zh: '[PRE758]'
- en: 'We can now find a square free norm for a shift of \(f\):'
  id: totrans-1476
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以找到 \(f\) 的一个平方自由规范的移位：
- en: '[PRE759]'
  id: totrans-1477
  prefs: []
  type: TYPE_PRE
  zh: '[PRE759]'
- en: The choice of shift \(s\) is arbitrary and the particular values returned for
    \(g\) and \(r\) are determined by \(s\).
  id: totrans-1478
  prefs: []
  type: TYPE_NORMAL
  zh: 移位 \(s\) 的选择是任意的，并且返回的 \(g\) 和 \(r\) 的具体值由 \(s\) 决定。
- en: '[PRE760]'
  id: totrans-1479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE760]'
- en: 'The invariants are:'
  id: totrans-1480
  prefs: []
  type: TYPE_NORMAL
  zh: 不变量是：
- en: '[PRE761]'
  id: totrans-1481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE761]'
- en: Explanation
  id: totrans-1482
  prefs: []
  type: TYPE_NORMAL
  zh: 解释：
- en: This is part of Trager’s algorithm for factorizing polynomials over algebraic
    number fields. In particular this function is algorithm `sqfr_norm` from [[Trager76]](literature.html#trager76).
  id: totrans-1483
  prefs: []
  type: TYPE_NORMAL
  zh: 这是特拉格尔（Trager）的多变元多项式因式分解算法的一部分。特别地，此函数是来自[[Trager76]](literature.html#trager76)的算法
    `sqfr_norm`。
- en: See also
  id: totrans-1484
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见：
- en: '[`dmp_sqf_norm`](#sympy.polys.sqfreetools.dmp_sqf_norm "sympy.polys.sqfreetools.dmp_sqf_norm")'
  id: totrans-1485
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dmp_sqf_norm`](#sympy.polys.sqfreetools.dmp_sqf_norm "sympy.polys.sqfreetools.dmp_sqf_norm")'
- en: Analogous function for multivariate polynomials over `k(a)`.
  id: totrans-1486
  prefs: []
  type: TYPE_NORMAL
  zh: 对于多变元多项式在 `k(a)` 上的类似函数。
- en: '[`dmp_norm`](#sympy.polys.sqfreetools.dmp_norm "sympy.polys.sqfreetools.dmp_norm")'
  id: totrans-1487
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dmp_norm`](#sympy.polys.sqfreetools.dmp_norm "sympy.polys.sqfreetools.dmp_norm")'
- en: Computes the norm of \(f\) directly without any shift.
  id: totrans-1488
  prefs: []
  type: TYPE_NORMAL
  zh: 直接计算\(f\)的范数，不需要任何偏移。
- en: '[`dup_ext_factor`](#sympy.polys.factortools.dup_ext_factor "sympy.polys.factortools.dup_ext_factor")'
  id: totrans-1489
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dup_ext_factor`](#sympy.polys.factortools.dup_ext_factor "sympy.polys.factortools.dup_ext_factor")'
- en: Function implementing Trager’s algorithm that uses this.
  id: totrans-1490
  prefs: []
  type: TYPE_NORMAL
  zh: 实现了使用Trager算法的函数。
- en: '[`sympy.polys.polytools.sqf_norm`](reference.html#sympy.polys.polytools.sqf_norm
    "sympy.polys.polytools.sqf_norm")'
  id: totrans-1491
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.sqf_norm`](reference.html#sympy.polys.polytools.sqf_norm
    "sympy.polys.polytools.sqf_norm")'
- en: High-level interface for using this function.
  id: totrans-1492
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此函数的高级接口。
- en: '[PRE762]'
  id: totrans-1493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE762]'
- en: Find a shift of `f` in `K[X]` that has square-free norm.
  id: totrans-1494
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(K[X]\)中找到`f`的偏移，使其具有无平方项范数。
- en: The domain \(K\) must be an algebraic number field \(k(a)\) (see [QQ<a>](domainsref.html#qq-a)).
  id: totrans-1495
  prefs: []
  type: TYPE_NORMAL
  zh: 域\(K\)必须是代数数域\(k(a)\)（见[QQ<a>](domainsref.html#qq-a)）。
- en: Returns \((s,g,r)\), such that \(g(x_1,x_2,\cdots)=f(x_1-s_1 a, x_2 - s_2 a,
    \cdots)\), \(r(x)=\text{Norm}(g(x))\) and \(r\) is a square-free polynomial over
    \(k\).
  id: totrans-1496
  prefs: []
  type: TYPE_NORMAL
  zh: 返回\((s,g,r)\)，使得\(g(x_1,x_2,\cdots)=f(x_1-s_1 a, x_2 - s_2 a, \cdots)\)，\(r(x)=\text{Norm}(g(x))\)且\(r\)是\(k\)上的无平方项多项式。
- en: Examples
  id: totrans-1497
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'We first create the algebraic number field \(K=k(a)=\mathbb{Q}(i)\) and rings
    \(K[x,y]\) and \(k[x,y]\):'
  id: totrans-1498
  prefs: []
  type: TYPE_NORMAL
  zh: 首先我们创建代数数域\(K=k(a)=\mathbb{Q}(i)\)和环\(K[x,y]\)以及\(k[x,y]\)：
- en: '[PRE763]'
  id: totrans-1499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE763]'
- en: '[PRE764]'
  id: totrans-1500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE764]'
- en: 'We can now find a square free norm for a shift of \(f\):'
  id: totrans-1501
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以找到\(f\)的偏移的无平方项范数：
- en: '[PRE765]'
  id: totrans-1502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE765]'
- en: The choice of shifts `s` is arbitrary and the particular values returned for
    `g` and `r` are determined by `s`.
  id: totrans-1503
  prefs: []
  type: TYPE_NORMAL
  zh: 选择的偏移`s`是任意的，而返回的具体值`g`和`r`由`s`确定。
- en: '[PRE766]'
  id: totrans-1504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE766]'
- en: 'The required invariants are:'
  id: totrans-1505
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的不变量是：
- en: '[PRE767]'
  id: totrans-1506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE767]'
- en: Explanation
  id: totrans-1507
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This is part of Trager’s algorithm for factorizing polynomials over algebraic
    number fields. In particular this function is a multivariate generalization of
    algorithm `sqfr_norm` from [[Trager76]](literature.html#trager76).
  id: totrans-1508
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Trager多项式在代数数域上因式分解的一部分。特别地，这个函数是算法`sqfr_norm`从[[Trager76]](literature.html#trager76)的多变量泛化。
- en: See also
  id: totrans-1509
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`dup_sqf_norm`](#sympy.polys.sqfreetools.dup_sqf_norm "sympy.polys.sqfreetools.dup_sqf_norm")'
  id: totrans-1510
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dup_sqf_norm`](#sympy.polys.sqfreetools.dup_sqf_norm "sympy.polys.sqfreetools.dup_sqf_norm")'
- en: Analogous function for univariate polynomials over `k(a)`.
  id: totrans-1511
  prefs: []
  type: TYPE_NORMAL
  zh: 单变量多项式在`k(a)`上的类似函数。
- en: '[`dmp_norm`](#sympy.polys.sqfreetools.dmp_norm "sympy.polys.sqfreetools.dmp_norm")'
  id: totrans-1512
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dmp_norm`](#sympy.polys.sqfreetools.dmp_norm "sympy.polys.sqfreetools.dmp_norm")'
- en: Computes the norm of \(f\) directly without any shift.
  id: totrans-1513
  prefs: []
  type: TYPE_NORMAL
  zh: 直接计算\(f\)的范数，不需要任何偏移。
- en: '[`dmp_ext_factor`](#sympy.polys.factortools.dmp_ext_factor "sympy.polys.factortools.dmp_ext_factor")'
  id: totrans-1514
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dmp_ext_factor`](#sympy.polys.factortools.dmp_ext_factor "sympy.polys.factortools.dmp_ext_factor")'
- en: Function implementing Trager’s algorithm that uses this.
  id: totrans-1515
  prefs: []
  type: TYPE_NORMAL
  zh: 实现了使用Trager算法的函数。
- en: '[`sympy.polys.polytools.sqf_norm`](reference.html#sympy.polys.polytools.sqf_norm
    "sympy.polys.polytools.sqf_norm")'
  id: totrans-1516
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.sqf_norm`](reference.html#sympy.polys.polytools.sqf_norm
    "sympy.polys.polytools.sqf_norm")'
- en: High-level interface for using this function.
  id: totrans-1517
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此函数的高级接口。
- en: '[PRE768]'
  id: totrans-1518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE768]'
- en: Norm of `f` in `K[X]`, often not square-free.
  id: totrans-1519
  prefs: []
  type: TYPE_NORMAL
  zh: \(K[X]\)中`f`的范数，通常不是无平方项的。
- en: The domain \(K\) must be an algebraic number field \(k(a)\) (see [QQ<a>](domainsref.html#qq-a)).
  id: totrans-1520
  prefs: []
  type: TYPE_NORMAL
  zh: 域\(K\)必须是代数数域\(k(a)\)（见[QQ<a>](domainsref.html#qq-a)）。
- en: Examples
  id: totrans-1521
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'We first define the algebraic number field \(K = k(a) = \mathbb{Q}(\sqrt{2})\):'
  id: totrans-1522
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先定义代数数域\(K = k(a) = \mathbb{Q}(\sqrt{2})\)：
- en: '[PRE769]'
  id: totrans-1523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE769]'
- en: 'We can now compute the norm of a polynomial \(p\) in \(K[x,y]\):'
  id: totrans-1524
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以计算多项式\(p\)在\(K[x,y]\)中的范数：
- en: '[PRE770]'
  id: totrans-1525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE770]'
- en: 'In higher level functions that is:'
  id: totrans-1526
  prefs: []
  type: TYPE_NORMAL
  zh: 在更高级的函数中是：
- en: '[PRE771]'
  id: totrans-1527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE771]'
- en: 'This is equal to the product of the expressions \(x + y + a_i\) where the \(a_i\)
    are the conjugates of \(a\):'
  id: totrans-1528
  prefs: []
  type: TYPE_NORMAL
  zh: 这等于表达式的乘积\(x + y + a_i\)，其中\(a_i\)是\(a\)的共轭：
- en: '[PRE772]'
  id: totrans-1529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE772]'
- en: Explanation
  id: totrans-1530
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Given an algebraic number field \(K = k(a)\) any element \(b\) of \(K\) can
    be represented as polynomial function \(b=g(a)\) where \(g\) is in \(k[x]\). If
    the minimal polynomial of \(a\) over \(k\) is \(p_a\) then the roots \(a_1\),
    \(a_2\), \(\cdots\) of \(p_a(x)\) are the conjugates of \(a\). The norm of \(b\)
    is the product \(g(a1) \times g(a2) \times \cdots\) and is an element of \(k\).
  id: totrans-1531
  prefs: []
  type: TYPE_NORMAL
  zh: 给定代数数域\(K = k(a)\)，任何\(K\)中的元素\(b\)可以表示为多项式函数\(b=g(a)\)，其中\(g\)在\(k[x]\)中。如果\(a\)在\(k\)上的极小多项式是\(p_a\)，那么\(p_a(x)\)的根\(a_1\)、\(a_2\)、\(\cdots\)是\(a\)的共轭。\(b\)的范数是乘积\(g(a1)
    \times g(a2) \times \cdots\)，是\(k\)中的一个元素。
- en: As in [[Trager76]](literature.html#trager76) we extend this norm to multivariate
    polynomials over \(K\). If \(b(x)\) is a polynomial in \(k(a)[X]\) then we can
    think of \(b\) as being alternately a function \(g_X(a)\) where \(g_X\) is an
    element of \(k[X][y]\) i.e. a polynomial function with coefficients that are elements
    of \(k[X]\). Then the norm of \(b\) is the product \(g_X(a1) \times g_X(a2) \times
    \cdots\) and will be an element of \(k[X]\).
  id: totrans-1532
  prefs: []
  type: TYPE_NORMAL
  zh: 如 [[Trager76]](literature.html#trager76)，我们将此范数扩展到 \(K\) 上的多变量多项式。如果 \(b(x)\)
    是 \(k(a)[X]\) 中的多项式，则我们可以将 \(b\) 视为函数 \(g_X(a)\)，其中 \(g_X\) 是 \(k[X][y]\) 的元素，即具有
    \(k[X]\) 元素作为系数的多项式函数。然后 \(b\) 的范数是 \(g_X(a1) \times g_X(a2) \times \cdots\)，并且将是
    \(k[X]\) 的元素。
- en: See also
  id: totrans-1533
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`dmp_sqf_norm`](#sympy.polys.sqfreetools.dmp_sqf_norm "sympy.polys.sqfreetools.dmp_sqf_norm")'
  id: totrans-1534
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dmp_sqf_norm`](#sympy.polys.sqfreetools.dmp_sqf_norm "sympy.polys.sqfreetools.dmp_sqf_norm")'
- en: Compute a shift of \(f\) so that the \(\text{Norm}(f)\) is square-free.
  id: totrans-1535
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 \(f\) 的移位，使得 \(\text{Norm}(f)\) 是无平方因子的。
- en: '[`sympy.polys.polytools.Poly.norm`](reference.html#sympy.polys.polytools.Poly.norm
    "sympy.polys.polytools.Poly.norm")'
  id: totrans-1536
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.Poly.norm`](reference.html#sympy.polys.polytools.Poly.norm
    "sympy.polys.polytools.Poly.norm")'
- en: Higher-level function that calls this.
  id: totrans-1537
  prefs: []
  type: TYPE_NORMAL
  zh: 调用此函数的高级函数。
- en: '[PRE773]'
  id: totrans-1538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE773]'
- en: Compute square-free part of `f` in `GF(p)[x]`.
  id: totrans-1539
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `GF(p)[x]` 中 `f` 的无平方部分。
- en: '[PRE774]'
  id: totrans-1540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE774]'
- en: Compute square-free part of `f` in `GF(p)[X]`.
  id: totrans-1541
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `GF(p)[X]` 中 `f` 的无平方部分。
- en: '[PRE775]'
  id: totrans-1542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE775]'
- en: Returns square-free part of a polynomial in `K[x]`.
  id: totrans-1543
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `K[x]` 中多项式的无平方部分。
- en: Examples
  id: totrans-1544
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE776]'
  id: totrans-1545
  prefs: []
  type: TYPE_PRE
  zh: '[PRE776]'
- en: '[PRE777]'
  id: totrans-1546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE777]'
- en: See also
  id: totrans-1547
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.polys.polytools.Poly.sqf_part`](reference.html#sympy.polys.polytools.Poly.sqf_part
    "sympy.polys.polytools.Poly.sqf_part")'
  id: totrans-1548
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.Poly.sqf_part`](reference.html#sympy.polys.polytools.Poly.sqf_part
    "sympy.polys.polytools.Poly.sqf_part")'
- en: '[PRE778]'
  id: totrans-1549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE778]'
- en: Returns square-free part of a polynomial in `K[X]`.
  id: totrans-1550
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `K[X]` 中多项式的无平方部分。
- en: Examples
  id: totrans-1551
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE779]'
  id: totrans-1552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE779]'
- en: '[PRE780]'
  id: totrans-1553
  prefs: []
  type: TYPE_PRE
  zh: '[PRE780]'
- en: '[PRE781]'
  id: totrans-1554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE781]'
- en: Compute square-free decomposition of `f` in `GF(p)[x]`.
  id: totrans-1555
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `GF(p)[x]` 中 `f` 的无平方分解。
- en: '[PRE782]'
  id: totrans-1556
  prefs: []
  type: TYPE_PRE
  zh: '[PRE782]'
- en: Compute square-free decomposition of `f` in `GF(p)[X]`.
  id: totrans-1557
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `GF(p)[X]` 中 `f` 的无平方分解。
- en: '[PRE783]'
  id: totrans-1558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE783]'
- en: Return square-free decomposition of a polynomial in `K[x]`.
  id: totrans-1559
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `K[x]` 中多项式的无平方分解。
- en: Uses Yun’s algorithm from [[Yun76]](literature.html#yun76).
  id: totrans-1560
  prefs: []
  type: TYPE_NORMAL
  zh: 使用来自 [[Yun76]](literature.html#yun76) 的 Yun 算法。
- en: Examples
  id: totrans-1561
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE784]'
  id: totrans-1562
  prefs: []
  type: TYPE_PRE
  zh: '[PRE784]'
- en: '[PRE785]'
  id: totrans-1563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE785]'
- en: '[PRE786]'
  id: totrans-1564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE786]'
- en: See also
  id: totrans-1565
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`dmp_sqf_list`](#sympy.polys.sqfreetools.dmp_sqf_list "sympy.polys.sqfreetools.dmp_sqf_list")'
  id: totrans-1566
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dmp_sqf_list`](#sympy.polys.sqfreetools.dmp_sqf_list "sympy.polys.sqfreetools.dmp_sqf_list")'
- en: Corresponding function for multivariate polynomials.
  id: totrans-1567
  prefs: []
  type: TYPE_NORMAL
  zh: 多变量多项式的相应函数。
- en: '[`sympy.polys.polytools.sqf_list`](reference.html#sympy.polys.polytools.sqf_list
    "sympy.polys.polytools.sqf_list")'
  id: totrans-1568
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.sqf_list`](reference.html#sympy.polys.polytools.sqf_list
    "sympy.polys.polytools.sqf_list")'
- en: High-level function for square-free factorization of expressions.
  id: totrans-1569
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式的无平方因子分解的高级函数。
- en: '[`sympy.polys.polytools.Poly.sqf_list`](reference.html#sympy.polys.polytools.Poly.sqf_list
    "sympy.polys.polytools.Poly.sqf_list")'
  id: totrans-1570
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.Poly.sqf_list`](reference.html#sympy.polys.polytools.Poly.sqf_list
    "sympy.polys.polytools.Poly.sqf_list")'
- en: Analogous method on [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly").
  id: totrans-1571
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    上的类似方法。'
- en: References
  id: totrans-1572
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[Yun76]](literature.html#yun76)'
  id: totrans-1573
  prefs: []
  type: TYPE_NORMAL
  zh: '[[Yun76]](literature.html#yun76)'
- en: '[PRE787]'
  id: totrans-1574
  prefs: []
  type: TYPE_PRE
  zh: '[PRE787]'
- en: Return square-free decomposition of a polynomial in `K[x]`.
  id: totrans-1575
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `K[x]` 中多项式的无平方分解。
- en: Examples
  id: totrans-1576
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE788]'
  id: totrans-1577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE788]'
- en: '[PRE789]'
  id: totrans-1578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE789]'
- en: '[PRE790]'
  id: totrans-1579
  prefs: []
  type: TYPE_PRE
  zh: '[PRE790]'
- en: '[PRE791]'
  id: totrans-1580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE791]'
- en: Return square-free decomposition of a polynomial in \(K[X]\).
  id: totrans-1581
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \(K[X]\) 中多项式的无平方分解。
- en: Examples
  id: totrans-1582
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE792]'
  id: totrans-1583
  prefs: []
  type: TYPE_PRE
  zh: '[PRE792]'
- en: '[PRE793]'
  id: totrans-1584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE793]'
- en: '[PRE794]'
  id: totrans-1585
  prefs: []
  type: TYPE_PRE
  zh: '[PRE794]'
- en: Explanation
  id: totrans-1586
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Uses Yun’s algorithm for univariate polynomials from [[Yun76]](literature.html#yun76)
    recrusively. The multivariate polynomial is treated as a univariate polynomial
    in its leading variable. Then Yun’s algorithm computes the square-free factorization
    of the primitive and the content is factored recursively.
  id: totrans-1587
  prefs: []
  type: TYPE_NORMAL
  zh: 使用来自 [[Yun76]](literature.html#yun76) 的单变量多项式的 Yun 算法进行递归处理。将多变量多项式视为其主变量的单变量多项式。然后
    Yun 算法递归计算原始多项式的无平方因子分解和内容的因式分解。
- en: It would be better to use a dedicated algorithm for multivariate polynomials
    instead.
  id: totrans-1588
  prefs: []
  type: TYPE_NORMAL
  zh: 最好使用专用于多变量多项式的算法。
- en: See also
  id: totrans-1589
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`dup_sqf_list`](#sympy.polys.sqfreetools.dup_sqf_list "sympy.polys.sqfreetools.dup_sqf_list")'
  id: totrans-1590
  prefs: []
  type: TYPE_NORMAL
  zh: '[`dup_sqf_list`](#sympy.polys.sqfreetools.dup_sqf_list "sympy.polys.sqfreetools.dup_sqf_list")'
- en: Corresponding function for univariate polynomials.
  id: totrans-1591
  prefs: []
  type: TYPE_NORMAL
  zh: 单变量多项式的相应函数。
- en: '[`sympy.polys.polytools.sqf_list`](reference.html#sympy.polys.polytools.sqf_list
    "sympy.polys.polytools.sqf_list")'
  id: totrans-1592
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.sqf_list`](reference.html#sympy.polys.polytools.sqf_list
    "sympy.polys.polytools.sqf_list")'
- en: High-level function for square-free factorization of expressions.
  id: totrans-1593
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式的无平方因子分解的高级函数。
- en: '[`sympy.polys.polytools.Poly.sqf_list`](reference.html#sympy.polys.polytools.Poly.sqf_list
    "sympy.polys.polytools.Poly.sqf_list")'
  id: totrans-1594
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.polys.polytools.Poly.sqf_list`](reference.html#sympy.polys.polytools.Poly.sqf_list
    "sympy.polys.polytools.Poly.sqf_list")'
- en: Analogous method on [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly").
  id: totrans-1595
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    上的类似方法。'
- en: '[PRE795]'
  id: totrans-1596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE795]'
- en: Return square-free decomposition of a polynomial in `K[x]`.
  id: totrans-1597
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 `K[x]` 中多项式的平方自由分解。
- en: Examples
  id: totrans-1598
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE796]'
  id: totrans-1599
  prefs: []
  type: TYPE_PRE
  zh: '[PRE796]'
- en: '[PRE797]'
  id: totrans-1600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE797]'
- en: '[PRE798]'
  id: totrans-1601
  prefs: []
  type: TYPE_PRE
  zh: '[PRE798]'
- en: '[PRE799]'
  id: totrans-1602
  prefs: []
  type: TYPE_PRE
  zh: '[PRE799]'
- en: Compute greatest factorial factorization of `f` in `K[x]`.
  id: totrans-1603
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `K[x]` 中 `f` 的最大阶乘分解。
- en: Examples
  id: totrans-1604
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE800]'
  id: totrans-1605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE800]'
- en: '[PRE801]'
  id: totrans-1606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE801]'
- en: '[PRE802]'
  id: totrans-1607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE802]'
- en: Compute greatest factorial factorization of `f` in `K[X]`.
  id: totrans-1608
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `K[X]` 中 `f` 的最大阶乘分解。
- en: Examples
  id: totrans-1609
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE803]'
  id: totrans-1610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE803]'
- en: Groebner basis algorithms
  id: totrans-1611
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Groebner基算法
- en: Groebner bases can be used to answer many problems in computational commutative
    algebra. Their computation in rather complicated, and very performance-sensitive.
    We present here various low-level implementations of Groebner basis computation
    algorithms; please see the previous section of the manual for usage.
  id: totrans-1612
  prefs: []
  type: TYPE_NORMAL
  zh: Groebner 基础可以用来解决计算交换代数中的许多问题。它们的计算相当复杂，并且非常依赖性能。我们在这里介绍了各种 Groebner 基础计算算法的低级实现；请参阅手册的前一部分以获取使用说明。
- en: '[PRE804]'
  id: totrans-1613
  prefs: []
  type: TYPE_PRE
  zh: '[PRE804]'
- en: Computes Groebner basis for a set of polynomials in \(K[X]\).
  id: totrans-1614
  prefs: []
  type: TYPE_NORMAL
  zh: 计算在 \( K[X] \) 中一组多项式的Groebner基。
- en: Wrapper around the (default) improved Buchberger and the other algorithms for
    computing Groebner bases. The choice of algorithm can be changed via `method`
    argument or [`sympy.polys.polyconfig.setup()`](#sympy.polys.polyconfig.setup "sympy.polys.polyconfig.setup"),
    where `method` can be either `buchberger` or `f5b`.
  id: totrans-1615
  prefs: []
  type: TYPE_NORMAL
  zh: 环绕（默认）改进的 Buchberger 算法和其他计算 Groebner 基础的算法。可以通过 `method` 参数或 [`sympy.polys.polyconfig.setup()`](#sympy.polys.polyconfig.setup
    "sympy.polys.polyconfig.setup") 来更改算法的选择，其中 `method` 可以是 `buchberger` 或 `f5b`。
- en: '[PRE805]'
  id: totrans-1616
  prefs: []
  type: TYPE_PRE
  zh: '[PRE805]'
- en: Compute LCM(LM(p1), LM(p2))/LM(p1)*p1 - LCM(LM(p1), LM(p2))/LM(p2)*p2 This is
    the S-poly provided p1 and p2 are monic
  id: totrans-1617
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 LCM(LM(p1), LM(p2))/LM(p1)*p1 - LCM(LM(p1), LM(p2))/LM(p2)*p2 这是在 p1 和 p2
    是单项式的情况下提供的 S-多项式
- en: '[PRE806]'
  id: totrans-1618
  prefs: []
  type: TYPE_PRE
  zh: '[PRE806]'
- en: Compute reduced Groebner basis, from BeckerWeispfenning93, p. 216
  id: totrans-1619
  prefs: []
  type: TYPE_NORMAL
  zh: 计算从 BeckerWeispfenning93，p. 216 中的简化Groebner基
- en: Selects a subset of generators, that already generate the ideal and computes
    a reduced Groebner basis for them.
  id: totrans-1620
  prefs: []
  type: TYPE_NORMAL
  zh: 选择已经生成理想的子生成器，并计算它们的简化Groebner基。
- en: '[PRE807]'
  id: totrans-1621
  prefs: []
  type: TYPE_PRE
  zh: '[PRE807]'
- en: Check if G is a Groebner basis.
  id: totrans-1622
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 G 是否是Groebner基。
- en: '[PRE808]'
  id: totrans-1623
  prefs: []
  type: TYPE_PRE
  zh: '[PRE808]'
- en: Checks if G is a minimal Groebner basis.
  id: totrans-1624
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 G 是否为最小Groebner基。
- en: '[PRE809]'
  id: totrans-1625
  prefs: []
  type: TYPE_PRE
  zh: '[PRE809]'
- en: Checks if G is a reduced Groebner basis.
  id: totrans-1626
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 G 是否为简化Groebner基。
- en: '[PRE810]'
  id: totrans-1627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE810]'
- en: Converts the reduced Groebner basis `F` of a zero-dimensional ideal w.r.t. `O_from`
    to a reduced Groebner basis w.r.t. `O_to`.
  id: totrans-1628
  prefs: []
  type: TYPE_NORMAL
  zh: 将零维理想的简化Groebner基 `F` 按 `O_from` 转换为简化Groebner基按 `O_to`。
- en: References
  id: totrans-1629
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R801](#id45)]'
  id: totrans-1630
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R801](#id45)]'
- en: J.C. Faugere, P. Gianni, D. Lazard, T. Mora (1994). Efficient Computation of
    Zero-dimensional Groebner Bases by Change of Ordering
  id: totrans-1631
  prefs: []
  type: TYPE_NORMAL
  zh: J.C. Faugere, P. Gianni, D. Lazard, T. Mora (1994). Efficient Computation of
    Zero-dimensional Groebner Bases by Change of Ordering
- en: 'Groebner basis algorithms for modules are also provided:'
  id: totrans-1632
  prefs: []
  type: TYPE_NORMAL
  zh: 也提供了模块的 Groebner 基础算法：
- en: '[PRE811]'
  id: totrans-1633
  prefs: []
  type: TYPE_PRE
  zh: '[PRE811]'
- en: Compute the generalized s-polynomial of `f` and `g`.
  id: totrans-1634
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 和 `g` 的广义s-多项式。
- en: The ground field is assumed to be `K`, and monomials ordered according to `O`.
  id: totrans-1635
  prefs: []
  type: TYPE_NORMAL
  zh: 假设地面场是 `K`，并按 `O` 排序单项式。
- en: This is invalid if either of `f` or `g` is zero.
  id: totrans-1636
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `f` 或 `g` 中任何一个为零，则此操作无效。
- en: If the leading terms of \(f\) and \(g\) involve different basis elements of
    \(F\), their s-poly is defined to be zero. Otherwise it is a certain linear combination
    of \(f\) and \(g\) in which the leading terms cancel. See [SCA, defn 2.3.6] for
    details.
  id: totrans-1637
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \( f \) 和 \( g \) 的领导项涉及 \( F \) 的不同基元素，则它们的s-多项式被定义为零。否则，它是 \( f \) 和 \(
    g \) 的领导项在某种线性组合中，其中领导项相消。详见 [SCA，defn 2.3.6]。
- en: If `phantom` is not `None`, it should be a pair of module elements on which
    to perform the same operation(s) as on `f` and `g`. The in this case both results
    are returned.
  id: totrans-1638
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `phantom` 不是 `None`，则它应该是一个模元素对，用于执行与 `f` 和 `g` 相同的操作。在这种情况下，返回两个结果。
- en: Examples
  id: totrans-1639
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE812]'
  id: totrans-1640
  prefs: []
  type: TYPE_PRE
  zh: '[PRE812]'
- en: '[PRE813]'
  id: totrans-1641
  prefs: []
  type: TYPE_PRE
  zh: '[PRE813]'
- en: Compute the ecart of `f`.
  id: totrans-1642
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 的差异。
- en: This is defined to be the difference of the total degree of \(f\) and the total
    degree of the leading monomial of \(f\) [SCA, defn 2.3.7].
  id: totrans-1643
  prefs: []
  type: TYPE_NORMAL
  zh: 这被定义为 \( f \) 的总次数与 \( f \) 的领导单项式的总次数之差 [SCA，defn 2.3.7]。
- en: Invalid if f is zero.
  id: totrans-1644
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 f 为零，则无效。
- en: Examples
  id: totrans-1645
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE814]'
  id: totrans-1646
  prefs: []
  type: TYPE_PRE
  zh: '[PRE814]'
- en: '[PRE815]'
  id: totrans-1647
  prefs: []
  type: TYPE_PRE
  zh: '[PRE815]'
- en: Compute a weak normal form of `f` with respect to `G` and order `O`.
  id: totrans-1648
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 `f` 关于 `G` 和排序 `O` 的弱正规形式。
- en: The ground field is assumed to be `K`, and monomials ordered according to `O`.
  id: totrans-1649
  prefs: []
  type: TYPE_NORMAL
  zh: 假设地面场是 `K`，并按 `O` 排序单项式。
- en: Weak normal forms are defined in [SCA, defn 2.3.3]. They are not unique. This
    function deterministically computes a weak normal form, depending on the order
    of \(G\).
  id: totrans-1650
  prefs: []
  type: TYPE_NORMAL
  zh: 弱正规形式定义在[SCA, defn 2.3.3]中。它们不是唯一的。此函数根据 \(G\) 的顺序确定性地计算弱正规形式。
- en: 'The most important property of a weak normal form is the following: if \(R\)
    is the ring associated with the monomial ordering (if the ordering is global,
    we just have \(R = K[x_1, \ldots, x_n]\), otherwise it is a certain localization
    thereof), \(I\) any ideal of \(R\) and \(G\) a standard basis for \(I\), then
    for any \(f \in R\), we have \(f \in I\) if and only if \(NF(f | G) = 0\).'
  id: totrans-1651
  prefs: []
  type: TYPE_NORMAL
  zh: 弱正规形式的最重要性质如下：如果 \(R\) 是与单项式顺序相关联的环（如果顺序是全局的，则我们只需 \(R = K[x_1, \ldots, x_n]\)，否则它是这个环的某种局部化），\(I\)
    是 \(R\) 的任何理想，\(G\) 是 \(I\) 的一个标准基，则对于任何 \(f \in R\)，我们有 \(f \in I\) 当且仅当 \(NF(f
    | G) = 0\)。
- en: This is the generalized Mora algorithm for computing weak normal forms with
    respect to arbitrary monomial orders [SCA, algorithm 2.3.9].
  id: totrans-1652
  prefs: []
  type: TYPE_NORMAL
  zh: 这是计算关于任意单项式顺序的弱正规形式的广义Mora算法[SCA, algorithm 2.3.9]。
- en: If `phantom` is not `None`, it should be a pair of “phantom” arguments on which
    to perform the same computations as on `f`, `G`, both results are then returned.
  id: totrans-1653
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`phantom`不是`None`，则它应该是“幻影”参数的一对，用于对`f`，`G`执行相同的计算，然后返回两个结果。
- en: '[PRE816]'
  id: totrans-1654
  prefs: []
  type: TYPE_PRE
  zh: '[PRE816]'
- en: Compute a minimal standard basis of `G` with respect to order `O`.
  id: totrans-1655
  prefs: []
  type: TYPE_NORMAL
  zh: 使用关于顺序 `O` 的算法计算 `G` 的最小标准基。
- en: The algorithm uses a normal form `NF`, for example `sdm_nf_mora`. The ground
    field is assumed to be `K`, and monomials ordered according to `O`.
  id: totrans-1656
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法使用正规形式 `NF`，例如 `sdm_nf_mora`。假设基础域为 `K`，并根据 `O` 对单项式进行排序。
- en: Let \(N\) denote the submodule generated by elements of \(G\). A standard basis
    for \(N\) is a subset \(S\) of \(N\), such that \(in(S) = in(N)\), where for any
    subset \(X\) of \(F\), \(in(X)\) denotes the submodule generated by the initial
    forms of elements of \(X\). [SCA, defn 2.3.2]
  id: totrans-1657
  prefs: []
  type: TYPE_NORMAL
  zh: 让 \(N\) 表示由 \(G\) 的元素生成的子模。\(N\) 的标准基是 \(N\) 的一个子集 \(S\)，使得 \(in(S) = in(N)\)，其中对于
    \(F\) 的任何子集 \(X\)，\(in(X)\) 表示元素 \(X\) 的初等形式生成的子模。[SCA, defn 2.3.2]
- en: A standard basis is called minimal if no subset of it is a standard basis.
  id: totrans-1658
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有子集是标准基，则称标准基为最小标准基。
- en: One may show that standard bases are always generating sets.
  id: totrans-1659
  prefs: []
  type: TYPE_NORMAL
  zh: 可以证明标准基始终是生成集。
- en: Minimal standard bases are not unique. This algorithm computes a deterministic
    result, depending on the particular order of \(G\).
  id: totrans-1660
  prefs: []
  type: TYPE_NORMAL
  zh: 最小标准基不唯一。此算法根据 \(G\) 的特定顺序计算确定性结果。
- en: If `extended=True`, also compute the transition matrix from the initial generators
    to the groebner basis. That is, return a list of coefficient vectors, expressing
    the elements of the groebner basis in terms of the elements of `G`.
  id: totrans-1661
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`extended=True`，还要计算从初始生成器到格雷布纳基的过渡矩阵。也就是说，返回一个系数向量的列表，用 `G` 的元素表示格雷布纳基的元素。
- en: This functions implements the “sugar” strategy, see
  id: totrans-1662
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数实现“糖”策略，请参阅
- en: 'Giovini et al: “One sugar cube, please” OR Selection strategies in Buchberger
    algorithm.'
  id: totrans-1663
  prefs: []
  type: TYPE_NORMAL
  zh: Giovini等人：“一块糖方块，谢谢”或Buchberger算法中的选择策略。
- en: '## Options'
  id: totrans-1664
  prefs: []
  type: TYPE_NORMAL
  zh: '## 选项'
- en: Options manager for [`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")
    and public API functions.
  id: totrans-1665
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Poly`](reference.html#sympy.polys.polytools.Poly "sympy.polys.polytools.Poly")和公共API函数的选项管理器。'
- en: '[PRE817]'
  id: totrans-1666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE817]'
- en: Options manager for polynomial manipulation module.
  id: totrans-1667
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式操作模块的选项管理器。
- en: Examples
  id: totrans-1668
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE818]'
  id: totrans-1669
  prefs: []
  type: TYPE_PRE
  zh: '[PRE818]'
- en: '[PRE819]'
  id: totrans-1670
  prefs: []
  type: TYPE_PRE
  zh: '[PRE819]'
- en: '[PRE820]'
  id: totrans-1671
  prefs: []
  type: TYPE_PRE
  zh: '[PRE820]'
- en: '[PRE821]'
  id: totrans-1672
  prefs: []
  type: TYPE_PRE
  zh: '[PRE821]'
- en: '**Options**'
  id: totrans-1673
  prefs: []
  type: TYPE_NORMAL
  zh: '**选项**'
- en: Expand — boolean option
  id: totrans-1674
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展 — 布尔选项
- en: Gens — option
  id: totrans-1675
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成器 — 选项
- en: Wrt — option
  id: totrans-1676
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wrt — 选项
- en: Sort — option
  id: totrans-1677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排序 — 选项
- en: Order — option
  id: totrans-1678
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顺序 — 选项
- en: Field — boolean option
  id: totrans-1679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 域 — 布尔选项
- en: Greedy — boolean option
  id: totrans-1680
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 贪婪 — 布尔选项
- en: Domain — option
  id: totrans-1681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 域 — 选项
- en: Split — boolean option
  id: totrans-1682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分割 — 布尔选项
- en: Gaussian — boolean option
  id: totrans-1683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高斯 — 布尔选项
- en: Extension — option
  id: totrans-1684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展 — 选项
- en: Modulus — option
  id: totrans-1685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模数 — 选项
- en: Symmetric — boolean option
  id: totrans-1686
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对称 — 布尔选项
- en: Strict — boolean option
  id: totrans-1687
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 严格 — 布尔选项
- en: '**Flags**'
  id: totrans-1688
  prefs: []
  type: TYPE_NORMAL
  zh: '**标志**'
- en: Auto — boolean flag
  id: totrans-1689
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动 — 布尔标志
- en: Frac — boolean flag
  id: totrans-1690
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分数 — 布尔标志
- en: Formal — boolean flag
  id: totrans-1691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 形式 — 布尔标志
- en: Polys — boolean flag
  id: totrans-1692
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多项式 — 布尔标志
- en: Include — boolean flag
  id: totrans-1693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括 — 布尔标志
- en: All — boolean flag
  id: totrans-1694
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全部 — 布尔标志
- en: Gen — flag
  id: totrans-1695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成器 — 标志
- en: Series — boolean flag
  id: totrans-1696
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系列 — 布尔标志
- en: '[PRE822]'
  id: totrans-1697
  prefs: []
  type: TYPE_PRE
  zh: '[PRE822]'
- en: Clone `self` and update specified options.
  id: totrans-1698
  prefs: []
  type: TYPE_NORMAL
  zh: 克隆 `self` 并更新指定的选项。
- en: '[PRE823]'
  id: totrans-1699
  prefs: []
  type: TYPE_PRE
  zh: '[PRE823]'
- en: 'Construct options from keyword arguments or … options.  ## Configuration'
  id: totrans-1700
  prefs: []
  type: TYPE_NORMAL
  zh: 从关键字参数或...选项构建选项。## 配置
- en: Configuration utilities for polynomial manipulation algorithms.
  id: totrans-1701
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式操作算法的配置实用程序。
- en: '[PRE824]'
  id: totrans-1702
  prefs: []
  type: TYPE_PRE
  zh: '[PRE824]'
- en: Assign a value to (or reset) a configuration item.
  id: totrans-1703
  prefs: []
  type: TYPE_NORMAL
  zh: 为配置项分配值（或重置）。
- en: Exceptions
  id: totrans-1704
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 异常
- en: These are exceptions defined by the polynomials module.
  id: totrans-1705
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是多项式模块定义的异常。
- en: TODO sort and explain
  id: totrans-1706
  prefs: []
  type: TYPE_NORMAL
  zh: TODO 排序和解释
- en: '[PRE825]'
  id: totrans-1707
  prefs: []
  type: TYPE_PRE
  zh: '[PRE825]'
- en: Base class for polynomial related exceptions.
  id: totrans-1708
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式相关异常的基类。
- en: '[PRE826]'
  id: totrans-1709
  prefs: []
  type: TYPE_PRE
  zh: '[PRE826]'
- en: '[PRE827]'
  id: totrans-1710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE827]'
- en: '[PRE828]'
  id: totrans-1711
  prefs: []
  type: TYPE_PRE
  zh: '[PRE828]'
- en: '[PRE829]'
  id: totrans-1712
  prefs: []
  type: TYPE_PRE
  zh: '[PRE829]'
- en: '[PRE830]'
  id: totrans-1713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE830]'
- en: '[PRE831]'
  id: totrans-1714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE831]'
- en: '[PRE832]'
  id: totrans-1715
  prefs: []
  type: TYPE_PRE
  zh: '[PRE832]'
- en: '[PRE833]'
  id: totrans-1716
  prefs: []
  type: TYPE_PRE
  zh: '[PRE833]'
- en: '[PRE834]'
  id: totrans-1717
  prefs: []
  type: TYPE_PRE
  zh: '[PRE834]'
- en: '[PRE835]'
  id: totrans-1718
  prefs: []
  type: TYPE_PRE
  zh: '[PRE835]'
- en: '[PRE836]'
  id: totrans-1719
  prefs: []
  type: TYPE_PRE
  zh: '[PRE836]'
- en: '[PRE837]'
  id: totrans-1720
  prefs: []
  type: TYPE_PRE
  zh: '[PRE837]'
- en: '[PRE838]'
  id: totrans-1721
  prefs: []
  type: TYPE_PRE
  zh: '[PRE838]'
- en: '[PRE839]'
  id: totrans-1722
  prefs: []
  type: TYPE_PRE
  zh: '[PRE839]'
- en: '[PRE840]'
  id: totrans-1723
  prefs: []
  type: TYPE_PRE
  zh: '[PRE840]'
- en: '[PRE841]'
  id: totrans-1724
  prefs: []
  type: TYPE_PRE
  zh: '[PRE841]'
- en: '[PRE842]'
  id: totrans-1725
  prefs: []
  type: TYPE_PRE
  zh: '[PRE842]'
- en: '[PRE843]'
  id: totrans-1726
  prefs: []
  type: TYPE_PRE
  zh: '[PRE843]'
- en: '[PRE844]'
  id: totrans-1727
  prefs: []
  type: TYPE_PRE
  zh: '[PRE844]'
- en: '[PRE845]'
  id: totrans-1728
  prefs: []
  type: TYPE_PRE
  zh: '[PRE845]'
- en: '[PRE846]'
  id: totrans-1729
  prefs: []
  type: TYPE_PRE
  zh: '[PRE846]'
- en: '[PRE847]'
  id: totrans-1730
  prefs: []
  type: TYPE_PRE
  zh: '[PRE847]'
- en: '[PRE848]'
  id: totrans-1731
  prefs: []
  type: TYPE_PRE
  zh: '[PRE848]'
- en: Reference
  id: totrans-1732
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考
- en: Modular GCD
  id: totrans-1733
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模 GCD
- en: '[PRE849]'
  id: totrans-1734
  prefs: []
  type: TYPE_PRE
  zh: '[PRE849]'
- en: Computes the GCD of two polynomials in \(\mathbb{Z}[x]\) using a modular algorithm.
  id: totrans-1735
  prefs: []
  type: TYPE_NORMAL
  zh: 使用模算法计算在 \(\mathbb{Z}[x]\) 中两个多项式的最大公约数。
- en: The algorithm computes the GCD of two univariate integer polynomials \(f\) and
    \(g\) by computing the GCD in \(\mathbb{Z}_p[x]\) for suitable primes \(p\) and
    then reconstructing the coefficients with the Chinese Remainder Theorem. Trial
    division is only made for candidates which are very likely the desired GCD.
  id: totrans-1736
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法通过在适当的质数 \(p\) 下计算一元整数多项式 \(f\) 和 \(g\) 的 \(\mathbb{Z}_p[x]\) 中的最大公约数，然后利用中国剩余定理重构系数来计算其在
    \(\mathbb{Z}[x]\) 中的最大公约数。只对那些极有可能是所需 GCD 的候选者进行试除。
- en: 'Parameters:'
  id: totrans-1737
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : PolyElement'
  id: totrans-1738
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：PolyElement'
- en: univariate integer polynomial
  id: totrans-1739
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一元整数多项式
- en: '**g** : PolyElement'
  id: totrans-1740
  prefs: []
  type: TYPE_NORMAL
  zh: '**g**：PolyElement'
- en: univariate integer polynomial
  id: totrans-1741
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一元整数多项式
- en: 'Returns:'
  id: totrans-1742
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**h** : PolyElement'
  id: totrans-1743
  prefs: []
  type: TYPE_NORMAL
  zh: '**h**：PolyElement'
- en: GCD of the polynomials \(f\) and \(g\)
  id: totrans-1744
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式 \(f\) 和 \(g\) 的最大公约数
- en: '**cff** : PolyElement'
  id: totrans-1745
  prefs: []
  type: TYPE_NORMAL
  zh: '**cff**：PolyElement'
- en: cofactor of \(f\), i.e. \(\frac{f}{h}\)
  id: totrans-1746
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(f\) 的余子式，即 \(\frac{f}{h}\)
- en: '**cfg** : PolyElement'
  id: totrans-1747
  prefs: []
  type: TYPE_NORMAL
  zh: '**cfg**：PolyElement'
- en: cofactor of \(g\), i.e. \(\frac{g}{h}\)
  id: totrans-1748
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(g\) 的余子式，即 \(\frac{g}{h}\)
- en: Examples
  id: totrans-1749
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE850]'
  id: totrans-1750
  prefs: []
  type: TYPE_PRE
  zh: '[PRE850]'
- en: '[PRE851]'
  id: totrans-1751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE851]'
- en: '[PRE852]'
  id: totrans-1752
  prefs: []
  type: TYPE_PRE
  zh: '[PRE852]'
- en: '[PRE853]'
  id: totrans-1753
  prefs: []
  type: TYPE_PRE
  zh: '[PRE853]'
- en: '[PRE854]'
  id: totrans-1754
  prefs: []
  type: TYPE_PRE
  zh: '[PRE854]'
- en: '[PRE855]'
  id: totrans-1755
  prefs: []
  type: TYPE_PRE
  zh: '[PRE855]'
- en: '[PRE856]'
  id: totrans-1756
  prefs: []
  type: TYPE_PRE
  zh: '[PRE856]'
- en: '[PRE857]'
  id: totrans-1757
  prefs: []
  type: TYPE_PRE
  zh: '[PRE857]'
- en: References
  id: totrans-1758
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[Monagan00]](literature.html#monagan00)'
  id: totrans-1759
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Monagan00]](literature.html#monagan00)'
- en: '[PRE858]'
  id: totrans-1760
  prefs: []
  type: TYPE_PRE
  zh: '[PRE858]'
- en: Computes the GCD of two polynomials in \(\mathbb{Z}[x, y]\) using a modular
    algorithm.
  id: totrans-1761
  prefs: []
  type: TYPE_NORMAL
  zh: 使用模算法计算在 \(\mathbb{Z}[x, y]\) 中两个多项式的最大公约数。
- en: The algorithm computes the GCD of two bivariate integer polynomials \(f\) and
    \(g\) by calculating the GCD in \(\mathbb{Z}_p[x, y]\) for suitable primes \(p\)
    and then reconstructing the coefficients with the Chinese Remainder Theorem. To
    compute the bivariate GCD over \(\mathbb{Z}_p\), the polynomials \(f \; \mathrm{mod}
    \, p\) and \(g \; \mathrm{mod} \, p\) are evaluated at \(y = a\) for certain \(a
    \in \mathbb{Z}_p\) and then their univariate GCD in \(\mathbb{Z}_p[x]\) is computed.
    Interpolating those yields the bivariate GCD in \(\mathbb{Z}_p[x, y]\). To verify
    the result in \(\mathbb{Z}[x, y]\), trial division is done, but only for candidates
    which are very likely the desired GCD.
  id: totrans-1762
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法通过在适当的质数 \(p\) 下计算二元整数多项式 \(f\) 和 \(g\) 的 \(\mathbb{Z}_p[x, y]\) 中的最大公约数，然后利用中国剩余定理重构系数来计算其在
    \(\mathbb{Z}[x, y]\) 中的最大公约数。为了计算 \(\mathbb{Z}_p\) 上的二元 GCD，评估多项式 \(f \; \mathrm{mod}
    \, p\) 和 \(g \; \mathrm{mod} \, p\) 在某些 \(a \in \mathbb{Z}_p\) 下的值，然后计算它们在 \(\mathbb{Z}_p[x]\)
    中的一元 GCD。通过插值得到 \(\mathbb{Z}_p[x, y]\) 中的二元 GCD。为了验证在 \(\mathbb{Z}[x, y]\) 中的结果，进行试除，但仅针对那些极有可能是所需
    GCD 的候选者。
- en: 'Parameters:'
  id: totrans-1763
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : PolyElement'
  id: totrans-1764
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：PolyElement'
- en: bivariate integer polynomial
  id: totrans-1765
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 二元整数多项式
- en: '**g** : PolyElement'
  id: totrans-1766
  prefs: []
  type: TYPE_NORMAL
  zh: '**g**：PolyElement'
- en: bivariate integer polynomial
  id: totrans-1767
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 二元整数多项式
- en: 'Returns:'
  id: totrans-1768
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**h** : PolyElement'
  id: totrans-1769
  prefs: []
  type: TYPE_NORMAL
  zh: '**h**：PolyElement'
- en: GCD of the polynomials \(f\) and \(g\)
  id: totrans-1770
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式 \(f\) 和 \(g\) 的最大公约数
- en: '**cff** : PolyElement'
  id: totrans-1771
  prefs: []
  type: TYPE_NORMAL
  zh: '**cff**：PolyElement'
- en: cofactor of \(f\), i.e. \(\frac{f}{h}\)
  id: totrans-1772
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(f\) 的余子式，即 \(\frac{f}{h}\)
- en: '**cfg** : PolyElement'
  id: totrans-1773
  prefs: []
  type: TYPE_NORMAL
  zh: '**cfg**：PolyElement'
- en: cofactor of \(g\), i.e. \(\frac{g}{h}\)
  id: totrans-1774
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(g\) 的余子式，即 \(\frac{g}{h}\)
- en: Examples
  id: totrans-1775
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE859]'
  id: totrans-1776
  prefs: []
  type: TYPE_PRE
  zh: '[PRE859]'
- en: '[PRE860]'
  id: totrans-1777
  prefs: []
  type: TYPE_PRE
  zh: '[PRE860]'
- en: '[PRE861]'
  id: totrans-1778
  prefs: []
  type: TYPE_PRE
  zh: '[PRE861]'
- en: '[PRE862]'
  id: totrans-1779
  prefs: []
  type: TYPE_PRE
  zh: '[PRE862]'
- en: '[PRE863]'
  id: totrans-1780
  prefs: []
  type: TYPE_PRE
  zh: '[PRE863]'
- en: '[PRE864]'
  id: totrans-1781
  prefs: []
  type: TYPE_PRE
  zh: '[PRE864]'
- en: '[PRE865]'
  id: totrans-1782
  prefs: []
  type: TYPE_PRE
  zh: '[PRE865]'
- en: '[PRE866]'
  id: totrans-1783
  prefs: []
  type: TYPE_PRE
  zh: '[PRE866]'
- en: References
  id: totrans-1784
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[Monagan00]](literature.html#monagan00)'
  id: totrans-1785
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Monagan00]](literature.html#monagan00)'
- en: '[PRE867]'
  id: totrans-1786
  prefs: []
  type: TYPE_PRE
  zh: '[PRE867]'
- en: Compute the GCD of two polynomials in \(\mathbb{Z}[x_0, \ldots, x_{k-1}]\) using
    a modular algorithm.
  id: totrans-1787
  prefs: []
  type: TYPE_NORMAL
  zh: 使用模算法计算在 \(\mathbb{Z}[x_0, \ldots, x_{k-1}]\) 中两个多项式的最大公约数。
- en: The algorithm computes the GCD of two multivariate integer polynomials \(f\)
    and \(g\) by calculating the GCD in \(\mathbb{Z}_p[x_0, \ldots, x_{k-1}]\) for
    suitable primes \(p\) and then reconstructing the coefficients with the Chinese
    Remainder Theorem. To compute the multivariate GCD over \(\mathbb{Z}_p\) the recursive
    subroutine [`_modgcd_multivariate_p()`](#sympy.polys.modulargcd._modgcd_multivariate_p
    "sympy.polys.modulargcd._modgcd_multivariate_p") is used. To verify the result
    in \(\mathbb{Z}[x_0, \ldots, x_{k-1}]\), trial division is done, but only for
    candidates which are very likely the desired GCD.
  id: totrans-1788
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法通过在适当的质数 \(p\) 下计算多变量整数多项式 \(f\) 和 \(g\) 的 \(\mathbb{Z}_p[x_0, \ldots, x_{k-1}]\)
    中的最大公约数，然后利用中国剩余定理重构系数来计算其在 \(\mathbb{Z}[x_0, \ldots, x_{k-1}]\) 中的最大公约数。为了计算
    \(\mathbb{Z}_p\) 上的多变量 GCD，使用递归子例程 [`_modgcd_multivariate_p()`](#sympy.polys.modulargcd._modgcd_multivariate_p
    "sympy.polys.modulargcd._modgcd_multivariate_p")。为了验证在 \(\mathbb{Z}[x_0, \ldots,
    x_{k-1}]\) 中的结果，进行试除，但仅针对那些极有可能是所需 GCD 的候选者。
- en: 'Parameters:'
  id: totrans-1789
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : PolyElement'
  id: totrans-1790
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：PolyElement'
- en: multivariate integer polynomial
  id: totrans-1791
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多变量整数多项式
- en: '**g** : PolyElement'
  id: totrans-1792
  prefs: []
  type: TYPE_NORMAL
  zh: '**g**：PolyElement'
- en: multivariate integer polynomial
  id: totrans-1793
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多变量整数多项式
- en: 'Returns:'
  id: totrans-1794
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**h** : PolyElement'
  id: totrans-1795
  prefs: []
  type: TYPE_NORMAL
  zh: '**h**：PolyElement'
- en: GCD of the polynomials \(f\) and \(g\)
  id: totrans-1796
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式 \(f\) 和 \(g\) 的最大公约数
- en: '**cff** : PolyElement'
  id: totrans-1797
  prefs: []
  type: TYPE_NORMAL
  zh: '**cff**：PolyElement'
- en: cofactor of \(f\), i.e. \(\frac{f}{h}\)
  id: totrans-1798
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(f\) 的余子式，即 \(\frac{f}{h}\)
- en: '**cfg** : PolyElement'
  id: totrans-1799
  prefs: []
  type: TYPE_NORMAL
  zh: '**cfg**：PolyElement'
- en: cofactor of \(g\), i.e. \(\frac{g}{h}\)
  id: totrans-1800
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(g\)的余因子，即\(\frac{g}{h}\)
- en: Examples
  id: totrans-1801
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE868]'
  id: totrans-1802
  prefs: []
  type: TYPE_PRE
  zh: '[PRE868]'
- en: '[PRE869]'
  id: totrans-1803
  prefs: []
  type: TYPE_PRE
  zh: '[PRE869]'
- en: '[PRE870]'
  id: totrans-1804
  prefs: []
  type: TYPE_PRE
  zh: '[PRE870]'
- en: '[PRE871]'
  id: totrans-1805
  prefs: []
  type: TYPE_PRE
  zh: '[PRE871]'
- en: '[PRE872]'
  id: totrans-1806
  prefs: []
  type: TYPE_PRE
  zh: '[PRE872]'
- en: '[PRE873]'
  id: totrans-1807
  prefs: []
  type: TYPE_PRE
  zh: '[PRE873]'
- en: '[PRE874]'
  id: totrans-1808
  prefs: []
  type: TYPE_PRE
  zh: '[PRE874]'
- en: '[PRE875]'
  id: totrans-1809
  prefs: []
  type: TYPE_PRE
  zh: '[PRE875]'
- en: '[PRE876]'
  id: totrans-1810
  prefs: []
  type: TYPE_PRE
  zh: '[PRE876]'
- en: See also
  id: totrans-1811
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`_modgcd_multivariate_p`](#sympy.polys.modulargcd._modgcd_multivariate_p "sympy.polys.modulargcd._modgcd_multivariate_p")'
  id: totrans-1812
  prefs: []
  type: TYPE_NORMAL
  zh: '[`_modgcd_multivariate_p`](#sympy.polys.modulargcd._modgcd_multivariate_p "sympy.polys.modulargcd._modgcd_multivariate_p")'
- en: References
  id: totrans-1813
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[Monagan00]](literature.html#monagan00)'
  id: totrans-1814
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Monagan00]](literature.html#monagan00)'
- en: '[[Brown71]](literature.html#brown71)'
  id: totrans-1815
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Brown71]](literature.html#brown71)'
- en: '[PRE877]'
  id: totrans-1816
  prefs: []
  type: TYPE_PRE
  zh: '[PRE877]'
- en: Compute the GCD of two polynomials in \(\mathbb{Z}_p[x_0, \ldots, x_{k-1}]\).
  id: totrans-1817
  prefs: []
  type: TYPE_NORMAL
  zh: 在\(\mathbb{Z}_p[x_0, \ldots, x_{k-1}]\)中计算两个多项式\(f\)和\(g\)的GCD。
- en: The algorithm reduces the problem step by step by evaluating the polynomials
    \(f\) and \(g\) at \(x_{k-1} = a\) for suitable \(a \in \mathbb{Z}_p\) and then
    calls itself recursively to compute the GCD in \(\mathbb{Z}_p[x_0, \ldots, x_{k-2}]\).
    If these recursive calls are successful for enough evaluation points, the GCD
    in \(k\) variables is interpolated, otherwise the algorithm returns `None`. Every
    time a GCD or a content is computed, their degrees are compared with the bounds.
    If a degree greater then the bound is encountered, then the current call returns
    `None` and a new evaluation point has to be chosen. If at some point the degree
    is smaller, the correspondent bound is updated and the algorithm fails.
  id: totrans-1818
  prefs: []
  type: TYPE_NORMAL
  zh: 算法通过在适当的\(a \in \mathbb{Z}_p\)处评估多项式\(f\)和\(g\)，逐步减少问题，并递归调用自身以在\(\mathbb{Z}_p[x_0,
    \ldots, x_{k-2}]\)中计算GCD。如果这些递归调用在足够多的评估点上成功，那么在\(k\)个变量中的GCD将被插值，否则算法返回`None`。每当计算GCD或内容时，它们的度数与界限进行比较。如果遇到大于界限的度数，则当前调用返回`None`，并且必须选择新的评估点。如果某个时刻的度数较小，则更新相应的界限，并且算法失败。
- en: 'Parameters:'
  id: totrans-1819
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f** : PolyElement'
  id: totrans-1820
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**：PolyElement'
- en: multivariate integer polynomial with coefficients in \(\mathbb{Z}_p\)
  id: totrans-1821
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在\(\mathbb{Z}_p\)中系数的多变量整数多项式
- en: '**g** : PolyElement'
  id: totrans-1822
  prefs: []
  type: TYPE_NORMAL
  zh: '**g**：PolyElement'
- en: multivariate integer polynomial with coefficients in \(\mathbb{Z}_p\)
  id: totrans-1823
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在\(\mathbb{Z}_p\)中系数的多变量整数多项式
- en: '**p** : Integer'
  id: totrans-1824
  prefs: []
  type: TYPE_NORMAL
  zh: '**p**：整数'
- en: prime number, modulus of \(f\) and \(g\)
  id: totrans-1825
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 素数，\(f\)和\(g\)的模数
- en: '**degbound** : list of Integer objects'
  id: totrans-1826
  prefs: []
  type: TYPE_NORMAL
  zh: '**degbound**：Integer对象的列表'
- en: '`degbound[i]` is an upper bound for the degree of the GCD of \(f\) and \(g\)
    in the variable \(x_i\)'
  id: totrans-1827
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`degbound[i]`是变量\(x_i\)中\(f\)和\(g\)的GCD的度数的上界'
- en: '**contbound** : list of Integer objects'
  id: totrans-1828
  prefs: []
  type: TYPE_NORMAL
  zh: '**contbound**：Integer对象的列表'
- en: '`contbound[i]` is an upper bound for the degree of the content of the GCD in
    \(\mathbb{Z}_p[x_i][x_0, \ldots, x_{i-1}]\), `contbound[0]` is not used can therefore
    be chosen arbitrarily.'
  id: totrans-1829
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`contbound[i]`是在\(\mathbb{Z}_p[x_i][x_0, \ldots, x_{i-1}]\)中GCD的内容的度数的上界，`contbound[0]`不使用，因此可以任意选择。'
- en: 'Returns:'
  id: totrans-1830
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**h** : PolyElement'
  id: totrans-1831
  prefs: []
  type: TYPE_NORMAL
  zh: '**h**：PolyElement'
- en: GCD of the polynomials \(f\) and \(g\) or `None`
  id: totrans-1832
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(f\)和\(g\)的多项式的GCD或`None`
- en: References
  id: totrans-1833
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[Monagan00]](literature.html#monagan00)'
  id: totrans-1834
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Monagan00]](literature.html#monagan00)'
- en: '[[Brown71]](literature.html#brown71)'
  id: totrans-1835
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Brown71]](literature.html#brown71)'
- en: '[PRE878]'
  id: totrans-1836
  prefs: []
  type: TYPE_PRE
  zh: '[PRE878]'
- en: Compute the GCD of two polynomials \(f\) and \(g\) in \(\mathbb Q(\alpha)[x_0,
    \ldots, x_{n-1}]\) using a modular algorithm.
  id: totrans-1837
  prefs: []
  type: TYPE_NORMAL
  zh: 使用模算法在\(\mathbb Q(\alpha)[x_0, \ldots, x_{n-1}]\)中计算两个多项式\(f\)和\(g\)的GCD。
- en: The algorithm first computes the primitive associate \(\check m_{\alpha}(z)\)
    of the minimal polynomial \(m_{\alpha}\) in \(\mathbb{Z}[z]\) and the primitive
    associates of \(f\) and \(g\) in \(\mathbb{Z}[x_1, \ldots, x_{n-1}][z]/(\check
    m_{\alpha})[x_0]\). Then it computes the GCD in \(\mathbb Q(x_1, \ldots, x_{n-1})[z]/(m_{\alpha}(z))[x_0]\).
    This is done by calculating the GCD in \(\mathbb{Z}_p(x_1, \ldots, x_{n-1})[z]/(\check
    m_{\alpha}(z))[x_0]\) for suitable primes \(p\) and then reconstructing the coefficients
    with the Chinese Remainder Theorem and Rational Reconstuction. The GCD over \(\mathbb{Z}_p(x_1,
    \ldots, x_{n-1})[z]/(\check m_{\alpha}(z))[x_0]\) is computed with a recursive
    subroutine, which evaluates the polynomials at \(x_{n-1} = a\) for suitable evaluation
    points \(a \in \mathbb Z_p\) and then calls itself recursively until the ground
    domain does no longer contain any parameters. For \(\mathbb{Z}_p[z]/(\check m_{\alpha}(z))[x_0]\)
    the Euclidean Algorithm is used. The results of those recursive calls are then
    interpolated and Rational Function Reconstruction is used to obtain the correct
    coefficients. The results, both in \(\mathbb Q(x_1, \ldots, x_{n-1})[z]/(m_{\alpha}(z))[x_0]\)
    and \(\mathbb{Z}_p(x_1, \ldots, x_{n-1})[z]/(\check m_{\alpha}(z))[x_0]\), are
    verified by a fraction free trial division.
  id: totrans-1838
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法首先计算在 \(\mathbb{Z}[z]\) 中最小多项式 \(m_{\alpha}\) 的原始关联物 \(\check{m}_{\alpha}(z)\)，以及在
    \((\check{m}_{\alpha})[x_0]\) 中的 \(f\) 和 \(g\) 的原始关联物。然后在 \(\mathbb{Q}(x_1, \ldots,
    x_{n-1})[z]/(m_{\alpha}(z))[x_0]\) 中计算最大公因式。这是通过在适当的素数 \(p\) 上计算 \(\mathbb{Z}_p(x_1,
    \ldots, x_{n-1})[z]/(\check{m}_{\alpha}(z))[x_0]\) 中的最大公因式，然后利用中国剩余定理和有理重构重建系数来完成的。在
    \(\mathbb{Z}_p(z)/(\check{m}_{\alpha}(z))[x_0]\) 中使用欧几里得算法。这些递归调用的结果然后进行插值，并使用有理函数重构来获取正确的系数。在
    \(\mathbb{Q}(x_1, \ldots, x_{n-1})[z]/(m_{\alpha}(z))[x_0]\) 和 \(\mathbb{Z}_p(x_1,
    \ldots, x_{n-1})[z]/(\check{m}_{\alpha}(z))[x_0]\) 中的结果通过一个无分数试除法来验证。
- en: Apart from the above GCD computation some GCDs in \(\mathbb Q(\alpha)[x_1, \ldots,
    x_{n-1}]\) have to be calculated, because treating the polynomials as univariate
    ones can result in a spurious content of the GCD. For this `func_field_modgcd`
    is called recursively.
  id: totrans-1839
  prefs: []
  type: TYPE_NORMAL
  zh: 除了上述的最大公因式计算外，还需计算 \(\mathbb{Q}(\alpha)[x_1, \ldots, x_{n-1}]\) 中的一些最大公因式，因为将多项式视为一元的可能导致最大公因式的虚假内容。为此，递归调用
    `func_field_modgcd`。
- en: 'Parameters:'
  id: totrans-1840
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f, g** : PolyElement'
  id: totrans-1841
  prefs: []
  type: TYPE_NORMAL
  zh: '**f, g** ：PolyElement'
- en: polynomials in \(\mathbb Q(\alpha)[x_0, \ldots, x_{n-1}]\)
  id: totrans-1842
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(\mathbb{Q}(\alpha)[x_0, \ldots, x_{n-1}]\) 中的多项式
- en: 'Returns:'
  id: totrans-1843
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**h** : PolyElement'
  id: totrans-1844
  prefs: []
  type: TYPE_NORMAL
  zh: '**h** ：PolyElement'
- en: monic GCD of the polynomials \(f\) and \(g\)
  id: totrans-1845
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 多项式 \(f\) 和 \(g\) 的首一最大公因式
- en: '**cff** : PolyElement'
  id: totrans-1846
  prefs: []
  type: TYPE_NORMAL
  zh: '**cff** ：PolyElement'
- en: cofactor of \(f\), i.e. \(\frac f h\)
  id: totrans-1847
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(f\) 的余子式，即 \(\frac{f}{h}\)
- en: '**cfg** : PolyElement'
  id: totrans-1848
  prefs: []
  type: TYPE_NORMAL
  zh: '**cfg** ：PolyElement'
- en: cofactor of \(g\), i.e. \(\frac g h\)
  id: totrans-1849
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: \(g\) 的余子式，即 \(\frac{g}{h}\)
- en: Examples
  id: totrans-1850
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE879]'
  id: totrans-1851
  prefs: []
  type: TYPE_PRE
  zh: '[PRE879]'
- en: '[PRE880]'
  id: totrans-1852
  prefs: []
  type: TYPE_PRE
  zh: '[PRE880]'
- en: '[PRE881]'
  id: totrans-1853
  prefs: []
  type: TYPE_PRE
  zh: '[PRE881]'
- en: '[PRE882]'
  id: totrans-1854
  prefs: []
  type: TYPE_PRE
  zh: '[PRE882]'
- en: '[PRE883]'
  id: totrans-1855
  prefs: []
  type: TYPE_PRE
  zh: '[PRE883]'
- en: '[PRE884]'
  id: totrans-1856
  prefs: []
  type: TYPE_PRE
  zh: '[PRE884]'
- en: '[PRE885]'
  id: totrans-1857
  prefs: []
  type: TYPE_PRE
  zh: '[PRE885]'
- en: '[PRE886]'
  id: totrans-1858
  prefs: []
  type: TYPE_PRE
  zh: '[PRE886]'
- en: '[PRE887]'
  id: totrans-1859
  prefs: []
  type: TYPE_PRE
  zh: '[PRE887]'
- en: '[PRE888]'
  id: totrans-1860
  prefs: []
  type: TYPE_PRE
  zh: '[PRE888]'
- en: '[PRE889]'
  id: totrans-1861
  prefs: []
  type: TYPE_PRE
  zh: '[PRE889]'
- en: '[PRE890]'
  id: totrans-1862
  prefs: []
  type: TYPE_PRE
  zh: '[PRE890]'
- en: References
  id: totrans-1863
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[Hoeij04]](literature.html#hoeij04)'
  id: totrans-1864
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[[Hoeij04]](literature.html#hoeij04)'
- en: Undocumented
  id: totrans-1865
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未记录
- en: Many parts of the polys module are still undocumented, and even where there
    is documentation it is scarce. Please contribute!
  id: totrans-1866
  prefs: []
  type: TYPE_NORMAL
  zh: polys 模块的许多部分仍然未记录，并且即使有文档，也非常少。请贡献！
