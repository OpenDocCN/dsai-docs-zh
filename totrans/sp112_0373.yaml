- en: scipy.ndimage.map_coordinates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.map_coordinates.html#scipy.ndimage.map_coordinates](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.map_coordinates.html#scipy.ndimage.map_coordinates)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Map the input array to new coordinates by interpolation.
  prefs: []
  type: TYPE_NORMAL
- en: The array of coordinates is used to find, for each point in the output, the
    corresponding coordinates in the input. The value of the input at those coordinates
    is determined by spline interpolation of the requested order.
  prefs: []
  type: TYPE_NORMAL
- en: The shape of the output is derived from that of the coordinate array by dropping
    the first axis. The values of the array along the first axis are the coordinates
    in the input array at which the output value is found.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**coordinates**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The coordinates at which *input* is evaluated.
  prefs: []
  type: TYPE_NORMAL
- en: '**output**array or dtype, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The array in which to place the output, or the dtype of the returned array.
    By default an array of the same dtype as input will be created.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The order of the spline interpolation, default is 3. The order has to be in
    the range 0-5.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**{‘reflect’, ‘grid-mirror’, ‘constant’, ‘grid-constant’, ‘nearest’,
    ‘mirror’, ‘grid-wrap’, ‘wrap’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The *mode* parameter determines how the input array is extended beyond its
    boundaries. Default is ‘constant’. Behavior for each valid value is as follows
    (see additional plots and details on [boundary modes](../../tutorial/ndimage.html#ndimage-interpolation-modes)):'
  prefs: []
  type: TYPE_NORMAL
- en: ‘reflect’ (*d c b a | a b c d | d c b a*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by reflecting about the edge of the last pixel. This mode
    is also sometimes referred to as half-sample symmetric.
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-mirror’
  prefs: []
  type: TYPE_NORMAL
- en: This is a synonym for ‘reflect’.
  prefs: []
  type: TYPE_NORMAL
- en: ‘constant’ (*k k k k | a b c d | k k k k*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by filling all values beyond the edge with the same constant
    value, defined by the *cval* parameter. No interpolation is performed beyond the
    edges of the input.
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-constant’ (*k k k k | a b c d | k k k k*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by filling all values beyond the edge with the same constant
    value, defined by the *cval* parameter. Interpolation occurs for samples outside
    the input’s extent as well.
  prefs: []
  type: TYPE_NORMAL
- en: ‘nearest’ (*a a a a | a b c d | d d d d*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by replicating the last pixel.
  prefs: []
  type: TYPE_NORMAL
- en: ‘mirror’ (*d c b | a b c d | c b a*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by reflecting about the center of the last pixel. This
    mode is also sometimes referred to as whole-sample symmetric.
  prefs: []
  type: TYPE_NORMAL
- en: ‘grid-wrap’ (*a b c d | a b c d | a b c d*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by wrapping around to the opposite edge.
  prefs: []
  type: TYPE_NORMAL
- en: ‘wrap’ (*d b c d | a b c d | b c a b*)
  prefs: []
  type: TYPE_NORMAL
- en: The input is extended by wrapping around to the opposite edge, but in a way
    such that the last point and initial point exactly overlap. In this case it is
    not well defined which sample will be chosen at the point of overlap.
  prefs: []
  type: TYPE_NORMAL
- en: '**cval**scalar, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value to fill past edges of input if *mode* is ‘constant’. Default is 0.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**prefilter**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Determines if the input array is prefiltered with [`spline_filter`](scipy.ndimage.spline_filter.html#scipy.ndimage.spline_filter
    "scipy.ndimage.spline_filter") before interpolation. The default is True, which
    will create a temporary *float64* array of filtered values if *order > 1*. If
    setting this to False, the output will be slightly blurred if *order > 1*, unless
    the input is prefiltered, i.e. it is the result of calling [`spline_filter`](scipy.ndimage.spline_filter.html#scipy.ndimage.spline_filter
    "scipy.ndimage.spline_filter") on the original input.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**map_coordinates**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The result of transforming the input. The shape of the output is derived from
    that of *coordinates* by dropping the first axis.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`spline_filter`](scipy.ndimage.spline_filter.html#scipy.ndimage.spline_filter
    "scipy.ndimage.spline_filter"), [`geometric_transform`](scipy.ndimage.geometric_transform.html#scipy.ndimage.geometric_transform
    "scipy.ndimage.geometric_transform"), [`scipy.interpolate`](../interpolate.html#module-scipy.interpolate
    "scipy.interpolate")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For complex-valued *input*, this function maps the real and imaginary components
    independently.
  prefs: []
  type: TYPE_NORMAL
- en: 'New in version 1.6.0: Complex-valued support added.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Above, the interpolated value of a[0.5, 0.5] gives output[0], while a[2, 1]
    is output[1].
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
