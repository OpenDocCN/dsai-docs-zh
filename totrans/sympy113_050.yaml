- en: Ask
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问
- en: 原文：[https://docs.sympy.org/latest/modules/assumptions/ask.html](https://docs.sympy.org/latest/modules/assumptions/ask.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/assumptions/ask.html](https://docs.sympy.org/latest/modules/assumptions/ask.html)
- en: Module for querying SymPy objects about assumptions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 用于查询关于假设的SymPy对象的模块。
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This class contains all the supported keys by `ask`. It should be accessed via
    the instance `sympy.Q`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类包含了`ask`系统中所有支持的键。它应该通过实例`sympy.Q`来访问。
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Function to evaluate the proposition with assumptions.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 用于带有假设的命题评估的函数。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**proposition** : Boolean'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**proposition**：布尔值'
- en: Proposition which will be evaluated to boolean value. If this is not `AppliedPredicate`,
    it will be wrapped by `Q.is_true`.
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将被评估为布尔值的命题。如果不是`AppliedPredicate`，它将被`Q.is_true`包装。
- en: '**assumptions** : Boolean, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**assumptions**：布尔值，可选'
- en: Local assumptions to evaluate the *proposition*.
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于评估*proposition*的本地假设。
- en: '**context** : AssumptionsContext, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**context**：AssumptionsContext，可选'
- en: Default assumptions to evaluate the *proposition*. By default, this is `sympy.assumptions.global_assumptions`
    variable.
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于评估*proposition*的默认假设。默认情况下，这是`sympy.assumptions.global_assumptions`变量。
- en: 'Returns:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '`True`, `False`, or `None`'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`True`、`False`或`None`'
- en: 'Raises:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**TypeError** : *proposition* or *assumptions* is not valid logical expression.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**TypeError**：*proposition*或*assumptions*不是有效的逻辑表达式。'
- en: '**ValueError** : assumptions are inconsistent.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValueError**：假设不一致。'
- en: Explanation
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This function evaluates the proposition to `True` or `False` if the truth value
    can be determined. If not, it returns `None`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数在能够确定真值时将命题评估为`True`或`False`。如果不能确定，将返回`None`。
- en: It should be discerned from [`refine()`](refine.html#sympy.assumptions.refine.refine
    "sympy.assumptions.refine.refine") which, when applied to a proposition, simplifies
    the argument to symbolic `Boolean` instead of Python built-in `True`, `False`
    or `None`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该与[`refine()`](refine.html#sympy.assumptions.refine.refine "sympy.assumptions.refine.refine")区分开来，当应用于命题时，它将简化参数为符号`Boolean`，而不是Python内置的`True`、`False`或`None`。
- en: '**Syntax**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**Syntax**'
- en: ask(proposition)
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ask(proposition)
- en: ''
  id: totrans-24
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-25
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-27
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Evaluate the *proposition* in global assumption context.
  id: totrans-29
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在全局假设上评估*proposition*。
- en: ''
  id: totrans-30
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-31
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-32
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-33
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ask(proposition, assumptions)
  id: totrans-34
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ask(proposition, assumptions)
- en: ''
  id: totrans-35
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-36
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-37
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-38
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-39
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Evaluate the *proposition* with respect to *assumptions* in global assumption
    context.
  id: totrans-40
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在全局假设上评估*proposition*关于*assumptions*。
- en: Examples
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If the truth value cannot be determined, `None` will be returned.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法确定真值，将返回`None`。
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`ValueError` is raised if assumptions are inconsistent.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果假设不一致，将引发`ValueError`。
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Notes
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Relations in assumptions are not implemented (yet), so the following will not
    give a meaningful result.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 假设中的关系尚未实现（但是），因此以下内容不会给出有意义的结果。
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: It is however a work in progress.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这还在进行中。
- en: See also
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.assumptions.refine.refine`](refine.html#sympy.assumptions.refine.refine
    "sympy.assumptions.refine.refine")'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.assumptions.refine.refine`](refine.html#sympy.assumptions.refine.refine
    "sympy.assumptions.refine.refine")'
- en: Simplification using assumptions. Proposition is not reduced to `None` if the
    truth value cannot be determined.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用假设进行简化。如果无法确定真值，命题不会简化为`None`。
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Register a handler in the ask system. key must be a string and handler a class
    inheriting from AskHandler.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在ask系统中注册一个处理程序。键必须是字符串，处理程序必须是继承自AskHandler类的类。
- en: 'Deprecated since version 1.8.: Use multipledispatch handler instead. See [`Predicate`](assume.html#sympy.assumptions.assume.Predicate
    "sympy.assumptions.assume.Predicate").'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本1.8起已弃用：改用multipledispatch处理程序。参见[`Predicate`](assume.html#sympy.assumptions.assume.Predicate
    "sympy.assumptions.assume.Predicate")。
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Removes a handler from the ask system.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 从ask系统中删除处理程序。
- en: 'Deprecated since version 1.8.: Use multipledispatch handler instead. See [`Predicate`](assume.html#sympy.assumptions.assume.Predicate
    "sympy.assumptions.assume.Predicate").'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本1.8起已弃用：改用multipledispatch处理程序。参见[`Predicate`](assume.html#sympy.assumptions.assume.Predicate
    "sympy.assumptions.assume.Predicate")。
