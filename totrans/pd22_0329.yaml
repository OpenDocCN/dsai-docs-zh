- en: pandas.DataFrame.reindex_like
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reindex_like.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reindex_like.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return an object with matching indices as other object.
  prefs: []
  type: TYPE_NORMAL
- en: Conform the object to the same index on all axes. Optional filling logic, placing
    NaN in locations having no value in the previous index. A new object is produced
    unless the new index is equivalent to the current one and copy=False.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**other**Object of the same data type'
  prefs: []
  type: TYPE_NORMAL
- en: Its row and column indices are used to define the new indices of this object.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**{None, ‘backfill’/’bfill’, ‘pad’/’ffill’, ‘nearest’}'
  prefs: []
  type: TYPE_NORMAL
- en: 'Method to use for filling holes in reindexed DataFrame. Please note: this is
    only applicable to DataFrames/Series with a monotonically increasing/decreasing
    index.'
  prefs: []
  type: TYPE_NORMAL
- en: 'None (default): don’t fill gaps'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'pad / ffill: propagate last valid observation forward to next valid'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'backfill / bfill: use next valid observation to fill gap'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'nearest: use nearest valid observations to fill gap.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**copy**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Return a new object, even if the passed indexes are the same.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The copy keyword will change behavior in pandas 3.0. [Copy-on-Write](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html)
    will be enabled by default, which means that all methods with a copy keyword will
    use a lazy copy mechanism to defer the copy and ignore the copy keyword. The copy
    keyword will be removed in a future version of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: You can already get the future behavior and improvements through enabling copy
    on write `pd.options.mode.copy_on_write = True`
  prefs: []
  type: TYPE_NORMAL
- en: '**limit**int, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum number of consecutive labels to fill for inexact matches.
  prefs: []
  type: TYPE_NORMAL
- en: '**tolerance**optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum distance between original and new labels for inexact matches. The values
    of the index at the matching locations must satisfy the equation `abs(index[indexer]
    - target) <= tolerance`.
  prefs: []
  type: TYPE_NORMAL
- en: Tolerance may be a scalar value, which applies the same tolerance to all values,
    or list-like, which applies variable tolerance per element. List-like includes
    list, tuple, array, Series, and must be the same size as the index and its dtype
    must exactly match the index’s type.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: Same type as caller, but with changed indices on each axis.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.set_index`](pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index")'
  prefs: []
  type: TYPE_NORMAL
- en: Set row labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.reset_index`](pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index")'
  prefs: []
  type: TYPE_NORMAL
- en: Remove row labels or move them to new columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[`DataFrame.reindex`](pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex")'
  prefs: []
  type: TYPE_NORMAL
- en: Change to new indices or expand indices.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Same as calling `.reindex(index=other.index, columns=other.columns,...)`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
