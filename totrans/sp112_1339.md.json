["```py\nscipy.stats.fligner(*samples, center='median', proportiontocut=0.05, axis=0, nan_policy='propagate', keepdims=False)\n```", "```py\n>>> import numpy as np\n>>> small_dose = np.array([\n...     4.2, 11.5, 7.3, 5.8, 6.4, 10, 11.2, 11.2, 5.2, 7,\n...     15.2, 21.5, 17.6, 9.7, 14.5, 10, 8.2, 9.4, 16.5, 9.7\n... ])\n>>> medium_dose = np.array([\n...     16.5, 16.5, 15.2, 17.3, 22.5, 17.3, 13.6, 14.5, 18.8, 15.5,\n...     19.7, 23.3, 23.6, 26.4, 20, 25.2, 25.8, 21.2, 14.5, 27.3\n... ])\n>>> large_dose = np.array([\n...     23.6, 18.5, 33.9, 25.5, 26.4, 32.5, 26.7, 21.5, 23.3, 29.5,\n...     25.5, 26.4, 22.4, 24.5, 24.8, 30.9, 26.4, 27.3, 29.4, 23\n... ]) \n```", "```py\n>>> from scipy import stats\n>>> res = stats.fligner(small_dose, medium_dose, large_dose)\n>>> res.statistic\n1.3878943408857916 \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> k = 3  # number of samples\n>>> dist = stats.chi2(df=k-1)\n>>> val = np.linspace(0, 8, 100)\n>>> pdf = dist.pdf(val)\n>>> fig, ax = plt.subplots(figsize=(8, 5))\n>>> def plot(ax):  # we'll reuse this\n...     ax.plot(val, pdf, color='C0')\n...     ax.set_title(\"Fligner Test Null Distribution\")\n...     ax.set_xlabel(\"statistic\")\n...     ax.set_ylabel(\"probability density\")\n...     ax.set_xlim(0, 8)\n...     ax.set_ylim(0, 0.5)\n>>> plot(ax)\n>>> plt.show() \n```", "```py\n>>> fig, ax = plt.subplots(figsize=(8, 5))\n>>> plot(ax)\n>>> pvalue = dist.sf(res.statistic)\n>>> annotation = (f'p-value={pvalue:.4f}\\n(shaded area)')\n>>> props = dict(facecolor='black', width=1, headwidth=5, headlength=8)\n>>> _ = ax.annotate(annotation, (1.5, 0.22), (2.25, 0.3), arrowprops=props)\n>>> i = val >= res.statistic\n>>> ax.fill_between(val[i], y1=0, y2=pdf[i], color='C0')\n>>> plt.show() \n```", "```py\n>>> res.pvalue\n0.49960016501182125 \n```", "```py\n>>> def statistic(*samples):\n...     return stats.fligner(*samples).statistic\n>>> ref = stats.permutation_test(\n...     (small_dose, medium_dose, large_dose), statistic,\n...     permutation_type='independent', alternative='greater'\n... )\n>>> fig, ax = plt.subplots(figsize=(8, 5))\n>>> plot(ax)\n>>> bins = np.linspace(0, 8, 25)\n>>> ax.hist(\n...     ref.null_distribution, bins=bins, density=True, facecolor=\"C1\"\n... )\n>>> ax.legend(['aymptotic approximation\\n(many observations)',\n...            'randomized null distribution'])\n>>> plot(ax)\n>>> plt.show() \n```", "```py\n>>> ref.pvalue  # randomized test p-value\n0.4332  # may vary \n```", "```py\n>>> a = [8.88, 9.12, 9.04, 8.98, 9.00, 9.08, 9.01, 8.85, 9.06, 8.99]\n>>> b = [8.88, 8.95, 9.29, 9.44, 9.15, 9.58, 8.36, 9.18, 8.67, 9.05]\n>>> c = [8.95, 9.12, 8.95, 8.85, 9.03, 8.84, 9.07, 8.98, 8.86, 8.98]\n>>> stat, p = stats.fligner(a, b, c)\n>>> p\n0.00450826080004775 \n```", "```py\n>>> [np.var(x, ddof=1) for x in [a, b, c]]\n[0.007054444444444413, 0.13073888888888888, 0.008890000000000002] \n```"]