- en: scipy.signal.correlate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.correlate.html#scipy.signal.correlate](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.correlate.html#scipy.signal.correlate)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Cross-correlate two N-dimensional arrays.
  prefs: []
  type: TYPE_NORMAL
- en: Cross-correlate *in1* and *in2*, with the output size determined by the *mode*
    argument.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**in1**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: First input.
  prefs: []
  type: TYPE_NORMAL
- en: '**in2**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Second input. Should have the same number of dimensions as *in1*.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**str {‘full’, ‘valid’, ‘same’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'A string indicating the size of the output:'
  prefs: []
  type: TYPE_NORMAL
- en: '`full`'
  prefs: []
  type: TYPE_NORMAL
- en: The output is the full discrete linear cross-correlation of the inputs. (Default)
  prefs: []
  type: TYPE_NORMAL
- en: '`valid`'
  prefs: []
  type: TYPE_NORMAL
- en: The output consists only of those elements that do not rely on the zero-padding.
    In ‘valid’ mode, either *in1* or *in2* must be at least as large as the other
    in every dimension.
  prefs: []
  type: TYPE_NORMAL
- en: '`same`'
  prefs: []
  type: TYPE_NORMAL
- en: The output is the same size as *in1*, centered with respect to the ‘full’ output.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**str {‘auto’, ‘direct’, ‘fft’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A string indicating which method to use to calculate the correlation.
  prefs: []
  type: TYPE_NORMAL
- en: '`direct`'
  prefs: []
  type: TYPE_NORMAL
- en: The correlation is determined directly from sums, the definition of correlation.
  prefs: []
  type: TYPE_NORMAL
- en: '`fft`'
  prefs: []
  type: TYPE_NORMAL
- en: The Fast Fourier Transform is used to perform the correlation more quickly (only
    available for numerical arrays.)
  prefs: []
  type: TYPE_NORMAL
- en: '`auto`'
  prefs: []
  type: TYPE_NORMAL
- en: Automatically chooses direct or Fourier method based on an estimate of which
    is faster (default). See [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve
    "scipy.signal.convolve") Notes for more detail.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.19.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**correlate**array'
  prefs: []
  type: TYPE_NORMAL
- en: An N-dimensional array containing a subset of the discrete linear cross-correlation
    of *in1* with *in2*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`choose_conv_method`](scipy.signal.choose_conv_method.html#scipy.signal.choose_conv_method
    "scipy.signal.choose_conv_method")'
  prefs: []
  type: TYPE_NORMAL
- en: contains more documentation on *method*.
  prefs: []
  type: TYPE_NORMAL
- en: '[`correlation_lags`](scipy.signal.correlation_lags.html#scipy.signal.correlation_lags
    "scipy.signal.correlation_lags")'
  prefs: []
  type: TYPE_NORMAL
- en: calculates the lag / displacement indices array for 1D cross-correlation.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The correlation z of two d-dimensional arrays x and y is defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This way, if x and y are 1-D arrays and `z = correlate(x, y, 'full')` then
  prefs: []
  type: TYPE_NORMAL
- en: \[z[k] = (x * y)(k - N + 1) = \sum_{l=0}^{||x||-1}x_l y_{l-k+N-1}^{*}\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(k = 0, 1, ..., ||x|| + ||y|| - 2\)
  prefs: []
  type: TYPE_NORMAL
- en: where \(||x||\) is the length of `x`, \(N = \max(||x||,||y||)\), and \(y_m\)
    is 0 when m is outside the range of y.
  prefs: []
  type: TYPE_NORMAL
- en: '`method=''fft''` only works for numerical arrays as it relies on [`fftconvolve`](scipy.signal.fftconvolve.html#scipy.signal.fftconvolve
    "scipy.signal.fftconvolve"). In certain cases (i.e., arrays of objects or when
    rounding integers can lose precision), `method=''direct''` is always used.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When using “same” mode with even-length inputs, the outputs of [`correlate`](#scipy.signal.correlate
    "scipy.signal.correlate") and [`correlate2d`](scipy.signal.correlate2d.html#scipy.signal.correlate2d
    "scipy.signal.correlate2d") differ: There is a 1-index offset between them.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Implement a matched filter using cross-correlation, to recover a signal that
    has passed through a noisy channel.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-correlate-1_00_00.png](../Images/8ff29d64d3448afc628dd7f022bc04de.png)'
  prefs: []
  type: TYPE_IMG
- en: Compute the cross-correlation of a noisy signal with the original signal.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-correlate-1_01_00.png](../Images/81f35791552ef08df7a9a8cc0bb12f21.png)'
  prefs: []
  type: TYPE_IMG
