- en: scipy.stats.Covariance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.Covariance.html#scipy.stats.Covariance](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.Covariance.html#scipy.stats.Covariance)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Representation of a covariance matrix
  prefs: []
  type: TYPE_NORMAL
- en: Calculations involving covariance matrices (e.g. data whitening, multivariate
    normal function evaluation) are often performed more efficiently using a decomposition
    of the covariance matrix instead of the covariance matrix itself. This class allows
    the user to construct an object representing a covariance matrix using any of
    several decompositions and perform calculations using a common interface.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The [`Covariance`](#scipy.stats.Covariance "scipy.stats.Covariance") class cannot
    be instantiated directly. Instead, use one of the factory methods (e.g. [`Covariance.from_diagonal`](scipy.stats.Covariance.from_diagonal.html#scipy.stats.Covariance.from_diagonal
    "scipy.stats.Covariance.from_diagonal")).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: The [`Covariance`](#scipy.stats.Covariance "scipy.stats.Covariance") class is
    is used by calling one of its factory methods to create a [`Covariance`](#scipy.stats.Covariance
    "scipy.stats.Covariance") object, then pass that representation of the [`Covariance`](#scipy.stats.Covariance
    "scipy.stats.Covariance") matrix as a shape parameter of a multivariate distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, the multivariate normal distribution can accept an array representing
    a covariance matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: but the calculations are performed in a very generic way that does not take
    advantage of any special properties of the covariance matrix. Because our covariance
    matrix is diagonal, we can use `Covariance.from_diagonal` to create an object
    representing the covariance matrix, and [`multivariate_normal`](scipy.stats.multivariate_normal.html#scipy.stats.multivariate_normal
    "scipy.stats.multivariate_normal") can use this to compute the probability density
    function more efficiently.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`covariance`](scipy.stats.Covariance.covariance.html#scipy.stats.Covariance.covariance
    "scipy.stats.Covariance.covariance")'
  prefs: []
  type: TYPE_NORMAL
- en: Explicit representation of the covariance matrix
  prefs: []
  type: TYPE_NORMAL
- en: '[`log_pdet`](scipy.stats.Covariance.log_pdet.html#scipy.stats.Covariance.log_pdet
    "scipy.stats.Covariance.log_pdet")'
  prefs: []
  type: TYPE_NORMAL
- en: Log of the pseudo-determinant of the covariance matrix
  prefs: []
  type: TYPE_NORMAL
- en: '[`rank`](scipy.stats.Covariance.rank.html#scipy.stats.Covariance.rank "scipy.stats.Covariance.rank")'
  prefs: []
  type: TYPE_NORMAL
- en: Rank of the covariance matrix
  prefs: []
  type: TYPE_NORMAL
- en: '[`shape`](scipy.stats.Covariance.shape.html#scipy.stats.Covariance.shape "scipy.stats.Covariance.shape")'
  prefs: []
  type: TYPE_NORMAL
- en: Shape of the covariance array
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`colorize`](scipy.stats.Covariance.colorize.html#scipy.stats.Covariance.colorize
    "scipy.stats.Covariance.colorize")(x) | Perform a colorizing transformation on
    data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`from_cholesky`](scipy.stats.Covariance.from_cholesky.html#scipy.stats.Covariance.from_cholesky
    "scipy.stats.Covariance.from_cholesky")(cholesky) | Representation of a covariance
    provided via the (lower) Cholesky factor |'
  prefs: []
  type: TYPE_TB
- en: '| [`from_diagonal`](scipy.stats.Covariance.from_diagonal.html#scipy.stats.Covariance.from_diagonal
    "scipy.stats.Covariance.from_diagonal")(diagonal) | Return a representation of
    a covariance matrix from its diagonal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`from_eigendecomposition`](scipy.stats.Covariance.from_eigendecomposition.html#scipy.stats.Covariance.from_eigendecomposition
    "scipy.stats.Covariance.from_eigendecomposition")(eigendecomposition) | Representation
    of a covariance provided via eigendecomposition |'
  prefs: []
  type: TYPE_TB
- en: '| [`from_precision`](scipy.stats.Covariance.from_precision.html#scipy.stats.Covariance.from_precision
    "scipy.stats.Covariance.from_precision")(precision[, covariance]) | Return a representation
    of a covariance from its precision matrix. |'
  prefs: []
  type: TYPE_TB
- en: '| [`whiten`](scipy.stats.Covariance.whiten.html#scipy.stats.Covariance.whiten
    "scipy.stats.Covariance.whiten")(x) | Perform a whitening transformation on data.
    |'
  prefs: []
  type: TYPE_TB
