- en: pandas.io.formats.style.Styler.set_td_classes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.set_td_classes.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.set_td_classes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Set the `class` attribute of `<td>` HTML elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**classes**DataFrame'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame containing strings that will be translated to CSS classes, mapped
    by identical column and index key values that must exist on the underlying Styler
    data. None, NaN values, and empty strings will be ignored and not affect the rendered
    HTML.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Styler
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.set_table_styles`](pandas.io.formats.style.Styler.set_table_styles.html#pandas.io.formats.style.Styler.set_table_styles
    "pandas.io.formats.style.Styler.set_table_styles")'
  prefs: []
  type: TYPE_NORMAL
- en: Set the table styles included within the `<style>` HTML element.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.set_table_attributes`](pandas.io.formats.style.Styler.set_table_attributes.html#pandas.io.formats.style.Styler.set_table_attributes
    "pandas.io.formats.style.Styler.set_table_attributes")'
  prefs: []
  type: TYPE_NORMAL
- en: Set the table attributes added to the `<table>` HTML element.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Can be used in combination with `Styler.set_table_styles` to define an internal
    CSS solution without reference to external CSS files.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Using MultiIndex columns and a classes DataFrame as a subset of the underlying,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Form of the output with new additional css classes,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
