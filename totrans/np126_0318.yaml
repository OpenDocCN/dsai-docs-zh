- en: numpy.geomspace
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.geomspace.html](https://numpy.org/doc/1.26/reference/generated/numpy.geomspace.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return numbers spaced evenly on a log scale (a geometric progression).
  prefs: []
  type: TYPE_NORMAL
- en: This is similar to [`logspace`](numpy.logspace.html#numpy.logspace "numpy.logspace"),
    but with endpoints specified directly. Each output sample is a constant multiple
    of the previous.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.16.0: Non-scalar *start* and *stop* are now supported.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**start**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The starting value of the sequence.
  prefs: []
  type: TYPE_NORMAL
- en: '**stop**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The final value of the sequence, unless *endpoint* is False. In that case, `num
    + 1` values are spaced over the interval in log-space, of which all but the last
    (a sequence of length *num*) are returned.
  prefs: []
  type: TYPE_NORMAL
- en: '**num**integer, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Number of samples to generate. Default is 50.
  prefs: []
  type: TYPE_NORMAL
- en: '**endpoint**boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If true, *stop* is the last sample. Otherwise, it is not included. Default is
    True.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**dtype'
  prefs: []
  type: TYPE_NORMAL
- en: The type of the output array. If [`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype")
    is not given, the data type is inferred from *start* and *stop*. The inferred
    dtype will never be an integer; *float* is chosen even if the arguments would
    produce an array of integers.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The axis in the result to store the samples. Relevant only if start or stop
    are array-like. By default (0), the samples will be along a new axis inserted
    at the beginning. Use -1 to get an axis at the end.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.16.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**samples**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: '*num* samples, equally spaced on a log scale.'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`logspace`](numpy.logspace.html#numpy.logspace "numpy.logspace")'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to geomspace, but with endpoints specified using log and base.
  prefs: []
  type: TYPE_NORMAL
- en: '[`linspace`](numpy.linspace.html#numpy.linspace "numpy.linspace")'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to geomspace, but with arithmetic instead of geometric progression.
  prefs: []
  type: TYPE_NORMAL
- en: '[`arange`](numpy.arange.html#numpy.arange "numpy.arange")'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to linspace, with the step size specified instead of the number of samples.
  prefs: []
  type: TYPE_NORMAL
- en: '[How to create arrays with regularly-spaced values](../../user/how-to-partition.html#how-to-partition)'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If the inputs or dtype are complex, the output will follow a logarithmic spiral
    in the complex plane. (There are an infinite number of spirals passing through
    two points; the output will follow the shortest such path.)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that the above may not produce exact integers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Negative, decreasing, and complex inputs are allowed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Graphical illustration of *endpoint* parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/numpy-geomspace-1.png](../Images/46b932ae8926429a748c7d1b3890a7b2.png)'
  prefs: []
  type: TYPE_IMG
