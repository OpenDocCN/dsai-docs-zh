- en: numpy.compress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.compress.html](https://numpy.org/doc/1.26/reference/generated/numpy.compress.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return selected slices of an array along given axis.
  prefs: []
  type: TYPE_NORMAL
- en: When working along a given axis, a slice along that axis is returned in *output*
    for each index where *condition* evaluates to True. When working on a 1-D array,
    [`compress`](#numpy.compress "numpy.compress") is equivalent to [`extract`](numpy.extract.html#numpy.extract
    "numpy.extract").
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**condition**1-D array of bools'
  prefs: []
  type: TYPE_NORMAL
- en: Array that selects which entries to return. If len(condition) is less than the
    size of *a* along the given axis, then output is truncated to the length of the
    condition array.
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array from which to extract a part.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to take slices. If None (default), work on the flattened array.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Output array. Its type is preserved and it must be of the right shape to hold
    the output.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**compressed_array**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: A copy of *a* without the slices along axis for which *condition* is false.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`take`](numpy.take.html#numpy.take "numpy.take"), [`choose`](numpy.choose.html#numpy.choose
    "numpy.choose"), [`diag`](numpy.diag.html#numpy.diag "numpy.diag"), [`diagonal`](numpy.diagonal.html#numpy.diagonal
    "numpy.diagonal"), [`select`](numpy.select.html#numpy.select "numpy.select")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`ndarray.compress`](numpy.ndarray.compress.html#numpy.ndarray.compress "numpy.ndarray.compress")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent method in ndarray
  prefs: []
  type: TYPE_NORMAL
- en: '[`extract`](numpy.extract.html#numpy.extract "numpy.extract")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent method when working on 1-D arrays
  prefs: []
  type: TYPE_NORMAL
- en: '[Output type determination](../../user/basics.ufuncs.html#ufuncs-output-type)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Working on the flattened array does not return slices along an axis but selects
    elements.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
