- en: scipy.special.elliprf
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.elliprf.html#scipy.special.elliprf](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.elliprf.html#scipy.special.elliprf)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Completely-symmetric elliptic integral of the first kind.
  prefs: []
  type: TYPE_NORMAL
- en: The function RF is defined as [[1]](#rb30d42eac971-1)
  prefs: []
  type: TYPE_NORMAL
- en: \[R_{\mathrm{F}}(x, y, z) = \frac{1}{2} \int_0^{+\infty} [(t + x) (t + y) (t
    + z)]^{-1/2} dt\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x, y, z**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Real or complex input parameters. *x*, *y*, or *z* can be any number in the
    complex plane cut along the negative real axis, but at most one of them can be
    zero.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function values
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**R**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Value of the integral. If all of *x*, *y*, and *z* are real, the return value
    is real. Otherwise, the return value is complex.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`elliprc`](scipy.special.elliprc.html#scipy.special.elliprc "scipy.special.elliprc")'
  prefs: []
  type: TYPE_NORMAL
- en: Degenerate symmetric integral.
  prefs: []
  type: TYPE_NORMAL
- en: '[`elliprd`](scipy.special.elliprd.html#scipy.special.elliprd "scipy.special.elliprd")'
  prefs: []
  type: TYPE_NORMAL
- en: Symmetric elliptic integral of the second kind.
  prefs: []
  type: TYPE_NORMAL
- en: '[`elliprg`](scipy.special.elliprg.html#scipy.special.elliprg "scipy.special.elliprg")'
  prefs: []
  type: TYPE_NORMAL
- en: Completely-symmetric elliptic integral of the second kind.
  prefs: []
  type: TYPE_NORMAL
- en: '[`elliprj`](scipy.special.elliprj.html#scipy.special.elliprj "scipy.special.elliprj")'
  prefs: []
  type: TYPE_NORMAL
- en: Symmetric elliptic integral of the third kind.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The code implements Carlson’s algorithm based on the duplication theorems and
    series expansion up to the 7th order (cf.: [https://dlmf.nist.gov/19.36.i](https://dlmf.nist.gov/19.36.i))
    and the AGM algorithm for the complete integral. [[2]](#rb30d42eac971-2)'
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.8.0.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: B. C. Carlson, ed., Chapter 19 in “Digital Library of Mathematical Functions,”
    NIST, US Dept. of Commerce. [https://dlmf.nist.gov/19.16.E1](https://dlmf.nist.gov/19.16.E1)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: B. C. Carlson, “Numerical computation of real or complex elliptic integrals,”
    Numer. Algorithm, vol. 10, no. 1, pp. 13-26, 1995. [https://arxiv.org/abs/math/9409227](https://arxiv.org/abs/math/9409227)
    [https://doi.org/10.1007/BF02198293](https://doi.org/10.1007/BF02198293)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Basic homogeneity property:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'All three arguments coincide:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The so-called “first lemniscate constant”:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
