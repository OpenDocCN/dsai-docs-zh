["```py\nclass sympy.core.function.Function(*args)\n```", "```py\n>>> from sympy import Function, Symbol\n>>> x = Symbol('x')\n>>> f = Function('f')\n>>> g = Function('g')(x)\n>>> f\nf\n>>> f(x)\nf(x)\n>>> g\ng(x)\n>>> f(x).diff(x)\nDerivative(f(x), x)\n>>> g.diff(x)\nDerivative(g(x), x) \n```", "```py\n>>> f_real = Function('f', real=True)\n>>> f_real(x).is_real\nTrue\n>>> f_real_inherit = Function(Symbol('f', real=True))\n>>> f_real_inherit(x).is_real\nTrue \n```", "```py\nas_base_exp()\n```", "```py\nfdiff(argindex=1)\n```", "```py\nclassmethod is_singular(a)\n```"]