["```py\n>>> from sympy import sin, cos, exp, pi, symbols\n>>> from sympy.vector import CoordSys3D, ParametricRegion, ImplicitRegion, vector_integrate\n>>> from sympy.abc import r, x, y, z, theta, phi\n>>> C = CoordSys3D('C') \n```", "```py\n>>> param_circle = ParametricRegion((4*cos(theta), 4*sin(theta)), (theta, 0, 2*pi)) \n```", "```py\n>>> implicit_circle = ImplicitRegion((x, y), x**2 + y**2 - 4) \n```", "```py\n>>> vector_integrate(1, param_circle)\n8*pi\n>>> vector_integrate(1, implicit_circle)\n4*pi \n```", "```py\n>>> from sympy.geometry import Point, Polygon\n>>> triangle = Polygon(Point(1, 2), (3, 5), (1,6))\n>>> vector_integrate(1, triangle)\nsqrt(5) + sqrt(13) + 4 \n```", "```py\n>>> solidsphere = ParametricRegion((r*sin(phi)*cos(theta),r*sin(phi)*sin(theta), r*cos(phi)),\n...                             (phi, 0, pi), (theta, 0, 2*pi), (r, 0, 3))\n>>> vector_integrate(1, solidsphere)\n36*pi \n```", "```py\n>>> triangle = ParametricRegion((x, y), (x, 0, 5), (y, 0, 5 - x))\n>>> vector_integrate(C.x*C.y, triangle)\n625/24 \n```", "```py\n>>> a, h = symbols('a h', positive=True)\n>>> cylinder = ParametricRegion((r*cos(theta), r*sin(theta), z),\n...                     (theta, 0, 2*pi), (z, 0, h), (r, 0, a))\n>>> vector_integrate(C.x**2 + C.y**2, cylinder)\npi*a**4*h/2 \n```", "```py\n>>> semisphere = ParametricRegion((r*sin(phi)*cos(theta), r*sin(phi)*sin(theta), r*cos(phi)),\\\n...                             (phi, 0, pi/2), (theta, 0, 2*pi))\n>>> flux = vector_integrate(a*C.k, semisphere)\n>>> flux\npi*a*r**2 \n```", "```py\n>>> L = symbols('L', positive=True)\n>>> top_face = ParametricRegion((x, y, L/2), (x, -L/2, L/2), (y, -L/2, L/2))\n>>> bottom_face = ParametricRegion((x, y, -L/2), (x, -L/2, L/2), (y, -L/2, L/2))\n>>> flux = vector_integrate(C.x**2*C.k, top_face) + vector_integrate(C.y**2*C.k, bottom_face)\n>>> flux\nL**4/6 \n```", "```py\n>>> from sympy.vector import curl\n>>> curve = ParametricRegion((cos(theta), sin(theta)), (theta, 0, pi/2))\n>>> surface = ParametricRegion((r*cos(theta), r*sin(theta)), (r, 0, 1), (theta, 0, pi/2))\n>>> F = C.y*C.i + C.z*C.k + C.x*C.k\n>>>\n>>> vector_integrate(F, curve)\n-pi/4\n>>> vector_integrate(curl(F), surface)\n-pi/4 \n```", "```py\n>>> circle = ParametricRegion((cos(theta), sin(theta), 1), (theta, 0, 2*pi))\n>>> cone = ParametricRegion((r*cos(theta), r*sin(theta), r), (r, 0, 1), (theta, 0, 2*pi))\n>>> cone = ParametricRegion((r*cos(theta), r*sin(theta), r), (r, 0, 1), (theta, 0, 2*pi))\n>>> f = (-C.y**3/3 + sin(C.x))*C.i + (C.x**3/3 + cos(C.y))*C.j + C.x*C.y*C.z*C.k\n>>> vector_integrate(f,  circle)\npi/2\n>>> vector_integrate(curl(f),  cone)\npi/2 \n```", "```py\n>>> from sympy.vector import divergence\n>>> sphere = ParametricRegion((4*sin(phi)*cos(theta),4*sin(phi)*sin(theta), 4*cos(phi)),\n...                         (phi, 0, pi), (theta, 0, 2*pi))\n>>> solidsphere = ParametricRegion((r*sin(phi)*cos(theta),r*sin(phi)*sin(theta), r*cos(phi)),\n...     (r, 0, 4),(phi, 0, pi), (theta, 0, 2*pi))\n>>> field = C.x**3*C.i + C.y**3*C.j + C.z**3*C.k\n>>> vector_integrate(field, sphere)\n12288*pi/5\n>>> vector_integrate(divergence(field), solidsphere)\n12288*pi/5 \n```", "```py\n>>> cube = ParametricRegion((x, y, z), (x, 0, 1), (y, 0, 1), (z, 0, 1))\n>>> field = 2*C.x*C.y*C.i + 3*C.x*C.y*C.j + C.z*exp(C.x + C.y)*C.k\n>>> vector_integrate(divergence(field), cube)\n-E + 7/2 + E*(-1 + E) \n```"]