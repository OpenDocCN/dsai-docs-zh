- en: pandas.core.groupby.DataFrameGroupBy.nth
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html](https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Take the nth row from each group if n is an int, otherwise a subset of rows.
  prefs: []
  type: TYPE_NORMAL
- en: Can be either a call or an index. dropna is not available with index notation.
    Index notation accepts a comma separated list of integers and slices.
  prefs: []
  type: TYPE_NORMAL
- en: If dropna, will take the nth non-null row, dropna is either ‘all’ or ‘any’;
    this is equivalent to calling dropna(how=dropna) before the groupby.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, slice or list of ints and slices'
  prefs: []
  type: TYPE_NORMAL
- en: A single nth value for the row or a list of nth values or slices.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.4.0: Added slice and lists containing slices. Added index
    notation.'
  prefs: []
  type: TYPE_NORMAL
- en: '**dropna**{‘any’, ‘all’, None}, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Apply the specified dropna operation before counting which row is the nth row.
    Only supported if n is an int.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: N-th value within each group.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '`Series.groupby`'
  prefs: []
  type: TYPE_NORMAL
- en: Apply a function groupby to a Series.
  prefs: []
  type: TYPE_NORMAL
- en: '`DataFrame.groupby`'
  prefs: []
  type: TYPE_NORMAL
- en: Apply a function groupby to each row or column of a DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Index notation may also be used
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Specifying dropna allows ignoring `NaN` values
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: When the specified `n` is larger than any of the groups, an empty DataFrame
    is returned
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
