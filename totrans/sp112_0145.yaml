- en: scipy.integrate.RK45
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.integrate.RK45
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.RK45.html#scipy.integrate.RK45](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.RK45.html#scipy.integrate.RK45)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.RK45.html#scipy.integrate.RK45](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.RK45.html#scipy.integrate.RK45)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Explicit Runge-Kutta method of order 5(4).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 显式五阶四阶 Runge-Kutta 方法。
- en: This uses the Dormand-Prince pair of formulas [[1]](#r959d327f6269-1). The error
    is controlled assuming accuracy of the fourth-order method accuracy, but steps
    are taken using the fifth-order accurate formula (local extrapolation is done).
    A quartic interpolation polynomial is used for the dense output [[2]](#r959d327f6269-2).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这使用了 Dormand-Prince 一对公式 [[1]](#r959d327f6269-1)。 错误控制假设精度为四阶方法的精度，但使用第五阶精确公式（进行局部外推）。
    密集输出使用四次插值多项式 [[2]](#r959d327f6269-2)。
- en: Can be applied in the complex domain.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 可应用于复域。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fun**callable'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**fun**callable'
- en: 'Right-hand side of the system. The calling signature is `fun(t, y)`. Here `t`
    is a scalar, and there are two options for the ndarray `y`: It can either have
    shape (n,); then `fun` must return array_like with shape (n,). Alternatively it
    can have shape (n, k); then `fun` must return an array_like with shape (n, k),
    i.e., each column corresponds to a single column in `y`. The choice between the
    two options is determined by *vectorized* argument (see below).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的右手边。 调用签名为 `fun(t, y)`。 这里 `t` 是标量，ndarray `y` 有两种选择：它可以具有形状（n，）；然后 `fun`
    必须返回形状为（n，）的 array_like。 或者它可以具有形状（n，k）；然后 `fun` 必须返回形状为（n，k）的 array_like，即每列对应于
    `y` 中的单个列。 选择两种选项之间由 *vectorized* 参数决定（见下文）。
- en: '**t0**float'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**t0**float'
- en: Initial time.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 初始时间。
- en: '**y0**array_like, shape (n,)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**y0**array_like，形状为（n，）'
- en: Initial state.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 初始状态。
- en: '**t_bound**float'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**t_bound**float'
- en: Boundary time - the integration won’t continue beyond it. It also determines
    the direction of the integration.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 边界时间 - 积分不会超出它。 它还确定了积分的方向。
- en: '**first_step**float or None, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**first_step**float 或 None，可选'
- en: Initial step size. Default is `None` which means that the algorithm should choose.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 初始步长。 默认为 `None`，这意味着算法应该选择。
- en: '**max_step**float, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**max_step**float，可选'
- en: Maximum allowed step size. Default is np.inf, i.e., the step size is not bounded
    and determined solely by the solver.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最大允许步长。 默认为 np.inf，即步长不受限制，完全由求解器确定。
- en: '**rtol, atol**float and array_like, optional'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**rtol, atol**float 和 array_like，可选'
- en: Relative and absolute tolerances. The solver keeps the local error estimates
    less than `atol + rtol * abs(y)`. Here *rtol* controls a relative accuracy (number
    of correct digits), while *atol* controls absolute accuracy (number of correct
    decimal places). To achieve the desired *rtol*, set *atol* to be smaller than
    the smallest value that can be expected from `rtol * abs(y)` so that *rtol* dominates
    the allowable error. If *atol* is larger than `rtol * abs(y)` the number of correct
    digits is not guaranteed. Conversely, to achieve the desired *atol* set *rtol*
    such that `rtol * abs(y)` is always smaller than *atol*. If components of y have
    different scales, it might be beneficial to set different *atol* values for different
    components by passing array_like with shape (n,) for *atol*. Default values are
    1e-3 for *rtol* and 1e-6 for *atol*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 相对和绝对容差。 求解器使局部误差估计保持小于 `atol + rtol * abs(y)`。 这里 *rtol* 控制相对精度（正确数字的数量），而
    *atol* 控制绝对精度（正确小数位的数量）。 要实现所需的 *rtol*，将 *atol* 设置为小于可以从 `rtol * abs(y)` 预期的最小值，以便
    *rtol* 主导允许的误差。 如果 *atol* 大于 `rtol * abs(y)`，则不能保证正确的数字。 相反，为了实现所需的 *atol*，设置
    *rtol*，使得 `rtol * abs(y)` 始终小于 *atol*。 如果 y 的组件具有不同的尺度，则通过传递形状为（n，）的 array_like
    来为 *atol* 的不同组件设置不同的 *atol* 值可能是有益的。 默认值为 *rtol* 为 1e-3 和 *atol* 为 1e-6。
- en: '**vectorized**bool, optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**vectorized**bool，可选'
- en: Whether *fun* is implemented in a vectorized fashion. Default is False.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 是否在矢量化方式中实现 *fun*。 默认为 False。
- en: References
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: J. R. Dormand, P. J. Prince, “A family of embedded Runge-Kutta formulae”, Journal
    of Computational and Applied Mathematics, Vol. 6, No. 1, pp. 19-26, 1980.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: J. R. Dormand, P. J. Prince，“A family of embedded Runge-Kutta formulae”，Journal
    of Computational and Applied Mathematics，Vol. 6，No. 1，pp. 19-26，1980。
- en: '[[2](#id2)]'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2](#id2)]'
- en: L. W. Shampine, “Some Practical Runge-Kutta Formulas”, Mathematics of Computation,,
    Vol. 46, No. 173, pp. 135-150, 1986.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: L. W. Shampine，“Some Practical Runge-Kutta Formulas”，Mathematics of Computation，Vol.
    46，No. 173，pp. 135-150，1986。
- en: 'Attributes:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**n**int'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**int'
- en: Number of equations.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 方程的数量。
- en: '**status**string'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**status**string'
- en: 'Current status of the solver: ‘running’, ‘finished’ or ‘failed’.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 求解器的当前状态：'running'、'finished'或'failed'。
- en: '**t_bound**float'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**t_bound**float'
- en: Boundary time.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 边界时间。
- en: '**direction**float'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**direction**float'
- en: 'Integration direction: +1 or -1.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 积分方向：+1或-1。
- en: '**t**float'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**t**float'
- en: Current time.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当前时间。
- en: '**y**ndarray'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**ndarray'
- en: Current state.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当前状态。
- en: '**t_old**float'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**t_old**float'
- en: Previous time. None if no steps were made yet.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个时间。如果尚未进行任何步骤，则为None。
- en: '**step_size**float'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**step_size**float'
- en: Size of the last successful step. None if no steps were made yet.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一次成功步长的大小。如果尚未进行任何步骤，则为None。
- en: '**nfev**int'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**nfev**int'
- en: Number evaluations of the system’s right-hand side.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 系统右手边的评估次数。
- en: '**njev**int'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**njev**int'
- en: Number of evaluations of the Jacobian. Is always 0 for this solver as it does
    not use the Jacobian.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 雅可比矩阵的评估次数。对于这个求解器，始终为0，因为它不使用雅可比矩阵。
- en: '**nlu**int'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**nlu**int'
- en: Number of LU decompositions. Is always 0 for this solver.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: LU分解次数。对于这个求解器，始终为0。
- en: Methods
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`dense_output`](scipy.integrate.RK45.dense_output.html#scipy.integrate.RK45.dense_output
    "scipy.integrate.RK45.dense_output")() | Compute a local interpolant over the
    last successful step. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`dense_output`](scipy.integrate.RK45.dense_output.html#scipy.integrate.RK45.dense_output
    "scipy.integrate.RK45.dense_output")() | 计算在最后一次成功步骤上的局部插值。 |'
- en: '| [`step`](scipy.integrate.RK45.step.html#scipy.integrate.RK45.step "scipy.integrate.RK45.step")()
    | Perform one integration step. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`step`](scipy.integrate.RK45.step.html#scipy.integrate.RK45.step "scipy.integrate.RK45.step")()
    | 执行一次积分步骤。 |'
