- en: numpy.cumsum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.cumsum.html](https://numpy.org/doc/1.26/reference/generated/numpy.cumsum.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the cumulative sum of the elements along a given axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which the cumulative sum is computed. The default (None) is to compute
    the cumsum over the flattened array.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**dtype, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Type of the returned array and of the accumulator in which the elements are
    summed. If [`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype") is not specified,
    it defaults to the dtype of *a*, unless *a* has an integer dtype with a precision
    less than that of the default platform integer. In that case, the default platform
    integer is used.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Alternative output array in which to place the result. It must have the same
    shape and buffer length as the expected output but the type will be cast if necessary.
    See [Output type determination](../../user/basics.ufuncs.html#ufuncs-output-type)
    for more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**cumsum_along_axis**ndarray.'
  prefs: []
  type: TYPE_NORMAL
- en: A new array holding the result is returned unless *out* is specified, in which
    case a reference to *out* is returned. The result has the same size as *a*, and
    the same shape as *a* if *axis* is not None or *a* is a 1-d array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sum`](numpy.sum.html#numpy.sum "numpy.sum")'
  prefs: []
  type: TYPE_NORMAL
- en: Sum array elements.
  prefs: []
  type: TYPE_NORMAL
- en: '[`trapz`](numpy.trapz.html#numpy.trapz "numpy.trapz")'
  prefs: []
  type: TYPE_NORMAL
- en: Integration of array values using the composite trapezoidal rule.
  prefs: []
  type: TYPE_NORMAL
- en: '[`diff`](numpy.diff.html#numpy.diff "numpy.diff")'
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the n-th discrete difference along given axis.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Arithmetic is modular when using integer types, and no error is raised on overflow.
  prefs: []
  type: TYPE_NORMAL
- en: '`cumsum(a)[-1]` may not be equal to `sum(a)` for floating-point values since
    `sum` may use a pairwise summation routine, reducing the roundoff-error. See [`sum`](numpy.sum.html#numpy.sum
    "numpy.sum") for more information.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '`cumsum(b)[-1]` may not be equal to `sum(b)`'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
