["```py\nma.masked_where(condition, a, copy=True)\n```", "```py\n>>> import numpy.ma as ma\n>>> a = np.arange(4)\n>>> a\narray([0, 1, 2, 3])\n>>> ma.masked_where(a <= 2, a)\nmasked_array(data=[--, --, --, 3],\n mask=[ True,  True,  True, False],\n fill_value=999999) \n```", "```py\n>>> b = ['a', 'b', 'c', 'd']\n>>> ma.masked_where(a == 2, b)\nmasked_array(data=['a', 'b', --, 'd'],\n mask=[False, False,  True, False],\n fill_value='N/A',\n dtype='<U1') \n```", "```py\n>>> c = ma.masked_where(a <= 2, a)\n>>> c\nmasked_array(data=[--, --, --, 3],\n mask=[ True,  True,  True, False],\n fill_value=999999)\n>>> c[0] = 99\n>>> c\nmasked_array(data=[99, --, --, 3],\n mask=[False,  True,  True, False],\n fill_value=999999)\n>>> a\narray([0, 1, 2, 3])\n>>> c = ma.masked_where(a <= 2, a, copy=False)\n>>> c[0] = 99\n>>> c\nmasked_array(data=[99, --, --, 3],\n mask=[False,  True,  True, False],\n fill_value=999999)\n>>> a\narray([99,  1,  2,  3]) \n```", "```py\n>>> a = np.arange(4)\n>>> a = ma.masked_where(a == 2, a)\n>>> a\nmasked_array(data=[0, 1, --, 3],\n mask=[False, False,  True, False],\n fill_value=999999)\n>>> b = np.arange(4)\n>>> b = ma.masked_where(b == 0, b)\n>>> b\nmasked_array(data=[--, 1, 2, 3],\n mask=[ True, False, False, False],\n fill_value=999999)\n>>> ma.masked_where(a == 3, b)\nmasked_array(data=[--, 1, --, --],\n mask=[ True, False,  True,  True],\n fill_value=999999) \n```"]