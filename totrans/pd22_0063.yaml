- en: pandas.ExcelFile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.html](https://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Class for parsing tabular Excel sheets into DataFrame objects.
  prefs: []
  type: TYPE_NORMAL
- en: See read_excel for more documentation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**path_or_buffer**str, bytes, path object (pathlib.Path or py._path.local.LocalPath),'
  prefs: []
  type: TYPE_NORMAL
- en: A file-like object, xlrd workbook or openpyxl workbook. If a string or path
    object, expected to be a path to a .xls, .xlsx, .xlsb, .xlsm, .odf, .ods, or .odt
    file.
  prefs: []
  type: TYPE_NORMAL
- en: '**engine**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: 'If io is not a buffer or path, this must be set to identify io. Supported engines:
    `xlrd`, `openpyxl`, `odf`, `pyxlsb`, `calamine` Engine compatibility :'
  prefs: []
  type: TYPE_NORMAL
- en: '`xlrd` supports old-style Excel files (.xls).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`openpyxl` supports newer Excel file formats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`odf` supports OpenDocument file formats (.odf, .ods, .odt).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pyxlsb` supports Binary Excel files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`calamine` supports Excel (.xls, .xlsx, .xlsm, .xlsb) and OpenDocument (.ods)
    file formats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Changed in version 1.2.0: The engine [xlrd](https://xlrd.readthedocs.io/en/latest/)
    now only supports old-style `.xls` files. When `engine=None`, the following logic
    will be used to determine the engine:'
  prefs: []
  type: TYPE_NORMAL
- en: If `path_or_buffer` is an OpenDocument format (.odf, .ods, .odt), then [odf](https://pypi.org/project/odfpy/)
    will be used.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Otherwise if `path_or_buffer` is an xls format, `xlrd` will be used.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Otherwise if `path_or_buffer` is in xlsb format, [pyxlsb](https://pypi.org/project/pyxlsb/)
    will be used.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: Otherwise if [openpyxl](https://pypi.org/project/openpyxl/) is installed, then
    `openpyxl` will be used.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Otherwise if `xlrd >= 2.0` is installed, a `ValueError` will be raised.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Please do not report issues when using `xlrd` to read `.xlsx` files. This is
    not supported, switch to using `openpyxl` instead.
  prefs: []
  type: TYPE_NORMAL
- en: '**engine_kwargs**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrary keyword arguments passed to excel engine.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| [`book`](pandas.ExcelFile.book.html#pandas.ExcelFile.book "pandas.ExcelFile.book")
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`sheet_names`](pandas.ExcelFile.sheet_names.html#pandas.ExcelFile.sheet_names
    "pandas.ExcelFile.sheet_names") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| `close`() | close io if necessary |'
  prefs: []
  type: TYPE_TB
- en: '| [`parse`](pandas.ExcelFile.parse.html#pandas.ExcelFile.parse "pandas.ExcelFile.parse")([sheet_name, header, names, ...])
    | Parse specified sheet(s) into a DataFrame. |'
  prefs: []
  type: TYPE_TB
