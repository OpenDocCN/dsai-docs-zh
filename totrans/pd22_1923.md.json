["```py\nIn [1]: pd.Series([1, 2], index=['a', 'a'])\nOut[1]:\na    1\na    2\nLength: 2, dtype: int64\n\nIn [2]: pd.Series([1, 2], index=['a', 'a']).set_flags(allows_duplicate_labels=False)\n...\nDuplicateLabelError: Index has duplicates.\n positions\nlabel\na        [0, 1] \n```", "```py\nIn [3]: a = (\n ...:    pd.Series([1, 2], index=['a', 'b'])\n ...:      .set_flags(allows_duplicate_labels=False)\n ...: )\n\nIn [4]: a\nOut[4]:\na    1\nb    2\nLength: 2, dtype: int64\n\n# An operation introducing duplicates\nIn [5]: a.reindex(['a', 'b', 'a'])\n...\nDuplicateLabelError: Index has duplicates.\n positions\nlabel\na        [0, 2]\n\n[1 rows x 1 columns] \n```", "```py\nIn [1]: import io\n\nIn [2]: data = pd.DataFrame([0, 1, 2])\n\nIn [3]: buffer = io.BytesIO()\n\nIn [4]: data.to_csv(buffer, encoding=\"utf-8\", compression=\"gzip\") \n```", "```py\nIn [5]: data = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})\n\nIn [6]: table = data.to_latex(position='ht')\n\nIn [7]: print(table)\n\\begin{table}[ht]\n\\begin{tabular}{lrr}\n\\toprule\n & a & b \\\\\n\\midrule\n0 & 1 & 3 \\\\\n1 & 2 & 4 \\\\\n\\bottomrule\n\\end{tabular}\n\\end{table} \n```", "```py\nIn [8]: data = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})\n\nIn [9]: table = data.to_latex(caption=('the full long caption', 'short caption'))\n\nIn [10]: print(table)\n\\begin{table}\n\\caption[short caption]{the full long caption}\n\\begin{tabular}{lrr}\n\\toprule\n & a & b \\\\\n\\midrule\n0 & 1 & 3 \\\\\n1 & 2 & 4 \\\\\n\\bottomrule\n\\end{tabular}\n\\end{table} \n```", "```py\n# the default NumPy float64 dtype\nIn [11]: s1 = pd.Series([1.5, None])\n\nIn [12]: s1\nOut[12]: \n0    1.5\n1    NaN\ndtype: float64\n\nIn [13]: s1 > 1\nOut[13]: \n0     True\n1    False\ndtype: bool \n```", "```py\n# the new nullable float64 dtype\nIn [14]: s2 = pd.Series([1.5, None], dtype=\"Float64\")\n\nIn [15]: s2\nOut[15]: \n0     1.5\n1    <NA>\ndtype: Float64\n\nIn [16]: s2 > 1\nOut[16]: \n0    True\n1    <NA>\ndtype: boolean \n```", "```py\nIn [17]: pd.Series([1.5, None], dtype=pd.Float32Dtype())\nOut[17]: \n0     1.5\n1    <NA>\ndtype: Float32 \n```", "```py\nIn [18]: idx = pd.Index(range(5), name='abc')\n\nIn [19]: ser = pd.Series(range(5, 10), index=idx)\n\nIn [20]: pd.concat({'x': ser[1:], 'y': ser[:-1]}, axis=1)\nOut[20]: \n x    y\nabc \n1    6.0  6.0\n2    7.0  7.0\n3    8.0  8.0\n4    9.0  NaN\n0    NaN  5.0 \n```", "```py\nIn [21]: df = pd.DataFrame({'A': ['a', 'b', 'a', 'b'], 'B': range(4)})\n\nIn [22]: df\nOut[22]: \n A  B\n0  a  0\n1  b  1\n2  a  2\n3  b  3\n\nIn [23]: df.groupby('A').ewm(com=1.0).mean()\nOut[23]: \n B\nA \na 0  0.000000\n 2  1.333333\nb 1  1.000000\n 3  2.333333 \n```", "```py\nIn [24]: df = pd.DataFrame({\"A\": [\"foo\", \"bar\"], \"B\": [True, False]}, dtype=object)\n\nIn [25]: df[\"C\"] = pd.Series([True, True]) \n```", "```py\nIn [5]: df.all(bool_only=True)\nOut[5]:\nC    True\ndtype: bool\n\nIn [6]: df[[\"B\", \"C\"]].all(bool_only=True)\nOut[6]:\nB    False\nC    True\ndtype: bool \n```", "```py\nIn [26]: In [5]: df.all(bool_only=True)\nOut[26]: \nC    True\ndtype: bool\n\nIn [27]: In [6]: df[[\"B\", \"C\"]].all(bool_only=True)\nOut[27]: \nC    True\ndtype: bool \n```", "```py\nIn [28]: df = pd.DataFrame({\"A\": [0, 1, 2], \"B\": [\"a\", \"b\", \"c\"]}, dtype=object) \n```", "```py\nIn [3]: df.mean()\nOut[3]: Series([], dtype: float64)\n\nIn [4]: df[[\"A\"]].mean()\nOut[4]:\nA    1.0\ndtype: float64 \n```", "```py\nIn [3]: df.mean()\nOut[3]:\nA    1.0\ndtype: float64\n\nIn [4]: df[[\"A\"]].mean()\nOut[4]:\nA    1.0\ndtype: float64 \n```", "```py\nIn [29]: ser = pd.Series([0, 1], dtype=\"category\", name=\"A\")\n\nIn [30]: df = ser.to_frame() \n```", "```py\nIn [5]: df.any()\nOut[5]:\nA    True\ndtype: bool \n```", "```py\nIn [5]: df.any()\nOut[5]: Series([], dtype: bool) \n```", "```py\nIn [1]: pd.Series([1, 2], index=['a', 'a'])\nOut[1]:\na    1\na    2\nLength: 2, dtype: int64\n\nIn [2]: pd.Series([1, 2], index=['a', 'a']).set_flags(allows_duplicate_labels=False)\n...\nDuplicateLabelError: Index has duplicates.\n positions\nlabel\na        [0, 1] \n```", "```py\nIn [3]: a = (\n ...:    pd.Series([1, 2], index=['a', 'b'])\n ...:      .set_flags(allows_duplicate_labels=False)\n ...: )\n\nIn [4]: a\nOut[4]:\na    1\nb    2\nLength: 2, dtype: int64\n\n# An operation introducing duplicates\nIn [5]: a.reindex(['a', 'b', 'a'])\n...\nDuplicateLabelError: Index has duplicates.\n positions\nlabel\na        [0, 2]\n\n[1 rows x 1 columns] \n```", "```py\nIn [1]: import io\n\nIn [2]: data = pd.DataFrame([0, 1, 2])\n\nIn [3]: buffer = io.BytesIO()\n\nIn [4]: data.to_csv(buffer, encoding=\"utf-8\", compression=\"gzip\") \n```", "```py\nIn [5]: data = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})\n\nIn [6]: table = data.to_latex(position='ht')\n\nIn [7]: print(table)\n\\begin{table}[ht]\n\\begin{tabular}{lrr}\n\\toprule\n & a & b \\\\\n\\midrule\n0 & 1 & 3 \\\\\n1 & 2 & 4 \\\\\n\\bottomrule\n\\end{tabular}\n\\end{table} \n```", "```py\nIn [8]: data = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})\n\nIn [9]: table = data.to_latex(caption=('the full long caption', 'short caption'))\n\nIn [10]: print(table)\n\\begin{table}\n\\caption[short caption]{the full long caption}\n\\begin{tabular}{lrr}\n\\toprule\n & a & b \\\\\n\\midrule\n0 & 1 & 3 \\\\\n1 & 2 & 4 \\\\\n\\bottomrule\n\\end{tabular}\n\\end{table} \n```", "```py\n# the default NumPy float64 dtype\nIn [11]: s1 = pd.Series([1.5, None])\n\nIn [12]: s1\nOut[12]: \n0    1.5\n1    NaN\ndtype: float64\n\nIn [13]: s1 > 1\nOut[13]: \n0     True\n1    False\ndtype: bool \n```", "```py\n# the new nullable float64 dtype\nIn [14]: s2 = pd.Series([1.5, None], dtype=\"Float64\")\n\nIn [15]: s2\nOut[15]: \n0     1.5\n1    <NA>\ndtype: Float64\n\nIn [16]: s2 > 1\nOut[16]: \n0    True\n1    <NA>\ndtype: boolean \n```", "```py\nIn [17]: pd.Series([1.5, None], dtype=pd.Float32Dtype())\nOut[17]: \n0     1.5\n1    <NA>\ndtype: Float32 \n```", "```py\nIn [18]: idx = pd.Index(range(5), name='abc')\n\nIn [19]: ser = pd.Series(range(5, 10), index=idx)\n\nIn [20]: pd.concat({'x': ser[1:], 'y': ser[:-1]}, axis=1)\nOut[20]: \n x    y\nabc \n1    6.0  6.0\n2    7.0  7.0\n3    8.0  8.0\n4    9.0  NaN\n0    NaN  5.0 \n```", "```py\nIn [21]: df = pd.DataFrame({'A': ['a', 'b', 'a', 'b'], 'B': range(4)})\n\nIn [22]: df\nOut[22]: \n A  B\n0  a  0\n1  b  1\n2  a  2\n3  b  3\n\nIn [23]: df.groupby('A').ewm(com=1.0).mean()\nOut[23]: \n B\nA \na 0  0.000000\n 2  1.333333\nb 1  1.000000\n 3  2.333333 \n```", "```py\nIn [1]: pd.Series([1, 2], index=['a', 'a'])\nOut[1]:\na    1\na    2\nLength: 2, dtype: int64\n\nIn [2]: pd.Series([1, 2], index=['a', 'a']).set_flags(allows_duplicate_labels=False)\n...\nDuplicateLabelError: Index has duplicates.\n positions\nlabel\na        [0, 1] \n```", "```py\nIn [3]: a = (\n ...:    pd.Series([1, 2], index=['a', 'b'])\n ...:      .set_flags(allows_duplicate_labels=False)\n ...: )\n\nIn [4]: a\nOut[4]:\na    1\nb    2\nLength: 2, dtype: int64\n\n# An operation introducing duplicates\nIn [5]: a.reindex(['a', 'b', 'a'])\n...\nDuplicateLabelError: Index has duplicates.\n positions\nlabel\na        [0, 2]\n\n[1 rows x 1 columns] \n```", "```py\nIn [1]: import io\n\nIn [2]: data = pd.DataFrame([0, 1, 2])\n\nIn [3]: buffer = io.BytesIO()\n\nIn [4]: data.to_csv(buffer, encoding=\"utf-8\", compression=\"gzip\") \n```", "```py\nIn [5]: data = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})\n\nIn [6]: table = data.to_latex(position='ht')\n\nIn [7]: print(table)\n\\begin{table}[ht]\n\\begin{tabular}{lrr}\n\\toprule\n & a & b \\\\\n\\midrule\n0 & 1 & 3 \\\\\n1 & 2 & 4 \\\\\n\\bottomrule\n\\end{tabular}\n\\end{table} \n```", "```py\nIn [8]: data = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})\n\nIn [9]: table = data.to_latex(caption=('the full long caption', 'short caption'))\n\nIn [10]: print(table)\n\\begin{table}\n\\caption[short caption]{the full long caption}\n\\begin{tabular}{lrr}\n\\toprule\n & a & b \\\\\n\\midrule\n0 & 1 & 3 \\\\\n1 & 2 & 4 \\\\\n\\bottomrule\n\\end{tabular}\n\\end{table} \n```", "```py\n# the default NumPy float64 dtype\nIn [11]: s1 = pd.Series([1.5, None])\n\nIn [12]: s1\nOut[12]: \n0    1.5\n1    NaN\ndtype: float64\n\nIn [13]: s1 > 1\nOut[13]: \n0     True\n1    False\ndtype: bool \n```", "```py\n# the new nullable float64 dtype\nIn [14]: s2 = pd.Series([1.5, None], dtype=\"Float64\")\n\nIn [15]: s2\nOut[15]: \n0     1.5\n1    <NA>\ndtype: Float64\n\nIn [16]: s2 > 1\nOut[16]: \n0    True\n1    <NA>\ndtype: boolean \n```", "```py\nIn [17]: pd.Series([1.5, None], dtype=pd.Float32Dtype())\nOut[17]: \n0     1.5\n1    <NA>\ndtype: Float32 \n```", "```py\nIn [18]: idx = pd.Index(range(5), name='abc')\n\nIn [19]: ser = pd.Series(range(5, 10), index=idx)\n\nIn [20]: pd.concat({'x': ser[1:], 'y': ser[:-1]}, axis=1)\nOut[20]: \n x    y\nabc \n1    6.0  6.0\n2    7.0  7.0\n3    8.0  8.0\n4    9.0  NaN\n0    NaN  5.0 \n```", "```py\nIn [21]: df = pd.DataFrame({'A': ['a', 'b', 'a', 'b'], 'B': range(4)})\n\nIn [22]: df\nOut[22]: \n A  B\n0  a  0\n1  b  1\n2  a  2\n3  b  3\n\nIn [23]: df.groupby('A').ewm(com=1.0).mean()\nOut[23]: \n B\nA \na 0  0.000000\n 2  1.333333\nb 1  1.000000\n 3  2.333333 \n```", "```py\nIn [24]: df = pd.DataFrame({\"A\": [\"foo\", \"bar\"], \"B\": [True, False]}, dtype=object)\n\nIn [25]: df[\"C\"] = pd.Series([True, True]) \n```", "```py\nIn [5]: df.all(bool_only=True)\nOut[5]:\nC    True\ndtype: bool\n\nIn [6]: df[[\"B\", \"C\"]].all(bool_only=True)\nOut[6]:\nB    False\nC    True\ndtype: bool \n```", "```py\nIn [26]: In [5]: df.all(bool_only=True)\nOut[26]: \nC    True\ndtype: bool\n\nIn [27]: In [6]: df[[\"B\", \"C\"]].all(bool_only=True)\nOut[27]: \nC    True\ndtype: bool \n```", "```py\nIn [28]: df = pd.DataFrame({\"A\": [0, 1, 2], \"B\": [\"a\", \"b\", \"c\"]}, dtype=object) \n```", "```py\nIn [3]: df.mean()\nOut[3]: Series([], dtype: float64)\n\nIn [4]: df[[\"A\"]].mean()\nOut[4]:\nA    1.0\ndtype: float64 \n```", "```py\nIn [3]: df.mean()\nOut[3]:\nA    1.0\ndtype: float64\n\nIn [4]: df[[\"A\"]].mean()\nOut[4]:\nA    1.0\ndtype: float64 \n```", "```py\nIn [29]: ser = pd.Series([0, 1], dtype=\"category\", name=\"A\")\n\nIn [30]: df = ser.to_frame() \n```", "```py\nIn [5]: df.any()\nOut[5]:\nA    True\ndtype: bool \n```", "```py\nIn [5]: df.any()\nOut[5]: Series([], dtype: bool) \n```", "```py\nIn [24]: df = pd.DataFrame({\"A\": [\"foo\", \"bar\"], \"B\": [True, False]}, dtype=object)\n\nIn [25]: df[\"C\"] = pd.Series([True, True]) \n```", "```py\nIn [5]: df.all(bool_only=True)\nOut[5]:\nC    True\ndtype: bool\n\nIn [6]: df[[\"B\", \"C\"]].all(bool_only=True)\nOut[6]:\nB    False\nC    True\ndtype: bool \n```", "```py\nIn [26]: In [5]: df.all(bool_only=True)\nOut[26]: \nC    True\ndtype: bool\n\nIn [27]: In [6]: df[[\"B\", \"C\"]].all(bool_only=True)\nOut[27]: \nC    True\ndtype: bool \n```", "```py\nIn [28]: df = pd.DataFrame({\"A\": [0, 1, 2], \"B\": [\"a\", \"b\", \"c\"]}, dtype=object) \n```", "```py\nIn [3]: df.mean()\nOut[3]: Series([], dtype: float64)\n\nIn [4]: df[[\"A\"]].mean()\nOut[4]:\nA    1.0\ndtype: float64 \n```", "```py\nIn [3]: df.mean()\nOut[3]:\nA    1.0\ndtype: float64\n\nIn [4]: df[[\"A\"]].mean()\nOut[4]:\nA    1.0\ndtype: float64 \n```", "```py\nIn [29]: ser = pd.Series([0, 1], dtype=\"category\", name=\"A\")\n\nIn [30]: df = ser.to_frame() \n```", "```py\nIn [5]: df.any()\nOut[5]:\nA    True\ndtype: bool \n```", "```py\nIn [5]: df.any()\nOut[5]: Series([], dtype: bool) \n```"]