- en: scipy.interpolate.bisplev
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.bisplev.html#scipy.interpolate.bisplev](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.bisplev.html#scipy.interpolate.bisplev)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate a bivariate B-spline and its derivatives.
  prefs: []
  type: TYPE_NORMAL
- en: Return a rank-2 array of spline function values (or spline derivative values)
    at points given by the cross-product of the rank-1 arrays *x* and *y*. In special
    cases, return an array or just a float if either *x* or *y* or both are floats.
    Based on BISPEV and PARDER from FITPACK.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x, y**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Rank-1 arrays specifying the domain over which to evaluate the spline or its
    derivative.
  prefs: []
  type: TYPE_NORMAL
- en: '**tck**tuple'
  prefs: []
  type: TYPE_NORMAL
- en: 'A sequence of length 5 returned by [`bisplrep`](scipy.interpolate.bisplrep.html#scipy.interpolate.bisplrep
    "scipy.interpolate.bisplrep") containing the knot locations, the coefficients,
    and the degree of the spline: [tx, ty, c, kx, ky].'
  prefs: []
  type: TYPE_NORMAL
- en: '**dx, dy**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The orders of the partial derivatives in *x* and *y* respectively.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**vals**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The B-spline or its derivative evaluated over the set formed by the cross-product
    of *x* and *y*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`splprep`](scipy.interpolate.splprep.html#scipy.interpolate.splprep "scipy.interpolate.splprep"),
    [`splrep`](scipy.interpolate.splrep.html#scipy.interpolate.splrep "scipy.interpolate.splrep"),
    [`splint`](scipy.interpolate.splint.html#scipy.interpolate.splint "scipy.interpolate.splint"),
    [`sproot`](scipy.interpolate.sproot.html#scipy.interpolate.sproot "scipy.interpolate.sproot"),
    [`splev`](scipy.interpolate.splev.html#scipy.interpolate.splev "scipy.interpolate.splev")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`UnivariateSpline`](scipy.interpolate.UnivariateSpline.html#scipy.interpolate.UnivariateSpline
    "scipy.interpolate.UnivariateSpline"), [`BivariateSpline`](scipy.interpolate.BivariateSpline.html#scipy.interpolate.BivariateSpline
    "scipy.interpolate.BivariateSpline")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See [`bisplrep`](scipy.interpolate.bisplrep.html#scipy.interpolate.bisplrep
    "scipy.interpolate.bisplrep") to generate the *tck* representation.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Dierckx P. : An algorithm for surface fitting with spline functions Ima J.
    Numer. Anal. 1 (1981) 267-283.'
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Dierckx P. : An algorithm for surface fitting with spline functions report
    tw50, Dept. Computer Science,K.U.Leuven, 1980.'
  prefs: []
  type: TYPE_NORMAL
- en: '[3]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Dierckx P. : Curve and surface fitting with splines, Monographs on Numerical
    Analysis, Oxford University Press, 1993.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Examples are given [in the tutorial](../../tutorial/interpolate/smoothing_splines.html#tutorial-interpolate-2d-spline).
  prefs: []
  type: TYPE_NORMAL
