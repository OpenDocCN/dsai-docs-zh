["```py\nclass sympy.geometry.curve.Curve(function, limits)\n```", "```py\n>>> from sympy import Curve, sin, cos, interpolate\n>>> from sympy.abc import t, a\n>>> C = Curve((sin(t), cos(t)), (t, 0, 2))\n>>> C.functions\n(sin(t), cos(t))\n>>> C.limits\n(t, 0, 2)\n>>> C.parameter\nt\n>>> C = Curve((t, interpolate([1, 4, 9, 16], t)), (t, 0, 1)); C\nCurve((t, t**2), (t, 0, 1))\n>>> C.subs(t, 4)\nPoint2D(4, 16)\n>>> C.arbitrary_point(a)\nPoint2D(a, a**2) \n```", "```py\nproperty ambient_dimension\n```", "```py\n>>> from sympy.abc import t\n>>> from sympy import Curve\n>>> C = Curve((t, t**2), (t, 0, 2))\n>>> C.ambient_dimension\n2 \n```", "```py\narbitrary_point(parameter='t')\n```", "```py\n>>> from sympy import Curve, Symbol\n>>> from sympy.abc import s\n>>> C = Curve([2*s, s**2], (s, 0, 2))\n>>> C.arbitrary_point()\nPoint2D(2*t, t**2)\n>>> C.arbitrary_point(C.parameter)\nPoint2D(2*s, s**2)\n>>> C.arbitrary_point(None)\nPoint2D(2*s, s**2)\n>>> C.arbitrary_point(Symbol('a'))\nPoint2D(2*a, a**2) \n```", "```py\nproperty free_symbols\n```", "```py\n>>> from sympy.abc import t, a\n>>> from sympy import Curve\n>>> Curve((t, t**2), (t, 0, 2)).free_symbols\nset()\n>>> Curve((t, t**2), (t, a, 2)).free_symbols\n{a} \n```", "```py\nproperty functions\n```", "```py\n>>> from sympy.abc import t\n>>> from sympy import Curve\n>>> C = Curve((t, t**2), (t, 0, 2))\n>>> C.functions\n(t, t**2) \n```", "```py\nproperty length\n```", "```py\n>>> from sympy import Curve\n>>> from sympy.abc import t\n>>> Curve((t, t), (t, 0, 1)).length\nsqrt(2) \n```", "```py\nproperty limits\n```", "```py\n>>> from sympy.abc import t\n>>> from sympy import Curve\n>>> C = Curve([t, t**3], (t, -2, 2))\n>>> C.limits\n(t, -2, 2) \n```", "```py\nproperty parameter\n```", "```py\n>>> from sympy.abc import t\n>>> from sympy import Curve\n>>> C = Curve([t, t**2], (t, 0, 2))\n>>> C.parameter\nt \n```", "```py\nplot_interval(parameter='t')\n```", "```py\n>>> from sympy import Curve, sin\n>>> from sympy.abc import x, s\n>>> Curve((x, sin(x)), (x, 1, 2)).plot_interval()\n[t, 1, 2]\n>>> Curve((x, sin(x)), (x, 1, 2)).plot_interval(s)\n[s, 1, 2] \n```", "```py\nrotate(angle=0, pt=None)\n```", "```py\n>>> from sympy import Curve, pi\n>>> from sympy.abc import x\n>>> Curve((x, x), (x, 0, 1)).rotate(pi/2)\nCurve((-x, x), (x, 0, 1)) \n```", "```py\nscale(x=1, y=1, pt=None)\n```", "```py\n>>> from sympy import Curve\n>>> from sympy.abc import x\n>>> Curve((x, x), (x, 0, 1)).scale(2)\nCurve((2*x, x), (x, 0, 1)) \n```", "```py\ntranslate(x=0, y=0)\n```", "```py\n>>> from sympy import Curve\n>>> from sympy.abc import x\n>>> Curve((x, x), (x, 0, 1)).translate(1, 2)\nCurve((x + 1, x + 2), (x, 0, 1)) \n```"]