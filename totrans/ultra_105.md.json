["```py\n`t=ultralytics/ultralytics:latest-jetson-jetpack4 sudo  docker  pull  $t  &&  sudo  docker  run  -it  --ipc=host  --runtime=nvidia  $t` \n```", "```py\n`t=ultralytics/ultralytics:latest-jetson-jetpack5 sudo  docker  pull  $t  &&  sudo  docker  run  -it  --ipc=host  --runtime=nvidia  $t` \n```", "```py\n`t=ultralytics/ultralytics:latest-jetson-jetpack6 sudo  docker  pull  $t  &&  sudo  docker  run  -it  --ipc=host  --runtime=nvidia  $t` \n```", "```py\n    `sudo  apt  update sudo  apt  install  python3-pip  -y pip  install  -U  pip` \n    ```", "```py\n    `pip  install  ultralytics[export]` \n    ```", "```py\n    `sudo  reboot` \n    ```", "```py\n`sudo  apt-get  install  libopenmpi-dev  libopenblas-base  libomp-dev  -y pip  install  https://github.com/ultralytics/assets/releases/download/v0.0.0/torch-2.3.0-cp310-cp310-linux_aarch64.whl pip  install  https://github.com/ultralytics/assets/releases/download/v0.0.0/torchvision-0.18.0a0+6043bc2-cp310-cp310-linux_aarch64.whl` \n```", "```py\n`wget  https://nvidia.box.com/shared/static/48dtuob7meiw6ebgfsfqakc9vse62sg4.whl  -O  onnxruntime_gpu-1.18.0-cp310-cp310-linux_aarch64.whl pip  install  onnxruntime_gpu-1.18.0-cp310-cp310-linux_aarch64.whl` \n```", "```py\n    `sudo  apt  update sudo  apt  install  python3-pip  -y pip  install  -U  pip` \n    ```", "```py\n    `pip  install  ultralytics[export]` \n    ```", "```py\n    `sudo  reboot` \n    ```", "```py\n    `pip  uninstall  torch  torchvision` \n    ```", "```py\n    `sudo  apt-get  install  -y  libopenblas-base  libopenmpi-dev wget  https://developer.download.nvidia.com/compute/redist/jp/v512/pytorch/torch-2.1.0a0+41361538.nv23.06-cp38-cp38-linux_aarch64.whl  -O  torch-2.1.0a0+41361538.nv23.06-cp38-cp38-linux_aarch64.whl pip  install  torch-2.1.0a0+41361538.nv23.06-cp38-cp38-linux_aarch64.whl` \n    ```", "```py\n    `sudo  apt  install  -y  libjpeg-dev  zlib1g-dev git  clone  https://github.com/pytorch/vision  torchvision cd  torchvision git  checkout  v0.16.2 python3  setup.py  install  --user` \n    ```", "```py\n`wget  https://nvidia.box.com/shared/static/zostg6agm00fb6t5uisw51qi6kpcuwzd.whl  -O  onnxruntime_gpu-1.17.0-cp38-cp38-linux_aarch64.whl pip  install  onnxruntime_gpu-1.17.0-cp38-cp38-linux_aarch64.whl` \n```", "```py\n`from ultralytics import YOLO  # Load a YOLOv8n PyTorch model model = YOLO(\"yolov8n.pt\")  # Export the model model.export(format=\"engine\")  # creates 'yolov8n.engine'  # Load the exported TensorRT model trt_model = YOLO(\"yolov8n.engine\")  # Run inference results = trt_model(\"https://ultralytics.com/images/bus.jpg\")` \n```", "```py\n`# Export a YOLOv8n PyTorch model to TensorRT format yolo  export  model=yolov8n.pt  format=engine  # creates 'yolov8n.engine'  # Run inference with the exported model yolo  predict  model=yolov8n.engine  source='https://ultralytics.com/images/bus.jpg'` \n```", "```py\n`from ultralytics import YOLO  # Load a YOLOv8n PyTorch model model = YOLO(\"yolov8n.pt\")  # Benchmark YOLOv8n speed and accuracy on the COCO8 dataset for all all export formats results = model.benchmarks(data=\"coco8.yaml\", imgsz=640)` \n```", "```py\n`# Benchmark YOLOv8n speed and accuracy on the COCO8 dataset for all all export formats yolo  benchmark  model=yolov8n.pt  data=coco8.yaml  imgsz=640` \n```", "```py\n    `sudo  nvpmodel  -m  0` \n    ```", "```py\n    `sudo  jetson_clocks` \n    ```", "```py\n    `sudo  apt  update sudo  pip  install  jetson-stats sudo  reboot jtop` \n    ```"]