- en: pandas.describe_option
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.describe_option.html](https://pandas.pydata.org/docs/reference/api/pandas.describe_option.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Prints the description for one or more registered options.
  prefs: []
  type: TYPE_NORMAL
- en: Call with no arguments to get a listing for all registered options.
  prefs: []
  type: TYPE_NORMAL
- en: 'Available options:'
  prefs: []
  type: TYPE_NORMAL
- en: compute.[use_bottleneck, use_numba, use_numexpr]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: display.[chop_threshold, colheader_justify, date_dayfirst, date_yearfirst, encoding,
    expand_frame_repr, float_format]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: display.html.[border, table_schema, use_mathjax]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: display.[large_repr, max_categories, max_columns, max_colwidth, max_dir_items,
    max_info_columns, max_info_rows, max_rows, max_seq_items, memory_usage, min_rows,
    multi_sparse, notebook_repr_html, pprint_nest_depth, precision, show_dimensions]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: display.unicode.[ambiguous_as_wide, east_asian_width]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: display.[width]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: future.[infer_string, no_silent_downcasting]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: io.excel.ods.[reader, writer]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: io.excel.xls.[reader]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: io.excel.xlsb.[reader]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: io.excel.xlsm.[reader, writer]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: io.excel.xlsx.[reader, writer]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: io.hdf.[default_format, dropna_table]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: io.parquet.[engine]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: io.sql.[engine]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mode.[chained_assignment, copy_on_write, data_manager, sim_interactive, string_storage,
    use_inf_as_na]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: plotting.[backend]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: plotting.matplotlib.[register_converters]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: styler.format.[decimal, escape, formatter, na_rep, precision, thousands]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: styler.html.[mathjax]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: styler.latex.[environment, hrules, multicol_align, multirow_align]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: styler.render.[encoding, max_columns, max_elements, max_rows, repr]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: styler.sparse.[columns, index]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pat**str'
  prefs: []
  type: TYPE_NORMAL
- en: Regexp pattern. All matching keys will have their description displayed.
  prefs: []
  type: TYPE_NORMAL
- en: '**_print_desc**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: If True (default) the description(s) will be printed to stdout. Otherwise, the
    description(s) will be returned as a unicode string (for testing).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: None by default, the description(s) as a unicode string if _print_desc
  prefs: []
  type: TYPE_NORMAL
- en: is False
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Please reference the [User Guide](../../user_guide/options.html#options) for
    more information.
  prefs: []
  type: TYPE_NORMAL
- en: 'The available options with its descriptions:'
  prefs: []
  type: TYPE_NORMAL
- en: compute.use_bottleneckbool
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the bottleneck library to accelerate if it is installed, the default is
    True Valid values: False,True [default: True] [currently: True]'
  prefs: []
  type: TYPE_NORMAL
- en: compute.use_numbabool
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the numba engine option for select operations if it is installed, the default
    is False Valid values: False,True [default: False] [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: compute.use_numexprbool
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the numexpr library to accelerate computation if it is installed, the default
    is True Valid values: False,True [default: True] [currently: True]'
  prefs: []
  type: TYPE_NORMAL
- en: display.chop_thresholdfloat or None
  prefs: []
  type: TYPE_NORMAL
- en: 'if set to a float value, all float values smaller than the given threshold
    will be displayed as exactly 0 by repr and friends. [default: None] [currently:
    None]'
  prefs: []
  type: TYPE_NORMAL
- en: display.colheader_justify‘left’/’right’
  prefs: []
  type: TYPE_NORMAL
- en: 'Controls the justification of column headers. used by DataFrameFormatter. [default:
    right] [currently: right]'
  prefs: []
  type: TYPE_NORMAL
- en: display.date_dayfirstboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'When True, prints and parses dates with the day first, eg 20/01/2005 [default:
    False] [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: display.date_yearfirstboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'When True, prints and parses dates with the year first, eg 2005/01/20 [default:
    False] [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: display.encodingstr/unicode
  prefs: []
  type: TYPE_NORMAL
- en: 'Defaults to the detected encoding of the console. Specifies the encoding to
    be used for strings returned by to_string, these are generally strings meant to
    be displayed on the console. [default: utf-8] [currently: utf-8]'
  prefs: []
  type: TYPE_NORMAL
- en: display.expand_frame_reprboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to print out the full DataFrame repr for wide DataFrames across multiple
    lines, max_columns is still respected, but the output will wrap-around across
    multiple “pages” if its width exceeds display.width. [default: True] [currently:
    True]'
  prefs: []
  type: TYPE_NORMAL
- en: display.float_formatcallable
  prefs: []
  type: TYPE_NORMAL
- en: 'The callable should accept a floating point number and return a string with
    the desired format of the number. This is used in some places like SeriesFormatter.
    See formats.format.EngFormatter for an example. [default: None] [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: display.html.borderint
  prefs: []
  type: TYPE_NORMAL
- en: 'A `border=value` attribute is inserted in the `<table>` tag for the DataFrame
    HTML repr. [default: 1] [currently: 1]'
  prefs: []
  type: TYPE_NORMAL
- en: display.html.table_schemaboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to publish a Table Schema representation for frontends that support
    it. (default: False) [default: False] [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: display.html.use_mathjaxboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'When True, Jupyter notebook will process table contents using MathJax, rendering
    mathematical expressions enclosed by the dollar symbol. (default: True) [default:
    True] [currently: True]'
  prefs: []
  type: TYPE_NORMAL
- en: display.large_repr‘truncate’/’info’
  prefs: []
  type: TYPE_NORMAL
- en: 'For DataFrames exceeding max_rows/max_cols, the repr (and HTML repr) can show
    a truncated table, or switch to the view from df.info() (the behaviour in earlier
    versions of pandas). [default: truncate] [currently: truncate]'
  prefs: []
  type: TYPE_NORMAL
- en: display.max_categoriesint
  prefs: []
  type: TYPE_NORMAL
- en: 'This sets the maximum number of categories pandas should output when printing
    out a Categorical or a Series of dtype “category”. [default: 8] [currently: 8]'
  prefs: []
  type: TYPE_NORMAL
- en: display.max_columnsint
  prefs: []
  type: TYPE_NORMAL
- en: If max_cols is exceeded, switch to truncate view. Depending on large_repr, objects
    are either centrally truncated or printed as a summary view. ‘None’ value means
    unlimited.
  prefs: []
  type: TYPE_NORMAL
- en: 'In case python/IPython is running in a terminal and large_repr equals ‘truncate’
    this can be set to 0 or None and pandas will auto-detect the width of the terminal
    and print a truncated object which fits the screen width. The IPython notebook,
    IPython qtconsole, or IDLE do not run in a terminal and hence it is not possible
    to do correct auto-detection and defaults to 20. [default: 0] [currently: 0]'
  prefs: []
  type: TYPE_NORMAL
- en: display.max_colwidthint or None
  prefs: []
  type: TYPE_NORMAL
- en: 'The maximum width in characters of a column in the repr of a pandas data structure.
    When the column overflows, a “…” placeholder is embedded in the output. A ‘None’
    value means unlimited. [default: 50] [currently: 50]'
  prefs: []
  type: TYPE_NORMAL
- en: display.max_dir_itemsint
  prefs: []
  type: TYPE_NORMAL
- en: The number of items that will be added to dir(…). ‘None’ value means unlimited.
    Because dir is cached, changing this option will not immediately affect already
    existing dataframes until a column is deleted or added.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is for instance used to suggest columns from a dataframe to tab completion.
    [default: 100] [currently: 100]'
  prefs: []
  type: TYPE_NORMAL
- en: display.max_info_columnsint
  prefs: []
  type: TYPE_NORMAL
- en: 'max_info_columns is used in DataFrame.info method to decide if per column information
    will be printed. [default: 100] [currently: 100]'
  prefs: []
  type: TYPE_NORMAL
- en: display.max_info_rowsint
  prefs: []
  type: TYPE_NORMAL
- en: 'df.info() will usually show null-counts for each column. For large frames this
    can be quite slow. max_info_rows and max_info_cols limit this null check only
    to frames with smaller dimensions than specified. [default: 1690785] [currently:
    1690785]'
  prefs: []
  type: TYPE_NORMAL
- en: display.max_rowsint
  prefs: []
  type: TYPE_NORMAL
- en: If max_rows is exceeded, switch to truncate view. Depending on large_repr, objects
    are either centrally truncated or printed as a summary view. ‘None’ value means
    unlimited.
  prefs: []
  type: TYPE_NORMAL
- en: 'In case python/IPython is running in a terminal and large_repr equals ‘truncate’
    this can be set to 0 and pandas will auto-detect the height of the terminal and
    print a truncated object which fits the screen height. The IPython notebook, IPython
    qtconsole, or IDLE do not run in a terminal and hence it is not possible to do
    correct auto-detection. [default: 60] [currently: 60]'
  prefs: []
  type: TYPE_NORMAL
- en: display.max_seq_itemsint or None
  prefs: []
  type: TYPE_NORMAL
- en: When pretty-printing a long sequence, no more then max_seq_items will be printed.
    If items are omitted, they will be denoted by the addition of “…” to the resulting
    string.
  prefs: []
  type: TYPE_NORMAL
- en: 'If set to None, the number of items to be printed is unlimited. [default: 100]
    [currently: 100]'
  prefs: []
  type: TYPE_NORMAL
- en: display.memory_usagebool, string or None
  prefs: []
  type: TYPE_NORMAL
- en: 'This specifies if the memory usage of a DataFrame should be displayed when
    df.info() is called. Valid values True,False,’deep’ [default: True] [currently:
    True]'
  prefs: []
  type: TYPE_NORMAL
- en: display.min_rowsint
  prefs: []
  type: TYPE_NORMAL
- en: 'The numbers of rows to show in a truncated view (when max_rows is exceeded).
    Ignored when max_rows is set to None or 0\. When set to None, follows the value
    of max_rows. [default: 10] [currently: 10]'
  prefs: []
  type: TYPE_NORMAL
- en: display.multi_sparseboolean
  prefs: []
  type: TYPE_NORMAL
- en: '“sparsify” MultiIndex display (don’t display repeated elements in outer levels
    within groups) [default: True] [currently: True]'
  prefs: []
  type: TYPE_NORMAL
- en: display.notebook_repr_htmlboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'When True, IPython notebook will use html representation for pandas objects
    (if it is available). [default: True] [currently: True]'
  prefs: []
  type: TYPE_NORMAL
- en: display.pprint_nest_depthint
  prefs: []
  type: TYPE_NORMAL
- en: 'Controls the number of nested levels to process when pretty-printing [default:
    3] [currently: 3]'
  prefs: []
  type: TYPE_NORMAL
- en: display.precisionint
  prefs: []
  type: TYPE_NORMAL
- en: 'Floating point output precision in terms of number of places after the decimal,
    for regular formatting as well as scientific notation. Similar to `precision`
    in `numpy.set_printoptions()`. [default: 6] [currently: 6]'
  prefs: []
  type: TYPE_NORMAL
- en: display.show_dimensionsboolean or ‘truncate’
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to print out dimensions at the end of DataFrame repr. If ‘truncate’
    is specified, only print out the dimensions if the frame is truncated (e.g. not
    display all rows and/or columns) [default: truncate] [currently: truncate]'
  prefs: []
  type: TYPE_NORMAL
- en: display.unicode.ambiguous_as_wideboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to use the Unicode East Asian Width to calculate the display text width.
    Enabling this may affect to the performance (default: False) [default: False]
    [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: display.unicode.east_asian_widthboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to use the Unicode East Asian Width to calculate the display text width.
    Enabling this may affect to the performance (default: False) [default: False]
    [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: display.widthint
  prefs: []
  type: TYPE_NORMAL
- en: 'Width of the display in characters. In case python/IPython is running in a
    terminal this can be set to None and pandas will correctly auto-detect the width.
    Note that the IPython notebook, IPython qtconsole, or IDLE do not run in a terminal
    and hence it is not possible to correctly detect the width. [default: 80] [currently:
    80]'
  prefs: []
  type: TYPE_NORMAL
- en: future.infer_string Whether to infer sequence of str objects as pyarrow string
    dtype, which will be the default in pandas 3.0 (at which point this option will
    be deprecated).
  prefs: []
  type: TYPE_NORMAL
- en: '[default: False] [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: future.no_silent_downcasting Whether to opt-in to the future behavior which
    will *not* silently downcast results from Series and DataFrame where, mask, and
    clip methods. Silent downcasting will be removed in pandas 3.0 (at which point
    this option will be deprecated).
  prefs: []
  type: TYPE_NORMAL
- en: '[default: False] [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: io.excel.ods.readerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default Excel reader engine for ‘ods’ files. Available options: auto, odf,
    calamine. [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.excel.ods.writerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default Excel writer engine for ‘ods’ files. Available options: auto, odf.
    [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.excel.xls.readerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default Excel reader engine for ‘xls’ files. Available options: auto, xlrd,
    calamine. [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.excel.xlsb.readerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default Excel reader engine for ‘xlsb’ files. Available options: auto,
    pyxlsb, calamine. [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.excel.xlsm.readerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default Excel reader engine for ‘xlsm’ files. Available options: auto,
    xlrd, openpyxl, calamine. [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.excel.xlsm.writerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default Excel writer engine for ‘xlsm’ files. Available options: auto,
    openpyxl. [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.excel.xlsx.readerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default Excel reader engine for ‘xlsx’ files. Available options: auto,
    xlrd, openpyxl, calamine. [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.excel.xlsx.writerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default Excel writer engine for ‘xlsx’ files. Available options: auto,
    openpyxl, xlsxwriter. [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.hdf.default_formatformat
  prefs: []
  type: TYPE_NORMAL
- en: 'default format writing format, if None, then put will default to ‘fixed’ and
    append will default to ‘table’ [default: None] [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: io.hdf.dropna_tableboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'drop ALL nan rows when appending to a table [default: False] [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: io.parquet.enginestring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default parquet reader/writer engine. Available options: ‘auto’, ‘pyarrow’,
    ‘fastparquet’, the default is ‘auto’ [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: io.sql.enginestring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default sql reader/writer engine. Available options: ‘auto’, ‘sqlalchemy’,
    the default is ‘auto’ [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: mode.chained_assignmentstring
  prefs: []
  type: TYPE_NORMAL
- en: 'Raise an exception, warn, or no action if trying to use chained assignment,
    The default is warn [default: warn] [currently: warn]'
  prefs: []
  type: TYPE_NORMAL
- en: mode.copy_on_writebool
  prefs: []
  type: TYPE_NORMAL
- en: 'Use new copy-view behaviour using Copy-on-Write. Defaults to False, unless
    overridden by the ‘PANDAS_COPY_ON_WRITE’ environment variable (if set to “1” for
    True, needs to be set before pandas is imported). [default: False] [currently:
    False]'
  prefs: []
  type: TYPE_NORMAL
- en: mode.data_managerstring
  prefs: []
  type: TYPE_NORMAL
- en: 'Internal data manager type; can be “block” or “array”. Defaults to “block”,
    unless overridden by the ‘PANDAS_DATA_MANAGER’ environment variable (needs to
    be set before pandas is imported). [default: block] [currently: block] (Deprecated,
    use `` instead.)'
  prefs: []
  type: TYPE_NORMAL
- en: mode.sim_interactiveboolean
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to simulate interactive mode for purposes of testing [default: False]
    [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: mode.string_storagestring
  prefs: []
  type: TYPE_NORMAL
- en: 'The default storage for StringDtype. This option is ignored if `future.infer_string`
    is set to True. [default: python] [currently: python]'
  prefs: []
  type: TYPE_NORMAL
- en: mode.use_inf_as_naboolean
  prefs: []
  type: TYPE_NORMAL
- en: True means treat None, NaN, INF, -INF as NA (old way), False means None and
    NaN are null, but INF, -INF are not NA (new way).
  prefs: []
  type: TYPE_NORMAL
- en: 'This option is deprecated in pandas 2.1.0 and will be removed in 3.0. [default:
    False] [currently: False] (Deprecated, use `` instead.)'
  prefs: []
  type: TYPE_NORMAL
- en: plotting.backendstr
  prefs: []
  type: TYPE_NORMAL
- en: 'The plotting backend to use. The default value is “matplotlib”, the backend
    provided with pandas. Other backends can be specified by providing the name of
    the module that implements the backend. [default: matplotlib] [currently: matplotlib]'
  prefs: []
  type: TYPE_NORMAL
- en: plotting.matplotlib.register_convertersbool or ‘auto’.
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to register converters with matplotlib’s units registry for dates,
    times, datetimes, and Periods. Toggling to False will remove the converters, restoring
    any converters that pandas overwrote. [default: auto] [currently: auto]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.format.decimalstr
  prefs: []
  type: TYPE_NORMAL
- en: 'The character representation for the decimal separator for floats and complex.
    [default: .] [currently: .]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.format.escapestr, optional
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to escape certain characters according to the given context; html or
    latex. [default: None] [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.format.formatterstr, callable, dict, optional
  prefs: []
  type: TYPE_NORMAL
- en: 'A formatter object to be used as default within `Styler.format`. [default:
    None] [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.format.na_repstr, optional
  prefs: []
  type: TYPE_NORMAL
- en: 'The string representation for values identified as missing. [default: None]
    [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.format.precisionint
  prefs: []
  type: TYPE_NORMAL
- en: 'The precision for floats and complex numbers. [default: 6] [currently: 6]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.format.thousandsstr, optional
  prefs: []
  type: TYPE_NORMAL
- en: 'The character representation for thousands separator for floats, int and complex.
    [default: None] [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.html.mathjaxbool
  prefs: []
  type: TYPE_NORMAL
- en: 'If False will render special CSS classes to table attributes that indicate
    Mathjax will not be used in Jupyter Notebook. [default: True] [currently: True]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.latex.environmentstr
  prefs: []
  type: TYPE_NORMAL
- en: 'The environment to replace `\begin{table}`. If “longtable” is used results
    in a specific longtable environment format. [default: None] [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.latex.hrulesbool
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to add horizontal rules on top and bottom and below the headers. [default:
    False] [currently: False]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.latex.multicol_align{“r”, “c”, “l”, “naive-l”, “naive-r”}
  prefs: []
  type: TYPE_NORMAL
- en: 'The specifier for horizontal alignment of sparsified LaTeX multicolumns. Pipe
    decorators can also be added to non-naive values to draw vertical rules, e.g.
    “|r” will draw a rule on the left side of right aligned merged cells. [default:
    r] [currently: r]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.latex.multirow_align{“c”, “t”, “b”}
  prefs: []
  type: TYPE_NORMAL
- en: 'The specifier for vertical alignment of sparsified LaTeX multirows. [default:
    c] [currently: c]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.render.encodingstr
  prefs: []
  type: TYPE_NORMAL
- en: 'The encoding used for output HTML and LaTeX files. [default: utf-8] [currently:
    utf-8]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.render.max_columnsint, optional
  prefs: []
  type: TYPE_NORMAL
- en: 'The maximum number of columns that will be rendered. May still be reduced to
    satisfy `max_elements`, which takes precedence. [default: None] [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.render.max_elementsint
  prefs: []
  type: TYPE_NORMAL
- en: 'The maximum number of data-cell (<td>) elements that will be rendered before
    trimming will occur over columns, rows or both if needed. [default: 262144] [currently:
    262144]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.render.max_rowsint, optional
  prefs: []
  type: TYPE_NORMAL
- en: 'The maximum number of rows that will be rendered. May still be reduced to satisfy
    `max_elements`, which takes precedence. [default: None] [currently: None]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.render.reprstr
  prefs: []
  type: TYPE_NORMAL
- en: 'Determine which output to use in Jupyter Notebook in {“html”, “latex”}. [default:
    html] [currently: html]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.sparse.columnsbool
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to sparsify the display of hierarchical columns. Setting to False will
    display each explicit level element in a hierarchical key for each column. [default:
    True] [currently: True]'
  prefs: []
  type: TYPE_NORMAL
- en: styler.sparse.indexbool
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to sparsify the display of a hierarchical index. Setting to False will
    display each explicit level element in a hierarchical key for each row. [default:
    True] [currently: True]'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
