- en: numpy.lib.format.open_memmap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.lib.format.open_memmap.html](https://numpy.org/doc/1.26/reference/generated/numpy.lib.format.open_memmap.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Open a .npy file as a memory-mapped array.
  prefs: []
  type: TYPE_NORMAL
- en: This may be used to read an existing file or create a new one.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**filename**str or path-like'
  prefs: []
  type: TYPE_NORMAL
- en: The name of the file on disk. This may *not* be a file-like object.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The mode in which to open the file; the default is ‘r+’. In addition to the
    standard file modes, ‘c’ is also accepted to mean “copy on write.” See [`memmap`](numpy.memmap.html#numpy.memmap
    "numpy.memmap") for the available mode strings.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The data type of the array if we are creating a new file in “write” mode, if
    not, [`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype") is ignored. The default
    value is None, which results in a data-type of [`float64`](../arrays.scalars.html#numpy.float64
    "numpy.float64").
  prefs: []
  type: TYPE_NORMAL
- en: '**shape**tuple of int'
  prefs: []
  type: TYPE_NORMAL
- en: The shape of the array if we are creating a new file in “write” mode, in which
    case this parameter is required. Otherwise, this parameter is ignored and is thus
    optional.
  prefs: []
  type: TYPE_NORMAL
- en: '**fortran_order**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether the array should be Fortran-contiguous (True) or C-contiguous (False,
    the default) if we are creating a new file in “write” mode.
  prefs: []
  type: TYPE_NORMAL
- en: '**version**tuple of int (major, minor) or None'
  prefs: []
  type: TYPE_NORMAL
- en: 'If the mode is a “write” mode, then this is the version of the file format
    used to create the file. None means use the oldest supported version that is able
    to store the data. Default: None'
  prefs: []
  type: TYPE_NORMAL
- en: '**max_header_size**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum allowed size of the header. Large headers may not be safe to load securely
    and thus require explicitly passing a larger value. See [`ast.literal_eval`](https://docs.python.org/3/library/ast.html#ast.literal_eval
    "(in Python v3.11)") for details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**marray**memmap'
  prefs: []
  type: TYPE_NORMAL
- en: The memory-mapped array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: If the data or the mode is invalid.
  prefs: []
  type: TYPE_NORMAL
- en: OSError
  prefs: []
  type: TYPE_NORMAL
- en: If the file is not found or cannot be opened correctly.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.memmap`](numpy.memmap.html#numpy.memmap "numpy.memmap")'
  prefs: []
  type: TYPE_NORMAL
