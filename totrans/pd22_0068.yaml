- en: pandas.ExcelWriter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.ExcelWriter.html](https://pandas.pydata.org/docs/reference/api/pandas.ExcelWriter.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Class for writing DataFrame objects into excel sheets.
  prefs: []
  type: TYPE_NORMAL
- en: 'Default is to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[xlsxwriter](https://pypi.org/project/XlsxWriter/) for xlsx files if xlsxwriter
    is installed otherwise [openpyxl](https://pypi.org/project/openpyxl/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[odswriter](https://pypi.org/project/odswriter/) for ods files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See `DataFrame.to_excel` for typical usage.
  prefs: []
  type: TYPE_NORMAL
- en: The writer should be used as a context manager. Otherwise, call close() to save
    and close any opened file handles.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**path**str or typing.BinaryIO'
  prefs: []
  type: TYPE_NORMAL
- en: Path to xls or xlsx or ods file.
  prefs: []
  type: TYPE_NORMAL
- en: '**engine**str (optional)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Engine to use for writing. If None, defaults to `io.excel.<extension>.writer`.
    NOTE: can only be passed as a keyword argument.'
  prefs: []
  type: TYPE_NORMAL
- en: '**date_format**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Format string for dates written into Excel files (e.g. ‘YYYY-MM-DD’).
  prefs: []
  type: TYPE_NORMAL
- en: '**datetime_format**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Format string for datetime objects written into Excel files. (e.g. ‘YYYY-MM-DD
    HH:MM:SS’).
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**{‘w’, ‘a’}, default ‘w’'
  prefs: []
  type: TYPE_NORMAL
- en: File mode to use (write or append). Append does not work with fsspec URLs.
  prefs: []
  type: TYPE_NORMAL
- en: '**storage_options**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Extra options that make sense for a particular storage connection, e.g. host,
    port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded
    to `urllib.request.Request` as header options. For other URLs (e.g. starting with
    “s3://”, and “gcs://”) the key-value pairs are forwarded to `fsspec.open`. Please
    see `fsspec` and `urllib` for more details, and for more examples on storage options
    refer [here](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files).
  prefs: []
  type: TYPE_NORMAL
- en: '**if_sheet_exists**{‘error’, ‘new’, ‘replace’, ‘overlay’}, default ‘error’'
  prefs: []
  type: TYPE_NORMAL
- en: How to behave when trying to write to a sheet that already exists (append mode
    only).
  prefs: []
  type: TYPE_NORMAL
- en: 'error: raise a ValueError.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'new: Create a new sheet, with a name determined by the engine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'replace: Delete the contents of the sheet before writing to it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'overlay: Write contents to the existing sheet without first removing, but possibly
    over top of, the existing contents.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.4.0: Added `overlay` option'
  prefs: []
  type: TYPE_NORMAL
- en: '**engine_kwargs**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Keyword arguments to be passed into the engine. These will be passed to the
    following functions of the respective engines:'
  prefs: []
  type: TYPE_NORMAL
- en: 'xlsxwriter: `xlsxwriter.Workbook(file, **engine_kwargs)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'openpyxl (write mode): `openpyxl.Workbook(**engine_kwargs)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'openpyxl (append mode): `openpyxl.load_workbook(file, **engine_kwargs)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'odswriter: `odf.opendocument.OpenDocumentSpreadsheet(**engine_kwargs)`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For compatibility with CSV writers, ExcelWriter serializes lists and dicts to
    strings before writing.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Default usage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To write to separate sheets in a single file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'You can set the date format or datetime format:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also append to an existing Excel file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, the if_sheet_exists parameter can be set to replace a sheet if it already
    exists:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also write multiple DataFrames to a single sheet. Note that the `if_sheet_exists`
    parameter needs to be set to `overlay`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'You can store Excel file in RAM:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'You can pack Excel file into zip archive:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'You can specify additional arguments to the underlying engine:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'In append mode, `engine_kwargs` are passed through to openpyxl’s `load_workbook`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| `book` | Book instance. |'
  prefs: []
  type: TYPE_TB
- en: '| `date_format` | Format string for dates written into Excel files (e.g. ''YYYY-MM-DD'').
    |'
  prefs: []
  type: TYPE_TB
- en: '| `datetime_format` | Format string for dates written into Excel files (e.g.
    ''YYYY-MM-DD''). |'
  prefs: []
  type: TYPE_TB
- en: '| `engine` | Name of engine. |'
  prefs: []
  type: TYPE_TB
- en: '| `if_sheet_exists` | How to behave when writing to a sheet that already exists
    in append mode. |'
  prefs: []
  type: TYPE_TB
- en: '| `sheets` | Mapping of sheet names to sheet objects. |'
  prefs: []
  type: TYPE_TB
- en: '| `supported_extensions` | Extensions that writer engine supports. |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| `check_extension`(ext) | checks that path''s extension against the Writer''s
    supported extensions. |'
  prefs: []
  type: TYPE_TB
- en: '| `close`() | synonym for save, to make it more file-like |'
  prefs: []
  type: TYPE_TB
