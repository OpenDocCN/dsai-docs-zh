["```py\nscipy.stats.f = <scipy.stats._continuous_distns.f_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import f\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> dfn, dfd = 29, 18\n>>> mean, var, skew, kurt = f.stats(dfn, dfd, moments='mvsk') \n```", "```py\n>>> x = np.linspace(f.ppf(0.01, dfn, dfd),\n...                 f.ppf(0.99, dfn, dfd), 100)\n>>> ax.plot(x, f.pdf(x, dfn, dfd),\n...        'r-', lw=5, alpha=0.6, label='f pdf') \n```", "```py\n>>> rv = f(dfn, dfd)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = f.ppf([0.001, 0.5, 0.999], dfn, dfd)\n>>> np.allclose([0.001, 0.5, 0.999], f.cdf(vals, dfn, dfd))\nTrue \n```", "```py\n>>> r = f.rvs(dfn, dfd, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]