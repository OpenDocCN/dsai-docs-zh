- en: numpy.linalg.svd
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.linalg.svd
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.linalg.svd.html](https://numpy.org/doc/1.26/reference/generated/numpy.linalg.svd.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.linalg.svd.html](https://numpy.org/doc/1.26/reference/generated/numpy.linalg.svd.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Singular Value Decomposition.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 奇异值分解。
- en: When *a* is a 2D array, and `full_matrices=False`, then it is factorized as
    `u @ np.diag(s) @ vh = (u * s) @ vh`, where *u* and the Hermitian transpose of
    *vh* are 2D arrays with orthonormal columns and *s* is a 1D array of *a*’s singular
    values. When *a* is higher-dimensional, SVD is applied in stacked mode as explained
    below.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当*a*是2D数组，且`full_matrices=False`，则将其分解为`u @ np.diag(s) @ vh = (u * s) @ vh`，其中*u*和*vh*的共轭转置是具有标准正交列的2D数组，*s*是*a*的奇异值的1D数组。当*a*是更高维度时，将以堆叠模式进行奇异值分解，如下所述。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**(…, M, N) array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**(…, M, N)数组型'
- en: A real or complex array with `a.ndim >= 2`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 具有`a.ndim >= 2`的实数或复数数组。
- en: '**full_matrices**bool, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**full_matrices**bool, optional'
- en: If True (default), *u* and *vh* have the shapes `(..., M, M)` and `(..., N,
    N)`, respectively. Otherwise, the shapes are `(..., M, K)` and `(..., K, N)`,
    respectively, where `K = min(M, N)`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True（默认值），*u*和*vh*的形状分别为`(..., M, M)`和`(..., N, N)`。否则，形状分别为`(..., M, K)`和`(...,
    K, N)`，其中`K = min(M, N)`。
- en: '**compute_uv**bool, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**compute_uv**bool, optional'
- en: Whether or not to compute *u* and *vh* in addition to *s*. True by default.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 是否计算*u*和*vh*以及*s*。默认值为True。
- en: '**hermitian**bool, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**hermitian**bool, optional'
- en: If True, *a* is assumed to be Hermitian (symmetric if real-valued), enabling
    a more efficient method for finding singular values. Defaults to False.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则假定*a*是厄米（实值情况下为对称的），从而可以更有效地找到奇异值。默认为False。
- en: New in version 1.17.0.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 1.17.0版本中的新增内容。
- en: 'Returns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: When *compute_uv* is True, the result is a namedtuple with the following
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当*compute_uv*为True时，结果将是具有以下属性的命名元组
- en: 'attribute names:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 属性名称：
- en: '**U**{ (…, M, M), (…, M, K) } array'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**U**{ (…, M, M), (…, M, K) }数组'
- en: Unitary array(s). The first `a.ndim - 2` dimensions have the same size as those
    of the input *a*. The size of the last two dimensions depends on the value of
    *full_matrices*. Only returned when *compute_uv* is True.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 单位数组。前`a.ndim - 2`维具有与输入*a*相同的大小。最后两个维度的大小取决于*full_matrices*的值。仅在*compute_uv*为True时返回。
- en: '**S**(…, K) array'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**S**(…, K)数组'
- en: Vector(s) with the singular values, within each vector sorted in descending
    order. The first `a.ndim - 2` dimensions have the same size as those of the input
    *a*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 各向量的奇异值，每个向量按降序排序。前`a.ndim - 2`维与输入*a*的大小相同。
- en: '**Vh**{ (…, N, N), (…, K, N) } array'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**Vh**{ (…, N, N), (…, K, N) }数组'
- en: Unitary array(s). The first `a.ndim - 2` dimensions have the same size as those
    of the input *a*. The size of the last two dimensions depends on the value of
    *full_matrices*. Only returned when *compute_uv* is True.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 单位数组。前`a.ndim - 2`维具有与输入*a*相同的大小。最后两个维度的大小取决于*full_matrices*的值。仅在*compute_uv*为True时返回。
- en: 'Raises:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: LinAlgError
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: LinAlgError
- en: If SVD computation does not converge.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果SVD计算无法收敛。
- en: See also
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`scipy.linalg.svd`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.svd.html#scipy.linalg.svd
    "(in SciPy v1.11.2)")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.linalg.svd`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.svd.html#scipy.linalg.svd
    "(in SciPy v1.11.2)")'
- en: Similar function in SciPy.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy中的类似函数。
- en: '[`scipy.linalg.svdvals`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.svdvals.html#scipy.linalg.svdvals
    "(in SciPy v1.11.2)")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.linalg.svdvals`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.svdvals.html#scipy.linalg.svdvals
    "(in SciPy v1.11.2)")'
- en: Compute singular values of a matrix.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 计算矩阵的奇异值。
- en: Notes
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: 'Changed in version 1.8.0: Broadcasting rules apply, see the [`numpy.linalg`](../routines.linalg.html#module-numpy.linalg
    "numpy.linalg") documentation for details.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.8.0版本中更改：广播规则适用，有关详细信息，请参阅[`numpy.linalg`](../routines.linalg.html#module-numpy.linalg
    "numpy.linalg")文档。
- en: The decomposition is performed using LAPACK routine `_gesdd`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用LAPACK例程`_gesdd`执行分解。
- en: SVD is usually described for the factorization of a 2D matrix \(A\). The higher-dimensional
    case will be discussed below. In the 2D case, SVD is written as \(A = U S V^H\),
    where \(A = a\), \(U= u\), \(S= \mathtt{np.diag}(s)\) and \(V^H = vh\). The 1D
    array *s* contains the singular values of *a* and *u* and *vh* are unitary. The
    rows of *vh* are the eigenvectors of \(A^H A\) and the columns of *u* are the
    eigenvectors of \(A A^H\). In both cases the corresponding (possibly non-zero)
    eigenvalues are given by `s**2`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: SVD通常用于分解二维矩阵\(A\)。下面将讨论高维情况。在二维情况下，SVD表示为\(A = U S V^H\)，其中\(A = a\)，\(U= u\)，\(S=
    \mathtt{np.diag}(s)\)和\(V^H = vh\)。一维数组*s*包含*a*的奇异值，*u*和*vh*是酉矩阵。*vh*的行是\(A^H
    A\)的特征向量，*u*的列是\(A A^H\)的特征向量。在这两种情况下，相应的（可能非零）特征值由`s**2`给出。
- en: 'If *a* has more than two dimensions, then broadcasting rules apply, as explained
    in [Linear algebra on several matrices at once](../routines.linalg.html#routines-linalg-broadcasting).
    This means that SVD is working in “stacked” mode: it iterates over all indices
    of the first `a.ndim - 2` dimensions and for each combination SVD is applied to
    the last two indices. The matrix *a* can be reconstructed from the decomposition
    with either `(u * s[..., None, :]) @ vh` or `u @ (s[..., None] * vh)`. (The `@`
    operator can be replaced by the function `np.matmul` for python versions below
    3.5.)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*a*的维数超过两个，则应用广播规则，如[同时对多个矩阵进行线性代数运算](../routines.linalg.html#routines-linalg-broadcasting)中所解释的那样。这意味着SVD以“堆叠”模式工作：它遍历第一个`a.ndim
    - 2`维的所有索引，对于每个组合，SVD应用于最后两个索引。矩阵*a*可以使用`(u * s[..., None, :]) @ vh`或`u @ (s[...,
    None] * vh)`重构分解。（对于Python版本低于3.5，`@`运算符可以被函数`np.matmul`替换。）
- en: If *a* is a `matrix` object (as opposed to an `ndarray`), then so are all the
    return values.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*a*是一个`matrix`对象（而不是一个`ndarray`），那么所有返回值也是。
- en: Examples
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Reconstruction based on full SVD, 2D case:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 基于完整SVD的重构，二维情况：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Reconstruction based on reduced SVD, 2D case:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 基于降维SVD的重构，二维情况：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Reconstruction based on full SVD, 4D case:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 基于完整SVD的重构，四维情况：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Reconstruction based on reduced SVD, 4D case:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 基于降维SVD的重构，四维情况：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
