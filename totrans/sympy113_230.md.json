["```py\nsympy.physics.optics.utils.brewster_angle(medium1, medium2)\n```", "```py\n>>> from sympy.physics.optics import brewster_angle\n>>> brewster_angle(1, 1.33)\n0.926093295503462 \n```", "```py\nsympy.physics.optics.utils.critical_angle(medium1, medium2)\n```", "```py\n>>> from sympy.physics.optics import critical_angle\n>>> critical_angle(1.33, 1)\n0.850908514477849 \n```", "```py\nsympy.physics.optics.utils.deviation(incident, medium1, medium2, normal=None, plane=None)\n```", "```py\n>>> from sympy.physics.optics import deviation\n>>> from sympy.geometry import Point3D, Ray3D, Plane\n>>> from sympy.matrices import Matrix\n>>> from sympy import symbols\n>>> n1, n2 = symbols('n1, n2')\n>>> n = Matrix([0, 0, 1])\n>>> P = Plane(Point3D(0, 0, 0), normal_vector=[0, 0, 1])\n>>> r1 = Ray3D(Point3D(-1, -1, 1), Point3D(0, 0, 0))\n>>> deviation(r1, 1, 1, n)\n0\n>>> deviation(r1, n1, n2, plane=P)\n-acos(-sqrt(-2*n1**2/(3*n2**2) + 1)) + acos(-sqrt(3)/3)\n>>> round(deviation(0.1, 1.2, 1.5), 5)\n-0.02005 \n```", "```py\nsympy.physics.optics.utils.fresnel_coefficients(angle_of_incidence, medium1, medium2)\n```", "```py\n>>> from sympy.physics.optics import fresnel_coefficients\n>>> fresnel_coefficients(0.3, 1, 2)\n[0.317843553417859, -0.348645229818821,\n 0.658921776708929, 0.651354770181179]\n>>> fresnel_coefficients(0.6, 2, 1)\n[-0.235625382192159 - 0.971843958291041*I,\n 0.816477005968898 - 0.577377951366403*I] \n```", "```py\nsympy.physics.optics.utils.hyperfocal_distance(f, N, c)\n```", "```py\n>>> from sympy.physics.optics import hyperfocal_distance\n>>> round(hyperfocal_distance(f = 0.5, N = 8, c = 0.0033), 2)\n9.47 \n```", "```py\nsympy.physics.optics.utils.lens_formula(focal_length=None, u=None, v=None)\n```", "```py\n>>> from sympy.physics.optics import lens_formula\n>>> from sympy.abc import f, u, v\n>>> lens_formula(focal_length=f, u=u)\nf*u/(f + u)\n>>> lens_formula(focal_length=f, v=v)\nf*v/(f - v)\n>>> lens_formula(u=u, v=v)\nu*v/(u - v) \n```", "```py\nsympy.physics.optics.utils.lens_makers_formula(n_lens, n_surr, r1, r2, d=0)\n```", "```py\n>>> from sympy.physics.optics import lens_makers_formula\n>>> from sympy import S\n>>> lens_makers_formula(1.33, 1, 10, -10)\n15.1515151515151\n>>> lens_makers_formula(1.2, 1, 10, S.Infinity)\n50.0000000000000\n>>> lens_makers_formula(1.33, 1, 10, -10, d=1)\n15.3418463277618 \n```", "```py\nsympy.physics.optics.utils.mirror_formula(focal_length=None, u=None, v=None)\n```", "```py\n>>> from sympy.physics.optics import mirror_formula\n>>> from sympy.abc import f, u, v\n>>> mirror_formula(focal_length=f, u=u)\nf*u/(-f + u)\n>>> mirror_formula(focal_length=f, v=v)\nf*v/(-f + v)\n>>> mirror_formula(u=u, v=v)\nu*v/(u + v) \n```", "```py\nsympy.physics.optics.utils.refraction_angle(incident, medium1, medium2, normal=None, plane=None)\n```", "```py\n>>> from sympy.physics.optics import refraction_angle\n>>> from sympy.geometry import Point3D, Ray3D, Plane\n>>> from sympy.matrices import Matrix\n>>> from sympy import symbols, pi\n>>> n = Matrix([0, 0, 1])\n>>> P = Plane(Point3D(0, 0, 0), normal_vector=[0, 0, 1])\n>>> r1 = Ray3D(Point3D(-1, -1, 1), Point3D(0, 0, 0))\n>>> refraction_angle(r1, 1, 1, n)\nMatrix([\n[ 1],\n[ 1],\n[-1]])\n>>> refraction_angle(r1, 1, 1, plane=P)\nRay3D(Point3D(0, 0, 0), Point3D(1, 1, -1)) \n```", "```py\n>>> n1, n2 = symbols('n1, n2')\n>>> refraction_angle(r1, n1, n2, n)\nMatrix([\n[                                n1/n2],\n[                                n1/n2],\n[-sqrt(3)*sqrt(-2*n1**2/(3*n2**2) + 1)]])\n>>> refraction_angle(r1, n1, n2, plane=P)\nRay3D(Point3D(0, 0, 0), Point3D(n1/n2, n1/n2, -sqrt(3)*sqrt(-2*n1**2/(3*n2**2) + 1)))\n>>> round(refraction_angle(pi/6, 1.2, 1.5), 5)\n0.41152 \n```", "```py\nsympy.physics.optics.utils.transverse_magnification(si, so)\n```", "```py\n>>> from sympy.physics.optics import transverse_magnification\n>>> transverse_magnification(30, 15)\n-2 \n```"]