- en: numpy.seterrobj
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.seterrobj.html](https://numpy.org/doc/1.26/reference/generated/numpy.seterrobj.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Set the object that defines floating-point error handling.
  prefs: []
  type: TYPE_NORMAL
- en: The error object contains all information that defines the error handling behavior
    in NumPy. [`seterrobj`](#numpy.seterrobj "numpy.seterrobj") is used internally
    by the other functions that set error handling behavior ([`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr"), [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall")).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**errobj**list'
  prefs: []
  type: TYPE_NORMAL
- en: 'The error object, a list containing three elements: [internal numpy buffer
    size, error mask, error callback function].'
  prefs: []
  type: TYPE_NORMAL
- en: The error mask is a single integer that holds the treatment information on all
    four floating point errors. The information for each error type is contained in
    three bits of the integer. If we print it in base 8, we can see what treatment
    is set for “invalid”, “under”, “over”, and “divide” (in that order). The printed
    string can be interpreted with
  prefs: []
  type: TYPE_NORMAL
- en: '0 : ‘ignore’'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '1 : ‘warn’'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '2 : ‘raise’'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '3 : ‘call’'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '4 : ‘print’'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '5 : ‘log’'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`geterrobj`](numpy.geterrobj.html#numpy.geterrobj "numpy.geterrobj"), [`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr"), [`geterr`](numpy.geterr.html#numpy.geterr "numpy.geterr"), [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall
    "numpy.seterrcall"), [`geterrcall`](numpy.geterrcall.html#numpy.geterrcall "numpy.geterrcall")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`getbufsize`](numpy.getbufsize.html#numpy.getbufsize "numpy.getbufsize"),
    [`setbufsize`](numpy.setbufsize.html#numpy.setbufsize "numpy.setbufsize")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For complete documentation of the types of floating-point exceptions and treatment
    options, see [`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
