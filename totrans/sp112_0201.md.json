["```py\nclass scipy.interpolate.RectSphereBivariateSpline(u, v, r, s=0.0, pole_continuity=False, pole_values=None, pole_exact=False, pole_flat=False)\n```", "```py\n>>> import numpy as np\n>>> lats = np.linspace(10, 170, 9) * np.pi / 180.\n>>> lons = np.linspace(0, 350, 18) * np.pi / 180.\n>>> data = np.dot(np.atleast_2d(90. - np.linspace(-80., 80., 18)).T,\n...               np.atleast_2d(180. - np.abs(np.linspace(0., 350., 9)))).T \n```", "```py\n>>> new_lats = np.linspace(1, 180, 180) * np.pi / 180\n>>> new_lons = np.linspace(1, 360, 360) * np.pi / 180\n>>> new_lats, new_lons = np.meshgrid(new_lats, new_lons) \n```", "```py\n>>> from scipy.interpolate import RectSphereBivariateSpline\n>>> lut = RectSphereBivariateSpline(lats, lons, data) \n```", "```py\n>>> data_interp = lut.ev(new_lats.ravel(),\n...                      new_lons.ravel()).reshape((360, 180)).T \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> fig = plt.figure()\n>>> ax1 = fig.add_subplot(211)\n>>> ax1.imshow(data, interpolation='nearest')\n>>> ax2 = fig.add_subplot(212)\n>>> ax2.imshow(data_interp, interpolation='nearest')\n>>> plt.show() \n```", "```py\n>>> fig2 = plt.figure()\n>>> s = [3e9, 2e9, 1e9, 1e8]\n>>> for idx, sval in enumerate(s, 1):\n...     lut = RectSphereBivariateSpline(lats, lons, data, s=sval)\n...     data_interp = lut.ev(new_lats.ravel(),\n...                          new_lons.ravel()).reshape((360, 180)).T\n...     ax = fig2.add_subplot(2, 2, idx)\n...     ax.imshow(data_interp, interpolation='nearest')\n...     ax.set_title(f\"s = {sval:g}\")\n>>> plt.show() \n```"]