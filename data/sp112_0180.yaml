- en: scipy.interpolate.RegularGridInterpolator
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.interpolate.RegularGridInterpolator
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.RegularGridInterpolator.html#scipy.interpolate.RegularGridInterpolator](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.RegularGridInterpolator.html#scipy.interpolate.RegularGridInterpolator)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.RegularGridInterpolator.html#scipy.interpolate.RegularGridInterpolator](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.RegularGridInterpolator.html#scipy.interpolate.RegularGridInterpolator)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Interpolator on a regular or rectilinear grid in arbitrary dimensions.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在任意维度的规则或矩形网格上的插值器。
- en: The data must be defined on a rectilinear grid; that is, a rectangular grid
    with even or uneven spacing. Linear, nearest-neighbor, spline interpolations are
    supported. After setting up the interpolator object, the interpolation method
    may be chosen at each evaluation.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数据必须在矩形网格上定义；即，具有均匀或不均匀间距的矩形网格。支持线性、最近邻、样条插值。设置插值器对象后，可以在每次评估时选择插值方法。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**points**tuple of ndarray of float, with shapes (m1, ), …, (mn, )'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**points**浮点数的ndarray元组，形状为(m1, ), …, (mn, )'
- en: The points defining the regular grid in n dimensions. The points in each dimension
    (i.e. every elements of the points tuple) must be strictly ascending or descending.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 定义n维度规则网格的点。每个维度的点（即points元组的每个元素）必须严格升序或降序排列。
- en: '**values**array_like, shape (m1, …, mn, …)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**values**array_like，形状为(m1, …, mn, …)'
- en: The data on the regular grid in n dimensions. Complex data can be acceptable.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: n维度正则网格上的数据。复杂数据可以接受。
- en: '**method**str, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**字符串，可选'
- en: The method of interpolation to perform. Supported are “linear”, “nearest”, “slinear”,
    “cubic”, “quintic” and “pchip”. This parameter will become the default for the
    object’s `__call__` method. Default is “linear”.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 执行的插值方法。支持的有“linear”、“nearest”、“slinear”、“cubic”、“quintic”和“pchip”。此参数将成为对象的`__call__`方法的默认值。默认为“linear”。
- en: '**bounds_error**bool, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**bounds_error**布尔值，可选'
- en: If True, when interpolated values are requested outside of the domain of the
    input data, a ValueError is raised. If False, then *fill_value* is used. Default
    is True.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，在请求超出输入数据域的插值值时，将引发ValueError。如果为False，则使用*fill_value*。默认为True。
- en: '**fill_value**float or None, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**fill_value**浮点数或None，可选'
- en: The value to use for points outside of the interpolation domain. If None, values
    outside the domain are extrapolated. Default is `np.nan`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 用于超出插值域的点的值。如果为None，则在域外使用外推值。默认为`np.nan`。
- en: See also
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`NearestNDInterpolator`](scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator
    "scipy.interpolate.NearestNDInterpolator")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`NearestNDInterpolator`](scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator
    "scipy.interpolate.NearestNDInterpolator")'
- en: Nearest neighbor interpolator on *unstructured* data in N dimensions
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在N维度的*非结构化*数据上使用最近邻插值器
- en: '[`LinearNDInterpolator`](scipy.interpolate.LinearNDInterpolator.html#scipy.interpolate.LinearNDInterpolator
    "scipy.interpolate.LinearNDInterpolator")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`LinearNDInterpolator`](scipy.interpolate.LinearNDInterpolator.html#scipy.interpolate.LinearNDInterpolator
    "scipy.interpolate.LinearNDInterpolator")'
- en: Piecewise linear interpolator on *unstructured* data in N dimensions
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在N维度的*非结构化*数据上的分段线性插值器
- en: '[`interpn`](scipy.interpolate.interpn.html#scipy.interpolate.interpn "scipy.interpolate.interpn")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`interpn`](scipy.interpolate.interpn.html#scipy.interpolate.interpn "scipy.interpolate.interpn")'
- en: a convenience function which wraps [`RegularGridInterpolator`](#scipy.interpolate.RegularGridInterpolator
    "scipy.interpolate.RegularGridInterpolator")
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 包装了[`RegularGridInterpolator`](#scipy.interpolate.RegularGridInterpolator "scipy.interpolate.RegularGridInterpolator")的便利函数
- en: '[`scipy.ndimage.map_coordinates`](scipy.ndimage.map_coordinates.html#scipy.ndimage.map_coordinates
    "scipy.ndimage.map_coordinates")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`scipy.ndimage.map_coordinates`](scipy.ndimage.map_coordinates.html#scipy.ndimage.map_coordinates
    "scipy.ndimage.map_coordinates")'
- en: interpolation on grids with equal spacing (suitable for e.g., N-D image resampling)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在具有相等间距的网格上插值（适用于例如N-D图像重采样）
- en: Notes
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Contrary to [`LinearNDInterpolator`](scipy.interpolate.LinearNDInterpolator.html#scipy.interpolate.LinearNDInterpolator
    "scipy.interpolate.LinearNDInterpolator") and [`NearestNDInterpolator`](scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator
    "scipy.interpolate.NearestNDInterpolator"), this class avoids expensive triangulation
    of the input data by taking advantage of the regular grid structure.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 与 [`LinearNDInterpolator`](scipy.interpolate.LinearNDInterpolator.html#scipy.interpolate.LinearNDInterpolator
    "scipy.interpolate.LinearNDInterpolator") 和 [`NearestNDInterpolator`](scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator
    "scipy.interpolate.NearestNDInterpolator") 相反，这个类通过利用规则网格结构来避免输入数据的昂贵三角化。
- en: In other words, this class assumes that the data is defined on a *rectilinear*
    grid.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，这个类假设数据定义在*矩形*网格上。
- en: New in version 0.14.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本 0.14 新增。
- en: The ‘slinear’(k=1), ‘cubic’(k=3), and ‘quintic’(k=5) methods are tensor-product
    spline interpolators, where *k* is the spline degree, If any dimension has fewer
    points than *k* + 1, an error will be raised.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ‘slinear’（k=1），‘cubic’（k=3）和‘quintic’（k=5）方法是张量积样条插值器，其中 *k* 是样条度数，如果任何维度的点少于
    *k* + 1，则会引发错误。
- en: New in version 1.9.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本 1.9 新增。
- en: If the input data is such that dimensions have incommensurate units and differ
    by many orders of magnitude, the interpolant may have numerical artifacts. Consider
    rescaling the data before interpolating.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入数据的维度具有不可比较的单位并且相差多个数量级，则插值可能会出现数值伪影。在插值之前考虑重新缩放数据。
- en: References
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[1]'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: Python package *regulargrid* by Johannes Buchner, see [https://pypi.python.org/pypi/regulargrid/](https://pypi.python.org/pypi/regulargrid/)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Python 包 *regulargrid* 由 Johannes Buchner 提供，详见 [https://pypi.python.org/pypi/regulargrid/](https://pypi.python.org/pypi/regulargrid/)
- en: '[2]'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[2]'
- en: Wikipedia, “Trilinear interpolation”, [https://en.wikipedia.org/wiki/Trilinear_interpolation](https://en.wikipedia.org/wiki/Trilinear_interpolation)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 维基百科，“三线性插值”，[https://en.wikipedia.org/wiki/Trilinear_interpolation](https://en.wikipedia.org/wiki/Trilinear_interpolation)
- en: '[3]'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[3]'
- en: 'Weiser, Alan, and Sergio E. Zarantonello. “A note on piecewise linear and multilinear
    table interpolation in many dimensions.” MATH. COMPUT. 50.181 (1988): 189-196.
    [https://www.ams.org/journals/mcom/1988-50-181/S0025-5718-1988-0917826-0/S0025-5718-1988-0917826-0.pdf](https://www.ams.org/journals/mcom/1988-50-181/S0025-5718-1988-0917826-0/S0025-5718-1988-0917826-0.pdf)
    [DOI:10.1090/S0025-5718-1988-0917826-0](https://doi.org/10.1090/S0025-5718-1988-0917826-0)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 'Weiser, Alan, 和 Sergio E. Zarantonello. “关于分段线性和多线性表插值的注记。” MATH. COMPUT. 50.181
    (1988): 189-196. [https://www.ams.org/journals/mcom/1988-50-181/S0025-5718-1988-0917826-0/S0025-5718-1988-0917826-0.pdf](https://www.ams.org/journals/mcom/1988-50-181/S0025-5718-1988-0917826-0/S0025-5718-1988-0917826-0.pdf)
    [DOI:10.1090/S0025-5718-1988-0917826-0](https://doi.org/10.1090/S0025-5718-1988-0917826-0)'
- en: Examples
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '**Evaluate a function on the points of a 3-D grid**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**在三维网格点上评估函数**'
- en: 'As a first example, we evaluate a simple example function on the points of
    a 3-D grid:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第一个例子，我们在三维网格点上评估一个简单的示例函数：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`data` is now a 3-D array with `data[i, j, k] = f(x[i], y[j], z[k])`. Next,
    define an interpolating function from this data:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`data` 现在是一个三维数组，其中 `data[i, j, k] = f(x[i], y[j], z[k])`。接下来，从这些数据定义一个插值函数：'
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Evaluate the interpolating function at the two points `(x,y,z) = (2.1, 6.2,
    8.3)` and `(3.3, 5.2, 7.1)`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个点 `(x,y,z) = (2.1, 6.2, 8.3)` 和 `(3.3, 5.2, 7.1)` 处评估插值函数：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: which is indeed a close approximation to
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 它实际上是与
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Interpolate and extrapolate a 2D dataset**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**插值和外推一个二维数据集**'
- en: 'As a second example, we interpolate and extrapolate a 2D data set:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第二个例子，我们插值和外推一个二维数据集：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Evaluate and plot the interpolator on a finer grid
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在更细的网格上评估和绘制插值器
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![../../_images/scipy-interpolate-RegularGridInterpolator-1_00_00.png](../Images/d56fe196e9738fb3299fc0271c73705a.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-interpolate-RegularGridInterpolator-1_00_00.png](../Images/d56fe196e9738fb3299fc0271c73705a.png)'
- en: Other examples are given [in the tutorial](../../tutorial/interpolate/ND_regular_grid.html#tutorial-interpolate-regular-grid-interpolator).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在教程中还提供了其他示例 [../../tutorial/interpolate/ND_regular_grid.html#tutorial-interpolate-regular-grid-interpolator](../../tutorial/interpolate/ND_regular_grid.html#tutorial-interpolate-regular-grid-interpolator)。
- en: 'Attributes:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**grid**tuple of ndarrays'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**grid**ndarrays 的元组'
- en: The points defining the regular grid in n dimensions. This tuple defines the
    full grid via `np.meshgrid(*grid, indexing='ij')`
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 n 维规则网格的点。此元组通过 `np.meshgrid(*grid, indexing='ij')` 定义完整网格。
- en: '**values**ndarray'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**values**ndarray'
- en: Data values at the grid.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 网格上的数据值。
- en: '**method**str'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**method**str'
- en: Interpolation method.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 插值方法。
- en: '**fill_value**float or `None`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**fill_value**float 或 `None`'
- en: Use this value for out-of-bounds arguments to [`__call__`](scipy.interpolate.RegularGridInterpolator.__call__.html#scipy.interpolate.RegularGridInterpolator.__call__
    "scipy.interpolate.RegularGridInterpolator.__call__").
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在超出范围的参数上使用此值来调用[`__call__`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.RegularGridInterpolator.__call__.html#scipy.interpolate.RegularGridInterpolator.__call__
    "scipy.interpolate.RegularGridInterpolator.__call__")。
- en: '**bounds_error**bool'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**bounds_error**bool'
- en: If `True`, out-of-bounds argument raise a `ValueError`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为`True`，超出范围的参数会引发`ValueError`。
- en: Methods
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__call__`](scipy.interpolate.RegularGridInterpolator.__call__.html#scipy.interpolate.RegularGridInterpolator.__call__
    "scipy.interpolate.RegularGridInterpolator.__call__")(xi[, method]) | Interpolation
    at coordinates. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`__call__`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.RegularGridInterpolator.__call__.html#scipy.interpolate.RegularGridInterpolator.__call__
    "scipy.interpolate.RegularGridInterpolator.__call__")(xi[, method]) | 在坐标处进行插值。
    |'
