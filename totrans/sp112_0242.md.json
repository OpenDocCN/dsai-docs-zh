["```py\nscipy.linalg.matmul_toeplitz(c_or_cr, x, check_finite=False, workers=None)\n```", "```py\n [ 1 -1 -2 -3]       [1 10]\nT = [ 3  1 -1 -2]   x = [2 11]\n    [ 6  3  1 -1]       [2 11]\n    [10  6  3  1]       [5 19] \n```", "```py\n>>> import numpy as np\n>>> c = np.array([1, 3, 6, 10])    # First column of T\n>>> r = np.array([1, -1, -2, -3])  # First row of T\n>>> x = np.array([[1, 10], [2, 11], [2, 11], [5, 19]]) \n```", "```py\n>>> from scipy.linalg import toeplitz, matmul_toeplitz\n>>> matmul_toeplitz((c, r), x)\narray([[-20., -80.],\n [ -7.,  -8.],\n [  9.,  85.],\n [ 33., 218.]]) \n```", "```py\n>>> toeplitz(c, r) @ x\narray([[-20, -80],\n [ -7,  -8],\n [  9,  85],\n [ 33, 218]]) \n```", "```py\n>>> n = 1000000\n>>> matmul_toeplitz([1] + [0]*(n-1), np.ones(n))\narray([1., 1., 1., ..., 1., 1., 1.]) \n```"]