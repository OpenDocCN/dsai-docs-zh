- en: Ellipses
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/geometry/ellipses.html](https://docs.sympy.org/latest/modules/geometry/ellipses.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: An elliptical GeometryEntity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**center** : Point, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Default value is Point(0, 0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**hradius** : number or SymPy expression, optional'
  prefs: []
  type: TYPE_NORMAL
- en: '**vradius** : number or SymPy expression, optional'
  prefs: []
  type: TYPE_NORMAL
- en: '**eccentricity** : number or SymPy expression, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Two of \(hradius\), \(vradius\) and \(eccentricity\) must be supplied to create
    an Ellipse. The third is derived from the two supplied.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**GeometryError**'
  prefs: []
  type: TYPE_NORMAL
- en: When \(hradius\), \(vradius\) and \(eccentricity\) are incorrectly supplied
    as parameters.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**TypeError**'
  prefs: []
  type: TYPE_NORMAL
- en: When \(center\) is not a Point.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Constructed from a center and two radii, the first being the horizontal radius
    (along the x-axis) and the second being the vertical radius (along the y-axis).
  prefs: []
  type: TYPE_NORMAL
- en: When symbolic value for hradius and vradius are used, any calculation that refers
    to the foci or the major or minor axis will assume that the ellipse has its major
    radius on the x-axis. If this is not true then a manual rotation is necessary.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Circle`](#sympy.geometry.ellipse.Circle "sympy.geometry.ellipse.Circle")'
  prefs: []
  type: TYPE_NORMAL
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| center |  |'
  prefs: []
  type: TYPE_TB
- en: '| hradius |  |'
  prefs: []
  type: TYPE_TB
- en: '| vradius |  |'
  prefs: []
  type: TYPE_TB
- en: '| area |  |'
  prefs: []
  type: TYPE_TB
- en: '| circumference |  |'
  prefs: []
  type: TYPE_TB
- en: '| eccentricity |  |'
  prefs: []
  type: TYPE_TB
- en: '| periapsis |  |'
  prefs: []
  type: TYPE_TB
- en: '| apoapsis |  |'
  prefs: []
  type: TYPE_TB
- en: '| focus_distance |  |'
  prefs: []
  type: TYPE_TB
- en: '| foci |  |'
  prefs: []
  type: TYPE_TB
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The apoapsis of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: The greatest distance between the focus and the contour.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**apoapsis** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`periapsis`](#sympy.geometry.ellipse.Ellipse.periapsis "sympy.geometry.ellipse.Ellipse.periapsis")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns shortest distance between foci and contour
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: A parameterized point on the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**parameter** : str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Default value is ‘t’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**arbitrary_point** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ValueError**'
  prefs: []
  type: TYPE_NORMAL
- en: When \(parameter\) already appears in the functions.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The area of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**area** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Returns a Circle whose diameter is the major axis of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Return a tuple (xmin, ymin, xmax, ymax) representing the bounding rectangle
    for the geometric figure.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The center of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**center** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The circumference of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Returns a Circle consisting of all points where two perpendicular tangent lines
    to the ellipse cross each other.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Circle
  prefs: []
  type: TYPE_NORMAL
- en: A director circle returned as a geometric object.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R545](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Director_circle](https://en.wikipedia.org/wiki/Director_circle)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: The eccentricity of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**eccentricity** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Return True if p is enclosed by (is inside of) self.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**p** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**encloses_point** : True, False or None'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Being on the border of self is considered False.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Returns the equation of an ellipse aligned with the x and y axes; when slope
    is given, the equation returned corresponds to an ellipse with a major axis having
    that slope.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x** : str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Label for the x-axis. Default value is ‘x’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**y** : str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Label for the y-axis. Default value is ‘y’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**_slope** : Expr, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The slope of the major axis. Ignored when ‘None’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**equation** : SymPy expression'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'A point on e1 satisfies eq1\. Let’s use one on the x-axis:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'When rotated the same as the rotated ellipse, about the center point of the
    ellipse, it will satisfy the rotated ellipse’s equation, too:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`arbitrary_point`](#sympy.geometry.ellipse.Ellipse.arbitrary_point "sympy.geometry.ellipse.Ellipse.arbitrary_point")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns parameterized point on ellipse
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R546](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://math.stackexchange.com/questions/108270/what-is-the-equation-of-an-ellipse-that-is-not-aligned-with-the-axis](https://math.stackexchange.com/questions/108270/what-is-the-equation-of-an-ellipse-that-is-not-aligned-with-the-axis)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[R547](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Ellipse#Shifted_ellipse](https://en.wikipedia.org/wiki/Ellipse#Shifted_ellipse)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: The equation of evolute of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x** : str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Label for the x-axis. Default value is ‘x’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**y** : str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Label for the y-axis. Default value is ‘y’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**equation** : SymPy expression'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: The foci of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**ValueError**'
  prefs: []
  type: TYPE_NORMAL
- en: When the major and minor axis cannot be determined.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The foci can only be calculated if the major/minor axes are known.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`focus_distance`](#sympy.geometry.ellipse.Ellipse.focus_distance "sympy.geometry.ellipse.Ellipse.focus_distance")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns the distance between focus and center
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: The focal distance of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: The distance between the center and one focus.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**focus_distance** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`foci`](#sympy.geometry.ellipse.Ellipse.foci "sympy.geometry.ellipse.Ellipse.foci")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: The horizontal radius of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**hradius** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`vradius`](#sympy.geometry.ellipse.Ellipse.vradius "sympy.geometry.ellipse.Ellipse.vradius"),
    [`major`](#sympy.geometry.ellipse.Ellipse.major "sympy.geometry.ellipse.Ellipse.major"),
    [`minor`](#sympy.geometry.ellipse.Ellipse.minor "sympy.geometry.ellipse.Ellipse.minor")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: The intersection of this ellipse and another geometrical entity \(o\).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**o** : GeometryEntity'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**intersection** : list of GeometryEntity objects'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Currently supports intersections with Point, Line, Segment, Ray, Circle and
    Ellipse types.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.entity.GeometryEntity`](entities.html#sympy.geometry.entity.GeometryEntity
    "sympy.geometry.entity.GeometryEntity")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Is \(o\) tangent to the ellipse?
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**o** : GeometryEntity'
  prefs: []
  type: TYPE_NORMAL
- en: An Ellipse, LinearEntity or Polygon
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'is_tangent: boolean'
  prefs: []
  type: TYPE_NORMAL
- en: True if o is tangent to the ellipse, False otherwise.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: When the wrong type of argument is supplied.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`tangent_lines`](#sympy.geometry.ellipse.Ellipse.tangent_lines "sympy.geometry.ellipse.Ellipse.tangent_lines")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Longer axis of the ellipse (if it can be determined) else hradius.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**major** : number or expression'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`hradius`](#sympy.geometry.ellipse.Ellipse.hradius "sympy.geometry.ellipse.Ellipse.hradius"),
    [`vradius`](#sympy.geometry.ellipse.Ellipse.vradius "sympy.geometry.ellipse.Ellipse.vradius"),
    [`minor`](#sympy.geometry.ellipse.Ellipse.minor "sympy.geometry.ellipse.Ellipse.minor")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Shorter axis of the ellipse (if it can be determined) else vradius.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**minor** : number or expression'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`hradius`](#sympy.geometry.ellipse.Ellipse.hradius "sympy.geometry.ellipse.Ellipse.hradius"),
    [`vradius`](#sympy.geometry.ellipse.Ellipse.vradius "sympy.geometry.ellipse.Ellipse.vradius"),
    [`major`](#sympy.geometry.ellipse.Ellipse.major "sympy.geometry.ellipse.Ellipse.major")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Normal lines between \(p\) and the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**p** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**normal_lines** : list with 1, 2 or 4 Lines'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Off-axis points require the solution of a quartic equation. This often leads
    to very large expressions that may be of little practical use. An approximate
    solution of \(prec\) digits can be obtained by passing in the desired value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Whereas the above solution has an operation count of 12, the exact solution
    has an operation count of 2020.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: The periapsis of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: The shortest distance between the focus and the contour.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**periapsis** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`apoapsis`](#sympy.geometry.ellipse.Ellipse.apoapsis "sympy.geometry.ellipse.Ellipse.apoapsis")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns greatest distance between focus and contour
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: The plot interval for the default geometric plot of the Ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**parameter** : str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Default value is ‘t’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**plot_interval** : list'
  prefs: []
  type: TYPE_NORMAL
- en: '[parameter, lower_bound, upper_bound]'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Returns the polar second moment of area of an Ellipse
  prefs: []
  type: TYPE_NORMAL
- en: It is a constituent of the second moment of area, linked through the perpendicular
    axis theorem. While the planar second moment of area describes an object’s resistance
    to deflection (bending) when subjected to a force applied to a plane parallel
    to the central axis, the polar second moment of area describes an object’s resistance
    to deflection when subjected to a moment applied in a plane perpendicular to the
    object’s central axis (i.e. parallel to the cross-section)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R548](#id4)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Polar_moment_of_inertia](https://en.wikipedia.org/wiki/Polar_moment_of_inertia)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: A random point on the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**point** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'When creating a random point, one may simply replace the parameter with a random
    number. When doing so, however, the random number should be made a Rational or
    else the point may not test as being in the ellipse:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`arbitrary_point`](#sympy.geometry.ellipse.Ellipse.arbitrary_point "sympy.geometry.ellipse.Ellipse.arbitrary_point")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns parameterized point on ellipse
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: Override GeometryEntity.reflect since the radius is not a GeometryEntity.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Until the general ellipse (with no axis parallel to the x-axis) is supported
    a NotImplemented error is raised and the equation whose zeros define the rotated
    ellipse is given.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: Rotate `angle` radians counterclockwise about Point `pt`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: since the general ellipse is not supported, only rotations that are integer
    multiples of pi/2 are allowed.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: Override GeometryEntity.scale since it is the major and minor axes which must
    be scaled and they are not GeometryEntities.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: Returns the second moment and product moment area of an ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**point** : Point, two-tuple of sympifiable objects, or None(default=None)'
  prefs: []
  type: TYPE_NORMAL
- en: point is the point about which second moment of area is to be found. If “point=None”
    it will be calculated about the axis passing through the centroid of the ellipse.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**I_xx, I_yy, I_xy** : number or SymPy expression'
  prefs: []
  type: TYPE_NORMAL
- en: I_xx, I_yy are second moment of area of an ellise. I_xy is product moment of
    area of an ellipse.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R549](#id5)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/List_of_second_moments_of_area](https://en.wikipedia.org/wiki/List_of_second_moments_of_area)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: Returns a tuple with the section modulus of an ellipse
  prefs: []
  type: TYPE_NORMAL
- en: Section modulus is a geometric property of an ellipse defined as the ratio of
    second moment of area to the distance of the extreme end of the ellipse from the
    centroidal axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**point** : Point, two-tuple of sympifyable objects, or None(default=None)'
  prefs: []
  type: TYPE_NORMAL
- en: point is the point at which section modulus is to be found. If “point=None”
    section modulus will be calculated for the point farthest from the centroidal
    axis of the ellipse.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'S_x, S_y: numbers or SymPy expressions'
  prefs: []
  type: TYPE_NORMAL
- en: S_x is the section modulus with respect to the x-axis S_y is the section modulus
    with respect to the y-axis A negative sign indicates that the section modulus
    is determined for a point below the centroidal axis.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R550](#id6)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Section_modulus](https://en.wikipedia.org/wiki/Section_modulus)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: Calculates the semi-latus rectum of the Ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: Semi-latus rectum is defined as one half of the chord through a focus parallel
    to the conic section directrix of a conic section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**semilatus_rectum** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`apoapsis`](#sympy.geometry.ellipse.Ellipse.apoapsis "sympy.geometry.ellipse.Ellipse.apoapsis")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns greatest distance between focus and contour
  prefs: []
  type: TYPE_NORMAL
- en: '[`periapsis`](#sympy.geometry.ellipse.Ellipse.periapsis "sympy.geometry.ellipse.Ellipse.periapsis")'
  prefs: []
  type: TYPE_NORMAL
- en: The shortest distance between the focus and the contour
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R551](#id7)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://mathworld.wolfram.com/SemilatusRectum.html](https://mathworld.wolfram.com/SemilatusRectum.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[R552](#id8)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Ellipse#Semi-latus_rectum](https://en.wikipedia.org/wiki/Ellipse#Semi-latus_rectum)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: Tangent lines between \(p\) and the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: If \(p\) is on the ellipse, returns the tangent line through point \(p\). Otherwise,
    returns the tangent line(s) from \(p\) to the ellipse, or None if no tangent line
    is possible (e.g., \(p\) inside ellipse).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**p** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tangent_lines** : list with 1 or 2 Lines'
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: Can only find tangent lines for a point, \(p\), on the ellipse.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.Line`](lines.html#sympy.geometry.line.Line "sympy.geometry.line.Line")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: The vertical radius of the ellipse.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**vradius** : number'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`hradius`](#sympy.geometry.ellipse.Ellipse.hradius "sympy.geometry.ellipse.Ellipse.hradius"),
    [`major`](#sympy.geometry.ellipse.Ellipse.major "sympy.geometry.ellipse.Ellipse.major"),
    [`minor`](#sympy.geometry.ellipse.Ellipse.minor "sympy.geometry.ellipse.Ellipse.minor")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: A circle in space.
  prefs: []
  type: TYPE_NORMAL
- en: Constructed simply from a center and a radius, from three non-collinear points,
    or the equation of a circle.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**center** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: '**radius** : number or SymPy expression'
  prefs: []
  type: TYPE_NORMAL
- en: '**points** : sequence of three Points'
  prefs: []
  type: TYPE_NORMAL
- en: '**equation** : equation of a circle'
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**GeometryError**'
  prefs: []
  type: TYPE_NORMAL
- en: When the given equation is not that of a circle. When trying to construct circle
    from incorrect parameters.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: 'A circle constructed from a center and radius:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: 'A circle constructed from three points:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: 'A circle can be constructed from an equation in the form \(a*x**2 + by**2 +
    gx + hy + c = 0\), too:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'If the variables corresponding to x and y are named something else, their name
    or symbol can be supplied:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Ellipse`](#sympy.geometry.ellipse.Ellipse "sympy.geometry.ellipse.Ellipse"),
    [`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  prefs: []
  type: TYPE_NORMAL
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| radius (synonymous with hradius, vradius, major and minor) |  |'
  prefs: []
  type: TYPE_TB
- en: '| circumference |  |'
  prefs: []
  type: TYPE_TB
- en: '| equation |  |'
  prefs: []
  type: TYPE_TB
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: The circumference of the circle.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**circumference** : number or SymPy expression'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: The equation of the circle.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x** : str or Symbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Default value is ‘x’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**y** : str or Symbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Default value is ‘y’.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**equation** : SymPy expression'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: The intersection of this circle with another geometrical entity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**o** : GeometryEntity'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**intersection** : list of GeometryEntities'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: The radius of the circle.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**radius** : number or SymPy expression'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Ellipse.major`](#sympy.geometry.ellipse.Ellipse.major "sympy.geometry.ellipse.Ellipse.major"),
    [`Ellipse.minor`](#sympy.geometry.ellipse.Ellipse.minor "sympy.geometry.ellipse.Ellipse.minor"),
    [`Ellipse.hradius`](#sympy.geometry.ellipse.Ellipse.hradius "sympy.geometry.ellipse.Ellipse.hradius"),
    [`Ellipse.vradius`](#sympy.geometry.ellipse.Ellipse.vradius "sympy.geometry.ellipse.Ellipse.vradius")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: Override GeometryEntity.reflect since the radius is not a GeometryEntity.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: Override GeometryEntity.scale since the radius is not a GeometryEntity.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: This Ellipse property is an alias for the Circle’s radius.
  prefs: []
  type: TYPE_NORMAL
- en: Whereas hradius, major and minor can use Ellipse’s conventions, the vradius
    does not exist for a circle. It is always a positive value in order that the Circle,
    like Polygons, will have an area that can be positive or negative as determined
    by the sign of the hradius.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
