["```py\nscipy.misc.electrocardiogram()\n```", "```py\n>>> from scipy.misc import electrocardiogram\n>>> ecg = electrocardiogram()\n>>> ecg\narray([-0.245, -0.215, -0.185, ..., -0.405, -0.395, -0.385])\n>>> ecg.shape, ecg.mean(), ecg.std()\n((108000,), -0.16510875, 0.5992473991177294) \n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> fs = 360\n>>> time = np.arange(ecg.size) / fs\n>>> plt.plot(time, ecg)\n>>> plt.xlabel(\"time in s\")\n>>> plt.ylabel(\"ECG in mV\")\n>>> plt.xlim(9, 10.2)\n>>> plt.ylim(-1, 1.5)\n>>> plt.show() \n```", "```py\n>>> plt.plot(time, ecg)\n>>> plt.xlabel(\"time in s\")\n>>> plt.ylabel(\"ECG in mV\")\n>>> plt.xlim(46.5, 50)\n>>> plt.ylim(-2, 1.5)\n>>> plt.show() \n```", "```py\n>>> plt.plot(time, ecg)\n>>> plt.xlabel(\"time in s\")\n>>> plt.ylabel(\"ECG in mV\")\n>>> plt.xlim(207, 215)\n>>> plt.ylim(-2, 3.5)\n>>> plt.show() \n```", "```py\n>>> from scipy.signal import welch\n>>> f, Pxx = welch(ecg, fs=fs, nperseg=2048, scaling=\"spectrum\")\n>>> plt.semilogy(f, Pxx)\n>>> plt.xlabel(\"Frequency in Hz\")\n>>> plt.ylabel(\"Power spectrum of the ECG in mV**2\")\n>>> plt.xlim(f[[0, -1]])\n>>> plt.show() \n```"]