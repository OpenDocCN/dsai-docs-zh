["```py\nclass scipy.interpolate.RegularGridInterpolator(points, values, method='linear', bounds_error=True, fill_value=nan)\n```", "```py\n>>> from scipy.interpolate import RegularGridInterpolator\n>>> import numpy as np\n>>> def f(x, y, z):\n...     return 2 * x**3 + 3 * y**2 - z\n>>> x = np.linspace(1, 4, 11)\n>>> y = np.linspace(4, 7, 22)\n>>> z = np.linspace(7, 9, 33)\n>>> xg, yg ,zg = np.meshgrid(x, y, z, indexing='ij', sparse=True)\n>>> data = f(xg, yg, zg) \n```", "```py\n>>> interp = RegularGridInterpolator((x, y, z), data) \n```", "```py\n>>> pts = np.array([[2.1, 6.2, 8.3],\n...                 [3.3, 5.2, 7.1]])\n>>> interp(pts)\narray([ 125.80469388,  146.30069388]) \n```", "```py\n>>> f(2.1, 6.2, 8.3), f(3.3, 5.2, 7.1)\n(125.54200000000002, 145.894) \n```", "```py\n>>> x, y = np.array([-2, 0, 4]), np.array([-2, 0, 2, 5])\n>>> def ff(x, y):\n...     return x**2 + y**2 \n```", "```py\n>>> xg, yg = np.meshgrid(x, y, indexing='ij')\n>>> data = ff(xg, yg)\n>>> interp = RegularGridInterpolator((x, y), data,\n...                                  bounds_error=False, fill_value=None) \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> fig = plt.figure()\n>>> ax = fig.add_subplot(projection='3d')\n>>> ax.scatter(xg.ravel(), yg.ravel(), data.ravel(),\n...            s=60, c='k', label='data') \n```", "```py\n>>> xx = np.linspace(-4, 9, 31)\n>>> yy = np.linspace(-4, 9, 31)\n>>> X, Y = np.meshgrid(xx, yy, indexing='ij') \n```", "```py\n>>> # interpolator\n>>> ax.plot_wireframe(X, Y, interp((X, Y)), rstride=3, cstride=3,\n...                   alpha=0.4, color='m', label='linear interp') \n```", "```py\n>>> # ground truth\n>>> ax.plot_wireframe(X, Y, ff(X, Y), rstride=3, cstride=3,\n...                   alpha=0.4, label='ground truth')\n>>> plt.legend()\n>>> plt.show() \n```"]