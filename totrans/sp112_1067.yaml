- en: scipy.special.lambertw
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.lambertw.html#scipy.special.lambertw](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.lambertw.html#scipy.special.lambertw)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Lambert W function.
  prefs: []
  type: TYPE_NORMAL
- en: The Lambert W function *W(z)* is defined as the inverse function of `w * exp(w)`.
    In other words, the value of `W(z)` is such that `z = W(z) * exp(W(z))` for any
    complex number `z`.
  prefs: []
  type: TYPE_NORMAL
- en: The Lambert W function is a multivalued function with infinitely many branches.
    Each branch gives a separate solution of the equation `z = w exp(w)`. Here, the
    branches are indexed by the integer *k*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input argument.
  prefs: []
  type: TYPE_NORMAL
- en: '**k**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Branch index.
  prefs: []
  type: TYPE_NORMAL
- en: '**tol**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Evaluation tolerance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**w**array'
  prefs: []
  type: TYPE_NORMAL
- en: '*w* will have the same shape as *z*.'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`wrightomega`](scipy.special.wrightomega.html#scipy.special.wrightomega "scipy.special.wrightomega")'
  prefs: []
  type: TYPE_NORMAL
- en: the Wright Omega function
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'All branches are supported by [`lambertw`](#scipy.special.lambertw "scipy.special.lambertw"):'
  prefs: []
  type: TYPE_NORMAL
- en: '`lambertw(z)` gives the principal solution (branch 0)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`lambertw(z, k)` gives the solution on branch *k*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Lambert W function has two partially real branches: the principal branch
    (*k = 0*) is real for real `z > -1/e`, and the `k = -1` branch is real for `-1/e
    < z < 0`. All branches except `k = 0` have a logarithmic singularity at `z = 0`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Possible issues**'
  prefs: []
  type: TYPE_NORMAL
- en: The evaluation can become inaccurate very close to the branch point at `-1/e`.
    In some corner cases, [`lambertw`](#scipy.special.lambertw "scipy.special.lambertw")
    might currently fail to converge, or can end up on the wrong branch.
  prefs: []
  type: TYPE_NORMAL
- en: '**Algorithm**'
  prefs: []
  type: TYPE_NORMAL
- en: Halley’s iteration is used to invert `w * exp(w)`, using a first-order asymptotic
    approximation (O(log(w)) or *O(w)*) as the initial estimate.
  prefs: []
  type: TYPE_NORMAL
- en: The definition, implementation and choice of branches is based on [[2]](#rb679495db6a2-2).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Lambert_W_function](https://en.wikipedia.org/wiki/Lambert_W_function)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Corless et al, “On the Lambert W function”, Adv. Comp. Math. 5 (1996) 329-359.
    [https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'The Lambert W function is the inverse of `w exp(w)`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any branch gives a valid inverse:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Applications to equation-solving**'
  prefs: []
  type: TYPE_NORMAL
- en: The Lambert W function may be used to solve various kinds of equations. We give
    two examples here.
  prefs: []
  type: TYPE_NORMAL
- en: First, the function can be used to solve implicit equations of the form
  prefs: []
  type: TYPE_NORMAL
- en: \(x = a + b e^{c x}\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: for \(x\). We assume \(c\) is not zero. After a little algebra, the equation
    may be written
  prefs: []
  type: TYPE_NORMAL
- en: \(z e^z = -b c e^{a c}\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: where \(z = c (a - x)\). \(z\) may then be expressed using the Lambert W function
  prefs: []
  type: TYPE_NORMAL
- en: \(z = W(-b c e^{a c})\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: giving
  prefs: []
  type: TYPE_NORMAL
- en: \(x = a - W(-b c e^{a c})/c\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For example,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The solution to \(x = a + b e^{c x}\) is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify that it solves the equation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The Lambert W function may also be used find the value of the infinite power
    tower \(z^{z^{z^{\ldots}}}\):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
