- en: Multi Degree of Freedom Holonomic System
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多自由度完整约束系统
- en: Original text：[https://docs.sympy.org/latest/modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.html](https://docs.sympy.org/latest/modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.html](https://docs.sympy.org/latest/modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.html)
- en: 'In this example we demonstrate the use of the functionality provided in [`sympy.physics.mechanics`](../index.html#module-sympy.physics.mechanics
    "sympy.physics.mechanics") for deriving the equations of motion (EOM) of a holonomic
    system that includes both particles and rigid bodies with contributing forces
    and torques, some of which are specified forces and torques. The system is shown
    below:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们演示了[`sympy.physics.mechanics`](../index.html#module-sympy.physics.mechanics
    "sympy.physics.mechanics")提供的功能，用于推导包括粒子和刚体的完整约束系统的运动方程（EOM），其中包括贡献的力和扭矩，其中一些是指定的力和扭矩。系统如下图所示：
- en: '![../../../../_images/multidof-holonomic.png](../Images/e81fdb656d78e825ae6281edae83e759.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![../../../../_images/multidof-holonomic.png](../Images/e81fdb656d78e825ae6281edae83e759.png)'
- en: The system will be modeled using [`System`](../api/system.html#sympy.physics.mechanics.system.System
    "sympy.physics.mechanics.system.System"). First we need to create the [`dynamicsymbols()`](../../vector/api/functions.html#sympy.physics.vector.dynamicsymbols
    "sympy.physics.vector.dynamicsymbols") needed to describe the system as shown
    in the above diagram. In this case, the generalized coordinates \(q_1\) represent
    lateral distance of block from wall, \(q_2\) represents angle of the compound
    pendulum from vertical, \(q_3\) represents angle of the simple pendulum from the
    compound pendulum. The generalized speeds \(u_1\) represents lateral speed of
    block, \(u_2\) represents lateral speed of compound pendulum and \(u_3\) represents
    angular speed of C relative to B.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 系统将使用[`System`](../api/system.html#sympy.physics.mechanics.system.System "sympy.physics.mechanics.system.System")进行建模。首先，我们需要创建[`dynamicsymbols()`](../../vector/api/functions.html#sympy.physics.vector.dynamicsymbols
    "sympy.physics.vector.dynamicsymbols")来描述上述图中显示的系统。在这种情况下，广义坐标\(q_1\)表示块离墙的横向距离，\(q_2\)表示复合摆杆相对垂直的角度，\(q_3\)表示简单摆杆相对复合摆杆的角度。广义速度\(u_1\)表示块的横向速度，\(u_2\)表示复合摆杆的横向速度，\(u_3\)表示C相对于B的角速度。
- en: We also create some [`symbols()`](../../../core.html#sympy.core.symbol.symbols
    "sympy.core.symbol.symbols") to represent the length and mass of the pendulum,
    as well as gravity and others.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还创建一些[`symbols()`](../../../core.html#sympy.core.symbol.symbols "sympy.core.symbol.symbols")来表示摆杆的长度和质量，以及重力和其他因素。
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: With all symbols defined, we can now define the bodies and initialize our instance
    of [`System`](../api/system.html#sympy.physics.mechanics.system.System "sympy.physics.mechanics.system.System").
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 定义了所有符号后，我们现在可以定义各个物体，并初始化我们的[`System`](../api/system.html#sympy.physics.mechanics.system.System
    "sympy.physics.mechanics.system.System")实例。
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, we connect the bodies using joints to establish the kinematics. Note that
    we specify the intermediate frames for both particles, as particles do not have
    an associated frame.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用关节将物体连接起来以建立运动学。请注意，我们为两个粒子指定了中间框架，因为粒子本身没有相关联的框架。
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now we can apply loads (forces and torques) to the bodies, gravity acts on all
    bodies, a linear spring and damper act on block and wall, a rotational linear
    spring acts on C relative to B specified torque T acts on compound_pend and block,
    specified force F acts on block.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以对物体施加载荷（力和扭矩），重力作用于所有物体，线性弹簧和阻尼器作用于块和墙，旋转线性弹簧作用于C相对于B，指定的扭矩T作用于复合摆杆和块，指定的力F作用于块。
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: With the system setup, we can now form the equations of motion with [`KanesMethod`](../api/kane_lagrange.html#sympy.physics.mechanics.kane.KanesMethod
    "sympy.physics.mechanics.kane.KanesMethod") in the backend.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 系统设置完成后，我们现在可以在后台使用[`KanesMethod`](../api/kane_lagrange.html#sympy.physics.mechanics.kane.KanesMethod
    "sympy.physics.mechanics.kane.KanesMethod")来形成运动方程。
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
