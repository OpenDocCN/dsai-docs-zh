["```py\nIn [1]: ser = pd.Series([-1.5, 0.2, None], dtype=\"float32[pyarrow]\")\n\nIn [2]: ser\nOut[2]: \n0    -1.5\n1     0.2\n2    <NA>\ndtype: float[pyarrow]\n\nIn [3]: idx = pd.Index([True, None], dtype=\"bool[pyarrow]\")\n\nIn [4]: idx\nOut[4]: Index([True, <NA>], dtype='bool[pyarrow]')\n\nIn [5]: df = pd.DataFrame([[1, 2], [3, 4]], dtype=\"uint64[pyarrow]\")\n\nIn [6]: df\nOut[6]: \n 0  1\n0  1  2\n1  3  4 \n```", "```py\nIn [7]: import pyarrow as pa\n\nIn [8]: data = list(\"abc\")\n\nIn [9]: ser_sd = pd.Series(data, dtype=\"string[pyarrow]\")\n\nIn [10]: ser_ad = pd.Series(data, dtype=pd.ArrowDtype(pa.string()))\n\nIn [11]: ser_ad.dtype == ser_sd.dtype\nOut[11]: False\n\nIn [12]: ser_sd.str.contains(\"a\")\nOut[12]: \n0     True\n1    False\n2    False\ndtype: boolean\n\nIn [13]: ser_ad.str.contains(\"a\")\nOut[13]: \n0     True\n1    False\n2    False\ndtype: bool[pyarrow] \n```", "```py\nIn [14]: import pyarrow as pa\n\nIn [15]: list_str_type = pa.list_(pa.string())\n\nIn [16]: ser = pd.Series([[\"hello\"], [\"there\"]], dtype=pd.ArrowDtype(list_str_type))\n\nIn [17]: ser\nOut[17]: \n0    ['hello']\n1    ['there']\ndtype: list<item: string>[pyarrow] \n```", "```py\nIn [18]: from datetime import time\n\nIn [19]: idx = pd.Index([time(12, 30), None], dtype=pd.ArrowDtype(pa.time64(\"us\")))\n\nIn [20]: idx\nOut[20]: Index([12:30:00, <NA>], dtype='time64[us][pyarrow]') \n```", "```py\nIn [21]: from decimal import Decimal\n\nIn [22]: decimal_type = pd.ArrowDtype(pa.decimal128(3, scale=2))\n\nIn [23]: data = [[Decimal(\"3.19\"), None], [None, Decimal(\"-1.23\")]]\n\nIn [24]: df = pd.DataFrame(data, dtype=decimal_type)\n\nIn [25]: df\nOut[25]: \n 0      1\n0  3.19   <NA>\n1  <NA>  -1.23 \n```", "```py\nIn [26]: pa_array = pa.array(\n ....:    [{\"1\": \"2\"}, {\"10\": \"20\"}, None],\n ....:    type=pa.map_(pa.string(), pa.string()),\n ....: )\n ....: \n\nIn [27]: ser = pd.Series(pd.arrays.ArrowExtensionArray(pa_array))\n\nIn [28]: ser\nOut[28]: \n0      [('1', '2')]\n1    [('10', '20')]\n2              <NA>\ndtype: map<string, string>[pyarrow] \n```", "```py\nIn [29]: ser = pd.Series([1, 2, None], dtype=\"uint8[pyarrow]\")\n\nIn [30]: pa.array(ser)\nOut[30]: \n<pyarrow.lib.UInt8Array object at 0x7ff2a2968400>\n[\n 1,\n 2,\n null\n]\n\nIn [31]: idx = pd.Index(ser)\n\nIn [32]: pa.array(idx)\nOut[32]: \n<pyarrow.lib.UInt8Array object at 0x7ff2a2968460>\n[\n 1,\n 2,\n null\n] \n```", "```py\nIn [33]: table = pa.table([pa.array([1, 2, 3], type=pa.int64())], names=[\"a\"])\n\nIn [34]: df = table.to_pandas(types_mapper=pd.ArrowDtype)\n\nIn [35]: df\nOut[35]: \n a\n0  1\n1  2\n2  3\n\nIn [36]: df.dtypes\nOut[36]: \na    int64[pyarrow]\ndtype: object \n```", "```py\nIn [37]: import pyarrow as pa\n\nIn [38]: ser = pd.Series([-1.545, 0.211, None], dtype=\"float32[pyarrow]\")\n\nIn [39]: ser.mean()\nOut[39]: -0.6669999808073044\n\nIn [40]: ser + ser\nOut[40]: \n0    -3.09\n1    0.422\n2     <NA>\ndtype: float[pyarrow]\n\nIn [41]: ser > (ser + 1)\nOut[41]: \n0    False\n1    False\n2     <NA>\ndtype: bool[pyarrow]\n\nIn [42]: ser.dropna()\nOut[42]: \n0   -1.545\n1    0.211\ndtype: float[pyarrow]\n\nIn [43]: ser.isna()\nOut[43]: \n0    False\n1    False\n2     True\ndtype: bool\n\nIn [44]: ser.fillna(0)\nOut[44]: \n0   -1.545\n1    0.211\n2      0.0\ndtype: float[pyarrow] \n```", "```py\nIn [45]: ser_str = pd.Series([\"a\", \"b\", None], dtype=pd.ArrowDtype(pa.string()))\n\nIn [46]: ser_str.str.startswith(\"a\")\nOut[46]: \n0     True\n1    False\n2     <NA>\ndtype: bool[pyarrow] \n```", "```py\nIn [47]: from datetime import datetime\n\nIn [48]: pa_type = pd.ArrowDtype(pa.timestamp(\"ns\"))\n\nIn [49]: ser_dt = pd.Series([datetime(2022, 1, 1), None], dtype=pa_type)\n\nIn [50]: ser_dt.dt.strftime(\"%Y-%m\")\nOut[50]: \n0    2022-01\n1       <NA>\ndtype: string[pyarrow] \n```", "```py\nIn [51]: import io\n\nIn [52]: data = io.StringIO(\"\"\"a,b,c\n ....:   1,2.5,True\n ....:   3,4.5,False\n ....: \"\"\")\n ....: \n\nIn [53]: df = pd.read_csv(data, engine=\"pyarrow\")\n\nIn [54]: df\nOut[54]: \n a    b      c\n0  1  2.5   True\n1  3  4.5  False \n```", "```py\nIn [55]: import io\n\nIn [56]: data = io.StringIO(\"\"\"a,b,c,d,e,f,g,h,i\n ....:    1,2.5,True,a,,,,,\n ....:    3,4.5,False,b,6,7.5,True,a,\n ....: \"\"\")\n ....: \n\nIn [57]: df_pyarrow = pd.read_csv(data, dtype_backend=\"pyarrow\")\n\nIn [58]: df_pyarrow.dtypes\nOut[58]: \na     int64[pyarrow]\nb    double[pyarrow]\nc      bool[pyarrow]\nd    string[pyarrow]\ne     int64[pyarrow]\nf    double[pyarrow]\ng      bool[pyarrow]\nh    string[pyarrow]\ni      null[pyarrow]\ndtype: object \n```", "```py\nIn [1]: ser = pd.Series([-1.5, 0.2, None], dtype=\"float32[pyarrow]\")\n\nIn [2]: ser\nOut[2]: \n0    -1.5\n1     0.2\n2    <NA>\ndtype: float[pyarrow]\n\nIn [3]: idx = pd.Index([True, None], dtype=\"bool[pyarrow]\")\n\nIn [4]: idx\nOut[4]: Index([True, <NA>], dtype='bool[pyarrow]')\n\nIn [5]: df = pd.DataFrame([[1, 2], [3, 4]], dtype=\"uint64[pyarrow]\")\n\nIn [6]: df\nOut[6]: \n 0  1\n0  1  2\n1  3  4 \n```", "```py\nIn [7]: import pyarrow as pa\n\nIn [8]: data = list(\"abc\")\n\nIn [9]: ser_sd = pd.Series(data, dtype=\"string[pyarrow]\")\n\nIn [10]: ser_ad = pd.Series(data, dtype=pd.ArrowDtype(pa.string()))\n\nIn [11]: ser_ad.dtype == ser_sd.dtype\nOut[11]: False\n\nIn [12]: ser_sd.str.contains(\"a\")\nOut[12]: \n0     True\n1    False\n2    False\ndtype: boolean\n\nIn [13]: ser_ad.str.contains(\"a\")\nOut[13]: \n0     True\n1    False\n2    False\ndtype: bool[pyarrow] \n```", "```py\nIn [14]: import pyarrow as pa\n\nIn [15]: list_str_type = pa.list_(pa.string())\n\nIn [16]: ser = pd.Series([[\"hello\"], [\"there\"]], dtype=pd.ArrowDtype(list_str_type))\n\nIn [17]: ser\nOut[17]: \n0    ['hello']\n1    ['there']\ndtype: list<item: string>[pyarrow] \n```", "```py\nIn [18]: from datetime import time\n\nIn [19]: idx = pd.Index([time(12, 30), None], dtype=pd.ArrowDtype(pa.time64(\"us\")))\n\nIn [20]: idx\nOut[20]: Index([12:30:00, <NA>], dtype='time64[us][pyarrow]') \n```", "```py\nIn [21]: from decimal import Decimal\n\nIn [22]: decimal_type = pd.ArrowDtype(pa.decimal128(3, scale=2))\n\nIn [23]: data = [[Decimal(\"3.19\"), None], [None, Decimal(\"-1.23\")]]\n\nIn [24]: df = pd.DataFrame(data, dtype=decimal_type)\n\nIn [25]: df\nOut[25]: \n 0      1\n0  3.19   <NA>\n1  <NA>  -1.23 \n```", "```py\nIn [26]: pa_array = pa.array(\n ....:    [{\"1\": \"2\"}, {\"10\": \"20\"}, None],\n ....:    type=pa.map_(pa.string(), pa.string()),\n ....: )\n ....: \n\nIn [27]: ser = pd.Series(pd.arrays.ArrowExtensionArray(pa_array))\n\nIn [28]: ser\nOut[28]: \n0      [('1', '2')]\n1    [('10', '20')]\n2              <NA>\ndtype: map<string, string>[pyarrow] \n```", "```py\nIn [29]: ser = pd.Series([1, 2, None], dtype=\"uint8[pyarrow]\")\n\nIn [30]: pa.array(ser)\nOut[30]: \n<pyarrow.lib.UInt8Array object at 0x7ff2a2968400>\n[\n 1,\n 2,\n null\n]\n\nIn [31]: idx = pd.Index(ser)\n\nIn [32]: pa.array(idx)\nOut[32]: \n<pyarrow.lib.UInt8Array object at 0x7ff2a2968460>\n[\n 1,\n 2,\n null\n] \n```", "```py\nIn [33]: table = pa.table([pa.array([1, 2, 3], type=pa.int64())], names=[\"a\"])\n\nIn [34]: df = table.to_pandas(types_mapper=pd.ArrowDtype)\n\nIn [35]: df\nOut[35]: \n a\n0  1\n1  2\n2  3\n\nIn [36]: df.dtypes\nOut[36]: \na    int64[pyarrow]\ndtype: object \n```", "```py\nIn [37]: import pyarrow as pa\n\nIn [38]: ser = pd.Series([-1.545, 0.211, None], dtype=\"float32[pyarrow]\")\n\nIn [39]: ser.mean()\nOut[39]: -0.6669999808073044\n\nIn [40]: ser + ser\nOut[40]: \n0    -3.09\n1    0.422\n2     <NA>\ndtype: float[pyarrow]\n\nIn [41]: ser > (ser + 1)\nOut[41]: \n0    False\n1    False\n2     <NA>\ndtype: bool[pyarrow]\n\nIn [42]: ser.dropna()\nOut[42]: \n0   -1.545\n1    0.211\ndtype: float[pyarrow]\n\nIn [43]: ser.isna()\nOut[43]: \n0    False\n1    False\n2     True\ndtype: bool\n\nIn [44]: ser.fillna(0)\nOut[44]: \n0   -1.545\n1    0.211\n2      0.0\ndtype: float[pyarrow] \n```", "```py\nIn [45]: ser_str = pd.Series([\"a\", \"b\", None], dtype=pd.ArrowDtype(pa.string()))\n\nIn [46]: ser_str.str.startswith(\"a\")\nOut[46]: \n0     True\n1    False\n2     <NA>\ndtype: bool[pyarrow] \n```", "```py\nIn [47]: from datetime import datetime\n\nIn [48]: pa_type = pd.ArrowDtype(pa.timestamp(\"ns\"))\n\nIn [49]: ser_dt = pd.Series([datetime(2022, 1, 1), None], dtype=pa_type)\n\nIn [50]: ser_dt.dt.strftime(\"%Y-%m\")\nOut[50]: \n0    2022-01\n1       <NA>\ndtype: string[pyarrow] \n```", "```py\nIn [51]: import io\n\nIn [52]: data = io.StringIO(\"\"\"a,b,c\n ....:   1,2.5,True\n ....:   3,4.5,False\n ....: \"\"\")\n ....: \n\nIn [53]: df = pd.read_csv(data, engine=\"pyarrow\")\n\nIn [54]: df\nOut[54]: \n a    b      c\n0  1  2.5   True\n1  3  4.5  False \n```", "```py\nIn [55]: import io\n\nIn [56]: data = io.StringIO(\"\"\"a,b,c,d,e,f,g,h,i\n ....:    1,2.5,True,a,,,,,\n ....:    3,4.5,False,b,6,7.5,True,a,\n ....: \"\"\")\n ....: \n\nIn [57]: df_pyarrow = pd.read_csv(data, dtype_backend=\"pyarrow\")\n\nIn [58]: df_pyarrow.dtypes\nOut[58]: \na     int64[pyarrow]\nb    double[pyarrow]\nc      bool[pyarrow]\nd    string[pyarrow]\ne     int64[pyarrow]\nf    double[pyarrow]\ng      bool[pyarrow]\nh    string[pyarrow]\ni      null[pyarrow]\ndtype: object \n```"]