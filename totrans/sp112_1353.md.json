["```py\nscipy.stats.boxcox(x, lmbda=None, alpha=None, optimizer=None)\n```", "```py\ny = (x**lmbda - 1) / lmbda,  for lmbda != 0\n    log(x),                  for lmbda = 0 \n```", "```py\n>>> from scipy import stats\n>>> import matplotlib.pyplot as plt \n```", "```py\n>>> fig = plt.figure()\n>>> ax1 = fig.add_subplot(211)\n>>> x = stats.loggamma.rvs(5, size=500) + 5\n>>> prob = stats.probplot(x, dist=stats.norm, plot=ax1)\n>>> ax1.set_xlabel('')\n>>> ax1.set_title('Probplot against normal distribution') \n```", "```py\n>>> ax2 = fig.add_subplot(212)\n>>> xt, _ = stats.boxcox(x)\n>>> prob = stats.probplot(xt, dist=stats.norm, plot=ax2)\n>>> ax2.set_title('Probplot after Box-Cox transformation') \n```", "```py\n>>> plt.show() \n```"]