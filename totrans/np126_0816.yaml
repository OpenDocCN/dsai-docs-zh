- en: numpy.arccos
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.arccos.html](https://numpy.org/doc/1.26/reference/generated/numpy.arccos.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Trigonometric inverse cosine, element-wise.
  prefs: []
  type: TYPE_NORMAL
- en: The inverse of [`cos`](numpy.cos.html#numpy.cos "numpy.cos") so that, if `y
    = cos(x)`, then `x = arccos(y)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: '*x*-coordinate on the unit circle. For real arguments, the domain is [-1, 1].'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  prefs: []
  type: TYPE_NORMAL
- en: '**where**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**angle**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The angle of the ray intersecting the unit circle at the given *x*-coordinate
    in radians [0, pi]. This is a scalar if *x* is a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`cos`](numpy.cos.html#numpy.cos "numpy.cos"), [`arctan`](numpy.arctan.html#numpy.arctan
    "numpy.arctan"), [`arcsin`](numpy.arcsin.html#numpy.arcsin "numpy.arcsin"), [`emath.arccos`](numpy.emath.arccos.html#numpy.emath.arccos
    "numpy.emath.arccos")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '[`arccos`](#numpy.arccos "numpy.arccos") is a multivalued function: for each
    *x* there are infinitely many numbers *z* such that `cos(z) = x`. The convention
    is to return the angle *z* whose real part lies in *[0, pi]*.'
  prefs: []
  type: TYPE_NORMAL
- en: For real-valued input data types, [`arccos`](#numpy.arccos "numpy.arccos") always
    returns real output. For each value that cannot be expressed as a real number
    or infinity, it yields `nan` and sets the *invalid* floating point error flag.
  prefs: []
  type: TYPE_NORMAL
- en: For complex-valued input, [`arccos`](#numpy.arccos "numpy.arccos") is a complex
    analytic function that has branch cuts `[-inf, -1]` and *[1, inf]* and is continuous
    from above on the former and from below on the latter.
  prefs: []
  type: TYPE_NORMAL
- en: The inverse [`cos`](numpy.cos.html#numpy.cos "numpy.cos") is also known as *acos*
    or cos^-1.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: M. Abramowitz and I.A. Stegun, “Handbook of Mathematical Functions”, 10th printing,
    1964, pp. 79. [https://personal.math.ubc.ca/~cbm/aands/page_79.htm](https://personal.math.ubc.ca/~cbm/aands/page_79.htm)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'We expect the arccos of 1 to be 0, and of -1 to be pi:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Plot arccos:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/numpy-arccos-1.png](../Images/859155076b55beb2241f4535bcf8dc3a.png)'
  prefs: []
  type: TYPE_IMG
