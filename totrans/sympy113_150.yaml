- en: Dimensions and dimension systems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/units/dimensions.html](https://docs.sympy.org/latest/modules/physics/units/dimensions.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Definition of physical dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: Unit systems will be constructed on top of these dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Most of the examples in the doc use MKS system and are presented from the computer
    point of view: from a human point, adding length to time is not legal in MKS but
    it is in natural system; for a computer in natural system there is no time dimension
    (but a velocity dimension instead) - in the basis - so the question of adding
    time to length has no meaning.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This class represent the dimension of a physical quantities.
  prefs: []
  type: TYPE_NORMAL
- en: The `Dimension` constructor takes as parameters a name and an optional symbol.
  prefs: []
  type: TYPE_NORMAL
- en: For example, in classical mechanics we know that time is different from temperature
    and dimensions make this difference (but they do not provide any measure of these
    quantites.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Dimensions can be composed using multiplication, division and exponentiation
    (by a number) to give new dimensions. Addition and subtraction is defined only
    when the two objects are the same dimension.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'It is possible to use a dimension system object to get the dimensionsal dependencies
    of a dimension, for example the dimension system used by the SI units convention
    can be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Check if the dimension object has only integer powers.
  prefs: []
  type: TYPE_NORMAL
- en: All the dimension powers should be integers, but rational powers may appear
    in intermediate steps. This method may be used to check that the final result
    is well-defined.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: DimensionSystem represents a coherent set of dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The constructor takes three parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: base dimensions;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'derived dimensions: these are defined in terms of the base dimensions (for
    example velocity is defined from the division of length by time);'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'dependency of dimensions: how the derived dimensions depend on the base dimensions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Optionally either the `derived_dims` or the `dimensional_dependencies` may be
    omitted.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Useless method, kept for compatibility with previous versions.
  prefs: []
  type: TYPE_NORMAL
- en: DO NOT USE.
  prefs: []
  type: TYPE_NORMAL
- en: Return the canonical transformation matrix from the canonical to the base dimension
    basis.
  prefs: []
  type: TYPE_NORMAL
- en: It is the inverse of the matrix computed with inv_can_transf_matrix().
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Useless method, kept for compatibility with previous versions.
  prefs: []
  type: TYPE_NORMAL
- en: DO NOT USE.
  prefs: []
  type: TYPE_NORMAL
- en: Give the dimension of the system.
  prefs: []
  type: TYPE_NORMAL
- en: That is return the number of dimensions forming the basis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Useless method, kept for compatibility with previous versions.
  prefs: []
  type: TYPE_NORMAL
- en: DO NOT USE.
  prefs: []
  type: TYPE_NORMAL
- en: Dimensional representation in terms of the canonical base dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Useless method, kept for compatibility with previous versions.
  prefs: []
  type: TYPE_NORMAL
- en: DO NOT USE.
  prefs: []
  type: TYPE_NORMAL
- en: Vector representation in terms of the base dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Useless method, kept for compatibility with previous versions.
  prefs: []
  type: TYPE_NORMAL
- en: DO NOT USE.
  prefs: []
  type: TYPE_NORMAL
- en: Compute the inverse transformation matrix from the base to the canonical dimension
    basis.
  prefs: []
  type: TYPE_NORMAL
- en: It corresponds to the matrix where columns are the vector of base dimensions
    in canonical basis.
  prefs: []
  type: TYPE_NORMAL
- en: This matrix will almost never be used because dimensions are always defined
    with respect to the canonical basis, so no work has to be done to get them in
    this basis. Nonetheless if this matrix is not square (or not invertible) it means
    that we have chosen a bad basis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Useless method, kept for compatibility with previous versions.
  prefs: []
  type: TYPE_NORMAL
- en: DO NOT USE.
  prefs: []
  type: TYPE_NORMAL
- en: Check if the system is well defined.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Check if the dimension object really has a dimension.
  prefs: []
  type: TYPE_NORMAL
- en: A dimension should have at least one component with non-zero power.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Useless method, kept for compatibility with previous versions.
  prefs: []
  type: TYPE_NORMAL
- en: DO NOT USE.
  prefs: []
  type: TYPE_NORMAL
- en: List all canonical dimension names.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Give the string expression of a dimension in term of the basis symbols.
  prefs: []
  type: TYPE_NORMAL
