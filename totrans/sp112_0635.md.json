["```py\nscipy.signal.chirp(t, f0, t1, f1, method='linear', phi=0, vertex_zero=True)\n```", "```py\n>>> import numpy as np\n>>> from scipy.signal import chirp, spectrogram\n>>> import matplotlib.pyplot as plt \n```", "```py\n>>> t = np.linspace(0, 10, 1500)\n>>> w = chirp(t, f0=6, f1=1, t1=10, method='linear')\n>>> plt.plot(t, w)\n>>> plt.title(\"Linear Chirp, f(0)=6, f(10)=1\")\n>>> plt.xlabel('t (sec)')\n>>> plt.show() \n```", "```py\n>>> fs = 7200\n>>> T = 4\n>>> t = np.arange(0, int(T*fs)) / fs \n```", "```py\n>>> def plot_spectrogram(title, w, fs):\n...     ff, tt, Sxx = spectrogram(w, fs=fs, nperseg=256, nfft=576)\n...     fig, ax = plt.subplots()\n...     ax.pcolormesh(tt, ff[:145], Sxx[:145], cmap='gray_r',\n...                   shading='gouraud')\n...     ax.set_title(title)\n...     ax.set_xlabel('t (sec)')\n...     ax.set_ylabel('Frequency (Hz)')\n...     ax.grid(True)\n... \n```", "```py\n>>> w = chirp(t, f0=1500, f1=250, t1=T, method='quadratic')\n>>> plot_spectrogram(f'Quadratic Chirp, f(0)=1500, f({T})=250', w, fs)\n>>> plt.show() \n```", "```py\n>>> w = chirp(t, f0=1500, f1=250, t1=T, method='quadratic',\n...           vertex_zero=False)\n>>> plot_spectrogram(f'Quadratic Chirp, f(0)=1500, f({T})=250\\n' +\n...                  '(vertex_zero=False)', w, fs)\n>>> plt.show() \n```", "```py\n>>> w = chirp(t, f0=1500, f1=250, t1=T, method='logarithmic')\n>>> plot_spectrogram(f'Logarithmic Chirp, f(0)=1500, f({T})=250', w, fs)\n>>> plt.show() \n```", "```py\n>>> w = chirp(t, f0=1500, f1=250, t1=T, method='hyperbolic')\n>>> plot_spectrogram(f'Hyperbolic Chirp, f(0)=1500, f({T})=250', w, fs)\n>>> plt.show() \n```"]