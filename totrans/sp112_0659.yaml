- en: scipy.signal.welch
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.welch
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.welch.html#scipy.signal.welch](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.welch.html#scipy.signal.welch)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.welch.html#scipy.signal.welch](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.welch.html#scipy.signal.welch)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Estimate power spectral density using Welch’s method.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用韦尔奇方法估计功率谱密度。
- en: Welch’s method [[1]](#r34b375daf612-1) computes an estimate of the power spectral
    density by dividing the data into overlapping segments, computing a modified periodogram
    for each segment and averaging the periodograms.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 韦尔奇方法[[1]](#r34b375daf612-1)通过将数据分成重叠的段，计算每个段的修改周期图，并平均周期图来计算功率谱密度的估计。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: Time series of measurement values
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 测量值的时间序列
- en: '**fs**float, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**fs**浮点数，可选项'
- en: Sampling frequency of the *x* time series. Defaults to 1.0.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*x*时间序列的采样频率。默认为1.0。'
- en: '**window**str or tuple or array_like, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**window**字符串或元组或array_like，可选项'
- en: Desired window to use. If *window* is a string or tuple, it is passed to [`get_window`](scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window") to generate the window values, which are DFT-even by
    default. See [`get_window`](scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window") for a list of windows and required parameters. If *window*
    is array_like it will be used directly as the window and its length must be nperseg.
    Defaults to a Hann window.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所用的期望窗口。如果*window*是字符串或元组，则传递给[`get_window`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window")以生成窗口值，默认情况下为DFT-even。有关窗口和所需参数的列表，请参见[`get_window`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window")。如果*window*是array_like，则直接用作窗口，其长度必须为nperseg。默认为汉宁窗口。
- en: '**nperseg**int, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**nperseg**整数，可选项'
- en: Length of each segment. Defaults to None, but if window is str or tuple, is
    set to 256, and if window is array_like, is set to the length of the window.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 每个段的长度。默认为None，但如果窗口是str或tuple，则设置为256，如果窗口是array_like，则设置为窗口的长度。
- en: '**noverlap**int, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**noverlap**整数，可选项'
- en: Number of points to overlap between segments. If *None*, `noverlap = nperseg
    // 2`. Defaults to *None*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 点数，用于段之间的重叠。如果为*None*，则`noverlap = nperseg // 2`。默认为*None*。
- en: '**nfft**int, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**nfft**整数，可选项'
- en: Length of the FFT used, if a zero padded FFT is desired. If *None*, the FFT
    length is *nperseg*. Defaults to *None*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要零填充的FFT，则使用的FFT长度。如果为*None*，FFT长度为*nperseg*。默认为*None*。
- en: '**detrend**str or function or *False*, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**detrend**字符串或函数或*False*，可选项'
- en: Specifies how to detrend each segment. If [`detrend`](scipy.signal.detrend.html#scipy.signal.detrend
    "scipy.signal.detrend") is a string, it is passed as the *type* argument to the
    [`detrend`](scipy.signal.detrend.html#scipy.signal.detrend "scipy.signal.detrend")
    function. If it is a function, it takes a segment and returns a detrended segment.
    If [`detrend`](scipy.signal.detrend.html#scipy.signal.detrend "scipy.signal.detrend")
    is *False*, no detrending is done. Defaults to ‘constant’.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 指定如何去趋势化每个段。如果[`detrend`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.detrend.html#scipy.signal.detrend
    "scipy.signal.detrend")是一个字符串，则传递为[`detrend`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.detrend.html#scipy.signal.detrend
    "scipy.signal.detrend")函数的*type*参数。如果它是一个函数，则取一个段并返回一个去趋势化的段。如果[`detrend`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.detrend.html#scipy.signal.detrend
    "scipy.signal.detrend")是*False*，则不进行去趋势化。默认为'constant'。
- en: '**return_onesided**bool, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**return_onesided**布尔值，可选项'
- en: If *True*, return a one-sided spectrum for real data. If *False* return a two-sided
    spectrum. Defaults to *True*, but for complex data, a two-sided spectrum is always
    returned.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为*True*，则针对实数数据返回单侧频谱。如果为*False*，则返回双侧频谱。默认为*True*，但对于复杂数据，始终返回双侧频谱。
- en: '**scaling**{ ‘density’, ‘spectrum’ }, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**scaling**{ ‘密度’, ‘频谱’ }，可选项'
- en: Selects between computing the power spectral density (‘density’) where *Pxx*
    has units of V**2/Hz and computing the power spectrum (‘spectrum’) where *Pxx*
    has units of V**2, if *x* is measured in V and *fs* is measured in Hz. Defaults
    to ‘density’
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 选择计算功率谱密度（‘密度’）还是计算功率谱（‘频谱’），其中*Pxx*的单位为V**2/Hz，如果*x*以V测量，*fs*以Hz测量。默认为‘密度’
- en: '**axis**int, optional'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**整数，可选项'
- en: Axis along which the periodogram is computed; the default is over the last axis
    (i.e. `axis=-1`).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 计算周期图的轴；默认为最后一个轴（即`axis=-1`）。
- en: '**average**{ ‘mean’, ‘median’ }, optional'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**average**{ ‘mean’, ‘median’ }，可选项'
- en: Method to use when averaging periodograms. Defaults to ‘mean’.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在平均周期图时使用的方法。默认为‘mean’。
- en: New in version 1.2.0.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本1.2.0中引入。
- en: 'Returns:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**f**ndarray'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**ndarray'
- en: Array of sample frequencies.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 采样频率阵列。
- en: '**Pxx**ndarray'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**Pxx**ndarray'
- en: Power spectral density or power spectrum of x.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Power spectral density or power spectrum of x.
- en: See also
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: See also
- en: '[`periodogram`](scipy.signal.periodogram.html#scipy.signal.periodogram "scipy.signal.periodogram")'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`periodogram`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.periodogram.html#scipy.signal.periodogram
    "scipy.signal.periodogram")'
- en: Simple, optionally modified periodogram
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Simple, optionally modified periodogram
- en: '[`lombscargle`](scipy.signal.lombscargle.html#scipy.signal.lombscargle "scipy.signal.lombscargle")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`lombscargle`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.lombscargle.html#scipy.signal.lombscargle
    "scipy.signal.lombscargle")'
- en: Lomb-Scargle periodogram for unevenly sampled data
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Lomb-Scargle periodogram for unevenly sampled data
- en: Notes
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Notes
- en: An appropriate amount of overlap will depend on the choice of window and on
    your requirements. For the default Hann window an overlap of 50% is a reasonable
    trade off between accurately estimating the signal power, while not over counting
    any of the data. Narrower windows may require a larger overlap.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: An appropriate amount of overlap will depend on the choice of window and on
    your requirements. For the default Hann window an overlap of 50% is a reasonable
    trade off between accurately estimating the signal power, while not over counting
    any of the data. Narrower windows may require a larger overlap.
- en: If *noverlap* is 0, this method is equivalent to Bartlett’s method [[2]](#r34b375daf612-2).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: If *noverlap* is 0, this method is equivalent to Bartlett’s method [[2]](#r34b375daf612-2).
- en: New in version 0.12.0.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: New in version 0.12.0.
- en: References
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[[1](#id1)]'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: 'P. Welch, “The use of the fast Fourier transform for the estimation of power
    spectra: A method based on time averaging over short, modified periodograms”,
    IEEE Trans. Audio Electroacoust. vol. 15, pp. 70-73, 1967.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 'P. Welch, “The use of the fast Fourier transform for the estimation of power
    spectra: A method based on time averaging over short, modified periodograms”,
    IEEE Trans. Audio Electroacoust. vol. 15, pp. 70-73, 1967.'
- en: '[[2](#id2)]'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2](#id2)]'
- en: M.S. Bartlett, “Periodogram Analysis and Continuous Spectra”, Biometrika, vol.
    37, pp. 1-16, 1950.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: M.S. Bartlett, “Periodogram Analysis and Continuous Spectra”, Biometrika, vol.
    37, pp. 1-16, 1950.
- en: Examples
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Generate a test signal, a 2 Vrms sine wave at 1234 Hz, corrupted by 0.001 V**2/Hz
    of white noise sampled at 10 kHz.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Generate a test signal, a 2 Vrms sine wave at 1234 Hz, corrupted by 0.001 V**2/Hz
    of white noise sampled at 10 kHz.
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Compute and plot the power spectral density.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Compute and plot the power spectral density.
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![../../_images/scipy-signal-welch-1_00_00.png](../Images/ea5122404a372a7e5b4b25a0203618c6.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-welch-1_00_00.png](../Images/ea5122404a372a7e5b4b25a0203618c6.png)'
- en: If we average the last half of the spectral density, to exclude the peak, we
    can recover the noise power on the signal.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: If we average the last half of the spectral density, to exclude the peak, we
    can recover the noise power on the signal.
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now compute and plot the power spectrum.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Now compute and plot the power spectrum.
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![../../_images/scipy-signal-welch-1_01_00.png](../Images/fc11eae1edf796f91d71d3e733a6c499.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-welch-1_01_00.png](../Images/fc11eae1edf796f91d71d3e733a6c499.png)'
- en: The peak height in the power spectrum is an estimate of the RMS amplitude.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: The peak height in the power spectrum is an estimate of the RMS amplitude.
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If we now introduce a discontinuity in the signal, by increasing the amplitude
    of a small portion of the signal by 50, we can see the corruption of the mean
    average power spectral density, but using a median average better estimates the
    normal behaviour.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: If we now introduce a discontinuity in the signal, by increasing the amplitude
    of a small portion of the signal by 50, we can see the corruption of the mean
    average power spectral density, but using a median average better estimates the
    normal behaviour.
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![../../_images/scipy-signal-welch-1_02_00.png](../Images/cc5fd01805fd92352e634aa99ac0de2a.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-welch-1_02_00.png](../Images/cc5fd01805fd92352e634aa99ac0de2a.png)'
