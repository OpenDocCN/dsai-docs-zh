- en: scipy.signal.freqs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.freqs.html#scipy.signal.freqs](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.freqs.html#scipy.signal.freqs)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute frequency response of analog filter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Given the M-order numerator *b* and N-order denominator *a* of an analog filter,
    compute its frequency response:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**b**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Numerator of a linear filter.
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Denominator of a linear filter.
  prefs: []
  type: TYPE_NORMAL
- en: '**worN**{None, int, array_like}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If None, then compute at 200 frequencies around the interesting parts of the
    response curve (determined by pole-zero locations). If a single integer, then
    compute at that many frequencies. Otherwise, compute the response at the angular
    frequencies (e.g., rad/s) given in *worN*.
  prefs: []
  type: TYPE_NORMAL
- en: '**plot**callable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A callable that takes two arguments. If given, the return parameters *w* and
    *h* are passed to plot. Useful for plotting the frequency response inside [`freqs`](#scipy.signal.freqs
    "scipy.signal.freqs").
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**w**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The angular frequencies at which *h* was computed.
  prefs: []
  type: TYPE_NORMAL
- en: '**h**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The frequency response.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`freqz`](scipy.signal.freqz.html#scipy.signal.freqz "scipy.signal.freqz")'
  prefs: []
  type: TYPE_NORMAL
- en: Compute the frequency response of a digital filter.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Matplotlib’s “plot” function as the callable for *plot* produces unexpected
    results, this plots the real part of the complex transfer function, not the magnitude.
    Try `lambda w, h: plot(w, abs(h))`.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-freqs-1.png](../Images/c7d0617f5468d6f7b6a1d0a10cdf399a.png)'
  prefs: []
  type: TYPE_IMG
