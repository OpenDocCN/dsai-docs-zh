- en: CPU build options
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CPU 构建选项
- en: 原文：[https://numpy.org/doc/1.26/reference/simd/build-options.html](https://numpy.org/doc/1.26/reference/simd/build-options.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/simd/build-options.html](https://numpy.org/doc/1.26/reference/simd/build-options.html)
- en: Description
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述
- en: 'The following options are mainly used to change the default behavior of optimizations
    that target certain CPU features:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下选项主要用于更改针对特定 CPU 功能进行优化的默认行为：
- en: '`--cpu-baseline`: minimal set of required CPU features.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-baseline`：所需 CPU 功能的最小集合。'
- en: Default value is `min` which provides the minimum CPU features that can safely
    run on a wide range of platforms within the processor family.
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为 `min`，提供可以安全运行在处理器系列内广泛平台上的最小 CPU 功能。
- en: Note
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: During the runtime, NumPy modules will fail to load if any of specified features
    are not supported by the target CPU (raises Python runtime error).
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在运行时，如果目标 CPU 不支持指定的任何功能，则 NumPy 模块将无法加载（引发 Python 运行时错误）。
- en: '`--cpu-dispatch`: dispatched set of additional CPU features.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-dispatch`：分派的一组额外 CPU 功能。'
- en: Default value is `max -xop -fma4` which enables all CPU features, except for
    AMD legacy features (in case of X86).
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为 `max -xop -fma4`，启用所有 CPU 功能，除了 AMD 遗留功能（在 X86 的情况下）。
- en: Note
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: During the runtime, NumPy modules will skip any specified features that are
    not available in the target CPU.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在运行时，如果目标 CPU 不支持任何指定功能，则 NumPy 模块将跳过这些功能。
- en: These options are accessible through [`distutils`](https://docs.python.org/3/library/distutils.html#module-distutils
    "(in Python v3.11)") commands [`distutils.command.build`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build
    "(in Python v3.11)"), [`distutils.command.build_clib`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build_clib
    "(in Python v3.11)") and [`distutils.command.build_ext`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build_ext
    "(in Python v3.11)"). They accept a set of [CPU features](#opt-supported-features)
    or groups of features that gather several features or [special options](#opt-special-options)
    that perform a series of procedures.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项可以通过 [`distutils`](https://docs.python.org/3/library/distutils.html#module-distutils
    "(在 Python v3.11)") 命令 [`distutils.command.build`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build
    "(在 Python v3.11)")、[`distutils.command.build_clib`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build_clib
    "(在 Python v3.11)") 和 [`distutils.command.build_ext`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build_ext
    "(在 Python v3.11)") 访问。它们接受一组[CPU 功能](#opt-supported-features)或收集几个功能的功能组，或者[特殊选项](#opt-special-options)执行一系列过程。
- en: Note
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If `build_clib` or `build_ext` are not specified by the user, the arguments
    of `build` will be used instead, which also holds the default values.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户未指定 `build_clib` 或 `build_ext`，则将使用 `build` 的参数，其中也包含默认值。
- en: 'To customize both `build_ext` and `build_clib`:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义 `build_ext` 和 `build_clib`：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To customize only `build_ext`:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 仅自定义 `build_ext`：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To customize only `build_clib`:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 仅自定义 `build_clib`：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can also customize CPU/build options through PIP command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过 PIP 命令自定义 CPU/构建选项：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Quick Start
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速开始
- en: In general, the default settings tend to not impose certain CPU features that
    may not be available on some older processors. Raising the ceiling of the baseline
    features will often improve performance and may also reduce binary size.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，默认设置不会强加可能在一些旧处理器上不可用的特定 CPU 功能。提高基线功能的上限通常会提高性能，也可能减小二进制文件大小。
- en: 'The following are the most common scenarios that may require changing the default
    settings:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是可能需要更改默认设置的最常见情况：
- en: I am building NumPy for my local use
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我正在为本地使用构建 NumPy
- en: And I do not intend to export the build to other users or target a different
    CPU than what the host has.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我不打算将构建结果导出给其他用户，也不打算针对与主机不同的 CPU 进行优化。
- en: 'Set *native* for baseline, or manually specify the CPU features in case of
    option *native* isn’t supported by your platform:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 将 *native* 设置为基线，或者在您的平台不支持 *native* 选项的情况下手动指定 CPU 功能：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Building NumPy with extra CPU features isn’t necessary for this case, since
    all supported features are already defined within the baseline features:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种情况，使用额外的 CPU 功能构建 NumPy 并不是必要的，因为所有支持的功能已经在基线功能中定义：
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A fatal error will be raised if *native* isn’t supported by the host platform.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果主机平台不支持 *native*，将引发致命错误。
- en: I do not want to support the old processors of the *x86* architecture
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我不想支持 *x86* 架构的旧处理器
- en: 'Since most of the CPUs nowadays support at least *AVX*, *F16C* features, you
    can use:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 由于大多数 CPU 现在至少支持 *AVX*、*F16C* 功能，您可以使用：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`--cpu-baseline` force combine all implied features, so there’s no need to
    add SSE features.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`--cpu-baseline` 强制组合所有暗示功能，因此无需添加 SSE 功能。'
- en: I’m facing the same case above but with *ppc64* architecture
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我遇到了与上述情况相同的问题，但是针对 *ppc64* 架构
- en: 'Then raise the ceiling of the baseline features to Power8:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 那么将基线功能的上限提升到 Power8：
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Having issues with *AVX512* features?
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 遇到*AVX512*功能问题了吗？
- en: 'You may have some reservations about including of *AVX512* or any other CPU
    feature and you want to exclude from the dispatched features:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能对包含*AVX512*或任何其他 CPU 功能有一些保留，想要排除已调度功能：
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '## Supported Features'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '## 支持的功能'
- en: 'The names of the features can express one feature or a group of features, as
    shown in the following tables supported depend on the lowest interest:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 功能的名称可以表示一个功能或一组功能，如下表所示，支持的功能取决于最低兴趣：
- en: Note
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The following features may not be supported by all compilers, also some compilers
    may produce different set of implied features when it comes to features like `AVX512`,
    `AVX2`, and `FMA3`. See [Platform differences](#opt-platform-differences) for
    more details.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下功能可能不被所有编译器支持，而且一些编译器在涉及`AVX512`、`AVX2`和`FMA3`等功能时可能会产生不同的暗示功能集。查看[平台差异](#opt-platform-differences)获取更多详细信息。
- en: On x86
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 x86 上
- en: '| Name | Implies | Gathers |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 暗示 | 收集 |'
- en: '| --- | --- | --- |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `SSE` | `SSE2` |  |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `SSE` | `SSE2` |  |'
- en: '| `SSE2` | `SSE` |  |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `SSE2` | `SSE` |  |'
- en: '| `SSE3` | `SSE` `SSE2` |  |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `SSE3` | `SSE` `SSE2` |  |'
- en: '| `SSSE3` | `SSE` `SSE2` `SSE3` |  |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `SSSE3` | `SSE` `SSE2` `SSE3` |  |'
- en: '| `SSE41` | `SSE` `SSE2` `SSE3` `SSSE3` |  |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `SSE41` | `SSE` `SSE2` `SSE3` `SSSE3` |  |'
- en: '| `POPCNT` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` |  |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `POPCNT` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` |  |'
- en: '| `SSE42` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` |  |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `SSE42` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` |  |'
- en: '| `AVX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` |  |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `AVX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` |  |'
- en: '| `XOP` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `XOP` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `FMA4` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `FMA4` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `F16C` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `F16C` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `FMA3` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `FMA3` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
- en: '| `AVX2` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `AVX2` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
- en: '| `AVX512F` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` |  |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512F` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` |  |'
- en: '| `AVX512CD` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` `AVX512F` |  |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512CD` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` `AVX512F` |  |'
- en: '| `AVX512_KNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512ER` `AVX512PF` |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_KNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512ER` `AVX512PF` |'
- en: '| `AVX512_KNM` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_KNL` | `AVX5124FMAPS` `AVX5124VNNIW`
    `AVX512VPOPCNTDQ` |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_KNM` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_KNL` | `AVX5124FMAPS` `AVX5124VNNIW`
    `AVX512VPOPCNTDQ` |'
- en: '| `AVX512_SKX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512VL` `AVX512BW` `AVX512DQ` |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_SKX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512VL` `AVX512BW` `AVX512DQ` |'
- en: '| `AVX512_CLX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512VNNI` |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_CLX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512VNNI` |'
- en: '| `AVX512_CNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512IFMA` `AVX512VBMI`
    |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_CNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512IFMA` `AVX512VBMI`
    |'
- en: '| `AVX512_ICL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    | `AVX512VBMI2` `AVX512BITALG` `AVX512VPOPCNTDQ` |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_ICL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    | `AVX512VBMI2` `AVX512BITALG` `AVX512VPOPCNTDQ` |'
- en: '| `AVX512_SPR` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    `AVX512_ICL` | `AVX512FP16` |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_SPR` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    `AVX512_ICL` | `AVX512FP16` |'
- en: On IBM/POWER big-endian
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在IBM/POWER大端
- en: '| Name | Implies |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VSX` |  |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `VSX` |  |'
- en: '| `VSX2` | `VSX` |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `VSX2` | `VSX` |'
- en: '| `VSX3` | `VSX` `VSX2` |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `VSX3` | `VSX` `VSX2` |'
- en: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
- en: On IBM/POWER little-endian
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在IBM/POWER小端
- en: '| Name | Implies |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VSX` | `VSX2` |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `VSX` | `VSX2` |'
- en: '| `VSX2` | `VSX` |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `VSX2` | `VSX` |'
- en: '| `VSX3` | `VSX` `VSX2` |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `VSX3` | `VSX` `VSX2` |'
- en: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
- en: On ARMv7/A32
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在ARMv7/A32
- en: '| Name | Implies |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `NEON` |  |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `NEON` |  |'
- en: '| `NEON_FP16` | `NEON` |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_FP16` | `NEON` |'
- en: '| `NEON_VFPV4` | `NEON` `NEON_FP16` |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_VFPV4` | `NEON` `NEON_FP16` |'
- en: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
- en: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
- en: On ARMv8/A64
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在ARMv8/A64
- en: '| Name | Implies |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `NEON` | `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `NEON` | `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `NEON_FP16` | `NEON` `NEON_VFPV4` `ASIMD` |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_FP16` | `NEON` `NEON_VFPV4` `ASIMD` |'
- en: '| `NEON_VFPV4` | `NEON` `NEON_FP16` `ASIMD` |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_VFPV4` | `NEON` `NEON_FP16` `ASIMD` |'
- en: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
- en: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
- en: On IBM/ZSYSTEM(S390X)
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在IBM/ZSYSTEM(S390X)
- en: '| Name | Implies |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VX` |  |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| `VX` |  |'
- en: '| `VXE` | `VX` |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| `VXE` | `VX` |'
- en: '| `VXE2` | `VX` `VXE` |  ## Special Options'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '| `VXE2` | `VX` `VXE` |  ## 特殊选项'
- en: '`NONE`: enable no features.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NONE`: 不启用任何功能。'
- en: '`NATIVE`: Enables all CPU features that supported by the host CPU, this operation
    is based on the compiler flags (`-march=native`, `-xHost`, `/QxHost`)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NATIVE`: 启用主机CPU支持的所有CPU功能，此操作基于编译器标志（`-march=native`、`-xHost`、`/QxHost`）'
- en: '`MIN`: Enables the minimum CPU features that can safely run on a wide range
    of platforms:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MIN`: 启用可以安全运行在广泛平台上的最低CPU功能：'
- en: '| For Arch | Implies |'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 对于Arch | 意味着 |'
- en: '| --- | --- |'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| x86 (32-bit mode) | `SSE` `SSE2` |'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| x86（32位模式） | `SSE` `SSE2` |'
- en: '| x86_64 | `SSE` `SSE2` `SSE3` |'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| x86_64 | `SSE` `SSE2` `SSE3` |'
- en: '| IBM/POWER (big-endian mode) | `NONE` |'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| IBM/POWER（大端模式） | `NONE` |'
- en: '| IBM/POWER (little-endian mode) | `VSX` `VSX2` |'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| IBM/POWER（小端模式） | `VSX` `VSX2` |'
- en: '| ARMHF | `NONE` |'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ARMHF | `NONE` |'
- en: '| ARM64 A.K. AARCH64 | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ARM64 A.K. AARCH64 | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| IBM/ZSYSTEM(S390X) | `NONE` |'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| IBM/ZSYSTEM(S390X) | `NONE` |'
- en: '`MAX`: Enables all supported CPU features by the compiler and platform.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MAX`: 启用编译器和平台支持的所有CPU功能。'
- en: '`Operators-/+`: remove or add features, useful with options `MAX`, `MIN` and
    `NATIVE`.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Operators-/+`: 移除或添加功能，与选项`MAX`、`MIN`和`NATIVE`一起使用。'
- en: Behaviors
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 行为
- en: 'CPU features and other options are case-insensitive, for example:'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU功能和其他选项不区分大小写，例如：
- en: '[PRE9]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The order of the requested optimizations doesn’t matter:'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求的优化顺序不重要：
- en: '[PRE10]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Either commas or spaces or ‘+’ can be used as a separator, for example:'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逗号、空格或‘+’都可以用作分隔符，例如：
- en: '[PRE11]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: all works but arguments should be enclosed in quotes or escaped by backslash
    if any spaces are used.
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有工作，但如果使用空格，则参数应该用引号括起来或通过反斜杠转义。
- en: '`--cpu-baseline` combines all implied CPU features, for example:'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-baseline`结合了所有暗示的CPU功能，例如：'
- en: '[PRE12]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`--cpu-baseline` will be treated as “native” if compiler native flag `-march=native`
    or `-xHost` or `/QxHost` is enabled through environment variable *CFLAGS*:'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果编译器本地标志`-march=native`或`-xHost`或`/QxHost`通过环境变量*CFLAGS*启用，则`--cpu-baseline`将被视为“本地”：
- en: '[PRE13]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '`--cpu-baseline` escapes any specified features that aren’t supported by the
    target platform or compiler rather than raising fatal errors.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-baseline`会将任何指定的不受目标平台或编译器支持的功能转义，而不是引发致命错误。'
- en: Note
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Since `--cpu-baseline` combines all implied features, the maximum supported
    of implied features will be enabled rather than escape all of them. For example:'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于`--cpu-baseline`结合了所有暗示的功能，将启用最大支持的暗示功能，而不是转义所有功能。例如：
- en: ''
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '`--cpu-dispatch` does not combain any of implied CPU features, so you must
    add them unless you want to disable one or all of them:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-dispatch` 不包含任何暗示的 CPU 特性，因此除非你想禁用其中一个或全部特性，否则必须添加它们：'
- en: '[PRE15]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '`--cpu-dispatch` escapes any specified baseline features and also escapes any
    features not supported by the target platform or compiler without raising fatal
    errors.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-dispatch` 会跳过任何指定的基线特性，也会跳过目标平台或编译器不支持的特性，而不会引发致命错误。'
- en: Eventually, you should always check the final report through the build log to
    verify the enabled features. See [Build report](#opt-build-report) for more details.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，您应始终通过构建日志检查最终报告以验证启用的特性。有关更多详细信息，请参阅[构建报告](#opt-build-report)。
- en: '## Platform differences'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '## 平台差异'
- en: Some exceptional conditions force us to link some features together when it
    come to certain compilers or architectures, resulting in the impossibility of
    building them separately.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 一些特殊条件迫使我们在涉及某些编译器或架构时将某些特性链接在一起，导致无法单独构建它们。
- en: 'These conditions can be divided into two parts, as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这些条件可以分为两部分，如下所示：
- en: '**Architectural compatibility**'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**架构兼容性**'
- en: 'The need to align certain CPU features that are assured to be supported by
    successive generations of the same architecture, some cases:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 需要对一些已确保在同一架构的后续世代中支持的 CPU 特性进行对齐的情况，有些情况如下：
- en: On ppc64le `VSX(ISA 2.06)` and `VSX2(ISA 2.07)` both imply one another since
    the first generation that supports little-endian mode is Power-8`(ISA 2.07)`
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 ppc64le 上，`VSX(ISA 2.06)` 和 `VSX2(ISA 2.07)` 相���暗示，因为支持小端模式的第一代是 Power-8`(ISA
    2.07)`
- en: On AArch64 `NEON NEON_FP16 NEON_VFPV4 ASIMD` implies each other since they are
    part of the hardware baseline.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 AArch64 上，`NEON NEON_FP16 NEON_VFPV4 ASIMD` 相互暗示，因为它们是硬件基线的一部分。
- en: 'For example:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE16]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Please take a deep look at [Supported Features](#opt-supported-features), in
    order to determine the features that imply one another.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 请仔细查看[支持的特性](#opt-supported-features)，以确定彼此暗示的特性。
- en: '**Compilation compatibility**'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '**编译兼容性**'
- en: Some compilers don’t provide independent support for all CPU features. For instance
    **Intel**’s compiler doesn’t provide separated flags for `AVX2` and `FMA3`, it
    makes sense since all Intel CPUs that comes with `AVX2` also support `FMA3`, but
    this approach is incompatible with other **x86** CPUs from **AMD** or **VIA**.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 一些编译器不提供对所有 CPU 特性的独立支持。例如**Intel**的编译器不为`AVX2`和`FMA3`提供单独的标志，这是有道理的，因为所有支持`AVX2`的
    Intel CPU 也支持`FMA3`，但这种方法与其他**x86** CPU（如**AMD**或**VIA**）不兼容。
- en: 'For example:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE17]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following tables only show the differences imposed by some compilers from
    the general context that been shown in the [Supported Features](#opt-supported-features)
    tables:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格仅显示一些编译器对通用上下文施加的差异，这些差异在[支持的特性](#opt-supported-features)表格中已经显示：
- en: Note
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Features names with strikeout represent the unsupported CPU features.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 有删除线的特性名称表示不支持的 CPU 特性。
- en: On x86::Intel Compiler
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 x86::Intel 编译器
- en: '| Name | Implies | Gathers |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 暗示 | 收集 |'
- en: '| --- | --- | --- |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
- en: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
- en: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    |  |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    |  |'
- en: '| XOP | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| XOP | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
- en: '| FMA4 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| FMA4 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
- en: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL | AVX512FP16 |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL | AVX512FP16 |'
- en: On x86::Microsoft Visual C/C++
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 x86::Microsoft Visual C/C++
- en: '| Name | Implies | Gathers |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 暗示 | 收集 |'
- en: '| --- | --- | --- |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
- en: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
- en: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    AVX512_SKX |  |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    AVX512_SKX |  |'
- en: '| AVX512CD | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512_SKX |  |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| AVX512CD | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512_SKX |  |'
- en: '| AVX512_KNL | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD | AVX512ER AVX512PF |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_KNL | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD | AVX512ER AVX512PF |'
- en: '| AVX512_KNM | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_KNL | AVX5124FMAPS AVX5124VNNIW AVX512VPOPCNTDQ |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_KNM | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_KNL | AVX5124FMAPS AVX5124VNNIW AVX512VPOPCNTDQ |'
- en: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL | AVX512FP16 |  ## Build
    report'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL | AVX512FP16 |  ## 构建报告'
- en: In most cases, the CPU build options do not produce any fatal errors that lead
    to hanging the build. Most of the errors that may appear in the build log serve
    as heavy warnings due to the lack of some expected CPU features by the compiler.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，CPU 构建选项不会产生导致构建挂起的致命错误。在构建日志中可能出现的大多数错误都是由于编译器缺少某些预期的 CPU 功能而产生的严重警告。
- en: So we strongly recommend checking the final report log, to be aware of what
    kind of CPU features are enabled and what are not.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们强烈建议检查最终的报告日志，了解启用了哪些 CPU 功能以及哪些没有启用。
- en: 'You can find the final report of CPU optimizations at the end of the build
    log, and here is how it looks on x86_64/gcc:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在构建日志的末尾找到 CPU 优化的最终报告，以下是在 x86_64/gcc 上的展示方式：
- en: '[PRE18]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'There is a separate report for each of `build_ext` and `build_clib` that includes
    several sections, and each section has several values, representing the following:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`build_ext`和`build_clib`的每个单独报告都包含几个部分，每个部分都有几个值，表示以下内容：
- en: '**Platform**:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台**：'
- en: 'Architecture: The architecture name of target CPU. It should be one of `x86`,
    `x64`, `ppc64`, `ppc64le`, `armhf`, `aarch64`, `s390x` or `unknown`.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构：目标 CPU 的架构名称。它应该是`x86`、`x64`、`ppc64`、`ppc64le`、`armhf`、`aarch64`、`s390x`或`unknown`中的一个。
- en: 'Compiler: The compiler name. It should be one of gcc, clang, msvc, icc, iccw
    or unix-like.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译器：编译器名称。它应该是 gcc、clang、msvc、icc、iccw 或类 Unix 的其中一个。
- en: '**CPU baseline**:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '**CPU 基线**：'
- en: 'Requested: The specific features and options to `--cpu-baseline` as-is.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求的：作为`--cpu-baseline`的特定功能和选项。
- en: 'Enabled: The final set of enabled CPU features.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已启用：最终启用的 CPU 功能集。
- en: 'Flags: The compiler flags that were used to all NumPy *C/C++* sources during
    the compilation except for temporary sources that have been used for generating
    the binary objects of dispatched features.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标志：用于编译所有 NumPy *C/C++* 源文件的编译器标志，除了用于生成分派功能的二进制对象的临时源文件。
- en: 'Extra checks: list of internal checks that activate certain functionality or
    intrinsics related to the enabled features, useful for debugging when it comes
    to developing SIMD kernels.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 额外检查：激活与已启用功能相关的某些功能或内部函数的列表，对于开发 SIMD 内核时进行调试非常有用。
- en: '**CPU dispatch**:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**CPU 分派**：'
- en: 'Requested: The specific features and options to `--cpu-dispatch` as-is.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求的：作为`--cpu-dispatch`的特定功能和选项。
- en: 'Enabled: The final set of enabled CPU features.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已启用：最终启用的 CPU 功能集。
- en: 'Generated: At the beginning of the next row of this property, the features
    for which optimizations have been generated are shown in the form of several sections
    with similar properties explained as follows:'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成的：在此属性的下一行的开头，显示已生成优化的功能，以几个部分的形式显示，具有类似属性的解释如下：
- en: 'One or multiple dispatched feature: The implied CPU features.'
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个或多个分派功能：隐含的 CPU 功能。
- en: 'Flags: The compiler flags that been used for these features.'
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标志：用于这些功能的编译器标志。
- en: 'Extra checks: Similar to the baseline but for these dispatched features.'
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 额外检查：类似于基线，但适用于这些分派功能。
- en: 'Detect: Set of CPU features that need be detected in runtime in order to execute
    the generated optimizations.'
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测：需要在运行时检测以执行生成的优化的一组 CPU 功能。
- en: 'The lines that come after the above property and end with a ‘:’ on a separate
    line, represent the paths of c/c++ sources that define the generated optimizations.  ##
    Runtime dispatch'
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在上述属性之后并以单独一行的‘:’结尾的行，代表定义生成的优化的 c/c++ 源文件的路径。  ## 运行时分派'
- en: 'Importing NumPy triggers a scan of the available CPU features from the set
    of dispatchable features. This can be further restricted by setting the environment
    variable `NPY_DISABLE_CPU_FEATURES` to a comma-, tab-, or space-separated list
    of features to disable. This will raise an error if parsing fails or if the feature
    was not enabled. For instance, on `x86_64` this will disable `AVX2` and `FMA3`:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 导入 NumPy 会触发对可分派功能集中的可用 CPU 功能进行扫描。这可以通过将环境变量`NPY_DISABLE_CPU_FEATURES`设置为逗号、制表符或空格分隔的功能列表来进一步限制。如果解析失败或未启用该功能，将引发错误。例如，在`x86_64`上，这将禁用`AVX2`和`FMA3`：
- en: '[PRE19]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: If the feature is not available, a warning will be emitted.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果特性不可用，将发出警告。
- en: Description
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述
- en: 'The following options are mainly used to change the default behavior of optimizations
    that target certain CPU features:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以下选项主要用于更改针对特定CPU特性的优化的默认行为：
- en: '`--cpu-baseline`: minimal set of required CPU features.'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-baseline`：所需CPU特性的最小集。'
- en: Default value is `min` which provides the minimum CPU features that can safely
    run on a wide range of platforms within the processor family.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为`min`，提供可以安全运行在处理器系列内广泛范围平台上的最小CPU特性。
- en: Note
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: During the runtime, NumPy modules will fail to load if any of specified features
    are not supported by the target CPU (raises Python runtime error).
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在运行时，如果目标CPU不支持任何指定特性，则NumPy模块将无法加载（引发Python运行时错误）。
- en: '`--cpu-dispatch`: dispatched set of additional CPU features.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-dispatch`：分派的一组额外的CPU特性。'
- en: Default value is `max -xop -fma4` which enables all CPU features, except for
    AMD legacy features (in case of X86).
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 默认值为`max -xop -fma4`，启用所有CPU特性，除了AMD遗留特性（在X86的情况下）。
- en: Note
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: During the runtime, NumPy modules will skip any specified features that are
    not available in the target CPU.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在运行时，NumPy模块将跳过目标CPU中不可用的任何指定特性。
- en: These options are accessible through [`distutils`](https://docs.python.org/3/library/distutils.html#module-distutils
    "(in Python v3.11)") commands [`distutils.command.build`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build
    "(in Python v3.11)"), [`distutils.command.build_clib`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build_clib
    "(in Python v3.11)") and [`distutils.command.build_ext`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build_ext
    "(in Python v3.11)"). They accept a set of [CPU features](#opt-supported-features)
    or groups of features that gather several features or [special options](#opt-special-options)
    that perform a series of procedures.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项可通过[`distutils`](https://docs.python.org/3/library/distutils.html#module-distutils
    "(在Python v3.11)")命令[`distutils.command.build`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build
    "(在Python v3.11)")、[`distutils.command.build_clib`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build_clib
    "(在Python v3.11)")和[`distutils.command.build_ext`](https://docs.python.org/3/distutils/apiref.html#module-distutils.command.build_ext
    "(在Python v3.11)")访问，它们接受一组[CPU特性](#opt-supported-features)或收集几个特性的特性组或[特殊选项](#opt-special-options)执行一系列过程。
- en: Note
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If `build_clib` or `build_ext` are not specified by the user, the arguments
    of `build` will be used instead, which also holds the default values.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果用户未指定`build_clib`或`build_ext`，则将使用`build`的参数，这也包含默认值。
- en: 'To customize both `build_ext` and `build_clib`:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 同时自定义`build_ext`和`build_clib`：
- en: '[PRE20]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To customize only `build_ext`:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 仅自定义`build_ext`：
- en: '[PRE21]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'To customize only `build_clib`:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 仅自定义`build_clib`：
- en: '[PRE22]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'You can also customize CPU/build options through PIP command:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过PIP命令自定义CPU/构建选项：
- en: '[PRE23]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Quick Start
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速开始
- en: In general, the default settings tend to not impose certain CPU features that
    may not be available on some older processors. Raising the ceiling of the baseline
    features will often improve performance and may also reduce binary size.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，默认设置往往不会强加一些可能在一些旧处理器上不可用的CPU特性。提高基线特性的上限通常会提高性能，也可能减小二进制文件大小。
- en: 'The following are the most common scenarios that may require changing the default
    settings:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可能需要更改默认设置的最常见情况：
- en: I am building NumPy for my local use
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我正在为本地使用构建NumPy
- en: And I do not intend to export the build to other users or target a different
    CPU than what the host has.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我也不打算将构建导出给其他用户或针对与主机不同的CPU。
- en: 'Set *native* for baseline, or manually specify the CPU features in case of
    option *native* isn’t supported by your platform:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 将*本机*设置为基线，或者在您的平台不支持*本机*选项的情况下手动指定CPU特性：
- en: '[PRE24]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Building NumPy with extra CPU features isn’t necessary for this case, since
    all supported features are already defined within the baseline features:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种情况，使用额外的CPU特性构建NumPy并不是必要的，因为所有支持的特性已经在基线特性中定义：
- en: '[PRE25]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A fatal error will be raised if *native* isn’t supported by the host platform.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 如果主机平台不支持*本机*，将引发致命错误。
- en: I do not want to support the old processors of the *x86* architecture
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我不想支持*x86*架构的旧处理器
- en: 'Since most of the CPUs nowadays support at least *AVX*, *F16C* features, you
    can use:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 由于如今大多数CPU至少支持*AVX*、*F16C*特性，您可以使用：
- en: '[PRE26]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`--cpu-baseline` force combine all implied features, so there’s no need to
    add SSE features.'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`--cpu-baseline`强制组合所有隐含的特性，因此不需要添加SSE特性。'
- en: I’m facing the same case above but with *ppc64* architecture
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我遇到了与上述相同的情况，但是使用*ppc64*架构
- en: 'Then raise the ceiling of the baseline features to Power8:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将基线特性的上限提高到Power8：
- en: '[PRE27]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Having issues with *AVX512* features?
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 遇到*AVX512*特性的问题？
- en: 'You may have some reservations about including of *AVX512* or any other CPU
    feature and you want to exclude from the dispatched features:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能对包含*AVX512*或任何其他CPU特性有所保留，并希望从分派的特性中排除：
- en: '[PRE28]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: I am building NumPy for my local use
  id: totrans-255
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我正在为本地使用构建NumPy
- en: And I do not intend to export the build to other users or target a different
    CPU than what the host has.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我不打算将构建导出给其他用户或针对与主机不同的CPU进行目标定位。
- en: 'Set *native* for baseline, or manually specify the CPU features in case of
    option *native* isn’t supported by your platform:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 设置*native*为基线，或者在您的平台不支持选项*native*的情况下手动指定CPU特性：
- en: '[PRE29]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Building NumPy with extra CPU features isn’t necessary for this case, since
    all supported features are already defined within the baseline features:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种情况，构建NumPy时不需要额外的CPU特性，因为所有支持的特性已经在基线特性中定义：
- en: '[PRE30]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A fatal error will be raised if *native* isn’t supported by the host platform.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如果主机平台不支持*native*，将会引发致命错误。
- en: I do not want to support the old processors of the *x86* architecture
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我不想支持*x86*架构的旧处理器
- en: 'Since most of the CPUs nowadays support at least *AVX*, *F16C* features, you
    can use:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 由于大多数CPU现在至少支持*AVX*、*F16C*特性，您可以使用：
- en: '[PRE31]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`--cpu-baseline` force combine all implied features, so there’s no need to
    add SSE features.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`--cpu-baseline`强制组合所有暗示的特性，因此不需要添加SSE特性。'
- en: I’m facing the same case above but with *ppc64* architecture
  id: totrans-268
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我遇到了与上述相同的情况，但是使用*ppc64*架构
- en: 'Then raise the ceiling of the baseline features to Power8:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将基线特性的上限提高到Power8：
- en: '[PRE32]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Having issues with *AVX512* features?
  id: totrans-271
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 遇到*AVX512*特性的问题？
- en: 'You may have some reservations about including of *AVX512* or any other CPU
    feature and you want to exclude from the dispatched features:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能对包含*AVX512*或任何其他CPU特性有所保留，并希望从分派的特性中排除：
- en: '[PRE33]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '## Supported Features'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '## 支持的特性'
- en: 'The names of the features can express one feature or a group of features, as
    shown in the following tables supported depend on the lowest interest:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 特性的名称可以表示一个特性或一组特性，如下表所示，支持的特性取决于最低的兴趣：
- en: Note
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The following features may not be supported by all compilers, also some compilers
    may produce different set of implied features when it comes to features like `AVX512`,
    `AVX2`, and `FMA3`. See [Platform differences](#opt-platform-differences) for
    more details.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 以下特性可能不被所有编译器支持，而且一些编译器在涉及`AVX512`、`AVX2`和`FMA3`等特性时可能会产生不同的暗示特性集。有关更多详细信息，请参阅[平台差异](#opt-platform-differences)。
- en: On x86
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在x86上
- en: '| Name | Implies | Gathers |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: 名称 | 意味着 | 收集 |
- en: '| --- | --- | --- |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `SSE` | `SSE2` |  |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| `SSE` | `SSE2` |  |'
- en: '| `SSE2` | `SSE` |  |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| `SSE2` | `SSE` |  |'
- en: '| `SSE3` | `SSE` `SSE2` |  |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| `SSE3` | `SSE` `SSE2` |  |'
- en: '| `SSSE3` | `SSE` `SSE2` `SSE3` |  |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| `SSSE3` | `SSE` `SSE2` `SSE3` |  |'
- en: '| `SSE41` | `SSE` `SSE2` `SSE3` `SSSE3` |  |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| `SSE41` | `SSE` `SSE2` `SSE3` `SSSE3` |  |'
- en: '| `POPCNT` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` |  |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| `POPCNT` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` |  |'
- en: '| `SSE42` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` |  |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| `SSE42` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` |  |'
- en: '| `AVX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` |  |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| `AVX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` |  |'
- en: '| `XOP` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| `XOP` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `FMA4` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| `FMA4` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `F16C` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '| `F16C` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `FMA3` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| `FMA3` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
- en: '| `AVX2` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| `AVX2` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
- en: '| `AVX512F` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` |  |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512F` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` |  |'
- en: '| `AVX512CD` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` `AVX512F` |  |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512CD` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` `AVX512F` |  |'
- en: '| `AVX512_KNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512ER` `AVX512PF` |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_KNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512ER` `AVX512PF` |'
- en: '| `AVX512_KNM` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_KNL` | `AVX5124FMAPS` `AVX5124VNNIW`
    `AVX512VPOPCNTDQ` |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_KNM` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_KNL` | `AVX5124FMAPS` `AVX5124VNNIW`
    `AVX512VPOPCNTDQ` |'
- en: '| `AVX512_SKX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512VL` `AVX512BW` `AVX512DQ` |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_SKX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512VL` `AVX512BW` `AVX512DQ` |'
- en: '| `AVX512_CLX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512VNNI` |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_CLX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512VNNI` |'
- en: '| `AVX512_CNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512IFMA` `AVX512VBMI`
    |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_CNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512IFMA` `AVX512VBMI`
    |'
- en: '| `AVX512_ICL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    | `AVX512VBMI2` `AVX512BITALG` `AVX512VPOPCNTDQ` |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_ICL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    | `AVX512VBMI2` `AVX512BITALG` `AVX512VPOPCNTDQ` |'
- en: '| `AVX512_SPR` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    `AVX512_ICL` | `AVX512FP16` |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_SPR` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    `AVX512_ICL` | `AVX512FP16` |'
- en: On IBM/POWER big-endian
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 IBM/POWER 大端
- en: '| Name | Implies |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VSX` |  |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| `VSX` |  |'
- en: '| `VSX2` | `VSX` |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '| `VSX2` | `VSX` |'
- en: '| `VSX3` | `VSX` `VSX2` |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| `VSX3` | `VSX` `VSX2` |'
- en: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
- en: On IBM/POWER little-endian
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 IBM/POWER 小端
- en: '| Name | Implies |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VSX` | `VSX2` |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| `VSX` | `VSX2` |'
- en: '| `VSX2` | `VSX` |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '| `VSX2` | `VSX` |'
- en: '| `VSX3` | `VSX` `VSX2` |'
  id: totrans-315
  prefs: []
  type: TYPE_TB
  zh: '| `VSX3` | `VSX` `VSX2` |'
- en: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
- en: On ARMv7/A32
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 ARMv7/A32
- en: '| Name | Implies |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `NEON` |  |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| `NEON` |  |'
- en: '| `NEON_FP16` | `NEON` |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_FP16` | `NEON` |'
- en: '| `NEON_VFPV4` | `NEON` `NEON_FP16` |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_VFPV4` | `NEON` `NEON_FP16` |'
- en: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
- en: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
  id: totrans-326
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
- en: On ARMv8/A64
  id: totrans-327
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 ARMv8/A64
- en: '| Name | Implies |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `NEON` | `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| `NEON` | `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `NEON_FP16` | `NEON` `NEON_VFPV4` `ASIMD` |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_FP16` | `NEON` `NEON_VFPV4` `ASIMD` |'
- en: '| `NEON_VFPV4` | `NEON` `NEON_FP16` `ASIMD` |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_VFPV4` | `NEON` `NEON_FP16` `ASIMD` |'
- en: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
- en: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
- en: On IBM/ZSYSTEM(S390X)
  id: totrans-337
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 IBM/ZSYSTEM(S390X)
- en: '| Name | Implies |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 |'
- en: '| --- | --- |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VX` |  |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| `VX` |  |'
- en: '| `VXE` | `VX` |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| `VXE` | `VX` |'
- en: '| `VXE2` | `VX` `VXE` |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| `VXE2` | `VX` `VXE` |'
- en: On x86
  id: totrans-343
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 x86
- en: '| Name | Implies | Gathers |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 意味着 | 收集 |'
- en: '| --- | --- | --- |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `SSE` | `SSE2` |  |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| `SSE` | `SSE2` |  |'
- en: '| `SSE2` | `SSE` |  |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| `SSE2` | `SSE` |  |'
- en: '| `SSE3` | `SSE` `SSE2` |  |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| `SSE3` | `SSE` `SSE2` |  |'
- en: '| `SSSE3` | `SSE` `SSE2` `SSE3` |  |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| `SSSE3` | `SSE` `SSE2` `SSE3` |  |'
- en: '| `SSE41` | `SSE` `SSE2` `SSE3` `SSSE3` |  |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| `SSE41` | `SSE` `SSE2` `SSE3` `SSSE3` |  |'
- en: '| `POPCNT` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` |  |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| `POPCNT` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` |  |'
- en: '| `SSE42` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` |  |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| `SSE42` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` |  |'
- en: '| `AVX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` |  |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| `AVX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` |  |'
- en: '| `XOP` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| `XOP` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `FMA4` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| `FMA4` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `F16C` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| `F16C` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` |  |'
- en: '| `FMA3` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
  zh: '| `FMA3` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
- en: '| `AVX2` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
  zh: '| `AVX2` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    |  |'
- en: '| `AVX512F` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` |  |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512F` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` |  |'
- en: '| `AVX512CD` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` `AVX512F` |  |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512CD` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX` `F16C`
    `FMA3` `AVX2` `AVX512F` |  |'
- en: '| `AVX512_KNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512ER` `AVX512PF` |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_KNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512ER` `AVX512PF` |'
- en: '| `AVX512_KNM` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_KNL` | `AVX5124FMAPS` `AVX5124VNNIW`
    `AVX512VPOPCNTDQ` |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_KNM` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_KNL` | `AVX5124FMAPS` `AVX5124VNNIW`
    `AVX512VPOPCNTDQ` |'
- en: '| `AVX512_SKX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512VL` `AVX512BW` `AVX512DQ` |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_SKX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` | `AVX512VL` `AVX512BW` `AVX512DQ` |'
- en: '| `AVX512_CLX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512VNNI` |'
  id: totrans-364
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_CLX` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512VNNI` |'
- en: '| `AVX512_CNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512IFMA` `AVX512VBMI`
    |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_CNL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` | `AVX512IFMA` `AVX512VBMI`
    |'
- en: '| `AVX512_ICL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    | `AVX512VBMI2` `AVX512BITALG` `AVX512VPOPCNTDQ` |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_ICL` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    | `AVX512VBMI2` `AVX512BITALG` `AVX512VPOPCNTDQ` |'
- en: '| `AVX512_SPR` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    `AVX512_ICL` | `AVX512FP16` |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| `AVX512_SPR` | `SSE` `SSE2` `SSE3` `SSSE3` `SSE41` `POPCNT` `SSE42` `AVX`
    `F16C` `FMA3` `AVX2` `AVX512F` `AVX512CD` `AVX512_SKX` `AVX512_CLX` `AVX512_CNL`
    `AVX512_ICL` | `AVX512FP16` |'
- en: On IBM/POWER big-endian
  id: totrans-368
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 IBM/POWER 大端
- en: '| Name | Implies |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 含义 |'
- en: '| --- | --- |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VSX` |  |'
  id: totrans-371
  prefs: []
  type: TYPE_TB
  zh: '| `VSX` |  |'
- en: '| `VSX2` | `VSX` |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
  zh: '| `VSX2` | `VSX` |'
- en: '| `VSX3` | `VSX` `VSX2` |'
  id: totrans-373
  prefs: []
  type: TYPE_TB
  zh: '| `VSX3` | `VSX` `VSX2` |'
- en: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
- en: On IBM/POWER little-endian
  id: totrans-375
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 IBM/POWER 小端
- en: '| Name | Implies |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 含义 |'
- en: '| --- | --- |'
  id: totrans-377
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VSX` | `VSX2` |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
  zh: '| `VSX` | `VSX2` |'
- en: '| `VSX2` | `VSX` |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| `VSX2` | `VSX` |'
- en: '| `VSX3` | `VSX` `VSX2` |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
  zh: '| `VSX3` | `VSX` `VSX2` |'
- en: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
  zh: '| `VSX4` | `VSX` `VSX2` `VSX3` |'
- en: On ARMv7/A32
  id: totrans-382
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 ARMv7/A32
- en: '| Name | Implies |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 含义 |'
- en: '| --- | --- |'
  id: totrans-384
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `NEON` |  |'
  id: totrans-385
  prefs: []
  type: TYPE_TB
  zh: '| `NEON` |  |'
- en: '| `NEON_FP16` | `NEON` |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_FP16` | `NEON` |'
- en: '| `NEON_VFPV4` | `NEON` `NEON_FP16` |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_VFPV4` | `NEON` `NEON_FP16` |'
- en: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
- en: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-390
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
  id: totrans-391
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
- en: On ARMv8/A64
  id: totrans-392
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 ARMv8/A64
- en: '| Name | Implies |'
  id: totrans-393
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 含义 |'
- en: '| --- | --- |'
  id: totrans-394
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `NEON` | `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| `NEON` | `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `NEON_FP16` | `NEON` `NEON_VFPV4` `ASIMD` |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_FP16` | `NEON` `NEON_VFPV4` `ASIMD` |'
- en: '| `NEON_VFPV4` | `NEON` `NEON_FP16` `ASIMD` |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '| `NEON_VFPV4` | `NEON` `NEON_FP16` `ASIMD` |'
- en: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMD` | `NEON` `NEON_FP16` `NEON_VFPV4` |'
- en: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDHP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDDP` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| `ASIMDFHM` | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` `ASIMDHP` |'
- en: On IBM/ZSYSTEM(S390X)
  id: totrans-402
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 IBM/ZSYSTEM(S390X)
- en: '| Name | Implies |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 含义 |'
- en: '| --- | --- |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `VX` |  |'
  id: totrans-405
  prefs: []
  type: TYPE_TB
  zh: '| `VX` |  |'
- en: '| `VXE` | `VX` |'
  id: totrans-406
  prefs: []
  type: TYPE_TB
  zh: '| `VXE` | `VX` |'
- en: '| `VXE2` | `VX` `VXE` |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '| `VXE2` | `VX` `VXE` |'
- en: '## Special Options'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '## 特殊选项'
- en: '`NONE`: enable no features.'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NONE`: 不启用任何功能。'
- en: '`NATIVE`: Enables all CPU features that supported by the host CPU, this operation
    is based on the compiler flags (`-march=native`, `-xHost`, `/QxHost`)'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NATIVE`: 启用主机 CPU 支持的所有 CPU 功能，此操作基于编译器标志（`-march=native`，`-xHost`，`/QxHost`）'
- en: '`MIN`: Enables the minimum CPU features that can safely run on a wide range
    of platforms:'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MIN`: 启用最小的 CPU 功能，可以安全地在各种平台上运行：'
- en: '| For Arch | Implies |'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 对架构 | 含义 |'
- en: '| --- | --- |'
  id: totrans-413
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| x86 (32-bit mode) | `SSE` `SSE2` |'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| x86（32 位模式） | `SSE` `SSE2` |'
- en: '| x86_64 | `SSE` `SSE2` `SSE3` |'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| x86_64 | `SSE` `SSE2` `SSE3` |'
- en: '| IBM/POWER (big-endian mode) | `NONE` |'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| IBM/POWER（大端模式） | `NONE` |'
- en: '| IBM/POWER (little-endian mode) | `VSX` `VSX2` |'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| IBM/POWER（小端模式） | `VSX` `VSX2` |'
- en: '| ARMHF | `NONE` |'
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ARMHF | `NONE` |'
- en: '| ARM64 A.K. AARCH64 | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ARM64 A.K. AARCH64 | `NEON` `NEON_FP16` `NEON_VFPV4` `ASIMD` |'
- en: '| IBM/ZSYSTEM(S390X) | `NONE` |'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| IBM/ZSYSTEM(S390X) | `NONE` |'
- en: '`MAX`: Enables all supported CPU features by the compiler and platform.'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MAX`: 通过编译器和平台启用所有支持的CPU特性。'
- en: '`Operators-/+`: remove or add features, useful with options `MAX`, `MIN` and
    `NATIVE`.'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Operators-/+`：删除或添加特性，与选项`MAX`、`MIN`和`NATIVE`一起使用。'
- en: Behaviors
  id: totrans-423
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 行为
- en: 'CPU features and other options are case-insensitive, for example:'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU特性和其他选项不区分大小写，例如：
- en: '[PRE34]'
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The order of the requested optimizations doesn’t matter:'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求的优化顺序无关紧要：
- en: '[PRE35]'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Either commas or spaces or ‘+’ can be used as a separator, for example:'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分隔符可以使用逗号、空格或‘+’，例如：
- en: '[PRE36]'
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: all works but arguments should be enclosed in quotes or escaped by backslash
    if any spaces are used.
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有都有效，但如果使用了空格，则参数应该用引号括起来或通过反斜杠进行转义。
- en: '`--cpu-baseline` combines all implied CPU features, for example:'
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-baseline`结合了所有隐含的CPU特性，例如：'
- en: '[PRE37]'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '`--cpu-baseline` will be treated as “native” if compiler native flag `-march=native`
    or `-xHost` or `/QxHost` is enabled through environment variable *CFLAGS*:'
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果通过环境变量*CFLAGS*启用编译器本机标志`-march=native`或`-xHost`或`/QxHost`，则`--cpu-baseline`将被视为“本机”：
- en: '[PRE38]'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '`--cpu-baseline` escapes any specified features that aren’t supported by the
    target platform or compiler rather than raising fatal errors.'
  id: totrans-435
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-baseline`逃避任何指定的特性，如果目标平台或编译器不支持，则不会引发致命错误。'
- en: Note
  id: totrans-436
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-437
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Since `--cpu-baseline` combines all implied features, the maximum supported
    of implied features will be enabled rather than escape all of them. For example:'
  id: totrans-438
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由于`--cpu-baseline`结合了所有隐含的特性，所以将启用隐含特性中支持的最大特性，而不是逃避所有特性。例如：
- en: ''
  id: totrans-439
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-440
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '`--cpu-dispatch` does not combain any of implied CPU features, so you must
    add them unless you want to disable one or all of them:'
  id: totrans-441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-dispatch`不结合任何隐含的CPU特性，因此除非您想要禁用其中一个或全部特性，否则必须添加它们：'
- en: '[PRE40]'
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '`--cpu-dispatch` escapes any specified baseline features and also escapes any
    features not supported by the target platform or compiler without raising fatal
    errors.'
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--cpu-dispatch`逃避任何指定的基线特性，同时也逃避目标平台或编译器不支持的任何特性，而不会引发致命错误。'
- en: Eventually, you should always check the final report through the build log to
    verify the enabled features. See [Build report](#opt-build-report) for more details.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，您应该始终通过构建日志检查最终报告以验证启用的特性。有关更多详细信息，请参阅[构建报告](#opt-build-report)。
- en: '## Platform differences'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '## 平台差异'
- en: Some exceptional conditions force us to link some features together when it
    come to certain compilers or architectures, resulting in the impossibility of
    building them separately.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些特殊情况下，当涉及到某些编译器或架构时，我们被迫将某些特性链接在一起，导致无法单独构建它们。
- en: 'These conditions can be divided into two parts, as follows:'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 这些条件可以分为两部分，如下所示：
- en: '**Architectural compatibility**'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '**架构兼容性**'
- en: 'The need to align certain CPU features that are assured to be supported by
    successive generations of the same architecture, some cases:'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 需要对某些CPU特性进行对齐，这些特性被保证在同一架构的连续几代中都会支持，一些情况如下：
- en: On ppc64le `VSX(ISA 2.06)` and `VSX2(ISA 2.07)` both imply one another since
    the first generation that supports little-endian mode is Power-8`(ISA 2.07)`
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在ppc64le上，`VSX(ISA 2.06)`和`VSX2(ISA 2.07)`互相隐含，因为第一代支持小端模式的是Power-8`(ISA 2.07)`
- en: On AArch64 `NEON NEON_FP16 NEON_VFPV4 ASIMD` implies each other since they are
    part of the hardware baseline.
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在AArch64上，`NEON NEON_FP16 NEON_VFPV4 ASIMD`互相隐含，因为它们是硬件基线的一部分。
- en: 'For example:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE41]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Note
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Please take a deep look at [Supported Features](#opt-supported-features), in
    order to determine the features that imply one another.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 请仔细查看[支持的特性](#opt-supported-features)，以确定互相隐含的特性。
- en: '**Compilation compatibility**'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: '**编译兼容性**'
- en: Some compilers don’t provide independent support for all CPU features. For instance
    **Intel**’s compiler doesn’t provide separated flags for `AVX2` and `FMA3`, it
    makes sense since all Intel CPUs that comes with `AVX2` also support `FMA3`, but
    this approach is incompatible with other **x86** CPUs from **AMD** or **VIA**.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 一些编译器不提供对所有CPU特性的独立支持。例如，**英特尔**的编译器不为`AVX2`和`FMA3`提供单独的标志，这是有道理的，因为所有带有`AVX2`的英特尔CPU也支持`FMA3`，但这种方法与其他**x86**
    CPU（如**AMD**或**VIA**）不兼容。
- en: 'For example:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE42]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The following tables only show the differences imposed by some compilers from
    the general context that been shown in the [Supported Features](#opt-supported-features)
    tables:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格仅显示一些编译器对[支持特性](#opt-supported-features)表中显示的一般上下文施加的差异：
- en: Note
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: Features names with strikeout represent the unsupported CPU features.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 带有删除线的特性名称代表不支持的 CPU 特性。
- en: On x86::Intel Compiler
  id: totrans-463
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 x86::Intel 编译器上
- en: '| Name | Implies | Gathers |'
  id: totrans-464
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 暗示 | 收集 |'
- en: '| --- | --- | --- |'
  id: totrans-465
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
  id: totrans-466
  prefs: []
  type: TYPE_TB
  zh: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
- en: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
  id: totrans-467
  prefs: []
  type: TYPE_TB
  zh: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
- en: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    |  |'
  id: totrans-468
  prefs: []
  type: TYPE_TB
  zh: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    |  |'
- en: '| XOP | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
  zh: '| XOP | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
- en: '| FMA4 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
  id: totrans-470
  prefs: []
  type: TYPE_TB
  zh: '| FMA4 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
- en: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL | AVX512FP16 |'
  id: totrans-471
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL AVX512FP16 |'
- en: On x86::Microsoft Visual C/C++
  id: totrans-472
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 x86::Microsoft Visual C/C++ 上
- en: '| Name | Implies | Gathers |'
  id: totrans-473
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 暗示 | 收集 |'
- en: '| --- | --- | --- |'
  id: totrans-474
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
  id: totrans-475
  prefs: []
  type: TYPE_TB
  zh: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
- en: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
  id: totrans-476
  prefs: []
  type: TYPE_TB
  zh: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
- en: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    AVX512_SKX |  |'
  id: totrans-477
  prefs: []
  type: TYPE_TB
  zh: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    AVX512_SKX |  |'
- en: '| AVX512CD | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512_SKX |  |'
  id: totrans-478
  prefs: []
  type: TYPE_TB
  zh: '| AVX512CD | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512_SKX |  |'
- en: '| AVX512_KNL | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD | AVX512ER AVX512PF |'
  id: totrans-479
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_KNL | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512ER AVX512PF |'
- en: '| AVX512_KNM | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_KNL | AVX5124FMAPS AVX5124VNNIW AVX512VPOPCNTDQ |'
  id: totrans-480
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_KNM | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_KNL AVX5124FMAPS AVX5124VNNIW AVX512VPOPCNTDQ |'
- en: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL | AVX512FP16 |'
  id: totrans-481
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL AVX512FP16 |'
- en: On x86::Intel Compiler
  id: totrans-482
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 x86::Intel 编译器上
- en: '| Name | Implies | Gathers |'
  id: totrans-483
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 暗示 | 收集 |'
- en: '| --- | --- | --- |'
  id: totrans-484
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
  id: totrans-485
  prefs: []
  type: TYPE_TB
  zh: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
- en: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
  id: totrans-486
  prefs: []
  type: TYPE_TB
  zh: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
- en: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    |  |'
  id: totrans-487
  prefs: []
  type: TYPE_TB
  zh: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    |  |'
- en: '| XOP | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
  id: totrans-488
  prefs: []
  type: TYPE_TB
  zh: '| XOP | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
- en: '| FMA4 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
  id: totrans-489
  prefs: []
  type: TYPE_TB
  zh: '| FMA4 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX |  |'
- en: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL | AVX512FP16 |'
  id: totrans-490
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL AVX512FP16 |'
- en: On x86::Microsoft Visual C/C++
  id: totrans-491
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 x86::Microsoft Visual C/C++ 上
- en: '| Name | Implies | Gathers |'
  id: totrans-492
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 暗示 | 收集 |'
- en: '| --- | --- | --- |'
  id: totrans-493
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
  id: totrans-494
  prefs: []
  type: TYPE_TB
  zh: '| FMA3 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C AVX2 |  |'
- en: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
  id: totrans-495
  prefs: []
  type: TYPE_TB
  zh: '| AVX2 | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 |  |'
- en: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    AVX512_SKX |  |'
  id: totrans-496
  prefs: []
  type: TYPE_TB
  zh: '| AVX512F | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512CD
    AVX512_SKX |  |'
- en: '| AVX512CD | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512_SKX |  |'
  id: totrans-497
  prefs: []
  type: TYPE_TB
  zh: '| AVX512CD | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512_SKX |  |'
- en: '| AVX512_KNL | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD | AVX512ER AVX512PF |'
  id: totrans-498
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_KNL | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512ER AVX512PF |'
- en: '| AVX512_KNM | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_KNL | AVX5124FMAPS AVX5124VNNIW AVX512VPOPCNTDQ |'
  id: totrans-499
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_KNM | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX5124FMAPS AVX5124VNNIW AVX512VPOPCNTDQ |'
- en: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL | AVX512FP16 |'
  id: totrans-500
  prefs: []
  type: TYPE_TB
  zh: '| AVX512_SPR | SSE SSE2 SSE3 SSSE3 SSE41 POPCNT SSE42 AVX F16C FMA3 AVX2 AVX512F
    AVX512CD AVX512_SKX AVX512_CLX AVX512_CNL AVX512_ICL AVX512FP16 |'
- en: '## Build report'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '## 构建报告'
- en: In most cases, the CPU build options do not produce any fatal errors that lead
    to hanging the build. Most of the errors that may appear in the build log serve
    as heavy warnings due to the lack of some expected CPU features by the compiler.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，CPU构建选项不会产生导致构建挂起的致命错误。在构建日志中可能出现的大多数错误都是由于编译器缺少某些预期的CPU功能而产生的严重警告。
- en: So we strongly recommend checking the final report log, to be aware of what
    kind of CPU features are enabled and what are not.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们强烈建议检查最终报告日志，了解启用了哪些CPU功能以及哪些没有。
- en: 'You can find the final report of CPU optimizations at the end of the build
    log, and here is how it looks on x86_64/gcc:'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在构建日志的末尾找到CPU优化的最终报告，以下是在x86_64/gcc上的展示方式：
- en: '[PRE43]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'There is a separate report for each of `build_ext` and `build_clib` that includes
    several sections, and each section has several values, representing the following:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`build_ext`和`build_clib`中的每个部分都有一个单独的报告，每个部分都有几个值，表示以下内容：
- en: '**Platform**:'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台**:'
- en: 'Architecture: The architecture name of target CPU. It should be one of `x86`,
    `x64`, `ppc64`, `ppc64le`, `armhf`, `aarch64`, `s390x` or `unknown`.'
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构：目标CPU的架构名称。应该是`x86`、`x64`、`ppc64`、`ppc64le`、`armhf`、`aarch64`、`s390x`或`unknown`中的一个。
- en: 'Compiler: The compiler name. It should be one of gcc, clang, msvc, icc, iccw
    or unix-like.'
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译器：编译器名称。应该是gcc、clang、msvc、icc、iccw或类Unix的其中一个。
- en: '**CPU baseline**:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '**CPU基线**:'
- en: 'Requested: The specific features and options to `--cpu-baseline` as-is.'
  id: totrans-511
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求：特定的`--cpu-baseline`功能和选项不变。
- en: 'Enabled: The final set of enabled CPU features.'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已启用：最终启用的CPU功能集。
- en: 'Flags: The compiler flags that were used to all NumPy *C/C++* sources during
    the compilation except for temporary sources that have been used for generating
    the binary objects of dispatched features.'
  id: totrans-513
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标志：用于编译所有NumPy *C/C++*源文件的编译器标志，除了用于生成分派功能的二进制对象的临时源文件。
- en: 'Extra checks: list of internal checks that activate certain functionality or
    intrinsics related to the enabled features, useful for debugging when it comes
    to developing SIMD kernels.'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 额外检查：激活与启用功能相关的某些功能或内部检查的列表，对于开发SIMD内核时进行调试非常有用。
- en: '**CPU dispatch**:'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '**CPU分派**:'
- en: 'Requested: The specific features and options to `--cpu-dispatch` as-is.'
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求：特定的`--cpu-dispatch`功能和选项不变。
- en: 'Enabled: The final set of enabled CPU features.'
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已启用：最终启用的CPU功能集。
- en: 'Generated: At the beginning of the next row of this property, the features
    for which optimizations have been generated are shown in the form of several sections
    with similar properties explained as follows:'
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成的：在此属性的下一行开头，显示已生成优化的功能，以几个类似属性的部分形式显示，解释如下：
- en: 'One or multiple dispatched feature: The implied CPU features.'
  id: totrans-519
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个或多个分派的功能：隐含的CPU功能。
- en: 'Flags: The compiler flags that been used for these features.'
  id: totrans-520
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标志：用于这些功能的编译器标志。
- en: 'Extra checks: Similar to the baseline but for these dispatched features.'
  id: totrans-521
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 额外检查：类似于基线，但适用于这些分派功能。
- en: 'Detect: Set of CPU features that need be detected in runtime in order to execute
    the generated optimizations.'
  id: totrans-522
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测：需要在运行时检测的CPU功能集，以执行生成的优化。
- en: The lines that come after the above property and end with a ‘:’ on a separate
    line, represent the paths of c/c++ sources that define the generated optimizations.
  id: totrans-523
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在上述属性之后以及以单独一行的‘:’结尾的行代表定义生成优化的c/c++源文件的路径。
- en: '## Runtime dispatch'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '## 运行时分派'
- en: 'Importing NumPy triggers a scan of the available CPU features from the set
    of dispatchable features. This can be further restricted by setting the environment
    variable `NPY_DISABLE_CPU_FEATURES` to a comma-, tab-, or space-separated list
    of features to disable. This will raise an error if parsing fails or if the feature
    was not enabled. For instance, on `x86_64` this will disable `AVX2` and `FMA3`:'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 导入NumPy会触发从可分派功能集中扫描可用CPU功能。这可以通过将环境变量`NPY_DISABLE_CPU_FEATURES`设置为以逗号、制表符或空格分隔的功能列表来进一步限制。如果解析失败或未启用该功能，将引发错误。例如，在`x86_64`上，这将禁用`AVX2`和`FMA3`：
- en: '[PRE44]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: If the feature is not available, a warning will be emitted.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 如果该功能不可用，将发出警告。
