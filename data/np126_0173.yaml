- en: numpy.dtype
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.dtype
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.dtype.html](https://numpy.org/doc/1.26/reference/generated/numpy.dtype.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.dtype.html](https://numpy.org/doc/1.26/reference/generated/numpy.dtype.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Create a data type object.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个数据类型对象。
- en: A numpy array is homogeneous, and contains elements described by a dtype object.
    A dtype object can be constructed from different combinations of fundamental numeric
    types.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一个numpy数组是同质的，并包含由dtype对象描述的元素。dtype对象可以由不同组合的基本数值类型构建。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**dtype**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**'
- en: Object to be converted to a data type object.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要转换为数据类型对象的对象。
- en: '**align**bool, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**align**bool，可选'
- en: Add padding to the fields to match what a C compiler would output for a similar
    C-struct. Can be `True` only if *obj* is a dictionary or a comma-separated string.
    If a struct dtype is being created, this also sets a sticky alignment flag `isalignedstruct`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为字段添加填充，以匹配类似C结构的C编译器输出。只有当*obj*是字典或逗号分隔的字符串时才能为`True`。如果正在创建结构dtype，这也会设置一个粘性对齐标志`isalignedstruct`。
- en: '**copy**bool, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**copy**bool，可选'
- en: Make a new copy of the data-type object. If `False`, the result may just be
    a reference to a built-in data-type object.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 制作数据类型对象的新副本。如果`False`，结果可能只是对内置数据类型对象的引用。
- en: '**metadata**dict, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**metadata**dict，可选'
- en: An optional dictionary with dtype metadata.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可选的带有dtype元数据的字典。
- en: See also
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`result_type`](numpy.result_type.html#numpy.result_type "numpy.result_type")'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[`result_type`](numpy.result_type.html#numpy.result_type "numpy.result_type")'
- en: Examples
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Using array-scalar type:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数组标量类型：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Structured type, one field name ‘f1’, containing int16:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 结构化类型，一个名为‘f1’的字段，包含int16：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Structured type, one field named ‘f1’, in itself containing a structured type
    with one field:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 结构化类型，一个名为‘f1’的字段，本身包含一个具有一个字段的结构化类型：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Structured type, two fields: the first field contains an unsigned int, the
    second an int32:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 结构化类型，两个字段：第一个字段包含一个无符号整数，第二个字段包含一个int32：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Using array-protocol type strings:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数组协议类型字符串：
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Using comma-separated field formats. The shape is (2,3):'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用逗号分隔的字段格式。形状为(2,3)：
- en: '[PRE6]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Using tuples. `int` is a fixed type, 3 the field’s shape. `void` is a flexible
    type, here of size 10:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用元组。`int`是一个固定类型，3是字段的形状。`void`是一个灵活的类型，在这里大小为10：
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Subdivide `int16` into 2 `int8`’s, called x and y. 0 and 1 are the offsets
    in bytes:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 将`int16`细分为2个`int8`，称为x和y。0和1是字节偏移量：
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Using dictionaries. Two fields named ‘gender’ and ‘age’:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用字典。两个名为‘gender’和‘age’的字段：
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Offsets in bytes, here 0 and 25:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 字节偏移，这里为0和25：
- en: '[PRE10]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Attributes:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '[`alignment`](numpy.dtype.alignment.html#numpy.dtype.alignment "numpy.dtype.alignment")'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[`alignment`](numpy.dtype.alignment.html#numpy.dtype.alignment "numpy.dtype.alignment")'
- en: The required alignment (bytes) of this data-type according to the compiler.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 根据编译器的要求对此数据类型的对齐（字节）。
- en: '[`base`](numpy.dtype.base.html#numpy.dtype.base "numpy.dtype.base")'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`base`](numpy.dtype.base.html#numpy.dtype.base "numpy.dtype.base")'
- en: Returns dtype for the base element of the subarrays, regardless of their dimension
    or shape.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 返回子数组的基本元素的dtype，而不考虑它们的维度或形状。
- en: '[`byteorder`](numpy.dtype.byteorder.html#numpy.dtype.byteorder "numpy.dtype.byteorder")'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[`byteorder`](numpy.dtype.byteorder.html#numpy.dtype.byteorder "numpy.dtype.byteorder")'
- en: A character indicating the byte-order of this data-type object.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 表示此数据类型对象的字节顺序的字符。
- en: '[`char`](../routines.char.html#module-numpy.char "numpy.char")'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`char`](../routines.char.html#module-numpy.char "numpy.char")'
- en: A unique character code for each of the 21 different built-in types.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 21种不同内置类型的每种的唯一字符代码。
- en: '[`descr`](numpy.dtype.descr.html#numpy.dtype.descr "numpy.dtype.descr")'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[`descr`](numpy.dtype.descr.html#numpy.dtype.descr "numpy.dtype.descr")'
- en: '*__array_interface__* description of the data-type.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*__array_interface__* 数据类型的描述。'
- en: '[`fields`](numpy.dtype.fields.html#numpy.dtype.fields "numpy.dtype.fields")'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fields`](numpy.dtype.fields.html#numpy.dtype.fields "numpy.dtype.fields")'
- en: Dictionary of named fields defined for this data type, or `None`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '为此数据类型定义的命名字段的字典，或`None`。 '
- en: '[`flags`](numpy.dtype.flags.html#numpy.dtype.flags "numpy.dtype.flags")'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[`flags`](numpy.dtype.flags.html#numpy.dtype.flags "numpy.dtype.flags")'
- en: Bit-flags describing how this data type is to be interpreted.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 描述数据类型如何解释的位标志。
- en: '[`hasobject`](numpy.dtype.hasobject.html#numpy.dtype.hasobject "numpy.dtype.hasobject")'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[`hasobject`](numpy.dtype.hasobject.html#numpy.dtype.hasobject "numpy.dtype.hasobject")'
- en: Boolean indicating whether this dtype contains any reference-counted objects
    in any fields or sub-dtypes.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值，指示此dtype是否在任何字段或子dtype中包含任何引用计数对象。
- en: '[`isalignedstruct`](numpy.dtype.isalignedstruct.html#numpy.dtype.isalignedstruct
    "numpy.dtype.isalignedstruct")'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[`isalignedstruct`](numpy.dtype.isalignedstruct.html#numpy.dtype.isalignedstruct
    "numpy.dtype.isalignedstruct")'
- en: Boolean indicating whether the dtype is a struct which maintains field alignment.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ���尔值，指示dtype是否为保持字段对齐的结构体。
- en: '[`isbuiltin`](numpy.dtype.isbuiltin.html#numpy.dtype.isbuiltin "numpy.dtype.isbuiltin")'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[`isbuiltin`](numpy.dtype.isbuiltin.html#numpy.dtype.isbuiltin "numpy.dtype.isbuiltin")'
- en: Integer indicating how this dtype relates to the built-in dtypes.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 指示此dtype与内置dtype的关系的整数。
- en: '[`isnative`](numpy.dtype.isnative.html#numpy.dtype.isnative "numpy.dtype.isnative")'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[`isnative`](numpy.dtype.isnative.html#numpy.dtype.isnative "numpy.dtype.isnative")'
- en: Boolean indicating whether the byte order of this dtype is native to the platform.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值，指示此dtype的字节顺序是否为平台本机的。
- en: '[`itemsize`](numpy.dtype.itemsize.html#numpy.dtype.itemsize "numpy.dtype.itemsize")'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[`itemsize`](numpy.dtype.itemsize.html#numpy.dtype.itemsize "numpy.dtype.itemsize")'
- en: The element size of this data-type object.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 此数据类型对象的元素大小。
- en: '[`kind`](numpy.dtype.kind.html#numpy.dtype.kind "numpy.dtype.kind")'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[`kind`](numpy.dtype.kind.html#numpy.dtype.kind "numpy.dtype.kind")'
- en: A character code (one of ‘biufcmMOSUV’) identifying the general kind of data.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一个字符代码（‘biufcmMOSUV’之一），用于标识数据的一般类型。
- en: '[`metadata`](numpy.dtype.metadata.html#numpy.dtype.metadata "numpy.dtype.metadata")'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[`metadata`](numpy.dtype.metadata.html#numpy.dtype.metadata "numpy.dtype.metadata")'
- en: Either `None` or a readonly dictionary of metadata (mappingproxy).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要么为`None`，要么为只读元数据字典（mappingproxy）。
- en: '[`name`](numpy.dtype.name.html#numpy.dtype.name "numpy.dtype.name")'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[`name`](numpy.dtype.name.html#numpy.dtype.name "numpy.dtype.name")'
- en: A bit-width name for this data-type.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 用于此数据类型的位宽名称。
- en: '[`names`](numpy.dtype.names.html#numpy.dtype.names "numpy.dtype.names")'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[`names`](numpy.dtype.names.html#numpy.dtype.names "numpy.dtype.names")'
- en: Ordered list of field names, or `None` if there are no fields.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 字段名称的有序列表，如果没有字段则为`None`。
- en: '[`ndim`](numpy.dtype.ndim.html#numpy.dtype.ndim "numpy.dtype.ndim")'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ndim`](numpy.dtype.ndim.html#numpy.dtype.ndim "numpy.dtype.ndim")'
- en: Number of dimensions of the sub-array if this data type describes a sub-array,
    and `0` otherwise.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此数据类型描述一个子数组，则为子数组的维数，否则为`0`。
- en: '[`num`](numpy.dtype.num.html#numpy.dtype.num "numpy.dtype.num")'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[`num`](numpy.dtype.num.html#numpy.dtype.num "numpy.dtype.num")'
- en: A unique number for each of the 21 different built-in types.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 21种不同内置类型中的每一种的唯一编号。
- en: '[`shape`](numpy.shape.html#numpy.shape "numpy.shape")'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[`shape`](numpy.shape.html#numpy.shape "numpy.shape")'
- en: Shape tuple of the sub-array if this data type describes a sub-array, and `()`
    otherwise.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此数据类型描述一个子数组，则为子数组的形状元组，否则为`()`。
- en: '[`str`](numpy.dtype.str.html#numpy.dtype.str "numpy.dtype.str")'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[`str`](numpy.dtype.str.html#numpy.dtype.str "numpy.dtype.str")'
- en: The array-protocol typestring of this data-type object.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此数据类型对象的数组协议类型字符串。
- en: '[`subdtype`](numpy.dtype.subdtype.html#numpy.dtype.subdtype "numpy.dtype.subdtype")'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[`subdtype`](numpy.dtype.subdtype.html#numpy.dtype.subdtype "numpy.dtype.subdtype")'
- en: Tuple `(item_dtype, shape)` if this [`dtype`](#numpy.dtype "numpy.dtype") describes
    a sub-array, and None otherwise.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此[`dtype`](#numpy.dtype "numpy.dtype")描述一个子数组，则为元组`(item_dtype, shape)`，否则为`None`。
- en: '**type**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**type**'
- en: Methods
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`newbyteorder`](numpy.dtype.newbyteorder.html#numpy.dtype.newbyteorder "numpy.dtype.newbyteorder")([new_order])
    | Return a new dtype with a different byte order. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`newbyteorder`](numpy.dtype.newbyteorder.html#numpy.dtype.newbyteorder "numpy.dtype.newbyteorder")([new_order])
    | 返回具有不同字节顺序的新dtype。 |'
