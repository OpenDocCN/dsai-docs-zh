- en: pandas.DataFrame.quantile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.quantile.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.quantile.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return values at the given quantile over requested axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**q**float or array-like, default 0.5 (50% quantile)'
  prefs: []
  type: TYPE_NORMAL
- en: Value between 0 <= q <= 1, the quantile(s) to compute.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Equals 0 or ‘index’ for row-wise, 1 or ‘columns’ for column-wise.
  prefs: []
  type: TYPE_NORMAL
- en: '**numeric_only**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Include only float, int or boolean data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 2.0.0: The default value of `numeric_only` is now `False`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**interpolation**{‘linear’, ‘lower’, ‘higher’, ‘midpoint’, ‘nearest’}'
  prefs: []
  type: TYPE_NORMAL
- en: 'This optional parameter specifies the interpolation method to use, when the
    desired quantile lies between two data points i and j:'
  prefs: []
  type: TYPE_NORMAL
- en: 'linear: i + (j - i) * fraction, where fraction is the fractional part of the
    index surrounded by i and j.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'lower: i.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'higher: j.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'nearest: i or j whichever is nearest.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'midpoint: (i + j) / 2.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**method**{‘single’, ‘table’}, default ‘single’'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to compute quantiles per-column (‘single’) or over all columns (‘table’).
    When ‘table’, the only allowed interpolation methods are ‘nearest’, ‘lower’, and
    ‘higher’.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: If `q` is an array, a DataFrame will be returned where the
  prefs: []
  type: TYPE_NORMAL
- en: index is `q`, the columns are the columns of self, and the values are the quantiles.
  prefs: []
  type: TYPE_NORMAL
- en: If `q` is a float, a Series will be returned where the
  prefs: []
  type: TYPE_NORMAL
- en: index is the columns of self and the values are the quantiles.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`core.window.rolling.Rolling.quantile`](pandas.core.window.rolling.Rolling.quantile.html#pandas.core.window.rolling.Rolling.quantile
    "pandas.core.window.rolling.Rolling.quantile")'
  prefs: []
  type: TYPE_NORMAL
- en: Rolling quantile.
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.percentile`](https://numpy.org/doc/stable/reference/generated/numpy.percentile.html#numpy.percentile
    "(in NumPy v1.26)")'
  prefs: []
  type: TYPE_NORMAL
- en: Numpy function to compute the percentile.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Specifying method=’table’ will compute the quantile over all columns.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Specifying numeric_only=False will also compute the quantile of datetime and
    timedelta data.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
