["```py\nnumpy.block(arrays)\n```", "```py\nAAAbb\nAAAbb\ncccDD \n```", "```py\nAAAbb\nAAAbb\ncDDDD \n```", "```py\nAAAbb\ncccbb\ncccDD \n```", "```py\n>>> A = np.eye(2) * 2\n>>> B = np.eye(3) * 3\n>>> np.block([\n...     [A,               np.zeros((2, 3))],\n...     [np.ones((3, 2)), B               ]\n... ])\narray([[2., 0., 0., 0., 0.],\n [0., 2., 0., 0., 0.],\n [1., 1., 3., 0., 0.],\n [1., 1., 0., 3., 0.],\n [1., 1., 0., 0., 3.]]) \n```", "```py\n>>> np.block([1, 2, 3])              # hstack([1, 2, 3])\narray([1, 2, 3]) \n```", "```py\n>>> a = np.array([1, 2, 3])\n>>> b = np.array([4, 5, 6])\n>>> np.block([a, b, 10])             # hstack([a, b, 10])\narray([ 1,  2,  3,  4,  5,  6, 10]) \n```", "```py\n>>> A = np.ones((2, 2), int)\n>>> B = 2 * A\n>>> np.block([A, B])                 # hstack([A, B])\narray([[1, 1, 2, 2],\n [1, 1, 2, 2]]) \n```", "```py\n>>> a = np.array([1, 2, 3])\n>>> b = np.array([4, 5, 6])\n>>> np.block([[a], [b]])             # vstack([a, b])\narray([[1, 2, 3],\n [4, 5, 6]]) \n```", "```py\n>>> A = np.ones((2, 2), int)\n>>> B = 2 * A\n>>> np.block([[A], [B]])             # vstack([A, B])\narray([[1, 1],\n [1, 1],\n [2, 2],\n [2, 2]]) \n```", "```py\n>>> a = np.array(0)\n>>> b = np.array([1])\n>>> np.block([a])                    # atleast_1d(a)\narray([0])\n>>> np.block([b])                    # atleast_1d(b)\narray([1]) \n```", "```py\n>>> np.block([[a]])                  # atleast_2d(a)\narray([[0]])\n>>> np.block([[b]])                  # atleast_2d(b)\narray([[1]]) \n```"]