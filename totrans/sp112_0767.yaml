- en: scipy.special.jv
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.jv.html#scipy.special.jv](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.jv.html#scipy.special.jv)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Bessel function of the first kind of real order and complex argument.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**v**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Order (float).
  prefs: []
  type: TYPE_NORMAL
- en: '**z**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Argument (float or complex).
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function values
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**J**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Value of the Bessel function, \(J_v(z)\).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`jve`](scipy.special.jve.html#scipy.special.jve "scipy.special.jve")'
  prefs: []
  type: TYPE_NORMAL
- en: \(J_v\) with leading exponential behavior stripped off.
  prefs: []
  type: TYPE_NORMAL
- en: '[`spherical_jn`](scipy.special.spherical_jn.html#scipy.special.spherical_jn
    "scipy.special.spherical_jn")'
  prefs: []
  type: TYPE_NORMAL
- en: spherical Bessel functions.
  prefs: []
  type: TYPE_NORMAL
- en: '[`j0`](scipy.special.j0.html#scipy.special.j0 "scipy.special.j0")'
  prefs: []
  type: TYPE_NORMAL
- en: faster version of this function for order 0.
  prefs: []
  type: TYPE_NORMAL
- en: '[`j1`](scipy.special.j1.html#scipy.special.j1 "scipy.special.j1")'
  prefs: []
  type: TYPE_NORMAL
- en: faster version of this function for order 1.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For positive *v* values, the computation is carried out using the AMOS [[1]](#r58d7d7948fa7-1)
    *zbesj* routine, which exploits the connection to the modified Bessel function
    \(I_v\),
  prefs: []
  type: TYPE_NORMAL
- en: \[ \begin{align}\begin{aligned}J_v(z) = \exp(v\pi\imath/2) I_v(-\imath z)\qquad
    (\Im z > 0)\\J_v(z) = \exp(-v\pi\imath/2) I_v(\imath z)\qquad (\Im z < 0)\end{aligned}\end{align}
    \]
  prefs: []
  type: TYPE_NORMAL
- en: For negative *v* values the formula,
  prefs: []
  type: TYPE_NORMAL
- en: \[J_{-v}(z) = J_v(z) \cos(\pi v) - Y_v(z) \sin(\pi v)\]
  prefs: []
  type: TYPE_NORMAL
- en: is used, where \(Y_v(z)\) is the Bessel function of the second kind, computed
    using the AMOS routine *zbesy*. Note that the second term is exactly zero for
    integer *v*; to improve accuracy the second term is explicitly omitted for *v*
    values such that *v = floor(v)*.
  prefs: []
  type: TYPE_NORMAL
- en: Not to be confused with the spherical Bessel functions (see [`spherical_jn`](scipy.special.spherical_jn.html#scipy.special.spherical_jn
    "scipy.special.spherical_jn")).
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Donald E. Amos, “AMOS, A Portable Package for Bessel Functions of a Complex
    Argument and Nonnegative Order”, [http://netlib.org/amos/](http://netlib.org/amos/)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Evaluate the function of order 0 at one point.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the function at one point for different orders.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The evaluation for different orders can be carried out in one call by providing
    a list or NumPy array as argument for the *v* parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the function at several points for order 0 by providing an array for
    *z*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'If *z* is an array, the order parameter *v* must be broadcastable to the correct
    shape if different orders shall be computed in one call. To calculate the orders
    0 and 1 for an 1D array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Plot the functions of order 0 to 3 from -10 to 10.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-jv-1.png](../Images/e03a432dbd5c5560fca2ea55bdfe1c65.png)'
  prefs: []
  type: TYPE_IMG
