["```py\nclass scipy.interpolate.RBFInterpolator(y, d, neighbors=None, smoothing=0.0, kernel='thin_plate_spline', epsilon=None, degree=None)\n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy.interpolate import RBFInterpolator\n>>> from scipy.stats.qmc import Halton \n```", "```py\n>>> rng = np.random.default_rng()\n>>> xobs = 2*Halton(2, seed=rng).random(100) - 1\n>>> yobs = np.sum(xobs, axis=1)*np.exp(-6*np.sum(xobs**2, axis=1)) \n```", "```py\n>>> xgrid = np.mgrid[-1:1:50j, -1:1:50j]\n>>> xflat = xgrid.reshape(2, -1).T\n>>> yflat = RBFInterpolator(xobs, yobs)(xflat)\n>>> ygrid = yflat.reshape(50, 50) \n```", "```py\n>>> fig, ax = plt.subplots()\n>>> ax.pcolormesh(*xgrid, ygrid, vmin=-0.25, vmax=0.25, shading='gouraud')\n>>> p = ax.scatter(*xobs.T, c=yobs, s=50, ec='k', vmin=-0.25, vmax=0.25)\n>>> fig.colorbar(p)\n>>> plt.show() \n```"]