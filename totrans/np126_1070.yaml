- en: System configuration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统配置
- en: 原文：[https://numpy.org/doc/1.26/reference/c-api/config.html](https://numpy.org/doc/1.26/reference/c-api/config.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/c-api/config.html](https://numpy.org/doc/1.26/reference/c-api/config.html)
- en: When NumPy is built, information about system configuration is recorded, and
    is made available for extension modules using NumPy’s C API. These are mostly
    defined in `numpyconfig.h` (included in `ndarrayobject.h`). The public symbols
    are prefixed by `NPY_*`. NumPy also offers some functions for querying information
    about the platform in use.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当构建NumPy时，将记录有关系统配置的信息，并且通过使用NumPy的C API的扩展模块提供。这些信息主要在 `numpyconfig.h` 中定义（包含在
    `ndarrayobject.h` 中）。公共符号以 `NPY_*` 为前缀。NumPy还提供了一些用于查询正在使用的平台信息的功能。
- en: For private use, NumPy also constructs a `config.h` in the NumPy include directory,
    which is not exported by NumPy (that is a python extension which use the numpy
    C API will not see those symbols), to avoid namespace pollution.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了私有使用，NumPy还在NumPy包含目录中构建了一个 `config.h`，该文件不被NumPy导出（使用NumPy C API的Python扩展将看不到这些符号），以避免命名空间污染。
- en: Data type sizes
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据类型大小
- en: The `NPY_SIZEOF_{CTYPE}` constants are defined so that sizeof information is
    available to the pre-processor.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_SIZEOF_{CTYPE}`常量被定义为使大小信息可供预处理器使用。'
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: sizeof(short)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`short`的大小'
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: sizeof(int)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`int`的大小'
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: sizeof(long)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`long`的大小'
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: sizeof(longlong) where longlong is defined appropriately on the platform.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在此平台上适当定义的 `longlong` 的大小。
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: sizeof(float)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`float`的大小'
- en: '[PRE6]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: sizeof(double)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`double`的大小'
- en: '[PRE7]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: sizeof(longdouble)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`longdouble`的大小'
- en: '[PRE9]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Size of a pointer on this platform (sizeof(void *))
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在此平台的指针大小（`void *`的大小）
- en: Platform information
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平台信息
- en: '[PRE11]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: New in version 1.3.0.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.3.0版本中新增。
- en: CPU architecture of the platform; only one of the above is defined.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 平台的CPU架构；上述之一被定义。
- en: Defined in `numpy/npy_cpu.h`
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `numpy/npy_cpu.h` 中定义
- en: '[PRE20]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: New in version 1.3.0.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.3.0版本中新增。
- en: Portable alternatives to the `endian.h` macros of GNU Libc. If big endian, [`NPY_BYTE_ORDER`](#c.NPY_BYTE_ORDER
    "NPY_BYTE_ORDER") == [`NPY_BIG_ENDIAN`](#c.NPY_BIG_ENDIAN "NPY_BIG_ENDIAN"), and
    similarly for little endian architectures.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: GNU Libc的`endian.h`宏的便携替代方法。 如果是大端序，[`NPY_BYTE_ORDER`](#c.NPY_BYTE_ORDER "NPY_BYTE_ORDER")
    == [`NPY_BIG_ENDIAN`](#c.NPY_BIG_ENDIAN "NPY_BIG_ENDIAN")，对于小端序的架构也是类似。
- en: Defined in `numpy/npy_endian.h`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `numpy/npy_endian.h` 中定义。
- en: '[PRE23]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: New in version 1.3.0.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.3.0版本中新增。
- en: Returns the endianness of the current platform. One of [`NPY_CPU_BIG`](#c.PyArray_GetEndianness.NPY_CPU_BIG
    "NPY_CPU_BIG"), [`NPY_CPU_LITTLE`](#c.PyArray_GetEndianness.NPY_CPU_LITTLE "NPY_CPU_LITTLE"),
    or [`NPY_CPU_UNKNOWN_ENDIAN`](#c.PyArray_GetEndianness.NPY_CPU_UNKNOWN_ENDIAN
    "NPY_CPU_UNKNOWN_ENDIAN").
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 返回当前平台的字节序。其中之一是[`NPY_CPU_BIG`](#c.PyArray_GetEndianness.NPY_CPU_BIG "NPY_CPU_BIG")，[`NPY_CPU_LITTLE`](#c.PyArray_GetEndianness.NPY_CPU_LITTLE
    "NPY_CPU_LITTLE")，或[`NPY_CPU_UNKNOWN_ENDIAN`](#c.PyArray_GetEndianness.NPY_CPU_UNKNOWN_ENDIAN
    "NPY_CPU_UNKNOWN_ENDIAN")。
- en: '[PRE24]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Compiler directives
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编译器指令
- en: '[PRE27]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Data type sizes
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据类型大小
- en: The `NPY_SIZEOF_{CTYPE}` constants are defined so that sizeof information is
    available to the pre-processor.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`NPY_SIZEOF_{CTYPE}`常量被定义为使大小信息可供预处理器���用。'
- en: '[PRE30]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: sizeof(short)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`short`的大小'
- en: '[PRE31]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: sizeof(int)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`int`的大小'
- en: '[PRE32]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: sizeof(long)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`long`的大小'
- en: '[PRE33]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: sizeof(longlong) where longlong is defined appropriately on the platform.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在此平台上适当定义的 `longlong` 的大小。
- en: '[PRE34]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: sizeof(float)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`float`的大小'
- en: '[PRE36]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: sizeof(double)
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`double`的大小'
- en: '[PRE37]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: sizeof(longdouble)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`longdouble`的大小'
- en: '[PRE39]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Size of a pointer on this platform (sizeof(void *))
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在此平台的指针大小（`void *`的大小）
- en: Platform information
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平台信息
- en: '[PRE41]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: New in version 1.3.0.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.3.0版本中新增。
- en: CPU architecture of the platform; only one of the above is defined.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 平台的CPU架构；上述之一被定义。
- en: Defined in `numpy/npy_cpu.h`
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `numpy/npy_cpu.h` 中定义
- en: '[PRE50]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: New in version 1.3.0.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.3.0版本中新增。
- en: Portable alternatives to the `endian.h` macros of GNU Libc. If big endian, [`NPY_BYTE_ORDER`](#c.NPY_BYTE_ORDER
    "NPY_BYTE_ORDER") == [`NPY_BIG_ENDIAN`](#c.NPY_BIG_ENDIAN "NPY_BIG_ENDIAN"), and
    similarly for little endian architectures.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: GNU Libc的`endian.h`宏的便携替代方法。 如果是大端序，[`NPY_BYTE_ORDER`](#c.NPY_BYTE_ORDER "NPY_BYTE_ORDER")
    == [`NPY_BIG_ENDIAN`](#c.NPY_BIG_ENDIAN "NPY_BIG_ENDIAN")，对于小端序的架构也是类似。
- en: Defined in `numpy/npy_endian.h`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `numpy/npy_endian.h` 中定义。
- en: '[PRE53]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: New in version 1.3.0.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.3.0版本中新增。
- en: Returns the endianness of the current platform. One of [`NPY_CPU_BIG`](#c.PyArray_GetEndianness.NPY_CPU_BIG
    "NPY_CPU_BIG"), [`NPY_CPU_LITTLE`](#c.PyArray_GetEndianness.NPY_CPU_LITTLE "NPY_CPU_LITTLE"),
    or [`NPY_CPU_UNKNOWN_ENDIAN`](#c.PyArray_GetEndianness.NPY_CPU_UNKNOWN_ENDIAN
    "NPY_CPU_UNKNOWN_ENDIAN").
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 返回当前平台的字节序。其中之一是[`NPY_CPU_BIG`](#c.PyArray_GetEndianness.NPY_CPU_BIG "NPY_CPU_BIG")，[`NPY_CPU_LITTLE`](#c.PyArray_GetEndianness.NPY_CPU_LITTLE
    "NPY_CPU_LITTLE")，或[`NPY_CPU_UNKNOWN_ENDIAN`](#c.PyArray_GetEndianness.NPY_CPU_UNKNOWN_ENDIAN
    "NPY_CPU_UNKNOWN_ENDIAN")。
- en: '[PRE54]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Compiler directives
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编译器指令
- en: '[PRE57]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
