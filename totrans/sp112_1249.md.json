["```py\nscipy.stats.skellam = <scipy.stats._discrete_distns.skellam_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import skellam\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> mu1, mu2 = 15, 8\n>>> mean, var, skew, kurt = skellam.stats(mu1, mu2, moments='mvsk') \n```", "```py\n>>> x = np.arange(skellam.ppf(0.01, mu1, mu2),\n...               skellam.ppf(0.99, mu1, mu2))\n>>> ax.plot(x, skellam.pmf(x, mu1, mu2), 'bo', ms=8, label='skellam pmf')\n>>> ax.vlines(x, 0, skellam.pmf(x, mu1, mu2), colors='b', lw=5, alpha=0.5) \n```", "```py\n>>> rv = skellam(mu1, mu2)\n>>> ax.vlines(x, 0, rv.pmf(x), colors='k', linestyles='-', lw=1,\n...         label='frozen pmf')\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```", "```py\n>>> prob = skellam.cdf(x, mu1, mu2)\n>>> np.allclose(x, skellam.ppf(prob, mu1, mu2))\nTrue \n```", "```py\n>>> r = skellam.rvs(mu1, mu2, size=1000) \n```"]