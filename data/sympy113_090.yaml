- en: Diophantine
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 丢番图
- en: Original text：[https://docs.sympy.org/latest/modules/solvers/diophantine.html](https://docs.sympy.org/latest/modules/solvers/diophantine.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.sympy.org/latest/modules/solvers/diophantine.html](https://docs.sympy.org/latest/modules/solvers/diophantine.html)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For a beginner-friendly guide focused on solving Diophantine equations, refer
    to [Solve a Diophantine Equation Algebraically](../../guides/solving/solve-diophantine-equation.html#solving-guide-diophantine).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于初学者的指南，重点在解决丢番图方程上，请参阅 [代数解丢番图方程](../../guides/solving/solve-diophantine-equation.html#solving-guide-diophantine)。
- en: Diophantine equations
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 丢番图方程
- en: The word “Diophantine” comes with the name Diophantus, a mathematician lived
    in the great city of Alexandria sometime around 250 AD. Often referred to as the
    “father of Algebra”, Diophantus in his famous work “Arithmetica” presented 150
    problems that marked the early beginnings of number theory, the field of study
    about integers and their properties. Diophantine equations play a central and
    an important part in number theory.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: “丢番图”一词源自于数学家丢番奴，他大约生活在公元250年左右的亚历山大大城市。他在其著作《算术》中提出了150个问题，标志着数论的早期发展，即关于整数及其性质的研究领域。丢番图方程在数论中起着核心和重要的作用。
- en: We call a “Diophantine equation” to an equation of the form, \(f(x_1, x_2, \ldots
    x_n) = 0\) where \(n \geq 2\) and \(x_1, x_2, \ldots x_n\) are integer variables.
    If we can find \(n\) integers \(a_1, a_2, \ldots a_n\) such that \(x_1 = a_1,
    x_2 = a_2, \ldots x_n = a_n\) satisfies the above equation, we say that the equation
    is solvable. You can read more about Diophantine equations in [[1]](#id5) and
    [[2]](#id6).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们称“丢番图方程”为形如 \(f(x_1, x_2, \ldots x_n) = 0\) 的方程，其中 \(n \geq 2\) 且 \(x_1, x_2,
    \ldots x_n\) 是整数变量。如果我们能找到 \(n\) 个整数 \(a_1, a_2, \ldots a_n\) 使得 \(x_1 = a_1,
    x_2 = a_2, \ldots x_n = a_n\) 满足上述方程，则称该方程可解。您可以在 [[1]](#id5) 和 [[2]](#id6) 中了解更多关于丢番图方程的信息。
- en: Currently, following five types of Diophantine equations can be solved using
    [`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine "sympy.solvers.diophantine.diophantine.diophantine")
    and other helper functions of the Diophantine module.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，[`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine "sympy.solvers.diophantine.diophantine.diophantine")
    及其它丢番图模块的辅助函数可以解决以下五种类型的丢番图方程。
- en: 'Linear Diophantine equations: \(a_1x_1 + a_2x_2 + \ldots + a_nx_n = b\).'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性丢番图方程：\(a_1x_1 + a_2x_2 + \ldots + a_nx_n = b\).
- en: 'General binary quadratic equation: \(ax^2 + bxy + cy^2 + dx + ey + f = 0\)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般二元二次方程：\(ax^2 + bxy + cy^2 + dx + ey + f = 0\)
- en: 'Homogeneous ternary quadratic equation: \(ax^2 + by^2 + cz^2 + dxy + eyz +
    fzx = 0\)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 齐次三元二次方程：\(ax^2 + by^2 + cz^2 + dxy + eyz + fzx = 0\)
- en: 'Extended Pythagorean equation: \(a_{1}x_{1}^2 + a_{2}x_{2}^2 + \ldots + a_{n}x_{n}^2
    = a_{n+1}x_{n+1}^2\)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展勾股定理方程：\(a_{1}x_{1}^2 + a_{2}x_{2}^2 + \ldots + a_{n}x_{n}^2 = a_{n+1}x_{n+1}^2\)
- en: 'General sum of squares: \(x_{1}^2 + x_{2}^2 + \ldots + x_{n}^2 = k\)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般平方和：\(x_{1}^2 + x_{2}^2 + \ldots + x_{n}^2 = k\)
- en: Module structure
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模块结构
- en: This module contains [`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") and helper functions that
    are needed to solve certain Diophantine equations. It’s structured in the following
    manner.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个模块包含 [`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") 函数及其它辅助函数，用于解决特定的丢番图方程。其结构如下所示。
- en: '[`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine "sympy.solvers.diophantine.diophantine.diophantine")'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine "sympy.solvers.diophantine.diophantine.diophantine")'
- en: '[`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve "sympy.solvers.diophantine.diophantine.diop_solve")'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve "sympy.solvers.diophantine.diophantine.diop_solve")'
- en: '[`classify_diop()`](#sympy.solvers.diophantine.diophantine.classify_diop "sympy.solvers.diophantine.diophantine.classify_diop")'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`classify_diop()`](#sympy.solvers.diophantine.diophantine.classify_diop "sympy.solvers.diophantine.diophantine.classify_diop")'
- en: '[`diop_linear()`](#sympy.solvers.diophantine.diophantine.diop_linear "sympy.solvers.diophantine.diophantine.diop_linear")'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diop_linear()`](#sympy.solvers.diophantine.diophantine.diop_linear "sympy.solvers.diophantine.diophantine.diop_linear")'
- en: '[`diop_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_quadratic
    "sympy.solvers.diophantine.diophantine.diop_quadratic")'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diop_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_quadratic
    "sympy.solvers.diophantine.diophantine.diop_quadratic")'
- en: '[`diop_ternary_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic")'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diop_ternary_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic")'
- en: '[`diop_ternary_quadratic_normal()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic_normal
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic_normal")'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diop_ternary_quadratic_normal()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic_normal
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic_normal")'
- en: '[`diop_general_pythagorean()`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean")'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diop_general_pythagorean()`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean")'
- en: '[`diop_general_sum_of_squares()`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares")'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diop_general_sum_of_squares()`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares")'
- en: '[`diop_general_sum_of_even_powers()`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_even_powers
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_even_powers")'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`diop_general_sum_of_even_powers()`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_even_powers
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_even_powers")'
- en: '[`merge_solution()`](#sympy.solvers.diophantine.diophantine.merge_solution
    "sympy.solvers.diophantine.diophantine.merge_solution")'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`merge_solution()`](#sympy.solvers.diophantine.diophantine.merge_solution
    "sympy.solvers.diophantine.diophantine.merge_solution")'
- en: When an equation is given to [`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine"), it factors the equation(if
    possible) and solves the equation given by each factor by calling [`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve") separately. Then all the results
    are combined using [`merge_solution()`](#sympy.solvers.diophantine.diophantine.merge_solution
    "sympy.solvers.diophantine.diophantine.merge_solution").
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当方程被传递给[`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine")时，它会因式分解该方程（如果可能），并通过分别调用[`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve")解决每个因子给出的方程。然后，所有结果都使用[`merge_solution()`](#sympy.solvers.diophantine.diophantine.merge_solution
    "sympy.solvers.diophantine.diophantine.merge_solution")组合起来。
- en: '[`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve "sympy.solvers.diophantine.diophantine.diop_solve")
    internally uses [`classify_diop()`](#sympy.solvers.diophantine.diophantine.classify_diop
    "sympy.solvers.diophantine.diophantine.classify_diop") to find the type of the
    equation(and some other details) given to it and then calls the appropriate solver
    function based on the type returned. For example, if [`classify_diop()`](#sympy.solvers.diophantine.diophantine.classify_diop
    "sympy.solvers.diophantine.diophantine.classify_diop") returned “linear” as the
    type of the equation, then [`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve") calls [`diop_linear()`](#sympy.solvers.diophantine.diophantine.diop_linear
    "sympy.solvers.diophantine.diophantine.diop_linear") to solve the equation.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve "sympy.solvers.diophantine.diophantine.diop_solve")在内部使用[`classify_diop()`](#sympy.solvers.diophantine.diophantine.classify_diop
    "sympy.solvers.diophantine.diophantine.classify_diop")来找到给定给它的方程的类型（以及其他一些细节），然后根据返回的类型调用适当的求解器函数。例如，如果[`classify_diop()`](#sympy.solvers.diophantine.diophantine.classify_diop
    "sympy.solvers.diophantine.diophantine.classify_diop")返回方程的类型为“线性”，那么[`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve")会调用[`diop_linear()`](#sympy.solvers.diophantine.diophantine.diop_linear
    "sympy.solvers.diophantine.diophantine.diop_linear")来解决该方程。'
- en: Each of the functions, [`diop_linear()`](#sympy.solvers.diophantine.diophantine.diop_linear
    "sympy.solvers.diophantine.diophantine.diop_linear"), [`diop_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_quadratic
    "sympy.solvers.diophantine.diophantine.diop_quadratic"), [`diop_ternary_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic"), [`diop_general_pythagorean()`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean") and [`diop_general_sum_of_squares()`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares") solves a
    specific type of equations and the type can be easily guessed by it’s name.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 每个函数，[`diop_linear()`](#sympy.solvers.diophantine.diophantine.diop_linear "sympy.solvers.diophantine.diophantine.diop_linear"),
    [`diop_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_quadratic "sympy.solvers.diophantine.diophantine.diop_quadratic"),
    [`diop_ternary_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic"), [`diop_general_pythagorean()`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean") 和 [`diop_general_sum_of_squares()`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares") 都解决特定类型的方程，根据名称可以轻易猜出类型。
- en: Apart from these functions, there are a considerable number of other functions
    in the “Diophantine Module” and all of them are listed under User functions and
    Internal functions.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些函数外，“Diophantine Module”中还有大量其他函数，所有这些函数都列在用户函数和内部函数下。
- en: Tutorial
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 教程
- en: First, let’s import the highest API of the Diophantine module.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们导入丢番图模块的最高级 API。
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Before we start solving the equations, we need to define the variables.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始解决方程之前，我们需要定义变量。
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Let’s start by solving the easiest type of Diophantine equations, i.e. linear
    Diophantine equations. Let’s solve \(2x + 3y = 5\). Note that although we write
    the equation in the above form, when we input the equation to any of the functions
    in Diophantine module, it needs to be in the form \(eq = 0\).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从解决最简单类型的丢番图方程开始，即线性丢番图方程。让我们解决 \(2x + 3y = 5\)。请注意，尽管我们以上述形式编写方程，但当我们将方程输入到丢番图模块中的任何函数时，它需要是
    \(eq = 0\) 的形式。
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that stepping one more level below the highest API, we can solve the very
    same equation by calling [`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve").
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，再往下一级，我们可以通过调用 [`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve") 解决完全相同的方程。
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that it returns a tuple rather than a set. [`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") always return a set of tuples.
    But [`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve "sympy.solvers.diophantine.diophantine.diop_solve")
    may return a single tuple or a set of tuples depending on the type of the equation
    given.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，它返回的是元组而不是集合。[`diophantine()`](#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") 总是返回一组元组。但是，[`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve") 可能根据给定方程的类型返回单个元组或一组元组。
- en: We can also solve this equation by calling [`diop_linear()`](#sympy.solvers.diophantine.diophantine.diop_linear
    "sympy.solvers.diophantine.diophantine.diop_linear"), which is what [`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve") calls internally.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过调用 [`diop_linear()`](#sympy.solvers.diophantine.diophantine.diop_linear
    "sympy.solvers.diophantine.diophantine.diop_linear") 来解决这个方程，这是 [`diop_solve()`](#sympy.solvers.diophantine.diophantine.diop_solve
    "sympy.solvers.diophantine.diophantine.diop_solve") 内部调用的函数。
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If the given equation has no solutions then the outputs will look like below.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果给定方程没有解，则输出如下所示。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Note that except for the highest level API, in case of no solutions, a tuple
    of \(None\) are returned. Size of the tuple is the same as the number of variables.
    Also, one can specifically set the parameter to be used in the solutions by passing
    a customized parameter. Consider the following example:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，除了最高级 API 外，如果没有解决方案，则返回一个 `None` 元组。元组的大小与变量数相同。此外，可以通过传递定制参数来设置解决方案中要使用的参数。考虑以下示例：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For linear Diophantine equations, the customized parameter is the prefix used
    for each free variable in the solution. Consider the following example:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对于线性丢番图方程，解决方案中每个自由变量的前缀都是定制参数。考虑以下示例：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In the solution above, m_0 and m_1 are independent free variables.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述解中，\(m_0\) 和 \(m_1\) 是独立的自由变量。
- en: Please note that for the moment, users can set the parameter only for linear
    Diophantine equations and binary quadratic equations.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，目前用户只能为线性丢番图方程和二元二次方程设置参数。
- en: Let’s try solving a binary quadratic equation which is an equation with two
    variables and has a degree of two. Before trying to solve these equations, an
    idea about various cases associated with the equation would help a lot. Please
    refer [[3]](#id7) and [[4]](#id8) for detailed analysis of different cases and
    the nature of the solutions. Let us define \(\Delta = b^2 - 4ac\) w.r.t. the binary
    quadratic \(ax^2 + bxy + cy^2 + dx + ey + f = 0\).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试解决一个二元二次方程，这是一个具有两个变量且二次度的方程。在尝试解决这些方程之前，了解与方程相关的各种情况会很有帮助。请参考[[3]](#id7)和[[4]](#id8)以获取关于不同情况和解的详细分析。让我们定义
    \(\Delta = b^2 - 4ac\) 关于二元二次方程 \(ax^2 + bxy + cy^2 + dx + ey + f = 0\)。
- en: When \(\Delta < 0\), there are either no solutions or only a finite number of
    solutions.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当 \(\Delta < 0\) 时，要么没有解，要么只有有限个解。
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In the above equation \(\Delta = (-4)^2 - 4*1*8 = -16\) and hence only a finite
    number of solutions exist.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述方程中 \(\Delta = (-4)^2 - 4*1*8 = -16\)，因此只有有限个解存在。
- en: When \(\Delta = 0\) we might have either no solutions or parameterized solutions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当 \(\Delta = 0\) 时，我们可能没有解，或者有参数化的解。
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The most interesting case is when \(\Delta > 0\) and it is not a perfect square.
    In this case, the equation has either no solutions or an infinite number of solutions.
    Consider the below cases where \(\Delta = 8\).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 最有趣的情况是当 \(\Delta > 0\) 且不是完全平方时。在这种情况下，方程要么没有解，要么有无限多个解。考虑下面 \(\Delta = 8\)
    的情况。
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Here \(n\) is an integer. Although x_n and y_n may not look like integers, substituting
    in specific values for n (and simplifying) shows that they are. For example consider
    the following example where we set n equal to 9.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 \(n\) 是整数。虽然 \(x_n\) 和 \(y_n\) 看起来可能不像整数，但是通过设置特定的 \(n\) 值（并简化）可以证明它们是整数。例如，考虑下面的例子，我们将
    \(n\) 设为 9。
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Any binary quadratic of the form \(ax^2 + bxy + cy^2 + dx + ey + f = 0\) can
    be transformed to an equivalent form \(X^2 - DY^2 = N\).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 任何形如 \(ax^2 + bxy + cy^2 + dx + ey + f = 0\) 的二元二次方程都可以转换成等价形式 \(X^2 - DY^2
    = N\)。
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: So, the above equation is equivalent to the equation \(X^2 - 5Y^2 = 920\) after
    a linear transformation. If we want to find the linear transformation, we can
    use [`transformation_to_DN()`](#sympy.solvers.diophantine.diophantine.transformation_to_DN
    "sympy.solvers.diophantine.diophantine.transformation_to_DN")
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，上述方程在线性变换后等价于方程 \(X^2 - 5Y^2 = 920\)。如果我们想找到线性变换，我们可以使用 [`transformation_to_DN()`](#sympy.solvers.diophantine.diophantine.transformation_to_DN
    "sympy.solvers.diophantine.diophantine.transformation_to_DN")。
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Here A is a 2 X 2 matrix and B is a 2 X 1 matrix such that the transformation
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的 \(A\) 是一个 2 X 2 矩阵，\(B\) 是一个 2 X 1 矩阵，这样变换
- en: \[\begin{split}\begin{bmatrix} X\\Y \end{bmatrix} = A \begin{bmatrix} x\\y \end{bmatrix}
    + B\end{split}\]
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: \[\begin{split}\begin{bmatrix} X\\Y \end{bmatrix} = A \begin{bmatrix} x\\y \end{bmatrix}
    + B\end{split}\]
- en: gives the equation \(X^2 -5Y^2 = 920\). Values of \(A\) and \(B\) are as belows.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 给出方程 \(X^2 -5Y^2 = 920\)。\(A\) 和 \(B\) 的值如下。
- en: '[PRE14]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We can solve an equation of the form \(X^2 - DY^2 = N\) by passing \(D\) and
    \(N\) to [`diop_DN()`](#sympy.solvers.diophantine.diophantine.diop_DN "sympy.solvers.diophantine.diophantine.diop_DN")
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过将 \(D\) 和 \(N\) 传递给 [`diop_DN()`](#sympy.solvers.diophantine.diophantine.diop_DN
    "sympy.solvers.diophantine.diophantine.diop_DN") 来解决形如 \(X^2 - DY^2 = N\) 的方程。
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Unfortunately, our equation has no solution.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，我们的方程没有解。
- en: Now let’s turn to homogeneous ternary quadratic equations. These equations are
    of the form \(ax^2 + by^2 + cz^2 + dxy + eyz + fzx = 0\). These type of equations
    either have infinitely many solutions or no solutions (except the obvious solution
    (0, 0, 0))
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们转向齐次三元二次方程。这些方程的形式为 \(ax^2 + by^2 + cz^2 + dxy + eyz + fzx = 0\)。这类方程要么有无限多个解，要么没有解（除了显然的解（0,
    0, 0））。
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: If you are only interested in a base solution rather than the parameterized
    general solution (to be more precise, one of the general solutions), you can use
    [`diop_ternary_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic").
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只对基本解感兴趣，而不是参数化的一般解（更准确地说是一般解之一），您可以使用 [`diop_ternary_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic")。
- en: '[PRE17]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[`diop_ternary_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic") first converts
    the given equation to an equivalent equation of the form \(w^2 = AX^2 + BY^2\)
    and then it uses [`descent()`](#sympy.solvers.diophantine.diophantine.descent
    "sympy.solvers.diophantine.diophantine.descent") to solve the latter equation.
    You can refer to the docs of [`transformation_to_normal()`](#sympy.solvers.diophantine.diophantine.transformation_to_normal
    "sympy.solvers.diophantine.diophantine.transformation_to_normal") to find more
    on this. The equation \(w^2 = AX^2 + BY^2\) can be solved more easily by using
    the Aforementioned [`descent()`](#sympy.solvers.diophantine.diophantine.descent
    "sympy.solvers.diophantine.diophantine.descent").'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[`diop_ternary_quadratic()`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic") first converts
    the given equation to an equivalent equation of the form \(w^2 = AX^2 + BY^2\)
    and then it uses [`descent()`](#sympy.solvers.diophantine.diophantine.descent
    "sympy.solvers.diophantine.diophantine.descent") to solve the latter equation.
    You can refer to the docs of [`transformation_to_normal()`](#sympy.solvers.diophantine.diophantine.transformation_to_normal
    "sympy.solvers.diophantine.diophantine.transformation_to_normal") to find more
    on this. The equation \(w^2 = AX^2 + BY^2\) can be solved more easily by using
    the Aforementioned [`descent()`](#sympy.solvers.diophantine.diophantine.descent
    "sympy.solvers.diophantine.diophantine.descent").'
- en: '[PRE18]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Here the solution tuple is in the order (w, Y, Z)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Here the solution tuple is in the order (w, Y, Z)
- en: The extended Pythagorean equation, \(a_{1}x_{1}^2 + a_{2}x_{2}^2 + \ldots +
    a_{n}x_{n}^2 = a_{n+1}x_{n+1}^2\) and the general sum of squares equation, \(x_{1}^2
    + x_{2}^2 + \ldots + x_{n}^2 = k\) can also be solved using the Diophantine module.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: The extended Pythagorean equation, \(a_{1}x_{1}^2 + a_{2}x_{2}^2 + \ldots +
    a_{n}x_{n}^2 = a_{n+1}x_{n+1}^2\) and the general sum of squares equation, \(x_{1}^2
    + x_{2}^2 + \ldots + x_{n}^2 = k\) can also be solved using the Diophantine module.
- en: '[PRE19]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: function [`diop_general_pythagorean()`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean") can also be
    called directly to solve the same equation. Either you can call [`diop_general_pythagorean()`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean") or use the high
    level API. For the general sum of squares, this is also true, but one advantage
    of calling [`diop_general_sum_of_squares()`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares") is that you
    can control how many solutions are returned.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: function [`diop_general_pythagorean()`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean") can also be
    called directly to solve the same equation. Either you can call [`diop_general_pythagorean()`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean") or use the high
    level API. For the general sum of squares, this is also true, but one advantage
    of calling [`diop_general_sum_of_squares()`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares") is that you
    can control how many solutions are returned.
- en: '[PRE20]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The [`sum_of_squares()`](#sympy.solvers.diophantine.diophantine.sum_of_squares
    "sympy.solvers.diophantine.diophantine.sum_of_squares") routine will providean
    iterator that returns solutions and one may control whether the solutions contain
    zeros or not (and the solutions not containing zeros are returned first):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 'The [`sum_of_squares()`](#sympy.solvers.diophantine.diophantine.sum_of_squares
    "sympy.solvers.diophantine.diophantine.sum_of_squares") routine will providean
    iterator that returns solutions and one may control whether the solutions contain
    zeros or not (and the solutions not containing zeros are returned first):'
- en: '[PRE21]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Simple Eqyptian fractions can be found with the Diophantine module, too. For
    example, here are the ways that one might represent 1/2 as a sum of two unit fractions:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 'Simple Eqyptian fractions can be found with the Diophantine module, too. For
    example, here are the ways that one might represent 1/2 as a sum of two unit fractions:'
- en: '[PRE22]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: To get a more thorough understanding of the Diophantine module, please refer
    to the following blog.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: To get a more thorough understanding of the Diophantine module, please refer
    to the following blog.
- en: '[https://thilinaatsympy.wordpress.com/](https://thilinaatsympy.wordpress.com/)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://thilinaatsympy.wordpress.com/](https://thilinaatsympy.wordpress.com/)'
- en: References
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: References
- en: User Functions
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: User Functions
- en: 'This functions is imported into the global namespace with `from sympy import
    *`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 'This functions is imported into the global namespace with `from sympy import
    *`:'
- en: '[PRE23]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Simplify the solution procedure of diophantine equation `eq` by converting it
    into a product of terms which should equal zero.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Simplify the solution procedure of diophantine equation `eq` by converting it
    into a product of terms which should equal zero.
- en: Explanation
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Explanation
- en: For example, when solving, \(x^2 - y^2 = 0\) this is treated as \((x + y)(x
    - y) = 0\) and \(x + y = 0\) and \(x - y = 0\) are solved independently and combined.
    Each term is solved by calling `diop_solve()`. (Although it is possible to call
    `diop_solve()` directly, one must be careful to pass an equation in the correct
    form and to interpret the output correctly; `diophantine()` is the public-facing
    function to use in general.)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当解决 \(x^2 - y^2 = 0\) 时，这被视为 \((x + y)(x - y) = 0\)，分别解决 \(x + y = 0\) 和
    \(x - y = 0\)，然后合并。每个术语通过调用 `diop_solve()` 来解决。（虽然可以直接调用 `diop_solve()`，但必须小心传递正确形式的方程并正确解释输出；`diophantine()`
    是一般情况下使用的公共函数。）
- en: Output of `diophantine()` is a set of tuples. The elements of the tuple are
    the solutions for each variable in the equation and are arranged according to
    the alphabetic ordering of the variables. e.g. For an equation with two variables,
    \(a\) and \(b\), the first element of the tuple is the solution for \(a\) and
    the second for \(b\).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`diophantine()` 的输出是一组元组。元组的元素是方程中每个变量的解决方案，并按照变量的字母顺序排列。例如，对于两个变量 \(a\) 和
    \(b\) 的方程，元组的第一个元素是 \(a\) 的解，第二个是 \(b\) 的解。'
- en: Usage
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`diophantine(eq, t, syms)`: Solve the diophantine equation `eq`. `t` is the
    optional parameter to be used by `diop_solve()`. `syms` is an optional list of
    symbols which determines the order of the elements in the returned tuple.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`diophantine(eq, t, syms)`: 解决丢番图方程 `eq`。`t` 是可选的 `diop_solve()` 使用的参数。`syms`
    是一个可选的符号列表，确定返回元组中元素的顺序。'
- en: By default, only the base solution is returned. If `permute` is set to True
    then permutations of the base solution and/or permutations of the signs of the
    values will be returned when applicable.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，只返回基本解决方案。如果设置 `permute` 为 True，则在适用时将返回基本解决方案的排列组合和/或值符号的排列组合。
- en: Details
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 细节
- en: '`eq` should be an expression which is assumed to be zero. `t` is the parameter
    to be used in the solution.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`eq` 应为假设为零的表达式。`t` 是解决方案中使用的参数。'
- en: Examples
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE24]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: See also
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`diop_solve`](#sympy.solvers.diophantine.diophantine.diop_solve "sympy.solvers.diophantine.diophantine.diop_solve"),
    [`sympy.utilities.iterables.permute_signs`](../utilities/iterables.html#sympy.utilities.iterables.permute_signs
    "sympy.utilities.iterables.permute_signs"), [`sympy.utilities.iterables.signed_permutations`](../utilities/iterables.html#sympy.utilities.iterables.signed_permutations
    "sympy.utilities.iterables.signed_permutations")'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[解丢番图方程](#sympy.solvers.diophantine.diophantine.diop_solve "sympy.solvers.diophantine.diophantine.diop_solve"),
    [排列符号](../utilities/iterables.html#sympy.utilities.iterables.permute_signs "sympy.utilities.iterables.permute_signs"),
    [符号排列](../utilities/iterables.html#sympy.utilities.iterables.signed_permutations
    "sympy.utilities.iterables.signed_permutations")'
- en: 'And this function is imported with `from sympy.solvers.diophantine import *`:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 并且此函数通过 `from sympy.solvers.diophantine import *` 导入：
- en: '[PRE27]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Internal Functions
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内部函数
- en: These functions are intended for internal use in the Diophantine module.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数旨在用于丢番图模块的内部使用。
- en: '[PRE28]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Solves the diophantine equation `eq`.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 解决丢番图方程 `eq`。
- en: Explanation
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Unlike `diophantine()`, factoring of `eq` is not attempted. Uses `classify_diop()`
    to determine the type of the equation and calls the appropriate solver function.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `diophantine()` 不同，不尝试对 `eq` 进行因式分解。使用 `classify_diop()` 确定方程的类型并调用适当的解算函数。
- en: Use of `diophantine()` is recommended over other helper functions. `diop_solve()`
    can return either a set or a tuple depending on the nature of the equation.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐使用 `diophantine()` 而不是其他辅助函数。`diop_solve()` 可以根据方程的性质返回集合或元组。
- en: Usage
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`diop_solve(eq, t)`: Solve diophantine equation, `eq` using `t` as a parameter
    if needed.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`diop_solve(eq, t)`: 使用 `t` 作为参数解决丢番图方程 `eq`。'
- en: Details
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 细节
- en: '`eq` should be an expression which is assumed to be zero. `t` is a parameter
    to be used in the solution.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`eq` 应为假设为零的表达式。`t` 是解决方案中使用的参数。'
- en: Examples
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE29]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: See also
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`diophantine`](#sympy.solvers.diophantine.diophantine.diophantine "sympy.solvers.diophantine.diophantine.diophantine")'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[丢番图方程](#sympy.solvers.diophantine.diophantine.diophantine "sympy.solvers.diophantine.diophantine.diophantine")'
- en: '[PRE30]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Solves linear diophantine equations.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 解决线性丢番图方程。
- en: A linear diophantine equation is an equation of the form \(a_{1}x_{1} + a_{2}x_{2}
    + .. + a_{n}x_{n} = 0\) where \(a_{1}, a_{2}, ..a_{n}\) are integer constants
    and \(x_{1}, x_{2}, ..x_{n}\) are integer variables.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 线性丢番图方程是形如 \(a_{1}x_{1} + a_{2}x_{2} + .. + a_{n}x_{n} = 0\) 的方程，其中 \(a_{1},
    a_{2}, ..a_{n}\) 是整数常数，\(x_{1}, x_{2}, ..x_{n}\) 是整数变量。
- en: Usage
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`diop_linear(eq)`: Returns a tuple containing solutions to the diophantine
    equation `eq`. Values in the tuple is arranged in the same order as the sorted
    variables.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`diop_linear(eq)`: 返回一个包含丢番图方程 `eq` 的解的元组。元组中的值按排序后的变量顺序排列。'
- en: Details
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 详情
- en: '`eq` is a linear diophantine equation which is assumed to be zero. `param`
    is the parameter to be used in the solution.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`eq` 是假设为零的线性丢番图方程。`param` 是解中要使用的参数。'
- en: Examples
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE31]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Here x = -3*t_0 - 5 and y = -2*t_0 - 5
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 x = -3*t_0 - 5，y = -2*t_0 - 5
- en: '[PRE32]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: See also
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`diop_quadratic`](#sympy.solvers.diophantine.diophantine.diop_quadratic "sympy.solvers.diophantine.diophantine.diop_quadratic"),
    [`diop_ternary_quadratic`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic"), [`diop_general_pythagorean`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean"), [`diop_general_sum_of_squares`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares")'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[`diop_quadratic`](#sympy.solvers.diophantine.diophantine.diop_quadratic "sympy.solvers.diophantine.diophantine.diop_quadratic"),
    [`diop_ternary_quadratic`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic"), [`diop_general_pythagorean`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean"), [`diop_general_sum_of_squares`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares")'
- en: '[PRE33]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Return the base solution for the linear equation, \(ax + by = c\).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 返回线性方程 \(ax + by = c\) 的基础解。
- en: Explanation
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Used by `diop_linear()` to find the base solution of a linear Diophantine equation.
    If `t` is given then the parametrized solution is returned.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 由 `diop_linear()` 使用以找到线性丢番图方程的基础解。如果给定 `t`，则返回参数化解。
- en: Usage
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`base_solution_linear(c, a, b, t)`: `a`, `b`, `c` are coefficients in \(ax
    + by = c\) and `t` is the parameter to be used in the solution.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`base_solution_linear(c, a, b, t)`: `a`, `b`, `c` 是 \(ax + by = c\) 中的系数，`t`
    是解中要使用的参数。'
- en: Examples
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE34]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Solves quadratic diophantine equations.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 解决二次丢番图方程。
- en: i.e. equations of the form \(Ax^2 + Bxy + Cy^2 + Dx + Ey + F = 0\). Returns
    a set containing the tuples \((x, y)\) which contains the solutions. If there
    are no solutions then \((None, None)\) is returned.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 即形式为 \(Ax^2 + Bxy + Cy^2 + Dx + Ey + F = 0\) 的方程。返回包含元组 \((x, y)\) 的集合，包含解。如果没有解，则返回
    \((None, None)\)。
- en: Usage
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`diop_quadratic(eq, param)`: `eq` is a quadratic binary diophantine equation.
    `param` is used to indicate the parameter to be used in the solution.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`diop_quadratic(eq, param)`: `eq` 是二次二元丢番图方程。`param` 用于指示解中要使用的参数。'
- en: Details
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 详情
- en: '`eq` should be an expression which is assumed to be zero. `param` is a parameter
    to be used in the solution.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`eq` 应为假设为零的表达式。`param` 是解中要使用的参数。'
- en: Examples
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE36]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: See also
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`diop_linear`](#sympy.solvers.diophantine.diophantine.diop_linear "sympy.solvers.diophantine.diophantine.diop_linear"),
    [`diop_ternary_quadratic`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic"), [`diop_general_sum_of_squares`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares"), [`diop_general_pythagorean`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean")'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[`diop_linear`](#sympy.solvers.diophantine.diophantine.diop_linear "sympy.solvers.diophantine.diophantine.diop_linear"),
    [`diop_ternary_quadratic`](#sympy.solvers.diophantine.diophantine.diop_ternary_quadratic
    "sympy.solvers.diophantine.diophantine.diop_ternary_quadratic"), [`diop_general_sum_of_squares`](#sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares
    "sympy.solvers.diophantine.diophantine.diop_general_sum_of_squares"), [`diop_general_pythagorean`](#sympy.solvers.diophantine.diophantine.diop_general_pythagorean
    "sympy.solvers.diophantine.diophantine.diop_general_pythagorean")'
- en: References
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R858](#id9)]'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R858](#id9)]'
- en: 'Methods to solve Ax^2 + Bxy + Cy^2 + Dx + Ey + F = 0, [online], Available:
    [https://www.alpertron.com.ar/METHODS.HTM](https://www.alpertron.com.ar/METHODS.HTM)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方程 Ax^2 + Bxy + Cy^2 + Dx + Ey + F = 0 的方法，[在线]，可访问：[https://www.alpertron.com.ar/METHODS.HTM](https://www.alpertron.com.ar/METHODS.HTM)
- en: '[[R859](#id10)]'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R859](#id10)]'
- en: 'Solving the equation ax^2+ bxy + cy^2 + dx + ey + f= 0, [online], Available:
    [https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf](https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方程 ax^2+ bxy + cy^2 + dx + ey + f= 0，[在线]，可访问：[https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf](https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf)
- en: '[PRE37]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Solves the equation \(x^2 - Dy^2 = N\).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方程 \(x^2 - Dy^2 = N\)。
- en: Explanation
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Mainly concerned with the case \(D > 0, D\) is not a perfect square, which is
    the same as the generalized Pell equation. The LMM algorithm [[R860]](#r860) is
    used to solve this equation.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 主要关注\(D > 0\)且\(D\)不是完全平方数的情况，这与广义Pell方程相同。LMM算法[[R860]](#r860)用于解决此方程。
- en: Returns one solution tuple, (\(x, y)\) for each class of the solutions. Other
    solutions of the class can be constructed according to the values of `D` and `N`.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 对每个解类返回一个解元组(\(x, y\))。可以根据D和N的值构造该类的其他解。
- en: Usage
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`diop_DN(D, N, t)`: D and N are integers as in \(x^2 - Dy^2 = N\) and `t` is
    the parameter to be used in the solutions.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`diop_DN(D, N, t)`: D和N是方程\(x^2 - Dy^2 = N\)中的整数，`t`是解的参数。'
- en: Details
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 详情
- en: '`D` and `N` correspond to D and N in the equation. `t` is the parameter to
    be used in the solutions.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`D`和`N`对应于方程中的D和N。`t`是解的参数。'
- en: Examples
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE38]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The output can be interpreted as follows: There are three fundamental solutions
    to the equation \(x^2 - 13y^2 = -4\) given by (3, 1), (393, 109) and (36, 10).
    Each tuple is in the form (x, y), i.e. solution (3, 1) means that \(x = 3\) and
    \(y = 1\).'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 输出可以解释如下：方程\(x^2 - 13y^2 = -4\)有三个基本解，分别为(3, 1)，(393, 109)和(36, 10)。每个元组都是形如(x,
    y)的形式，即解(3, 1)意味着\(x = 3\)且\(y = 1\)。
- en: '[PRE39]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: See also
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`find_DN`](#sympy.solvers.diophantine.diophantine.find_DN "sympy.solvers.diophantine.diophantine.find_DN"),
    [`diop_bf_DN`](#sympy.solvers.diophantine.diophantine.diop_bf_DN "sympy.solvers.diophantine.diophantine.diop_bf_DN")'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '[`find_DN`](#sympy.solvers.diophantine.diophantine.find_DN "sympy.solvers.diophantine.diophantine.find_DN"),
    [`diop_bf_DN`](#sympy.solvers.diophantine.diophantine.diop_bf_DN "sympy.solvers.diophantine.diophantine.diop_bf_DN")'
- en: References
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[R860] ([1](#id11),[2](#id12))'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[R860] ([1](#id11),[2](#id12))'
- en: 'Solving the generalized Pell equation x**2 - D*y**2 = N, John P. Robertson,
    July 31, 2004, Pages 16 - 17\. [online], Available: [https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf](https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 解决广义Pell方程\(x^2 - D*y^2 = N\)，John P. Robertson，2004年7月31日，第16 - 17页。[在线]，可用：[https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf](https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf)
- en: '[PRE40]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Solves \(ax^2 + by^2 = m\) where \(\gcd(a, b) = 1 = gcd(a, m)\) and \(a, b >
    0\).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方程\(ax^2 + by^2 = m\)，其中\(\gcd(a, b) = 1 = gcd(a, m)\)，且\(a, b > 0\)。
- en: Explanation
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: Uses the algorithm due to Cornacchia. The method only finds primitive solutions,
    i.e. ones with \(\gcd(x, y) = 1\). So this method cannot be used to find the solutions
    of \(x^2 + y^2 = 20\) since the only solution to former is \((x, y) = (4, 2)\)
    and it is not primitive. When \(a = b\), only the solutions with \(x \leq y\)
    are found. For more details, see the References.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Cornacchia算法。该方法仅找到原始解，即满足\(\gcd(x, y) = 1\)的解。因此，该方法不能用于寻找方程\(x^2 + y^2 =
    20\)的解，因为前者的唯一解为\((x, y) = (4, 2)\)，且不是原始解。当\(a = b\)时，仅找到满足\(x \leq y\)的解。更多详细信息，请参见参考资料。
- en: Examples
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE41]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: See also
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.utilities.iterables.signed_permutations`](../utilities/iterables.html#sympy.utilities.iterables.signed_permutations
    "sympy.utilities.iterables.signed_permutations")'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.utilities.iterables.signed_permutations`](../utilities/iterables.html#sympy.utilities.iterables.signed_permutations
    "sympy.utilities.iterables.signed_permutations")'
- en: References
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R861](#id13)]'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R861](#id13)]'
- en: Nitaj, “L’algorithme de Cornacchia”
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nitaj，“L’algorithme de Cornacchia”
- en: '[[R862](#id14)]'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R862](#id14)]'
- en: 'Solving the diophantine equation ax**2 + by**2 = m by Cornacchia’s method,
    [online], Available: [http://www.numbertheory.org/php/cornacchia.html](http://www.numbertheory.org/php/cornacchia.html)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Cornacchia方法解决二次丢番图方程ax**2 + by**2 = m，[在线]，可用：[http://www.numbertheory.org/php/cornacchia.html](http://www.numbertheory.org/php/cornacchia.html)
- en: '[PRE42]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Uses brute force to solve the equation, \(x^2 - Dy^2 = N\).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 用暴力方法解决方程\(x^2 - Dy^2 = N\)。
- en: Explanation
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: Mainly concerned with the generalized Pell equation which is the case when \(D
    > 0, D\) is not a perfect square. For more information on the case refer [[R863]](#r863).
    Let \((t, u)\) be the minimal positive solution of the equation \(x^2 - Dy^2 =
    1\). Then this method requires \(\sqrt{\\frac{\mid N \mid (t \pm 1)}{2D}}\) to
    be small.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 主要关注广义Pell方程，即当\(D > 0\)且\(D\)不是完全平方数的情况。有关此情况的更多信息，请参考[[R863]](#r863)。设\((t,
    u)\)是方程\(x^2 - Dy^2 = 1\)的最小正解。然后，此方法要求\(\sqrt{\frac{\mid N \mid (t \pm 1)}{2D}}\)要很小。
- en: Usage
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`diop_bf_DN(D, N, t)`: `D` and `N` are coefficients in \(x^2 - Dy^2 = N\) and
    `t` is the parameter to be used in the solutions.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`diop_bf_DN(D, N, t)`: `D`和`N`是方程\(x^2 - Dy^2 = N\)中的系数，`t`是解的参数。'
- en: Details
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 详情
- en: '`D` and `N` correspond to D and N in the equation. `t` is the parameter to
    be used in the solutions.'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`D`和`N`对应于方程中的D和N。`t`是解的参数。'
- en: Examples
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE43]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: See also
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`diop_DN`](#sympy.solvers.diophantine.diophantine.diop_DN "sympy.solvers.diophantine.diophantine.diop_DN")'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '[`diop_DN`](#sympy.solvers.diophantine.diophantine.diop_DN "sympy.solvers.diophantine.diophantine.diop_DN")'
- en: References
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R863] ([1](#id15),[2](#id16))'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '[R863] ([1](#id15),[2](#id16))'
- en: Solving the generalized Pell equation x**2 - D*y**2 = N, John P. Robertson,
    July 31, 2004, Page 15\. [https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf](https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf)
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 解决广义 Pell 方程 \(x^2 - D*y^2 = N\)，John P. Robertson，2004 年 7 月 31 日，第 15 页。[https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf](https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf)
- en: '[PRE44]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: This function transforms general quadratic, \(ax^2 + bxy + cy^2 + dx + ey +
    f = 0\) to more easy to deal with \(X^2 - DY^2 = N\) form.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数将一般二次方程 \(ax^2 + bxy + cy^2 + dx + ey + f = 0\) 转换为更易处理的形式 \(X^2 - DY^2 =
    N\)。
- en: Explanation
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This is used to solve the general quadratic equation by transforming it to the
    latter form. Refer to [[R864]](#r864) for more detailed information on the transformation.
    This function returns a tuple (A, B) where A is a 2 X 2 matrix and B is a 2 X
    1 matrix such that,
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 这用于通过转换将一般二次方程解决为后一种形式。更详细的转换信息请参考[[R864]](#r864)。此函数返回一个元组 (A, B)，其中 A 是一个
    2 X 2 矩阵，B 是一个 2 X 1 矩阵，使得，
- en: Transpose([x y]) = A * Transpose([X Y]) + B
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: Transpose([x y]) = A * Transpose([X Y]) + B
- en: Usage
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`transformation_to_DN(eq)`: where `eq` is the quadratic to be transformed.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`transformation_to_DN(eq)`: 其中 `eq` 是要转换的二次方程。'
- en: Examples
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE45]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: A, B returned are such that Transpose((x y)) = A * Transpose((X Y)) + B. Substituting
    these values for \(x\) and \(y\) and a bit of simplifying work will give an equation
    of the form \(x^2 - Dy^2 = N\).
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的 A, B 满足 Transpose((x y)) = A * Transpose((X Y)) + B。将这些值代入 \(x\) 和 \(y\)
    并进行简化，得到形如 \(x^2 - Dy^2 = N\) 的方程。
- en: '[PRE46]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Next we will substitute these formulas for \(x\) and \(y\) and do `simplify()`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将这些公式代入 \(x\) 和 \(y\) 并执行 `simplify()`。
- en: '[PRE47]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: By multiplying the denominator appropriately, we can get a Pell equation in
    the standard form.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 通过适当地乘以分母，我们可以得到标准形式的 Pell 方程。
- en: '[PRE48]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: If only the final equation is needed, `find_DN()` can be used.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只需要最终方程，则可以使用 `find_DN()`。
- en: See also
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`find_DN`](#sympy.solvers.diophantine.diophantine.find_DN "sympy.solvers.diophantine.diophantine.find_DN")'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '[`find_DN`](#sympy.solvers.diophantine.diophantine.find_DN "sympy.solvers.diophantine.diophantine.find_DN")'
- en: References
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R864] ([1](#id17),[2](#id18))'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '[R864] ([1](#id17),[2](#id18))'
- en: Solving the equation ax^2 + bxy + cy^2 + dx + ey + f = 0, John P.Robertson,
    May 8, 2003, Page 7 - 11. [https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf](https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf)
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 解方程 \(ax^2 + bxy + cy^2 + dx + ey + f = 0\)，John P.Robertson，2003 年 5 月 8 日，第
    7 - 11 页。[https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf](https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf)
- en: '[PRE49]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Returns the transformation Matrix that converts a general ternary quadratic
    equation `eq` (\(ax^2 + by^2 + cz^2 + dxy + eyz + fxz\)) to a form without cross
    terms: \(ax^2 + by^2 + cz^2 = 0\). This is not used in solving ternary quadratics;
    it is only implemented for the sake of completeness.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 返回转换矩阵，将一般三元二次方程 `eq` (\(ax^2 + by^2 + cz^2 + dxy + eyz + fxz\)) 转换为没有交叉项的形式：\(ax^2
    + by^2 + cz^2 = 0\)。这不用于解决三元二次方程，仅仅是为了完整性而实现的。
- en: '[PRE50]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: This function returns a tuple, \((D, N)\) of the simplified form, \(x^2 - Dy^2
    = N\), corresponding to the general quadratic, \(ax^2 + bxy + cy^2 + dx + ey +
    f = 0\).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回简化形式的元组 \((D, N)\)，即 \(x^2 - Dy^2 = N\)，对应于一般二次方程 \(ax^2 + bxy + cy^2 +
    dx + ey + f = 0\)。
- en: Solving the general quadratic is then equivalent to solving the equation \(X^2
    - DY^2 = N\) and transforming the solutions by using the transformation matrices
    returned by `transformation_to_DN()`.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 解决一般二次方程等效于解决方程 \(X^2 - DY^2 = N\) 并通过使用 `transformation_to_DN()` 返回的转换矩阵转换解。
- en: Usage
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`find_DN(eq)`: where `eq` is the quadratic to be transformed.'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`find_DN(eq)`: 其中 `eq` 是要转换的二次方程。'
- en: Examples
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE51]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Interpretation of the output is that we get \(X^2 -13Y^2 = -884\) after transforming
    \(x^2 - 3xy - y^2 - 2y + 1\) using the transformation returned by `transformation_to_DN()`.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的解释是，我们通过使用 `transformation_to_DN()` 返回的转换来转换 \(x^2 - 3xy - y^2 - 2y + 1\)
    ，得到 \(X^2 -13Y^2 = -884\)。
- en: See also
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`transformation_to_DN`](#sympy.solvers.diophantine.diophantine.transformation_to_DN
    "sympy.solvers.diophantine.diophantine.transformation_to_DN")'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[`transformation_to_DN`](#sympy.solvers.diophantine.diophantine.transformation_to_DN
    "sympy.solvers.diophantine.diophantine.transformation_to_DN")'
- en: References
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R865](#id19)]'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R865](#id19)]'
- en: Solving the equation ax^2 + bxy + cy^2 + dx + ey + f = 0, John P.Robertson,
    May 8, 2003, Page 7 - 11. [https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf](https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf)
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方程 \(ax^2 + bxy + cy^2 + dx + ey + f = 0\)，John P.Robertson，2003年5月8日，第7 -
    11页。[https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf](https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf)
- en: '[PRE52]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Solves the general quadratic ternary form, \(ax^2 + by^2 + cz^2 + fxy + gyz
    + hxz = 0\).
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 解决一般的二次三元形式，\(ax^2 + by^2 + cz^2 + fxy + gyz + hxz = 0\)。
- en: Returns a tuple \((x, y, z)\) which is a base solution for the above equation.
    If there are no solutions, \((None, None, None)\) is returned.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个元组 \((x, y, z)\)，它是上述方程的一个基本解。如果没有解，则返回 \((None, None, None)\)。
- en: Usage
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`diop_ternary_quadratic(eq)`: Return a tuple containing a basic solution to
    `eq`.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '`diop_ternary_quadratic(eq)`: 返回一个包含 `eq` 的基本解的元组。'
- en: Details
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 详情
- en: '`eq` should be an homogeneous expression of degree two in three variables and
    it is assumed to be zero.'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '`eq` 应该是三个变量中二次齐次表达式，假定其为零。'
- en: Examples
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE53]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Returns an integer \(c\) s.t. \(a = c^2k, \ c,k \in Z\). Here \(k\) is square
    free. \(a\) can be given as an integer or a dictionary of factors.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 返回整数 \(c\)，使得 \(a = c^2k, \ c,k \in Z\)。这里 \(k\) 是无平方因子。\(a\) 可以作为整数或因子字典给出。
- en: Examples
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE55]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: See also
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.ntheory.factor_.core`](../ntheory.html#sympy.ntheory.factor_.core "sympy.ntheory.factor_.core")'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.ntheory.factor_.core`](../ntheory.html#sympy.ntheory.factor_.core "sympy.ntheory.factor_.core")'
- en: '[PRE56]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Returns a non-trivial solution, (x, y, z), to \(x^2 = Ay^2 + Bz^2\) using Lagrange’s
    descent method with lattice-reduction. \(A\) and \(B\) are assumed to be valid
    for such a solution to exist.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 使用拉格朗日下降法和格点约简，返回一个非平凡解\((x, y, z)\)，使得 \(x^2 = Ay^2 + Bz^2\)。这里假定 \(A\) 和 \(B\)
    是使这样的解存在的有效值。
- en: This is faster than the normal Lagrange’s descent algorithm because the Gaussian
    reduction is used.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法比普通的拉格朗日下降算法更快，因为使用了高斯约简。
- en: Examples
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE57]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: \((x, y, z) = (1, 0, 1)\) is a solution to the above equation.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: \((x, y, z) = (1, 0, 1)\) 是上述方程的一个解。
- en: '[PRE58]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: References
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R866](#id20)]'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R866](#id20)]'
- en: Cremona, J. E., Rusin, D. (2003). Efficient Solution of Rational Conics. Mathematics
    of Computation, 72(243), 1417-1441. [https://doi.org/10.1090/S0025-5718-02-01480-1](https://doi.org/10.1090/S0025-5718-02-01480-1)
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: Cremona, J. E., Rusin, D. (2003). Rational Conics的有效解法。《计算数学》，72(243)，1417-1441。[https://doi.org/10.1090/S0025-5718-02-01480-1](https://doi.org/10.1090/S0025-5718-02-01480-1)
- en: '[PRE59]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Solves the general pythagorean equation, \(a_{1}^2x_{1}^2 + a_{2}^2x_{2}^2 +
    . . . + a_{n}^2x_{n}^2 - a_{n + 1}^2x_{n + 1}^2 = 0\).
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 解决一般的勾股方程，\(a_{1}^2x_{1}^2 + a_{2}^2x_{2}^2 + . . . + a_{n}^2x_{n}^2 - a_{n
    + 1}^2x_{n + 1}^2 = 0\)。
- en: Returns a tuple which contains a parametrized solution to the equation, sorted
    in the same order as the input variables.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个包含按输入变量相同顺序排序的参数化解的元组。
- en: Usage
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`diop_general_pythagorean(eq, param)`: where `eq` is a general pythagorean
    equation which is assumed to be zero and `param` is the base parameter used to
    construct other parameters by subscripting.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`diop_general_pythagorean(eq, param)`：这里 `eq` 是一个被假定为零的一般勾股方程，`param` 是用于构造其他参数的基础参数。'
- en: Examples
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE60]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Solves the equation \(x_{1}^2 + x_{2}^2 + . . . + x_{n}^2 - k = 0\).
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方程 \(x_{1}^2 + x_{2}^2 + . . . + x_{n}^2 - k = 0\)。
- en: Returns at most `limit` number of solutions.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 返回最多`limit`个解。
- en: Usage
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`general_sum_of_squares(eq, limit)` : Here `eq` is an expression which is assumed
    to be zero. Also, `eq` should be in the form, \(x_{1}^2 + x_{2}^2 + . . . + x_{n}^2
    - k = 0\).'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '`general_sum_of_squares(eq, limit)`：这里`eq`是一个被假定为零的表达式。同时，`eq`应该是这种形式，\(x_{1}^2
    + x_{2}^2 + . . . + x_{n}^2 - k = 0\)。'
- en: Details
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 详情
- en: When \(n = 3\) if \(k = 4^a(8m + 7)\) for some \(a, m \in Z\) then there will
    be no solutions. Refer to [[R867]](#r867) for more details.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 当 \(n = 3\) 时，如果 \(k = 4^a(8m + 7)\) 对某些 \(a, m \in Z\) 成立，则没有解。详见[[R867]](#r867)了解更多细节。
- en: Examples
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE62]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Reference
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R867](#id21)]'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R867](#id21)]'
- en: 'Representing an integer as a sum of three squares, [online], Available: [https://www.proofwiki.org/wiki/Integer_as_Sum_of_Three_Squares](https://www.proofwiki.org/wiki/Integer_as_Sum_of_Three_Squares)'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 代表一个整数作为三个平方和的和，[在线]，可参考：[https://www.proofwiki.org/wiki/Integer_as_Sum_of_Three_Squares](https://www.proofwiki.org/wiki/Integer_as_Sum_of_Three_Squares)
- en: '[PRE63]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Solves the equation \(x_{1}^e + x_{2}^e + . . . + x_{n}^e - k = 0\) where \(e\)
    is an even, integer power.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 解决形如 \(x_{1}^e + x_{2}^e + . . . + x_{n}^e - k = 0\) 的方程，其中 \(e\) 是偶数整数幂。
- en: Returns at most `limit` number of solutions.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 返回最多`limit`个解。
- en: Usage
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`general_sum_of_even_powers(eq, limit)` : Here `eq` is an expression which
    is assumed to be zero. Also, `eq` should be in the form, \(x_{1}^e + x_{2}^e +
    . . . + x_{n}^e - k = 0\).'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`general_sum_of_even_powers(eq, limit)`：这里 `eq` 是一个假设为零的表达式。此外，`eq` 应该是形如 \(x_{1}^e
    + x_{2}^e + . . . + x_{n}^e - k = 0\) 的形式。'
- en: Examples
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE64]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: See also
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`power_representation`](#sympy.solvers.diophantine.diophantine.power_representation
    "sympy.solvers.diophantine.diophantine.power_representation")'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '[`power_representation`](#sympy.solvers.diophantine.diophantine.power_representation
    "sympy.solvers.diophantine.diophantine.power_representation")'
- en: '[PRE65]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Returns a generator for finding k-tuples of integers, \((n_{1}, n_{2}, . . .
    n_{k})\), such that \(n = n_{1}^p + n_{2}^p + . . . n_{k}^p\).
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个生成器，用于找到整数 k 元组 \((n_{1}, n_{2}, . . . n_{k})\)，使得 \(n = n_{1}^p + n_{2}^p
    + . . . n_{k}^p\)。
- en: Usage
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`power_representation(n, p, k, zeros)`: Represent non-negative number `n` as
    a sum of `k` `p`th powers. If `zeros` is true, then the solutions is allowed to
    contain zeros.'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '`power_representation(n, p, k, zeros)`：将非负数 `n` 表示为 `k` 个 `p` 次幂的和。如果 `zeros`
    为 true，则允许解包含零。'
- en: Examples
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE66]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Represent 1729 as a sum of two cubes:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 将 1729 表示为两个立方体的和：
- en: '[PRE67]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'If the flag \(zeros\) is True, the solution may contain tuples with zeros;
    any such solutions will be generated after the solutions without zeros:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 如果标志 `zeros` 为 True，则解可能包含具有零的元组；在不含零的解之后生成这些解：
- en: '[PRE68]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'For even \(p\) the \(permute_sign\) function can be used to get all signed
    values:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 对于偶数 \(p\)，可以使用 \(permute_sign\) 函数来获取所有带符号的值：
- en: '[PRE69]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'All possible signed permutations can also be obtained:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以获取所有可能的带符号排列：
- en: '[PRE70]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Returns a generator that can be used to generate partitions of an integer \(n\).
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个生成器，用于生成整数 \(n\) 的分区。
- en: Explanation
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: A partition of \(n\) is a set of positive integers which add up to \(n\). For
    example, partitions of 3 are 3, 1 + 2, 1 + 1 + 1\. A partition is returned as
    a tuple. If `k` equals None, then all possible partitions are returned irrespective
    of their size, otherwise only the partitions of size `k` are returned. If the
    `zero` parameter is set to True then a suitable number of zeros are added at the
    end of every partition of size less than `k`.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: \(n\) 的一个分区是一组加起来等于 \(n\) 的正整数。例如，3 的分区有 3，1 + 2，1 + 1 + 1。分区以元组的形式返回。如果 `k`
    等于 None，则返回所有可能的分区，而不考虑其大小；否则只返回大小为 `k` 的分区。如果将 `zero` 参数设置为 True，则在每个小于 `k` 大小的分区末尾添加适当数量的零。
- en: '`zero` parameter is considered only if `k` is not None. When the partitions
    are over, the last \(next()\) call throws the `StopIteration` exception, so this
    function should always be used inside a try - except block.'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '`zero` 参数仅在 `k` 不为 None 时考虑。当分区结束时，最后的 \(next()\) 调用将引发 `StopIteration` 异常，因此应始终在
    try-except 块中使用此函数。'
- en: Details
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 细节
- en: '`partition(n, k)`: Here `n` is a positive integer and `k` is the size of the
    partition which is also positive integer.'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`partition(n, k)`：这里 `n` 是一个正整数，`k` 是分区的大小，也是正整数。'
- en: Examples
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE72]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Returns a 3-tuple \((a, b, c)\) such that \(a^2 + b^2 + c^2 = n\) and \(a, b,
    c \geq 0\).
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个 3-元组 \((a, b, c)\)，使得 \(a^2 + b^2 + c^2 = n\) 并且 \(a, b, c \geq 0\)。
- en: Returns None if \(n = 4^a(8m + 7)\) for some \(a, m \in \mathbb{Z}\). See [[R868]](#r868)
    for more details.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 \(n = 4^a(8m + 7)\) 对于某些 \(a, m \in \mathbb{Z}\)，则返回 None。详细信息请参见 [[R868]](#r868)。
- en: 'Parameters:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : Integer'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** ：整数'
- en: non-negative integer
  id: totrans-324
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 非负整数
- en: 'Returns:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(int, int, int) | None** : 3-tuple non-negative integers `(a, b, c)` satisfying
    `a**2 + b**2 + c**2 = n`.'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '**(int, int, int) | None** ：满足 `a**2 + b**2 + c**2 = n` 的三元组非负整数 `(a, b, c)`。'
- en: a,b,c are sorted in ascending order. `None` if no such `(a,b,c)`.
  id: totrans-327
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: a、b、c 按升序排列。如果没有这样的 `(a,b,c)`，则返回 `None`。
- en: 'Raises:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: '**ValueError**'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值错误**'
- en: If `n` is a negative integer
  id: totrans-330
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果 `n` 是负整数
- en: Examples
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE74]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: See also
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`power_representation`](#sympy.solvers.diophantine.diophantine.power_representation
    "sympy.solvers.diophantine.diophantine.power_representation")'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '[`power_representation`](#sympy.solvers.diophantine.diophantine.power_representation
    "sympy.solvers.diophantine.diophantine.power_representation")'
- en: '`sum_of_three_squares(n)` is one of the solutions output by `power_representation(n,
    2, 3, zeros=True)`'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '`sum_of_three_squares(n)` 是 `power_representation(n, 2, 3, zeros=True)` 输出的解之一。'
- en: References
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[R868] ([1](#id22),[2](#id23))'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '[R868] ([1](#id22),[2](#id23))'
- en: 'Representing a number as a sum of three squares, [online], Available: [https://schorn.ch/lagrange.html](https://schorn.ch/lagrange.html)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个数表示为三个平方的和，[在线]，可用：[https://schorn.ch/lagrange.html](https://schorn.ch/lagrange.html)
- en: '[PRE75]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Returns a 4-tuple \((a, b, c, d)\) such that \(a^2 + b^2 + c^2 + d^2 = n\).
    Here \(a, b, c, d \geq 0\).
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个 4-元组 \((a, b, c, d)\)，使得 \(a^2 + b^2 + c^2 + d^2 = n\)。这里 \(a, b, c, d
    \geq 0\)。
- en: 'Parameters:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**n** : Integer'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '**n** ：整数'
- en: non-negative integer
  id: totrans-343
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 非负整数
- en: 'Returns:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(int, int, int, int)** : 4-tuple non-negative integers `(a, b, c, d)` satisfying
    `a**2 + b**2 + c**2 + d**2 = n`.'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '**(int, int, int, int)**：满足 `a**2 + b**2 + c**2 + d**2 = n` 的 4-元组非负整数 `(a,
    b, c, d)`。'
- en: a,b,c,d are sorted in ascending order.
  id: totrans-346
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: a、b、c、d 按升序排列。
- en: 'Raises:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: '**ValueError**'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值错误**'
- en: If `n` is a negative integer
  id: totrans-349
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果 `n` 是负整数
- en: Examples
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE76]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: See also
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`power_representation`](#sympy.solvers.diophantine.diophantine.power_representation
    "sympy.solvers.diophantine.diophantine.power_representation")'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '[`power_representation`](#sympy.solvers.diophantine.diophantine.power_representation
    "sympy.solvers.diophantine.diophantine.power_representation")'
- en: '`sum_of_four_squares(n)` is one of the solutions output by `power_representation(n,
    2, 4, zeros=True)`'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '`sum_of_four_squares(n)` 是由 `power_representation(n, 2, 4, zeros=True)` 输出的解之一'
- en: References
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R869](#id24)]'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R869](#id24)]'
- en: 'Representing a number as a sum of four squares, [online], Available: [https://schorn.ch/lagrange.html](https://schorn.ch/lagrange.html)'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一个数作为四个平方的和，[在线]，可访问：[https://schorn.ch/lagrange.html](https://schorn.ch/lagrange.html)
- en: '[PRE77]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Returns a generator for finding k-tuples of integers, \((n_{1}, n_{2}, . . .
    n_{k})\), such that \(n = n_{1}^p + n_{2}^p + . . . n_{k}^p\).
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个生成器，用于查找 k-元组整数 \((n_{1}, n_{2}, . . . n_{k})\)，使得 \(n = n_{1}^p + n_{2}^p
    + . . . n_{k}^p\)。
- en: Usage
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 用法
- en: '`power_representation(n, p, k, zeros)`: Represent non-negative number `n` as
    a sum of `k` `p`th powers. If `zeros` is true, then the solutions is allowed to
    contain zeros.'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '`power_representation(n, p, k, zeros)`: 将非负数 `n` 表示为 `k` 个 `p` 次幂的和。如果 `zeros`
    为真，则允许解包含零。'
- en: Examples
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE78]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Represent 1729 as a sum of two cubes:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 将 1729 表示为两个立方体的和：
- en: '[PRE79]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'If the flag \(zeros\) is True, the solution may contain tuples with zeros;
    any such solutions will be generated after the solutions without zeros:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 如果标志 \(zeros\) 为 True，则解决方案可能包含带有零的元组；任何此类解决方案将在不带零的解决方案之后生成：
- en: '[PRE80]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'For even \(p\) the \(permute_sign\) function can be used to get all signed
    values:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 对于偶数 \( p \)，可以使用 \( permute\_sign \) 函数来获取所有符号化的值：
- en: '[PRE81]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'All possible signed permutations can also be obtained:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以获得所有可能的符号化排列：
- en: '[PRE82]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Return a generator that yields the k-tuples of nonnegative values, the squares
    of which sum to n. If zeros is False (default) then the solution will not contain
    zeros. The nonnegative elements of a tuple are sorted.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 返回生成器，产生非负值的 k-元组，其平方和为 n。如果 zeros 为 False（默认值），则解决方案不包含零。元组的非负元素已排序。
- en: If k == 1 and n is square, (n,) is returned.
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 k == 1 并且 n 是平方数，则返回 (n,)。
- en: If k == 2 then n can only be written as a sum of squares if every prime in the
    factorization of n that has the form 4*k + 3 has an even multiplicity. If n is
    prime then it can only be written as a sum of two squares if it is in the form
    4*k + 1.
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 k == 2，则仅当 n 在其因数分解中的每个形式为 4*k + 3 的素数具有偶重数时，n 才能被写成两个平方的和。如果 n 是素数，则仅当它为
    4*k + 1 形式时，才能将其写成两个平方的和。
- en: if k == 3 then n can be written as a sum of squares if it does not have the
    form 4**m*(8*k + 7).
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 k == 3，则只要 n 不具有 4**m*(8*k + 7) 的形式，n 就可以被写成平方的和。
- en: all integers can be written as the sum of 4 squares.
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有整数都可以写成 4 个平方的和。
- en: if k > 4 then n can be partitioned and each partition can be written as a sum
    of 4 squares; if n is not evenly divisible by 4 then n can be written as a sum
    of squares only if the an additional partition can be written as sum of squares.
    For example, if k = 6 then n is partitioned into two parts, the first being written
    as a sum of 4 squares and the second being written as a sum of 2 squares – which
    can only be done if the condition above for k = 2 can be met, so this will automatically
    reject certain partitions of n.
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 k > 4，则 n 可以被分区，并且每个分区可以被写成 4 个平方的和；如果 n 不是 4 的倍数，则仅当可以将附加分区写成平方的和时，n 才能被写成平方的和。例如，如果
    k = 6，则 n 被分成两部分，第一部分被写成 4 个平方的和，第二部分被写成 2 个平方的和——只有当满足 k = 2 的条件时才能做到这一点，因此这将自动拒绝某些
    n 的分区。
- en: Examples
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE84]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: See also
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.utilities.iterables.signed_permutations`](../utilities/iterables.html#sympy.utilities.iterables.signed_permutations
    "sympy.utilities.iterables.signed_permutations")'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.utilities.iterables.signed_permutations`](../utilities/iterables.html#sympy.utilities.iterables.signed_permutations
    "sympy.utilities.iterables.signed_permutations")'
- en: '[PRE85]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: This is used to construct the full solution from the solutions of sub equations.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 这用于从子方程的解构建完整的解决方案。
- en: Explanation
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: For example when solving the equation \((x - y)(x^2 + y^2 - z^2) = 0\), solutions
    for each of the equations \(x - y = 0\) and \(x^2 + y^2 - z^2\) are found independently.
    Solutions for \(x - y = 0\) are \((x, y) = (t, t)\). But we should introduce a
    value for z when we output the solution for the original equation. This function
    converts \((t, t)\) into \((t, t, n_{1})\) where \(n_{1}\) is an integer parameter.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当解方程 \((x - y)(x^2 + y^2 - z^2) = 0\) 时，可以分别独立找到方程 \(x - y = 0\) 和 \(x^2
    + y^2 - z^2\) 的解。 \(x - y = 0\) 的解为 \((x, y) = (t, t)\)。但是在输出原始方程的解时，应为 \(x -
    y = 0\) 的解引入一个值为 z 的参数。此函数将 \((t, t)\) 转换为 \((t, t, n_{1})\)，其中 \(n_{1}\) 是整数参数。
- en: '[PRE86]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Returns \(True\) if `a` is divisible by `b` and \(False\) otherwise.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `a` 能被 `b` 整除则返回 \(True\)，否则返回 \(False\)。
- en: '[PRE87]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Returns useful information needed to solve the Pell equation.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 返回解决Pell方程所需的有用信息。
- en: Explanation
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: Explanation
- en: There are six sequences of integers defined related to the continued fraction
    representation of \(\\frac{P + \sqrt{D}}{Q}\), namely {\(P_{i}\)}, {\(Q_{i}\)},
    {\(a_{i}\)},{\(A_{i}\)}, {\(B_{i}\)}, {\(G_{i}\)}. `PQa()` Returns these values
    as a 6-tuple in the same order as mentioned above. Refer [[R870]](#r870) for more
    detailed information.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 与 \(\\frac{P + \sqrt{D}}{Q}\) 的连分数表示相关的六个整数序列被定义，即 {\(P_{i}\)}, {\(Q_{i}\)},
    {\(a_{i}\)},{\(A_{i}\)}, {\(B_{i}\)}, {\(G_{i}\)}。`PQa()` 以与上述顺序相同的6元组返回这些值。更详细的信息请参见
    [[R870]](#r870)。
- en: Usage
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 使用
- en: '`PQa(P_0, Q_0, D)`: `P_0`, `Q_0` and `D` are integers corresponding to \(P_{0}\),
    \(Q_{0}\) and \(D\) in the continued fraction \(\\frac{P_{0} + \sqrt{D}}{Q_{0}}\).
    Also it’s assumed that \(P_{0}^2 == D mod(|Q_{0}|)\) and \(D\) is square free.'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '`PQa(P_0, Q_0, D)`: `P_0`, `Q_0` 和 `D` 是整数，分别对应于连分数 \(\\frac{P_{0} + \sqrt{D}}{Q_{0}}\)
    中的 \(P_{0}\), \(Q_{0}\) 和 \(D\)。同时假设 \(P_{0}^2 == D mod(|Q_{0}|)\)，且 \(D\) 是无平方因子。'
- en: Examples
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE88]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: References
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[R870] ([1](#id25),[2](#id26))'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '[R870] ([1](#id25),[2](#id26))'
- en: Solving the generalized Pell equation x^2 - Dy^2 = N, John P. Robertson, July
    31, 2004, Pages 4 - 8\. [https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf](https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf)
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 解决广义Pell方程 \(x^2 - Dy^2 = N\)，John P. Robertson, 2004年7月31日，第4 - 8页。[https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf](https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf)
- en: '[PRE89]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Returns True if two solutions \((u, v)\) and \((r, s)\) of \(x^2 - Dy^2 = N\)
    belongs to the same equivalence class and False otherwise.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 如果两个解 \((u, v)\) 和 \((r, s)\) 满足 \(x^2 - Dy^2 = N\) 并属于同一等价类，则返回 True，否则返回 False。
- en: Explanation
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: Explanation
- en: Two solutions \((u, v)\) and \((r, s)\) to the above equation fall to the same
    equivalence class iff both \((ur - Dvs)\) and \((us - vr)\) are divisible by \(N\).
    See reference [[R871]](#r871). No test is performed to test whether \((u, v)\)
    and \((r, s)\) are actually solutions to the equation. User should take care of
    this.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 对于上述方程的两个解 \((u, v)\) 和 \((r, s)\)，它们属于相同等价类当且仅当 \((ur - Dvs)\) 和 \((us - vr)\)
    都能被 \(N\) 整除。参见引用 [[R871]](#r871)。不会对是否 \((u, v)\) 和 \((r, s)\) 实际上是方程的解进行测试。用户应当注意这一点。
- en: Usage
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: Usage
- en: '`equivalent(u, v, r, s, D, N)`: \((u, v)\) and \((r, s)\) are two solutions
    of the equation \(x^2 - Dy^2 = N\) and all parameters involved are integers.'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '`equivalent(u, v, r, s, D, N)`: \((u, v)\) 和 \((r, s)\) 是方程 \(x^2 - Dy^2 =
    N\) 的两个解，涉及的所有参数都是整数。'
- en: Examples
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE90]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: References
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: References
- en: '[R871] ([1](#id27),[2](#id28))'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '[R871] ([1](#id27),[2](#id28))'
- en: Solving the generalized Pell equation x**2 - D*y**2 = N, John P. Robertson,
    July 31, 2004, Page 12\. [https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf](https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf)
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 解决广义Pell方程 \(x^2 - D*y^2 = N\)，John P. Robertson, 2004年7月31日，第12页。[https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf](https://web.archive.org/web/20160323033128/http://www.jpr2718.org/pell.pdf)
- en: '[PRE91]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Returns the parametrized general solution for the ternary quadratic equation
    `eq` which has the form \(ax^2 + by^2 + cz^2 + fxy + gyz + hxz = 0\).
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 返回三元二次方程 `eq` 的参数化一般解，其形式为 \(ax^2 + by^2 + cz^2 + fxy + gyz + hxz = 0\)。
- en: Examples
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE92]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'The parametrized solution may be returned with three parameters:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会返回参数化解与三个参数：
- en: '[PRE93]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'There might also be only two parameters:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 也可能只有两个参数：
- en: '[PRE94]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Notes
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: Notes
- en: 'Consider `p` and `q` in the previous 2-parameter solution and observe that
    more than one solution can be represented by a given pair of parameters. If \(p\)
    and `q` are not coprime, this is trivially true since the common factor will also
    be a common factor of the solution values. But it may also be true even when `p`
    and `q` are coprime:'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑前两个参数解中的 `p` 和 `q`，观察到给定一对参数可以表示多个解。如果 `p` 和 `q` 不是互质的，这是显而易见的，因为共同因子也将是解值的公因子。但是即使
    `p` 和 `q` 是互质的，这也可能是真的：
- en: '[PRE95]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Except for sign and a common factor, these are equivalent to the solution of
    (1, 2, 2).
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 除了符号和一个公共因子外，这些等同于解(1, 2, 2)。
- en: References
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R872](#id29)]'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R872](#id29)]'
- en: The algorithmic resolution of Diophantine equations, Nigel P. Smart, London
    Mathematical Society Student Texts 41, Cambridge University Press, Cambridge,
    1998.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: Diophantine方程的算法解决，Nigel P. Smart，伦敦数学学会学生文集 41，剑桥大学出版社，剑桥，1998年。
- en: '[PRE96]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: Solves the quadratic ternary diophantine equation, \(ax^2 + by^2 + cz^2 = 0\).
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 解二次三元丢番图方程 \(ax^2 + by^2 + cz^2 = 0\)。
- en: Explanation
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Here the coefficients \(a\), \(b\), and \(c\) should be non zero. Otherwise
    the equation will be a quadratic binary or univariate equation. If solvable, returns
    a tuple \((x, y, z)\) that satisfies the given equation. If the equation does
    not have integer solutions, \((None, None, None)\) is returned.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的系数 \(a\)、\(b\) 和 \(c\) 应为非零。否则方程将成为二次二进制或单变量方程。如果可解，返回满足给定方程的元组 \((x, y,
    z)\)。如果方程没有整数解，则返回 \((None, None, None)\)。
- en: Usage
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 使用方法
- en: '`diop_ternary_quadratic_normal(eq)`: where `eq` is an equation of the form
    \(ax^2 + by^2 + cz^2 = 0\).'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '`diop_ternary_quadratic_normal(eq)`: 其中`eq`是形如 \(ax^2 + by^2 + cz^2 = 0\) 的方程。'
- en: Examples
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE97]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Return a non-trivial solution to \(w^2 = Ax^2 + By^2\) using Lagrange’s method;
    return None if there is no such solution.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 使用拉格朗日方法返回 \(w^2 = Ax^2 + By^2\) 的非平凡解；如果没有这样的解，则返回 None。
- en: 'Parameters:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**A** : Integer'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '**A** : 整数'
- en: '**B** : Integer'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '**B** : 整数'
- en: non-zero integer
  id: totrans-439
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 非零整数
- en: 'Returns:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**(int, int, int) | None** : a tuple \((w_0, x_0, y_0)\) which is a solution
    to the above equation.'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '**(int, int, int) | None** : 一个元组 \((w_0, x_0, y_0)\)，它是上述方程的解。'
- en: Examples
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE99]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: This means that \(x = -1, y = 0\) and \(w = 2\) is a solution to the equation
    \(w^2 = 4x^2 - 7y^2\)
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着 \(x = -1, y = 0\) 和 \(w = 2\) 是方程 \(w^2 = 4x^2 - 7y^2\) 的解。
- en: '[PRE100]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: References
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R873](#id30)]'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R873](#id30)]'
- en: The algorithmic resolution of Diophantine equations, Nigel P. Smart, London
    Mathematical Society Student Texts 41, Cambridge University Press, Cambridge,
    1998.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: Diophantine方程的算法解决，Nigel P. Smart，伦敦数学学会学生文集 41，剑桥大学出版社，剑桥，1998年。
- en: '[[R874](#id31)]'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R874](#id31)]'
- en: Cremona, J. E., Rusin, D. (2003). Efficient Solution of Rational Conics. Mathematics
    of Computation, 72(243), 1417-1441. [https://doi.org/10.1090/S0025-5718-02-01480-1](https://doi.org/10.1090/S0025-5718-02-01480-1)
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: Cremona, J. E., Rusin, D. (2003). Rational Conics的高效解法。计算数学，72(243)，1417-1441。[https://doi.org/10.1090/S0025-5718-02-01480-1](https://doi.org/10.1090/S0025-5718-02-01480-1)
- en: '[PRE101]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Returns a reduced solution \((x, z)\) to the congruence \(X^2 - aZ^2 \equiv
    0 \pmod{b}\) so that \(x^2 + |a|z^2\) is as small as possible. Here `w` is a solution
    of the congruence \(x^2 \equiv a \pmod{b}\).
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 返回对应模 \(b\) 的同余方程 \(X^2 - aZ^2 \equiv 0 \pmod{b}\) 的简化解 \((x, z)\)，使得 \(x^2
    + |a|z^2\) 尽可能小。这里 `w` 是满足同余方程 \(x^2 \equiv a \pmod{b}\) 的解。
- en: This function is intended to be used only for `descent()`.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数仅用于 `descent()`。
- en: 'Parameters:'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**w** : int'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: '**w** : 整数'
- en: '`w` s.t. \(w^2 \equiv a \pmod{b}\)'
  id: totrans-456
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`w` 满足 \(w^2 \equiv a \pmod{b}\)'
- en: '**a** : int'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '**a** : 整数'
- en: square-free nonzero integer
  id: totrans-458
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 无平方因子的非零整数
- en: '**b** : int'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '**b** : 整数'
- en: square-free nonzero integer
  id: totrans-460
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 无平方因子的非零整数
- en: Explanation
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The Gaussian reduction can find the shortest vector for any norm. So we define
    the special norm for the vectors \(u = (u_1, u_2)\) and \(v = (v_1, v_2)\) as
    follows.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯约简可以找到任何范数的最短向量。因此，我们对向量 \(u = (u_1, u_2)\) 和 \(v = (v_1, v_2)\) 定义特殊的范数如下。
- en: \[u \cdot v := (wu_1 + bu_2)(wv_1 + bv_2) + |a|u_1v_1\]
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: \[u \cdot v := (wu_1 + bu_2)(wv_1 + bv_2) + |a|u_1v_1\]
- en: 'Note that, given the mapping \(f: (u_1, u_2) \to (wu_1 + bu_2, u_1)\), \(f((u_1,u_2))\)
    is the solution to \(X^2 - aZ^2 \equiv 0 \pmod{b}\). In other words, finding the
    shortest vector in this norm will yield a solution with smaller \(X^2 + |a|Z^2\).
    The algorithm starts from basis vectors \((0, 1)\) and \((1, 0)\) (corresponding
    to solutions \((b, 0)\) and \((w, 1)\), respectively) and finds the shortest vector.
    The shortest vector does not necessarily correspond to the smallest solution,
    but since `descent()` only wants the smallest possible solution, it is sufficient.'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '注意，给定映射 \(f: (u_1, u_2) \to (wu_1 + bu_2, u_1)\)，\(f((u_1,u_2))\) 是方程 \(X^2
    - aZ^2 \equiv 0 \pmod{b}\) 的解。换句话说，找到这个范数中的最短向量将给出一个 \(X^2 + |a|Z^2\) 较小的解。该算法从基础向量
    \((0, 1)\) 和 \((1, 0)\) 开始（分别对应解 \((b, 0)\) 和 \((w, 1)\)），并找到最短向量。最短向量不一定对应最小的解，但由于
    `descent()` 只需最小可能的解，这已经足够。'
- en: Examples
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE102]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: It does not always return the smallest solution.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 它并不总是返回最小的解。
- en: '[PRE103]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: References
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R875](#id32)]'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R875](#id32)]'
- en: 'Gaussian lattice Reduction [online]. Available: [https://web.archive.org/web/20201021115213/http://home.ie.cuhk.edu.hk/~wkshum/wordpress/?p=404](https://web.archive.org/web/20201021115213/http://home.ie.cuhk.edu.hk/~wkshum/wordpress/?p=404)'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '高斯格点缩减 [在线]. 可访问: [https://web.archive.org/web/20201021115213/http://home.ie.cuhk.edu.hk/~wkshum/wordpress/?p=404](https://web.archive.org/web/20201021115213/http://home.ie.cuhk.edu.hk/~wkshum/wordpress/?p=404)'
- en: '[[R876](#id33)]'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R876](#id33)]'
- en: Cremona, J. E., Rusin, D. (2003). Efficient Solution of Rational Conics. Mathematics
    of Computation, 72(243), 1417-1441. [https://doi.org/10.1090/S0025-5718-02-01480-1](https://doi.org/10.1090/S0025-5718-02-01480-1)
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: Cremona, J. E., Rusin, D. (2003). 有效解决有理圆锥曲线问题. 计算数学, 72(243), 1417-1441. [https://doi.org/10.1090/S0025-5718-02-01480-1](https://doi.org/10.1090/S0025-5718-02-01480-1)
- en: '[PRE104]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Simplify the solution \((x, y, z)\) of the equation \(ax^2 + by^2 = cz^2\) with
    \(a, b, c > 0\) and \(z^2 \geq \mid ab \mid\) to a new reduced solution \((x',
    y', z')\) such that \(z'^2 \leq \mid ab \mid\).
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 简化方程 \(ax^2 + by^2 = cz^2\) 的解 \((x, y, z)\)，其中 \(a, b, c > 0\) 且 \(z^2 \geq
    \mid ab \mid\)，至一个新的减少解 \((x', y', z')\)，使得 \(z'^2 \leq \mid ab \mid\)。
- en: The algorithm is an interpretation of Mordell’s reduction as described on page
    8 of Cremona and Rusin’s paper [[R877]](#r877) and the work of Mordell in reference
    [[R878]](#r878).
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法是Mordell的缩减的一种解释，如Cremona和Rusin论文第8页所述 [[R877]](#r877)，以及Mordell在参考文献 [[R878]](#r878)
    中的工作。
- en: References
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R877] ([1](#id34),[2](#id36))'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '[R877] ([1](#id34),[2](#id36))'
- en: Cremona, J. E., Rusin, D. (2003). Efficient Solution of Rational Conics. Mathematics
    of Computation, 72(243), 1417-1441. [https://doi.org/10.1090/S0025-5718-02-01480-1](https://doi.org/10.1090/S0025-5718-02-01480-1)
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: Cremona, J. E., Rusin, D. (2003). 有效解决有理圆锥曲线问题. 计算数学, 72(243), 1417-1441. [https://doi.org/10.1090/S0025-5718-02-01480-1](https://doi.org/10.1090/S0025-5718-02-01480-1)
- en: '[R878] ([1](#id35),[2](#id37))'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: '[R878] ([1](#id35),[2](#id37))'
- en: Diophantine Equations, L. J. Mordell, page 48.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 丢番图方程, L. J. Mordell, 第48页.
- en: '[PRE105]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Represent a prime \(p\) as a unique sum of two squares; this can only be done
    if the prime is congruent to 1 mod 4.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 将素数 \(p\) 表示为两个平方数之和；仅当素数满足 \(p \equiv 1 \pmod{4}\) 时可行。
- en: 'Parameters:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**p** : Integer'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '**p** : 整数'
- en: A prime that is congruent to 1 mod 4
  id: totrans-486
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个满足 \(p \equiv 1 \pmod{4}\) 的素数
- en: 'Returns:'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '返回:'
- en: '**(int, int) | None** : Pair of positive integers `(x, y)` satisfying `x**2
    + y**2 = p`.'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '**(int, int) | None** : 正整数对 `(x, y)` 满足 `x**2 + y**2 = p`。'
- en: None if `p` is not congruent to 1 mod 4.
  id: totrans-489
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 若 `p` 不满足 \(p \equiv 1 \pmod{4}\)，则返回 None。
- en: 'Raises:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '抛出:'
- en: '**ValueError**'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValueError**'
- en: If `p` is not prime number
  id: totrans-492
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 若 `p` 不是素数
- en: Examples
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE106]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Reference
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[R879]'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '[R879]'
- en: 'Representing a number as a sum of four squares, [online], Available: [https://schorn.ch/lagrange.html](https://schorn.ch/lagrange.html)'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '将一个数表示为四个平方数之和 [在线]. 可访问: [https://schorn.ch/lagrange.html](https://schorn.ch/lagrange.html)'
- en: See also
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sum_of_squares`](#sympy.solvers.diophantine.diophantine.sum_of_squares "sympy.solvers.diophantine.diophantine.sum_of_squares")'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sum_of_squares`](#sympy.solvers.diophantine.diophantine.sum_of_squares "sympy.solvers.diophantine.diophantine.sum_of_squares")'
- en: '[PRE107]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'Return \(a'', b'', c''\), the coefficients of the square-free normal form of
    \(ax^2 + by^2 + cz^2 = 0\), where \(a'', b'', c''\) are pairwise prime. If \(steps\)
    is True then also return three tuples: \(sq\), \(sqf\), and \((a'', b'', c'')\)
    where \(sq\) contains the square factors of \(a\), \(b\) and \(c\) after removing
    the \(gcd(a, b, c)\); \(sqf\) contains the values of \(a\), \(b\) and \(c\) after
    removing both the \(gcd(a, b, c)\) and the square factors.'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 \(a', b', c'\)，即 \(ax^2 + by^2 + cz^2 = 0\) 的平方自由正则形式的系数，其中 \(a', b', c'\)
    是两两素数。如果 `steps` 为真，则还返回三个元组：\(sq\)，\(sqf\) 和 \((a', b', c')\)，在去除 \(gcd(a, b,
    c)\) 后包含 \(a\)，\(b\) 和 \(c\) 的平方因子。
- en: The solutions for \(ax^2 + by^2 + cz^2 = 0\) can be recovered from the solutions
    of \(a'x^2 + b'y^2 + c'z^2 = 0\).
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 \(ax^2 + by^2 + cz^2 = 0\) 的解可以从 \(a'x^2 + b'y^2 + c'z^2 = 0\) 的解恢复。
- en: Examples
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE108]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: See also
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`reconstruct`](#sympy.solvers.diophantine.diophantine.reconstruct "sympy.solvers.diophantine.diophantine.reconstruct")'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '[`reconstruct`](#sympy.solvers.diophantine.diophantine.reconstruct "sympy.solvers.diophantine.diophantine.reconstruct")'
- en: References
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R880](#id38)]'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R880](#id38)]'
- en: Legendre’s Theorem, Legrange’s Descent, [https://public.csusm.edu/aitken_html/notes/legendre.pdf](https://public.csusm.edu/aitken_html/notes/legendre.pdf)
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: Legendre 定理，Lagrange 下降，[https://public.csusm.edu/aitken_html/notes/legendre.pdf](https://public.csusm.edu/aitken_html/notes/legendre.pdf)
- en: '[PRE109]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Reconstruct the \(z\) value of an equivalent solution of \(ax^2 + by^2 + cz^2\)
    from the \(z\) value of a solution of the square-free normal form of the equation,
    \(a'*x^2 + b'*y^2 + c'*z^2\), where \(a'\), \(b'\) and \(c'\) are square free
    and \(gcd(a', b', c') == 1\).
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 从等式的平方自由正常形式 \(a'*x^2 + b'*y^2 + c'*z^2\) 的解的 \(z\) 值重建等价解的 \(z\) 值，其中 \(a'\),
    \(b'\) 和 \(c'\) 是平方自由的，且 \(gcd(a', b', c') == 1\)。
- en: Internal Classes
  id: totrans-512
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内部类
- en: These classes are intended for internal use in the Diophantine module.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类旨在供丢番图模块内部使用。
- en: '[PRE110]'
  id: totrans-514
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Container for a set of solutions to a particular diophantine equation.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 一特定丢番图方程的解集的容器。
- en: The base representation is a set of tuples representing each of the solutions.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 基本表示是一组元组，代表每个解的解决方案。
- en: 'Parameters:'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**symbols** : list'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '**symbols** : 列表'
- en: List of free symbols in the original equation.
  id: totrans-519
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原方程中的自由符号列表。
- en: '**parameters: list**'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: '**parameters: list**'
- en: List of parameters to be used in the solution.
  id: totrans-521
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 用于解决方案的参数列表。
- en: Examples
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Adding solutions:'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 添加解决方案：
- en: '[PRE111]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'Conversion of solutions into dicts:'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 将解转换为字典：
- en: '[PRE112]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'Substituting values:'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 替换数值：
- en: '[PRE113]'
  id: totrans-528
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'Evaluation at specific values. Positional arguments are given in the same order
    as the parameters:'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 特定值的评估。位置参数与参数顺序相同：
- en: '[PRE114]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Internal representation of a particular diophantine equation type.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 特定丢番图方程类型的内部表示。
- en: 'Parameters:'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**equation :**'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '**equation :**'
- en: The diophantine equation that is being solved.
  id: totrans-535
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在解决的丢番图方程。
- en: '**free_symbols** : list (optional)'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: '**free_symbols** : 列表 (可选)'
- en: The symbols being solved for.
  id: totrans-537
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 正在解决的符号。
- en: Attributes
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| total_degree : | The maximum of the degrees of all terms in the equation
    |'
  id: totrans-539
  prefs: []
  type: TYPE_TB
  zh: '| total_degree : | 方程中所有项的最大度数 |'
- en: '| homogeneous : | Does the equation contain a term of degree 0 |'
  id: totrans-540
  prefs: []
  type: TYPE_TB
  zh: '| homogeneous : | 方程是否包含度为 0 的项 |'
- en: '| homogeneous_order : | Does the equation contain any coefficient that is in
    the symbols being solved for |'
  id: totrans-541
  prefs: []
  type: TYPE_TB
  zh: '| homogeneous_order : | 方程中是否包含任何符号的系数 |'
- en: '| dimension : | The number of symbols being solved for |'
  id: totrans-542
  prefs: []
  type: TYPE_TB
  zh: '| dimension : | 正在解决的符号数量 |'
- en: '[PRE116]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Determine whether the given equation can be matched to the particular equation
    type.
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 确定给定方程是否可以与特定方程类型匹配。
- en: '[PRE117]'
  id: totrans-545
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Representation of a univariate diophantine equation.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 一元二次丢番图方程的表示。
- en: A univariate diophantine equation is an equation of the form \(a_{0} + a_{1}x
    + a_{2}x^2 + .. + a_{n}x^n = 0\) where \(a_{1}, a_{2}, ..a_{n}\) are integer constants
    and \(x\) is an integer variable.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 一元二次丢番图方程是一个形如 \(a_{0} + a_{1}x + a_{2}x^2 + .. + a_{n}x^n = 0\) 的方程，其中 \(a_{1},
    a_{2}, ..a_{n}\) 是整数常数，\(x\) 是整数变量。
- en: Examples
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE118]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-550
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Representation of a linear diophantine equation.
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 一元二次丢番图方程的表示。
- en: A linear diophantine equation is an equation of the form \(a_{1}x_{1} + a_{2}x_{2}
    + .. + a_{n}x_{n} = 0\) where \(a_{1}, a_{2}, ..a_{n}\) are integer constants
    and \(x_{1}, x_{2}, ..x_{n}\) are integer variables.
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 线性丢番图方程是一个形如 \(a_{1}x_{1} + a_{2}x_{2} + .. + a_{n}x_{n} = 0\) 的方程，其中 \(a_{1},
    a_{2}, ..a_{n}\) 是整数常数，\(x_{1}, x_{2}, ..x_{n}\) 是整数变量。
- en: Examples
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE120]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: Here x = -3*t_0 - 5 and y = -2*t_0 - 5
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 x = -3*t_0 - 5 和 y = -2*t_0 - 5
- en: '[PRE121]'
  id: totrans-556
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '[PRE122]'
  id: totrans-557
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Representation of a binary quadratic diophantine equation.
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: 二元二次丢番图方程的表示。
- en: A binary quadratic diophantine equation is an equation of the form \(Ax^2 +
    Bxy + Cy^2 + Dx + Ey + F = 0\), where \(A, B, C, D, E, F\) are integer constants
    and \(x\) and \(y\) are integer variables.
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 二元二次丢番图方程是一个形如 \(Ax^2 + Bxy + Cy^2 + Dx + Ey + F = 0\) 的方程，其中 \(A, B, C, D,
    E, F\) 是整数常数，\(x\) 和 \(y\) 是整数变量。
- en: Examples
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE123]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: References
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[R881](#id39)]'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R881](#id39)]'
- en: 'Methods to solve Ax^2 + Bxy + Cy^2 + Dx + Ey + F = 0, [online], Available:
    [https://www.alpertron.com.ar/METHODS.HTM](https://www.alpertron.com.ar/METHODS.HTM)'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 解决 Ax^2 + Bxy + Cy^2 + Dx + Ey + F = 0 的方法，[在线]，可用：[https://www.alpertron.com.ar/METHODS.HTM](https://www.alpertron.com.ar/METHODS.HTM)
- en: '[[R882](#id40)]'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R882](#id40)]'
- en: 'Solving the equation ax^2+ bxy + cy^2 + dx + ey + f= 0, [online], Available:
    [https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf](https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf)'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 解方程\(ax^2+ bxy + cy^2 + dx + ey + f= 0\)，[在线]，可参见：[https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf](https://web.archive.org/web/20160323033111/http://www.jpr2718.org/ax2p.pdf)
- en: '[PRE124]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: Representation of an inhomogeneous ternary quadratic.
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: 表示非均匀三元二次方程。
- en: No solver is currently implemented for this equation type.
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 目前还没有为这种方程类型实现求解器。
- en: '[PRE125]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Representation of a homogeneous ternary quadratic normal diophantine equation.
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 表示均匀三元二次正规丢番图方程。
- en: Examples
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE126]'
  id: totrans-573
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '[PRE127]'
  id: totrans-574
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: Representation of a homogeneous ternary quadratic diophantine equation.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 表示均匀三元二次丢番图方程。
- en: Examples
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE128]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '[PRE129]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Representation of an inhomogeneous general quadratic.
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 表示非均匀一般二次方程。
- en: No solver is currently implemented for this equation type.
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 目前还没有为这种方程类型实现求解器。
- en: '[PRE130]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: Representation of a homogeneous general quadratic.
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 表示均匀一般二次方程。
- en: No solver is currently implemented for this equation type.
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 目前还没有为这种方程类型实现求解器。
- en: '[PRE131]'
  id: totrans-584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: Representation of the diophantine equation
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 表示丢番图方程
- en: \(x_{1}^2 + x_{2}^2 + . . . + x_{n}^2 - k = 0\).
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: \(x_{1}^2 + x_{2}^2 + . . . + x_{n}^2 - k = 0\).
- en: Details
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 详情
- en: When \(n = 3\) if \(k = 4^a(8m + 7)\) for some \(a, m \in Z\) then there will
    be no solutions. Refer [[R883]](#r883) for more details.
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
  zh: 当\(n = 3\)时，如果\(k = 4^a(8m + 7)\)，其中\(a, m \in Z\)，则没有解。参考[[R883]](#r883)获取更多详情。
- en: Examples
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE132]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 'By default only 1 solution is returned. Use the \(limit\) keyword for more:'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下仅返回1个解。使用关键字\(limit\)可获取更多：
- en: '[PRE133]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: References
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[R883] ([1](#id41),[2](#id42))'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: '[R883] ([1](#id41),[2](#id42))'
- en: 'Representing an integer as a sum of three squares, [online], Available: [https://www.proofwiki.org/wiki/Integer_as_Sum_of_Three_Squares](https://www.proofwiki.org/wiki/Integer_as_Sum_of_Three_Squares)'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 将整数表示为三个平方数的和，[在线]，可参见：[https://www.proofwiki.org/wiki/Integer_as_Sum_of_Three_Squares](https://www.proofwiki.org/wiki/Integer_as_Sum_of_Three_Squares)
- en: '[PRE134]'
  id: totrans-596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: Representation of the general pythagorean equation, \(a_{1}^2x_{1}^2 + a_{2}^2x_{2}^2
    + . . . + a_{n}^2x_{n}^2 - a_{n + 1}^2x_{n + 1}^2 = 0\).
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一般的毕达哥拉斯方程，\(a_{1}^2x_{1}^2 + a_{2}^2x_{2}^2 + . . . + a_{n}^2x_{n}^2 - a_{n
    + 1}^2x_{n + 1}^2 = 0\)。
- en: Examples
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE135]'
  id: totrans-599
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Representation of a cubic Thue diophantine equation.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 表示一个三次丢番图方程。
- en: A cubic Thue diophantine equation is a polynomial of the form \(f(x, y) = r\)
    of degree 3, where \(x\) and \(y\) are integers and \(r\) is a rational number.
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 一个三次丢番图方程是一个形式为\(f(x, y) = r\)的三次多项式，其中\(x\)和\(y\)是整数，\(r\)是有理数。
- en: No solver is currently implemented for this equation type.
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 目前还没有为这种方程类型实现求解器。
- en: Examples
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE137]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '[PRE138]'
  id: totrans-606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: Representation of the diophantine equation
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 表示丢番图方程
- en: \(x_{1}^e + x_{2}^e + . . . + x_{n}^e - k = 0\)
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: \(x_{1}^e + x_{2}^e + . . . + x_{n}^e - k = 0\)
- en: where \(e\) is an even, integer power.
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 其中\(e\)是一个偶数整数幂。
- en: Examples
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE139]'
  id: totrans-611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
