- en: scipy.optimize.OptimizeResult
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.OptimizeResult
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Represents the optimization result.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 表示优化结果。
- en: Notes
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Depending on the specific solver being used, [`OptimizeResult`](#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult") may not have all attributes listed here, and
    they may have additional attributes not listed here. Since this class is essentially
    a subclass of dict with attribute accessors, one can see which attributes are
    available using the [`OptimizeResult.keys`](scipy.optimize.OptimizeResult.keys.html#scipy.optimize.OptimizeResult.keys
    "scipy.optimize.OptimizeResult.keys") method.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 根据具体使用的求解器，[`OptimizeResult`](#scipy.optimize.OptimizeResult "scipy.optimize.OptimizeResult")
    可能不包含此处列出的所有属性，并且可能有其他未列出的属性。由于该类本质上是 dict 的子类，带有属性访问器，可以使用 [`OptimizeResult.keys`](scipy.optimize.OptimizeResult.keys.html#scipy.optimize.OptimizeResult.keys
    "scipy.optimize.OptimizeResult.keys") 方法查看可用的属性。
- en: 'Attributes:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**x**ndarray'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**ndarray'
- en: The solution of the optimization.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 优化的解。
- en: '**success**bool'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**success**布尔值'
- en: Whether or not the optimizer exited successfully.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 优化器是否成功退出。
- en: '**status**int'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**status**整数'
- en: Termination status of the optimizer. Its value depends on the underlying solver.
    Refer to *message* for details.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 优化器的终止状态。其值取决于底层求解器。详细信息请参考 *message*。
- en: '**message**str'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**message**字符串'
- en: Description of the cause of the termination.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 终止原因的描述。
- en: '**fun, jac, hess: ndarray**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**fun, jac, hess: ndarray**'
- en: Values of objective function, its Jacobian and its Hessian (if available). The
    Hessians may be approximations, see the documentation of the function in question.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数的值，其雅可比矩阵及海森矩阵的值（如果可用）。这些海森矩阵可能是近似值，请参阅相关函数的文档。
- en: '**hess_inv**object'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**hess_inv**对象'
- en: Inverse of the objective function’s Hessian; may be an approximation. Not available
    for all solvers. The type of this attribute may be either np.ndarray or scipy.sparse.linalg.LinearOperator.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数海森矩阵的逆；可能是一个近似值。并非所有求解器都支持。此属性的类型可以是np.ndarray或scipy.sparse.linalg.LinearOperator。
- en: '**nfev, njev, nhev**int'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**nfev, njev, nhev**整数'
- en: Number of evaluations of the objective functions and of its Jacobian and Hessian.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 目标函数及其雅可比矩阵和海森矩阵的评估次数。
- en: '**nit**int'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**nit**整数'
- en: Number of iterations performed by the optimizer.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 优化器执行的迭代次数。
- en: '**maxcv**float'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxcv**浮点数'
- en: The maximum constraint violation.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最大约束违规。
- en: Methods
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__getitem__`](scipy.optimize.OptimizeResult.__getitem__.html#scipy.optimize.OptimizeResult.__getitem__
    "scipy.optimize.OptimizeResult.__getitem__") | x.__getitem__(y) <==> x[y] |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`__getitem__`](scipy.optimize.OptimizeResult.__getitem__.html#scipy.optimize.OptimizeResult.__getitem__
    "scipy.optimize.OptimizeResult.__getitem__") | x.__getitem__(y) <==> x[y] |'
- en: '| [`__len__`](scipy.optimize.OptimizeResult.__len__.html#scipy.optimize.OptimizeResult.__len__
    "scipy.optimize.OptimizeResult.__len__")(/) | Return len(self). |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`__len__`](scipy.optimize.OptimizeResult.__len__.html#scipy.optimize.OptimizeResult.__len__
    "scipy.optimize.OptimizeResult.__len__")(/) | 返回 len(self)。 |'
- en: '| [`clear`](scipy.optimize.OptimizeResult.clear.html#scipy.optimize.OptimizeResult.clear
    "scipy.optimize.OptimizeResult.clear")() |  |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`clear`](scipy.optimize.OptimizeResult.clear.html#scipy.optimize.OptimizeResult.clear
    "scipy.optimize.OptimizeResult.clear")() |  |'
- en: '| [`copy`](scipy.optimize.OptimizeResult.copy.html#scipy.optimize.OptimizeResult.copy
    "scipy.optimize.OptimizeResult.copy")() |  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`copy`](scipy.optimize.OptimizeResult.copy.html#scipy.optimize.OptimizeResult.copy
    "scipy.optimize.OptimizeResult.copy")() |  |'
- en: '| [`fromkeys`](scipy.optimize.OptimizeResult.fromkeys.html#scipy.optimize.OptimizeResult.fromkeys
    "scipy.optimize.OptimizeResult.fromkeys")(iterable[, value]) | Create a new dictionary
    with keys from iterable and values set to value. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`fromkeys`](scipy.optimize.OptimizeResult.fromkeys.html#scipy.optimize.OptimizeResult.fromkeys
    "scipy.optimize.OptimizeResult.fromkeys")(iterable[, value]) | 使用来自 iterable 的键创建一个新字典，并将值设置为
    value。 |'
- en: '| [`get`](scipy.optimize.OptimizeResult.get.html#scipy.optimize.OptimizeResult.get
    "scipy.optimize.OptimizeResult.get")(key[, default]) | Return the value for key
    if key is in the dictionary, else default. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`get`](scipy.optimize.OptimizeResult.get.html#scipy.optimize.OptimizeResult.get
    "scipy.optimize.OptimizeResult.get")(key[, default]) | 如果字典中存在键 key，则返回其对应的值，否则返回默认值。
    |'
- en: '| [`items`](scipy.optimize.OptimizeResult.items.html#scipy.optimize.OptimizeResult.items
    "scipy.optimize.OptimizeResult.items")() |  |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`items`](scipy.optimize.OptimizeResult.items.html#scipy.optimize.OptimizeResult.items
    "scipy.optimize.OptimizeResult.items")() |  |'
- en: '| [`keys`](scipy.optimize.OptimizeResult.keys.html#scipy.optimize.OptimizeResult.keys
    "scipy.optimize.OptimizeResult.keys")() |  |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '[`keys`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.keys.html#scipy.optimize.OptimizeResult.keys
    "scipy.optimize.OptimizeResult.keys")() |  |'
- en: '| [`pop`](scipy.optimize.OptimizeResult.pop.html#scipy.optimize.OptimizeResult.pop
    "scipy.optimize.OptimizeResult.pop")(key[, default]) | If key is not found, default
    is returned if given, otherwise KeyError is raised |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '[`pop`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.pop.html#scipy.optimize.OptimizeResult.pop
    "scipy.optimize.OptimizeResult.pop")(key[, default]) | 如果未找到key，则如果提供了default，则返回default，否则引发KeyError异常。
    |'
- en: '| [`popitem`](scipy.optimize.OptimizeResult.popitem.html#scipy.optimize.OptimizeResult.popitem
    "scipy.optimize.OptimizeResult.popitem")(/) | Remove and return a (key, value)
    pair as a 2-tuple. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '[`popitem`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.popitem.html#scipy.optimize.OptimizeResult.popitem
    "scipy.optimize.OptimizeResult.popitem")(/) | 移除并返回一个(key, value)对，作为一个二元组。 |'
- en: '| [`setdefault`](scipy.optimize.OptimizeResult.setdefault.html#scipy.optimize.OptimizeResult.setdefault
    "scipy.optimize.OptimizeResult.setdefault")(key[, default]) | Insert key with
    a value of default if key is not in the dictionary. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '[`setdefault`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.setdefault.html#scipy.optimize.OptimizeResult.setdefault
    "scipy.optimize.OptimizeResult.setdefault")(key[, default]) | 如果key不在字典中，则将key插入，并将其值设置为default。
    |'
- en: '| [`update`](scipy.optimize.OptimizeResult.update.html#scipy.optimize.OptimizeResult.update
    "scipy.optimize.OptimizeResult.update")([E, ]**F) | If E is present and has a
    .keys() method, then does: for k in E: D[k] = E[k] If E is present and lacks a
    .keys() method, then does: for k, v in E: D[k] = v In either case, this is followed
    by: for k in F: D[k] = F[k] |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '[`update`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.update.html#scipy.optimize.OptimizeResult.update
    "scipy.optimize.OptimizeResult.update")([E, ]**F) | 如果E存在并且具有.keys()方法，则执行：对于k在E中：D[k]
    = E[k] 如果E存在但没有.keys()方法，则执行：对于k, v在E中：D[k] = v 在任一情况下，随后执行：对于k在F中：D[k] = F[k]
    |'
- en: '| [`values`](scipy.optimize.OptimizeResult.values.html#scipy.optimize.OptimizeResult.values
    "scipy.optimize.OptimizeResult.values")() |  |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '[`values`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.values.html#scipy.optimize.OptimizeResult.values
    "scipy.optimize.OptimizeResult.values")() |  |'
