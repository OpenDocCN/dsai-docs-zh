- en: numpy.array
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.array
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.array.html](https://numpy.org/doc/1.26/reference/generated/numpy.array.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.array.html](https://numpy.org/doc/1.26/reference/generated/numpy.array.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Create an array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个数组。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**object**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**object**array_like'
- en: An array, any object exposing the array interface, an object whose `__array__`
    method returns an array, or any (nested) sequence. If object is a scalar, a 0-dimensional
    array containing object is returned.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一个数组，任何暴露数组接口的对象，一个其`__array__`方法返回数组的对象，或任何（嵌套的）序列。如果对象是标量，则返回一个包含对象的零维数组。
- en: '**dtype**data-type, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**数据类型，可选'
- en: The desired data-type for the array. If not given, NumPy will try to use a default
    `dtype` that can represent the values (by applying promotion rules when necessary.)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的期望数据类型。如果未给出，则NumPy将尝试使用可以表示值的默认`dtype`（必要时应用提升规则）。
- en: '**copy**bool, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**copy**bool，可选'
- en: If true (default), then the object is copied. Otherwise, a copy will only be
    made if `__array__` returns a copy, if obj is a nested sequence, or if a copy
    is needed to satisfy any of the other requirements (`dtype`, `order`, etc.).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为真（默认），则对象将被复制。否则，仅当`__array__`返回一个副本时，如果obj是一个嵌套序列，或者如果需要复制来满足任何其他要求（`dtype`，`order`等），才会进行复制。
- en: '**order**{‘K’, ‘A’, ‘C’, ‘F’}, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**{‘K’, ‘A’, ‘C’, ‘F’}，可选'
- en: Specify the memory layout of the array. If object is not an array, the newly
    created array will be in C order (row major) unless ‘F’ is specified, in which
    case it will be in Fortran order (column major). If object is an array the following
    holds.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 指定数组的内存布局。如果对象不是数组，则新创建的数组将按C顺序（行优先）排列，除非指定了‘F’，在这种情况下，它将按Fortran顺序（列优先）排列。如果对象是数组，则以下内容成立。
- en: '| order | no copy | copy=True |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 顺序 | 无复制 | 复制=True |'
- en: '| --- | --- | --- |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| ‘K’ | unchanged | F & C order preserved, otherwise most similar order |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| ‘K’ | 保持不变 | 保留F和C顺序，否则最相似的顺序 |'
- en: '| ‘A’ | unchanged | F order if input is F and not C, otherwise C order |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| ‘A’ | 保持不变 | 如果输入为F且不是C，则按F顺序，否则按C顺序 |'
- en: '| ‘C’ | C order | C order |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| ‘C’ | C顺序 | C顺序 |'
- en: '| ‘F’ | F order | F order |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| ‘F’ | F order | F order |'
- en: When `copy=False` and a copy is made for other reasons, the result is the same
    as if `copy=True`, with some exceptions for ‘A’, see the Notes section. The default
    order is ‘K’.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当`copy=False`且由于其他原因进行复制时，结果与`copy=True`时相同，但对于‘A’有一些例外情况，请参阅注释部分。默认顺序为‘K’。
- en: '**subok**bool, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**subok**bool, optional'
- en: If True, then sub-classes will be passed-through, otherwise the returned array
    will be forced to be a base-class array (default).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则子类将被传递，否则返回的数组将被强制为基类数组（默认）。
- en: '**ndmin**int, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**ndmin**int, optional'
- en: Specifies the minimum number of dimensions that the resulting array should have.
    Ones will be prepended to the shape as needed to meet this requirement.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 指定结果数组应具有的最小维数。将根据需要在形状前面添加1以满足此要求。
- en: '**like**array_like, optional'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**like**array_like, optional'
- en: Reference object to allow the creation of arrays which are not NumPy arrays.
    If an array-like passed in as `like` supports the `__array_function__` protocol,
    the result will be defined by it. In this case, it ensures the creation of an
    array object compatible with that passed in via this argument.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 引用对象，允许创建不是NumPy数组的数组。如果传入`like`的类似数组支持`__array_function__`协议，则结果将由它定义。在这种情况下，它确保创建一个与通过此参数传入的对象兼容的数组对象。
- en: New in version 1.20.0.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 1.20.0版本中的新功能。
- en: 'Returns:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ndarray'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray'
- en: An array object satisfying the specified requirements.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 满足指定要求的数组对象。
- en: See also
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`empty_like`](numpy.empty_like.html#numpy.empty_like "numpy.empty_like")'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[`empty_like`](numpy.empty_like.html#numpy.empty_like "numpy.empty_like")'
- en: Return an empty array with shape and type of input.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个形状和类型与输入相同的空数组。
- en: '[`ones_like`](numpy.ones_like.html#numpy.ones_like "numpy.ones_like")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ones_like`](numpy.ones_like.html#numpy.ones_like "numpy.ones_like")'
- en: Return an array of ones with shape and type of input.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个形状和类型与输入相同的全1数组。
- en: '[`zeros_like`](numpy.zeros_like.html#numpy.zeros_like "numpy.zeros_like")'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[`zeros_like`](numpy.zeros_like.html#numpy.zeros_like "numpy.zeros_like")'
- en: Return an array of zeros with shape and type of input.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个形状和类型与输入相同的零数组。
- en: '[`full_like`](numpy.full_like.html#numpy.full_like "numpy.full_like")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`full_like`](numpy.full_like.html#numpy.full_like "numpy.full_like")'
- en: Return a new array with shape of input filled with value.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个形状与输入相同且填充有值的新数组。
- en: '[`empty`](numpy.empty.html#numpy.empty "numpy.empty")'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[`empty`](numpy.empty.html#numpy.empty "numpy.empty")'
- en: Return a new uninitialized array.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个新的未初始化数组。
- en: '[`ones`](numpy.ones.html#numpy.ones "numpy.ones")'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ones`](numpy.ones.html#numpy.ones "numpy.ones")'
- en: Return a new array setting values to one.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个将值设置为一的新数组。
- en: '[`zeros`](numpy.zeros.html#numpy.zeros "numpy.zeros")'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[`zeros`](numpy.zeros.html#numpy.zeros "numpy.zeros")'
- en: Return a new array setting values to zero.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个将值设置为零的新数组。
- en: '[`full`](numpy.full.html#numpy.full "numpy.full")'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[`full`](numpy.full.html#numpy.full "numpy.full")'
- en: Return a new array of given shape filled with value.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个给定形状、填充有值的新数组。
- en: Notes
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When order is ‘A’ and `object` is an array in neither ‘C’ nor ‘F’ order, and
    a copy is forced by a change in dtype, then the order of the result is not necessarily
    ‘C’ as expected. This is likely a bug.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当顺序为‘A’且`object`既不是‘C’顺序也不是‘F’顺序的数组，并且由于dtype的变化而强制进行复制时，结果的顺序不一定如预期的‘C’。这很可能是一个bug。
- en: Examples
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Upcasting:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 向上转型：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'More than one dimension:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 多于一个维度：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Minimum dimensions 2:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最小维度为2：
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Type provided:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的类型：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Data-type consisting of more than one element:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由多个元素组成的数据类型：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Creating an array from sub-classes:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 从子类创建数组：
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
