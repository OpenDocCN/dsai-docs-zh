- en: What’s new in 1.1.0 (July 28, 2020)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v1.1.0.html](https://pandas.pydata.org/docs/whatsnew/v1.1.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 1.1.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### KeyErrors raised by loc specify missing labels'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, if labels were missing for a `.loc` call, a KeyError was raised
    stating that this was no longer supported.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now the error message also includes a list of the missing labels (max 10 items,
    display width 80 characters). See [GH 34272](https://github.com/pandas-dev/pandas/issues/34272).  ###
    All dtypes can now be converted to `StringDtype`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously, declaring or converting to [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") was in general only possible if the data was already only
    `str` or nan-like ([GH 31204](https://github.com/pandas-dev/pandas/issues/31204)).
    [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")
    now works in all situations where `astype(str)` or `dtype=str` work:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, the below now works:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]  ### Non-monotonic PeriodIndex partial string slicing'
  prefs: []
  type: TYPE_NORMAL
- en: '[`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") now supports partial string slicing for non-monotonic indexes,
    mirroring [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") behavior ([GH 31096](https://github.com/pandas-dev/pandas/issues/31096))'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]  ### Comparing two `DataFrame` or two `Series` and summarizing the differences'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") and [`Series.compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare") for comparing two `DataFrame` or two `Series` ([GH 30429](https://github.com/pandas-dev/pandas/issues/30429))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'See [User Guide](../user_guide/merging.html#merging-compare) for more details.  ###
    Allow NA in groupby key'
  prefs: []
  type: TYPE_NORMAL
- en: With [groupby](../user_guide/groupby.html#groupby-dropna) , we’ve added a `dropna`
    keyword to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") in order to allow `NA` values in group keys. Users can
    define `dropna` to `False` if they want to include `NA` values in groupby keys.
    The default is set to `True` for `dropna` to keep backwards compatibility ([GH
    3729](https://github.com/pandas-dev/pandas/issues/3729))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The default setting of `dropna` argument is `True` which means `NA` are not
    included in group keys.  ### Sorting with keys'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added a `key` argument to the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") sorting methods, including [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index"), [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values"), and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index"). The `key` can be any callable function which is applied
    column-by-column to each column used for sorting, before sorting is performed
    ([GH 27237](https://github.com/pandas-dev/pandas/issues/27237)). See [sort_values
    with keys](../user_guide/basics.html#basics-sort-value-key) and [sort_index with
    keys](../user_guide/basics.html#basics-sort-index-key) for more information.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Note how this is sorted with capital letters first. If we apply the [`Series.str.lower()`](../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower") method, we get
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: When applied to a `DataFrame`, they key is applied per-column to all columns
    or a subset if `by` is specified, e.g.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'For more details, see examples and documentation in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values"), and [`sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index").  ### Fold argument support in Timestamp constructor'
  prefs: []
  type: TYPE_NORMAL
- en: '`Timestamp:` now supports the keyword-only fold argument according to [PEP
    495](https://www.python.org/dev/peps/pep-0495/#the-fold-attribute) similar to
    parent `datetime.datetime` class. It supports both accepting fold as an initialization
    argument and inferring fold from other constructor arguments ([GH 25057](https://github.com/pandas-dev/pandas/issues/25057),
    [GH 31338](https://github.com/pandas-dev/pandas/issues/31338)). Support is limited
    to `dateutil` timezones as `pytz` doesn’t support fold.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'For more on working with fold, see [Fold subsection](../user_guide/timeseries.html#timeseries-fold)
    in the user guide.  ### Parsing timezone-aware format with different timezones
    in to_datetime'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now supports parsing formats containing timezone names (`%Z`)
    and UTC offsets (`%z`) from different timezones then converting them to UTC by
    setting `utc=True`. This would return a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with timezone at UTC as opposed to an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `object` dtype if `utc=True` is not set ([GH 32792](https://github.com/pandas-dev/pandas/issues/32792)).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]  ### Grouper and resample now supports the arguments origin and offset'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")
    and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") now supports the arguments `origin` and `offset`.
    It let the user control the timestamp on which to adjust the grouping. ([GH 31809](https://github.com/pandas-dev/pandas/issues/31809))'
  prefs: []
  type: TYPE_NORMAL
- en: The bins of the grouping are adjusted based on the beginning of the day of the
    time series starting point. This works well with frequencies that are multiples
    of a day (like `30D`) or that divides a day (like `90s` or `1min`). But it can
    create inconsistencies with some frequencies that do not meet this criteria. To
    change this behavior you can now specify a fixed timestamp with the argument `origin`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Two arguments are now deprecated (more information in the documentation of
    [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample")):'
  prefs: []
  type: TYPE_NORMAL
- en: '`base` should be replaced by `offset`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`loffset` should be replaced by directly adding an offset to the index [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") after being resampled.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Small example of the use of `origin`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Resample with the default behavior `''start_day''` (origin is `2000-10-01 00:00:00`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Resample using a fixed origin:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: If needed you can adjust the bins with the argument `offset` (a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")) that would be added to the default `origin`.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a full example, see: [Use origin or offset to adjust the start of the bins](../user_guide/timeseries.html#timeseries-adjust-the-start-of-the-bins).'
  prefs: []
  type: TYPE_NORMAL
- en: fsspec now used for filesystem handling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For reading and writing to filesystems other than local and reading from HTTP(S),
    the optional dependency `fsspec` will be used to dispatch operations ([GH 33452](https://github.com/pandas-dev/pandas/issues/33452)).
    This will give unchanged functionality for S3 and GCS storage, which were already
    supported, but also add support for several other storage implementations such
    as [Azure Datalake and Blob](https://github.com/fsspec/adlfs), SSH, FTP, dropbox
    and github. For docs and capabilities, see the [fsspec docs](https://filesystem-spec.readthedocs.io/en/latest/).
  prefs: []
  type: TYPE_NORMAL
- en: The existing capability to interface with S3 and GCS will be unaffected by this
    change, as `fsspec` will still bring in the same packages as before.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Compatibility with matplotlib 3.3.0 ([GH 34850](https://github.com/pandas-dev/pandas/issues/34850))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray.astype()` now supports `datetime64` dtype ([GH 32538](https://github.com/pandas-dev/pandas/issues/32538))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray` now implements the `sum` operation ([GH 33172](https://github.com/pandas-dev/pandas/issues/33172))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.errors.InvalidIndexError`](../reference/api/pandas.errors.InvalidIndexError.html#pandas.errors.InvalidIndexError
    "pandas.errors.InvalidIndexError") ([GH 34570](https://github.com/pandas-dev/pandas/issues/34570)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts") ([GH 5377](https://github.com/pandas-dev/pandas/issues/5377))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a [`pandas.api.indexers.FixedForwardWindowIndexer()`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") class to support forward-looking
    windows during `rolling` operations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a [`pandas.api.indexers.VariableOffsetWindowIndexer()`](../reference/api/pandas.api.indexers.VariableOffsetWindowIndexer.html#pandas.api.indexers.VariableOffsetWindowIndexer
    "pandas.api.indexers.VariableOffsetWindowIndexer") class to support `rolling`
    operations with non-fixed offsets ([GH 34994](https://github.com/pandas-dev/pandas/issues/34994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") now includes a `datetime_is_numeric` keyword to control
    how datetime columns are summarized ([GH 30164](https://github.com/pandas-dev/pandas/issues/30164),
    [GH 34798](https://github.com/pandas-dev/pandas/issues/34798))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") may now render CSS more efficiently where multiple
    cells have the same styling ([GH 30876](https://github.com/pandas-dev/pandas/issues/30876))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null") now accepts `subset` argument
    ([GH 31345](https://github.com/pandas-dev/pandas/issues/31345))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When writing directly to a sqlite connection [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now supports the `multi` method ([GH 29921](https://github.com/pandas-dev/pandas/issues/29921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.errors.OptionError`](../reference/api/pandas.errors.OptionError.html#pandas.errors.OptionError
    "pandas.errors.OptionError") is now exposed in `pandas.errors` ([GH 27553](https://github.com/pandas-dev/pandas/issues/27553))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `api.extensions.ExtensionArray.argmax()` and `api.extensions.ExtensionArray.argmin()`
    ([GH 24382](https://github.com/pandas-dev/pandas/issues/24382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") will now infer a frequency when passed `start`, `stop`,
    and `periods` ([GH 32377](https://github.com/pandas-dev/pandas/issues/32377))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Positional slicing on a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") now supports slices with `step > 1` ([GH 31658](https://github.com/pandas-dev/pandas/issues/31658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    now has a `fullmatch` method that matches a regular expression against the entire
    string in each row of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), similar to `re.fullmatch` ([GH 32806](https://github.com/pandas-dev/pandas/issues/32806)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample") will now also allow array-like and BitGenerator objects
    to be passed to `random_state` as seeds ([GH 32503](https://github.com/pandas-dev/pandas/issues/32503))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") will now raise `RuntimeWarning` for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") objects if the object inside are unsortable. Pass `sort=False`
    to suppress this warning ([GH 33015](https://github.com/pandas-dev/pandas/issues/33015))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Series.dt.isocalendar()`](../reference/api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar") and `DatetimeIndex.isocalendar()` that returns
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with year, week, and day calculated according to the ISO 8601 calendar ([GH 33206](https://github.com/pandas-dev/pandas/issues/33206),
    [GH 34392](https://github.com/pandas-dev/pandas/issues/34392)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather") method now supports additional keyword arguments
    (e.g. to set the compression) that are added in pyarrow 0.17 ([GH 33422](https://github.com/pandas-dev/pandas/issues/33422)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") will
    now accept parameter `ordered` with default `ordered=True`. If `ordered=False`
    and no labels are provided, an error will be raised ([GH 33141](https://github.com/pandas-dev/pandas/issues/33141))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), and [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now support passing a dict of compression arguments
    when using the `gzip` and `bz2` protocols. This can be used to set a custom compression
    level, e.g., `df.to_csv(path, compression={''method'': ''gzip'', ''compresslevel'':
    1}` ([GH 33196](https://github.com/pandas-dev/pandas/issues/33196))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt") has
    gained an `ignore_index` (default `True`) argument that, if set to `False`, prevents
    the method from dropping the index ([GH 17440](https://github.com/pandas-dev/pandas/issues/17440)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.update()`](../reference/api/pandas.Series.update.html#pandas.Series.update
    "pandas.Series.update") now accepts objects that can be coerced to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), such as `dict` and `list`, mirroring the behavior of [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") ([GH 33215](https://github.com/pandas-dev/pandas/issues/33215))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate") have gained `engine` and `engine_kwargs`
    arguments that support executing functions with `Numba` ([GH 32854](https://github.com/pandas-dev/pandas/issues/32854),
    [GH 33388](https://github.com/pandas-dev/pandas/issues/33388))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.interpolate()`](../reference/api/pandas.core.resample.Resampler.interpolate.html#pandas.core.resample.Resampler.interpolate
    "pandas.core.resample.Resampler.interpolate") now supports SciPy interpolation
    method [`scipy.interpolate.CubicSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline
    "(in SciPy v1.13.0)") as method `cubicspline` ([GH 33670](https://github.com/pandas-dev/pandas/issues/33670))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` and `SeriesGroupBy` now implement the `sample` method for
    doing random sampling within groups ([GH 31775](https://github.com/pandas-dev/pandas/issues/31775))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_numpy()`](../reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy
    "pandas.DataFrame.to_numpy") now supports the `na_value` keyword to control the
    NA sentinel in the output array ([GH 33820](https://github.com/pandas-dev/pandas/issues/33820))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `api.extension.ExtensionArray.equals` to the extension array interface,
    similar to [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") ([GH 27081](https://github.com/pandas-dev/pandas/issues/27081))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The minimum supported dta version has increased to 105 in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `StataReader` ([GH 26667](https://github.com/pandas-dev/pandas/issues/26667)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") supports compression using the `compression` keyword
    argument. Compression can either be inferred or explicitly set using a string
    or a dictionary containing both the method and any additional arguments that are
    passed to the compression library. Compression was also added to the low-level
    Stata-file writers `StataWriter`, `StataWriter117`, and `StataWriterUTF8` ([GH
    26599](https://github.com/pandas-dev/pandas/issues/26599)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HDFStore.put()`](../reference/api/pandas.HDFStore.put.html#pandas.HDFStore.put
    "pandas.HDFStore.put") now accepts a `track_times` parameter. This parameter is
    passed to the `create_table` method of `PyTables` ([GH 32682](https://github.com/pandas-dev/pandas/issues/32682)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") and [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now accepts `xlabel` and `ylabel` parameters to present
    labels on x and y axis ([GH 9093](https://github.com/pandas-dev/pandas/issues/9093)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Made `Rolling` and `Expanding` iterable（[GH 11704](https://github.com/pandas-dev/pandas/issues/11704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Made `option_context` a [`contextlib.ContextDecorator`](https://docs.python.org/3/library/contextlib.html#contextlib.ContextDecorator
    "(in Python v3.12)"), which allows it to be used as a decorator over an entire
    function ([GH 34253](https://github.com/pandas-dev/pandas/issues/34253)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now accept an `errors` argument ([GH 22610](https://github.com/pandas-dev/pandas/issues/22610))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy.groupby.transform()` now allows `func` to be `pad`, `backfill`
    and `cumcount` ([GH 31269](https://github.com/pandas-dev/pandas/issues/31269)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now accepts an `nrows` parameter. ([GH 33916](https://github.com/pandas-dev/pandas/issues/33916)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist"), [`Series.hist()`](../reference/api/pandas.Series.hist.html#pandas.Series.hist
    "pandas.Series.hist"), [`core.groupby.DataFrameGroupBy.hist()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.hist.html#pandas.core.groupby.DataFrameGroupBy.hist
    "pandas.core.groupby.DataFrameGroupBy.hist"), and [`core.groupby.SeriesGroupBy.hist()`](../reference/api/pandas.core.groupby.SeriesGroupBy.hist.html#pandas.core.groupby.SeriesGroupBy.hist
    "pandas.core.groupby.SeriesGroupBy.hist") have gained the `legend` argument. Set
    to True to show a legend in the histogram. ([GH 6279](https://github.com/pandas-dev/pandas/issues/6279))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    and `append()` now preserve extension dtypes, for example combining a nullable
    integer column with a numpy integer column will no longer result in object dtype
    but preserve the integer dtype ([GH 33607](https://github.com/pandas-dev/pandas/issues/33607),
    [GH 34339](https://github.com/pandas-dev/pandas/issues/34339), [GH 34095](https://github.com/pandas-dev/pandas/issues/34095)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now allows to disable progress bar ([GH 33360](https://github.com/pandas-dev/pandas/issues/33360)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now supports the `max_results` kwarg from `pandas-gbq` ([GH 34639](https://github.com/pandas-dev/pandas/issues/34639)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") now support a new parameter `ddof` to support delta degrees
    of freedom as in the corresponding numpy methods ([GH 34611](https://github.com/pandas-dev/pandas/issues/34611)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") and [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string")’s `col_space` parameter now accepts a list or dict
    to change only some specific columns’ width ([GH 28917](https://github.com/pandas-dev/pandas/issues/28917)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") can now also write OpenOffice spreadsheet (.ods)
    files ([GH 27222](https://github.com/pandas-dev/pandas/issues/27222))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now accepts `ignore_index` to reset the index, similar
    to `pd.concat()` or [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") ([GH 34932](https://github.com/pandas-dev/pandas/issues/34932)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") and [`Series.to_markdown()`](../reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown") now accept `index` argument as an alias for tabulate’s
    `showindex` ([GH 32667](https://github.com/pandas-dev/pandas/issues/32667))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts string values like “0”, “0.0”, “1”, “1.0” as convertible to the nullable
    Boolean dtype ([GH 34859](https://github.com/pandas-dev/pandas/issues/34859))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now supports a `times` argument that allows `mean`
    to be calculated with observations spaced by the timestamps in `times` ([GH 34839](https://github.com/pandas-dev/pandas/issues/34839))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") now accept named aggregation for renaming the output columns/indexes.
    ([GH 26513](https://github.com/pandas-dev/pandas/issues/26513))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`compute.use_numba` now exists as a configuration option that utilizes the
    numba engine when available ([GH 33966](https://github.com/pandas-dev/pandas/issues/33966),
    [GH 35374](https://github.com/pandas-dev/pandas/issues/35374))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") now supports asymmetric error bars. Previously, if [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") received a “2xN” array with error values for `yerr` and/or
    `xerr`, the left/lower values (first row) were mirrored, while the right/upper
    values (second row) were ignored. Now, the first row represents the left/lower
    error values and the second row the right/upper error values. ([GH 9536](https://github.com/pandas-dev/pandas/issues/9536))  ##
    Notable bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '`MultiIndex.get_indexer` interprets `method` argument correctly'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This restores the behavior of [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") with `method='backfill'` or `method='pad'` to
    the behavior before pandas 0.23.0\. In particular, MultiIndexes are treated as
    a list of tuples and padding or backfilling is done with respect to the ordering
    of these lists of tuples ([GH 29896](https://github.com/pandas-dev/pandas/issues/29896)).
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example of this, given:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The differences in reindexing `df` with `mi_2` and using `method=''backfill''`
    can be seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas >= 0.23, < 1.1.0*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas <0.23, >= 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'And the differences in reindexing `df` with `mi_2` and using `method=''pad''`
    can be seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas >= 0.23, < 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas < 0.23, >= 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '### Failed label-based lookups always raise KeyError'
  prefs: []
  type: TYPE_NORMAL
- en: Label lookups `series[key]`, `series.loc[key]` and `frame.loc[key]` used to
    raise either `KeyError` or `TypeError` depending on the type of key and type of
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"). These
    now consistently raise `KeyError` ([GH 31867](https://github.com/pandas-dev/pandas/issues/31867))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Similarly, [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") and [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") will raise a `TypeError` instead of a `ValueError` if an incompatible
    key is passed, and `KeyError` if a missing key is passed, matching the behavior
    of `.loc[]` ([GH 31722](https://github.com/pandas-dev/pandas/issues/31722))  ###
    Failed Integer Lookups on MultiIndex Raise KeyError'
  prefs: []
  type: TYPE_NORMAL
- en: Indexing with integers with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") that has an integer-dtype first level incorrectly failed
    to raise `KeyError` when one or more of those integer keys is not present in the
    first level of the index ([GH 33539](https://github.com/pandas-dev/pandas/issues/33539))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") preserves right frame’s row order'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") now preserves the right frame’s row order when executing
    a right merge ([GH 27453](https://github.com/pandas-dev/pandas/issues/27453))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '### Assignment to multiple columns of a DataFrame when some columns do not
    exist'
  prefs: []
  type: TYPE_NORMAL
- en: Assignment to multiple columns of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when some of the columns do not exist would previously assign
    the values to the last column. Now, new columns will be constructed with the right
    values. ([GH 13658](https://github.com/pandas-dev/pandas/issues/13658))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]  ### Consistency across groupby reductions'
  prefs: []
  type: TYPE_NORMAL
- en: Using [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with `as_index=True` and the aggregation `nunique`
    would include the grouping column(s) in the columns of the result. Now the grouping
    column(s) only appear in the index, consistent with other reductions. ([GH 32579](https://github.com/pandas-dev/pandas/issues/32579))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Using [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with `as_index=False` and the function `idxmax`, `idxmin`,
    `mad`, `nunique`, `sem`, `skew`, or `std` would modify the grouping column. Now
    the grouping column remains unchanged, consistent with other reductions. ([GH
    21090](https://github.com/pandas-dev/pandas/issues/21090), [GH 10355](https://github.com/pandas-dev/pandas/issues/10355))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: The method [`DataFrameGroupBy.size()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size") would previously ignore `as_index=False`.
    Now the grouping columns are returned as columns, making the result a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"). ([GH 32599](https://github.com/pandas-dev/pandas/issues/32599))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]  ### `DataFrameGroupby.agg()` lost results with `as_index=False` when
    relabeling columns'
  prefs: []
  type: TYPE_NORMAL
- en: Previously `DataFrameGroupby.agg()` lost the result columns, when the `as_index`
    option was set to `False` and the result columns were relabeled. In this case
    the result values were replaced with the previous index ([GH 32240](https://github.com/pandas-dev/pandas/issues/32240)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]  ### apply and applymap on `DataFrame` evaluates first row/column only
    once'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]  ## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Added `check_freq` argument to `testing.assert_frame_equal` and `testing.assert_series_equal`'
  prefs: []
  type: TYPE_NORMAL
- en: The `check_freq` argument was added to [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") in pandas 1.1.0 and defaults to `True`.
    [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") now raise `AssertionError` if the indexes
    do not have the same frequency. Before pandas 1.1.0, the index frequency was not
    checked.
  prefs: []
  type: TYPE_NORMAL
- en: Increased minimum versions for dependencies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 33718](https://github.com/pandas-dev/pandas/issues/33718),
    [GH 29766](https://github.com/pandas-dev/pandas/issues/29766), [GH 29723](https://github.com/pandas-dev/pandas/issues/29723),
    pytables >= 3.4.3). If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.15.4 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.5.7 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.13.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Development changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The minimum version of Cython is now the most recent bug-fix version (0.29.16)
    ([GH 33334](https://github.com/pandas-dev/pandas/issues/33334)).  ## Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lookups on a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with a single-item list containing a slice (e.g. `ser[[slice(0, 4)]]`) are deprecated
    and will raise in a future version. Either convert the list to a tuple, or pass
    the slice directly instead ([GH 31333](https://github.com/pandas-dev/pandas/issues/31333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") and [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") with `numeric_only=None` will include `datetime64`
    and `datetime64tz` columns in a future version ([GH 29941](https://github.com/pandas-dev/pandas/issues/29941))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting values with `.loc` using a positional slice is deprecated and will raise
    in a future version. Use `.loc` with labels or `.iloc` with positions instead
    ([GH 31840](https://github.com/pandas-dev/pandas/issues/31840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") has deprecated accepting short names for `orient`
    and will raise in a future version ([GH 32515](https://github.com/pandas-dev/pandas/issues/32515))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.to_dense()` is deprecated and will be removed in a future version,
    use `np.asarray(cat)` instead ([GH 32639](https://github.com/pandas-dev/pandas/issues/32639))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `fastpath` keyword in the `SingleBlockManager` constructor is deprecated
    and will be removed in a future version ([GH 33092](https://github.com/pandas-dev/pandas/issues/33092))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing `suffixes` as a `set` in [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") is deprecated. Provide a tuple instead ([GH 33740](https://github.com/pandas-dev/pandas/issues/33740),
    [GH 34741](https://github.com/pandas-dev/pandas/issues/34741)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with a multi-dimensional indexer like `[:, None]` to return an `ndarray` now raises
    a `FutureWarning`. Convert to a NumPy array before indexing instead ([GH 27837](https://github.com/pandas-dev/pandas/issues/27837))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.is_mixed()` is deprecated and will be removed in a future version, check
    `index.inferred_type` directly instead ([GH 32922](https://github.com/pandas-dev/pandas/issues/32922))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing any arguments but the first one to [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") as positional arguments is deprecated. All other arguments
    should be given as keyword arguments ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing any arguments but `path_or_buf` (the first one) to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") as positional arguments is deprecated. All other arguments
    should be given as keyword arguments ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing any arguments but the first two to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") as positional arguments is deprecated. All other arguments
    should be given as keyword arguments ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.api.types.is_categorical()` is deprecated and will be removed in a
    future version; use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype") instead ([GH 33385](https://github.com/pandas-dev/pandas/issues/33385))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.get_value()` is deprecated and will be removed in a future version ([GH
    19728](https://github.com/pandas-dev/pandas/issues/19728))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.dt.week()` and `Series.dt.weekofyear()` are deprecated and will be
    removed in a future version, use `Series.dt.isocalendar().week()` instead ([GH
    33595](https://github.com/pandas-dev/pandas/issues/33595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.week()` and `DatetimeIndex.weekofyear` are deprecated and will
    be removed in a future version, use `DatetimeIndex.isocalendar().week` instead
    ([GH 33595](https://github.com/pandas-dev/pandas/issues/33595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeArray.week()` and `DatetimeArray.weekofyear` are deprecated and will
    be removed in a future version, use `DatetimeArray.isocalendar().week` instead
    ([GH 33595](https://github.com/pandas-dev/pandas/issues/33595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset.__call__()` is deprecated and will be removed in a future version,
    use `offset + other` instead ([GH 34171](https://github.com/pandas-dev/pandas/issues/34171))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`apply_index()` is deprecated and will be removed in a future version. Use
    `offset + other` instead ([GH 34580](https://github.com/pandas-dev/pandas/issues/34580))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.tshift()` and `Series.tshift()` are deprecated and will be removed
    in a future version, use [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") and [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") instead ([GH 11631](https://github.com/pandas-dev/pandas/issues/11631))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing an [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    object with a float key is deprecated, and will raise an `IndexError` in the future.
    You can manually convert to an integer key instead ([GH 34191](https://github.com/pandas-dev/pandas/issues/34191)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `squeeze` keyword in [`groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") is deprecated and will be removed in a future version
    ([GH 32380](https://github.com/pandas-dev/pandas/issues/32380))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `tz` keyword in [`Period.to_timestamp()`](../reference/api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp") is deprecated and will be removed in a future version;
    use `per.to_timestamp(...).tz_localize(tz)` instead ([GH 34522](https://github.com/pandas-dev/pandas/issues/34522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.to_perioddelta()` is deprecated and will be removed in a future
    version. Use `index - index.to_period(freq).to_timestamp()` instead ([GH 34853](https://github.com/pandas-dev/pandas/issues/34853))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") accepting a `value_name` that already exists is deprecated,
    and will be removed in a future version ([GH 34731](https://github.com/pandas-dev/pandas/issues/34731))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `center` keyword in the [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") function is deprecated and will be removed in a
    future version ([GH 20647](https://github.com/pandas-dev/pandas/issues/20647))  ##
    Performance improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") constructor ([GH 30543](https://github.com/pandas-dev/pandas/issues/30543))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor ([GH 30543](https://github.com/pandas-dev/pandas/issues/30543))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in flex arithmetic ops between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `axis=0` ([GH 31296](https://github.com/pandas-dev/pandas/issues/31296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in arithmetic ops between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `axis=1` ([GH 33600](https://github.com/pandas-dev/pandas/issues/33600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The internal index method `_shallow_copy()` now copies cached attributes over
    to the new index, avoiding creating these again on the new index. This can speed
    up many operations that depend on creating copies of existing indexes ([GH 28584](https://github.com/pandas-dev/pandas/issues/28584),
    [GH 32640](https://github.com/pandas-dev/pandas/issues/32640), [GH 32669](https://github.com/pandas-dev/pandas/issues/32669))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significant performance improvement when creating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with sparse values from `scipy.sparse` matrices using the
    [`DataFrame.sparse.from_spmatrix()`](../reference/api/pandas.DataFrame.sparse.from_spmatrix.html#pandas.DataFrame.sparse.from_spmatrix
    "pandas.DataFrame.sparse.from_spmatrix") constructor ([GH 32821](https://github.com/pandas-dev/pandas/issues/32821),
    [GH 32825](https://github.com/pandas-dev/pandas/issues/32825), [GH 32826](https://github.com/pandas-dev/pandas/issues/32826),
    [GH 32856](https://github.com/pandas-dev/pandas/issues/32856), [GH 32858](https://github.com/pandas-dev/pandas/issues/32858)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for groupby methods `Groupby.first()` and `Groupby.last()`
    ([GH 34178](https://github.com/pandas-dev/pandas/issues/34178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") for nullable (integer and Boolean) dtypes ([GH 33064](https://github.com/pandas-dev/pandas/issues/33064)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when constructing [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") objects ([GH 33921](https://github.com/pandas-dev/pandas/issues/33921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed performance regression in [`pandas.qcut()`](../reference/api/pandas.qcut.html#pandas.qcut
    "pandas.qcut") and [`pandas.cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") ([GH 33921](https://github.com/pandas-dev/pandas/issues/33921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in reductions (`sum`, `prod`, `min`, `max`) for nullable
    (integer and Boolean) dtypes ([GH 30982](https://github.com/pandas-dev/pandas/issues/30982),
    [GH 33261](https://github.com/pandas-dev/pandas/issues/33261), [GH 33442](https://github.com/pandas-dev/pandas/issues/33442)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in arithmetic operations between two [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects ([GH 32779](https://github.com/pandas-dev/pandas/issues/32779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RollingGroupby` ([GH 34052](https://github.com/pandas-dev/pandas/issues/34052))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in arithmetic operations (`sub`, `add`, `mul`, `div`)
    for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    ([GH 34297](https://github.com/pandas-dev/pandas/issues/34297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DataFrame[bool_indexer]` when `bool_indexer` is
    a `list` ([GH 33924](https://github.com/pandas-dev/pandas/issues/33924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Significant performance improvement of `io.formats.style.Styler.render()` with
    styles added with various ways such as [`io.formats.style.Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply"), `io.formats.style.Styler.applymap()`
    or [`io.formats.style.Styler.bar()`](../reference/api/pandas.io.formats.style.Styler.bar.html#pandas.io.formats.style.Styler.bar
    "pandas.io.formats.style.Styler.bar") ([GH 19917](https://github.com/pandas-dev/pandas/issues/19917))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to `Categorical.take()` raises a `ValueError`
    instead of `TypeError` ([GH 33660](https://github.com/pandas-dev/pandas/issues/33660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combining a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with integer categories and which contains missing values
    with a float dtype column in operations such as [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") or `append()` will now result in a float column instead of an
    object dtype column ([GH 33607](https://github.com/pandas-dev/pandas/issues/33607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    was unable to join on non-unique categorical indices ([GH 28189](https://github.com/pandas-dev/pandas/issues/28189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when passing categorical data to [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor along with `dtype=object` incorrectly returning a
    [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") instead of object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 32167](https://github.com/pandas-dev/pandas/issues/32167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") comparison operator `__ne__` would incorrectly evaluate
    to `False` when either element was missing ([GH 32276](https://github.com/pandas-dev/pandas/issues/32276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.fillna()` now accepts [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") `other` argument ([GH 32420](https://github.com/pandas-dev/pandas/issues/32420))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Repr of [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") was not distinguishing between `int` and `str` ([GH 33676](https://github.com/pandas-dev/pandas/issues/33676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Passing an integer dtype other than `int64` to `np.array(period_index, dtype=...)`
    will now raise `TypeError` instead of incorrectly using `int64` ([GH 32255](https://github.com/pandas-dev/pandas/issues/32255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_timestamp()`](../reference/api/pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp") now raises a `TypeError` if the axis is not a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"). Previously an `AttributeError` was raised ([GH 33327](https://github.com/pandas-dev/pandas/issues/33327))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_period()`](../reference/api/pandas.Series.to_period.html#pandas.Series.to_period
    "pandas.Series.to_period") now raises a `TypeError` if the axis is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"). Previously an `AttributeError` was raised ([GH 33327](https://github.com/pandas-dev/pandas/issues/33327))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    no longer accepts tuples for the `freq` argument ([GH 34658](https://github.com/pandas-dev/pandas/issues/34658))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from ambiguous epoch time and calling constructor again changed
    the [`Timestamp.value()`](../reference/api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") property ([GH 24329](https://github.com/pandas-dev/pandas/issues/24329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeArray.searchsorted()`, `TimedeltaArray.searchsorted()`, `PeriodArray.searchsorted()`
    not recognizing non-pandas scalars and incorrectly raising `ValueError` instead
    of `TypeError` ([GH 30950](https://github.com/pandas-dev/pandas/issues/30950))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where constructing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with dateutil timezone less than 128 nanoseconds before daylight
    saving time switch from winter to summer would result in nonexistent time ([GH
    31043](https://github.com/pandas-dev/pandas/issues/31043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.to_timestamp()`](../reference/api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp"), [`Period.start_time()`](../reference/api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") with microsecond frequency returning a timestamp one
    nanosecond earlier than the correct time ([GH 31475](https://github.com/pandas-dev/pandas/issues/31475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    raised a confusing error message when year, month or day is missing ([GH 31200](https://github.com/pandas-dev/pandas/issues/31200))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor incorrectly accepting `bool`-dtype inputs
    ([GH 32668](https://github.com/pandas-dev/pandas/issues/32668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.searchsorted()` not accepting a `list` or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") as its argument ([GH 32762](https://github.com/pandas-dev/pandas/issues/32762))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`PeriodIndex()`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") raised when passed a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of strings ([GH 26109](https://github.com/pandas-dev/pandas/issues/26109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") arithmetic when adding or subtracting an `np.ndarray` with
    `timedelta64` dtype ([GH 33296](https://github.com/pandas-dev/pandas/issues/33296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.to_period()`](../reference/api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period") not inferring the frequency when called with
    no arguments ([GH 33358](https://github.com/pandas-dev/pandas/issues/33358))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize") incorrectly retaining `freq` in some cases
    where the original `freq` is no longer valid ([GH 30511](https://github.com/pandas-dev/pandas/issues/30511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` losing `freq` and timezone in some cases
    ([GH 33604](https://github.com/pandas-dev/pandas/issues/33604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_indexer()` where incorrect output would be returned
    for mixed datetime-like targets ([GH 33741](https://github.com/pandas-dev/pandas/issues/33741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") addition and subtraction with some types of `DateOffset`
    objects incorrectly retaining an invalid `freq` attribute ([GH 33779](https://github.com/pandas-dev/pandas/issues/33779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where setting the `freq` attribute on an index could silently
    change the `freq` attribute on another index viewing the same data ([GH 33552](https://github.com/pandas-dev/pandas/issues/33552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") were not returning consistent results with [`Series.min()`](../reference/api/pandas.Series.min.html#pandas.Series.min
    "pandas.Series.min") and [`Series.max()`](../reference/api/pandas.Series.max.html#pandas.Series.max
    "pandas.Series.max") when called on objects initialized with empty `pd.to_datetime()`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` and `TimedeltaIndex.intersection()` with
    results not having the correct `name` attribute ([GH 33904](https://github.com/pandas-dev/pandas/issues/33904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.__setitem__()`, `TimedeltaArray.__setitem__()`, `PeriodArray.__setitem__()`
    incorrectly allowing values with `int64` dtype to be silently cast ([GH 33717](https://github.com/pandas-dev/pandas/issues/33717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") from [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") incorrectly raising `TypeError` in some cases where it should
    succeed and `IncompatibleFrequency` in some cases where it should raise `TypeError`
    ([GH 33883](https://github.com/pandas-dev/pandas/issues/33883))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") from a read-only NumPy array with non-ns resolution which converted
    to object dtype instead of coercing to `datetime64[ns]` dtype when within the
    timestamp bounds ([GH 34843](https://github.com/pandas-dev/pandas/issues/34843)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `freq` keyword in [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), `pd.tseries.frequencies.to_offset()` no longer allows
    tuples, pass as string instead ([GH 34703](https://github.com/pandas-dev/pandas/issues/34703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` when appending a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing a scalar tz-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") resulted in an object column instead of `datetime64[ns, tz]`
    dtype ([GH 35038](https://github.com/pandas-dev/pandas/issues/35038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`OutOfBoundsDatetime` issues an improved error message when timestamp is out
    of implementation bounds. ([GH 32967](https://github.com/pandas-dev/pandas/issues/32967))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `AbstractHolidayCalendar.holidays()` when no rules were defined ([GH
    31415](https://github.com/pandas-dev/pandas/issues/31415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick` comparisons raising `TypeError` when comparing against timedelta-like
    objects ([GH 34088](https://github.com/pandas-dev/pandas/issues/34088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick` multiplication raising `TypeError` when multiplying by a float
    ([GH 34486](https://github.com/pandas-dev/pandas/issues/34486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with a high precision integer that would round the [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") components ([GH 31354](https://github.com/pandas-dev/pandas/issues/31354))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in dividing `np.nan` or `None` by [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") incorrectly returning `NaT` ([GH 31869](https://github.com/pandas-dev/pandas/issues/31869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    now understands `µs` as an identifier for microsecond ([GH 32899](https://github.com/pandas-dev/pandas/issues/32899))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    string representation now includes nanoseconds, when nanoseconds are non-zero
    ([GH 9309](https://github.com/pandas-dev/pandas/issues/9309))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object against an `np.ndarray` with `timedelta64` dtype incorrectly
    viewing all entries as unequal ([GH 33441](https://github.com/pandas-dev/pandas/issues/33441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") that produced an extra point on a edge case ([GH 30353](https://github.com/pandas-dev/pandas/issues/30353),
    [GH 33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that produced an extra point on a edge case ([GH
    30353](https://github.com/pandas-dev/pandas/issues/30353), [GH 13022](https://github.com/pandas-dev/pandas/issues/13022),
    [GH 33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that ignored the `loffset` argument when dealing
    with timedelta ([GH 7687](https://github.com/pandas-dev/pandas/issues/7687), [GH
    33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") that ignored the `unit` argument for string input ([GH
    12136](https://github.com/pandas-dev/pandas/issues/12136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `infer_datetime_format=True` where timezone names (e.g.
    `UTC`) would not be parsed correctly ([GH 33133](https://github.com/pandas-dev/pandas/issues/33133))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.floordiv()`](../reference/api/pandas.DataFrame.floordiv.html#pandas.DataFrame.floordiv
    "pandas.DataFrame.floordiv") with `axis=0` not treating division-by-zero like
    [`Series.floordiv()`](../reference/api/pandas.Series.floordiv.html#pandas.Series.floordiv
    "pandas.Series.floordiv") ([GH 31271](https://github.com/pandas-dev/pandas/issues/31271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") with string argument `"uint64"` and `errors="coerce"` silently
    fails ([GH 32394](https://github.com/pandas-dev/pandas/issues/32394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") with `downcast="unsigned"` fails for empty data ([GH 32493](https://github.com/pandas-dev/pandas/issues/32493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") with `numeric_only=False` and either `datetime64` dtype
    or `PeriodDtype` column incorrectly raising `TypeError` ([GH 32426](https://github.com/pandas-dev/pandas/issues/32426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.count()`](../reference/api/pandas.DataFrame.count.html#pandas.DataFrame.count
    "pandas.DataFrame.count") with `level="foo"` and index level `"foo"` containing
    NaNs causes segmentation fault ([GH 21824](https://github.com/pandas-dev/pandas/issues/21824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") with `axis=1` returning incorrect results with mixed
    dtypes ([GH 32995](https://github.com/pandas-dev/pandas/issues/32995))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") raising when handling nullable integer columns with `pandas.NA`
    ([GH 33803](https://github.com/pandas-dev/pandas/issues/33803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects with non-overlapping columns with duplicate labels
    causing an infinite loop ([GH 35194](https://github.com/pandas-dev/pandas/issues/35194))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") addition and subtraction between object-dtype objects and `datetime64`
    dtype objects ([GH 33824](https://github.com/pandas-dev/pandas/issues/33824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") giving incorrect results when comparing a `Float64Index`
    and object [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    ([GH 35217](https://github.com/pandas-dev/pandas/issues/35217))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions (e.g. `df.min()`, `df.max()`) with `ExtensionArray`
    dtypes ([GH 34520](https://github.com/pandas-dev/pandas/issues/34520), [GH 32651](https://github.com/pandas-dev/pandas/issues/32651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") now raise a ValueError if `limit_direction` is
    `''forward''` or `''both''` and `method` is `''backfill''` or `''bfill''` or `limit_direction`
    is `''backward''` or `''both''` and `method` is `''pad''` or `''ffill''` ([GH
    34746](https://github.com/pandas-dev/pandas/issues/34746))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction from NumPy array with big-endian `datetime64` dtype ([GH 29684](https://github.com/pandas-dev/pandas/issues/29684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") construction with large nanoseconds keyword value ([GH 32402](https://github.com/pandas-dev/pandas/issues/32402))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction where sets would be duplicated rather than raising
    ([GH 32582](https://github.com/pandas-dev/pandas/issues/32582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor no longer accepts a list of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects. Because of changes to NumPy, [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects are now consistently treated as 2D objects, so a list
    of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects is considered 3D, and no longer acceptable for the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor ([GH 32289](https://github.com/pandas-dev/pandas/issues/32289)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when initiating a frame with lists and assign `columns` with
    nested list for `MultiIndex` ([GH 32173](https://github.com/pandas-dev/pandas/issues/32173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for invalid construction of list when creating a new
    index ([GH 35190](https://github.com/pandas-dev/pandas/issues/35190))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the [`astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") method when converting “string” dtype data to nullable
    integer dtype ([GH 32450](https://github.com/pandas-dev/pandas/issues/32450)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed issue where taking `min` or `max` of a `StringArray` or `Series` with
    `StringDtype` type would raise. ([GH 31746](https://github.com/pandas-dev/pandas/issues/31746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") returning `NaN` output when other had [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") type ([GH 33425](https://github.com/pandas-dev/pandas/issues/33425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.api.dtypes.is_string_dtype()` no longer incorrectly identifies categorical
    series as string.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalArray` incorrectly allowing the underlying data to be changed
    when setting values ([GH 32782](https://github.com/pandas-dev/pandas/issues/32782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") now raises a `TypeError` if a `level` keyword is supplied
    and the axis is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). Previously an `AttributeError` was raised ([GH 33610](https://github.com/pandas-dev/pandas/issues/33610))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in slicing on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a partial-timestamp dropping high-resolution indices
    near the end of a year, quarter, or month ([GH 31064](https://github.com/pandas-dev/pandas/issues/31064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` treating higher-resolution strings differently
    from `PeriodIndex.get_value()` ([GH 31172](https://github.com/pandas-dev/pandas/issues/31172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") and [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") not matching `.loc` behavior when looking up an integer
    in a `Float64Index` ([GH 31329](https://github.com/pandas-dev/pandas/issues/31329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.is_monotonic()` incorrectly returning `True` when containing
    leading `NaT` entries ([GH 31437](https://github.com/pandas-dev/pandas/issues/31437))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_loc()` raising `KeyError` with converted-integer key
    instead of the user-passed key ([GH 31425](https://github.com/pandas-dev/pandas/issues/31425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.xs()`](../reference/api/pandas.Series.xs.html#pandas.Series.xs
    "pandas.Series.xs") incorrectly returning `Timestamp` instead of `datetime64`
    in some object-dtype cases ([GH 31630](https://github.com/pandas-dev/pandas/issues/31630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iat()`](../reference/api/pandas.DataFrame.iat.html#pandas.DataFrame.iat
    "pandas.DataFrame.iat") incorrectly returning `Timestamp` instead of `datetime`
    in some object-dtype cases ([GH 32809](https://github.com/pandas-dev/pandas/issues/32809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") when either columns or index is non-unique ([GH 33041](https://github.com/pandas-dev/pandas/issues/33041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when indexing with an integer key on a object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") that is not all-integers ([GH 31905](https://github.com/pandas-dev/pandas/issues/31905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with duplicate columns incorrectly setting values for all
    matching columns ([GH 15686](https://github.com/pandas-dev/pandas/issues/15686),
    [GH 22036](https://github.com/pandas-dev/pandas/issues/22036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") incorrectly allowing lookups of non-matching datetime-like
    dtypes ([GH 32650](https://github.com/pandas-dev/pandas/issues/32650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` indexing with non-standard scalars, e.g. `np.dtype`
    ([GH 32684](https://github.com/pandas-dev/pandas/issues/32684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor where an unhelpful error message was raised for NumPy scalars ([GH
    33017](https://github.com/pandas-dev/pandas/issues/33017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.lookup()` incorrectly raising an `AttributeError` when `frame.index`
    or `frame.columns` is not unique; this will now raise a `ValueError` with a helpful
    error message ([GH 33041](https://github.com/pandas-dev/pandas/issues/33041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    where a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") could not be added or subtracted from a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") interval ([GH 32023](https://github.com/pandas-dev/pandas/issues/32023))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.copy()`](../reference/api/pandas.DataFrame.copy.html#pandas.DataFrame.copy
    "pandas.DataFrame.copy") not invalidating _item_cache after copy caused post-copy
    value updates to not be reflected ([GH 31784](https://github.com/pandas-dev/pandas/issues/31784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") throwing an error when a `datetime64[ns, tz]` value is provided
    ([GH 32395](https://github.com/pandas-dev/pandas/issues/32395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` with an integer key and a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with leading integer level failing to raise `KeyError` if
    the key is not present in the first level ([GH 33355](https://github.com/pandas-dev/pandas/issues/33355))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when slicing a single column [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `ExtensionDtype` (e.g. `df.iloc[:, :1]`) returning an
    invalid result ([GH 32957](https://github.com/pandas-dev/pandas/issues/32957))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` and `TimedeltaIndex.insert()` causing index
    `freq` to be lost when setting an element into an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 33573](https://github.com/pandas-dev/pandas/issues/33573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and a list-like key of integers ([GH 33473](https://github.com/pandas-dev/pandas/issues/33473))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` allowing missing labels with `np.ndarray`, [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") indexers but not `list`, these now all raise `KeyError` ([GH
    33646](https://github.com/pandas-dev/pandas/issues/33646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") and [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") where index was assumed to be monotone increasing ([GH
    33756](https://github.com/pandas-dev/pandas/issues/33756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing with a list of strings representing datetimes failed on [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 11278](https://github.com/pandas-dev/pandas/issues/11278))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would raise an exception on valid inputs ([GH 26989](https://github.com/pandas-dev/pandas/issues/26989))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with dictionary of values changes columns with dtype of
    `int` to `float` ([GH 34573](https://github.com/pandas-dev/pandas/issues/34573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would raise an `IndexingError` when accessing a `None` value
    ([GH 34318](https://github.com/pandas-dev/pandas/issues/34318))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") and [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") would not preserve data types on an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19602](https://github.com/pandas-dev/pandas/issues/19602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    indexing with a `time` key on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `NaT` entries ([GH 35114](https://github.com/pandas-dev/pandas/issues/35114))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Calling `fillna()` on an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now correctly returns a shallow copied object. The behaviour
    is now consistent with [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and a non-empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 32543](https://github.com/pandas-dev/pandas/issues/32543)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") when argument `to_replace` is of type dict/list and is
    used on a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    containing `<NA>` was raising a `TypeError`. The method now handles this by ignoring
    `<NA>` values when doing the comparison for the replacement ([GH 32621](https://github.com/pandas-dev/pandas/issues/32621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`any()`](../reference/api/pandas.Series.any.html#pandas.Series.any "pandas.Series.any")
    and [`all()`](../reference/api/pandas.Series.all.html#pandas.Series.all "pandas.Series.all")
    incorrectly returning `<NA>` for all `False` or all `True` values using the nulllable
    Boolean dtype and with `skipna=False` ([GH 33253](https://github.com/pandas-dev/pandas/issues/33253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified documentation on interpolate with `method=akima`. The `der` parameter
    must be scalar or `None` ([GH 33426](https://github.com/pandas-dev/pandas/issues/33426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") uses the correct axis convention now. Previously
    interpolating along columns lead to interpolation along indices and vice versa.
    Furthermore interpolating with methods `pad`, `ffill`, `bfill` and `backfill`
    are identical to using these methods with [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") ([GH 12918](https://github.com/pandas-dev/pandas/issues/12918),
    [GH 29146](https://github.com/pandas-dev/pandas/issues/29146))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") when called on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with column names of string type was throwing a ValueError.
    The method is now independent of the type of the column names ([GH 33956](https://github.com/pandas-dev/pandas/issues/33956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing [`NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA") into a
    format string using format specs will now work. For example `"{:.1f}".format(pd.NA)`
    would previously raise a `ValueError`, but will now return the string `"<NA>"`
    ([GH 34740](https://github.com/pandas-dev/pandas/issues/34740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") not raising on invalid `na_action` ([GH 32815](https://github.com/pandas-dev/pandas/issues/32815))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`DataFrame.swaplevels()` now raises a `TypeError` if the axis is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). Previously an `AttributeError` was raised ([GH 31126](https://github.com/pandas-dev/pandas/issues/31126))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.loc()` when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). The returned values were not in the same order as the given
    inputs ([GH 22797](https://github.com/pandas-dev/pandas/issues/22797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: Bug in `MultiIndex.intersection()` was not guaranteed to preserve order when
    `sort=False`. ([GH 31325](https://github.com/pandas-dev/pandas/issues/31325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") was dropping [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") names. ([GH 34564](https://github.com/pandas-dev/pandas/issues/34564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Bug when joining two [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") without specifying level with different columns. Return-indexers
    parameter was ignored. ([GH 34074](https://github.com/pandas-dev/pandas/issues/34074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Passing a `set` as `names` argument to [`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`pandas.read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), or [`pandas.read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") will raise `ValueError: Names should be an ordered collection.`
    ([GH 34946](https://github.com/pandas-dev/pandas/issues/34946))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in print-out when `display.precision` is zero. ([GH 20359](https://github.com/pandas-dev/pandas/issues/20359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where integer overflow was occurring when json contains big
    number strings. ([GH 30320](https://github.com/pandas-dev/pandas/issues/30320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    will now raise a `ValueError` when the arguments `header` and `prefix` both are
    not `None`. ([GH 27394](https://github.com/pandas-dev/pandas/issues/27394))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") was raising `NotFoundError` when `path_or_buf` was
    an S3 URI ([GH 28375](https://github.com/pandas-dev/pandas/issues/28375))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") overwriting pyarrow’s default for `coerce_timestamps`;
    following pyarrow’s default allows writing nanosecond timestamps with `version="2.0"`
    ([GH 31652](https://github.com/pandas-dev/pandas/issues/31652)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising `TypeError` when `sep=None` was used in combination
    with `comment` keyword ([GH 31396](https://github.com/pandas-dev/pandas/issues/31396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` that caused it to set to `int64` the dtype of a `datetime64`
    column when reading a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in Python 3 from fixed format written in Python 2 ([GH 31750](https://github.com/pandas-dev/pandas/issues/31750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now handles dates and datetimes larger than [`Timestamp.max`](../reference/api/pandas.Timestamp.max.html#pandas.Timestamp.max
    "pandas.Timestamp.max") returning them as [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)") objects ([GH 20927](https://github.com/pandas-dev/pandas/issues/20927))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `Timedelta` objects would not be serialized
    correctly with `date_format="iso"` ([GH 28256](https://github.com/pandas-dev/pandas/issues/28256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    will raise a `ValueError` when the column names passed in `parse_dates` are missing
    in the `Dataframe` ([GH 31251](https://github.com/pandas-dev/pandas/issues/31251))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") where a UTF-8 string with a high surrogate would cause a
    segmentation violation ([GH 23809](https://github.com/pandas-dev/pandas/issues/23809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was causing a file descriptor leak on an empty file ([GH 31488](https://github.com/pandas-dev/pandas/issues/31488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was causing a segfault when there were blank lines between
    the header and data rows ([GH 28071](https://github.com/pandas-dev/pandas/issues/28071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising a misleading exception on a permissions issue ([GH
    23784](https://github.com/pandas-dev/pandas/issues/23784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising an `IndexError` when `header=None` and two extra
    data columns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") was raising an `AttributeError` when reading files from Google
    Cloud Storage ([GH 33069](https://github.com/pandas-dev/pandas/issues/33069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") where an `AttributeError` was raised when saving an
    out of bounds date ([GH 26761](https://github.com/pandas-dev/pandas/issues/26761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") did not correctly handle multiple embedded spaces in OpenDocument
    text cells. ([GH 32207](https://github.com/pandas-dev/pandas/issues/32207))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") was raising `TypeError` when reading a `list` of Booleans
    into a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series").
    ([GH 31464](https://github.com/pandas-dev/pandas/issues/31464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where location specified by `record_path`
    doesn’t point to an array. ([GH 26284](https://github.com/pandas-dev/pandas/issues/26284))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") has a more explicit error message when loading an unsupported
    HDF file ([GH 9539](https://github.com/pandas-dev/pandas/issues/9539))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_feather()` was raising an `ArrowIOError` when reading an s3 or
    http file path ([GH 29055](https://github.com/pandas-dev/pandas/issues/29055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") could not handle the column name `render` and was
    raising an `KeyError` ([GH 34331](https://github.com/pandas-dev/pandas/issues/34331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `execute()` was raising a `ProgrammingError` for some DB-API drivers
    when the SQL statement contained the `%` character and no parameters were present
    ([GH 34211](https://github.com/pandas-dev/pandas/issues/34211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataReader()` which resulted in categorical variables with different
    dtypes when reading data using an iterator. ([GH 31544](https://github.com/pandas-dev/pandas/issues/31544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HDFStore.keys()`](../reference/api/pandas.HDFStore.keys.html#pandas.HDFStore.keys
    "pandas.HDFStore.keys") has now an optional `include` parameter that allows the
    retrieval of all native HDF5 table names ([GH 29916](https://github.com/pandas-dev/pandas/issues/29916))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TypeError` exceptions raised by [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") were showing as `parser_f` when an unexpected keyword argument
    was passed ([GH 25648](https://github.com/pandas-dev/pandas/issues/25648))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") for ODS files removes 0.0 values ([GH 27222](https://github.com/pandas-dev/pandas/issues/27222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ujson.encode()` was raising an `OverflowError` with numbers larger than
    `sys.maxsize` ([GH 34395](https://github.com/pandas-dev/pandas/issues/34395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.append_to_multiple()` was raising a `ValueError` when the `min_itemsize`
    parameter is set ([GH 11238](https://github.com/pandas-dev/pandas/issues/11238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `create_table()` now raises an error when `column` argument was not specified
    in `data_columns` on input ([GH 28156](https://github.com/pandas-dev/pandas/issues/28156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now could read line-delimited json file from a file url while `lines` and `chunksize`
    are set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") when reading DataFrames with `-np.inf` entries with
    MySQL now has a more explicit `ValueError` ([GH 34431](https://github.com/pandas-dev/pandas/issues/34431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where capitalised files extensions were not decompressed by read_* functions
    ([GH 35164](https://github.com/pandas-dev/pandas/issues/35164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") that was raising a `TypeError` when `header=None` and `index_col`
    is given as a `list` ([GH 31783](https://github.com/pandas-dev/pandas/issues/31783))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") where datetime values are used in the header in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 34748](https://github.com/pandas-dev/pandas/issues/34748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") no longer takes `**kwds` arguments. This means that passing
    in the keyword argument `chunksize` now raises a `TypeError` (previously raised
    a `NotImplementedError`), while passing in the keyword argument `encoding` now
    raises a `TypeError` ([GH 34464](https://github.com/pandas-dev/pandas/issues/34464))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") was incorrectly losing timezone information in
    timezone-aware `datetime64` columns ([GH 32535](https://github.com/pandas-dev/pandas/issues/32535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") for line/bar now accepts color by dictionary ([GH 8193](https://github.com/pandas-dev/pandas/issues/8193)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") where weights are not working for multiple columns
    ([GH 33173](https://github.com/pandas-dev/pandas/issues/33173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") and `DataFrame.plot.boxplot()` lost color attributes
    of `medianprops`, `whiskerprops`, `capprops` and `boxprops` ([GH 30346](https://github.com/pandas-dev/pandas/issues/30346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") where the order of `column` argument was ignored ([GH
    29235](https://github.com/pandas-dev/pandas/issues/29235))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") that when adding multiple plots with different
    `cmap`, colorbars always use the first `cmap` ([GH 33389](https://github.com/pandas-dev/pandas/issues/33389))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") was adding a colorbar to the plot even if the
    argument `c` was assigned to a column containing color names ([GH 34316](https://github.com/pandas-dev/pandas/issues/34316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.plotting.bootstrap_plot()`](../reference/api/pandas.plotting.bootstrap_plot.html#pandas.plotting.bootstrap_plot
    "pandas.plotting.bootstrap_plot") was causing cluttered axes and overlapping labels
    ([GH 34905](https://github.com/pandas-dev/pandas/issues/34905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") caused an error when plotting variable marker
    sizes ([GH 32904](https://github.com/pandas-dev/pandas/issues/32904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using a [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") with `count`, `min`, `max`, `median`, `skew`,
    `cov`, `corr` will now return correct results for any monotonic [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") descendant ([GH 32865](https://github.com/pandas-dev/pandas/issues/32865))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupby.mean()` and `SeriesGroupby.mean()` (and similarly for `median()`,
    `std()` and `var()`) now raise a `TypeError` if a non-accepted keyword argument
    is passed into it. Previously an `UnsupportedFunctionCall` was raised (`AssertionError`
    if `min_count` passed into `median()`) ([GH 31485](https://github.com/pandas-dev/pandas/issues/31485))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") raising `ValueError` when the `by`
    axis is not sorted, has duplicates, and the applied `func` does not mutate passed
    in objects ([GH 30667](https://github.com/pandas-dev/pandas/issues/30667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.transform()` produces an incorrect result with transformation
    functions ([GH 30918](https://github.com/pandas-dev/pandas/issues/30918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") were returning the wrong result
    when grouping by multiple keys of which some were categorical and others not ([GH
    32494](https://github.com/pandas-dev/pandas/issues/32494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") and [`SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") causing segmentation fault when grouped-by
    columns contain NaNs ([GH 32841](https://github.com/pandas-dev/pandas/issues/32841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") produces inconsistent type when aggregating Boolean [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 32894](https://github.com/pandas-dev/pandas/issues/32894))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.sum()` and `SeriesGroupBy.sum()` where a large negative
    number would be returned when the number of non-null values was below `min_count`
    for nullable integer dtypes ([GH 32861](https://github.com/pandas-dev/pandas/issues/32861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.quantile()` was raising on nullable integers ([GH 33136](https://github.com/pandas-dev/pandas/issues/33136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where an `AmbiguousTimeError` would be raised when
    the resulting timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") had a DST transition at midnight ([GH 25758](https://github.com/pandas-dev/pandas/issues/25758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where a `ValueError` would be raised when grouping
    by a categorical column with read-only categories and `sort=False` ([GH 33410](https://github.com/pandas-dev/pandas/issues/33410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg"), [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"), [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform"), [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform"), [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample"), and [`SeriesGroupBy.resample()`](../reference/api/pandas.core.groupby.SeriesGroupBy.resample.html#pandas.core.groupby.SeriesGroupBy.resample
    "pandas.core.groupby.SeriesGroupBy.resample") where subclasses are not preserved
    ([GH 28330](https://github.com/pandas-dev/pandas/issues/28330))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.agg()` where any column name was accepted in the named
    aggregation of `SeriesGroupBy` previously. The behaviour now allows only `str`
    and callables else would raise `TypeError`. ([GH 34422](https://github.com/pandas-dev/pandas/issues/34422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") lost the name of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when one of the `agg` keys referenced an empty list ([GH 32580](https://github.com/pandas-dev/pandas/issues/32580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.apply()` where `center=True` was ignored when `engine='numba'`
    was specified ([GH 34784](https://github.com/pandas-dev/pandas/issues/34784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.ewm.cov()` was throwing `AssertionError` for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") inputs ([GH 34440](https://github.com/pandas-dev/pandas/issues/34440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") raised `TypeError` for non-numeric
    types rather than dropping the columns ([GH 27892](https://github.com/pandas-dev/pandas/issues/27892))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") when `func='nunique'` and columns
    are of type `datetime64`, the result would also be of type `datetime64` instead
    of `int64` ([GH 35109](https://github.com/pandas-dev/pandas/issues/35109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") raising an `AttributeError` when selecting a column
    and aggregating with `as_index=False` ([GH 35246](https://github.com/pandas-dev/pandas/issues/35246)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.first()` and `DataFrameGroupBy.last()` that would raise
    an unnecessary `ValueError` when grouping on multiple `Categoricals` ([GH 34951](https://github.com/pandas-dev/pandas/issues/34951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug effecting all numeric and Boolean reduction methods not returning subclassed
    data type. ([GH 25596](https://github.com/pandas-dev/pandas/issues/25596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") when only `MultiIndexed` columns is set ([GH 17038](https://github.com/pandas-dev/pandas/issues/17038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") and [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") can take tuple names in `MultiIndexed` data ([GH 19966](https://github.com/pandas-dev/pandas/issues/19966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") when `margin` is `True` and only `column` is defined
    ([GH 31016](https://github.com/pandas-dev/pandas/issues/31016))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed incorrect error message in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") when `columns` is set to `None`. ([GH 30924](https://github.com/pandas-dev/pandas/issues/30924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when inputs are two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and have tuple names, the output will keep a dummy [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") as columns. ([GH 18321](https://github.com/pandas-dev/pandas/issues/18321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") can now take lists for `index` and `columns` arguments
    ([GH 21425](https://github.com/pandas-dev/pandas/issues/21425))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where the resulting indices are not copied when `copy=True` ([GH 29879](https://github.com/pandas-dev/pandas/issues/29879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.aggregate()` was resulting in aggregations being overwritten
    when they shared the same name ([GH 30880](https://github.com/pandas-dev/pandas/issues/30880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") would lose the `name` attribute when converting from `Float64Index`
    to `Int64Index`, or when casting to an `ExtensionArray` dtype ([GH 32013](https://github.com/pandas-dev/pandas/issues/32013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.append()` will now raise a `TypeError` when passed a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or a sequence containing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 31413](https://github.com/pandas-dev/pandas/issues/31413))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") will raise a `TypeError` if `to_replace` is not an expected
    type. Previously the `replace` would fail silently ([GH 18634](https://github.com/pandas-dev/pandas/issues/18634))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug on inplace operation of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") that was adding a column to the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from where it was originally dropped from (using `inplace=True`)
    ([GH 30484](https://github.com/pandas-dev/pandas/issues/30484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") where callback was called with [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") parameter even though `raw=True` requested. ([GH 32423](https://github.com/pandas-dev/pandas/issues/32423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") losing timezone information when creating a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level from a column with timezone-aware dtype ([GH 32558](https://github.com/pandas-dev/pandas/issues/32558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where when passing a non-dict mapping as `objs` would raise a `TypeError` ([GH
    32863](https://github.com/pandas-dev/pandas/issues/32863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") now provides more descriptive `SpecificationError` message
    when attempting to aggregate a non-existent column ([GH 32755](https://github.com/pandas-dev/pandas/issues/32755))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns and [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") rows were used ([GH 32624](https://github.com/pandas-dev/pandas/issues/32624),
    [GH 24729](https://github.com/pandas-dev/pandas/issues/24729) and [GH 28306](https://github.com/pandas-dev/pandas/issues/28306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Appending a dictionary to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") without passing `ignore_index=True` will raise `TypeError:
    Can only append a dict if ignore_index=True` instead of `TypeError: Can only append
    a :class:`Series` if ignore_index=True or if the :class:`Series` has a name` ([GH
    30871](https://github.com/pandas-dev/pandas/issues/30871))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith"), [`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage"), [`DataFrame.dot()`](../reference/api/pandas.DataFrame.dot.html#pandas.DataFrame.dot
    "pandas.DataFrame.dot"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.duplicated()`](../reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated
    "pandas.DataFrame.duplicated"), [`DataFrame.isin()`](../reference/api/pandas.DataFrame.isin.html#pandas.DataFrame.isin
    "pandas.DataFrame.isin"), [`DataFrame.count()`](../reference/api/pandas.DataFrame.count.html#pandas.DataFrame.count
    "pandas.DataFrame.count"), [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode"), [`Series.asof()`](../reference/api/pandas.Series.asof.html#pandas.Series.asof
    "pandas.Series.asof") and [`DataFrame.asof()`](../reference/api/pandas.DataFrame.asof.html#pandas.DataFrame.asof
    "pandas.DataFrame.asof") not returning subclassed types. ([GH 31331](https://github.com/pandas-dev/pandas/issues/31331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    was not allowing for concatenation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with duplicate keys ([GH 33654](https://github.com/pandas-dev/pandas/issues/33654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") raised
    an error when the argument `labels` contains duplicates ([GH 33141](https://github.com/pandas-dev/pandas/issues/33141))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure only named functions can be used in [`eval()`](../reference/api/pandas.eval.html#pandas.eval
    "pandas.eval") ([GH 32460](https://github.com/pandas-dev/pandas/issues/32460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.aggregate()` and [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate") was causing a recursive loop in some cases ([GH 34224](https://github.com/pandas-dev/pandas/issues/34224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where melting [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns with `col_level > 0` would raise a `KeyError` on
    `id_vars` ([GH 34129](https://github.com/pandas-dev/pandas/issues/34129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and empty `cond` having non-bool dtype ([GH 34592](https://github.com/pandas-dev/pandas/issues/34592))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") would raise `ValueError` for elements with `S` dtype
    ([GH 34529](https://github.com/pandas-dev/pandas/issues/34529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Creating a `SparseArray` from timezone-aware dtype will issue a warning before
    dropping timezone information, instead of doing so silently ([GH 32501](https://github.com/pandas-dev/pandas/issues/32501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.from_spmatrix()` wrongly read scipy sparse matrix
    ([GH 31991](https://github.com/pandas-dev/pandas/issues/31991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") with `SparseArray` raised a `TypeError` ([GH 25777](https://github.com/pandas-dev/pandas/issues/25777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing an all-sparse `SparseArray` filled with `NaN` when
    indexed by a list-like ([GH 27781](https://github.com/pandas-dev/pandas/issues/27781),
    [GH 29563](https://github.com/pandas-dev/pandas/issues/29563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The repr of [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") now includes the repr of its `fill_value` attribute. Previously
    it used `fill_value`’s string representation ([GH 34352](https://github.com/pandas-dev/pandas/issues/34352))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") could not be cast to [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") ([GH 33113](https://github.com/pandas-dev/pandas/issues/33113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`arrays.SparseArray()`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") was returning the incorrect type when indexing a
    sparse dataframe with an iterable ([GH 34526](https://github.com/pandas-dev/pandas/issues/34526),
    [GH 34540](https://github.com/pandas-dev/pandas/issues/34540))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") would raise on empty input of `Int64` dtype ([GH
    33317](https://github.com/pandas-dev/pandas/issues/33317))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when concatenating [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects with non-overlapping columns resulting in object-dtype
    columns rather than preserving the extension dtype ([GH 27692](https://github.com/pandas-dev/pandas/issues/27692),
    [GH 33027](https://github.com/pandas-dev/pandas/issues/33027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `StringArray.isna()` would return `False` for NA values when
    `pandas.options.mode.use_inf_as_na` was set to `True` ([GH 33655](https://github.com/pandas-dev/pandas/issues/33655))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction with EA dtype and index but no data or scalar data fails ([GH 26469](https://github.com/pandas-dev/pandas/issues/26469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug that caused `Series.__repr__()` to crash for extension types whose
    elements are multidimensional arrays ([GH 33770](https://github.com/pandas-dev/pandas/issues/33770)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.update()`](../reference/api/pandas.Series.update.html#pandas.Series.update
    "pandas.Series.update") would raise a `ValueError` for `ExtensionArray` dtypes
    with missing values ([GH 33980](https://github.com/pandas-dev/pandas/issues/33980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `StringArray.memory_usage()` was not implemented ([GH 33963](https://github.com/pandas-dev/pandas/issues/33963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `DataFrameGroupBy()` would ignore the `min_count` argument for
    aggregations on nullable Boolean dtypes ([GH 34051](https://github.com/pandas-dev/pandas/issues/34051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where the constructor of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `dtype='string'` would fail ([GH 27953](https://github.com/pandas-dev/pandas/issues/27953),
    [GH 33623](https://github.com/pandas-dev/pandas/issues/33623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column set to scalar extension type was considered an object
    type rather than the extension type ([GH 34832](https://github.com/pandas-dev/pandas/issues/34832))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in `IntegerArray.astype()` to correctly copy the mask as well ([GH
    34931](https://github.com/pandas-dev/pandas/issues/34931)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Set operations on an object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") now always return object-dtype results ([GH 31401](https://github.com/pandas-dev/pandas/issues/31401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed [`pandas.testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") to correctly raise if the `left` argument
    is a different subclass with `check_series_type=True` ([GH 32670](https://github.com/pandas-dev/pandas/issues/32670)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting a missing attribute in a [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") or [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") string raises the correct `AttributeError` ([GH 32408](https://github.com/pandas-dev/pandas/issues/32408))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`pandas.testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") where dtypes were checked for `Interval`
    and `ExtensionArray` operands when `check_dtype` was `False` ([GH 32747](https://github.com/pandas-dev/pandas/issues/32747))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__dir__()` caused a segfault when using unicode surrogates
    in a column name ([GH 25509](https://github.com/pandas-dev/pandas/issues/25509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals") and [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") in allowing subclasses to be equal ([GH 34402](https://github.com/pandas-dev/pandas/issues/34402)).  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 368 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 3vts +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Brooks +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abbie Popa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Achmad Syarif Hidayatullah +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam W Bagaskarta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrian Mastronardi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aidan Montare +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akbar Septriyan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akos Furton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alejandro Hall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Hall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Itkes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Kirko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali McMaster +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alvaro Aleman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amy Graham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Schonfeld +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Shumanskiy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wieteska +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Angela Ambroz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anjali Singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anna Daglis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthony Milbourne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antony Lee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ari Sosnovsky +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arkadeep Adhikari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arunim Samudra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashkan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashwin Prakash Nalwade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashwin Srinath +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Atsushi Nukariya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ayappan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ayla Khan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bart Broere +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benjamin Beier Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benjamin Fischer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bharat Raghunathan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bradley Dice +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brendan Sullivan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Strand +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carsten van Weelden +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chamoun Saoma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChrisRobo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Chwala
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christos Petropoulos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuanzhu Xu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CloseChoice +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clément Robert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CuylenE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DanBasson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Danilo Horta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DavaIlhamHaeruzaman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Hirschfeld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Hughes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Rouquet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David S +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis Bakhuis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Derek McCammond +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Devjeet Roy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Diane Trout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dom +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drew Seibert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EdAbati
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emiliano Jordan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erfan Nariman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Groszman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erik Hasse +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erkam Uyanik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan D +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan Kanter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Farhan Reynaldo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Farhan Reynaldo Hutabarat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Jetter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fred Reiss +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GYHHAHA +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Moreira +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Tutui +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Galuh Sahid
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaurav Chauhan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: George Hartzell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gim Seng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giovanni Lanzani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gordon Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graham Wetzler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Lemaitre
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillem Sánchez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HH-MWB +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harshavardhan Bachina
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How Si Wei
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Eaves
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iqrar Agalosi Nureyza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iva Laginja +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JDkuba
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Greisman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Austin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Deppen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Peacock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jake Tae +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jake Vanderplas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Cobon-Kerr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Červenka +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Škoda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jane Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jean-Francois Zinque +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeanderson Barros Candido +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jered Dominguez-Trujillo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Schendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jesse Farnham
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiaxiang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jihwan Song +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joaquim L. Viegas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Nothman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Bodley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Paton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Thielen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jose Manuel Martí +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joseph Gulian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Dimarsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joy Bhalla +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: João Veiga +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian de Ruiter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Essert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Zheng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KD-dev-lab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karthik Mathur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaushal Rohit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kee Chong Tan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ken Mankoff +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kendall Masse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kenny Huynh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ketan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Anderson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Bowey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kilian Lieret +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Koki Nishihara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Krishna Chivukula +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KrishnaSai2020 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lesley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lewis Cowles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linda Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linxiao Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucca Delchiaro Costabile +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MBrouns +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mabel Villalba
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mabroor Ahmed +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Madhuri Palanivelu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mak Sze Chun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malcolm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marian Denes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Bjeldbak Madsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Durant +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Fleischmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Jones +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Winkel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martina Oefelein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marvzinc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: María Marino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Cardoso +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mathis Felardos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matteo Felici +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matteo Santamaria +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Halford +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mayank Bisht +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Megan Thong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Marino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miguel Marques +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Kutzma
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammad Hasnain Mohsin Rajan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammad Jafar Mashhadi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MomIsBestFriend
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monica +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natalie Jann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nate Armstrong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nathanael +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Newman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nico Schlömer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Niklas Weber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ObliviousParadigm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olga Lyashevska +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OlivierLuG +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parallels +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Cando +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Lilley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Sanders +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pearcekieser +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pedro Larroy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pedro Reys
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Bull +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Steinbach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phan Duc Nhat Minh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phil Kirlin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pierre-Yves Bourguignon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Piotr Kasprzyk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Piotr Niełacny +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prakhar Pandey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prashant Anand +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Puneetha Pai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quang Nguyễn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rafael Jaimes III +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rafif +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RaisaDZ +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rakshit Naidu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ram Rachum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ricardo Alanis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rik-de-Kort
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert de Vries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin to Roxel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger Erens +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohith295 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roman Yurchak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ror +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rushabh Vasani
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Nazareth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SAI SRAVAN MEDICHERLA +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SHUBH CHATTERJEE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Cohan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samira-g-js +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sandu Ursu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sang Agung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SanthoshBala18 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sasidhar Kasturi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SatheeshKumar Mohan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saul Shanabrook
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Gigante +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Berg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastián Vanrell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergei Chipiga +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ShilpaSugan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Gibbons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Legner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soham Tiwari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Song Wenhao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Souvik Mandal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spencer Clark
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steffen Rehberg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steffen Schmitz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stéphan Taljaard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SultanOrazbayev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sumanau Sareen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SurajH1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suvayu Ali +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas J Fan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Pitters +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe L. Korn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Valentin Iovene +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vandana Iyer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Venkatesh Datta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vijay Sai Mutyala +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vikas Pandey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vipul Rai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vishwam Pandya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vladimir Berkutov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Holmgren
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yago González +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yosuke KOBAYASHI +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zachary Lawrence +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zaky Bilfagih +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zeb Nicholls +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alimcmaster1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: andhikayusup +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: andresmcneill +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: avinashpancham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: benabel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bernie gray +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: biddwan09 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: brock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cleconte987 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dan1261 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: david-cortes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: davidwales +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dequadras +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dhuettenmoser +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dilex42 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: elmonsomiat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: epizzigoni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fjetter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gabrielvf1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gdex1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: guru kiran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: h-vishal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iamshwin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jamin-aws-ospo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jfcorbett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jnecus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kernc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kota matsuoka +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kylekeppler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: leandermaben +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: link2xt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: manoj_koneni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: marydmit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: masterpiga +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maxime.song +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mglasder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: moaraccounts +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mproszewska
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: neilkg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nrebena
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ossdev07 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paihu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pan Jacek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: patrick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pedrooa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pizzathief +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: proost
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pvanhauw +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rbenes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rebecca-palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rhshadrach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rjfs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: s-scherrer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sage +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sagungrp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: salem3358 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saloni30 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smartswdeveloper +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smartvinnetou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: themien +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: timhunderwood +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tolhassianipar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tonywu1999
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tsvikas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tv3141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: venkateshdatta1993 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vivikelapoutre +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: willbowditch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: willpeppo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: za +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zaki-indra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enhancements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '### KeyErrors raised by loc specify missing labels'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, if labels were missing for a `.loc` call, a KeyError was raised
    stating that this was no longer supported.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now the error message also includes a list of the missing labels (max 10 items,
    display width 80 characters). See [GH 34272](https://github.com/pandas-dev/pandas/issues/34272).  ###
    All dtypes can now be converted to `StringDtype`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously, declaring or converting to [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") was in general only possible if the data was already only
    `str` or nan-like ([GH 31204](https://github.com/pandas-dev/pandas/issues/31204)).
    [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")
    now works in all situations where `astype(str)` or `dtype=str` work:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, the below now works:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]  ### Non-monotonic PeriodIndex partial string slicing'
  prefs: []
  type: TYPE_NORMAL
- en: '[`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") now supports partial string slicing for non-monotonic indexes,
    mirroring [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") behavior ([GH 31096](https://github.com/pandas-dev/pandas/issues/31096))'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE54]  ### Comparing two `DataFrame` or two `Series` and summarizing the
    differences'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") and [`Series.compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare") for comparing two `DataFrame` or two `Series` ([GH 30429](https://github.com/pandas-dev/pandas/issues/30429))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'See [User Guide](../user_guide/merging.html#merging-compare) for more details.  ###
    Allow NA in groupby key'
  prefs: []
  type: TYPE_NORMAL
- en: With [groupby](../user_guide/groupby.html#groupby-dropna) , we’ve added a `dropna`
    keyword to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") in order to allow `NA` values in group keys. Users can
    define `dropna` to `False` if they want to include `NA` values in groupby keys.
    The default is set to `True` for `dropna` to keep backwards compatibility ([GH
    3729](https://github.com/pandas-dev/pandas/issues/3729))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'The default setting of `dropna` argument is `True` which means `NA` are not
    included in group keys.  ### Sorting with keys'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added a `key` argument to the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") sorting methods, including [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index"), [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values"), and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index"). The `key` can be any callable function which is applied
    column-by-column to each column used for sorting, before sorting is performed
    ([GH 27237](https://github.com/pandas-dev/pandas/issues/27237)). See [sort_values
    with keys](../user_guide/basics.html#basics-sort-value-key) and [sort_index with
    keys](../user_guide/basics.html#basics-sort-index-key) for more information.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: Note how this is sorted with capital letters first. If we apply the [`Series.str.lower()`](../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower") method, we get
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: When applied to a `DataFrame`, they key is applied per-column to all columns
    or a subset if `by` is specified, e.g.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'For more details, see examples and documentation in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values"), and [`sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index").  ### Fold argument support in Timestamp constructor'
  prefs: []
  type: TYPE_NORMAL
- en: '`Timestamp:` now supports the keyword-only fold argument according to [PEP
    495](https://www.python.org/dev/peps/pep-0495/#the-fold-attribute) similar to
    parent `datetime.datetime` class. It supports both accepting fold as an initialization
    argument and inferring fold from other constructor arguments ([GH 25057](https://github.com/pandas-dev/pandas/issues/25057),
    [GH 31338](https://github.com/pandas-dev/pandas/issues/31338)). Support is limited
    to `dateutil` timezones as `pytz` doesn’t support fold.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: 'For more on working with fold, see [Fold subsection](../user_guide/timeseries.html#timeseries-fold)
    in the user guide.  ### Parsing timezone-aware format with different timezones
    in to_datetime'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now supports parsing formats containing timezone names (`%Z`)
    and UTC offsets (`%z`) from different timezones then converting them to UTC by
    setting `utc=True`. This would return a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with timezone at UTC as opposed to an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `object` dtype if `utc=True` is not set ([GH 32792](https://github.com/pandas-dev/pandas/issues/32792)).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE68]  ### Grouper and resample now supports the arguments origin and offset'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")
    and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") now supports the arguments `origin` and `offset`.
    It let the user control the timestamp on which to adjust the grouping. ([GH 31809](https://github.com/pandas-dev/pandas/issues/31809))'
  prefs: []
  type: TYPE_NORMAL
- en: The bins of the grouping are adjusted based on the beginning of the day of the
    time series starting point. This works well with frequencies that are multiples
    of a day (like `30D`) or that divides a day (like `90s` or `1min`). But it can
    create inconsistencies with some frequencies that do not meet this criteria. To
    change this behavior you can now specify a fixed timestamp with the argument `origin`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Two arguments are now deprecated (more information in the documentation of
    [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample")):'
  prefs: []
  type: TYPE_NORMAL
- en: '`base` should be replaced by `offset`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`loffset` should be replaced by directly adding an offset to the index [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") after being resampled.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Small example of the use of `origin`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'Resample with the default behavior `''start_day''` (origin is `2000-10-01 00:00:00`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'Resample using a fixed origin:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: If needed you can adjust the bins with the argument `offset` (a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")) that would be added to the default `origin`.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a full example, see: [Use origin or offset to adjust the start of the bins](../user_guide/timeseries.html#timeseries-adjust-the-start-of-the-bins).'
  prefs: []
  type: TYPE_NORMAL
- en: fsspec now used for filesystem handling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For reading and writing to filesystems other than local and reading from HTTP(S),
    the optional dependency `fsspec` will be used to dispatch operations ([GH 33452](https://github.com/pandas-dev/pandas/issues/33452)).
    This will give unchanged functionality for S3 and GCS storage, which were already
    supported, but also add support for several other storage implementations such
    as [Azure Datalake and Blob](https://github.com/fsspec/adlfs), SSH, FTP, dropbox
    and github. For docs and capabilities, see the [fsspec docs](https://filesystem-spec.readthedocs.io/en/latest/).
  prefs: []
  type: TYPE_NORMAL
- en: The existing capability to interface with S3 and GCS will be unaffected by this
    change, as `fsspec` will still bring in the same packages as before.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Compatibility with matplotlib 3.3.0 ([GH 34850](https://github.com/pandas-dev/pandas/issues/34850))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray.astype()` now supports `datetime64` dtype ([GH 32538](https://github.com/pandas-dev/pandas/issues/32538))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray` now implements the `sum` operation ([GH 33172](https://github.com/pandas-dev/pandas/issues/33172))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.errors.InvalidIndexError`](../reference/api/pandas.errors.InvalidIndexError.html#pandas.errors.InvalidIndexError
    "pandas.errors.InvalidIndexError") ([GH 34570](https://github.com/pandas-dev/pandas/issues/34570)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts") ([GH 5377](https://github.com/pandas-dev/pandas/issues/5377))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a [`pandas.api.indexers.FixedForwardWindowIndexer()`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") class to support forward-looking
    windows during `rolling` operations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a [`pandas.api.indexers.VariableOffsetWindowIndexer()`](../reference/api/pandas.api.indexers.VariableOffsetWindowIndexer.html#pandas.api.indexers.VariableOffsetWindowIndexer
    "pandas.api.indexers.VariableOffsetWindowIndexer") class to support `rolling`
    operations with non-fixed offsets ([GH 34994](https://github.com/pandas-dev/pandas/issues/34994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") now includes a `datetime_is_numeric` keyword to control
    how datetime columns are summarized ([GH 30164](https://github.com/pandas-dev/pandas/issues/30164),
    [GH 34798](https://github.com/pandas-dev/pandas/issues/34798))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") may now render CSS more efficiently where multiple
    cells have the same styling ([GH 30876](https://github.com/pandas-dev/pandas/issues/30876))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null") now accepts `subset` argument
    ([GH 31345](https://github.com/pandas-dev/pandas/issues/31345))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When writing directly to a sqlite connection [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now supports the `multi` method ([GH 29921](https://github.com/pandas-dev/pandas/issues/29921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.errors.OptionError`](../reference/api/pandas.errors.OptionError.html#pandas.errors.OptionError
    "pandas.errors.OptionError") is now exposed in `pandas.errors` ([GH 27553](https://github.com/pandas-dev/pandas/issues/27553))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `api.extensions.ExtensionArray.argmax()` and `api.extensions.ExtensionArray.argmin()`
    ([GH 24382](https://github.com/pandas-dev/pandas/issues/24382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") will now infer a frequency when passed `start`, `stop`,
    and `periods` ([GH 32377](https://github.com/pandas-dev/pandas/issues/32377))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Positional slicing on a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") now supports slices with `step > 1` ([GH 31658](https://github.com/pandas-dev/pandas/issues/31658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    now has a `fullmatch` method that matches a regular expression against the entire
    string in each row of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), similar to `re.fullmatch` ([GH 32806](https://github.com/pandas-dev/pandas/issues/32806)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample") will now also allow array-like and BitGenerator objects
    to be passed to `random_state` as seeds ([GH 32503](https://github.com/pandas-dev/pandas/issues/32503))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") will now raise `RuntimeWarning` for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") objects if the object inside are unsortable. Pass `sort=False`
    to suppress this warning ([GH 33015](https://github.com/pandas-dev/pandas/issues/33015))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Series.dt.isocalendar()`](../reference/api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar") and `DatetimeIndex.isocalendar()` that returns
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with year, week, and day calculated according to the ISO 8601 calendar ([GH 33206](https://github.com/pandas-dev/pandas/issues/33206),
    [GH 34392](https://github.com/pandas-dev/pandas/issues/34392)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather") method now supports additional keyword arguments
    (e.g. to set the compression) that are added in pyarrow 0.17 ([GH 33422](https://github.com/pandas-dev/pandas/issues/33422)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") will
    now accept parameter `ordered` with default `ordered=True`. If `ordered=False`
    and no labels are provided, an error will be raised ([GH 33141](https://github.com/pandas-dev/pandas/issues/33141))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), and [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now support passing a dict of compression arguments
    when using the `gzip` and `bz2` protocols. This can be used to set a custom compression
    level, e.g., `df.to_csv(path, compression={''method'': ''gzip'', ''compresslevel'':
    1}` ([GH 33196](https://github.com/pandas-dev/pandas/issues/33196))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt") has
    gained an `ignore_index` (default `True`) argument that, if set to `False`, prevents
    the method from dropping the index ([GH 17440](https://github.com/pandas-dev/pandas/issues/17440)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.update()`](../reference/api/pandas.Series.update.html#pandas.Series.update
    "pandas.Series.update") now accepts objects that can be coerced to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), such as `dict` and `list`, mirroring the behavior of [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") ([GH 33215](https://github.com/pandas-dev/pandas/issues/33215))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate") have gained `engine` and `engine_kwargs`
    arguments that support executing functions with `Numba` ([GH 32854](https://github.com/pandas-dev/pandas/issues/32854),
    [GH 33388](https://github.com/pandas-dev/pandas/issues/33388))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.interpolate()`](../reference/api/pandas.core.resample.Resampler.interpolate.html#pandas.core.resample.Resampler.interpolate
    "pandas.core.resample.Resampler.interpolate") now supports SciPy interpolation
    method [`scipy.interpolate.CubicSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline
    "(in SciPy v1.13.0)") as method `cubicspline` ([GH 33670](https://github.com/pandas-dev/pandas/issues/33670))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` and `SeriesGroupBy` now implement the `sample` method for
    doing random sampling within groups ([GH 31775](https://github.com/pandas-dev/pandas/issues/31775))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_numpy()`](../reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy
    "pandas.DataFrame.to_numpy") now supports the `na_value` keyword to control the
    NA sentinel in the output array ([GH 33820](https://github.com/pandas-dev/pandas/issues/33820))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `api.extension.ExtensionArray.equals` to the extension array interface,
    similar to [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") ([GH 27081](https://github.com/pandas-dev/pandas/issues/27081))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The minimum supported dta version has increased to 105 in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `StataReader` ([GH 26667](https://github.com/pandas-dev/pandas/issues/26667)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") supports compression using the `compression` keyword
    argument. Compression can either be inferred or explicitly set using a string
    or a dictionary containing both the method and any additional arguments that are
    passed to the compression library. Compression was also added to the low-level
    Stata-file writers `StataWriter`, `StataWriter117`, and `StataWriterUTF8` ([GH
    26599](https://github.com/pandas-dev/pandas/issues/26599)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HDFStore.put()`](../reference/api/pandas.HDFStore.put.html#pandas.HDFStore.put
    "pandas.HDFStore.put") now accepts a `track_times` parameter. This parameter is
    passed to the `create_table` method of `PyTables` ([GH 32682](https://github.com/pandas-dev/pandas/issues/32682)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") and [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now accepts `xlabel` and `ylabel` parameters to present
    labels on x and y axis ([GH 9093](https://github.com/pandas-dev/pandas/issues/9093)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Made `Rolling` and `Expanding` iterable（[GH 11704](https://github.com/pandas-dev/pandas/issues/11704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Made `option_context` a [`contextlib.ContextDecorator`](https://docs.python.org/3/library/contextlib.html#contextlib.ContextDecorator
    "(in Python v3.12)"), which allows it to be used as a decorator over an entire
    function ([GH 34253](https://github.com/pandas-dev/pandas/issues/34253)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now accept an `errors` argument ([GH 22610](https://github.com/pandas-dev/pandas/issues/22610))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy.groupby.transform()` now allows `func` to be `pad`, `backfill`
    and `cumcount` ([GH 31269](https://github.com/pandas-dev/pandas/issues/31269)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now accepts an `nrows` parameter. ([GH 33916](https://github.com/pandas-dev/pandas/issues/33916)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist"), [`Series.hist()`](../reference/api/pandas.Series.hist.html#pandas.Series.hist
    "pandas.Series.hist"), [`core.groupby.DataFrameGroupBy.hist()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.hist.html#pandas.core.groupby.DataFrameGroupBy.hist
    "pandas.core.groupby.DataFrameGroupBy.hist"), and [`core.groupby.SeriesGroupBy.hist()`](../reference/api/pandas.core.groupby.SeriesGroupBy.hist.html#pandas.core.groupby.SeriesGroupBy.hist
    "pandas.core.groupby.SeriesGroupBy.hist") have gained the `legend` argument. Set
    to True to show a legend in the histogram. ([GH 6279](https://github.com/pandas-dev/pandas/issues/6279))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    and `append()` now preserve extension dtypes, for example combining a nullable
    integer column with a numpy integer column will no longer result in object dtype
    but preserve the integer dtype ([GH 33607](https://github.com/pandas-dev/pandas/issues/33607),
    [GH 34339](https://github.com/pandas-dev/pandas/issues/34339), [GH 34095](https://github.com/pandas-dev/pandas/issues/34095)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now allows to disable progress bar ([GH 33360](https://github.com/pandas-dev/pandas/issues/33360)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now supports the `max_results` kwarg from `pandas-gbq` ([GH 34639](https://github.com/pandas-dev/pandas/issues/34639)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") now support a new parameter `ddof` to support delta degrees
    of freedom as in the corresponding numpy methods ([GH 34611](https://github.com/pandas-dev/pandas/issues/34611)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") and [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string")’s `col_space` parameter now accepts a list or dict
    to change only some specific columns’ width ([GH 28917](https://github.com/pandas-dev/pandas/issues/28917)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") can now also write OpenOffice spreadsheet (.ods)
    files ([GH 27222](https://github.com/pandas-dev/pandas/issues/27222))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now accepts `ignore_index` to reset the index, similar
    to `pd.concat()` or [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") ([GH 34932](https://github.com/pandas-dev/pandas/issues/34932)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") and [`Series.to_markdown()`](../reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown") now accept `index` argument as an alias for tabulate’s
    `showindex` ([GH 32667](https://github.com/pandas-dev/pandas/issues/32667))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts string values like “0”, “0.0”, “1”, “1.0” as convertible to the nullable
    Boolean dtype ([GH 34859](https://github.com/pandas-dev/pandas/issues/34859))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now supports a `times` argument that allows `mean`
    to be calculated with observations spaced by the timestamps in `times` ([GH 34839](https://github.com/pandas-dev/pandas/issues/34839))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") now accept named aggregation for renaming the output columns/indexes.
    ([GH 26513](https://github.com/pandas-dev/pandas/issues/26513))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`compute.use_numba` now exists as a configuration option that utilizes the
    numba engine when available ([GH 33966](https://github.com/pandas-dev/pandas/issues/33966),
    [GH 35374](https://github.com/pandas-dev/pandas/issues/35374))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") now supports asymmetric error bars. Previously, if [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") received a “2xN” array with error values for `yerr` and/or
    `xerr`, the left/lower values (first row) were mirrored, while the right/upper
    values (second row) were ignored. Now, the first row represents the left/lower
    error values and the second row the right/upper error values. ([GH 9536](https://github.com/pandas-dev/pandas/issues/9536))  ###
    KeyErrors raised by loc specify missing labels'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Previously, if labels were missing for a `.loc` call, a KeyError was raised
    stating that this was no longer supported.
  prefs: []
  type: TYPE_NORMAL
- en: Now the error message also includes a list of the missing labels (max 10 items,
    display width 80 characters). See [GH 34272](https://github.com/pandas-dev/pandas/issues/34272).
  prefs: []
  type: TYPE_NORMAL
- en: '### All dtypes can now be converted to `StringDtype`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously, declaring or converting to [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") was in general only possible if the data was already only
    `str` or nan-like ([GH 31204](https://github.com/pandas-dev/pandas/issues/31204)).
    [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")
    now works in all situations where `astype(str)` or `dtype=str` work:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, the below now works:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: '### Non-monotonic PeriodIndex partial string slicing'
  prefs: []
  type: TYPE_NORMAL
- en: '[`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") now supports partial string slicing for non-monotonic indexes,
    mirroring [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") behavior ([GH 31096](https://github.com/pandas-dev/pandas/issues/31096))'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '### Comparing two `DataFrame` or two `Series` and summarizing the differences'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") and [`Series.compare()`](../reference/api/pandas.Series.compare.html#pandas.Series.compare
    "pandas.Series.compare") for comparing two `DataFrame` or two `Series` ([GH 30429](https://github.com/pandas-dev/pandas/issues/30429))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: See [User Guide](../user_guide/merging.html#merging-compare) for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '### Allow NA in groupby key'
  prefs: []
  type: TYPE_NORMAL
- en: With [groupby](../user_guide/groupby.html#groupby-dropna) , we’ve added a `dropna`
    keyword to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") in order to allow `NA` values in group keys. Users can
    define `dropna` to `False` if they want to include `NA` values in groupby keys.
    The default is set to `True` for `dropna` to keep backwards compatibility ([GH
    3729](https://github.com/pandas-dev/pandas/issues/3729))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: The default setting of `dropna` argument is `True` which means `NA` are not
    included in group keys.
  prefs: []
  type: TYPE_NORMAL
- en: '### Sorting with keys'
  prefs: []
  type: TYPE_NORMAL
- en: We’ve added a `key` argument to the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") sorting methods, including [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index"), [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values"), and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index"). The `key` can be any callable function which is applied
    column-by-column to each column used for sorting, before sorting is performed
    ([GH 27237](https://github.com/pandas-dev/pandas/issues/27237)). See [sort_values
    with keys](../user_guide/basics.html#basics-sort-value-key) and [sort_index with
    keys](../user_guide/basics.html#basics-sort-index-key) for more information.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Note how this is sorted with capital letters first. If we apply the [`Series.str.lower()`](../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower") method, we get
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: When applied to a `DataFrame`, they key is applied per-column to all columns
    or a subset if `by` is specified, e.g.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: For more details, see examples and documentation in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values"), and [`sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index").
  prefs: []
  type: TYPE_NORMAL
- en: '### Fold argument support in Timestamp constructor'
  prefs: []
  type: TYPE_NORMAL
- en: '`Timestamp:` now supports the keyword-only fold argument according to [PEP
    495](https://www.python.org/dev/peps/pep-0495/#the-fold-attribute) similar to
    parent `datetime.datetime` class. It supports both accepting fold as an initialization
    argument and inferring fold from other constructor arguments ([GH 25057](https://github.com/pandas-dev/pandas/issues/25057),
    [GH 31338](https://github.com/pandas-dev/pandas/issues/31338)). Support is limited
    to `dateutil` timezones as `pytz` doesn’t support fold.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: For more on working with fold, see [Fold subsection](../user_guide/timeseries.html#timeseries-fold)
    in the user guide.
  prefs: []
  type: TYPE_NORMAL
- en: '### Parsing timezone-aware format with different timezones in to_datetime'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now supports parsing formats containing timezone names (`%Z`)
    and UTC offsets (`%z`) from different timezones then converting them to UTC by
    setting `utc=True`. This would return a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with timezone at UTC as opposed to an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `object` dtype if `utc=True` is not set ([GH 32792](https://github.com/pandas-dev/pandas/issues/32792)).'
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '### Grouper and resample now supports the arguments origin and offset'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")
    and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") now supports the arguments `origin` and `offset`.
    It let the user control the timestamp on which to adjust the grouping. ([GH 31809](https://github.com/pandas-dev/pandas/issues/31809))'
  prefs: []
  type: TYPE_NORMAL
- en: The bins of the grouping are adjusted based on the beginning of the day of the
    time series starting point. This works well with frequencies that are multiples
    of a day (like `30D`) or that divides a day (like `90s` or `1min`). But it can
    create inconsistencies with some frequencies that do not meet this criteria. To
    change this behavior you can now specify a fixed timestamp with the argument `origin`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Two arguments are now deprecated (more information in the documentation of
    [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample")):'
  prefs: []
  type: TYPE_NORMAL
- en: '`base` should be replaced by `offset`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`loffset` should be replaced by directly adding an offset to the index [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") after being resampled.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Small example of the use of `origin`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: 'Resample with the default behavior `''start_day''` (origin is `2000-10-01 00:00:00`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: 'Resample using a fixed origin:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: If needed you can adjust the bins with the argument `offset` (a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")) that would be added to the default `origin`.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a full example, see: [Use origin or offset to adjust the start of the bins](../user_guide/timeseries.html#timeseries-adjust-the-start-of-the-bins).'
  prefs: []
  type: TYPE_NORMAL
- en: fsspec now used for filesystem handling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For reading and writing to filesystems other than local and reading from HTTP(S),
    the optional dependency `fsspec` will be used to dispatch operations ([GH 33452](https://github.com/pandas-dev/pandas/issues/33452)).
    This will give unchanged functionality for S3 and GCS storage, which were already
    supported, but also add support for several other storage implementations such
    as [Azure Datalake and Blob](https://github.com/fsspec/adlfs), SSH, FTP, dropbox
    and github. For docs and capabilities, see the [fsspec docs](https://filesystem-spec.readthedocs.io/en/latest/).
  prefs: []
  type: TYPE_NORMAL
- en: The existing capability to interface with S3 and GCS will be unaffected by this
    change, as `fsspec` will still bring in the same packages as before.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Compatibility with matplotlib 3.3.0 ([GH 34850](https://github.com/pandas-dev/pandas/issues/34850))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray.astype()` now supports `datetime64` dtype ([GH 32538](https://github.com/pandas-dev/pandas/issues/32538))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IntegerArray` now implements the `sum` operation ([GH 33172](https://github.com/pandas-dev/pandas/issues/33172))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.errors.InvalidIndexError`](../reference/api/pandas.errors.InvalidIndexError.html#pandas.errors.InvalidIndexError
    "pandas.errors.InvalidIndexError") ([GH 34570](https://github.com/pandas-dev/pandas/issues/34570)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts") ([GH 5377](https://github.com/pandas-dev/pandas/issues/5377))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a [`pandas.api.indexers.FixedForwardWindowIndexer()`](../reference/api/pandas.api.indexers.FixedForwardWindowIndexer.html#pandas.api.indexers.FixedForwardWindowIndexer
    "pandas.api.indexers.FixedForwardWindowIndexer") class to support forward-looking
    windows during `rolling` operations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added a [`pandas.api.indexers.VariableOffsetWindowIndexer()`](../reference/api/pandas.api.indexers.VariableOffsetWindowIndexer.html#pandas.api.indexers.VariableOffsetWindowIndexer
    "pandas.api.indexers.VariableOffsetWindowIndexer") class to support `rolling`
    operations with non-fixed offsets ([GH 34994](https://github.com/pandas-dev/pandas/issues/34994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") now includes a `datetime_is_numeric` keyword to control
    how datetime columns are summarized ([GH 30164](https://github.com/pandas-dev/pandas/issues/30164),
    [GH 34798](https://github.com/pandas-dev/pandas/issues/34798))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Styler`](../reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler
    "pandas.io.formats.style.Styler") may now render CSS more efficiently where multiple
    cells have the same styling ([GH 30876](https://github.com/pandas-dev/pandas/issues/30876))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null") now accepts `subset` argument
    ([GH 31345](https://github.com/pandas-dev/pandas/issues/31345))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When writing directly to a sqlite connection [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now supports the `multi` method ([GH 29921](https://github.com/pandas-dev/pandas/issues/29921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.errors.OptionError`](../reference/api/pandas.errors.OptionError.html#pandas.errors.OptionError
    "pandas.errors.OptionError") is now exposed in `pandas.errors` ([GH 27553](https://github.com/pandas-dev/pandas/issues/27553))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `api.extensions.ExtensionArray.argmax()` and `api.extensions.ExtensionArray.argmin()`
    ([GH 24382](https://github.com/pandas-dev/pandas/issues/24382))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") will now infer a frequency when passed `start`, `stop`,
    and `periods` ([GH 32377](https://github.com/pandas-dev/pandas/issues/32377))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Positional slicing on a [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") now supports slices with `step > 1` ([GH 31658](https://github.com/pandas-dev/pandas/issues/31658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.str`](../reference/api/pandas.Series.str.html#pandas.Series.str "pandas.Series.str")
    now has a `fullmatch` method that matches a regular expression against the entire
    string in each row of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), similar to `re.fullmatch` ([GH 32806](https://github.com/pandas-dev/pandas/issues/32806)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.sample()`](../reference/api/pandas.DataFrame.sample.html#pandas.DataFrame.sample
    "pandas.DataFrame.sample") will now also allow array-like and BitGenerator objects
    to be passed to `random_state` as seeds ([GH 32503](https://github.com/pandas-dev/pandas/issues/32503))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") will now raise `RuntimeWarning` for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") objects if the object inside are unsortable. Pass `sort=False`
    to suppress this warning ([GH 33015](https://github.com/pandas-dev/pandas/issues/33015))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Series.dt.isocalendar()`](../reference/api/pandas.Series.dt.isocalendar.html#pandas.Series.dt.isocalendar
    "pandas.Series.dt.isocalendar") and `DatetimeIndex.isocalendar()` that returns
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with year, week, and day calculated according to the ISO 8601 calendar ([GH 33206](https://github.com/pandas-dev/pandas/issues/33206),
    [GH 34392](https://github.com/pandas-dev/pandas/issues/34392)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather") method now supports additional keyword arguments
    (e.g. to set the compression) that are added in pyarrow 0.17 ([GH 33422](https://github.com/pandas-dev/pandas/issues/33422)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") will
    now accept parameter `ordered` with default `ordered=True`. If `ordered=False`
    and no labels are provided, an error will be raised ([GH 33141](https://github.com/pandas-dev/pandas/issues/33141))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle"), and [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now support passing a dict of compression arguments
    when using the `gzip` and `bz2` protocols. This can be used to set a custom compression
    level, e.g., `df.to_csv(path, compression={''method'': ''gzip'', ''compresslevel'':
    1}` ([GH 33196](https://github.com/pandas-dev/pandas/issues/33196))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt") has
    gained an `ignore_index` (default `True`) argument that, if set to `False`, prevents
    the method from dropping the index ([GH 17440](https://github.com/pandas-dev/pandas/issues/17440)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.update()`](../reference/api/pandas.Series.update.html#pandas.Series.update
    "pandas.Series.update") now accepts objects that can be coerced to a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), such as `dict` and `list`, mirroring the behavior of [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") ([GH 33215](https://github.com/pandas-dev/pandas/issues/33215))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`DataFrameGroupBy.aggregate()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.aggregate.html#pandas.core.groupby.DataFrameGroupBy.aggregate
    "pandas.core.groupby.DataFrameGroupBy.aggregate") have gained `engine` and `engine_kwargs`
    arguments that support executing functions with `Numba` ([GH 32854](https://github.com/pandas-dev/pandas/issues/32854),
    [GH 33388](https://github.com/pandas-dev/pandas/issues/33388))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Resampler.interpolate()`](../reference/api/pandas.core.resample.Resampler.interpolate.html#pandas.core.resample.Resampler.interpolate
    "pandas.core.resample.Resampler.interpolate") now supports SciPy interpolation
    method [`scipy.interpolate.CubicSpline`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline
    "(in SciPy v1.13.0)") as method `cubicspline` ([GH 33670](https://github.com/pandas-dev/pandas/issues/33670))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy` and `SeriesGroupBy` now implement the `sample` method for
    doing random sampling within groups ([GH 31775](https://github.com/pandas-dev/pandas/issues/31775))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_numpy()`](../reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy
    "pandas.DataFrame.to_numpy") now supports the `na_value` keyword to control the
    NA sentinel in the output array ([GH 33820](https://github.com/pandas-dev/pandas/issues/33820))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `api.extension.ExtensionArray.equals` to the extension array interface,
    similar to [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") ([GH 27081](https://github.com/pandas-dev/pandas/issues/27081))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The minimum supported dta version has increased to 105 in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") and `StataReader` ([GH 26667](https://github.com/pandas-dev/pandas/issues/26667)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") supports compression using the `compression` keyword
    argument. Compression can either be inferred or explicitly set using a string
    or a dictionary containing both the method and any additional arguments that are
    passed to the compression library. Compression was also added to the low-level
    Stata-file writers `StataWriter`, `StataWriter117`, and `StataWriterUTF8` ([GH
    26599](https://github.com/pandas-dev/pandas/issues/26599)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HDFStore.put()`](../reference/api/pandas.HDFStore.put.html#pandas.HDFStore.put
    "pandas.HDFStore.put") now accepts a `track_times` parameter. This parameter is
    passed to the `create_table` method of `PyTables` ([GH 32682](https://github.com/pandas-dev/pandas/issues/32682)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") and [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") now accepts `xlabel` and `ylabel` parameters to present
    labels on x and y axis ([GH 9093](https://github.com/pandas-dev/pandas/issues/9093)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Made `Rolling` and `Expanding` iterable（[GH 11704](https://github.com/pandas-dev/pandas/issues/11704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Made `option_context` a [`contextlib.ContextDecorator`](https://docs.python.org/3/library/contextlib.html#contextlib.ContextDecorator
    "(in Python v3.12)"), which allows it to be used as a decorator over an entire
    function ([GH 34253](https://github.com/pandas-dev/pandas/issues/34253)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv") now accept an `errors` argument ([GH 22610](https://github.com/pandas-dev/pandas/issues/22610))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupBy.groupby.transform()` now allows `func` to be `pad`, `backfill`
    and `cumcount` ([GH 31269](https://github.com/pandas-dev/pandas/issues/31269)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now accepts an `nrows` parameter. ([GH 33916](https://github.com/pandas-dev/pandas/issues/33916)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist"), [`Series.hist()`](../reference/api/pandas.Series.hist.html#pandas.Series.hist
    "pandas.Series.hist"), [`core.groupby.DataFrameGroupBy.hist()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.hist.html#pandas.core.groupby.DataFrameGroupBy.hist
    "pandas.core.groupby.DataFrameGroupBy.hist"), and [`core.groupby.SeriesGroupBy.hist()`](../reference/api/pandas.core.groupby.SeriesGroupBy.hist.html#pandas.core.groupby.SeriesGroupBy.hist
    "pandas.core.groupby.SeriesGroupBy.hist") have gained the `legend` argument. Set
    to True to show a legend in the histogram. ([GH 6279](https://github.com/pandas-dev/pandas/issues/6279))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    and `append()` now preserve extension dtypes, for example combining a nullable
    integer column with a numpy integer column will no longer result in object dtype
    but preserve the integer dtype ([GH 33607](https://github.com/pandas-dev/pandas/issues/33607),
    [GH 34339](https://github.com/pandas-dev/pandas/issues/34339), [GH 34095](https://github.com/pandas-dev/pandas/issues/34095)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now allows to disable progress bar ([GH 33360](https://github.com/pandas-dev/pandas/issues/33360)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")
    now supports the `max_results` kwarg from `pandas-gbq` ([GH 34639](https://github.com/pandas-dev/pandas/issues/34639)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") and [`Series.cov()`](../reference/api/pandas.Series.cov.html#pandas.Series.cov
    "pandas.Series.cov") now support a new parameter `ddof` to support delta degrees
    of freedom as in the corresponding numpy methods ([GH 34611](https://github.com/pandas-dev/pandas/issues/34611)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") and [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string")’s `col_space` parameter now accepts a list or dict
    to change only some specific columns’ width ([GH 28917](https://github.com/pandas-dev/pandas/issues/28917)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") can now also write OpenOffice spreadsheet (.ods)
    files ([GH 27222](https://github.com/pandas-dev/pandas/issues/27222))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") now accepts `ignore_index` to reset the index, similar
    to `pd.concat()` or [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") ([GH 34932](https://github.com/pandas-dev/pandas/issues/34932)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") and [`Series.to_markdown()`](../reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown") now accept `index` argument as an alias for tabulate’s
    `showindex` ([GH 32667](https://github.com/pandas-dev/pandas/issues/32667))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now accepts string values like “0”, “0.0”, “1”, “1.0” as convertible to the nullable
    Boolean dtype ([GH 34859](https://github.com/pandas-dev/pandas/issues/34859))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExponentialMovingWindow` now supports a `times` argument that allows `mean`
    to be calculated with observations spaced by the timestamps in `times` ([GH 34839](https://github.com/pandas-dev/pandas/issues/34839))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") now accept named aggregation for renaming the output columns/indexes.
    ([GH 26513](https://github.com/pandas-dev/pandas/issues/26513))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`compute.use_numba` now exists as a configuration option that utilizes the
    numba engine when available ([GH 33966](https://github.com/pandas-dev/pandas/issues/33966),
    [GH 35374](https://github.com/pandas-dev/pandas/issues/35374))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") now supports asymmetric error bars. Previously, if [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") received a “2xN” array with error values for `yerr` and/or
    `xerr`, the left/lower values (first row) were mirrored, while the right/upper
    values (second row) were ignored. Now, the first row represents the left/lower
    error values and the second row the right/upper error values. ([GH 9536](https://github.com/pandas-dev/pandas/issues/9536))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Notable bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '`MultiIndex.get_indexer` interprets `method` argument correctly'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This restores the behavior of [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") with `method='backfill'` or `method='pad'` to
    the behavior before pandas 0.23.0\. In particular, MultiIndexes are treated as
    a list of tuples and padding or backfilling is done with respect to the ordering
    of these lists of tuples ([GH 29896](https://github.com/pandas-dev/pandas/issues/29896)).
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example of this, given:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: 'The differences in reindexing `df` with `mi_2` and using `method=''backfill''`
    can be seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas >= 0.23, < 1.1.0*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas <0.23, >= 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: 'And the differences in reindexing `df` with `mi_2` and using `method=''pad''`
    can be seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas >= 0.23, < 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas < 0.23, >= 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '### Failed label-based lookups always raise KeyError'
  prefs: []
  type: TYPE_NORMAL
- en: Label lookups `series[key]`, `series.loc[key]` and `frame.loc[key]` used to
    raise either `KeyError` or `TypeError` depending on the type of key and type of
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"). These
    now consistently raise `KeyError` ([GH 31867](https://github.com/pandas-dev/pandas/issues/31867))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: 'Similarly, [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") and [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") will raise a `TypeError` instead of a `ValueError` if an incompatible
    key is passed, and `KeyError` if a missing key is passed, matching the behavior
    of `.loc[]` ([GH 31722](https://github.com/pandas-dev/pandas/issues/31722))  ###
    Failed Integer Lookups on MultiIndex Raise KeyError'
  prefs: []
  type: TYPE_NORMAL
- en: Indexing with integers with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") that has an integer-dtype first level incorrectly failed
    to raise `KeyError` when one or more of those integer keys is not present in the
    first level of the index ([GH 33539](https://github.com/pandas-dev/pandas/issues/33539))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") preserves right frame’s row order'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") now preserves the right frame’s row order when executing
    a right merge ([GH 27453](https://github.com/pandas-dev/pandas/issues/27453))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: '### Assignment to multiple columns of a DataFrame when some columns do not
    exist'
  prefs: []
  type: TYPE_NORMAL
- en: Assignment to multiple columns of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when some of the columns do not exist would previously assign
    the values to the last column. Now, new columns will be constructed with the right
    values. ([GH 13658](https://github.com/pandas-dev/pandas/issues/13658))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]  ### Consistency across groupby reductions'
  prefs: []
  type: TYPE_NORMAL
- en: Using [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with `as_index=True` and the aggregation `nunique`
    would include the grouping column(s) in the columns of the result. Now the grouping
    column(s) only appear in the index, consistent with other reductions. ([GH 32579](https://github.com/pandas-dev/pandas/issues/32579))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: Using [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with `as_index=False` and the function `idxmax`, `idxmin`,
    `mad`, `nunique`, `sem`, `skew`, or `std` would modify the grouping column. Now
    the grouping column remains unchanged, consistent with other reductions. ([GH
    21090](https://github.com/pandas-dev/pandas/issues/21090), [GH 10355](https://github.com/pandas-dev/pandas/issues/10355))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: The method [`DataFrameGroupBy.size()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size") would previously ignore `as_index=False`.
    Now the grouping columns are returned as columns, making the result a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"). ([GH 32599](https://github.com/pandas-dev/pandas/issues/32599))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]  ### `DataFrameGroupby.agg()` lost results with `as_index=False` when
    relabeling columns'
  prefs: []
  type: TYPE_NORMAL
- en: Previously `DataFrameGroupby.agg()` lost the result columns, when the `as_index`
    option was set to `False` and the result columns were relabeled. In this case
    the result values were replaced with the previous index ([GH 32240](https://github.com/pandas-dev/pandas/issues/32240)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]  ### apply and applymap on `DataFrame` evaluates first row/column
    only once'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: '`MultiIndex.get_indexer` interprets `method` argument correctly'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This restores the behavior of [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") with `method='backfill'` or `method='pad'` to
    the behavior before pandas 0.23.0\. In particular, MultiIndexes are treated as
    a list of tuples and padding or backfilling is done with respect to the ordering
    of these lists of tuples ([GH 29896](https://github.com/pandas-dev/pandas/issues/29896)).
  prefs: []
  type: TYPE_NORMAL
- en: 'As an example of this, given:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: 'The differences in reindexing `df` with `mi_2` and using `method=''backfill''`
    can be seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas >= 0.23, < 1.1.0*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas <0.23, >= 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: 'And the differences in reindexing `df` with `mi_2` and using `method=''pad''`
    can be seen here:'
  prefs: []
  type: TYPE_NORMAL
- en: '*pandas >= 0.23, < 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: '*pandas < 0.23, >= 1.1.0*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: '### Failed label-based lookups always raise KeyError'
  prefs: []
  type: TYPE_NORMAL
- en: Label lookups `series[key]`, `series.loc[key]` and `frame.loc[key]` used to
    raise either `KeyError` or `TypeError` depending on the type of key and type of
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"). These
    now consistently raise `KeyError` ([GH 31867](https://github.com/pandas-dev/pandas/issues/31867))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") and [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") will raise a `TypeError` instead of a `ValueError` if an incompatible
    key is passed, and `KeyError` if a missing key is passed, matching the behavior
    of `.loc[]` ([GH 31722](https://github.com/pandas-dev/pandas/issues/31722))
  prefs: []
  type: TYPE_NORMAL
- en: '### Failed Integer Lookups on MultiIndex Raise KeyError'
  prefs: []
  type: TYPE_NORMAL
- en: Indexing with integers with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") that has an integer-dtype first level incorrectly failed
    to raise `KeyError` when one or more of those integer keys is not present in the
    first level of the index ([GH 33539](https://github.com/pandas-dev/pandas/issues/33539))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: '[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") preserves right frame’s row order'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.merge()`](../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") now preserves the right frame’s row order when executing
    a right merge ([GH 27453](https://github.com/pandas-dev/pandas/issues/27453))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: '### Assignment to multiple columns of a DataFrame when some columns do not
    exist'
  prefs: []
  type: TYPE_NORMAL
- en: Assignment to multiple columns of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when some of the columns do not exist would previously assign
    the values to the last column. Now, new columns will be constructed with the right
    values. ([GH 13658](https://github.com/pandas-dev/pandas/issues/13658))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  prefs: []
  type: TYPE_PRE
- en: '### Consistency across groupby reductions'
  prefs: []
  type: TYPE_NORMAL
- en: Using [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with `as_index=True` and the aggregation `nunique`
    would include the grouping column(s) in the columns of the result. Now the grouping
    column(s) only appear in the index, consistent with other reductions. ([GH 32579](https://github.com/pandas-dev/pandas/issues/32579))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: Using [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") with `as_index=False` and the function `idxmax`, `idxmin`,
    `mad`, `nunique`, `sem`, `skew`, or `std` would modify the grouping column. Now
    the grouping column remains unchanged, consistent with other reductions. ([GH
    21090](https://github.com/pandas-dev/pandas/issues/21090), [GH 10355](https://github.com/pandas-dev/pandas/issues/10355))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: The method [`DataFrameGroupBy.size()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.size.html#pandas.core.groupby.DataFrameGroupBy.size
    "pandas.core.groupby.DataFrameGroupBy.size") would previously ignore `as_index=False`.
    Now the grouping columns are returned as columns, making the result a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"). ([GH 32599](https://github.com/pandas-dev/pandas/issues/32599))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: '### `DataFrameGroupby.agg()` lost results with `as_index=False` when relabeling
    columns'
  prefs: []
  type: TYPE_NORMAL
- en: Previously `DataFrameGroupby.agg()` lost the result columns, when the `as_index`
    option was set to `False` and the result columns were relabeled. In this case
    the result values were replaced with the previous index ([GH 32240](https://github.com/pandas-dev/pandas/issues/32240)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: '### apply and applymap on `DataFrame` evaluates first row/column only once'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Added `check_freq` argument to `testing.assert_frame_equal` and `testing.assert_series_equal`'
  prefs: []
  type: TYPE_NORMAL
- en: The `check_freq` argument was added to [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") in pandas 1.1.0 and defaults to `True`.
    [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") now raise `AssertionError` if the indexes
    do not have the same frequency. Before pandas 1.1.0, the index frequency was not
    checked.
  prefs: []
  type: TYPE_NORMAL
- en: Increased minimum versions for dependencies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 33718](https://github.com/pandas-dev/pandas/issues/33718),
    [GH 29766](https://github.com/pandas-dev/pandas/issues/29766), [GH 29723](https://github.com/pandas-dev/pandas/issues/29723),
    pytables >= 3.4.3). If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.15.4 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.5.7 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.13.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Development changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The minimum version of Cython is now the most recent bug-fix version (0.29.16)
    ([GH 33334](https://github.com/pandas-dev/pandas/issues/33334)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Added `check_freq` argument to `testing.assert_frame_equal` and `testing.assert_series_equal`'
  prefs: []
  type: TYPE_NORMAL
- en: The `check_freq` argument was added to [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") in pandas 1.1.0 and defaults to `True`.
    [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") now raise `AssertionError` if the indexes
    do not have the same frequency. Before pandas 1.1.0, the index frequency was not
    checked.
  prefs: []
  type: TYPE_NORMAL
- en: Increased minimum versions for dependencies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated ([GH 33718](https://github.com/pandas-dev/pandas/issues/33718),
    [GH 29766](https://github.com/pandas-dev/pandas/issues/29766), [GH 29723](https://github.com/pandas-dev/pandas/issues/29723),
    pytables >= 3.4.3). If installed, we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| numpy | 1.15.4 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytz | 2015.4 | X |  |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.7.3 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.2.1 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.6.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 4.0.2 |  |  |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.6.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.3.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 0.7.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 0.6.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 3.8.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 2.2.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.46.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 2.5.7 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 0.13.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pymysql | 0.7.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.4.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 0.4.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 1.1.4 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.8.2 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlrd | 1.1.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 0.9.8 |  |'
  prefs: []
  type: TYPE_TB
- en: '| xlwt | 1.2.0 |  |'
  prefs: []
  type: TYPE_TB
- en: '| pandas-gbq | 1.2.0 | X |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Development changes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The minimum version of Cython is now the most recent bug-fix version (0.29.16)
    ([GH 33334](https://github.com/pandas-dev/pandas/issues/33334)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Lookups on a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with a single-item list containing a slice (e.g. `ser[[slice(0, 4)]]`) are deprecated
    and will raise in a future version. Either convert the list to a tuple, or pass
    the slice directly instead ([GH 31333](https://github.com/pandas-dev/pandas/issues/31333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") and [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") with `numeric_only=None` will include `datetime64`
    and `datetime64tz` columns in a future version ([GH 29941](https://github.com/pandas-dev/pandas/issues/29941))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting values with `.loc` using a positional slice is deprecated and will raise
    in a future version. Use `.loc` with labels or `.iloc` with positions instead
    ([GH 31840](https://github.com/pandas-dev/pandas/issues/31840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") has deprecated accepting short names for `orient`
    and will raise in a future version ([GH 32515](https://github.com/pandas-dev/pandas/issues/32515))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.to_dense()` is deprecated and will be removed in a future version,
    use `np.asarray(cat)` instead ([GH 32639](https://github.com/pandas-dev/pandas/issues/32639))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `fastpath` keyword in the `SingleBlockManager` constructor is deprecated
    and will be removed in a future version ([GH 33092](https://github.com/pandas-dev/pandas/issues/33092))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing `suffixes` as a `set` in [`pandas.merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") is deprecated. Provide a tuple instead ([GH 33740](https://github.com/pandas-dev/pandas/issues/33740),
    [GH 34741](https://github.com/pandas-dev/pandas/issues/34741)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with a multi-dimensional indexer like `[:, None]` to return an `ndarray` now raises
    a `FutureWarning`. Convert to a NumPy array before indexing instead ([GH 27837](https://github.com/pandas-dev/pandas/issues/27837))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.is_mixed()` is deprecated and will be removed in a future version, check
    `index.inferred_type` directly instead ([GH 32922](https://github.com/pandas-dev/pandas/issues/32922))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing any arguments but the first one to [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") as positional arguments is deprecated. All other arguments
    should be given as keyword arguments ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing any arguments but `path_or_buf` (the first one) to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") as positional arguments is deprecated. All other arguments
    should be given as keyword arguments ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing any arguments but the first two to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") as positional arguments is deprecated. All other arguments
    should be given as keyword arguments ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.api.types.is_categorical()` is deprecated and will be removed in a
    future version; use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype") instead ([GH 33385](https://github.com/pandas-dev/pandas/issues/33385))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.get_value()` is deprecated and will be removed in a future version ([GH
    19728](https://github.com/pandas-dev/pandas/issues/19728))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.dt.week()` and `Series.dt.weekofyear()` are deprecated and will be
    removed in a future version, use `Series.dt.isocalendar().week()` instead ([GH
    33595](https://github.com/pandas-dev/pandas/issues/33595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.week()` and `DatetimeIndex.weekofyear` are deprecated and will
    be removed in a future version, use `DatetimeIndex.isocalendar().week` instead
    ([GH 33595](https://github.com/pandas-dev/pandas/issues/33595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeArray.week()` and `DatetimeArray.weekofyear` are deprecated and will
    be removed in a future version, use `DatetimeArray.isocalendar().week` instead
    ([GH 33595](https://github.com/pandas-dev/pandas/issues/33595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DateOffset.__call__()` is deprecated and will be removed in a future version,
    use `offset + other` instead ([GH 34171](https://github.com/pandas-dev/pandas/issues/34171))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`apply_index()` is deprecated and will be removed in a future version. Use
    `offset + other` instead ([GH 34580](https://github.com/pandas-dev/pandas/issues/34580))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.tshift()` and `Series.tshift()` are deprecated and will be removed
    in a future version, use [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") and [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") instead ([GH 11631](https://github.com/pandas-dev/pandas/issues/11631))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing an [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    object with a float key is deprecated, and will raise an `IndexError` in the future.
    You can manually convert to an integer key instead ([GH 34191](https://github.com/pandas-dev/pandas/issues/34191)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `squeeze` keyword in [`groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") is deprecated and will be removed in a future version
    ([GH 32380](https://github.com/pandas-dev/pandas/issues/32380))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `tz` keyword in [`Period.to_timestamp()`](../reference/api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp") is deprecated and will be removed in a future version;
    use `per.to_timestamp(...).tz_localize(tz)` instead ([GH 34522](https://github.com/pandas-dev/pandas/issues/34522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.to_perioddelta()` is deprecated and will be removed in a future
    version. Use `index - index.to_period(freq).to_timestamp()` instead ([GH 34853](https://github.com/pandas-dev/pandas/issues/34853))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") accepting a `value_name` that already exists is deprecated,
    and will be removed in a future version ([GH 34731](https://github.com/pandas-dev/pandas/issues/34731))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `center` keyword in the [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") function is deprecated and will be removed in a
    future version ([GH 20647](https://github.com/pandas-dev/pandas/issues/20647))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvement in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") constructor ([GH 30543](https://github.com/pandas-dev/pandas/issues/30543))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor ([GH 30543](https://github.com/pandas-dev/pandas/issues/30543))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in flex arithmetic ops between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `axis=0` ([GH 31296](https://github.com/pandas-dev/pandas/issues/31296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in arithmetic ops between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `axis=1` ([GH 33600](https://github.com/pandas-dev/pandas/issues/33600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The internal index method `_shallow_copy()` now copies cached attributes over
    to the new index, avoiding creating these again on the new index. This can speed
    up many operations that depend on creating copies of existing indexes ([GH 28584](https://github.com/pandas-dev/pandas/issues/28584),
    [GH 32640](https://github.com/pandas-dev/pandas/issues/32640), [GH 32669](https://github.com/pandas-dev/pandas/issues/32669))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significant performance improvement when creating a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with sparse values from `scipy.sparse` matrices using the
    [`DataFrame.sparse.from_spmatrix()`](../reference/api/pandas.DataFrame.sparse.from_spmatrix.html#pandas.DataFrame.sparse.from_spmatrix
    "pandas.DataFrame.sparse.from_spmatrix") constructor ([GH 32821](https://github.com/pandas-dev/pandas/issues/32821),
    [GH 32825](https://github.com/pandas-dev/pandas/issues/32825), [GH 32826](https://github.com/pandas-dev/pandas/issues/32826),
    [GH 32856](https://github.com/pandas-dev/pandas/issues/32856), [GH 32858](https://github.com/pandas-dev/pandas/issues/32858)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for groupby methods `Groupby.first()` and `Groupby.last()`
    ([GH 34178](https://github.com/pandas-dev/pandas/issues/34178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize") for nullable (integer and Boolean) dtypes ([GH 33064](https://github.com/pandas-dev/pandas/issues/33064)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when constructing [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") objects ([GH 33921](https://github.com/pandas-dev/pandas/issues/33921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed performance regression in [`pandas.qcut()`](../reference/api/pandas.qcut.html#pandas.qcut
    "pandas.qcut") and [`pandas.cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut") ([GH 33921](https://github.com/pandas-dev/pandas/issues/33921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in reductions (`sum`, `prod`, `min`, `max`) for nullable
    (integer and Boolean) dtypes ([GH 30982](https://github.com/pandas-dev/pandas/issues/30982),
    [GH 33261](https://github.com/pandas-dev/pandas/issues/33261), [GH 33442](https://github.com/pandas-dev/pandas/issues/33442)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in arithmetic operations between two [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects ([GH 32779](https://github.com/pandas-dev/pandas/issues/32779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `RollingGroupby` ([GH 34052](https://github.com/pandas-dev/pandas/issues/34052))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in arithmetic operations (`sub`, `add`, `mul`, `div`)
    for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    ([GH 34297](https://github.com/pandas-dev/pandas/issues/34297))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DataFrame[bool_indexer]` when `bool_indexer` is
    a `list` ([GH 33924](https://github.com/pandas-dev/pandas/issues/33924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significant performance improvement of `io.formats.style.Styler.render()` with
    styles added with various ways such as [`io.formats.style.Styler.apply()`](../reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply"), `io.formats.style.Styler.applymap()`
    or [`io.formats.style.Styler.bar()`](../reference/api/pandas.io.formats.style.Styler.bar.html#pandas.io.formats.style.Styler.bar
    "pandas.io.formats.style.Styler.bar") ([GH 19917](https://github.com/pandas-dev/pandas/issues/19917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to `Categorical.take()` raises a `ValueError`
    instead of `TypeError` ([GH 33660](https://github.com/pandas-dev/pandas/issues/33660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combining a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with integer categories and which contains missing values
    with a float dtype column in operations such as [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") or `append()` will now result in a float column instead of an
    object dtype column ([GH 33607](https://github.com/pandas-dev/pandas/issues/33607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    was unable to join on non-unique categorical indices ([GH 28189](https://github.com/pandas-dev/pandas/issues/28189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when passing categorical data to [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor along with `dtype=object` incorrectly returning a
    [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") instead of object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 32167](https://github.com/pandas-dev/pandas/issues/32167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") comparison operator `__ne__` would incorrectly evaluate
    to `False` when either element was missing ([GH 32276](https://github.com/pandas-dev/pandas/issues/32276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.fillna()` now accepts [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") `other` argument ([GH 32420](https://github.com/pandas-dev/pandas/issues/32420))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Repr of [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") was not distinguishing between `int` and `str` ([GH 33676](https://github.com/pandas-dev/pandas/issues/33676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Passing an integer dtype other than `int64` to `np.array(period_index, dtype=...)`
    will now raise `TypeError` instead of incorrectly using `int64` ([GH 32255](https://github.com/pandas-dev/pandas/issues/32255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_timestamp()`](../reference/api/pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp") now raises a `TypeError` if the axis is not a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"). Previously an `AttributeError` was raised ([GH 33327](https://github.com/pandas-dev/pandas/issues/33327))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_period()`](../reference/api/pandas.Series.to_period.html#pandas.Series.to_period
    "pandas.Series.to_period") now raises a `TypeError` if the axis is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"). Previously an `AttributeError` was raised ([GH 33327](https://github.com/pandas-dev/pandas/issues/33327))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    no longer accepts tuples for the `freq` argument ([GH 34658](https://github.com/pandas-dev/pandas/issues/34658))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from ambiguous epoch time and calling constructor again changed
    the [`Timestamp.value()`](../reference/api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") property ([GH 24329](https://github.com/pandas-dev/pandas/issues/24329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeArray.searchsorted()`, `TimedeltaArray.searchsorted()`, `PeriodArray.searchsorted()`
    not recognizing non-pandas scalars and incorrectly raising `ValueError` instead
    of `TypeError` ([GH 30950](https://github.com/pandas-dev/pandas/issues/30950))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where constructing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with dateutil timezone less than 128 nanoseconds before daylight
    saving time switch from winter to summer would result in nonexistent time ([GH
    31043](https://github.com/pandas-dev/pandas/issues/31043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.to_timestamp()`](../reference/api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp"), [`Period.start_time()`](../reference/api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") with microsecond frequency returning a timestamp one
    nanosecond earlier than the correct time ([GH 31475](https://github.com/pandas-dev/pandas/issues/31475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    raised a confusing error message when year, month or day is missing ([GH 31200](https://github.com/pandas-dev/pandas/issues/31200))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor incorrectly accepting `bool`-dtype inputs
    ([GH 32668](https://github.com/pandas-dev/pandas/issues/32668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.searchsorted()` not accepting a `list` or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") as its argument ([GH 32762](https://github.com/pandas-dev/pandas/issues/32762))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`PeriodIndex()`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") raised when passed a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of strings ([GH 26109](https://github.com/pandas-dev/pandas/issues/26109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") arithmetic when adding or subtracting an `np.ndarray` with
    `timedelta64` dtype ([GH 33296](https://github.com/pandas-dev/pandas/issues/33296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.to_period()`](../reference/api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period") not inferring the frequency when called with
    no arguments ([GH 33358](https://github.com/pandas-dev/pandas/issues/33358))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize") incorrectly retaining `freq` in some cases
    where the original `freq` is no longer valid ([GH 30511](https://github.com/pandas-dev/pandas/issues/30511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` losing `freq` and timezone in some cases
    ([GH 33604](https://github.com/pandas-dev/pandas/issues/33604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_indexer()` where incorrect output would be returned
    for mixed datetime-like targets ([GH 33741](https://github.com/pandas-dev/pandas/issues/33741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") addition and subtraction with some types of `DateOffset`
    objects incorrectly retaining an invalid `freq` attribute ([GH 33779](https://github.com/pandas-dev/pandas/issues/33779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where setting the `freq` attribute on an index could silently
    change the `freq` attribute on another index viewing the same data ([GH 33552](https://github.com/pandas-dev/pandas/issues/33552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") were not returning consistent results with [`Series.min()`](../reference/api/pandas.Series.min.html#pandas.Series.min
    "pandas.Series.min") and [`Series.max()`](../reference/api/pandas.Series.max.html#pandas.Series.max
    "pandas.Series.max") when called on objects initialized with empty `pd.to_datetime()`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` and `TimedeltaIndex.intersection()` with
    results not having the correct `name` attribute ([GH 33904](https://github.com/pandas-dev/pandas/issues/33904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.__setitem__()`, `TimedeltaArray.__setitem__()`, `PeriodArray.__setitem__()`
    incorrectly allowing values with `int64` dtype to be silently cast ([GH 33717](https://github.com/pandas-dev/pandas/issues/33717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") from [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") incorrectly raising `TypeError` in some cases where it should
    succeed and `IncompatibleFrequency` in some cases where it should raise `TypeError`
    ([GH 33883](https://github.com/pandas-dev/pandas/issues/33883))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") from a read-only NumPy array with non-ns resolution which converted
    to object dtype instead of coercing to `datetime64[ns]` dtype when within the
    timestamp bounds ([GH 34843](https://github.com/pandas-dev/pandas/issues/34843)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `freq` keyword in [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), `pd.tseries.frequencies.to_offset()` no longer allows
    tuples, pass as string instead ([GH 34703](https://github.com/pandas-dev/pandas/issues/34703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` when appending a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing a scalar tz-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") resulted in an object column instead of `datetime64[ns, tz]`
    dtype ([GH 35038](https://github.com/pandas-dev/pandas/issues/35038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`OutOfBoundsDatetime` issues an improved error message when timestamp is out
    of implementation bounds. ([GH 32967](https://github.com/pandas-dev/pandas/issues/32967))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `AbstractHolidayCalendar.holidays()` when no rules were defined ([GH
    31415](https://github.com/pandas-dev/pandas/issues/31415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick` comparisons raising `TypeError` when comparing against timedelta-like
    objects ([GH 34088](https://github.com/pandas-dev/pandas/issues/34088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick` multiplication raising `TypeError` when multiplying by a float
    ([GH 34486](https://github.com/pandas-dev/pandas/issues/34486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with a high precision integer that would round the [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") components ([GH 31354](https://github.com/pandas-dev/pandas/issues/31354))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in dividing `np.nan` or `None` by [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") incorrectly returning `NaT` ([GH 31869](https://github.com/pandas-dev/pandas/issues/31869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    now understands `µs` as an identifier for microsecond ([GH 32899](https://github.com/pandas-dev/pandas/issues/32899))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    string representation now includes nanoseconds, when nanoseconds are non-zero
    ([GH 9309](https://github.com/pandas-dev/pandas/issues/9309))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object against an `np.ndarray` with `timedelta64` dtype incorrectly
    viewing all entries as unequal ([GH 33441](https://github.com/pandas-dev/pandas/issues/33441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") that produced an extra point on a edge case ([GH 30353](https://github.com/pandas-dev/pandas/issues/30353),
    [GH 33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that produced an extra point on a edge case ([GH
    30353](https://github.com/pandas-dev/pandas/issues/30353), [GH 13022](https://github.com/pandas-dev/pandas/issues/13022),
    [GH 33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that ignored the `loffset` argument when dealing
    with timedelta ([GH 7687](https://github.com/pandas-dev/pandas/issues/7687), [GH
    33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") that ignored the `unit` argument for string input ([GH
    12136](https://github.com/pandas-dev/pandas/issues/12136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `infer_datetime_format=True` where timezone names (e.g.
    `UTC`) would not be parsed correctly ([GH 33133](https://github.com/pandas-dev/pandas/issues/33133))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.floordiv()`](../reference/api/pandas.DataFrame.floordiv.html#pandas.DataFrame.floordiv
    "pandas.DataFrame.floordiv") with `axis=0` not treating division-by-zero like
    [`Series.floordiv()`](../reference/api/pandas.Series.floordiv.html#pandas.Series.floordiv
    "pandas.Series.floordiv") ([GH 31271](https://github.com/pandas-dev/pandas/issues/31271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") with string argument `"uint64"` and `errors="coerce"` silently
    fails ([GH 32394](https://github.com/pandas-dev/pandas/issues/32394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") with `downcast="unsigned"` fails for empty data ([GH 32493](https://github.com/pandas-dev/pandas/issues/32493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") with `numeric_only=False` and either `datetime64` dtype
    or `PeriodDtype` column incorrectly raising `TypeError` ([GH 32426](https://github.com/pandas-dev/pandas/issues/32426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.count()`](../reference/api/pandas.DataFrame.count.html#pandas.DataFrame.count
    "pandas.DataFrame.count") with `level="foo"` and index level `"foo"` containing
    NaNs causes segmentation fault ([GH 21824](https://github.com/pandas-dev/pandas/issues/21824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") with `axis=1` returning incorrect results with mixed
    dtypes ([GH 32995](https://github.com/pandas-dev/pandas/issues/32995))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") raising when handling nullable integer columns with `pandas.NA`
    ([GH 33803](https://github.com/pandas-dev/pandas/issues/33803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects with non-overlapping columns with duplicate labels
    causing an infinite loop ([GH 35194](https://github.com/pandas-dev/pandas/issues/35194))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") addition and subtraction between object-dtype objects and `datetime64`
    dtype objects ([GH 33824](https://github.com/pandas-dev/pandas/issues/33824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") giving incorrect results when comparing a `Float64Index`
    and object [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    ([GH 35217](https://github.com/pandas-dev/pandas/issues/35217))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions (e.g. `df.min()`, `df.max()`) with `ExtensionArray`
    dtypes ([GH 34520](https://github.com/pandas-dev/pandas/issues/34520), [GH 32651](https://github.com/pandas-dev/pandas/issues/32651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") now raise a ValueError if `limit_direction` is
    `''forward''` or `''both''` and `method` is `''backfill''` or `''bfill''` or `limit_direction`
    is `''backward''` or `''both''` and `method` is `''pad''` or `''ffill''` ([GH
    34746](https://github.com/pandas-dev/pandas/issues/34746))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction from NumPy array with big-endian `datetime64` dtype ([GH 29684](https://github.com/pandas-dev/pandas/issues/29684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") construction with large nanoseconds keyword value ([GH 32402](https://github.com/pandas-dev/pandas/issues/32402))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction where sets would be duplicated rather than raising
    ([GH 32582](https://github.com/pandas-dev/pandas/issues/32582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor no longer accepts a list of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects. Because of changes to NumPy, [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects are now consistently treated as 2D objects, so a list
    of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects is considered 3D, and no longer acceptable for the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor ([GH 32289](https://github.com/pandas-dev/pandas/issues/32289)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when initiating a frame with lists and assign `columns` with
    nested list for `MultiIndex` ([GH 32173](https://github.com/pandas-dev/pandas/issues/32173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for invalid construction of list when creating a new
    index ([GH 35190](https://github.com/pandas-dev/pandas/issues/35190))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the [`astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") method when converting “string” dtype data to nullable
    integer dtype ([GH 32450](https://github.com/pandas-dev/pandas/issues/32450)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed issue where taking `min` or `max` of a `StringArray` or `Series` with
    `StringDtype` type would raise. ([GH 31746](https://github.com/pandas-dev/pandas/issues/31746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") returning `NaN` output when other had [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") type ([GH 33425](https://github.com/pandas-dev/pandas/issues/33425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.api.dtypes.is_string_dtype()` no longer incorrectly identifies categorical
    series as string.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalArray` incorrectly allowing the underlying data to be changed
    when setting values ([GH 32782](https://github.com/pandas-dev/pandas/issues/32782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") now raises a `TypeError` if a `level` keyword is supplied
    and the axis is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). Previously an `AttributeError` was raised ([GH 33610](https://github.com/pandas-dev/pandas/issues/33610))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in slicing on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a partial-timestamp dropping high-resolution indices
    near the end of a year, quarter, or month ([GH 31064](https://github.com/pandas-dev/pandas/issues/31064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` treating higher-resolution strings differently
    from `PeriodIndex.get_value()` ([GH 31172](https://github.com/pandas-dev/pandas/issues/31172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") and [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") not matching `.loc` behavior when looking up an integer
    in a `Float64Index` ([GH 31329](https://github.com/pandas-dev/pandas/issues/31329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.is_monotonic()` incorrectly returning `True` when containing
    leading `NaT` entries ([GH 31437](https://github.com/pandas-dev/pandas/issues/31437))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_loc()` raising `KeyError` with converted-integer key
    instead of the user-passed key ([GH 31425](https://github.com/pandas-dev/pandas/issues/31425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.xs()`](../reference/api/pandas.Series.xs.html#pandas.Series.xs
    "pandas.Series.xs") incorrectly returning `Timestamp` instead of `datetime64`
    in some object-dtype cases ([GH 31630](https://github.com/pandas-dev/pandas/issues/31630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iat()`](../reference/api/pandas.DataFrame.iat.html#pandas.DataFrame.iat
    "pandas.DataFrame.iat") incorrectly returning `Timestamp` instead of `datetime`
    in some object-dtype cases ([GH 32809](https://github.com/pandas-dev/pandas/issues/32809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") when either columns or index is non-unique ([GH 33041](https://github.com/pandas-dev/pandas/issues/33041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when indexing with an integer key on a object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") that is not all-integers ([GH 31905](https://github.com/pandas-dev/pandas/issues/31905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with duplicate columns incorrectly setting values for all
    matching columns ([GH 15686](https://github.com/pandas-dev/pandas/issues/15686),
    [GH 22036](https://github.com/pandas-dev/pandas/issues/22036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") incorrectly allowing lookups of non-matching datetime-like
    dtypes ([GH 32650](https://github.com/pandas-dev/pandas/issues/32650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` indexing with non-standard scalars, e.g. `np.dtype`
    ([GH 32684](https://github.com/pandas-dev/pandas/issues/32684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor where an unhelpful error message was raised for NumPy scalars ([GH
    33017](https://github.com/pandas-dev/pandas/issues/33017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.lookup()` incorrectly raising an `AttributeError` when `frame.index`
    or `frame.columns` is not unique; this will now raise a `ValueError` with a helpful
    error message ([GH 33041](https://github.com/pandas-dev/pandas/issues/33041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    where a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") could not be added or subtracted from a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") interval ([GH 32023](https://github.com/pandas-dev/pandas/issues/32023))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.copy()`](../reference/api/pandas.DataFrame.copy.html#pandas.DataFrame.copy
    "pandas.DataFrame.copy") not invalidating _item_cache after copy caused post-copy
    value updates to not be reflected ([GH 31784](https://github.com/pandas-dev/pandas/issues/31784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") throwing an error when a `datetime64[ns, tz]` value is provided
    ([GH 32395](https://github.com/pandas-dev/pandas/issues/32395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` with an integer key and a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with leading integer level failing to raise `KeyError` if
    the key is not present in the first level ([GH 33355](https://github.com/pandas-dev/pandas/issues/33355))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when slicing a single column [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `ExtensionDtype` (e.g. `df.iloc[:, :1]`) returning an
    invalid result ([GH 32957](https://github.com/pandas-dev/pandas/issues/32957))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` and `TimedeltaIndex.insert()` causing index
    `freq` to be lost when setting an element into an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 33573](https://github.com/pandas-dev/pandas/issues/33573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and a list-like key of integers ([GH 33473](https://github.com/pandas-dev/pandas/issues/33473))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` allowing missing labels with `np.ndarray`, [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") indexers but not `list`, these now all raise `KeyError` ([GH
    33646](https://github.com/pandas-dev/pandas/issues/33646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") and [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") where index was assumed to be monotone increasing ([GH
    33756](https://github.com/pandas-dev/pandas/issues/33756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing with a list of strings representing datetimes failed on [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 11278](https://github.com/pandas-dev/pandas/issues/11278))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would raise an exception on valid inputs ([GH 26989](https://github.com/pandas-dev/pandas/issues/26989))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with dictionary of values changes columns with dtype of
    `int` to `float` ([GH 34573](https://github.com/pandas-dev/pandas/issues/34573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would raise an `IndexingError` when accessing a `None` value
    ([GH 34318](https://github.com/pandas-dev/pandas/issues/34318))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") and [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") would not preserve data types on an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19602](https://github.com/pandas-dev/pandas/issues/19602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    indexing with a `time` key on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `NaT` entries ([GH 35114](https://github.com/pandas-dev/pandas/issues/35114))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Calling `fillna()` on an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now correctly returns a shallow copied object. The behaviour
    is now consistent with [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and a non-empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 32543](https://github.com/pandas-dev/pandas/issues/32543)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") when argument `to_replace` is of type dict/list and is
    used on a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    containing `<NA>` was raising a `TypeError`. The method now handles this by ignoring
    `<NA>` values when doing the comparison for the replacement ([GH 32621](https://github.com/pandas-dev/pandas/issues/32621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`any()`](../reference/api/pandas.Series.any.html#pandas.Series.any "pandas.Series.any")
    and [`all()`](../reference/api/pandas.Series.all.html#pandas.Series.all "pandas.Series.all")
    incorrectly returning `<NA>` for all `False` or all `True` values using the nulllable
    Boolean dtype and with `skipna=False` ([GH 33253](https://github.com/pandas-dev/pandas/issues/33253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified documentation on interpolate with `method=akima`. The `der` parameter
    must be scalar or `None` ([GH 33426](https://github.com/pandas-dev/pandas/issues/33426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") uses the correct axis convention now. Previously
    interpolating along columns lead to interpolation along indices and vice versa.
    Furthermore interpolating with methods `pad`, `ffill`, `bfill` and `backfill`
    are identical to using these methods with [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") ([GH 12918](https://github.com/pandas-dev/pandas/issues/12918),
    [GH 29146](https://github.com/pandas-dev/pandas/issues/29146))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") when called on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with column names of string type was throwing a ValueError.
    The method is now independent of the type of the column names ([GH 33956](https://github.com/pandas-dev/pandas/issues/33956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing [`NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA") into a
    format string using format specs will now work. For example `"{:.1f}".format(pd.NA)`
    would previously raise a `ValueError`, but will now return the string `"<NA>"`
    ([GH 34740](https://github.com/pandas-dev/pandas/issues/34740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") not raising on invalid `na_action` ([GH 32815](https://github.com/pandas-dev/pandas/issues/32815))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`DataFrame.swaplevels()` now raises a `TypeError` if the axis is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). Previously an `AttributeError` was raised ([GH 31126](https://github.com/pandas-dev/pandas/issues/31126))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.loc()` when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). The returned values were not in the same order as the given
    inputs ([GH 22797](https://github.com/pandas-dev/pandas/issues/22797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: Bug in `MultiIndex.intersection()` was not guaranteed to preserve order when
    `sort=False`. ([GH 31325](https://github.com/pandas-dev/pandas/issues/31325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") was dropping [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") names. ([GH 34564](https://github.com/pandas-dev/pandas/issues/34564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: Bug when joining two [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") without specifying level with different columns. Return-indexers
    parameter was ignored. ([GH 34074](https://github.com/pandas-dev/pandas/issues/34074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Passing a `set` as `names` argument to [`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`pandas.read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), or [`pandas.read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") will raise `ValueError: Names should be an ordered collection.`
    ([GH 34946](https://github.com/pandas-dev/pandas/issues/34946))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in print-out when `display.precision` is zero. ([GH 20359](https://github.com/pandas-dev/pandas/issues/20359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where integer overflow was occurring when json contains big
    number strings. ([GH 30320](https://github.com/pandas-dev/pandas/issues/30320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    will now raise a `ValueError` when the arguments `header` and `prefix` both are
    not `None`. ([GH 27394](https://github.com/pandas-dev/pandas/issues/27394))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") was raising `NotFoundError` when `path_or_buf` was
    an S3 URI ([GH 28375](https://github.com/pandas-dev/pandas/issues/28375))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") overwriting pyarrow’s default for `coerce_timestamps`;
    following pyarrow’s default allows writing nanosecond timestamps with `version="2.0"`
    ([GH 31652](https://github.com/pandas-dev/pandas/issues/31652)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising `TypeError` when `sep=None` was used in combination
    with `comment` keyword ([GH 31396](https://github.com/pandas-dev/pandas/issues/31396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` that caused it to set to `int64` the dtype of a `datetime64`
    column when reading a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in Python 3 from fixed format written in Python 2 ([GH 31750](https://github.com/pandas-dev/pandas/issues/31750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now handles dates and datetimes larger than [`Timestamp.max`](../reference/api/pandas.Timestamp.max.html#pandas.Timestamp.max
    "pandas.Timestamp.max") returning them as [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)") objects ([GH 20927](https://github.com/pandas-dev/pandas/issues/20927))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `Timedelta` objects would not be serialized
    correctly with `date_format="iso"` ([GH 28256](https://github.com/pandas-dev/pandas/issues/28256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    will raise a `ValueError` when the column names passed in `parse_dates` are missing
    in the `Dataframe` ([GH 31251](https://github.com/pandas-dev/pandas/issues/31251))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") where a UTF-8 string with a high surrogate would cause a
    segmentation violation ([GH 23809](https://github.com/pandas-dev/pandas/issues/23809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was causing a file descriptor leak on an empty file ([GH 31488](https://github.com/pandas-dev/pandas/issues/31488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was causing a segfault when there were blank lines between
    the header and data rows ([GH 28071](https://github.com/pandas-dev/pandas/issues/28071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising a misleading exception on a permissions issue ([GH
    23784](https://github.com/pandas-dev/pandas/issues/23784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising an `IndexError` when `header=None` and two extra
    data columns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") was raising an `AttributeError` when reading files from Google
    Cloud Storage ([GH 33069](https://github.com/pandas-dev/pandas/issues/33069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") where an `AttributeError` was raised when saving an
    out of bounds date ([GH 26761](https://github.com/pandas-dev/pandas/issues/26761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") did not correctly handle multiple embedded spaces in OpenDocument
    text cells. ([GH 32207](https://github.com/pandas-dev/pandas/issues/32207))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") was raising `TypeError` when reading a `list` of Booleans
    into a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series").
    ([GH 31464](https://github.com/pandas-dev/pandas/issues/31464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where location specified by `record_path`
    doesn’t point to an array. ([GH 26284](https://github.com/pandas-dev/pandas/issues/26284))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") has a more explicit error message when loading an unsupported
    HDF file ([GH 9539](https://github.com/pandas-dev/pandas/issues/9539))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_feather()` was raising an `ArrowIOError` when reading an s3 or
    http file path ([GH 29055](https://github.com/pandas-dev/pandas/issues/29055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") could not handle the column name `render` and was
    raising an `KeyError` ([GH 34331](https://github.com/pandas-dev/pandas/issues/34331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `execute()` was raising a `ProgrammingError` for some DB-API drivers
    when the SQL statement contained the `%` character and no parameters were present
    ([GH 34211](https://github.com/pandas-dev/pandas/issues/34211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataReader()` which resulted in categorical variables with different
    dtypes when reading data using an iterator. ([GH 31544](https://github.com/pandas-dev/pandas/issues/31544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HDFStore.keys()`](../reference/api/pandas.HDFStore.keys.html#pandas.HDFStore.keys
    "pandas.HDFStore.keys") has now an optional `include` parameter that allows the
    retrieval of all native HDF5 table names ([GH 29916](https://github.com/pandas-dev/pandas/issues/29916))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TypeError` exceptions raised by [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") were showing as `parser_f` when an unexpected keyword argument
    was passed ([GH 25648](https://github.com/pandas-dev/pandas/issues/25648))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") for ODS files removes 0.0 values ([GH 27222](https://github.com/pandas-dev/pandas/issues/27222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ujson.encode()` was raising an `OverflowError` with numbers larger than
    `sys.maxsize` ([GH 34395](https://github.com/pandas-dev/pandas/issues/34395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.append_to_multiple()` was raising a `ValueError` when the `min_itemsize`
    parameter is set ([GH 11238](https://github.com/pandas-dev/pandas/issues/11238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `create_table()` now raises an error when `column` argument was not specified
    in `data_columns` on input ([GH 28156](https://github.com/pandas-dev/pandas/issues/28156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now could read line-delimited json file from a file url while `lines` and `chunksize`
    are set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") when reading DataFrames with `-np.inf` entries with
    MySQL now has a more explicit `ValueError` ([GH 34431](https://github.com/pandas-dev/pandas/issues/34431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where capitalised files extensions were not decompressed by read_* functions
    ([GH 35164](https://github.com/pandas-dev/pandas/issues/35164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") that was raising a `TypeError` when `header=None` and `index_col`
    is given as a `list` ([GH 31783](https://github.com/pandas-dev/pandas/issues/31783))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") where datetime values are used in the header in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 34748](https://github.com/pandas-dev/pandas/issues/34748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") no longer takes `**kwds` arguments. This means that passing
    in the keyword argument `chunksize` now raises a `TypeError` (previously raised
    a `NotImplementedError`), while passing in the keyword argument `encoding` now
    raises a `TypeError` ([GH 34464](https://github.com/pandas-dev/pandas/issues/34464))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") was incorrectly losing timezone information in
    timezone-aware `datetime64` columns ([GH 32535](https://github.com/pandas-dev/pandas/issues/32535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") for line/bar now accepts color by dictionary ([GH 8193](https://github.com/pandas-dev/pandas/issues/8193)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") where weights are not working for multiple columns
    ([GH 33173](https://github.com/pandas-dev/pandas/issues/33173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") and `DataFrame.plot.boxplot()` lost color attributes
    of `medianprops`, `whiskerprops`, `capprops` and `boxprops` ([GH 30346](https://github.com/pandas-dev/pandas/issues/30346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") where the order of `column` argument was ignored ([GH
    29235](https://github.com/pandas-dev/pandas/issues/29235))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") that when adding multiple plots with different
    `cmap`, colorbars always use the first `cmap` ([GH 33389](https://github.com/pandas-dev/pandas/issues/33389))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") was adding a colorbar to the plot even if the
    argument `c` was assigned to a column containing color names ([GH 34316](https://github.com/pandas-dev/pandas/issues/34316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.plotting.bootstrap_plot()`](../reference/api/pandas.plotting.bootstrap_plot.html#pandas.plotting.bootstrap_plot
    "pandas.plotting.bootstrap_plot") was causing cluttered axes and overlapping labels
    ([GH 34905](https://github.com/pandas-dev/pandas/issues/34905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") caused an error when plotting variable marker
    sizes ([GH 32904](https://github.com/pandas-dev/pandas/issues/32904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using a [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") with `count`, `min`, `max`, `median`, `skew`,
    `cov`, `corr` will now return correct results for any monotonic [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") descendant ([GH 32865](https://github.com/pandas-dev/pandas/issues/32865))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupby.mean()` and `SeriesGroupby.mean()` (and similarly for `median()`,
    `std()` and `var()`) now raise a `TypeError` if a non-accepted keyword argument
    is passed into it. Previously an `UnsupportedFunctionCall` was raised (`AssertionError`
    if `min_count` passed into `median()`) ([GH 31485](https://github.com/pandas-dev/pandas/issues/31485))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") raising `ValueError` when the `by`
    axis is not sorted, has duplicates, and the applied `func` does not mutate passed
    in objects ([GH 30667](https://github.com/pandas-dev/pandas/issues/30667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.transform()` produces an incorrect result with transformation
    functions ([GH 30918](https://github.com/pandas-dev/pandas/issues/30918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") were returning the wrong result
    when grouping by multiple keys of which some were categorical and others not ([GH
    32494](https://github.com/pandas-dev/pandas/issues/32494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") and [`SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") causing segmentation fault when grouped-by
    columns contain NaNs ([GH 32841](https://github.com/pandas-dev/pandas/issues/32841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") produces inconsistent type when aggregating Boolean [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 32894](https://github.com/pandas-dev/pandas/issues/32894))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.sum()` and `SeriesGroupBy.sum()` where a large negative
    number would be returned when the number of non-null values was below `min_count`
    for nullable integer dtypes ([GH 32861](https://github.com/pandas-dev/pandas/issues/32861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.quantile()` was raising on nullable integers ([GH 33136](https://github.com/pandas-dev/pandas/issues/33136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where an `AmbiguousTimeError` would be raised when
    the resulting timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") had a DST transition at midnight ([GH 25758](https://github.com/pandas-dev/pandas/issues/25758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where a `ValueError` would be raised when grouping
    by a categorical column with read-only categories and `sort=False` ([GH 33410](https://github.com/pandas-dev/pandas/issues/33410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg"), [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"), [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform"), [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform"), [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample"), and [`SeriesGroupBy.resample()`](../reference/api/pandas.core.groupby.SeriesGroupBy.resample.html#pandas.core.groupby.SeriesGroupBy.resample
    "pandas.core.groupby.SeriesGroupBy.resample") where subclasses are not preserved
    ([GH 28330](https://github.com/pandas-dev/pandas/issues/28330))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.agg()` where any column name was accepted in the named
    aggregation of `SeriesGroupBy` previously. The behaviour now allows only `str`
    and callables else would raise `TypeError`. ([GH 34422](https://github.com/pandas-dev/pandas/issues/34422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") lost the name of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when one of the `agg` keys referenced an empty list ([GH 32580](https://github.com/pandas-dev/pandas/issues/32580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.apply()` where `center=True` was ignored when `engine='numba'`
    was specified ([GH 34784](https://github.com/pandas-dev/pandas/issues/34784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.ewm.cov()` was throwing `AssertionError` for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") inputs ([GH 34440](https://github.com/pandas-dev/pandas/issues/34440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") raised `TypeError` for non-numeric
    types rather than dropping the columns ([GH 27892](https://github.com/pandas-dev/pandas/issues/27892))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") when `func='nunique'` and columns
    are of type `datetime64`, the result would also be of type `datetime64` instead
    of `int64` ([GH 35109](https://github.com/pandas-dev/pandas/issues/35109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") raising an `AttributeError` when selecting a column
    and aggregating with `as_index=False` ([GH 35246](https://github.com/pandas-dev/pandas/issues/35246)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.first()` and `DataFrameGroupBy.last()` that would raise
    an unnecessary `ValueError` when grouping on multiple `Categoricals` ([GH 34951](https://github.com/pandas-dev/pandas/issues/34951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug effecting all numeric and Boolean reduction methods not returning subclassed
    data type. ([GH 25596](https://github.com/pandas-dev/pandas/issues/25596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") when only `MultiIndexed` columns is set ([GH 17038](https://github.com/pandas-dev/pandas/issues/17038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") and [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") can take tuple names in `MultiIndexed` data ([GH 19966](https://github.com/pandas-dev/pandas/issues/19966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") when `margin` is `True` and only `column` is defined
    ([GH 31016](https://github.com/pandas-dev/pandas/issues/31016))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed incorrect error message in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") when `columns` is set to `None`. ([GH 30924](https://github.com/pandas-dev/pandas/issues/30924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when inputs are two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and have tuple names, the output will keep a dummy [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") as columns. ([GH 18321](https://github.com/pandas-dev/pandas/issues/18321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") can now take lists for `index` and `columns` arguments
    ([GH 21425](https://github.com/pandas-dev/pandas/issues/21425))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where the resulting indices are not copied when `copy=True` ([GH 29879](https://github.com/pandas-dev/pandas/issues/29879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.aggregate()` was resulting in aggregations being overwritten
    when they shared the same name ([GH 30880](https://github.com/pandas-dev/pandas/issues/30880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") would lose the `name` attribute when converting from `Float64Index`
    to `Int64Index`, or when casting to an `ExtensionArray` dtype ([GH 32013](https://github.com/pandas-dev/pandas/issues/32013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.append()` will now raise a `TypeError` when passed a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or a sequence containing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 31413](https://github.com/pandas-dev/pandas/issues/31413))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") will raise a `TypeError` if `to_replace` is not an expected
    type. Previously the `replace` would fail silently ([GH 18634](https://github.com/pandas-dev/pandas/issues/18634))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug on inplace operation of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") that was adding a column to the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from where it was originally dropped from (using `inplace=True`)
    ([GH 30484](https://github.com/pandas-dev/pandas/issues/30484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") where callback was called with [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") parameter even though `raw=True` requested. ([GH 32423](https://github.com/pandas-dev/pandas/issues/32423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") losing timezone information when creating a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level from a column with timezone-aware dtype ([GH 32558](https://github.com/pandas-dev/pandas/issues/32558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where when passing a non-dict mapping as `objs` would raise a `TypeError` ([GH
    32863](https://github.com/pandas-dev/pandas/issues/32863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") now provides more descriptive `SpecificationError` message
    when attempting to aggregate a non-existent column ([GH 32755](https://github.com/pandas-dev/pandas/issues/32755))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns and [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") rows were used ([GH 32624](https://github.com/pandas-dev/pandas/issues/32624),
    [GH 24729](https://github.com/pandas-dev/pandas/issues/24729) and [GH 28306](https://github.com/pandas-dev/pandas/issues/28306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Appending a dictionary to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") without passing `ignore_index=True` will raise `TypeError:
    Can only append a dict if ignore_index=True` instead of `TypeError: Can only append
    a :class:`Series` if ignore_index=True or if the :class:`Series` has a name` ([GH
    30871](https://github.com/pandas-dev/pandas/issues/30871))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith"), [`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage"), [`DataFrame.dot()`](../reference/api/pandas.DataFrame.dot.html#pandas.DataFrame.dot
    "pandas.DataFrame.dot"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.duplicated()`](../reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated
    "pandas.DataFrame.duplicated"), [`DataFrame.isin()`](../reference/api/pandas.DataFrame.isin.html#pandas.DataFrame.isin
    "pandas.DataFrame.isin"), [`DataFrame.count()`](../reference/api/pandas.DataFrame.count.html#pandas.DataFrame.count
    "pandas.DataFrame.count"), [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode"), [`Series.asof()`](../reference/api/pandas.Series.asof.html#pandas.Series.asof
    "pandas.Series.asof") and [`DataFrame.asof()`](../reference/api/pandas.DataFrame.asof.html#pandas.DataFrame.asof
    "pandas.DataFrame.asof") not returning subclassed types. ([GH 31331](https://github.com/pandas-dev/pandas/issues/31331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    was not allowing for concatenation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with duplicate keys ([GH 33654](https://github.com/pandas-dev/pandas/issues/33654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") raised
    an error when the argument `labels` contains duplicates ([GH 33141](https://github.com/pandas-dev/pandas/issues/33141))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure only named functions can be used in [`eval()`](../reference/api/pandas.eval.html#pandas.eval
    "pandas.eval") ([GH 32460](https://github.com/pandas-dev/pandas/issues/32460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.aggregate()` and [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate") was causing a recursive loop in some cases ([GH 34224](https://github.com/pandas-dev/pandas/issues/34224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where melting [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns with `col_level > 0` would raise a `KeyError` on
    `id_vars` ([GH 34129](https://github.com/pandas-dev/pandas/issues/34129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and empty `cond` having non-bool dtype ([GH 34592](https://github.com/pandas-dev/pandas/issues/34592))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") would raise `ValueError` for elements with `S` dtype
    ([GH 34529](https://github.com/pandas-dev/pandas/issues/34529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Creating a `SparseArray` from timezone-aware dtype will issue a warning before
    dropping timezone information, instead of doing so silently ([GH 32501](https://github.com/pandas-dev/pandas/issues/32501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.from_spmatrix()` wrongly read scipy sparse matrix
    ([GH 31991](https://github.com/pandas-dev/pandas/issues/31991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") with `SparseArray` raised a `TypeError` ([GH 25777](https://github.com/pandas-dev/pandas/issues/25777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing an all-sparse `SparseArray` filled with `NaN` when
    indexed by a list-like ([GH 27781](https://github.com/pandas-dev/pandas/issues/27781),
    [GH 29563](https://github.com/pandas-dev/pandas/issues/29563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The repr of [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") now includes the repr of its `fill_value` attribute. Previously
    it used `fill_value`’s string representation ([GH 34352](https://github.com/pandas-dev/pandas/issues/34352))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") could not be cast to [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") ([GH 33113](https://github.com/pandas-dev/pandas/issues/33113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`arrays.SparseArray()`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") was returning the incorrect type when indexing a
    sparse dataframe with an iterable ([GH 34526](https://github.com/pandas-dev/pandas/issues/34526),
    [GH 34540](https://github.com/pandas-dev/pandas/issues/34540))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") would raise on empty input of `Int64` dtype ([GH
    33317](https://github.com/pandas-dev/pandas/issues/33317))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when concatenating [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects with non-overlapping columns resulting in object-dtype
    columns rather than preserving the extension dtype ([GH 27692](https://github.com/pandas-dev/pandas/issues/27692),
    [GH 33027](https://github.com/pandas-dev/pandas/issues/33027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `StringArray.isna()` would return `False` for NA values when
    `pandas.options.mode.use_inf_as_na` was set to `True` ([GH 33655](https://github.com/pandas-dev/pandas/issues/33655))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction with EA dtype and index but no data or scalar data fails ([GH 26469](https://github.com/pandas-dev/pandas/issues/26469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug that caused `Series.__repr__()` to crash for extension types whose
    elements are multidimensional arrays ([GH 33770](https://github.com/pandas-dev/pandas/issues/33770)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.update()`](../reference/api/pandas.Series.update.html#pandas.Series.update
    "pandas.Series.update") would raise a `ValueError` for `ExtensionArray` dtypes
    with missing values ([GH 33980](https://github.com/pandas-dev/pandas/issues/33980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `StringArray.memory_usage()` was not implemented ([GH 33963](https://github.com/pandas-dev/pandas/issues/33963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `DataFrameGroupBy()` would ignore the `min_count` argument for
    aggregations on nullable Boolean dtypes ([GH 34051](https://github.com/pandas-dev/pandas/issues/34051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where the constructor of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `dtype='string'` would fail ([GH 27953](https://github.com/pandas-dev/pandas/issues/27953),
    [GH 33623](https://github.com/pandas-dev/pandas/issues/33623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column set to scalar extension type was considered an object
    type rather than the extension type ([GH 34832](https://github.com/pandas-dev/pandas/issues/34832))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in `IntegerArray.astype()` to correctly copy the mask as well ([GH
    34931](https://github.com/pandas-dev/pandas/issues/34931)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Set operations on an object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") now always return object-dtype results ([GH 31401](https://github.com/pandas-dev/pandas/issues/31401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed [`pandas.testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") to correctly raise if the `left` argument
    is a different subclass with `check_series_type=True` ([GH 32670](https://github.com/pandas-dev/pandas/issues/32670)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting a missing attribute in a [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") or [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") string raises the correct `AttributeError` ([GH 32408](https://github.com/pandas-dev/pandas/issues/32408))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`pandas.testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") where dtypes were checked for `Interval`
    and `ExtensionArray` operands when `check_dtype` was `False` ([GH 32747](https://github.com/pandas-dev/pandas/issues/32747))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__dir__()` caused a segfault when using unicode surrogates
    in a column name ([GH 25509](https://github.com/pandas-dev/pandas/issues/25509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals") and [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") in allowing subclasses to be equal ([GH 34402](https://github.com/pandas-dev/pandas/issues/34402)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Passing an invalid `fill_value` to `Categorical.take()` raises a `ValueError`
    instead of `TypeError` ([GH 33660](https://github.com/pandas-dev/pandas/issues/33660))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combining a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with integer categories and which contains missing values
    with a float dtype column in operations such as [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") or `append()` will now result in a float column instead of an
    object dtype column ([GH 33607](https://github.com/pandas-dev/pandas/issues/33607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    was unable to join on non-unique categorical indices ([GH 28189](https://github.com/pandas-dev/pandas/issues/28189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when passing categorical data to [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor along with `dtype=object` incorrectly returning a
    [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") instead of object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 32167](https://github.com/pandas-dev/pandas/issues/32167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") comparison operator `__ne__` would incorrectly evaluate
    to `False` when either element was missing ([GH 32276](https://github.com/pandas-dev/pandas/issues/32276))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Categorical.fillna()` now accepts [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") `other` argument ([GH 32420](https://github.com/pandas-dev/pandas/issues/32420))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Repr of [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") was not distinguishing between `int` and `str` ([GH 33676](https://github.com/pandas-dev/pandas/issues/33676))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Passing an integer dtype other than `int64` to `np.array(period_index, dtype=...)`
    will now raise `TypeError` instead of incorrectly using `int64` ([GH 32255](https://github.com/pandas-dev/pandas/issues/32255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_timestamp()`](../reference/api/pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp") now raises a `TypeError` if the axis is not a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"). Previously an `AttributeError` was raised ([GH 33327](https://github.com/pandas-dev/pandas/issues/33327))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.to_period()`](../reference/api/pandas.Series.to_period.html#pandas.Series.to_period
    "pandas.Series.to_period") now raises a `TypeError` if the axis is not a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"). Previously an `AttributeError` was raised ([GH 33327](https://github.com/pandas-dev/pandas/issues/33327))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    no longer accepts tuples for the `freq` argument ([GH 34658](https://github.com/pandas-dev/pandas/issues/34658))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where constructing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") from ambiguous epoch time and calling constructor again changed
    the [`Timestamp.value()`](../reference/api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") property ([GH 24329](https://github.com/pandas-dev/pandas/issues/24329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeArray.searchsorted()`, `TimedeltaArray.searchsorted()`, `PeriodArray.searchsorted()`
    not recognizing non-pandas scalars and incorrectly raising `ValueError` instead
    of `TypeError` ([GH 30950](https://github.com/pandas-dev/pandas/issues/30950))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") where constructing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with dateutil timezone less than 128 nanoseconds before daylight
    saving time switch from winter to summer would result in nonexistent time ([GH
    31043](https://github.com/pandas-dev/pandas/issues/31043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period.to_timestamp()`](../reference/api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp"), [`Period.start_time()`](../reference/api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") with microsecond frequency returning a timestamp one
    nanosecond earlier than the correct time ([GH 31475](https://github.com/pandas-dev/pandas/issues/31475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")
    raised a confusing error message when year, month or day is missing ([GH 31200](https://github.com/pandas-dev/pandas/issues/31200))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor incorrectly accepting `bool`-dtype inputs
    ([GH 32668](https://github.com/pandas-dev/pandas/issues/32668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.searchsorted()` not accepting a `list` or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") as its argument ([GH 32762](https://github.com/pandas-dev/pandas/issues/32762))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`PeriodIndex()`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") raised when passed a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of strings ([GH 26109](https://github.com/pandas-dev/pandas/issues/26109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") arithmetic when adding or subtracting an `np.ndarray` with
    `timedelta64` dtype ([GH 33296](https://github.com/pandas-dev/pandas/issues/33296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.to_period()`](../reference/api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period") not inferring the frequency when called with
    no arguments ([GH 33358](https://github.com/pandas-dev/pandas/issues/33358))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex.tz_localize()`](../reference/api/pandas.DatetimeIndex.tz_localize.html#pandas.DatetimeIndex.tz_localize
    "pandas.DatetimeIndex.tz_localize") incorrectly retaining `freq` in some cases
    where the original `freq` is no longer valid ([GH 30511](https://github.com/pandas-dev/pandas/issues/30511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` losing `freq` and timezone in some cases
    ([GH 33604](https://github.com/pandas-dev/pandas/issues/33604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_indexer()` where incorrect output would be returned
    for mixed datetime-like targets ([GH 33741](https://github.com/pandas-dev/pandas/issues/33741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") addition and subtraction with some types of `DateOffset`
    objects incorrectly retaining an invalid `freq` attribute ([GH 33779](https://github.com/pandas-dev/pandas/issues/33779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") where setting the `freq` attribute on an index could silently
    change the `freq` attribute on another index viewing the same data ([GH 33552](https://github.com/pandas-dev/pandas/issues/33552))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") were not returning consistent results with [`Series.min()`](../reference/api/pandas.Series.min.html#pandas.Series.min
    "pandas.Series.min") and [`Series.max()`](../reference/api/pandas.Series.max.html#pandas.Series.max
    "pandas.Series.max") when called on objects initialized with empty `pd.to_datetime()`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.intersection()` and `TimedeltaIndex.intersection()` with
    results not having the correct `name` attribute ([GH 33904](https://github.com/pandas-dev/pandas/issues/33904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeArray.__setitem__()`, `TimedeltaArray.__setitem__()`, `PeriodArray.__setitem__()`
    incorrectly allowing values with `int64` dtype to be silently cast ([GH 33717](https://github.com/pandas-dev/pandas/issues/33717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") from [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") incorrectly raising `TypeError` in some cases where it should
    succeed and `IncompatibleFrequency` in some cases where it should raise `TypeError`
    ([GH 33883](https://github.com/pandas-dev/pandas/issues/33883))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") from a read-only NumPy array with non-ns resolution which converted
    to object dtype instead of coercing to `datetime64[ns]` dtype when within the
    timestamp bounds ([GH 34843](https://github.com/pandas-dev/pandas/issues/34843)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `freq` keyword in [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period"), [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), `pd.tseries.frequencies.to_offset()` no longer allows
    tuples, pass as string instead ([GH 34703](https://github.com/pandas-dev/pandas/issues/34703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.append()` when appending a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") containing a scalar tz-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") resulted in an object column instead of `datetime64[ns, tz]`
    dtype ([GH 35038](https://github.com/pandas-dev/pandas/issues/35038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`OutOfBoundsDatetime` issues an improved error message when timestamp is out
    of implementation bounds. ([GH 32967](https://github.com/pandas-dev/pandas/issues/32967))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `AbstractHolidayCalendar.holidays()` when no rules were defined ([GH
    31415](https://github.com/pandas-dev/pandas/issues/31415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick` comparisons raising `TypeError` when comparing against timedelta-like
    objects ([GH 34088](https://github.com/pandas-dev/pandas/issues/34088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick` multiplication raising `TypeError` when multiplying by a float
    ([GH 34486](https://github.com/pandas-dev/pandas/issues/34486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") with a high precision integer that would round the [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") components ([GH 31354](https://github.com/pandas-dev/pandas/issues/31354))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in dividing `np.nan` or `None` by [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") incorrectly returning `NaT` ([GH 31869](https://github.com/pandas-dev/pandas/issues/31869))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    now understands `µs` as an identifier for microsecond ([GH 32899](https://github.com/pandas-dev/pandas/issues/32899))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    string representation now includes nanoseconds, when nanoseconds are non-zero
    ([GH 9309](https://github.com/pandas-dev/pandas/issues/9309))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparing a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object against an `np.ndarray` with `timedelta64` dtype incorrectly
    viewing all entries as unequal ([GH 33441](https://github.com/pandas-dev/pandas/issues/33441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") that produced an extra point on a edge case ([GH 30353](https://github.com/pandas-dev/pandas/issues/30353),
    [GH 33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that produced an extra point on a edge case ([GH
    30353](https://github.com/pandas-dev/pandas/issues/30353), [GH 13022](https://github.com/pandas-dev/pandas/issues/13022),
    [GH 33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") that ignored the `loffset` argument when dealing
    with timedelta ([GH 7687](https://github.com/pandas-dev/pandas/issues/7687), [GH
    33498](https://github.com/pandas-dev/pandas/issues/33498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") and [`pandas.to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") that ignored the `unit` argument for string input ([GH
    12136](https://github.com/pandas-dev/pandas/issues/12136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `infer_datetime_format=True` where timezone names (e.g.
    `UTC`) would not be parsed correctly ([GH 33133](https://github.com/pandas-dev/pandas/issues/33133))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.floordiv()`](../reference/api/pandas.DataFrame.floordiv.html#pandas.DataFrame.floordiv
    "pandas.DataFrame.floordiv") with `axis=0` not treating division-by-zero like
    [`Series.floordiv()`](../reference/api/pandas.Series.floordiv.html#pandas.Series.floordiv
    "pandas.Series.floordiv") ([GH 31271](https://github.com/pandas-dev/pandas/issues/31271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") with string argument `"uint64"` and `errors="coerce"` silently
    fails ([GH 32394](https://github.com/pandas-dev/pandas/issues/32394))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric") with `downcast="unsigned"` fails for empty data ([GH 32493](https://github.com/pandas-dev/pandas/issues/32493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") with `numeric_only=False` and either `datetime64` dtype
    or `PeriodDtype` column incorrectly raising `TypeError` ([GH 32426](https://github.com/pandas-dev/pandas/issues/32426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.count()`](../reference/api/pandas.DataFrame.count.html#pandas.DataFrame.count
    "pandas.DataFrame.count") with `level="foo"` and index level `"foo"` containing
    NaNs causes segmentation fault ([GH 21824](https://github.com/pandas-dev/pandas/issues/21824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") with `axis=1` returning incorrect results with mixed
    dtypes ([GH 32995](https://github.com/pandas-dev/pandas/issues/32995))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") raising when handling nullable integer columns with `pandas.NA`
    ([GH 33803](https://github.com/pandas-dev/pandas/issues/33803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations between [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects with non-overlapping columns with duplicate labels
    causing an infinite loop ([GH 35194](https://github.com/pandas-dev/pandas/issues/35194))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") addition and subtraction between object-dtype objects and `datetime64`
    dtype objects ([GH 33824](https://github.com/pandas-dev/pandas/issues/33824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") giving incorrect results when comparing a `Float64Index`
    and object [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    ([GH 35217](https://github.com/pandas-dev/pandas/issues/35217))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") reductions (e.g. `df.min()`, `df.max()`) with `ExtensionArray`
    dtypes ([GH 34520](https://github.com/pandas-dev/pandas/issues/34520), [GH 32651](https://github.com/pandas-dev/pandas/issues/32651))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") now raise a ValueError if `limit_direction` is
    `''forward''` or `''both''` and `method` is `''backfill''` or `''bfill''` or `limit_direction`
    is `''backward''` or `''both''` and `method` is `''pad''` or `''ffill''` ([GH
    34746](https://github.com/pandas-dev/pandas/issues/34746))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction from NumPy array with big-endian `datetime64` dtype ([GH 29684](https://github.com/pandas-dev/pandas/issues/29684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") construction with large nanoseconds keyword value ([GH 32402](https://github.com/pandas-dev/pandas/issues/32402))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") construction where sets would be duplicated rather than raising
    ([GH 32582](https://github.com/pandas-dev/pandas/issues/32582))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor no longer accepts a list of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects. Because of changes to NumPy, [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects are now consistently treated as 2D objects, so a list
    of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects is considered 3D, and no longer acceptable for the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor ([GH 32289](https://github.com/pandas-dev/pandas/issues/32289)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") when initiating a frame with lists and assign `columns` with
    nested list for `MultiIndex` ([GH 32173](https://github.com/pandas-dev/pandas/issues/32173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for invalid construction of list when creating a new
    index ([GH 35190](https://github.com/pandas-dev/pandas/issues/35190))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in the [`astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") method when converting “string” dtype data to nullable
    integer dtype ([GH 32450](https://github.com/pandas-dev/pandas/issues/32450)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed issue where taking `min` or `max` of a `StringArray` or `Series` with
    `StringDtype` type would raise. ([GH 31746](https://github.com/pandas-dev/pandas/issues/31746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.cat()`](../reference/api/pandas.Series.str.cat.html#pandas.Series.str.cat
    "pandas.Series.str.cat") returning `NaN` output when other had [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") type ([GH 33425](https://github.com/pandas-dev/pandas/issues/33425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.api.dtypes.is_string_dtype()` no longer incorrectly identifies categorical
    series as string.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `IntervalArray` incorrectly allowing the underlying data to be changed
    when setting values ([GH 32782](https://github.com/pandas-dev/pandas/issues/32782))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs") now raises a `TypeError` if a `level` keyword is supplied
    and the axis is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). Previously an `AttributeError` was raised ([GH 33610](https://github.com/pandas-dev/pandas/issues/33610))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in slicing on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a partial-timestamp dropping high-resolution indices
    near the end of a year, quarter, or month ([GH 31064](https://github.com/pandas-dev/pandas/issues/31064))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.get_loc()` treating higher-resolution strings differently
    from `PeriodIndex.get_value()` ([GH 31172](https://github.com/pandas-dev/pandas/issues/31172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") and [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") not matching `.loc` behavior when looking up an integer
    in a `Float64Index` ([GH 31329](https://github.com/pandas-dev/pandas/issues/31329))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.is_monotonic()` incorrectly returning `True` when containing
    leading `NaT` entries ([GH 31437](https://github.com/pandas-dev/pandas/issues/31437))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.get_loc()` raising `KeyError` with converted-integer key
    instead of the user-passed key ([GH 31425](https://github.com/pandas-dev/pandas/issues/31425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.xs()`](../reference/api/pandas.Series.xs.html#pandas.Series.xs
    "pandas.Series.xs") incorrectly returning `Timestamp` instead of `datetime64`
    in some object-dtype cases ([GH 31630](https://github.com/pandas-dev/pandas/issues/31630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iat()`](../reference/api/pandas.DataFrame.iat.html#pandas.DataFrame.iat
    "pandas.DataFrame.iat") incorrectly returning `Timestamp` instead of `datetime`
    in some object-dtype cases ([GH 32809](https://github.com/pandas-dev/pandas/issues/32809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.at()`](../reference/api/pandas.DataFrame.at.html#pandas.DataFrame.at
    "pandas.DataFrame.at") when either columns or index is non-unique ([GH 33041](https://github.com/pandas-dev/pandas/issues/33041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") and [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when indexing with an integer key on a object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") that is not all-integers ([GH 31905](https://github.com/pandas-dev/pandas/issues/31905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.iloc.__setitem__()` on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with duplicate columns incorrectly setting values for all
    matching columns ([GH 15686](https://github.com/pandas-dev/pandas/issues/15686),
    [GH 22036](https://github.com/pandas-dev/pandas/issues/22036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex"), [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") incorrectly allowing lookups of non-matching datetime-like
    dtypes ([GH 32650](https://github.com/pandas-dev/pandas/issues/32650))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` indexing with non-standard scalars, e.g. `np.dtype`
    ([GH 32684](https://github.com/pandas-dev/pandas/issues/32684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor where an unhelpful error message was raised for NumPy scalars ([GH
    33017](https://github.com/pandas-dev/pandas/issues/33017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.lookup()` incorrectly raising an `AttributeError` when `frame.index`
    or `frame.columns` is not unique; this will now raise a `ValueError` with a helpful
    error message ([GH 33041](https://github.com/pandas-dev/pandas/issues/33041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    where a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") could not be added or subtracted from a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") interval ([GH 32023](https://github.com/pandas-dev/pandas/issues/32023))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.copy()`](../reference/api/pandas.DataFrame.copy.html#pandas.DataFrame.copy
    "pandas.DataFrame.copy") not invalidating _item_cache after copy caused post-copy
    value updates to not be reflected ([GH 31784](https://github.com/pandas-dev/pandas/issues/31784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") throwing an error when a `datetime64[ns, tz]` value is provided
    ([GH 32395](https://github.com/pandas-dev/pandas/issues/32395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` with an integer key and a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") with leading integer level failing to raise `KeyError` if
    the key is not present in the first level ([GH 33355](https://github.com/pandas-dev/pandas/issues/33355))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") when slicing a single column [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `ExtensionDtype` (e.g. `df.iloc[:, :1]`) returning an
    invalid result ([GH 32957](https://github.com/pandas-dev/pandas/issues/32957))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.insert()` and `TimedeltaIndex.insert()` causing index
    `freq` to be lost when setting an element into an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 33573](https://github.com/pandas-dev/pandas/issues/33573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__setitem__()` with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") and a list-like key of integers ([GH 33473](https://github.com/pandas-dev/pandas/issues/33473))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` allowing missing labels with `np.ndarray`, [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") indexers but not `list`, these now all raise `KeyError` ([GH
    33646](https://github.com/pandas-dev/pandas/issues/33646))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") and [`Series.truncate()`](../reference/api/pandas.Series.truncate.html#pandas.Series.truncate
    "pandas.Series.truncate") where index was assumed to be monotone increasing ([GH
    33756](https://github.com/pandas-dev/pandas/issues/33756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing with a list of strings representing datetimes failed on [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") or [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") ([GH 11278](https://github.com/pandas-dev/pandas/issues/11278))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.at()`](../reference/api/pandas.Series.at.html#pandas.Series.at
    "pandas.Series.at") when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would raise an exception on valid inputs ([GH 26989](https://github.com/pandas-dev/pandas/issues/26989))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") with dictionary of values changes columns with dtype of
    `int` to `float` ([GH 34573](https://github.com/pandas-dev/pandas/issues/34573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") would raise an `IndexingError` when accessing a `None` value
    ([GH 34318](https://github.com/pandas-dev/pandas/issues/34318))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") and [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") would not preserve data types on an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 19602](https://github.com/pandas-dev/pandas/issues/19602))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    indexing with a `time` key on a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with `NaT` entries ([GH 35114](https://github.com/pandas-dev/pandas/issues/35114))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Calling `fillna()` on an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") now correctly returns a shallow copied object. The behaviour
    is now consistent with [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and a non-empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 32543](https://github.com/pandas-dev/pandas/issues/32543)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") when argument `to_replace` is of type dict/list and is
    used on a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    containing `<NA>` was raising a `TypeError`. The method now handles this by ignoring
    `<NA>` values when doing the comparison for the replacement ([GH 32621](https://github.com/pandas-dev/pandas/issues/32621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`any()`](../reference/api/pandas.Series.any.html#pandas.Series.any "pandas.Series.any")
    and [`all()`](../reference/api/pandas.Series.all.html#pandas.Series.all "pandas.Series.all")
    incorrectly returning `<NA>` for all `False` or all `True` values using the nulllable
    Boolean dtype and with `skipna=False` ([GH 33253](https://github.com/pandas-dev/pandas/issues/33253))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified documentation on interpolate with `method=akima`. The `der` parameter
    must be scalar or `None` ([GH 33426](https://github.com/pandas-dev/pandas/issues/33426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") uses the correct axis convention now. Previously
    interpolating along columns lead to interpolation along indices and vice versa.
    Furthermore interpolating with methods `pad`, `ffill`, `bfill` and `backfill`
    are identical to using these methods with [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") ([GH 12918](https://github.com/pandas-dev/pandas/issues/12918),
    [GH 29146](https://github.com/pandas-dev/pandas/issues/29146))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") when called on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with column names of string type was throwing a ValueError.
    The method is now independent of the type of the column names ([GH 33956](https://github.com/pandas-dev/pandas/issues/33956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing [`NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA") into a
    format string using format specs will now work. For example `"{:.1f}".format(pd.NA)`
    would previously raise a `ValueError`, but will now return the string `"<NA>"`
    ([GH 34740](https://github.com/pandas-dev/pandas/issues/34740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") not raising on invalid `na_action` ([GH 32815](https://github.com/pandas-dev/pandas/issues/32815))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`DataFrame.swaplevels()` now raises a `TypeError` if the axis is not a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). Previously an `AttributeError` was raised ([GH 31126](https://github.com/pandas-dev/pandas/issues/31126))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.loc()` when used with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). The returned values were not in the same order as the given
    inputs ([GH 22797](https://github.com/pandas-dev/pandas/issues/22797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: Bug in `MultiIndex.intersection()` was not guaranteed to preserve order when
    `sort=False`. ([GH 31325](https://github.com/pandas-dev/pandas/issues/31325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.truncate()`](../reference/api/pandas.DataFrame.truncate.html#pandas.DataFrame.truncate
    "pandas.DataFrame.truncate") was dropping [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") names. ([GH 34564](https://github.com/pandas-dev/pandas/issues/34564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: Bug when joining two [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") without specifying level with different columns. Return-indexers
    parameter was ignored. ([GH 34074](https://github.com/pandas-dev/pandas/issues/34074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Passing a `set` as `names` argument to [`pandas.read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`pandas.read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), or [`pandas.read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") will raise `ValueError: Names should be an ordered collection.`
    ([GH 34946](https://github.com/pandas-dev/pandas/issues/34946))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in print-out when `display.precision` is zero. ([GH 20359](https://github.com/pandas-dev/pandas/issues/20359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") where integer overflow was occurring when json contains big
    number strings. ([GH 30320](https://github.com/pandas-dev/pandas/issues/30320))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    will now raise a `ValueError` when the arguments `header` and `prefix` both are
    not `None`. ([GH 27394](https://github.com/pandas-dev/pandas/issues/27394))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") was raising `NotFoundError` when `path_or_buf` was
    an S3 URI ([GH 28375](https://github.com/pandas-dev/pandas/issues/28375))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") overwriting pyarrow’s default for `coerce_timestamps`;
    following pyarrow’s default allows writing nanosecond timestamps with `version="2.0"`
    ([GH 31652](https://github.com/pandas-dev/pandas/issues/31652)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising `TypeError` when `sep=None` was used in combination
    with `comment` keyword ([GH 31396](https://github.com/pandas-dev/pandas/issues/31396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore` that caused it to set to `int64` the dtype of a `datetime64`
    column when reading a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") in Python 3 from fixed format written in Python 2 ([GH 31750](https://github.com/pandas-dev/pandas/issues/31750))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now handles dates and datetimes larger than [`Timestamp.max`](../reference/api/pandas.Timestamp.max.html#pandas.Timestamp.max
    "pandas.Timestamp.max") returning them as [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)") objects ([GH 20927](https://github.com/pandas-dev/pandas/issues/20927))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where `Timedelta` objects would not be serialized
    correctly with `date_format="iso"` ([GH 28256](https://github.com/pandas-dev/pandas/issues/28256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    will raise a `ValueError` when the column names passed in `parse_dates` are missing
    in the `Dataframe` ([GH 31251](https://github.com/pandas-dev/pandas/issues/31251))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") where a UTF-8 string with a high surrogate would cause a
    segmentation violation ([GH 23809](https://github.com/pandas-dev/pandas/issues/23809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was causing a file descriptor leak on an empty file ([GH 31488](https://github.com/pandas-dev/pandas/issues/31488))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was causing a segfault when there were blank lines between
    the header and data rows ([GH 28071](https://github.com/pandas-dev/pandas/issues/28071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising a misleading exception on a permissions issue ([GH
    23784](https://github.com/pandas-dev/pandas/issues/23784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") was raising an `IndexError` when `header=None` and two extra
    data columns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") was raising an `AttributeError` when reading files from Google
    Cloud Storage ([GH 33069](https://github.com/pandas-dev/pandas/issues/33069))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") where an `AttributeError` was raised when saving an
    out of bounds date ([GH 26761](https://github.com/pandas-dev/pandas/issues/26761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") did not correctly handle multiple embedded spaces in OpenDocument
    text cells. ([GH 32207](https://github.com/pandas-dev/pandas/issues/32207))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") was raising `TypeError` when reading a `list` of Booleans
    into a [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series").
    ([GH 31464](https://github.com/pandas-dev/pandas/issues/31464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.io.json.json_normalize()` where location specified by `record_path`
    doesn’t point to an array. ([GH 26284](https://github.com/pandas-dev/pandas/issues/26284))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") has a more explicit error message when loading an unsupported
    HDF file ([GH 9539](https://github.com/pandas-dev/pandas/issues/9539))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_feather()` was raising an `ArrowIOError` when reading an s3 or
    http file path ([GH 29055](https://github.com/pandas-dev/pandas/issues/29055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") could not handle the column name `render` and was
    raising an `KeyError` ([GH 34331](https://github.com/pandas-dev/pandas/issues/34331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `execute()` was raising a `ProgrammingError` for some DB-API drivers
    when the SQL statement contained the `%` character and no parameters were present
    ([GH 34211](https://github.com/pandas-dev/pandas/issues/34211))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `StataReader()` which resulted in categorical variables with different
    dtypes when reading data using an iterator. ([GH 31544](https://github.com/pandas-dev/pandas/issues/31544))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HDFStore.keys()`](../reference/api/pandas.HDFStore.keys.html#pandas.HDFStore.keys
    "pandas.HDFStore.keys") has now an optional `include` parameter that allows the
    retrieval of all native HDF5 table names ([GH 29916](https://github.com/pandas-dev/pandas/issues/29916))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TypeError` exceptions raised by [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") were showing as `parser_f` when an unexpected keyword argument
    was passed ([GH 25648](https://github.com/pandas-dev/pandas/issues/25648))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") for ODS files removes 0.0 values ([GH 27222](https://github.com/pandas-dev/pandas/issues/27222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ujson.encode()` was raising an `OverflowError` with numbers larger than
    `sys.maxsize` ([GH 34395](https://github.com/pandas-dev/pandas/issues/34395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `HDFStore.append_to_multiple()` was raising a `ValueError` when the `min_itemsize`
    parameter is set ([GH 11238](https://github.com/pandas-dev/pandas/issues/11238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `create_table()` now raises an error when `column` argument was not specified
    in `data_columns` on input ([GH 28156](https://github.com/pandas-dev/pandas/issues/28156))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")
    now could read line-delimited json file from a file url while `lines` and `chunksize`
    are set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") when reading DataFrames with `-np.inf` entries with
    MySQL now has a more explicit `ValueError` ([GH 34431](https://github.com/pandas-dev/pandas/issues/34431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where capitalised files extensions were not decompressed by read_* functions
    ([GH 35164](https://github.com/pandas-dev/pandas/issues/35164))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") that was raising a `TypeError` when `header=None` and `index_col`
    is given as a `list` ([GH 31783](https://github.com/pandas-dev/pandas/issues/31783))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") where datetime values are used in the header in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 34748](https://github.com/pandas-dev/pandas/issues/34748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") no longer takes `**kwds` arguments. This means that passing
    in the keyword argument `chunksize` now raises a `TypeError` (previously raised
    a `NotImplementedError`), while passing in the keyword argument `encoding` now
    raises a `TypeError` ([GH 34464](https://github.com/pandas-dev/pandas/issues/34464))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_records()`](../reference/api/pandas.DataFrame.to_records.html#pandas.DataFrame.to_records
    "pandas.DataFrame.to_records") was incorrectly losing timezone information in
    timezone-aware `datetime64` columns ([GH 32535](https://github.com/pandas-dev/pandas/issues/32535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") for line/bar now accepts color by dictionary ([GH 8193](https://github.com/pandas-dev/pandas/issues/8193)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") where weights are not working for multiple columns
    ([GH 33173](https://github.com/pandas-dev/pandas/issues/33173))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.boxplot()`](../reference/api/pandas.DataFrame.boxplot.html#pandas.DataFrame.boxplot
    "pandas.DataFrame.boxplot") and `DataFrame.plot.boxplot()` lost color attributes
    of `medianprops`, `whiskerprops`, `capprops` and `boxprops` ([GH 30346](https://github.com/pandas-dev/pandas/issues/30346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.hist()`](../reference/api/pandas.DataFrame.hist.html#pandas.DataFrame.hist
    "pandas.DataFrame.hist") where the order of `column` argument was ignored ([GH
    29235](https://github.com/pandas-dev/pandas/issues/29235))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") that when adding multiple plots with different
    `cmap`, colorbars always use the first `cmap` ([GH 33389](https://github.com/pandas-dev/pandas/issues/33389))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") was adding a colorbar to the plot even if the
    argument `c` was assigned to a column containing color names ([GH 34316](https://github.com/pandas-dev/pandas/issues/34316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`pandas.plotting.bootstrap_plot()`](../reference/api/pandas.plotting.bootstrap_plot.html#pandas.plotting.bootstrap_plot
    "pandas.plotting.bootstrap_plot") was causing cluttered axes and overlapping labels
    ([GH 34905](https://github.com/pandas-dev/pandas/issues/34905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") caused an error when plotting variable marker
    sizes ([GH 32904](https://github.com/pandas-dev/pandas/issues/32904))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GroupBy/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Using a [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") with `count`, `min`, `max`, `median`, `skew`,
    `cov`, `corr` will now return correct results for any monotonic [`pandas.api.indexers.BaseIndexer`](../reference/api/pandas.api.indexers.BaseIndexer.html#pandas.api.indexers.BaseIndexer
    "pandas.api.indexers.BaseIndexer") descendant ([GH 32865](https://github.com/pandas-dev/pandas/issues/32865))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrameGroupby.mean()` and `SeriesGroupby.mean()` (and similarly for `median()`,
    `std()` and `var()`) now raise a `TypeError` if a non-accepted keyword argument
    is passed into it. Previously an `UnsupportedFunctionCall` was raised (`AssertionError`
    if `min_count` passed into `median()`) ([GH 31485](https://github.com/pandas-dev/pandas/issues/31485))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") raising `ValueError` when the `by`
    axis is not sorted, has duplicates, and the applied `func` does not mutate passed
    in objects ([GH 30667](https://github.com/pandas-dev/pandas/issues/30667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.transform()` produces an incorrect result with transformation
    functions ([GH 30918](https://github.com/pandas-dev/pandas/issues/30918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") were returning the wrong result
    when grouping by multiple keys of which some were categorical and others not ([GH
    32494](https://github.com/pandas-dev/pandas/issues/32494))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.count()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.count.html#pandas.core.groupby.DataFrameGroupBy.count
    "pandas.core.groupby.DataFrameGroupBy.count") and [`SeriesGroupBy.count()`](../reference/api/pandas.core.groupby.SeriesGroupBy.count.html#pandas.core.groupby.SeriesGroupBy.count
    "pandas.core.groupby.SeriesGroupBy.count") causing segmentation fault when grouped-by
    columns contain NaNs ([GH 32841](https://github.com/pandas-dev/pandas/issues/32841))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") produces inconsistent type when aggregating Boolean [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 32894](https://github.com/pandas-dev/pandas/issues/32894))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.sum()` and `SeriesGroupBy.sum()` where a large negative
    number would be returned when the number of non-null values was below `min_count`
    for nullable integer dtypes ([GH 32861](https://github.com/pandas-dev/pandas/issues/32861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.quantile()` was raising on nullable integers ([GH 33136](https://github.com/pandas-dev/pandas/issues/33136))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where an `AmbiguousTimeError` would be raised when
    the resulting timezone aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") had a DST transition at midnight ([GH 25758](https://github.com/pandas-dev/pandas/issues/25758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") where a `ValueError` would be raised when grouping
    by a categorical column with read-only categories and `sort=False` ([GH 33410](https://github.com/pandas-dev/pandas/issues/33410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg"), [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"), [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform"), [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform"), [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample"), and [`SeriesGroupBy.resample()`](../reference/api/pandas.core.groupby.SeriesGroupBy.resample.html#pandas.core.groupby.SeriesGroupBy.resample
    "pandas.core.groupby.SeriesGroupBy.resample") where subclasses are not preserved
    ([GH 28330](https://github.com/pandas-dev/pandas/issues/28330))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.agg()` where any column name was accepted in the named
    aggregation of `SeriesGroupBy` previously. The behaviour now allows only `str`
    and callables else would raise `TypeError`. ([GH 34422](https://github.com/pandas-dev/pandas/issues/34422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") lost the name of the [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") when one of the `agg` keys referenced an empty list ([GH 32580](https://github.com/pandas-dev/pandas/issues/32580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Rolling.apply()` where `center=True` was ignored when `engine='numba'`
    was specified ([GH 34784](https://github.com/pandas-dev/pandas/issues/34784))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.ewm.cov()` was throwing `AssertionError` for [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") inputs ([GH 34440](https://github.com/pandas-dev/pandas/issues/34440))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") raised `TypeError` for non-numeric
    types rather than dropping the columns ([GH 27892](https://github.com/pandas-dev/pandas/issues/27892))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`core.groupby.DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") when `func='nunique'` and columns
    are of type `datetime64`, the result would also be of type `datetime64` instead
    of `int64` ([GH 35109](https://github.com/pandas-dev/pandas/issues/35109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") raising an `AttributeError` when selecting a column
    and aggregating with `as_index=False` ([GH 35246](https://github.com/pandas-dev/pandas/issues/35246)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.first()` and `DataFrameGroupBy.last()` that would raise
    an unnecessary `ValueError` when grouping on multiple `Categoricals` ([GH 34951](https://github.com/pandas-dev/pandas/issues/34951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug effecting all numeric and Boolean reduction methods not returning subclassed
    data type. ([GH 25596](https://github.com/pandas-dev/pandas/issues/25596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") when only `MultiIndexed` columns is set ([GH 17038](https://github.com/pandas-dev/pandas/issues/17038))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") and [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") can take tuple names in `MultiIndexed` data ([GH 19966](https://github.com/pandas-dev/pandas/issues/19966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") when `margin` is `True` and only `column` is defined
    ([GH 31016](https://github.com/pandas-dev/pandas/issues/31016))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed incorrect error message in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") when `columns` is set to `None`. ([GH 30924](https://github.com/pandas-dev/pandas/issues/30924))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") when inputs are two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and have tuple names, the output will keep a dummy [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") as columns. ([GH 18321](https://github.com/pandas-dev/pandas/issues/18321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") can now take lists for `index` and `columns` arguments
    ([GH 21425](https://github.com/pandas-dev/pandas/issues/21425))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where the resulting indices are not copied when `copy=True` ([GH 29879](https://github.com/pandas-dev/pandas/issues/29879))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `SeriesGroupBy.aggregate()` was resulting in aggregations being overwritten
    when they shared the same name ([GH 30880](https://github.com/pandas-dev/pandas/issues/30880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") would lose the `name` attribute when converting from `Float64Index`
    to `Int64Index`, or when casting to an `ExtensionArray` dtype ([GH 32013](https://github.com/pandas-dev/pandas/issues/32013))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.append()` will now raise a `TypeError` when passed a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or a sequence containing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 31413](https://github.com/pandas-dev/pandas/issues/31413))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") will raise a `TypeError` if `to_replace` is not an expected
    type. Previously the `replace` would fail silently ([GH 18634](https://github.com/pandas-dev/pandas/issues/18634))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug on inplace operation of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") that was adding a column to the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from where it was originally dropped from (using `inplace=True`)
    ([GH 30484](https://github.com/pandas-dev/pandas/issues/30484))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") where callback was called with [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") parameter even though `raw=True` requested. ([GH 32423](https://github.com/pandas-dev/pandas/issues/32423))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") losing timezone information when creating a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") level from a column with timezone-aware dtype ([GH 32558](https://github.com/pandas-dev/pandas/issues/32558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    where when passing a non-dict mapping as `objs` would raise a `TypeError` ([GH
    32863](https://github.com/pandas-dev/pandas/issues/32863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") now provides more descriptive `SpecificationError` message
    when attempting to aggregate a non-existent column ([GH 32755](https://github.com/pandas-dev/pandas/issues/32755))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns and [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") rows were used ([GH 32624](https://github.com/pandas-dev/pandas/issues/32624),
    [GH 24729](https://github.com/pandas-dev/pandas/issues/24729) and [GH 28306](https://github.com/pandas-dev/pandas/issues/28306))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Appending a dictionary to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") without passing `ignore_index=True` will raise `TypeError:
    Can only append a dict if ignore_index=True` instead of `TypeError: Can only append
    a :class:`Series` if ignore_index=True or if the :class:`Series` has a name` ([GH
    30871](https://github.com/pandas-dev/pandas/issues/30871))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.corrwith()`](../reference/api/pandas.DataFrame.corrwith.html#pandas.DataFrame.corrwith
    "pandas.DataFrame.corrwith"), [`DataFrame.memory_usage()`](../reference/api/pandas.DataFrame.memory_usage.html#pandas.DataFrame.memory_usage
    "pandas.DataFrame.memory_usage"), [`DataFrame.dot()`](../reference/api/pandas.DataFrame.dot.html#pandas.DataFrame.dot
    "pandas.DataFrame.dot"), [`DataFrame.idxmin()`](../reference/api/pandas.DataFrame.idxmin.html#pandas.DataFrame.idxmin
    "pandas.DataFrame.idxmin"), [`DataFrame.idxmax()`](../reference/api/pandas.DataFrame.idxmax.html#pandas.DataFrame.idxmax
    "pandas.DataFrame.idxmax"), [`DataFrame.duplicated()`](../reference/api/pandas.DataFrame.duplicated.html#pandas.DataFrame.duplicated
    "pandas.DataFrame.duplicated"), [`DataFrame.isin()`](../reference/api/pandas.DataFrame.isin.html#pandas.DataFrame.isin
    "pandas.DataFrame.isin"), [`DataFrame.count()`](../reference/api/pandas.DataFrame.count.html#pandas.DataFrame.count
    "pandas.DataFrame.count"), [`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode"), [`Series.asof()`](../reference/api/pandas.Series.asof.html#pandas.Series.asof
    "pandas.Series.asof") and [`DataFrame.asof()`](../reference/api/pandas.DataFrame.asof.html#pandas.DataFrame.asof
    "pandas.DataFrame.asof") not returning subclassed types. ([GH 31331](https://github.com/pandas-dev/pandas/issues/31331))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    was not allowing for concatenation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with duplicate keys ([GH 33654](https://github.com/pandas-dev/pandas/issues/33654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") raised
    an error when the argument `labels` contains duplicates ([GH 33141](https://github.com/pandas-dev/pandas/issues/33141))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure only named functions can be used in [`eval()`](../reference/api/pandas.eval.html#pandas.eval
    "pandas.eval") ([GH 32460](https://github.com/pandas-dev/pandas/issues/32460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Dataframe.aggregate()` and [`Series.aggregate()`](../reference/api/pandas.Series.aggregate.html#pandas.Series.aggregate
    "pandas.Series.aggregate") was causing a recursive loop in some cases ([GH 34224](https://github.com/pandas-dev/pandas/issues/34224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    where melting [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns with `col_level > 0` would raise a `KeyError` on
    `id_vars` ([GH 34129](https://github.com/pandas-dev/pandas/issues/34129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") with an empty [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and empty `cond` having non-bool dtype ([GH 34592](https://github.com/pandas-dev/pandas/issues/34592))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") would raise `ValueError` for elements with `S` dtype
    ([GH 34529](https://github.com/pandas-dev/pandas/issues/34529))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Creating a `SparseArray` from timezone-aware dtype will issue a warning before
    dropping timezone information, instead of doing so silently ([GH 32501](https://github.com/pandas-dev/pandas/issues/32501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.from_spmatrix()` wrongly read scipy sparse matrix
    ([GH 31991](https://github.com/pandas-dev/pandas/issues/31991))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sum()`](../reference/api/pandas.Series.sum.html#pandas.Series.sum
    "pandas.Series.sum") with `SparseArray` raised a `TypeError` ([GH 25777](https://github.com/pandas-dev/pandas/issues/25777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") containing an all-sparse `SparseArray` filled with `NaN` when
    indexed by a list-like ([GH 27781](https://github.com/pandas-dev/pandas/issues/27781),
    [GH 29563](https://github.com/pandas-dev/pandas/issues/29563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The repr of [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") now includes the repr of its `fill_value` attribute. Previously
    it used `fill_value`’s string representation ([GH 34352](https://github.com/pandas-dev/pandas/issues/34352))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") could not be cast to [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") ([GH 33113](https://github.com/pandas-dev/pandas/issues/33113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`arrays.SparseArray()`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") was returning the incorrect type when indexing a
    sparse dataframe with an iterable ([GH 34526](https://github.com/pandas-dev/pandas/issues/34526),
    [GH 34540](https://github.com/pandas-dev/pandas/issues/34540))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") would raise on empty input of `Int64` dtype ([GH
    33317](https://github.com/pandas-dev/pandas/issues/33317))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") when concatenating [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects with non-overlapping columns resulting in object-dtype
    columns rather than preserving the extension dtype ([GH 27692](https://github.com/pandas-dev/pandas/issues/27692),
    [GH 33027](https://github.com/pandas-dev/pandas/issues/33027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `StringArray.isna()` would return `False` for NA values when
    `pandas.options.mode.use_inf_as_na` was set to `True` ([GH 33655](https://github.com/pandas-dev/pandas/issues/33655))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    construction with EA dtype and index but no data or scalar data fails ([GH 26469](https://github.com/pandas-dev/pandas/issues/26469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug that caused `Series.__repr__()` to crash for extension types whose
    elements are multidimensional arrays ([GH 33770](https://github.com/pandas-dev/pandas/issues/33770)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where [`Series.update()`](../reference/api/pandas.Series.update.html#pandas.Series.update
    "pandas.Series.update") would raise a `ValueError` for `ExtensionArray` dtypes
    with missing values ([GH 33980](https://github.com/pandas-dev/pandas/issues/33980))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `StringArray.memory_usage()` was not implemented ([GH 33963](https://github.com/pandas-dev/pandas/issues/33963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where `DataFrameGroupBy()` would ignore the `min_count` argument for
    aggregations on nullable Boolean dtypes ([GH 34051](https://github.com/pandas-dev/pandas/issues/34051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug where the constructor of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `dtype='string'` would fail ([GH 27953](https://github.com/pandas-dev/pandas/issues/27953),
    [GH 33623](https://github.com/pandas-dev/pandas/issues/33623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column set to scalar extension type was considered an object
    type rather than the extension type ([GH 34832](https://github.com/pandas-dev/pandas/issues/34832))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in `IntegerArray.astype()` to correctly copy the mask as well ([GH
    34931](https://github.com/pandas-dev/pandas/issues/34931)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Set operations on an object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") now always return object-dtype results ([GH 31401](https://github.com/pandas-dev/pandas/issues/31401))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed [`pandas.testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") to correctly raise if the `left` argument
    is a different subclass with `check_series_type=True` ([GH 32670](https://github.com/pandas-dev/pandas/issues/32670)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting a missing attribute in a [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") or [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") string raises the correct `AttributeError` ([GH 32408](https://github.com/pandas-dev/pandas/issues/32408))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug in [`pandas.testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") where dtypes were checked for `Interval`
    and `ExtensionArray` operands when `check_dtype` was `False` ([GH 32747](https://github.com/pandas-dev/pandas/issues/32747))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__dir__()` caused a segfault when using unicode surrogates
    in a column name ([GH 25509](https://github.com/pandas-dev/pandas/issues/25509))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.equals()`](../reference/api/pandas.DataFrame.equals.html#pandas.DataFrame.equals
    "pandas.DataFrame.equals") and [`Series.equals()`](../reference/api/pandas.Series.equals.html#pandas.Series.equals
    "pandas.Series.equals") in allowing subclasses to be equal ([GH 34402](https://github.com/pandas-dev/pandas/issues/34402)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 368 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 3vts +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Brooks +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abbie Popa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Achmad Syarif Hidayatullah +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam W Bagaskarta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrian Mastronardi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aidan Montare +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akbar Septriyan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akos Furton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alejandro Hall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Hall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Itkes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Kirko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali McMaster +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alvaro Aleman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amy Graham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Schonfeld +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Shumanskiy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Wieteska +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Angela Ambroz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anjali Singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anna Daglis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthony Milbourne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antony Lee +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ari Sosnovsky +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arkadeep Adhikari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arunim Samudra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashkan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashwin Prakash Nalwade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ashwin Srinath +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Atsushi Nukariya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ayappan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ayla Khan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bart +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bart Broere +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benjamin Beier Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benjamin Fischer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bharat Raghunathan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bradley Dice +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brendan Sullivan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brian Strand +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carsten van Weelden +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chamoun Saoma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ChrisRobo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christian Chwala
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christos Petropoulos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuanzhu Xu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CloseChoice +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clément Robert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CuylenE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DanBasson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Saxton
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Danilo Horta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DavaIlhamHaeruzaman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Hirschfeld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dave Hughes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Rouquet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David S +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepyaman Datta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis Bakhuis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Derek McCammond +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Devjeet Roy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Diane Trout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dina +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dom +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drew Seibert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: EdAbati
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emiliano Jordan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erfan Nariman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Groszman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erik Hasse +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erkam Uyanik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan D +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan Kanter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Farhan Reynaldo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Farhan Reynaldo Hutabarat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Jetter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fred Reiss +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GYHHAHA +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Moreira +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Tutui +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Galuh Sahid
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaurav Chauhan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: George Hartzell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gim Seng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Giovanni Lanzani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gordon Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graham Wetzler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Lemaitre
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillem Sánchez +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HH-MWB +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harshavardhan Bachina
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How Si Wei
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Eaves
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iqrar Agalosi Nureyza +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iva Laginja +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JDkuba
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack Greisman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Austin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Deppen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Peacock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jake Tae +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jake Vanderplas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Cobon-Kerr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Červenka +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Škoda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jane Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jean-Francois Zinque +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeanderson Barros Candido +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jered Dominguez-Trujillo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Schendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jesse Farnham
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jiaxiang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jihwan Song +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joaquim L. Viegas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joel Nothman
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Bodley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John Paton +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jon Thielen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jose Manuel Martí +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joseph Gulian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Dimarsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joy Bhalla +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: João Veiga +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julian de Ruiter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Essert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justin Zheng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KD-dev-lab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaiqi Dong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karthik Mathur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kaushal Rohit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kee Chong Tan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ken Mankoff +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kendall Masse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kenny Huynh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ketan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Anderson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Bowey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kilian Lieret +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Koki Nishihara +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Krishna Chivukula +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KrishnaSai2020 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lesley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lewis Cowles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linda Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linxiao Wu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucca Delchiaro Costabile +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MBrouns +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mabel Villalba
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mabroor Ahmed +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Madhuri Palanivelu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mak Sze Chun
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malcolm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marian Denes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Bjeldbak Madsen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Durant +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Fleischmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Jones +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Winkel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martina Oefelein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marvzinc +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: María Marino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Cardoso +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mathis Felardos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matteo Felici +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matteo Santamaria +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max Halford +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mayank Bisht +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Megan Thong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Marino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miguel Marques +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Kutzma
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammad Hasnain Mohsin Rajan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mohammad Jafar Mashhadi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MomIsBestFriend
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monica +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natalie Jann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nate Armstrong +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nathanael +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Newman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nico Schlömer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Niklas Weber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ObliviousParadigm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olga Lyashevska +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OlivierLuG +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parallels +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Cando +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Lilley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Sanders +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pearcekieser +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pedro Larroy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pedro Reys
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Bull +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Peter Steinbach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phan Duc Nhat Minh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phil Kirlin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pierre-Yves Bourguignon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Piotr Kasprzyk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Piotr Niełacny +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prakhar Pandey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prashant Anand +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Puneetha Pai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quang Nguyễn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rafael Jaimes III +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rafif +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RaisaDZ +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rakshit Naidu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ram Rachum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ricardo Alanis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rik-de-Kort
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert de Vries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robin to Roxel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger Erens +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohith295 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roman Yurchak
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ror +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rushabh Vasani
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Nazareth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SAI SRAVAN MEDICHERLA +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SHUBH CHATTERJEE +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Cohan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samira-g-js +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sandu Ursu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sang Agung +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SanthoshBala18 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sasidhar Kasturi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SatheeshKumar Mohan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saul Shanabrook
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Gigante +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Berg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastián Vanrell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergei Chipiga +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergey +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ShilpaSugan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Gibbons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Legner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soham Tiwari +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Song Wenhao +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Souvik Mandal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spencer Clark
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steffen Rehberg +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steffen Schmitz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stéphan Taljaard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SultanOrazbayev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sumanau Sareen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SurajH1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suvayu Ali +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas J Fan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Smith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tobias Pitters +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uwe L. Korn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Valentin Iovene +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vandana Iyer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Venkatesh Datta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vijay Sai Mutyala +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vikas Pandey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vipul Rai +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vishwam Pandya +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vladimir Berkutov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will Holmgren
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yago González +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yosuke KOBAYASHI +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zachary Lawrence +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zaky Bilfagih +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zeb Nicholls +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alimcmaster1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: andhikayusup +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: andresmcneill +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: avinashpancham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: benabel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bernie gray +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: biddwan09 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: brock +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cleconte987 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dan1261 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: david-cortes +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: davidwales +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dequadras +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dhuettenmoser +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dilex42 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: elmonsomiat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: epizzigoni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fjetter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gabrielvf1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gdex1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: gfyoung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: guru kiran +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: h-vishal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iamshwin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jamin-aws-ospo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jfcorbett +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jnecus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kernc
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kota matsuoka +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kylekeppler +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: leandermaben +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: link2xt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: manoj_koneni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: marydmit +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: masterpiga +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maxime.song +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mglasder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: moaraccounts +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mproszewska
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: neilkg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nrebena
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ossdev07 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paihu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pan Jacek +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: patrick +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pedrooa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pizzathief +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: proost
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pvanhauw +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rbenes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rebecca-palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rhshadrach +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rjfs +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: s-scherrer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sage +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sagungrp +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: salem3358 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: saloni30 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smartswdeveloper +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smartvinnetou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: themien +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: timhunderwood +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tolhassianipar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tonywu1999
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tsvikas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tv3141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: venkateshdatta1993 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vivikelapoutre +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: willbowditch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: willpeppo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: za +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: zaki-indra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
