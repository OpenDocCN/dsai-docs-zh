- en: scipy.odr.Output
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.odr.Output.html#scipy.odr.Output](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.odr.Output.html#scipy.odr.Output)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The Output class stores the output of an ODR run.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Takes one argument for initialization, the return value from the function [`odr`](odr-function.html#scipy.odr.odr
    "scipy.odr.odr"). The attributes listed as “optional” above are only present if
    [`odr`](odr-function.html#scipy.odr.odr "scipy.odr.odr") was run with `full_output=1`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**beta**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Estimated parameter values, of shape (q,).
  prefs: []
  type: TYPE_NORMAL
- en: '**sd_beta**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Standard deviations of the estimated parameters, of shape (p,).
  prefs: []
  type: TYPE_NORMAL
- en: '**cov_beta**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Covariance matrix of the estimated parameters, of shape (p,p). Note that this
    *cov_beta* is not scaled by the residual variance *res_var*, whereas *sd_beta*
    is. This means `np.sqrt(np.diag(output.cov_beta * output.res_var))` is the same
    result as *output.sd_beta*.
  prefs: []
  type: TYPE_NORMAL
- en: '**delta**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Array of estimated errors in input variables, of same shape as *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**eps**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Array of estimated errors in response variables, of same shape as *y*.
  prefs: []
  type: TYPE_NORMAL
- en: '**xplus**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Array of `x + delta`.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Array `y = fcn(x + delta)`.
  prefs: []
  type: TYPE_NORMAL
- en: '**res_var**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Residual variance.
  prefs: []
  type: TYPE_NORMAL
- en: '**sum_square**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Sum of squares error.
  prefs: []
  type: TYPE_NORMAL
- en: '**sum_square_delta**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Sum of squares of delta error.
  prefs: []
  type: TYPE_NORMAL
- en: '**sum_square_eps**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Sum of squares of eps error.
  prefs: []
  type: TYPE_NORMAL
- en: '**inv_condnum**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Inverse condition number (cf. ODRPACK UG p. 77).
  prefs: []
  type: TYPE_NORMAL
- en: '**rel_error**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Relative error in function values computed within fcn.
  prefs: []
  type: TYPE_NORMAL
- en: '**work**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Final work array.
  prefs: []
  type: TYPE_NORMAL
- en: '**work_ind**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Indices into work for drawing out values (cf. ODRPACK UG p. 83).
  prefs: []
  type: TYPE_NORMAL
- en: '**info**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Reason for returning, as output by ODRPACK (cf. ODRPACK UG p. 38).
  prefs: []
  type: TYPE_NORMAL
- en: '**stopreason**list of str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: '*info* interpreted into English.'
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`pprint`](scipy.odr.Output.pprint.html#scipy.odr.Output.pprint "scipy.odr.Output.pprint")()
    | Pretty-print important results. |'
  prefs: []
  type: TYPE_TB
