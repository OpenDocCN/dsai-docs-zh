- en: pandas.DataFrame.to_numpy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_numpy.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_numpy.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Convert the DataFrame to a NumPy array.
  prefs: []
  type: TYPE_NORMAL
- en: By default, the dtype of the returned array will be the common NumPy dtype of
    all types in the DataFrame. For example, if the dtypes are `float16` and `float32`,
    the results dtype will be `float32`. This may require copying data and coercing
    values, which may be expensive.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**str or numpy.dtype, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The dtype to pass to `numpy.asarray()`.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to ensure that the returned value is not a view on another array. Note
    that `copy=False` does not *ensure* that `to_numpy()` is no-copy. Rather, `copy=True`
    ensure that a copy is made, even if not strictly necessary.
  prefs: []
  type: TYPE_NORMAL
- en: '**na_value**Any, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The value to use for missing values. The default value depends on dtype and
    the dtypes of the DataFrame columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: numpy.ndarray
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.to_numpy`](pandas.Series.to_numpy.html#pandas.Series.to_numpy "pandas.Series.to_numpy")'
  prefs: []
  type: TYPE_NORMAL
- en: Similar method for Series.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: With heterogeneous data, the lowest common type will have to be used.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: For a mix of numeric and non-numeric types, the output array will have object
    dtype.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
