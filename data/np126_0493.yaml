- en: numpy.seterrobj
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.seterrobj
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.seterrobj.html](https://numpy.org/doc/1.26/reference/generated/numpy.seterrobj.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.seterrobj.html](https://numpy.org/doc/1.26/reference/generated/numpy.seterrobj.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Set the object that defines floating-point error handling.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 设置定义浮点错误处理的对象。
- en: The error object contains all information that defines the error handling behavior
    in NumPy. [`seterrobj`](#numpy.seterrobj "numpy.seterrobj") is used internally
    by the other functions that set error handling behavior ([`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr"), [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall")).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 错误对象包含定义NumPy错误处理行为的所有信息。[`seterrobj`](#numpy.seterrobj "numpy.seterrobj")在设置错误处理行为的其他函数（[`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr")，[`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall")）中被内部使用。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**errobj**list'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**errobj** 列表'
- en: 'The error object, a list containing three elements: [internal numpy buffer
    size, error mask, error callback function].'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 错误对象，一个包含三个元素的列表：[内部NumPy缓冲区大小、错误掩码、错误回调函数]。
- en: The error mask is a single integer that holds the treatment information on all
    four floating point errors. The information for each error type is contained in
    three bits of the integer. If we print it in base 8, we can see what treatment
    is set for “invalid”, “under”, “over”, and “divide” (in that order). The printed
    string can be interpreted with
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 错误掩码是一个单个整数，它保存了所有四种浮点错误的处理信息。对于每种错误类型的信息都包含在整数的三位中。如果我们以8进制打印它，我们可以看到对于“无效”、“下溢”、“上溢”和“除以零”（按顺序）设置了什么处理方式。打印出来的字符串可以用以下方式解释：
- en: '0 : ‘ignore’'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '0: ‘忽略’'
- en: '1 : ‘warn’'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '1: ‘警告’'
- en: '2 : ‘raise’'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '2: ‘抛出’'
- en: '3 : ‘call’'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '3: ‘调用’'
- en: '4 : ‘print’'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '4: ‘打印’'
- en: '5 : ‘log’'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '5: ‘记录’'
- en: See also
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`geterrobj`](numpy.geterrobj.html#numpy.geterrobj "numpy.geterrobj"), [`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr"), [`geterr`](numpy.geterr.html#numpy.geterr "numpy.geterr"), [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall
    "numpy.seterrcall"), [`geterrcall`](numpy.geterrcall.html#numpy.geterrcall "numpy.geterrcall")'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[`geterrobj`](numpy.geterrobj.html#numpy.geterrobj "numpy.geterrobj")，[`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr")，[`geterr`](numpy.geterr.html#numpy.geterr "numpy.geterr")，[`seterrcall`](numpy.seterrcall.html#numpy.seterrcall
    "numpy.seterrcall")，[`geterrcall`](numpy.geterrcall.html#numpy.geterrcall "numpy.geterrcall")'
- en: '[`getbufsize`](numpy.getbufsize.html#numpy.getbufsize "numpy.getbufsize"),
    [`setbufsize`](numpy.setbufsize.html#numpy.setbufsize "numpy.setbufsize")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`getbufsize`](numpy.getbufsize.html#numpy.getbufsize "numpy.getbufsize")，[`setbufsize`](numpy.setbufsize.html#numpy.setbufsize
    "numpy.setbufsize")'
- en: Notes
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: For complete documentation of the types of floating-point exceptions and treatment
    options, see [`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr").
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 有关浮点异常类型和处理选项的完整文档，请参阅[`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr")。
- en: Examples
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
