- en: numpy.ma.MaskedArray.max
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.max.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.MaskedArray.max.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the maximum along a given axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**None or int or tuple of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Axis along which to operate. By default, `axis` is None and the flattened input
    is used. .. versionadded:: 1.7.0 If this is a tuple of ints, the maximum is selected
    over multiple axes, instead of a single axis or all the axes as before.'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Alternative output array in which to place the result. Must be of the same shape
    and buffer length as the expected output.
  prefs: []
  type: TYPE_NORMAL
- en: '**fill_value**scalar or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Value used to fill in the masked values. If None, use the output of maximum_fill_value().
  prefs: []
  type: TYPE_NORMAL
- en: '**keepdims**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**amax**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: New array holding the result. If `out` was specified, `out` is returned.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ma.maximum_fill_value`](numpy.ma.maximum_fill_value.html#numpy.ma.maximum_fill_value
    "numpy.ma.maximum_fill_value")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns the maximum filling value for a given datatype.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
