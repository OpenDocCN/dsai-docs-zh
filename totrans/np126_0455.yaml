- en: numpy.busday_offset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.busday_offset.html](https://numpy.org/doc/1.26/reference/generated/numpy.busday_offset.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: First adjusts the date to fall on a valid day according to the `roll` rule,
    then applies offsets to the given dates counted in valid days.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.7.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dates**array_like of datetime64[D]'
  prefs: []
  type: TYPE_NORMAL
- en: The array of dates to process.
  prefs: []
  type: TYPE_NORMAL
- en: '**offsets**array_like of int'
  prefs: []
  type: TYPE_NORMAL
- en: The array of offsets, which is broadcast with `dates`.
  prefs: []
  type: TYPE_NORMAL
- en: '**roll**{‘raise’, ‘nat’, ‘forward’, ‘following’, ‘backward’, ‘preceding’, ‘modifiedfollowing’,
    ‘modifiedpreceding’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: How to treat dates that do not fall on a valid day. The default is ‘raise’.
  prefs: []
  type: TYPE_NORMAL
- en: ‘raise’ means to raise an exception for an invalid day.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘nat’ means to return a NaT (not-a-time) for an invalid day.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘forward’ and ‘following’ mean to take the first valid day later in time.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘backward’ and ‘preceding’ mean to take the first valid day earlier in time.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘modifiedfollowing’ means to take the first valid day later in time unless it
    is across a Month boundary, in which case to take the first valid day earlier
    in time.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ‘modifiedpreceding’ means to take the first valid day earlier in time unless
    it is across a Month boundary, in which case to take the first valid day later
    in time.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '**weekmask**str or array_like of bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'A seven-element array indicating which of Monday through Sunday are valid days.
    May be specified as a length-seven list or array, like [1,1,1,1,1,0,0]; a length-seven
    string, like ‘1111100’; or a string like “Mon Tue Wed Thu Fri”, made up of 3-character
    abbreviations for weekdays, optionally separated by white space. Valid abbreviations
    are: Mon Tue Wed Thu Fri Sat Sun'
  prefs: []
  type: TYPE_NORMAL
- en: '**holidays**array_like of datetime64[D], optional'
  prefs: []
  type: TYPE_NORMAL
- en: An array of dates to consider as invalid dates. They may be specified in any
    order, and NaT (not-a-time) dates are ignored. This list is saved in a normalized
    form that is suited for fast calculations of valid days.
  prefs: []
  type: TYPE_NORMAL
- en: '**busdaycal**busdaycalendar, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A [`busdaycalendar`](numpy.busdaycalendar.html#numpy.busdaycalendar "numpy.busdaycalendar")
    object which specifies the valid days. If this parameter is provided, neither
    weekmask nor holidays may be provided.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**array of datetime64[D], optional'
  prefs: []
  type: TYPE_NORMAL
- en: If provided, this array is filled with the result.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**array of datetime64[D]'
  prefs: []
  type: TYPE_NORMAL
- en: An array with a shape from broadcasting `dates` and `offsets` together, containing
    the dates with offsets applied.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`busdaycalendar`](numpy.busdaycalendar.html#numpy.busdaycalendar "numpy.busdaycalendar")'
  prefs: []
  type: TYPE_NORMAL
- en: An object that specifies a custom set of valid days.
  prefs: []
  type: TYPE_NORMAL
- en: '[`is_busday`](numpy.is_busday.html#numpy.is_busday "numpy.is_busday")'
  prefs: []
  type: TYPE_NORMAL
- en: Returns a boolean array indicating valid days.
  prefs: []
  type: TYPE_NORMAL
- en: '[`busday_count`](numpy.busday_count.html#numpy.busday_count "numpy.busday_count")'
  prefs: []
  type: TYPE_NORMAL
- en: Counts how many valid days are in a half-open date range.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
