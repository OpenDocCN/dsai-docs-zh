- en: NumPy C-API
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/c-api/index.html](https://numpy.org/doc/1.26/reference/c-api/index.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Beware of the man who won’t be bothered with details.— *William Feather, Sr.*The
    truth is out there.— *Chris Carter, The X Files*
  prefs: []
  type: TYPE_NORMAL
- en: NumPy provides a C-API to enable users to extend the system and get access to
    the array object for use in other routines. The best way to truly understand the
    C-API is to read the source code. If you are unfamiliar with (C) source code,
    however, this can be a daunting experience at first. Be assured that the task
    becomes easier with practice, and you may be surprised at how simple the C-code
    can be to understand. Even if you don’t think you can write C-code from scratch,
    it is much easier to understand and modify already-written source code than create
    it *de novo*.
  prefs: []
  type: TYPE_NORMAL
- en: Python extensions are especially straightforward to understand because they
    all have a very similar structure. Admittedly, NumPy is not a trivial extension
    to Python, and may take a little more snooping to grasp. This is especially true
    because of the code-generation techniques, which simplify maintenance of very
    similar code, but can make the code a little less readable to beginners. Still,
    with a little persistence, the code can be opened to your understanding. It is
    my hope, that this guide to the C-API can assist in the process of becoming familiar
    with the compiled-level work that can be done with NumPy in order to squeeze that
    last bit of necessary speed out of your code.
  prefs: []
  type: TYPE_NORMAL
- en: '[Python Types and C-Structures](types-and-structures.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[New Python Types Defined](types-and-structures.html#new-python-types-defined)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other C-Structures](types-and-structures.html#other-c-structures)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[System configuration](config.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data type sizes](config.html#data-type-sizes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Platform information](config.html#platform-information)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Compiler directives](config.html#compiler-directives)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data Type API](dtype.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Enumerated Types](dtype.html#enumerated-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Defines](dtype.html#defines)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[C-type names](dtype.html#c-type-names)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Printf Formatting](dtype.html#printf-formatting)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array API](array.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array structure and data access](array.html#array-structure-and-data-access)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating arrays](array.html#creating-arrays)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Dealing with types](array.html#dealing-with-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array flags](array.html#array-flags)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array method alternative API](array.html#array-method-alternative-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Functions](array.html#functions)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Auxiliary Data With Object Semantics](array.html#auxiliary-data-with-object-semantics)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array Iterators](array.html#array-iterators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Broadcasting (multi-iterators)](array.html#broadcasting-multi-iterators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Neighborhood iterator](array.html#neighborhood-iterator)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array mapping](array.html#array-mapping)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array Scalars](array.html#array-scalars)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Data-type descriptors](array.html#data-type-descriptors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Conversion Utilities](array.html#conversion-utilities)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Miscellaneous](array.html#miscellaneous)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array Iterator API](iterator.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Array Iterator](iterator.html#array-iterator)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Iteration Example](iterator.html#iteration-example)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Multi-Iteration Example](iterator.html#multi-iteration-example)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Multi Index Tracking Example](iterator.html#multi-index-tracking-example)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Iterator Data Types](iterator.html#iterator-data-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Construction and Destruction](iterator.html#construction-and-destruction)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Functions For Iteration](iterator.html#functions-for-iteration)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Converting from Previous NumPy Iterators](iterator.html#converting-from-previous-numpy-iterators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[UFunc API](ufunc.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Constants](ufunc.html#constants)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Macros](ufunc.html#macros)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Types](ufunc.html#types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Functions](ufunc.html#functions)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Generic functions](ufunc.html#generic-functions)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Importing the API](ufunc.html#importing-the-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Generalized Universal Function API](generalized-ufuncs.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Definitions](generalized-ufuncs.html#definitions)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Details of Signature](generalized-ufuncs.html#details-of-signature)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[C-API for implementing Elementary Functions](generalized-ufuncs.html#c-api-for-implementing-elementary-functions)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NumPy core libraries](coremath.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NumPy core math library](coremath.html#numpy-core-math-library)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[C API Deprecations](deprecations.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Background](deprecations.html#background)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecation Mechanism NPY_NO_DEPRECATED_API](deprecations.html#deprecation-mechanism-npy-no-deprecated-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Memory management in NumPy](data_memory.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Historical overview](data_memory.html#historical-overview)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Configurable memory routines in NumPy (NEP 49)](data_memory.html#configurable-memory-routines-in-numpy-nep-49)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What happens when deallocating if there is no policy set](data_memory.html#what-happens-when-deallocating-if-there-is-no-policy-set)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Example of memory tracing with `np.lib.tracemalloc_domain`](data_memory.html#example-of-memory-tracing-with-np-lib-tracemalloc-domain)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
