- en: scipy.optimize.check_grad
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.check_grad
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.check_grad.html#scipy.optimize.check_grad](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.check_grad.html#scipy.optimize.check_grad)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.check_grad.html#scipy.optimize.check_grad](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.check_grad.html#scipy.optimize.check_grad)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Check the correctness of a gradient function by comparing it against a (forward)
    finite-difference approximation of the gradient.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将其与梯度的（前向）有限差逼近比较来检查梯度函数的正确性。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**func**callable `func(x0, *args)`'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**func**callable `func(x0, *args)`'
- en: Function whose derivative is to be checked.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查其导数的函数。
- en: '**grad**callable `grad(x0, *args)`'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**grad**callable `grad(x0, *args)`'
- en: Jacobian of *func*.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*func*的雅可比矩阵。'
- en: '**x0**ndarray'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**x0**ndarray'
- en: Points to check *grad* against forward difference approximation of grad using
    *func*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 *grad* 是否与使用 *func* 的前向差分逼近的梯度一致的点。
- en: '**args***args, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**args***args, optional'
- en: Extra arguments passed to *func* and *grad*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给 *func* 和 *grad* 的额外参数。
- en: '**epsilon**float, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**epsilon**float, optional'
- en: Step size used for the finite difference approximation. It defaults to `sqrt(np.finfo(float).eps)`,
    which is approximately 1.49e-08.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 用于有限差逼近的步长大小。默认为 `sqrt(np.finfo(float).eps)`，约为 1.49e-08。
- en: '**direction**str, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**direction**str, optional'
- en: If set to `'random'`, then gradients along a random vector are used to check
    *grad* against forward difference approximation using *func*. By default it is
    `'all'`, in which case, all the one hot direction vectors are considered to check
    *grad*. If *func* is a vector valued function then only `'all'` can be used.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设为 `'random'`，则使用沿随机向量的梯度来检查 *grad* 是否与使用 *func* 的前向差分逼近一致。默认情况下为 `'all'`，此时考虑所有的单热方向向量以检查
    *grad*。如果 *func* 是矢量值函数，则只能使用 `'all'`。
- en: '**seed**{None, int, [`numpy.random.Generator`](https://numpy.org/devdocs/reference/random/generator.html#numpy.random.Generator
    "(in NumPy v2.0.dev0)"), [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)")}, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**seed**{None, int, [`numpy.random.Generator`](https://numpy.org/devdocs/reference/random/generator.html#numpy.random.Generator
    "(in NumPy v2.0.dev0)"), [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)")}, optional'
- en: If *seed* is None (or *np.random*), the [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)") singleton is used. If *seed* is an int, a new `RandomState`
    instance is used, seeded with *seed*. If *seed* is already a `Generator` or `RandomState`
    instance then that instance is used. Specify *seed* for reproducing the return
    value from this function. The random numbers generated with this seed affect the
    random vector along which gradients are computed to check `grad`. Note that *seed*
    is only used when *direction* argument is set to *‘random’*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 *seed* 为 None（或 *np.random*），则使用[`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)") 单例。如果 *seed* 是整数，则使用新的 `RandomState` 实例，并以 *seed* 为种子。如果
    *seed* 已经是 `Generator` 或 `RandomState` 实例，则使用该实例。指定 *seed* 可以重现此函数的返回值。使用此种子生成的随机数影响计算梯度的随机向量。注意当
    *direction* 参数设置为 *‘random’* 时才使用 *seed*。
- en: 'Returns:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**err**float'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**err**float'
- en: The square root of the sum of squares (i.e., the 2-norm) of the difference between
    `grad(x0, *args)` and the finite difference approximation of *grad* using func
    at the points *x0*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 两个向量之间差的平方和的平方根（即 2-范数），即 `grad(x0, *args)` 和在点 *x0* 使用 *func* 的有限差逼近 *grad*
    的差异。
- en: See also
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`approx_fprime`](scipy.optimize.approx_fprime.html#scipy.optimize.approx_fprime
    "scipy.optimize.approx_fprime")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`approx_fprime`](scipy.optimize.approx_fprime.html#scipy.optimize.approx_fprime
    "scipy.optimize.approx_fprime")'
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
