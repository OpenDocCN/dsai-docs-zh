["```py\nscipy.linalg.dft(n, scale=None)\n```", "```py\n>>> import numpy as np\n>>> from scipy.linalg import dft\n>>> np.set_printoptions(precision=2, suppress=True)  # for compact output\n>>> m = dft(5)\n>>> m\narray([[ 1\\.  +0.j  ,  1\\.  +0.j  ,  1\\.  +0.j  ,  1\\.  +0.j  ,  1\\.  +0.j  ],\n [ 1\\.  +0.j  ,  0.31-0.95j, -0.81-0.59j, -0.81+0.59j,  0.31+0.95j],\n [ 1\\.  +0.j  , -0.81-0.59j,  0.31+0.95j,  0.31-0.95j, -0.81+0.59j],\n [ 1\\.  +0.j  , -0.81+0.59j,  0.31-0.95j,  0.31+0.95j, -0.81-0.59j],\n [ 1\\.  +0.j  ,  0.31+0.95j, -0.81+0.59j, -0.81-0.59j,  0.31-0.95j]])\n>>> x = np.array([1, 2, 3, 0, 3])\n>>> m @ x  # Compute the DFT of x\narray([ 9\\.  +0.j  ,  0.12-0.81j, -2.12+3.44j, -2.12-3.44j,  0.12+0.81j]) \n```", "```py\n>>> from scipy.fft import fft\n>>> fft(x)     # Same result as m @ x\narray([ 9\\.  +0.j  ,  0.12-0.81j, -2.12+3.44j, -2.12-3.44j,  0.12+0.81j]) \n```"]