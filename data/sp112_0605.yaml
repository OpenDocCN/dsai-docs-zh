- en: scipy.signal.lsim
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.lsim
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lsim.html#scipy.signal.lsim](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lsim.html#scipy.signal.lsim)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lsim.html#scipy.signal.lsim](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.lsim.html#scipy.signal.lsim)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Simulate output of a continuous-time linear system.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟连续时间线性系统的输出。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**system**an instance of the LTI class or a tuple describing the system.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**system**LTI类的实例或描述系统的元组。'
- en: 'The following gives the number of elements in the tuple and the interpretation:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 下面给出元组中元素的数量和解释：
- en: '1: (instance of [`lti`](scipy.signal.lti.html#scipy.signal.lti "scipy.signal.lti"))'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1：（[`lti`](scipy.signal.lti.html#scipy.signal.lti "scipy.signal.lti")的实例）
- en: '2: (num, den)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2：（num，den）
- en: '3: (zeros, poles, gain)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3：（zeros，poles，gain）
- en: '4: (A, B, C, D)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4：（A，B，C，D）
- en: '**U**array_like'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**U**array_like'
- en: An input array describing the input at each time *T* (interpolation is assumed
    between given times). If there are multiple inputs, then each column of the rank-2
    array represents an input. If U = 0 or None, a zero input is used.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 描述每个时间*T*的输入的输入数组（假设在给定时间之间进行插值）。如果有多个输入，则二维数组的每列表示一个输入。如果U = 0或None，则使用零输入。
- en: '**T**array_like'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**T**array_like'
- en: The time steps at which the input is defined and at which the output is desired.
    Must be nonnegative, increasing, and equally spaced.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 定义输入和期望输出的时间步长。必须是非负、递增且等间距的。
- en: '**X0**array_like, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**X0**array_like，可选'
- en: The initial conditions on the state vector (zero by default).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 状态向量的初始条件（默认为零）。
- en: '**interp**bool, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**interp**布尔值，可选'
- en: Whether to use linear (True, the default) or zero-order-hold (False) interpolation
    for the input array.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 是否使用线性（True，默认）或零阶保持（False）插值输入数组。
- en: 'Returns:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**T**1D ndarray'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**T**1D ndarray'
- en: Time values for the output.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的时间值。
- en: '**yout**1D ndarray'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**yout**1D ndarray'
- en: System response.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 系统响应。
- en: '**xout**ndarray'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**xout**ndarray'
- en: Time evolution of the state vector.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 状态向量的时间演变。
- en: Notes
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: If (num, den) is passed in for `system`, coefficients for both the numerator
    and denominator should be specified in descending exponent order (e.g. `s^2 +
    3s + 5` would be represented as `[1, 3, 5]`).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`system`传入`(num, den)`，则分子和分母系数应按降幂顺序指定（例如，`s^2 + 3s + 5`应表示为`[1, 3, 5]`）。
- en: Examples
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: We’ll use [`lsim`](#scipy.signal.lsim "scipy.signal.lsim") to simulate an analog
    Bessel filter applied to a signal.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用[`lsim`](#scipy.signal.lsim "scipy.signal.lsim")来模拟应用于信号的模拟Bessel滤波器。
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Create a low-pass Bessel filter with a cutoff of 12 Hz.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个12 Hz截止频率的低通Bessel滤波器。
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Generate data to which the filter is applied.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 生成要应用滤波器的数据。
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The input signal is the sum of three sinusoidal curves, with frequencies 4 Hz,
    40 Hz, and 80 Hz. The filter should mostly eliminate the 40 Hz and 80 Hz components,
    leaving just the 4 Hz signal.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 输入信号是三个正弦曲线的和，频率分别为4 Hz、40 Hz和80 Hz。滤波器应大部分消除40 Hz和80 Hz分量，只留下4 Hz信号。
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Simulate the filter with [`lsim`](#scipy.signal.lsim "scipy.signal.lsim").
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`lsim`](#scipy.signal.lsim "scipy.signal.lsim")模拟滤波器。
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Plot the result.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制结果。
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![../../_images/scipy-signal-lsim-1_00_00.png](../Images/028debdf7654e2f7ae0e2f380f0a7e79.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-lsim-1_00_00.png](../Images/028debdf7654e2f7ae0e2f380f0a7e79.png)'
- en: In a second example, we simulate a double integrator `y'' = u`, with a constant
    input `u = 1`. We’ll use the state space representation of the integrator.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个示例中，我们模拟双积分器`y'' = u`，具有恒定输入`u = 1`。我们将使用积分器的状态空间表示。
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '*t* and *u* define the time and input signal for the system to be simulated.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*t*和*u*定义要模拟的系统的时间和输入信号。'
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Compute the simulation, and then plot *y*. As expected, the plot shows the curve
    `y = 0.5*t**2`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 计算仿真，然后绘制*y*。如预期，图形显示曲线`y = 0.5*t**2`。
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![../../_images/scipy-signal-lsim-1_01_00.png](../Images/f3ed4463fc6f4ecd59913551392b5233.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-lsim-1_01_00.png](../Images/f3ed4463fc6f4ecd59913551392b5233.png)'
