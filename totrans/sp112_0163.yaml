- en: scipy.interpolate.barycentric_interpolate
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.interpolate.barycentric_interpolate
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.barycentric_interpolate.html#scipy.interpolate.barycentric_interpolate](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.barycentric_interpolate.html#scipy.interpolate.barycentric_interpolate)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.barycentric_interpolate.html#scipy.interpolate.barycentric_interpolate](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.barycentric_interpolate.html#scipy.interpolate.barycentric_interpolate)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Convenience function for polynomial interpolation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式插值的便捷函数。
- en: Constructs a polynomial that passes through a given set of points, then evaluates
    the polynomial. For reasons of numerical stability, this function does not compute
    the coefficients of the polynomial.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个通过给定点集的多项式，然后评估多项式。由于数值稳定性的原因，此函数不计算多项式的系数。
- en: This function uses a “barycentric interpolation” method that treats the problem
    as a special case of rational function interpolation. This algorithm is quite
    stable, numerically, but even in a world of exact computation, unless the *x*
    coordinates are chosen very carefully - Chebyshev zeros (e.g., cos(i*pi/n)) are
    a good choice - polynomial interpolation itself is a very ill-conditioned process
    due to the Runge phenomenon.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数使用“重心插值”方法，将问题视为有理函数插值的特殊情况。这种算法在数值上非常稳定，但即使在精确计算的世界中，除非非常谨慎地选择*x*坐标（例如，切比雪夫零点（例如，cos(i*pi/n)）是一个很好的选择），多项式插值本身也是一个由于Runge现象而非常病态的过程。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**xi**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**xi**array_like'
- en: 1-D array of x coordinates of the points the polynomial should pass through
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式应通过的点的x坐标的1-D数组
- en: '**yi**array_like'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**yi**array_like'
- en: The y coordinates of the points the polynomial should pass through.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式应通过的点的y坐标。
- en: '**x**scalar or array_like'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**标量 或 array_like'
- en: Point or points at which to evaluate the interpolant.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 评估插值函数的点或点。
- en: '**der**int or list or None, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**der**int 或 列表 或 None, 可选'
- en: How many derivatives to evaluate, or None for all potentially nonzero derivatives
    (that is, a number equal to the number of points), or a list of derivatives to
    evaluate. This number includes the function value as the ‘0th’ derivative.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要评估的导数数量，或者对所有可能非零导数评估（即与点数相等的数量），或者要评估的导数列表。这个数字包括函数值作为“0th”导数。
- en: '**axis**int, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int, 可选'
- en: Axis in the *yi* array corresponding to the x-coordinate values.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 与*yi*数组中的轴相对应的x坐标值。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**scalar or array_like'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**标量 或 array_like'
- en: Interpolated values. Shape is determined by replacing the interpolation axis
    in the original array with the shape of *x*.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 插值值。形状由用*x*替换原始数组中的插值轴决定。
- en: See also
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`BarycentricInterpolator`](scipy.interpolate.BarycentricInterpolator.html#scipy.interpolate.BarycentricInterpolator
    "scipy.interpolate.BarycentricInterpolator")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`BarycentricInterpolator`](scipy.interpolate.BarycentricInterpolator.html#scipy.interpolate.BarycentricInterpolator
    "scipy.interpolate.BarycentricInterpolator")'
- en: Barycentric interpolator
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 重心插值器
- en: Notes
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注解
- en: Construction of the interpolation weights is a relatively slow process. If you
    want to call this many times with the same xi (but possibly varying yi or x) you
    should use the class [`BarycentricInterpolator`](scipy.interpolate.BarycentricInterpolator.html#scipy.interpolate.BarycentricInterpolator
    "scipy.interpolate.BarycentricInterpolator"). This is what this function uses
    internally.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 插值权重的构造是一个相对较慢的过程。如果您希望多次使用相同的xi调用此函数（但可能会变化yi或x），您应该使用类[`BarycentricInterpolator`](scipy.interpolate.BarycentricInterpolator.html#scipy.interpolate.BarycentricInterpolator
    "scipy.interpolate.BarycentricInterpolator")。这是此函数在内部使用的内容。
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'We can interpolate 2D observed data using barycentric interpolation:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用重心插值法对2D观察数据进行插值：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![../../_images/scipy-interpolate-barycentric_interpolate-1.png](../Images/9e1425b4aed26d1b422fd46aef23ce07.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-interpolate-barycentric_interpolate-1.png](../Images/9e1425b4aed26d1b422fd46aef23ce07.png)'
