- en: scipy.sparse.coo_array
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.sparse.coo_array
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.html#scipy.sparse.coo_array](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.html#scipy.sparse.coo_array)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.html#scipy.sparse.coo_array](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.html#scipy.sparse.coo_array)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A sparse array in COOrdinate format.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: COO格式的稀疏数组。
- en: Also known as the ‘ijv’ or ‘triplet’ format.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 也称为‘ijv’或‘三元组’格式。
- en: 'This can be instantiated in several ways:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过多种方式实例化：
- en: coo_array(D)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: coo_array(D)
- en: where D is a 2-D ndarray
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 其中D是一个二维ndarray
- en: coo_array(S)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: coo_array(S)
- en: with another sparse array or matrix S (equivalent to S.tocoo())
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用另一个稀疏数组或矩阵S（等同于S.tocoo()）
- en: coo_array((M, N), [dtype])
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: coo_array((M, N), [dtype])
- en: to construct an empty array with shape (M, N) dtype is optional, defaulting
    to dtype=’d’.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 构造一个形状为(M, N)的空数组，dtype是可选的，默认为dtype='d'。
- en: coo_array((data, (i, j)), [shape=(M, N)])
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: coo_array((data, (i, j)), [shape=(M, N)])
- en: 'to construct from three arrays:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 通过三个数组构造：
- en: data[:] the entries of the array, in any order
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: data[:] 数组条目，任意顺序
- en: i[:] the row indices of the array entries
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: i[:] 数组条目的行索引
- en: j[:] the column indices of the array entries
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: j[:] 数组条目的列索引
- en: Where `A[i[k], j[k]] = data[k]`. When shape is not specified, it is inferred
    from the index arrays
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`A[i[k], j[k]] = data[k]`。当未指定形状时，将从索引数组中推断出形状
- en: Notes
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: 'Sparse arrays can be used in arithmetic operations: they support addition,
    subtraction, multiplication, division, and matrix power.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏数组可用于算术运算：它们支持加法、减法、乘法、除法和矩阵幂。
- en: Advantages of the COO format
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: COO格式的优势
- en: facilitates fast conversion among sparse formats
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有助于在稀疏格式之间快速转换
- en: permits duplicate entries (see example)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许重复条目（见示例）
- en: very fast conversion to and from CSR/CSC formats
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常快速地转换为CSR/CSC格式
- en: Disadvantages of the COO format
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: COO格式的缺点
- en: 'does not directly support:'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不直接支持：
- en: arithmetic operations
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 算术运算
- en: slicing
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 切片
- en: Intended Usage
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 预期用法
- en: COO is a fast format for constructing sparse arrays
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: COO是一种快速构建稀疏数组的格式
- en: Once a COO array has been constructed, convert to CSR or CSC format for fast
    arithmetic and matrix vector operations
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦构造了COO数组，可以转换为CSR或CSC格式进行快速算术和矩阵向量操作
- en: By default when converting to CSR or CSC format, duplicate (i,j) entries will
    be summed together. This facilitates efficient construction of finite element
    matrices and the like. (see example)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，转换为CSR或CSC格式时，重复的(i, j)条目将被合并在一起。这有助于高效构建有限元矩阵等。（见示例）
- en: Canonical format
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 规范格式
- en: Entries and indices sorted by row, then column.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条目和索引按行、然后列排序。
- en: There are no duplicate entries (i.e. duplicate (i,j) locations)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有重复条目（即没有重复的(i, j)位置）
- en: Data arrays MAY have explicit zeros.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据数组可能包含显式零值。
- en: Examples
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Attributes:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '**dtype**dtype'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据类型**dtype'
- en: Data type of the array
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的数据类型
- en: '[`shape`](scipy.sparse.coo_array.shape.html#scipy.sparse.coo_array.shape "scipy.sparse.coo_array.shape")2-tuple'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[`shape`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.shape.html#scipy.sparse.coo_array.shape
    "scipy.sparse.coo_array.shape")2元组'
- en: The shape of the array.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的形状。
- en: '**ndim**int'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**维度**整数'
- en: Number of dimensions (this is always 2)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 维度数量（始终为2）
- en: '[`nnz`](scipy.sparse.coo_array.nnz.html#scipy.sparse.coo_array.nnz "scipy.sparse.coo_array.nnz")'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nnz`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.nnz.html#scipy.sparse.coo_array.nnz
    "scipy.sparse.coo_array.nnz")'
- en: Number of stored values, including explicit zeros.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 存储值的数量，包括显式零值。
- en: '[`size`](scipy.sparse.coo_array.size.html#scipy.sparse.coo_array.size "scipy.sparse.coo_array.size")'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[`size`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.size.html#scipy.sparse.coo_array.size
    "scipy.sparse.coo_array.size")'
- en: Number of stored values.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 存储值的数量。
- en: '**data**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据**'
- en: COO format data array of the array
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的COO格式数据数组
- en: '**row**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**行**'
- en: COO format row index array of the array
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: COO格式数组的行索引数组
- en: '**col**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**列**'
- en: COO format column index array of the array
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的COO格式列索引数组
- en: '**has_canonical_format**bool'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**具有规范格式**布尔值'
- en: Whether the matrix has sorted indices and no duplicates
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵是否具有排序索引且无重复
- en: '[`format`](scipy.sparse.coo_array.format.html#scipy.sparse.coo_array.format
    "scipy.sparse.coo_array.format")'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[`format`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.format.html#scipy.sparse.coo_array.format
    "scipy.sparse.coo_array.format")'
- en: Format string for matrix.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵的格式字符串。
- en: '[`T`](scipy.sparse.coo_array.T.html#scipy.sparse.coo_array.T "scipy.sparse.coo_array.T")'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[`T`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.T.html#scipy.sparse.coo_array.T
    "scipy.sparse.coo_array.T")'
- en: Transpose.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 转置。
- en: Methods
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__len__`](scipy.sparse.coo_array.__len__.html#scipy.sparse.coo_array.__len__
    "scipy.sparse.coo_array.__len__")() |  |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`__len__`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.sparse.coo_array.__len__.html#scipy.sparse.coo_array.__len__
    "scipy.sparse.coo_array.__len__")() |  |'
- en: '| [`arcsin`](scipy.sparse.coo_array.arcsin.html#scipy.sparse.coo_array.arcsin
    "scipy.sparse.coo_array.arcsin")() | Element-wise arcsin. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`arcsin`](https://scipy.org/scipy.sparse.coo_array.arcsin "scipy.sparse.coo_array.arcsin")()
    | 逐元素的反正弦。 |'
- en: '| [`arcsinh`](scipy.sparse.coo_array.arcsinh.html#scipy.sparse.coo_array.arcsinh
    "scipy.sparse.coo_array.arcsinh")() | Element-wise arcsinh. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`arcsinh`](https://scipy.org/scipy.sparse.coo_array.arcsinh "scipy.sparse.coo_array.arcsinh")()
    | 逐元素的反双曲正弦。 |'
- en: '| [`arctan`](scipy.sparse.coo_array.arctan.html#scipy.sparse.coo_array.arctan
    "scipy.sparse.coo_array.arctan")() | Element-wise arctan. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`arctan`](https://scipy.org/scipy.sparse.coo_array.arctan "scipy.sparse.coo_array.arctan")()
    | 逐元素的反正切函数。 |'
- en: '| [`arctanh`](scipy.sparse.coo_array.arctanh.html#scipy.sparse.coo_array.arctanh
    "scipy.sparse.coo_array.arctanh")() | Element-wise arctanh. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`arctanh`](https://scipy.org/scipy.sparse.coo_array.arctanh "scipy.sparse.coo_array.arctanh")()
    | 逐元素的反双曲正切。 |'
- en: '| [`argmax`](scipy.sparse.coo_array.argmax.html#scipy.sparse.coo_array.argmax
    "scipy.sparse.coo_array.argmax")([axis, out]) | Return indices of maximum elements
    along an axis. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`argmax`](https://scipy.org/scipy.sparse.coo_array.argmax "scipy.sparse.coo_array.argmax")([axis, out])
    | 返回沿轴的最大元素的索引。 |'
- en: '| [`argmin`](scipy.sparse.coo_array.argmin.html#scipy.sparse.coo_array.argmin
    "scipy.sparse.coo_array.argmin")([axis, out]) | Return indices of minimum elements
    along an axis. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`argmin`](https://scipy.org/scipy.sparse.coo_array.argmin "scipy.sparse.coo_array.argmin")([axis, out])
    | 返回沿轴的最小元素的索引。 |'
- en: '| [`asformat`](scipy.sparse.coo_array.asformat.html#scipy.sparse.coo_array.asformat
    "scipy.sparse.coo_array.asformat")(format[, copy]) | Return this array/matrix
    in the passed format. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`asformat`](https://scipy.org/scipy.sparse.coo_array.asformat "scipy.sparse.coo_array.asformat")(format[, copy])
    | 返回以指定格式的数组/矩阵。 |'
- en: '| [`asfptype`](scipy.sparse.coo_array.asfptype.html#scipy.sparse.coo_array.asfptype
    "scipy.sparse.coo_array.asfptype")() | Upcast array/matrix to a floating point
    format (if necessary) |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`asfptype`](https://scipy.org/scipy.sparse.coo_array.asfptype "scipy.sparse.coo_array.asfptype")()
    | 将数组/矩阵提升到浮点数格式（如有必要）。 |'
- en: '| [`astype`](scipy.sparse.coo_array.astype.html#scipy.sparse.coo_array.astype
    "scipy.sparse.coo_array.astype")(dtype[, casting, copy]) | Cast the array/matrix
    elements to a specified type. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`astype`](https://scipy.org/scipy.sparse.coo_array.astype "scipy.sparse.coo_array.astype")(dtype[, casting, copy])
    | 将数组/矩阵元素转换为指定类型。 |'
- en: '| [`ceil`](scipy.sparse.coo_array.ceil.html#scipy.sparse.coo_array.ceil "scipy.sparse.coo_array.ceil")()
    | Element-wise ceil. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`ceil`](https://scipy.org/scipy.sparse.coo_array.ceil "scipy.sparse.coo_array.ceil")()
    | 逐元素的向上取整。 |'
- en: '| [`conj`](scipy.sparse.coo_array.conj.html#scipy.sparse.coo_array.conj "scipy.sparse.coo_array.conj")([copy])
    | Element-wise complex conjugation. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`conj`](https://scipy.org/scipy.sparse.coo_array.conj "scipy.sparse.coo_array.conj")([copy])
    | 逐元素的复共轭。 |'
- en: '| [`conjugate`](scipy.sparse.coo_array.conjugate.html#scipy.sparse.coo_array.conjugate
    "scipy.sparse.coo_array.conjugate")([copy]) | Element-wise complex conjugation.
    |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`conjugate`](https://scipy.org/scipy.sparse.coo_array.conjugate "scipy.sparse.coo_array.conjugate")([copy])
    | 逐元素的复共轭。 |'
- en: '| [`copy`](scipy.sparse.coo_array.copy.html#scipy.sparse.coo_array.copy "scipy.sparse.coo_array.copy")()
    | Returns a copy of this array/matrix. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`copy`](https://scipy.org/scipy.sparse.coo_array.copy "scipy.sparse.coo_array.copy")()
    | 返回此数组/矩阵的副本。 |'
- en: '| [`count_nonzero`](scipy.sparse.coo_array.count_nonzero.html#scipy.sparse.coo_array.count_nonzero
    "scipy.sparse.coo_array.count_nonzero")() | Number of non-zero entries, equivalent
    to |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`count_nonzero`](https://scipy.org/scipy.sparse.coo_array.count_nonzero
    "scipy.sparse.coo_array.count_nonzero")() | 非零元素的数量，等同于 |'
- en: '| [`deg2rad`](scipy.sparse.coo_array.deg2rad.html#scipy.sparse.coo_array.deg2rad
    "scipy.sparse.coo_array.deg2rad")() | Element-wise deg2rad. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`deg2rad`](https://scipy.org/scipy.sparse.coo_array.deg2rad "scipy.sparse.coo_array.deg2rad")()
    | 逐元素的角度转弧度。 |'
- en: '| [`diagonal`](scipy.sparse.coo_array.diagonal.html#scipy.sparse.coo_array.diagonal
    "scipy.sparse.coo_array.diagonal")([k]) | Returns the kth diagonal of the array/matrix.
    |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`diagonal`](https://scipy.org/scipy.sparse.coo_array.diagonal "scipy.sparse.coo_array.diagonal")([k])
    | 返回数组/矩阵的第k条对角线。 |'
- en: '| [`dot`](scipy.sparse.coo_array.dot.html#scipy.sparse.coo_array.dot "scipy.sparse.coo_array.dot")(other)
    | Ordinary dot product |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`dot`](https://scipy.org/scipy.sparse.coo_array.dot "scipy.sparse.coo_array.dot")(other)
    | 普通的点积。 |'
- en: '| [`eliminate_zeros`](scipy.sparse.coo_array.eliminate_zeros.html#scipy.sparse.coo_array.eliminate_zeros
    "scipy.sparse.coo_array.eliminate_zeros")() | Remove zero entries from the array/matrix
    |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`eliminate_zeros`](https://scipy.org/scipy.sparse.coo_array.eliminate_zeros
    "scipy.sparse.coo_array.eliminate_zeros")() | 移除数组/矩阵中的零元素。 |'
- en: '| [`expm1`](scipy.sparse.coo_array.expm1.html#scipy.sparse.coo_array.expm1
    "scipy.sparse.coo_array.expm1")() | Element-wise expm1. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '[`expm1`](scipy.sparse.coo_array.expm1.html#scipy.sparse.coo_array.expm1 "scipy.sparse.coo_array.expm1")()
    | 按元素计算 expm1。'
- en: '| [`floor`](scipy.sparse.coo_array.floor.html#scipy.sparse.coo_array.floor
    "scipy.sparse.coo_array.floor")() | Element-wise floor. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '[`floor`](scipy.sparse.coo_array.floor.html#scipy.sparse.coo_array.floor "scipy.sparse.coo_array.floor")()
    | 按元素向下取整。'
- en: '| [`getH`](scipy.sparse.coo_array.getH.html#scipy.sparse.coo_array.getH "scipy.sparse.coo_array.getH")()
    | Return the Hermitian transpose of this array/matrix. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '[`getH`](scipy.sparse.coo_array.getH.html#scipy.sparse.coo_array.getH "scipy.sparse.coo_array.getH")()
    | 返回此数组/矩阵的共轭转置。'
- en: '| [`get_shape`](scipy.sparse.coo_array.get_shape.html#scipy.sparse.coo_array.get_shape
    "scipy.sparse.coo_array.get_shape")() | Get shape of a sparse array/matrix. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '[`get_shape`](scipy.sparse.coo_array.get_shape.html#scipy.sparse.coo_array.get_shape
    "scipy.sparse.coo_array.get_shape")() | 获取稀疏数组/矩阵的形状。'
- en: '| [`getcol`](scipy.sparse.coo_array.getcol.html#scipy.sparse.coo_array.getcol
    "scipy.sparse.coo_array.getcol")(j) | Returns a copy of column j of the array/matrix,
    as an (m x 1) sparse array/matrix (column vector). |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '[`getcol`](scipy.sparse.coo_array.getcol.html#scipy.sparse.coo_array.getcol
    "scipy.sparse.coo_array.getcol")(j) | 返回数组/矩阵的第 j 列的副本，作为一个 (m x 1) 的稀疏数组/矩阵（列向量）。'
- en: '| [`getformat`](scipy.sparse.coo_array.getformat.html#scipy.sparse.coo_array.getformat
    "scipy.sparse.coo_array.getformat")() | Sparse array/matrix storage format. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '[`getformat`](scipy.sparse.coo_array.getformat.html#scipy.sparse.coo_array.getformat
    "scipy.sparse.coo_array.getformat")() | 稀疏数组/矩阵的存储格式。'
- en: '| [`getmaxprint`](scipy.sparse.coo_array.getmaxprint.html#scipy.sparse.coo_array.getmaxprint
    "scipy.sparse.coo_array.getmaxprint")() | Maximum number of elements to display
    when printed. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '[`getmaxprint`](scipy.sparse.coo_array.getmaxprint.html#scipy.sparse.coo_array.getmaxprint
    "scipy.sparse.coo_array.getmaxprint")() | 打印时显示的最大元素数量。'
- en: '| [`getnnz`](scipy.sparse.coo_array.getnnz.html#scipy.sparse.coo_array.getnnz
    "scipy.sparse.coo_array.getnnz")([axis]) | Number of stored values, including
    explicit zeros. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '[`getnnz`](scipy.sparse.coo_array.getnnz.html#scipy.sparse.coo_array.getnnz
    "scipy.sparse.coo_array.getnnz")([axis]) | 存储值的数量，包括显式的零。'
- en: '| [`getrow`](scipy.sparse.coo_array.getrow.html#scipy.sparse.coo_array.getrow
    "scipy.sparse.coo_array.getrow")(i) | Returns a copy of row i of the array/matrix,
    as a (1 x n) sparse array/matrix (row vector). |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '[`getrow`](scipy.sparse.coo_array.getrow.html#scipy.sparse.coo_array.getrow
    "scipy.sparse.coo_array.getrow")(i) | 返回数组/矩阵的第 i 行的副本，作为一个 (1 x n) 的稀疏数组/矩阵（行向量）。'
- en: '| [`log1p`](scipy.sparse.coo_array.log1p.html#scipy.sparse.coo_array.log1p
    "scipy.sparse.coo_array.log1p")() | Element-wise log1p. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '[`log1p`](scipy.sparse.coo_array.log1p.html#scipy.sparse.coo_array.log1p "scipy.sparse.coo_array.log1p")()
    | 按元素计算 log1p。'
- en: '| [`max`](scipy.sparse.coo_array.max.html#scipy.sparse.coo_array.max "scipy.sparse.coo_array.max")([axis, out])
    | Return the maximum of the array/matrix or maximum along an axis. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '[`max`](scipy.sparse.coo_array.max.html#scipy.sparse.coo_array.max "scipy.sparse.coo_array.max")([axis, out])
    | 返回数组/矩阵的最大值或沿轴的最大值。'
- en: '| [`maximum`](scipy.sparse.coo_array.maximum.html#scipy.sparse.coo_array.maximum
    "scipy.sparse.coo_array.maximum")(other) | Element-wise maximum between this and
    another array/matrix. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '[`maximum`](scipy.sparse.coo_array.maximum.html#scipy.sparse.coo_array.maximum
    "scipy.sparse.coo_array.maximum")(other) | 在此数组/矩阵与另一个数组/矩阵之间按元素取最大值。'
- en: '| [`mean`](scipy.sparse.coo_array.mean.html#scipy.sparse.coo_array.mean "scipy.sparse.coo_array.mean")([axis, dtype, out])
    | Compute the arithmetic mean along the specified axis. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '[`mean`](scipy.sparse.coo_array.mean.html#scipy.sparse.coo_array.mean "scipy.sparse.coo_array.mean")([axis, dtype, out])
    | 沿指定轴计算算术平均值。'
- en: '| [`min`](scipy.sparse.coo_array.min.html#scipy.sparse.coo_array.min "scipy.sparse.coo_array.min")([axis, out])
    | Return the minimum of the array/matrix or maximum along an axis. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '[`min`](scipy.sparse.coo_array.min.html#scipy.sparse.coo_array.min "scipy.sparse.coo_array.min")([axis, out])
    | 返回数组/矩阵的最小值或沿轴的最小值。'
- en: '| [`minimum`](scipy.sparse.coo_array.minimum.html#scipy.sparse.coo_array.minimum
    "scipy.sparse.coo_array.minimum")(other) | Element-wise minimum between this and
    another array/matrix. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '[`minimum`](scipy.sparse.coo_array.minimum.html#scipy.sparse.coo_array.minimum
    "scipy.sparse.coo_array.minimum")(other) | 在此数组/矩阵与另一个数组/矩阵之间按元素取最小值。'
- en: '| [`multiply`](scipy.sparse.coo_array.multiply.html#scipy.sparse.coo_array.multiply
    "scipy.sparse.coo_array.multiply")(other) | Point-wise multiplication by another
    array/matrix. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '[`multiply`](scipy.sparse.coo_array.multiply.html#scipy.sparse.coo_array.multiply
    "scipy.sparse.coo_array.multiply")(other) | 与另一个数组/矩阵的逐点乘积。'
- en: '| [`nanmax`](scipy.sparse.coo_array.nanmax.html#scipy.sparse.coo_array.nanmax
    "scipy.sparse.coo_array.nanmax")([axis, out]) | Return the maximum of the array/matrix
    or maximum along an axis, ignoring any NaNs. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '[`nanmax`](scipy.sparse.coo_array.nanmax.html#scipy.sparse.coo_array.nanmax
    "scipy.sparse.coo_array.nanmax")([axis, out]) | 返回数组/矩阵的最大值或沿轴的最大值，忽略任何 NaN。'
- en: '| [`nanmin`](scipy.sparse.coo_array.nanmin.html#scipy.sparse.coo_array.nanmin
    "scipy.sparse.coo_array.nanmin")([axis, out]) | Return the minimum of the array/matrix
    or minimum along an axis, ignoring any NaNs. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`nanmin`](https://scipy.org/scipy.sparse.coo_array.nanmin.html#scipy.sparse.coo_array.nanmin
    "scipy.sparse.coo_array.nanmin")([axis, out]) | 返回数组/矩阵的最小值，忽略 NaN 值。可以沿着某个轴计算最小值。
    |'
- en: '| [`nonzero`](scipy.sparse.coo_array.nonzero.html#scipy.sparse.coo_array.nonzero
    "scipy.sparse.coo_array.nonzero")() | Nonzero indices of the array/matrix. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`nonzero`](https://scipy.org/scipy.sparse.coo_array.nonzero.html#scipy.sparse.coo_array.nonzero
    "scipy.sparse.coo_array.nonzero")() | 返回数组/矩阵中非零元素的索引。 |'
- en: '| [`power`](scipy.sparse.coo_array.power.html#scipy.sparse.coo_array.power
    "scipy.sparse.coo_array.power")(n[, dtype]) | This function performs element-wise
    power. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`power`](https://scipy.org/scipy.sparse.coo_array.power.html#scipy.sparse.coo_array.power
    "scipy.sparse.coo_array.power")(n[, dtype]) | 对数组元素进行逐元素求幂运算。 |'
- en: '| [`rad2deg`](scipy.sparse.coo_array.rad2deg.html#scipy.sparse.coo_array.rad2deg
    "scipy.sparse.coo_array.rad2deg")() | Element-wise rad2deg. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`rad2deg`](https://scipy.org/scipy.sparse.coo_array.rad2deg.html#scipy.sparse.coo_array.rad2deg
    "scipy.sparse.coo_array.rad2deg")() | 逐元素将弧度转换为角度。 |'
- en: '| [`reshape`](scipy.sparse.coo_array.reshape.html#scipy.sparse.coo_array.reshape
    "scipy.sparse.coo_array.reshape")(self, shape[, order, copy]) | Gives a new shape
    to a sparse array/matrix without changing its data. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`reshape`](https://scipy.org/scipy.sparse.coo_array.reshape.html#scipy.sparse.coo_array.reshape
    "scipy.sparse.coo_array.reshape")(self, shape[, order, copy]) | 在不改变数据的情况下为稀疏数组/矩阵赋予新的形状。
    |'
- en: '| [`resize`](scipy.sparse.coo_array.resize.html#scipy.sparse.coo_array.resize
    "scipy.sparse.coo_array.resize")(*shape) | Resize the array/matrix in-place to
    dimensions given by `shape` |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`resize`](https://scipy.org/scipy.sparse.coo_array.resize.html#scipy.sparse.coo_array.resize
    "scipy.sparse.coo_array.resize")(*shape) | 将数组/矩阵原地调整为给定`shape`的维度。 |'
- en: '| [`rint`](scipy.sparse.coo_array.rint.html#scipy.sparse.coo_array.rint "scipy.sparse.coo_array.rint")()
    | Element-wise rint. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`rint`](https://scipy.org/scipy.sparse.coo_array.rint.html#scipy.sparse.coo_array.rint
    "scipy.sparse.coo_array.rint")() | 逐元素四舍五入。 |'
- en: '| [`set_shape`](scipy.sparse.coo_array.set_shape.html#scipy.sparse.coo_array.set_shape
    "scipy.sparse.coo_array.set_shape")(shape) | See [`reshape`](scipy.sparse.coo_array.reshape.html#scipy.sparse.coo_array.reshape
    "scipy.sparse.coo_array.reshape"). |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`set_shape`](https://scipy.org/scipy.sparse.coo_array.set_shape.html#scipy.sparse.coo_array.set_shape
    "scipy.sparse.coo_array.set_shape")(shape) | 参见 [`reshape`](https://scipy.org/scipy.sparse.coo_array.reshape.html#scipy.sparse.coo_array.reshape
    "scipy.sparse.coo_array.reshape")。 |'
- en: '| [`setdiag`](scipy.sparse.coo_array.setdiag.html#scipy.sparse.coo_array.setdiag
    "scipy.sparse.coo_array.setdiag")(values[, k]) | Set diagonal or off-diagonal
    elements of the array/matrix. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`setdiag`](https://scipy.org/scipy.sparse.coo_array.setdiag.html#scipy.sparse.coo_array.setdiag
    "scipy.sparse.coo_array.setdiag")(values[, k]) | 设置数组/矩阵的对角线或非对角线元素。 |'
- en: '| [`sign`](scipy.sparse.coo_array.sign.html#scipy.sparse.coo_array.sign "scipy.sparse.coo_array.sign")()
    | Element-wise sign. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`sign`](https://scipy.org/scipy.sparse.coo_array.sign.html#scipy.sparse.coo_array.sign
    "scipy.sparse.coo_array.sign")() | 逐元素的符号函数。 |'
- en: '| [`sin`](scipy.sparse.coo_array.sin.html#scipy.sparse.coo_array.sin "scipy.sparse.coo_array.sin")()
    | Element-wise sin. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`sin`](https://scipy.org/scipy.sparse.coo_array.sin.html#scipy.sparse.coo_array.sin
    "scipy.sparse.coo_array.sin")() | 逐元素的正弦函数。 |'
- en: '| [`sinh`](scipy.sparse.coo_array.sinh.html#scipy.sparse.coo_array.sinh "scipy.sparse.coo_array.sinh")()
    | Element-wise sinh. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`sinh`](https://scipy.org/scipy.sparse.coo_array.sinh.html#scipy.sparse.coo_array.sinh
    "scipy.sparse.coo_array.sinh")() | 逐元素的双曲正弦函数。 |'
- en: '| [`sqrt`](scipy.sparse.coo_array.sqrt.html#scipy.sparse.coo_array.sqrt "scipy.sparse.coo_array.sqrt")()
    | Element-wise sqrt. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`sqrt`](https://scipy.org/scipy.sparse.coo_array.sqrt.html#scipy.sparse.coo_array.sqrt
    "scipy.sparse.coo_array.sqrt")() | 逐元素的平方根函数。 |'
- en: '| [`sum`](scipy.sparse.coo_array.sum.html#scipy.sparse.coo_array.sum "scipy.sparse.coo_array.sum")([axis, dtype, out])
    | Sum the array/matrix elements over a given axis. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`sum`](https://scipy.org/scipy.sparse.coo_array.sum.html#scipy.sparse.coo_array.sum
    "scipy.sparse.coo_array.sum")([axis, dtype, out]) | 沿着给定轴对数组/矩阵元素进行求和。 |'
- en: '| [`sum_duplicates`](scipy.sparse.coo_array.sum_duplicates.html#scipy.sparse.coo_array.sum_duplicates
    "scipy.sparse.coo_array.sum_duplicates")() | Eliminate duplicate entries by adding
    them together |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`sum_duplicates`](https://scipy.org/scipy.sparse.coo_array.sum_duplicates.html#scipy.sparse.coo_array.sum_duplicates
    "scipy.sparse.coo_array.sum_duplicates")() | 通过将重复条目相加来消除重复条目。 |'
- en: '| [`tan`](scipy.sparse.coo_array.tan.html#scipy.sparse.coo_array.tan "scipy.sparse.coo_array.tan")()
    | Element-wise tan. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`tan`](https://scipy.org/scipy.sparse.coo_array.tan.html#scipy.sparse.coo_array.tan
    "scipy.sparse.coo_array.tan")() | 逐元素的正切函数。 |'
- en: '| [`tanh`](scipy.sparse.coo_array.tanh.html#scipy.sparse.coo_array.tanh "scipy.sparse.coo_array.tanh")()
    | Element-wise tanh. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`tanh`](https://scipy.org/scipy.sparse.coo_array.tanh.html#scipy.sparse.coo_array.tanh
    "scipy.sparse.coo_array.tanh")() | 逐元素的双曲正切函数。 |'
- en: '| [`toarray`](scipy.sparse.coo_array.toarray.html#scipy.sparse.coo_array.toarray
    "scipy.sparse.coo_array.toarray")([order, out]) | Return a dense ndarray representation
    of this sparse array/matrix. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`toarray`](https://scipy.org/scipy.sparse.coo_array.toarray.html#scipy.sparse.coo_array.toarray
    "scipy.sparse.coo_array.toarray")([order, out]) | 返回该稀疏数组/矩阵的稠密 ndarray 表示。 |'
- en: '| [`tobsr`](scipy.sparse.coo_array.tobsr.html#scipy.sparse.coo_array.tobsr
    "scipy.sparse.coo_array.tobsr")([blocksize, copy]) | Convert this array/matrix
    to Block Sparse Row format. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '[`tobsr`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.tobsr.html#scipy.sparse.coo_matrix.tobsr
    "scipy.sparse.coo_matrix.tobsr")([blocksize, copy]) | 将此数组/矩阵转换为块稀疏行格式。'
- en: '| [`tocoo`](scipy.sparse.coo_array.tocoo.html#scipy.sparse.coo_array.tocoo
    "scipy.sparse.coo_array.tocoo")([copy]) | Convert this array/matrix to COOrdinate
    format. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '[`tocoo`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.tocoo.html#scipy.sparse.coo_matrix.tocoo
    "scipy.sparse.coo_matrix.tocoo")([copy]) | 将此数组/矩阵转换为坐标格式。'
- en: '| [`tocsc`](scipy.sparse.coo_array.tocsc.html#scipy.sparse.coo_array.tocsc
    "scipy.sparse.coo_array.tocsc")([copy]) | Convert this array/matrix to Compressed
    Sparse Column format |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '[`tocsc`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.tocsc.html#scipy.sparse.coo_matrix.tocsc
    "scipy.sparse.coo_matrix.tocsc")([copy]) | 将此数组/矩阵转换为压缩稀疏列格式。'
- en: '| [`tocsr`](scipy.sparse.coo_array.tocsr.html#scipy.sparse.coo_array.tocsr
    "scipy.sparse.coo_array.tocsr")([copy]) | Convert this array/matrix to Compressed
    Sparse Row format |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '[`tocsr`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.tocsr.html#scipy.sparse.coo_matrix.tocsr
    "scipy.sparse.coo_matrix.tocsr")([copy]) | 将此数组/矩阵转换为压缩稀疏行格式。'
- en: '| [`todense`](scipy.sparse.coo_array.todense.html#scipy.sparse.coo_array.todense
    "scipy.sparse.coo_array.todense")([order, out]) | Return a dense representation
    of this sparse array/matrix. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '[`todense`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.todense.html#scipy.sparse.coo_matrix.todense
    "scipy.sparse.coo_matrix.todense")([order, out]) | 返回此稀疏数组/矩阵的密集表示。'
- en: '| [`todia`](scipy.sparse.coo_array.todia.html#scipy.sparse.coo_array.todia
    "scipy.sparse.coo_array.todia")([copy]) | Convert this array/matrix to sparse
    DIAgonal format. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '[`todia`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.todia.html#scipy.sparse.coo_matrix.todia
    "scipy.sparse.coo_matrix.todia")([copy]) | 将此数组/矩阵转换为稀疏的对角线格式。'
- en: '| [`todok`](scipy.sparse.coo_array.todok.html#scipy.sparse.coo_array.todok
    "scipy.sparse.coo_array.todok")([copy]) | Convert this array/matrix to Dictionary
    Of Keys format. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '[`todok`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.todok.html#scipy.sparse.coo_matrix.todok
    "scipy.sparse.coo_matrix.todok")([copy]) | 将此数组/矩阵转换为键值字典格式。'
- en: '| [`tolil`](scipy.sparse.coo_array.tolil.html#scipy.sparse.coo_array.tolil
    "scipy.sparse.coo_array.tolil")([copy]) | Convert this array/matrix to List of
    Lists format. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '[`tolil`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.tolil.html#scipy.sparse.coo_matrix.tolil
    "scipy.sparse.coo_matrix.tolil")([copy]) | 将此数组/矩阵转换为列表列表格式。'
- en: '| [`trace`](scipy.sparse.coo_array.trace.html#scipy.sparse.coo_array.trace
    "scipy.sparse.coo_array.trace")([offset]) | Returns the sum along diagonals of
    the sparse array/matrix. |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '[`trace`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.trace.html#scipy.sparse.coo_matrix.trace
    "scipy.sparse.coo_matrix.trace")([offset]) | 返回稀疏数组/矩阵对角线上元素之和。'
- en: '| [`transpose`](scipy.sparse.coo_array.transpose.html#scipy.sparse.coo_array.transpose
    "scipy.sparse.coo_array.transpose")([axes, copy]) | Reverses the dimensions of
    the sparse array/matrix. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '[`transpose`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.transpose.html#scipy.sparse.coo_matrix.transpose
    "scipy.sparse.coo_matrix.transpose")([axes, copy]) | 反转稀疏数组/矩阵的维度。'
- en: '| [`trunc`](scipy.sparse.coo_array.trunc.html#scipy.sparse.coo_array.trunc
    "scipy.sparse.coo_array.trunc")() | Element-wise trunc. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '[`trunc`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.coo_matrix.trunc.html#scipy.sparse.coo_matrix.trunc
    "scipy.sparse.coo_matrix.trunc")() | 逐元素截断。'
- en: '| **__mul__** |  |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '**__mul__** |  |'
