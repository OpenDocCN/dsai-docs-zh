- en: pandas.ExcelFile
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.ExcelFile
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.html](https://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.html](https://pandas.pydata.org/docs/reference/api/pandas.ExcelFile.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Class for parsing tabular Excel sheets into DataFrame objects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于将表格化Excel表格解析为DataFrame对象的类。
- en: See read_excel for more documentation.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多文档，请参阅read_excel。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**path_or_buffer**str, bytes, path object (pathlib.Path or py._path.local.LocalPath),'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**path_or_buffer**str、bytes、路径对象（pathlib.Path或py._path.local.LocalPath），'
- en: A file-like object, xlrd workbook or openpyxl workbook. If a string or path
    object, expected to be a path to a .xls, .xlsx, .xlsb, .xlsm, .odf, .ods, or .odt
    file.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 文件类对象，xlrd工作簿或openpyxl工作簿。如果是字符串或路径对象，则应为.xls、.xlsx、.xlsb、.xlsm、.odf、.ods或.odt文件的路径。
- en: '**engine**str, default None'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**engine**str，默认为None'
- en: 'If io is not a buffer or path, this must be set to identify io. Supported engines:
    `xlrd`, `openpyxl`, `odf`, `pyxlsb`, `calamine` Engine compatibility :'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果io不是缓冲区或路径，则必须设置此项以识别io。支持的引擎：`xlrd`、`openpyxl`、`odf`、`pyxlsb`、`calamine`
    引擎兼容性：
- en: '`xlrd` supports old-style Excel files (.xls).'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`xlrd`支持旧式Excel文件（.xls）。'
- en: '`openpyxl` supports newer Excel file formats.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openpyxl`支持更新的Excel文件格式。'
- en: '`odf` supports OpenDocument file formats (.odf, .ods, .odt).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`odf`支持OpenDocument文件格式（.odf、.ods、.odt）。'
- en: '`pyxlsb` supports Binary Excel files.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pyxlsb`支持二进制Excel文件。'
- en: '`calamine` supports Excel (.xls, .xlsx, .xlsm, .xlsb) and OpenDocument (.ods)
    file formats.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`calamine`支持Excel（.xls、.xlsx、.xlsm、.xlsb）和OpenDocument（.ods）文件格式。'
- en: 'Changed in version 1.2.0: The engine [xlrd](https://xlrd.readthedocs.io/en/latest/)
    now only supports old-style `.xls` files. When `engine=None`, the following logic
    will be used to determine the engine:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本1.2.0开始更改：引擎[xlrd](https://xlrd.readthedocs.io/en/latest/)现在仅支持旧式`.xls`文件。当`engine=None`时，将使用以下逻辑来确定引擎：
- en: If `path_or_buffer` is an OpenDocument format (.odf, .ods, .odt), then [odf](https://pypi.org/project/odfpy/)
    will be used.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`path_or_buffer`是OpenDocument格式（.odf、.ods、.odt），则将使用[odf](https://pypi.org/project/odfpy/)。
- en: Otherwise if `path_or_buffer` is an xls format, `xlrd` will be used.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，如果`path_or_buffer`是xls格式，将使用`xlrd`。
- en: Otherwise if `path_or_buffer` is in xlsb format, [pyxlsb](https://pypi.org/project/pyxlsb/)
    will be used.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，如果`path_or_buffer`是xlsb格式，则将使用[pyxlsb](https://pypi.org/project/pyxlsb/)。
- en: New in version 1.3.0.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 1.3.0版本中的新功能。
- en: Otherwise if [openpyxl](https://pypi.org/project/openpyxl/) is installed, then
    `openpyxl` will be used.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，如果安装了[openpyxl](https://pypi.org/project/openpyxl/)，则将使用`openpyxl`。
- en: Otherwise if `xlrd >= 2.0` is installed, a `ValueError` will be raised.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否则，如果安装了`xlrd >= 2.0`，将引发`ValueError`。
- en: Warning
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Please do not report issues when using `xlrd` to read `.xlsx` files. This is
    not supported, switch to using `openpyxl` instead.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 请勿使用`xlrd`读取`.xlsx`文件时报告问题。这不受支持，请改用`openpyxl`。
- en: '**engine_kwargs**dict, optional'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**engine_kwargs**dict，可选'
- en: Arbitrary keyword arguments passed to excel engine.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给excel引擎的任意关键字参数。
- en: Examples
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Attributes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`book`](pandas.ExcelFile.book.html#pandas.ExcelFile.book "pandas.ExcelFile.book")
    |  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`book`](pandas.ExcelFile.book.html#pandas.ExcelFile.book "pandas.ExcelFile.book")
    |  |'
- en: '| [`sheet_names`](pandas.ExcelFile.sheet_names.html#pandas.ExcelFile.sheet_names
    "pandas.ExcelFile.sheet_names") |  |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`sheet_names`](pandas.ExcelFile.sheet_names.html#pandas.ExcelFile.sheet_names
    "pandas.ExcelFile.sheet_names") |  |'
- en: Methods
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| `close`() | close io if necessary |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `close`() | 必要时关闭io |'
- en: '| [`parse`](pandas.ExcelFile.parse.html#pandas.ExcelFile.parse "pandas.ExcelFile.parse")([sheet_name, header, names, ...])
    | Parse specified sheet(s) into a DataFrame. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`parse`](pandas.ExcelFile.parse.html#pandas.ExcelFile.parse "pandas.ExcelFile.parse")
    | 将指定的工作表解析为DataFrame。 |'
