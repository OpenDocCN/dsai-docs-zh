- en: numpy.ma.column_stack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ma.column_stack
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.column_stack.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.column_stack.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.column_stack.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.column_stack.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: column_stack
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: column_stack
- en: Stack 1-D arrays as columns into a 2-D array.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 将1-D数组堆叠为2-D数组的列。
- en: Take a sequence of 1-D arrays and stack them as columns to make a single 2-D
    array. 2-D arrays are stacked as-is, just like with [`hstack`](numpy.hstack.html#numpy.hstack
    "numpy.hstack"). 1-D arrays are turned into 2-D columns first.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 采用1-D数组的序列，并将它们堆叠为列，以形成单个2-D数组。2-D数组按原样堆叠，就像使用[`hstack`](numpy.hstack.html#numpy.hstack
    "numpy.hstack")一样。首先将1-D数组转换为2-D列。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**tup**sequence of 1-D or 2-D arrays.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**tup**是1-D或2-D数组的序列。'
- en: Arrays to stack. All of them must have the same first dimension.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数组堆叠。它们都必须具有相同的第一维。
- en: 'Returns:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**stacked**2-D array'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**stacked**2-D数组'
- en: The array formed by stacking the given arrays.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 由给定数组堆叠形成的数组。
- en: See also
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`stack`](numpy.stack.html#numpy.stack "numpy.stack"), [`hstack`](numpy.hstack.html#numpy.hstack
    "numpy.hstack"), [`vstack`](numpy.vstack.html#numpy.vstack "numpy.vstack"), [`concatenate`](numpy.concatenate.html#numpy.concatenate
    "numpy.concatenate")'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[`stack`](numpy.stack.html#numpy.stack "numpy.stack"), [`hstack`](numpy.hstack.html#numpy.hstack
    "numpy.hstack"), [`vstack`](numpy.vstack.html#numpy.vstack "numpy.vstack"), [`concatenate`](numpy.concatenate.html#numpy.concatenate
    "numpy.concatenate")'
- en: Notes
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: The function is applied to both the _data and the _mask, if any.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有的话，该函数适用于_data和_mask。
- en: Examples
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
