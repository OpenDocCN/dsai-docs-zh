- en: scipy.stats.kappa4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.kappa4.html#scipy.stats.kappa4](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.kappa4.html#scipy.stats.kappa4)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Kappa 4 parameter distribution.
  prefs: []
  type: TYPE_NORMAL
- en: As an instance of the [`rv_continuous`](scipy.stats.rv_continuous.html#scipy.stats.rv_continuous
    "scipy.stats.rv_continuous") class, [`kappa4`](#scipy.stats.kappa4 "scipy.stats.kappa4")
    object inherits from it a collection of generic methods (see below for the full
    list), and completes them with details specific for this particular distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The probability density function for kappa4 is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[f(x, h, k) = (1 - k x)^{1/k - 1} (1 - h (1 - k x)^{1/k})^{1/h-1}\]
  prefs: []
  type: TYPE_NORMAL
- en: if \(h\) and \(k\) are not equal to 0.
  prefs: []
  type: TYPE_NORMAL
- en: 'If \(h\) or \(k\) are zero then the pdf can be simplified:'
  prefs: []
  type: TYPE_NORMAL
- en: 'h = 0 and k != 0:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'h != 0 and k = 0:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'h = 0 and k = 0:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: kappa4 takes \(h\) and \(k\) as shape parameters.
  prefs: []
  type: TYPE_NORMAL
- en: The kappa4 distribution returns other distributions when certain \(h\) and \(k\)
    values are used.
  prefs: []
  type: TYPE_NORMAL
- en: '| h | k=0.0 | k=1.0 | -inf<=k<=inf |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| -1.0 | Logisticlogistic(x) |  | Generalized Logistic(1) |'
  prefs: []
  type: TYPE_TB
- en: '| 0.0 | Gumbelgumbel_r(x) | Reverse Exponential(2) | Generalized Extreme Valuegenextreme(x,
    k) |'
  prefs: []
  type: TYPE_TB
- en: '| 1.0 | Exponentialexpon(x) | Uniformuniform(x) | Generalized Paretogenpareto(x,
    -k) |'
  prefs: []
  type: TYPE_TB
- en: 'There are at least five generalized logistic distributions. Four are described
    here: [https://en.wikipedia.org/wiki/Generalized_logistic_distribution](https://en.wikipedia.org/wiki/Generalized_logistic_distribution)
    The “fifth” one is the one kappa4 should match which currently isn’t implemented
    in scipy: [https://en.wikipedia.org/wiki/Talk:Generalized_logistic_distribution](https://en.wikipedia.org/wiki/Talk:Generalized_logistic_distribution)
    [https://www.mathwave.com/help/easyfit/html/analyses/distributions/gen_logistic.html](https://www.mathwave.com/help/easyfit/html/analyses/distributions/gen_logistic.html)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This distribution is currently not in scipy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: J.C. Finney, “Optimization of a Skewed Logistic Distribution With Respect to
    the Kolmogorov-Smirnov Test”, A Dissertation Submitted to the Graduate Faculty
    of the Louisiana State University and Agricultural and Mechanical College, (August,
    2004), [https://digitalcommons.lsu.edu/gradschool_dissertations/3672](https://digitalcommons.lsu.edu/gradschool_dissertations/3672)
  prefs: []
  type: TYPE_NORMAL
- en: J.R.M. Hosking, “The four-parameter kappa distribution”. IBM J. Res. Develop.
    38 (3), 25 1-258 (1994).
  prefs: []
  type: TYPE_NORMAL
- en: B. Kumphon, A. Kaew-Man, P. Seenoi, “A Rainfall Distribution for the Lampao
    Site in the Chi River Basin, Thailand”, Journal of Water Resource and Protection,
    vol. 4, 866-869, (2012). [DOI:10.4236/jwarp.2012.410101](https://doi.org/10.4236/jwarp.2012.410101)
  prefs: []
  type: TYPE_NORMAL
- en: C. Winchester, “On Estimation of the Four-Parameter Kappa Distribution”, A Thesis
    Submitted to Dalhousie University, Halifax, Nova Scotia, (March 2000). [http://www.nlc-bnc.ca/obj/s4/f2/dsk2/ftp01/MQ57336.pdf](http://www.nlc-bnc.ca/obj/s4/f2/dsk2/ftp01/MQ57336.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: The probability density above is defined in the “standardized” form. To shift
    and/or scale the distribution use the `loc` and `scale` parameters. Specifically,
    `kappa4.pdf(x, h, k, loc, scale)` is identically equivalent to `kappa4.pdf(y,
    h, k) / scale` with `y = (x - loc) / scale`. Note that shifting the location of
    a distribution does not make it a “noncentral” distribution; noncentral generalizations
    of some distributions are available in separate classes.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the first four moments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Display the probability density function (`pdf`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, the distribution object can be called (as a function) to fix
    the shape, location and scale parameters. This returns a “frozen” RV object holding
    the given parameters fixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Freeze the distribution and display the frozen `pdf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Check accuracy of `cdf` and `ppf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate random numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'And compare the histogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-kappa4-1.png](../Images/2a5bae5df81498f3424841a4153e4431.png)'
  prefs: []
  type: TYPE_IMG
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **rvs(h, k, loc=0, scale=1, size=1, random_state=None)** | Random variates.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **pdf(x, h, k, loc=0, scale=1)** | Probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(x, h, k, loc=0, scale=1)** | Log of the probability density function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **cdf(x, h, k, loc=0, scale=1)** | Cumulative distribution function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logcdf(x, h, k, loc=0, scale=1)** | Log of the cumulative distribution
    function. |'
  prefs: []
  type: TYPE_TB
- en: '| **sf(x, h, k, loc=0, scale=1)** | Survival function (also defined as `1 -
    cdf`, but *sf* is sometimes more accurate). |'
  prefs: []
  type: TYPE_TB
- en: '| **logsf(x, h, k, loc=0, scale=1)** | Log of the survival function. |'
  prefs: []
  type: TYPE_TB
- en: '| **ppf(q, h, k, loc=0, scale=1)** | Percent point function (inverse of `cdf`
    — percentiles). |'
  prefs: []
  type: TYPE_TB
- en: '| **isf(q, h, k, loc=0, scale=1)** | Inverse survival function (inverse of
    `sf`). |'
  prefs: []
  type: TYPE_TB
- en: '| **moment(order, h, k, loc=0, scale=1)** | Non-central moment of the specified
    order. |'
  prefs: []
  type: TYPE_TB
- en: '| **stats(h, k, loc=0, scale=1, moments=’mv’)** | Mean(‘m’), variance(‘v’),
    skew(‘s’), and/or kurtosis(‘k’). |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(h, k, loc=0, scale=1)** | (Differential) entropy of the RV. |'
  prefs: []
  type: TYPE_TB
- en: '| **fit(data)** | Parameter estimates for generic data. See [scipy.stats.rv_continuous.fit](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.fit.html#scipy.stats.rv_continuous.fit)
    for detailed documentation of the keyword arguments. |'
  prefs: []
  type: TYPE_TB
- en: '| **expect(func, args=(h, k), loc=0, scale=1, lb=None, ub=None, conditional=False,
    **kwds)** | Expected value of a function (of one argument) with respect to the
    distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **median(h, k, loc=0, scale=1)** | Median of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **mean(h, k, loc=0, scale=1)** | Mean of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **var(h, k, loc=0, scale=1)** | Variance of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **std(h, k, loc=0, scale=1)** | Standard deviation of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **interval(confidence, h, k, loc=0, scale=1)** | Confidence interval with
    equal areas around the median. |'
  prefs: []
  type: TYPE_TB
