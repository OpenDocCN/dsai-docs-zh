["```py\n>>> from sympy import Add\n>>> from sympy.abc import x,y\n>>> type(x + y)\n<class 'sympy.core.add.Add'>\n>>> isinstance(x + y, Add)\nTrue \n```", "```py\n>>> from sympy import MatrixSymbol, Integral\n>>> A = MatrixSymbol('A', 2, 2)\n>>> type(Integral(1, x))\n<class 'sympy.integrals.integrals.Integral'>\n>>> type(Integral(A, x))\n<class 'sympy.integrals.integrals.Integral'> \n```", "```py\n>>> Integral(1, x).kind\nNumberKind\n>>> Integral(A, x).kind\nMatrixKind(NumberKind) \n```", "```py\n> >>> from sympy import pi, I\n> \n> >>> pi.kind\n> \n> NumberKind\n> \n> >>> I.kind\n> \n> NumberKind \n> ```", "```py\n> >>> from sympy import S\n> \n> >>> from sympy.core.kind import NumberKind\n> \n> >>> S.Reals.is_subset(S.Complexes)\n> \n> True\n> \n> >>> S.Reals.is_subset(NumberKind)\n> \n> Traceback (most recent call last):\n> \n> ...\n> \n> ValueError: Unknown argument 'NumberKind' \n> ```", "```py\n>>> from sympy import ask, Q\n>>> S.One in S.Reals\nTrue\n>>> ask(Q.even(2*x), Q.odd(x))\nTrue \n```", "```py\n>>> Add(x + y).func\n<class 'sympy.core.add.Add'>\n>>> Add(x + x).func\n<class 'sympy.core.mul.Mul'>\n>>> Q.even(x).func\n<class 'sympy.assumptions.assume.AppliedPredicate'> \n```"]