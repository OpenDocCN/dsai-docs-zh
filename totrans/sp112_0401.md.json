["```py\nscipy.ndimage.binary_opening(input, structure=None, iterations=1, output=None, origin=0, mask=None, border_value=0, brute_force=False)\n```", "```py\n>>> from scipy import ndimage\n>>> import numpy as np\n>>> a = np.zeros((5,5), dtype=int)\n>>> a[1:4, 1:4] = 1; a[4, 4] = 1\n>>> a\narray([[0, 0, 0, 0, 0],\n [0, 1, 1, 1, 0],\n [0, 1, 1, 1, 0],\n [0, 1, 1, 1, 0],\n [0, 0, 0, 0, 1]])\n>>> # Opening removes small objects\n>>> ndimage.binary_opening(a, structure=np.ones((3,3))).astype(int)\narray([[0, 0, 0, 0, 0],\n [0, 1, 1, 1, 0],\n [0, 1, 1, 1, 0],\n [0, 1, 1, 1, 0],\n [0, 0, 0, 0, 0]])\n>>> # Opening can also smooth corners\n>>> ndimage.binary_opening(a).astype(int)\narray([[0, 0, 0, 0, 0],\n [0, 0, 1, 0, 0],\n [0, 1, 1, 1, 0],\n [0, 0, 1, 0, 0],\n [0, 0, 0, 0, 0]])\n>>> # Opening is the dilation of the erosion of the input\n>>> ndimage.binary_erosion(a).astype(int)\narray([[0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0],\n [0, 0, 1, 0, 0],\n [0, 0, 0, 0, 0],\n [0, 0, 0, 0, 0]])\n>>> ndimage.binary_dilation(ndimage.binary_erosion(a)).astype(int)\narray([[0, 0, 0, 0, 0],\n [0, 0, 1, 0, 0],\n [0, 1, 1, 1, 0],\n [0, 0, 1, 0, 0],\n [0, 0, 0, 0, 0]]) \n```"]