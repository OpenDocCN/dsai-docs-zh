["```py\nscipy.integrate.cumulative_simpson(y, *, x=None, dx=1.0, axis=-1, initial=None)\n```", "```py\n>>> from scipy import integrate\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> x = np.linspace(-2, 2, num=20)\n>>> y = x**2\n>>> y_int = integrate.cumulative_simpson(y, x=x, initial=0)\n>>> fig, ax = plt.subplots()\n>>> ax.plot(x, y_int, 'ro', x, x**3/3 - (x[0])**3/3, 'b-')\n>>> ax.grid()\n>>> plt.show() \n```", "```py\n>>> def cumulative_simpson_reference(y, x):\n...     return np.asarray([integrate.simpson(y[:i], x=x[:i])\n...                        for i in range(2, len(y) + 1)])\n>>>\n>>> rng = np.random.default_rng()\n>>> x, y = rng.random(size=(2, 10))\n>>> x.sort()\n>>>\n>>> res = integrate.cumulative_simpson(y, x=x)\n>>> ref = cumulative_simpson_reference(y, x)\n>>> equal = np.abs(res - ref) < 1e-15\n>>> equal  # not equal when `simpson` has even number of subintervals\narray([False,  True, False,  True, False,  True, False,  True,  True]) \n```"]