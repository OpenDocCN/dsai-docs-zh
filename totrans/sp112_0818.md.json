["```py\nscipy.special.spherical_kn(n, z, derivative=False)\n```", "```py\n>>> from scipy.special import spherical_kn\n>>> spherical_kn(0, 3+5j)\n(0.012985785614001561+0.003354691603137546j)\n>>> type(spherical_kn(0, 3+5j))\n<class 'numpy.complex128'> \n```", "```py\n>>> import numpy as np\n>>> x = np.arange(1.0, 2.0, 0.01)\n>>> np.allclose(spherical_kn(3, x, True),\n...             - 4/x * spherical_kn(3, x) - spherical_kn(2, x))\nTrue \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> x = np.arange(0.0, 4.0, 0.01)\n>>> fig, ax = plt.subplots()\n>>> ax.set_ylim(0.0, 5.0)\n>>> ax.set_title(r'Modified spherical Bessel functions $k_n$')\n>>> for n in np.arange(0, 4):\n...     ax.plot(x, spherical_kn(n, x), label=rf'$k_{n}$')\n>>> plt.legend(loc='best')\n>>> plt.show() \n```"]