- en: numpy.cumsum
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.cumsum
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.cumsum.html](https://numpy.org/doc/1.26/reference/generated/numpy.cumsum.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.cumsum.html](https://numpy.org/doc/1.26/reference/generated/numpy.cumsum.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the cumulative sum of the elements along a given axis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回沿给定轴的元素的累积和。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**a** array_like'
- en: Input array.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**axis**int, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis** int，可选'
- en: Axis along which the cumulative sum is computed. The default (None) is to compute
    the cumsum over the flattened array.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在其上计算累积和的轴。默认值（None）是在展开的数组上计算累积和。
- en: '**dtype**dtype, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype** dtype，可选'
- en: Type of the returned array and of the accumulator in which the elements are
    summed. If [`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype") is not specified,
    it defaults to the dtype of *a*, unless *a* has an integer dtype with a precision
    less than that of the default platform integer. In that case, the default platform
    integer is used.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 返回数组的类型以及在其中对元素求和的累加器的类型。如果未指定[`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype")，则默认为*a*的dtype，除非*a*具有精度低于默认平台整数的整数dtype。在这种情况下，将使用默认平台整数。
- en: '**out**ndarray, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**out** ndarray，可选'
- en: Alternative output array in which to place the result. It must have the same
    shape and buffer length as the expected output but the type will be cast if necessary.
    See [Output type determination](../../user/basics.ufuncs.html#ufuncs-output-type)
    for more details.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的替代输出数组，用于放置结果。它必须具有与预期输出相同的形状和缓冲区长度，但如果需要，类型将被转换。有关更多详细信息，请参见[输出类型确定](../../user/basics.ufuncs.html#ufuncs-output-type)。
- en: 'Returns:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**cumsum_along_axis**ndarray.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**cumsum_along_axis** ndarray。'
- en: A new array holding the result is returned unless *out* is specified, in which
    case a reference to *out* is returned. The result has the same size as *a*, and
    the same shape as *a* if *axis* is not None or *a* is a 1-d array.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个保存结果的新数组，除非指定了*out*，否则返回对*out*的引用。如果*axis*不是None或*a*是1维数组，则结果与*a*具有相同的大小和形状。
- en: See also
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sum`](numpy.sum.html#numpy.sum "numpy.sum")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sum`](numpy.sum.html#numpy.sum "numpy.sum")'
- en: Sum array elements.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对数组元素求和。
- en: '[`trapz`](numpy.trapz.html#numpy.trapz "numpy.trapz")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`trapz`](numpy.trapz.html#numpy.trapz "numpy.trapz")'
- en: Integration of array values using the composite trapezoidal rule.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用复合梯形规则对数组值进行积分。
- en: '[`diff`](numpy.diff.html#numpy.diff "numpy.diff")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`diff`](numpy.diff.html#numpy.diff "numpy.diff")'
- en: Calculate the n-th discrete difference along given axis.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 计算沿指定轴的第n个离散差分。
- en: Notes
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Arithmetic is modular when using integer types, and no error is raised on overflow.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用整数类型时，算术操作是模数的，如果溢出不会引发错误。
- en: '`cumsum(a)[-1]` may not be equal to `sum(a)` for floating-point values since
    `sum` may use a pairwise summation routine, reducing the roundoff-error. See [`sum`](numpy.sum.html#numpy.sum
    "numpy.sum") for more information.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`cumsum(a)[-1]` 的结果可能与 `sum(a)` 不相等，因为`sum`可能使用成对求和例程，减小舍入误差。更多信息请参见[`sum`](numpy.sum.html#numpy.sum
    "numpy.sum")。'
- en: Examples
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`cumsum(b)[-1]` may not be equal to `sum(b)`'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`cumsum(b)[-1]` 的结果可能与 `sum(b)` 不相等'
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
