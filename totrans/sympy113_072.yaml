- en: Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 函数
- en: Original text：[https://docs.sympy.org/latest/modules/functions/index.html](https://docs.sympy.org/latest/modules/functions/index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/modules/functions/index.html](https://docs.sympy.org/latest/modules/functions/index.html)
- en: All functions support the methods documented below, inherited from [`sympy.core.function.Function`](../core.html#sympy.core.function.Function
    "sympy.core.function.Function").
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 所有函数都支持以下文档化方法，从继承自[`sympy.core.function.Function`](../core.html#sympy.core.function.Function
    "sympy.core.function.Function")的函数中继承。
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Base class for applied mathematical functions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 应用数学函数的基类。
- en: It also serves as a constructor for undefined function classes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 它还作为未定义函数类的构造函数。
- en: See the [Writing Custom Functions](../../guides/custom-functions.html#custom-functions)
    guide for details on how to subclass `Function` and what methods can be defined.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何子类化`Function`以及可以定义哪些方法的详细信息，请参见[编写自定义函数](../../guides/custom-functions.html#custom-functions)指南。
- en: Examples
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '**Undefined Functions**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**未定义函数**'
- en: To create an undefined function, pass a string of the function name to `Function`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建未定义函数，请将函数名的字符串传递给`Function`。
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Assumptions can be passed to `Function` the same as with a [`Symbol`](../core.html#sympy.core.symbol.Symbol
    "sympy.core.symbol.Symbol"). Alternatively, you can use a `Symbol` with assumptions
    for the function name and the function will inherit the name and assumptions associated
    with the `Symbol`:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将假设传递给`Function`，方式与[`Symbol`](../core.html#sympy.core.symbol.Symbol "sympy.core.symbol.Symbol")相同。或者，您可以使用具有函数名和假设的`Symbol`作为函数名，并且函数将继承与`Symbol`相关联的名称和假设：
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that assumptions on a function are unrelated to the assumptions on the
    variables it is called on. If you want to add a relationship, subclass `Function`
    and define custom assumptions handler methods. See the [Assumptions](../../guides/custom-functions.html#custom-functions-assumptions)
    section of the [Writing Custom Functions](../../guides/custom-functions.html#custom-functions)
    guide for more details.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，函数的假设与调用它的变量的假设无关。如果您想要添加关系，请子类化`Function`并定义自定义假设处理方法。有关详细信息，请参见[编写自定义函数](../../guides/custom-functions.html#custom-functions)指南中的[假设](../../guides/custom-functions.html#custom-functions-assumptions)部分。
- en: '**Custom Function Subclasses**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**自定义函数子类**'
- en: The [Writing Custom Functions](../../guides/custom-functions.html#custom-functions)
    guide has several [Complete Examples](../../guides/custom-functions.html#custom-functions-complete-examples)
    of how to subclass `Function` to create a custom function.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[编写自定义函数](../../guides/custom-functions.html#custom-functions)指南有几个[完整示例](../../guides/custom-functions.html#custom-functions-complete-examples)，展示了如何子类化`Function`以创建自定义函数。'
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Returns the method as the 2-tuple (base, exponent).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回方法作为二元组（底数，指数）。
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Returns the first derivative of the function.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回函数的第一阶导数。
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Tests whether the argument is an essential singularity or a branch point, or
    the functions is non-holomorphic.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 检测参数是本质奇点还是分支点，或者函数是非全纯的。
- en: '## Contents'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '## 目录'
- en: '[Elementary](elementary.html)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[初等函数](elementary.html)'
- en: '[Combinatorial](combinatorial.html)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[组合数学](combinatorial.html)'
- en: '[Enumeration](combinatorial.html#enumeration)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[枚举](combinatorial.html#enumeration)'
- en: '[Special](special.html)'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[特殊函数](special.html)'
