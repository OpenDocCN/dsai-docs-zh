- en: scipy.ndimage.watershed_ift
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.watershed_ift.html#scipy.ndimage.watershed_ift](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.watershed_ift.html#scipy.ndimage.watershed_ift)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Apply watershed from markers using image foresting transform algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input.
  prefs: []
  type: TYPE_NORMAL
- en: '**markers**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Markers are points within each watershed that form the beginning of the process.
    Negative markers are considered background markers which are processed after the
    other markers.
  prefs: []
  type: TYPE_NORMAL
- en: '**structure**structure element, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A structuring element defining the connectivity of the object can be provided.
    If None, an element is generated with a squared connectivity equal to one.
  prefs: []
  type: TYPE_NORMAL
- en: '**output**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An output array can optionally be provided. The same shape as input.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**watershed_ift**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Output. Same shape as *input*.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: 'A.X. Falcao, J. Stolfi and R. de Alencar Lotufo, “The image foresting transform:
    theory, algorithms, and applications”, Pattern Analysis and Machine Intelligence,
    vol. 26, pp. 19-29, 2004.'
  prefs: []
  type: TYPE_NORMAL
