- en: scipy.io.wavfile.read
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.wavfile.read.html#scipy.io.wavfile.read](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.wavfile.read.html#scipy.io.wavfile.read)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Open a WAV file.
  prefs: []
  type: TYPE_NORMAL
- en: Return the sample rate (in samples/sec) and data from an LPCM WAV file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**filename**string or open file handle'
  prefs: []
  type: TYPE_NORMAL
- en: Input WAV file.
  prefs: []
  type: TYPE_NORMAL
- en: '**mmap**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Whether to read data as memory-mapped (default: False). Not compatible with
    some bit depths; see Notes. Only to be used on real files.'
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.12.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**rate**int'
  prefs: []
  type: TYPE_NORMAL
- en: Sample rate of WAV file.
  prefs: []
  type: TYPE_NORMAL
- en: '**data**numpy array'
  prefs: []
  type: TYPE_NORMAL
- en: Data read from WAV file. Data-type is determined from the file; see Notes. Data
    is 1-D for 1-channel WAV, or 2-D of shape (Nsamples, Nchannels) otherwise. If
    a file-like input without a C-like file descriptor (e.g., [`io.BytesIO`](https://docs.python.org/3/library/io.html#io.BytesIO
    "(in Python v3.12)")) is passed, this will not be writeable.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'Common data types: [[1]](#r7015bff88555-1)'
  prefs: []
  type: TYPE_NORMAL
- en: '| WAV format | Min | Max | NumPy dtype |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 32-bit floating-point | -1.0 | +1.0 | float32 |'
  prefs: []
  type: TYPE_TB
- en: '| 32-bit integer PCM | -2147483648 | +2147483647 | int32 |'
  prefs: []
  type: TYPE_TB
- en: '| 24-bit integer PCM | -2147483648 | +2147483392 | int32 |'
  prefs: []
  type: TYPE_TB
- en: '| 16-bit integer PCM | -32768 | +32767 | int16 |'
  prefs: []
  type: TYPE_TB
- en: '| 8-bit integer PCM | 0 | 255 | uint8 |'
  prefs: []
  type: TYPE_TB
- en: WAV files can specify arbitrary bit depth, and this function supports reading
    any integer PCM depth from 1 to 64 bits. Data is returned in the smallest compatible
    numpy int type, in left-justified format. 8-bit and lower is unsigned, while 9-bit
    and higher is signed.
  prefs: []
  type: TYPE_NORMAL
- en: For example, 24-bit data will be stored as int32, with the MSB of the 24-bit
    data stored at the MSB of the int32, and typically the least significant byte
    is 0x00\. (However, if a file actually contains data past its specified bit depth,
    those bits will be read and output, too. [[2]](#r7015bff88555-2))
  prefs: []
  type: TYPE_NORMAL
- en: This bit justification and sign matches WAV’s native internal format, which
    allows memory mapping of WAV files that use 1, 2, 4, or 8 bytes per sample (so
    24-bit files cannot be memory-mapped, but 32-bit can).
  prefs: []
  type: TYPE_NORMAL
- en: IEEE float PCM in 32- or 64-bit format is supported, with or without mmap. Values
    exceeding [-1, +1] are not clipped.
  prefs: []
  type: TYPE_NORMAL
- en: Non-linear PCM (mu-law, A-law) is not supported.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: IBM Corporation and Microsoft Corporation, “Multimedia Programming Interface
    and Data Specifications 1.0”, section “Data Format of the Samples”, August 1991
    [http://www.tactilemedia.com/info/MCI_Control_Info.html](http://www.tactilemedia.com/info/MCI_Control_Info.html)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Adobe Systems Incorporated, “Adobe Audition 3 User Guide”, section “Audio file
    formats: 24-bit Packed Int (type 1, 20-bit)”, 2007'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Get the filename for an example .wav file from the tests/data directory.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Load the .wav file contents.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Plot the waveform.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-io-wavfile-read-1.png](../Images/26e70b7b0f2ca409b16574d54e0caa7b.png)'
  prefs: []
  type: TYPE_IMG
