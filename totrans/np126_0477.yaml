- en: Mathematical functions with automatic domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/routines.emath.html](https://numpy.org/doc/1.26/reference/routines.emath.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.emath`](#module-numpy.emath "numpy.emath") is a preferred alias for
    `numpy.lib.scimath`, available after [`numpy`](index.html#module-numpy "numpy")
    is imported.'
  prefs: []
  type: TYPE_NORMAL
- en: Wrapper functions to more user-friendly calling of certain math functions whose
    output data-type is different than the input data-type in certain domains of the
    input.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, for functions like [`log`](generated/numpy.emath.log.html#numpy.emath.log
    "numpy.emath.log") with branch cuts, the versions in this module provide the mathematically
    valid answers in the complex plane:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, [`sqrt`](generated/numpy.emath.sqrt.html#numpy.emath.sqrt "numpy.emath.sqrt"),
    other base logarithms, [`power`](generated/numpy.emath.power.html#numpy.emath.power
    "numpy.emath.power") and trig functions are correctly handled. See their respective
    docstrings for specific examples.
  prefs: []
  type: TYPE_NORMAL
- en: Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`sqrt`](generated/numpy.emath.sqrt.html#numpy.emath.sqrt "numpy.emath.sqrt")(x)
    | Compute the square root of x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`log`](generated/numpy.emath.log.html#numpy.emath.log "numpy.emath.log")(x)
    | Compute the natural logarithm of *x*. |'
  prefs: []
  type: TYPE_TB
- en: '| [`log2`](generated/numpy.emath.log2.html#numpy.emath.log2 "numpy.emath.log2")(x)
    | Compute the logarithm base 2 of *x*. |'
  prefs: []
  type: TYPE_TB
- en: '| [`logn`](generated/numpy.emath.logn.html#numpy.emath.logn "numpy.emath.logn")(n, x)
    | Take log base n of x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`log10`](generated/numpy.emath.log10.html#numpy.emath.log10 "numpy.emath.log10")(x)
    | Compute the logarithm base 10 of *x*. |'
  prefs: []
  type: TYPE_TB
- en: '| [`power`](generated/numpy.emath.power.html#numpy.emath.power "numpy.emath.power")(x, p)
    | Return x to the power p, (x**p). |'
  prefs: []
  type: TYPE_TB
- en: '| [`arccos`](generated/numpy.emath.arccos.html#numpy.emath.arccos "numpy.emath.arccos")(x)
    | Compute the inverse cosine of x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`arcsin`](generated/numpy.emath.arcsin.html#numpy.emath.arcsin "numpy.emath.arcsin")(x)
    | Compute the inverse sine of x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`arctanh`](generated/numpy.emath.arctanh.html#numpy.emath.arctanh "numpy.emath.arctanh")(x)
    | Compute the inverse hyperbolic tangent of *x*. |'
  prefs: []
  type: TYPE_TB
- en: Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`sqrt`](generated/numpy.emath.sqrt.html#numpy.emath.sqrt "numpy.emath.sqrt")(x)
    | Compute the square root of x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`log`](generated/numpy.emath.log.html#numpy.emath.log "numpy.emath.log")(x)
    | Compute the natural logarithm of *x*. |'
  prefs: []
  type: TYPE_TB
- en: '| [`log2`](generated/numpy.emath.log2.html#numpy.emath.log2 "numpy.emath.log2")(x)
    | Compute the logarithm base 2 of *x*. |'
  prefs: []
  type: TYPE_TB
- en: '| [`logn`](generated/numpy.emath.logn.html#numpy.emath.logn "numpy.emath.logn")(n, x)
    | Take log base n of x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`log10`](generated/numpy.emath.log10.html#numpy.emath.log10 "numpy.emath.log10")(x)
    | Compute the logarithm base 10 of *x*. |'
  prefs: []
  type: TYPE_TB
- en: '| [`power`](generated/numpy.emath.power.html#numpy.emath.power "numpy.emath.power")(x, p)
    | Return x to the power p, (x**p). |'
  prefs: []
  type: TYPE_TB
- en: '| [`arccos`](generated/numpy.emath.arccos.html#numpy.emath.arccos "numpy.emath.arccos")(x)
    | Compute the inverse cosine of x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`arcsin`](generated/numpy.emath.arcsin.html#numpy.emath.arcsin "numpy.emath.arcsin")(x)
    | Compute the inverse sine of x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`arctanh`](generated/numpy.emath.arctanh.html#numpy.emath.arctanh "numpy.emath.arctanh")(x)
    | Compute the inverse hyperbolic tangent of *x*. |'
  prefs: []
  type: TYPE_TB
