- en: scipy.stats.lognorm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.lognorm.html#scipy.stats.lognorm](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.lognorm.html#scipy.stats.lognorm)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A lognormal continuous random variable.
  prefs: []
  type: TYPE_NORMAL
- en: As an instance of the [`rv_continuous`](scipy.stats.rv_continuous.html#scipy.stats.rv_continuous
    "scipy.stats.rv_continuous") class, [`lognorm`](#scipy.stats.lognorm "scipy.stats.lognorm")
    object inherits from it a collection of generic methods (see below for the full
    list), and completes them with details specific for this particular distribution.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The probability density function for [`lognorm`](#scipy.stats.lognorm "scipy.stats.lognorm")
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[f(x, s) = \frac{1}{s x \sqrt{2\pi}} \exp\left(-\frac{\log^2(x)}{2s^2}\right)\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(x > 0\), \(s > 0\).
  prefs: []
  type: TYPE_NORMAL
- en: '[`lognorm`](#scipy.stats.lognorm "scipy.stats.lognorm") takes `s` as a shape
    parameter for \(s\).'
  prefs: []
  type: TYPE_NORMAL
- en: The probability density above is defined in the “standardized” form. To shift
    and/or scale the distribution use the `loc` and `scale` parameters. Specifically,
    `lognorm.pdf(x, s, loc, scale)` is identically equivalent to `lognorm.pdf(y, s)
    / scale` with `y = (x - loc) / scale`. Note that shifting the location of a distribution
    does not make it a “noncentral” distribution; noncentral generalizations of some
    distributions are available in separate classes.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose a normally distributed random variable `X` has mean `mu` and standard
    deviation `sigma`. Then `Y = exp(X)` is lognormally distributed with `s = sigma`
    and `scale = exp(mu)`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the first four moments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Display the probability density function (`pdf`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, the distribution object can be called (as a function) to fix
    the shape, location and scale parameters. This returns a “frozen” RV object holding
    the given parameters fixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Freeze the distribution and display the frozen `pdf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Check accuracy of `cdf` and `ppf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate random numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'And compare the histogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-lognorm-1_00_00.png](../Images/8bf579a9af754ff5c27ef309cd93148f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The logarithm of a log-normally distributed random variable is normally distributed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-lognorm-1_01_00.png](../Images/81a5098f3abee0eb03e07f5b88021834.png)'
  prefs: []
  type: TYPE_IMG
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **rvs(s, loc=0, scale=1, size=1, random_state=None)** | Random variates.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **pdf(x, s, loc=0, scale=1)** | Probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(x, s, loc=0, scale=1)** | Log of the probability density function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **cdf(x, s, loc=0, scale=1)** | Cumulative distribution function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logcdf(x, s, loc=0, scale=1)** | Log of the cumulative distribution function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **sf(x, s, loc=0, scale=1)** | Survival function (also defined as `1 - cdf`,
    but *sf* is sometimes more accurate). |'
  prefs: []
  type: TYPE_TB
- en: '| **logsf(x, s, loc=0, scale=1)** | Log of the survival function. |'
  prefs: []
  type: TYPE_TB
- en: '| **ppf(q, s, loc=0, scale=1)** | Percent point function (inverse of `cdf`
    — percentiles). |'
  prefs: []
  type: TYPE_TB
- en: '| **isf(q, s, loc=0, scale=1)** | Inverse survival function (inverse of `sf`).
    |'
  prefs: []
  type: TYPE_TB
- en: '| **moment(order, s, loc=0, scale=1)** | Non-central moment of the specified
    order. |'
  prefs: []
  type: TYPE_TB
- en: '| **stats(s, loc=0, scale=1, moments=’mv’)** | Mean(‘m’), variance(‘v’), skew(‘s’),
    and/or kurtosis(‘k’). |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(s, loc=0, scale=1)** | (Differential) entropy of the RV. |'
  prefs: []
  type: TYPE_TB
- en: '| **fit(data)** | Parameter estimates for generic data. See [scipy.stats.rv_continuous.fit](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.fit.html#scipy.stats.rv_continuous.fit)
    for detailed documentation of the keyword arguments. |'
  prefs: []
  type: TYPE_TB
- en: '| **expect(func, args=(s,), loc=0, scale=1, lb=None, ub=None, conditional=False,
    **kwds)** | Expected value of a function (of one argument) with respect to the
    distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **median(s, loc=0, scale=1)** | Median of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **mean(s, loc=0, scale=1)** | Mean of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **var(s, loc=0, scale=1)** | Variance of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **std(s, loc=0, scale=1)** | Standard deviation of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **interval(confidence, s, loc=0, scale=1)** | Confidence interval with equal
    areas around the median. |'
  prefs: []
  type: TYPE_TB
