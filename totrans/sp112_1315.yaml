- en: scipy.stats.page_trend_test
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.page_trend_test.html#scipy.stats.page_trend_test](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.page_trend_test.html#scipy.stats.page_trend_test)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Perform Page’s Test, a measure of trend in observations between treatments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Page’s Test (also known as Page’s \(L\) test) is useful when:'
  prefs: []
  type: TYPE_NORMAL
- en: there are \(n \geq 3\) treatments,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(m \geq 2\) subjects are observed for each treatment, and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the observations are hypothesized to have a particular order.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Specifically, the test considers the null hypothesis that
  prefs: []
  type: TYPE_NORMAL
- en: \[m_1 = m_2 = m_3 \cdots = m_n,\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(m_j\) is the mean of the observed quantity under treatment \(j\), against
    the alternative hypothesis that
  prefs: []
  type: TYPE_NORMAL
- en: \[m_1 \leq m_2 \leq m_3 \leq \cdots \leq m_n,\]
  prefs: []
  type: TYPE_NORMAL
- en: where at least one inequality is strict.
  prefs: []
  type: TYPE_NORMAL
- en: As noted by [[4]](#rb7ca5e705efa-4), Page’s \(L\) test has greater statistical
    power than the Friedman test against the alternative that there is a difference
    in trend, as Friedman’s test only considers a difference in the means of the observations
    without considering their order. Whereas Spearman \(\rho\) considers the correlation
    between the ranked observations of two variables (e.g. the airspeed velocity of
    a swallow vs. the weight of the coconut it carries), Page’s \(L\) is concerned
    with a trend in an observation (e.g. the airspeed velocity of a swallow) across
    several distinct treatments (e.g. carrying each of five coconuts of different
    weight) even as the observation is repeated with multiple subjects (e.g. one European
    swallow and one African swallow).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**data**array-like'
  prefs: []
  type: TYPE_NORMAL
- en: A \(m \times n\) array; the element in row \(i\) and column \(j\) is the observation
    corresponding with subject \(i\) and treatment \(j\). By default, the columns
    are assumed to be arranged in order of increasing predicted mean.
  prefs: []
  type: TYPE_NORMAL
- en: '**ranked**boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: By default, *data* is assumed to be observations rather than ranks; it will
    be ranked with [`scipy.stats.rankdata`](scipy.stats.rankdata.html#scipy.stats.rankdata
    "scipy.stats.rankdata") along `axis=1`. If *data* is provided in the form of ranks,
    pass argument `True`.
  prefs: []
  type: TYPE_NORMAL
- en: '**predicted_ranks**array-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The predicted ranks of the column means. If not specified, the columns are assumed
    to be arranged in order of increasing predicted mean, so the default *predicted_ranks*
    are \([1, 2, \dots, n-1, n]\).
  prefs: []
  type: TYPE_NORMAL
- en: '**method**{‘auto’, ‘asymptotic’, ‘exact’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Selects the method used to calculate the *p*-value. The following options are
    available.
  prefs: []
  type: TYPE_NORMAL
- en: '‘auto’: selects between ‘exact’ and ‘asymptotic’ to achieve reasonably accurate
    results in reasonable time (default)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘asymptotic’: compares the standardized test statistic against the normal distribution'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘exact’: computes the exact *p*-value by comparing the observed \(L\) statistic
    against those realized by all possible permutations of ranks (under the null hypothesis
    that each permutation is equally likely)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**res**PageTrendTestResult'
  prefs: []
  type: TYPE_NORMAL
- en: 'An object containing attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: statisticfloat
  prefs: []
  type: TYPE_NORMAL
- en: Page’s \(L\) test statistic.
  prefs: []
  type: TYPE_NORMAL
- en: pvaluefloat
  prefs: []
  type: TYPE_NORMAL
- en: The associated *p*-value
  prefs: []
  type: TYPE_NORMAL
- en: method{‘asymptotic’, ‘exact’}
  prefs: []
  type: TYPE_NORMAL
- en: The method used to compute the *p*-value
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`rankdata`](scipy.stats.rankdata.html#scipy.stats.rankdata "scipy.stats.rankdata"),
    [`friedmanchisquare`](scipy.stats.friedmanchisquare.html#scipy.stats.friedmanchisquare
    "scipy.stats.friedmanchisquare"), [`spearmanr`](scipy.stats.spearmanr.html#scipy.stats.spearmanr
    "scipy.stats.spearmanr")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: As noted in [[1]](#rb7ca5e705efa-1), “the \(n\) ‘treatments’ could just as well
    represent \(n\) objects or events or performances or persons or trials ranked.”
    Similarly, the \(m\) ‘subjects’ could equally stand for \(m\) “groupings by ability
    or some other control variable, or judges doing the ranking, or random replications
    of some other sort.”
  prefs: []
  type: TYPE_NORMAL
- en: 'The procedure for calculating the \(L\) statistic, adapted from [[1]](#rb7ca5e705efa-1),
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: “Predetermine with careful logic the appropriate hypotheses concerning the predicted
    ordering of the experimental results. If no reasonable basis for ordering any
    treatments is known, the \(L\) test is not appropriate.”
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: “As in other experiments, determine at what level of confidence you will reject
    the null hypothesis that there is no agreement of experimental results with the
    monotonic hypothesis.”
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: “Cast the experimental material into a two-way table of \(n\) columns (treatments,
    objects ranked, conditions) and \(m\) rows (subjects, replication groups, levels
    of control variables).”
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: “When experimental observations are recorded, rank them across each row”, e.g.
    `ranks = scipy.stats.rankdata(data, axis=1)`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: “Add the ranks in each column”, e.g. `colsums = np.sum(ranks, axis=0)`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: “Multiply each sum of ranks by the predicted rank for that same column”, e.g.
    `products = predicted_ranks * colsums`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: “Sum all such products”, e.g. `L = products.sum()`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[[1]](#rb7ca5e705efa-1) continues by suggesting use of the standardized statistic'
  prefs: []
  type: TYPE_NORMAL
- en: \[\chi_L^2 = \frac{\left[12L-3mn(n+1)^2\right]^2}{mn^2(n^2-1)(n+1)}\]
  prefs: []
  type: TYPE_NORMAL
- en: “which is distributed approximately as chi-square with 1 degree of freedom.
    The ordinary use of \(\chi^2\) tables would be equivalent to a two-sided test
    of agreement. If a one-sided test is desired, *as will almost always be the case*,
    the probability discovered in the chi-square table should be *halved*.”
  prefs: []
  type: TYPE_NORMAL
- en: However, this standardized statistic does not distinguish between the observed
    values being well correlated with the predicted ranks and being _anti_-correlated
    with the predicted ranks. Instead, we follow [[2]](#rb7ca5e705efa-2) and calculate
    the standardized statistic
  prefs: []
  type: TYPE_NORMAL
- en: \[\Lambda = \frac{L - E_0}{\sqrt{V_0}},\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(E_0 = \frac{1}{4} mn(n+1)^2\) and \(V_0 = \frac{1}{144} mn^2(n+1)(n^2-1)\),
    “which is asymptotically normal under the null hypothesis”.
  prefs: []
  type: TYPE_NORMAL
- en: The *p*-value for `method='exact'` is generated by comparing the observed value
    of \(L\) against the \(L\) values generated for all \((n!)^m\) possible permutations
    of ranks. The calculation is performed using the recursive method of [5].
  prefs: []
  type: TYPE_NORMAL
- en: The *p*-values are not adjusted for the possibility of ties. When ties are present,
    the reported `'exact'` *p*-values may be somewhat larger (i.e. more conservative)
    than the true *p*-value [[2]](#rb7ca5e705efa-2). The `` 'asymptotic'` `` *p*-values,
    however, tend to be smaller (i.e. less conservative) than the `'exact'` *p*-values.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1] ([1](#id2),[2](#id3),[3](#id4),[4](#id14))'
  prefs: []
  type: TYPE_NORMAL
- en: 'Ellis Batten Page, “Ordered hypotheses for multiple treatments: a significant
    test for linear ranks”, *Journal of the American Statistical Association* 58(301),
    p. 216–230, 1963.'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] ([1](#id5),[2](#id6))'
  prefs: []
  type: TYPE_NORMAL
- en: 'Markus Neuhauser, *Nonparametric Statistical Test: A computational approach*,
    CRC Press, p. 150–152, 2012.'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] ([1](#id12),[2](#id13))'
  prefs: []
  type: TYPE_NORMAL
- en: Statext LLC, “Page’s L Trend Test - Easy Statistics”, *Statext - Statistics
    Study*, [https://www.statext.com/practice/PageTrendTest03.php](https://www.statext.com/practice/PageTrendTest03.php),
    Accessed July 12, 2020.
  prefs: []
  type: TYPE_NORMAL
- en: '[[4](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: “Page’s Trend Test”, *Wikipedia*, WikimediaFoundation, [https://en.wikipedia.org/wiki/Page%27s_trend_test](https://en.wikipedia.org/wiki/Page%27s_trend_test),
    Accessed July 12, 2020.
  prefs: []
  type: TYPE_NORMAL
- en: '[5]'
  prefs: []
  type: TYPE_NORMAL
- en: Robert E. Odeh, “The exact distribution of Page’s L-statistic in the two-way
    layout”, *Communications in Statistics - Simulation and Computation*, 6(1), p.
    49–61, 1977.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'We use the example from [[3]](#rb7ca5e705efa-3): 10 students are asked to rate
    three teaching methods - tutorial, lecture, and seminar - on a scale of 1-5, with
    1 being the lowest and 5 being the highest. We have decided that a confidence
    level of 99% is required to reject the null hypothesis in favor of our alternative:
    that the seminar will have the highest ratings and the tutorial will have the
    lowest. Initially, the data have been tabulated with each row representing an
    individual student’s ratings of the three methods in the following order: tutorial,
    lecture, seminar.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Because the tutorial is hypothesized to have the lowest ratings, the column
    corresponding with tutorial rankings should be first; the seminar is hypothesized
    to have the highest ratings, so its column should be last. Since the columns are
    already arranged in this order of increasing predicted mean, we can pass the table
    directly into [`page_trend_test`](#scipy.stats.page_trend_test "scipy.stats.page_trend_test").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This *p*-value indicates that there is a 0.1819% chance that the \(L\) statistic
    would reach such an extreme value under the null hypothesis. Because 0.1819% is
    less than 1%, we have evidence to reject the null hypothesis in favor of our alternative
    at a 99% confidence level.
  prefs: []
  type: TYPE_NORMAL
- en: 'The value of the \(L\) statistic is 133.5\. To check this manually, we rank
    the data such that high scores correspond with high ranks, settling ties with
    an average rank:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We add the ranks within each column, multiply the sums by the predicted ranks,
    and sum the products.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'As presented in [[3]](#rb7ca5e705efa-3), the asymptotic approximation of the
    *p*-value is the survival function of the normal distribution evaluated at the
    standardized test statistic:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This does not precisely match the *p*-value reported by [`page_trend_test`](#scipy.stats.page_trend_test
    "scipy.stats.page_trend_test") above. The asymptotic distribution is not very
    accurate, nor conservative, for \(m \leq 12\) and \(n \leq 8\), so [`page_trend_test`](#scipy.stats.page_trend_test
    "scipy.stats.page_trend_test") chose to use `method='exact'` based on the dimensions
    of the table and the recommendations in Page’s original paper [[1]](#rb7ca5e705efa-1).
    To override [`page_trend_test`](#scipy.stats.page_trend_test "scipy.stats.page_trend_test")’s
    choice, provide the *method* argument.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: If the data are already ranked, we can pass in the `ranks` instead of the `table`
    to save computation time.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Suppose the raw data had been tabulated in an order different from the order
    of predicted means, say lecture, seminar, tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Since the arrangement of this table is not consistent with the assumed ordering,
    we can either rearrange the table or provide the *predicted_ranks*. Remembering
    that the lecture is predicted to have the middle rank, the seminar the highest,
    and tutorial the lowest, we pass:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
