- en: scipy.signal.resample
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.resample.html#scipy.signal.resample](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.resample.html#scipy.signal.resample)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Resample *x* to *num* samples using Fourier method along the given axis.
  prefs: []
  type: TYPE_NORMAL
- en: The resampled signal starts at the same value as *x* but is sampled with a spacing
    of `len(x) / num * (spacing of x)`. Because a Fourier method is used, the signal
    is assumed to be periodic.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The data to be resampled.
  prefs: []
  type: TYPE_NORMAL
- en: '**num**int'
  prefs: []
  type: TYPE_NORMAL
- en: The number of samples in the resampled signal.
  prefs: []
  type: TYPE_NORMAL
- en: '**t**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If *t* is given, it is assumed to be the equally spaced sample positions associated
    with the signal data in *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The axis of *x* that is resampled. Default is 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**window**array_like, callable, string, float, or tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specifies the window applied to the signal in the Fourier domain. See below
    for details.
  prefs: []
  type: TYPE_NORMAL
- en: '**domain**string, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'A string indicating the domain of the input *x*: `time` Consider the input
    *x* as time-domain (Default), `freq` Consider the input *x* as frequency-domain.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: resampled_x or (resampled_x, resampled_t)
  prefs: []
  type: TYPE_NORMAL
- en: Either the resampled array, or, if *t* was given, a tuple containing the resampled
    array and the corresponding resampled positions.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`decimate`](scipy.signal.decimate.html#scipy.signal.decimate "scipy.signal.decimate")'
  prefs: []
  type: TYPE_NORMAL
- en: Downsample the signal after applying an FIR or IIR filter.
  prefs: []
  type: TYPE_NORMAL
- en: '[`resample_poly`](scipy.signal.resample_poly.html#scipy.signal.resample_poly
    "scipy.signal.resample_poly")'
  prefs: []
  type: TYPE_NORMAL
- en: Resample using polyphase filtering and an FIR filter.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The argument *window* controls a Fourier-domain window that tapers the Fourier
    spectrum before zero-padding to alleviate ringing in the resampled values for
    sampled signals you didn’t intend to be interpreted as band-limited.
  prefs: []
  type: TYPE_NORMAL
- en: If *window* is a function, then it is called with a vector of inputs indicating
    the frequency bins (i.e. fftfreq(x.shape[axis]) ).
  prefs: []
  type: TYPE_NORMAL
- en: If *window* is an array of the same length as *x.shape[axis]* it is assumed
    to be the window to be applied directly in the Fourier domain (with dc and low-frequency
    first).
  prefs: []
  type: TYPE_NORMAL
- en: For any other type of *window*, the function [`scipy.signal.get_window`](scipy.signal.get_window.html#scipy.signal.get_window
    "scipy.signal.get_window") is called to generate the window.
  prefs: []
  type: TYPE_NORMAL
- en: The first sample of the returned vector is the same as the first sample of the
    input vector. The spacing between samples is changed from `dx` to `dx * len(x)
    / num`.
  prefs: []
  type: TYPE_NORMAL
- en: If *t* is not None, then it is used solely to calculate the resampled positions
    *resampled_t*
  prefs: []
  type: TYPE_NORMAL
- en: As noted, [`resample`](#scipy.signal.resample "scipy.signal.resample") uses
    FFT transformations, which can be very slow if the number of input or output samples
    is large and prime; see [`scipy.fft.fft`](scipy.fft.fft.html#scipy.fft.fft "scipy.fft.fft").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that the end of the resampled data rises to meet the first sample of the
    next cycle:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-resample-1.png](../Images/c49e4eb58ddfb9fab69ea84d461112c3.png)'
  prefs: []
  type: TYPE_IMG
