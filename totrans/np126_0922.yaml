- en: Miscellaneous routines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 杂项例程
- en: 原文：[https://numpy.org/doc/1.26/reference/routines.other.html](https://numpy.org/doc/1.26/reference/routines.other.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/routines.other.html](https://numpy.org/doc/1.26/reference/routines.other.html)
- en: Performance tuning
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能调整
- en: '| [`setbufsize`](generated/numpy.setbufsize.html#numpy.setbufsize "numpy.setbufsize")(size)
    | Set the size of the buffer used in ufuncs. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| [`setbufsize`](generated/numpy.setbufsize.html#numpy.setbufsize "numpy.setbufsize")(size)
    | 设置在 ufunc 中使用的缓冲区的大小。 |'
- en: '| [`getbufsize`](generated/numpy.getbufsize.html#numpy.getbufsize "numpy.getbufsize")()
    | Return the size of the buffer used in ufuncs. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`getbufsize`](generated/numpy.getbufsize.html#numpy.getbufsize "numpy.getbufsize")()
    | 返回在 ufunc 中使用的缓冲区的大小。 |'
- en: Memory ranges
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储范围
- en: '| [`shares_memory`](generated/numpy.shares_memory.html#numpy.shares_memory
    "numpy.shares_memory")(a, b, /[, max_work]) | Determine if two arrays share memory.
    |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`shares_memory`](generated/numpy.shares_memory.html#numpy.shares_memory
    "numpy.shares_memory")(a, b, /[, max_work]) | 确定两个数组是否共享内存。 |'
- en: '| [`may_share_memory`](generated/numpy.may_share_memory.html#numpy.may_share_memory
    "numpy.may_share_memory")(a, b, /[, max_work]) | Determine if two arrays might
    share memory |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`may_share_memory`](generated/numpy.may_share_memory.html#numpy.may_share_memory
    "numpy.may_share_memory")(a, b, /[, max_work]) | 确定两个数组是否可能共享内存 |'
- en: '| [`byte_bounds`](generated/numpy.byte_bounds.html#numpy.byte_bounds "numpy.byte_bounds")(a)
    | Returns pointers to the end-points of an array. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`byte_bounds`](generated/numpy.byte_bounds.html#numpy.byte_bounds "numpy.byte_bounds")(a)
    | 返回数组的端点的指针。 |'
- en: Array mixins
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数组混合
- en: '| [`lib.mixins.NDArrayOperatorsMixin`](generated/numpy.lib.mixins.NDArrayOperatorsMixin.html#numpy.lib.mixins.NDArrayOperatorsMixin
    "numpy.lib.mixins.NDArrayOperatorsMixin")() | Mixin defining all operator special
    methods using __array_ufunc__. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.mixins.NDArrayOperatorsMixin`](generated/numpy.lib.mixins.NDArrayOperatorsMixin.html#numpy.lib.mixins.NDArrayOperatorsMixin
    "numpy.lib.mixins.NDArrayOperatorsMixin")() | 使用 __array_ufunc__ 定义所有操作符特殊方法的
    Mixin。 |'
- en: NumPy version comparison
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 版本比较
- en: '| [`lib.NumpyVersion`](generated/numpy.lib.NumpyVersion.html#numpy.lib.NumpyVersion
    "numpy.lib.NumpyVersion")(vstring) | Parse and compare numpy version strings.
    |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.NumpyVersion`](generated/numpy.lib.NumpyVersion.html#numpy.lib.NumpyVersion
    "numpy.lib.NumpyVersion")(vstring) | 解析和比较 numpy 版本字符串。 |'
- en: Utility
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实用程序
- en: '| [`get_include`](generated/numpy.get_include.html#numpy.get_include "numpy.get_include")()
    | Return the directory that contains the NumPy *.h header files. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`get_include`](generated/numpy.get_include.html#numpy.get_include "numpy.get_include")()
    | 返回包含 NumPy *.h 头文件的目录。 |'
- en: '| [`show_config`](generated/numpy.show_config.html#numpy.show_config "numpy.show_config")([mode])
    | Show libraries and system information on which NumPy was built and is being
    used |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`show_config`](generated/numpy.show_config.html#numpy.show_config "numpy.show_config")([mode])
    | 显示构建和使用 NumPy 的库和系统信息 |'
- en: '| [`show_runtime`](generated/numpy.show_runtime.html#numpy.show_runtime "numpy.show_runtime")()
    | Print information about various resources in the system including available
    intrinsic support and BLAS/LAPACK library in use |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`show_runtime`](generated/numpy.show_runtime.html#numpy.show_runtime "numpy.show_runtime")()
    | 打印系统中各种资源的信息，包括可用的内在支持和正在使用的 BLAS/LAPACK 库 |'
- en: '| [`deprecate`](generated/numpy.deprecate.html#numpy.deprecate "numpy.deprecate")(*args, **kwargs)
    | Issues a DeprecationWarning, adds warning to *old_name*''s docstring, rebinds
    `old_name.__name__` and returns the new function object. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`deprecate`](generated/numpy.deprecate.html#numpy.deprecate "numpy.deprecate")(*args, **kwargs)
    | 发出 DeprecationWarning，将警告添加到 *old_name* 的文档字符串中，重新绑定 `old_name.__name__` 并返回新的函数对象。
    |'
- en: '| [`deprecate_with_doc`](generated/numpy.deprecate_with_doc.html#numpy.deprecate_with_doc
    "numpy.deprecate_with_doc")(msg) | Deprecates a function and includes the deprecation
    in its docstring. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`deprecate_with_doc`](generated/numpy.deprecate_with_doc.html#numpy.deprecate_with_doc
    "numpy.deprecate_with_doc")(msg) | 废弃一个函数并在其文档字符串中包含弃用信息。 |'
- en: '| [`broadcast_shapes`](generated/numpy.broadcast_shapes.html#numpy.broadcast_shapes
    "numpy.broadcast_shapes")(*args) | Broadcast the input shapes into a single shape.
    |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`broadcast_shapes`](generated/numpy.broadcast_shapes.html#numpy.broadcast_shapes
    "numpy.broadcast_shapes")(*args) | 将输入形状广播到单个形状。 |'
- en: Matlab-like Functions
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类似于 Matlab 的函数
- en: '| [`who`](generated/numpy.who.html#numpy.who "numpy.who")([vardict]) | Print
    the NumPy arrays in the given dictionary. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`who`](generated/numpy.who.html#numpy.who "numpy.who")([vardict]) | 打印给定字典中的
    NumPy 数组。 |'
- en: '| [`disp`](generated/numpy.disp.html#numpy.disp "numpy.disp")(mesg[, device, linefeed])
    | Display a message on a device. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`disp`](generated/numpy.disp.html#numpy.disp "numpy.disp")(mesg[, device, linefeed])
    | 在设备上显示消息。 |'
- en: '### Exceptions and Warnings ([`numpy.exceptions`](#module-numpy.exceptions
    "numpy.exceptions"))'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '### 异常和警告 ([`numpy.exceptions`](#module-numpy.exceptions "numpy.exceptions"))'
- en: General exceptions used by NumPy. Note that some exceptions may be module specific,
    such as linear algebra errors.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 中使用的常规异常。请注意，一些异常可能是模块特定的，比如线性代数错误。
- en: 'New in version NumPy: 1.25'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 版本新功能：1.25
- en: The exceptions module is new in NumPy 1.25\. Older exceptions remain available
    through the main NumPy namespace for compatibility.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 异常模块是 NumPy 1.25 版本中的新功能。较旧的异常仍可通过主 NumPy 命名空间进行兼容性访问。
- en: Warnings
  id: totrans-27
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 警告
- en: '| [`ComplexWarning`](generated/numpy.exceptions.ComplexWarning.html#numpy.exceptions.ComplexWarning
    "numpy.exceptions.ComplexWarning") | The warning raised when casting a complex
    dtype to a real dtype. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`ComplexWarning`](generated/numpy.exceptions.ComplexWarning.html#numpy.exceptions.ComplexWarning
    "numpy.exceptions.ComplexWarning") | 将复数 dtype 转换为实数 dtype 时引发的警告。|'
- en: '| [`VisibleDeprecationWarning`](generated/numpy.exceptions.VisibleDeprecationWarning.html#numpy.exceptions.VisibleDeprecationWarning
    "numpy.exceptions.VisibleDeprecationWarning") | Visible deprecation warning. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`VisibleDeprecationWarning`](generated/numpy.exceptions.VisibleDeprecationWarning.html#numpy.exceptions.VisibleDeprecationWarning
    "numpy.exceptions.VisibleDeprecationWarning") | 明显弃用警告。|'
- en: Exceptions
  id: totrans-30
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 异常
- en: '| [`AxisError`](generated/numpy.exceptions.AxisError.html#numpy.exceptions.AxisError
    "numpy.exceptions.AxisError")(axis[, ndim, msg_prefix]) | Axis supplied was invalid.
    |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`AxisError`](generated/numpy.exceptions.AxisError.html#numpy.exceptions.AxisError
    "numpy.exceptions.AxisError")(axis[, ndim, msg_prefix]) | 提供的轴无效。 |'
- en: '| [`DTypePromotionError`](generated/numpy.exceptions.DTypePromotionError.html#numpy.exceptions.DTypePromotionError
    "numpy.exceptions.DTypePromotionError") | Multiple DTypes could not be converted
    to a common one. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`DTypePromotionError`](generated/numpy.exceptions.DTypePromotionError.html#numpy.exceptions.DTypePromotionError
    "numpy.exceptions.DTypePromotionError") | 无法将多个 DTypes 转换为公共类型。|'
- en: '| [`TooHardError`](generated/numpy.exceptions.TooHardError.html#numpy.exceptions.TooHardError
    "numpy.exceptions.TooHardError") | max_work was exceeded. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`TooHardError`](generated/numpy.exceptions.TooHardError.html#numpy.exceptions.TooHardError
    "numpy.exceptions.TooHardError") | `max_work` 已超出。|'
- en: '### DType classes and utility ([`numpy.dtypes`](#module-numpy.dtypes "numpy.dtypes"))'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '### DType 类和实用工具([`numpy.dtypes`](#module-numpy.dtypes "numpy.dtypes"))'
- en: This module is home to specific dtypes related functionality and their classes.
    For more general information about dtypes, also see [`numpy.dtype`](generated/numpy.dtype.html#numpy.dtype
    "numpy.dtype") and [Data type objects (dtype)](arrays.dtypes.html#arrays-dtypes).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块提供了特定于 dtypes 的功能和它们的类。关于 dtypes 的更一般信息，还请参阅 [`numpy.dtype`](generated/numpy.dtype.html#numpy.dtype
    "numpy.dtype") 和 [数据类型对象（dtype）](arrays.dtypes.html#arrays-dtypes)。
- en: Similar to the builtin `types` module, this submodule defines types (classes)
    that are not widely used directly.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 与内置的 `types` 模块类似，此子模块定义了直接使用较少的类型（类）。
- en: 'New in version NumPy: 1.25'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 版本新功能：1.25
- en: The dtypes module is new in NumPy 1.25\. Previously DType classes were only
    accessible indirectly.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: dtypes 模块是 NumPy 1.25 版本中的新功能。之前 DType 类只能间接访问。
- en: DType classes
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DType 类
- en: The following are the classes of the corresponding NumPy dtype instances and
    NumPy scalar types. The classes can be used in `isinstance` checks and can also
    be instantiated or used directly. Direct use of these classes is not typical,
    since their scalar counterparts (e.g. `np.float64`) or strings like `"float64"`
    can be used.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对应 NumPy dtype 实例和 NumPy 标量类型的类。这些类可用于 `isinstance` 检查，也可以直接实例化或使用。直接使用这些类并不典型，因为它们的标量对应项（例如
    `np.float64`）或类似 `"float64"` 的字符串可以用作替代。
- en: '| Group | DType class |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 分组 | DType 类 |'
- en: '| --- | --- |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Boolean | `BoolDType` |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 布尔 | `BoolDType` |'
- en: '| Bit-sized integers | `Int8DType`, `UInt8DType`, `Int16DType`, `UInt16DType`,
    `Int32DType`, `UInt32DType`, `Int64DType`, `UInt64DType` |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 比特大小整数 | `Int8DType`, `UInt8DType`, `Int16DType`, `UInt16DType`, `Int32DType`,
    `UInt32DType`, `Int64DType`, `UInt64DType` |'
- en: '| C-named integers (may be aliases) | `ByteDType`, `UByteDType`, `ShortDType`,
    `UShortDType`, `IntDType`, `UIntDType`, `LongDType`, `ULongDType`, `LongLongDType`,
    `ULongLongDType` |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| C 命名整数（可以是别名） | `ByteDType`, `UByteDType`, `ShortDType`, `UShortDType`, `IntDType`,
    `UIntDType`, `LongDType`, `ULongDType`, `LongLongDType`, `ULongLongDType` |'
- en: '| Floating point | `Float16DType`, `Float32DType`, `Float64DType`, `LongDoubleDType`
    |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 浮点数 | `Float16DType`, `Float32DType`, `Float64DType`, `LongDoubleDType` |'
- en: '| Complex | `Complex64DType`, `Complex128DType`, `CLongDoubleDType` |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 复数 | `Complex64DType`, `Complex128DType`, `CLongDoubleDType` |'
- en: '| Strings | `BytesDType`, `BytesDType` |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| 字符串 | `BytesDType`, `BytesDType` |'
- en: '| Times | `DateTime64DType`, `TimeDelta64DType` |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 时间 | `DateTime64DType`, `TimeDelta64DType` |'
- en: '| Others | `ObjectDType`, `VoidDType` |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 其他 | `ObjectDType`, `VoidDType` |'
- en: Performance tuning
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能调优
- en: '| [`setbufsize`](generated/numpy.setbufsize.html#numpy.setbufsize "numpy.setbufsize")(size)
    | Set the size of the buffer used in ufuncs. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`setbufsize`](generated/numpy.setbufsize.html#numpy.setbufsize "numpy.setbufsize")(size)
    | 设置 ufuncs 中使用的缓冲区的大小。 |'
- en: '| [`getbufsize`](generated/numpy.getbufsize.html#numpy.getbufsize "numpy.getbufsize")()
    | Return the size of the buffer used in ufuncs. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`getbufsize`](generated/numpy.getbufsize.html#numpy.getbufsize "numpy.getbufsize")()
    | 返回 ufuncs 中使用的缓冲区的大小。 |'
- en: Memory ranges
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内存范围
- en: '| [`shares_memory`](generated/numpy.shares_memory.html#numpy.shares_memory
    "numpy.shares_memory")(a, b, /[, max_work]) | Determine if two arrays share memory.
    |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`shares_memory`](generated/numpy.shares_memory.html#numpy.shares_memory
    "numpy.shares_memory")(a, b, /[, max_work]) | 确定两个数组是否共享内存。 |'
- en: '| [`may_share_memory`](generated/numpy.may_share_memory.html#numpy.may_share_memory
    "numpy.may_share_memory")(a, b, /[, max_work]) | Determine if two arrays might
    share memory |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`may_share_memory`](generated/numpy.may_share_memory.html#numpy.may_share_memory
    "numpy.may_share_memory")(a, b, /[,��max_work]) | 确定两个数组是否可能共享内存 |'
- en: '| [`byte_bounds`](generated/numpy.byte_bounds.html#numpy.byte_bounds "numpy.byte_bounds")(a)
    | Returns pointers to the end-points of an array. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`byte_bounds`](generated/numpy.byte_bounds.html#numpy.byte_bounds "numpy.byte_bounds")(a)
    | 返回数组的端点指针。 |'
- en: Array mixins
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数组混合类
- en: '| [`lib.mixins.NDArrayOperatorsMixin`](generated/numpy.lib.mixins.NDArrayOperatorsMixin.html#numpy.lib.mixins.NDArrayOperatorsMixin
    "numpy.lib.mixins.NDArrayOperatorsMixin")() | Mixin defining all operator special
    methods using __array_ufunc__. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.mixins.NDArrayOperatorsMixin`](generated/numpy.lib.mixins.NDArrayOperatorsMixin.html#numpy.lib.mixins.NDArrayOperatorsMixin
    "numpy.lib.mixins.NDArrayOperatorsMixin")() | 使用 __array_ufunc__ 定义所有操作特殊方法的混合类。
    |'
- en: NumPy version comparison
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NumPy 版本比较
- en: '| [`lib.NumpyVersion`](generated/numpy.lib.NumpyVersion.html#numpy.lib.NumpyVersion
    "numpy.lib.NumpyVersion")(vstring) | Parse and compare numpy version strings.
    |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`lib.NumpyVersion`](generated/numpy.lib.NumpyVersion.html#numpy.lib.NumpyVersion
    "numpy.lib.NumpyVersion")(vstring) | 解析和比较 NumPy 版本字符串。 |'
- en: Utility
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实用工具
- en: '| [`get_include`](generated/numpy.get_include.html#numpy.get_include "numpy.get_include")()
    | Return the directory that contains the NumPy *.h header files. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`get_include`](generated/numpy.get_include.html#numpy.get_include "numpy.get_include")()
    | 返回包含 NumPy *.h 头文件的目录。 |'
- en: '| [`show_config`](generated/numpy.show_config.html#numpy.show_config "numpy.show_config")([mode])
    | Show libraries and system information on which NumPy was built and is being
    used |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`show_config`](generated/numpy.show_config.html#numpy.show_config "numpy.show_config")([mode])
    | 显示 NumPy 构建和使用的库和系统信息 |'
- en: '| [`show_runtime`](generated/numpy.show_runtime.html#numpy.show_runtime "numpy.show_runtime")()
    | Print information about various resources in the system including available
    intrinsic support and BLAS/LAPACK library in use |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`show_runtime`](generated/numpy.show_runtime.html#numpy.show_runtime "numpy.show_runtime")()
    | 打印系统中各种资源的信息，包括可用的内在支持和正在使用的 BLAS/LAPACK 库 |'
- en: '| [`deprecate`](generated/numpy.deprecate.html#numpy.deprecate "numpy.deprecate")(*args, **kwargs)
    | Issues a DeprecationWarning, adds warning to *old_name*''s docstring, rebinds
    `old_name.__name__` and returns the new function object. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`deprecate`](generated/numpy.deprecate.html#numpy.deprecate "numpy.deprecate")(*args, **kwargs)
    | 发出 DeprecationWarning，将警告添加到 *old_name* 的文档字符串，重新绑定 `old_name.__name__` 并返回新的函数对象。
    |'
- en: '| [`deprecate_with_doc`](generated/numpy.deprecate_with_doc.html#numpy.deprecate_with_doc
    "numpy.deprecate_with_doc")(msg) | Deprecates a function and includes the deprecation
    in its docstring. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`deprecate_with_doc`](generated/numpy.deprecate_with_doc.html#numpy.deprecate_with_doc
    "numpy.deprecate_with_doc")(msg) | 弃用一个函数并在其文档中包含该弃用信息。 |'
- en: '| [`broadcast_shapes`](generated/numpy.broadcast_shapes.html#numpy.broadcast_shapes
    "numpy.broadcast_shapes")(*args) | Broadcast the input shapes into a single shape.
    |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`broadcast_shapes`](generated/numpy.broadcast_shapes.html#numpy.broadcast_shapes
    "numpy.broadcast_shapes")(*args) | 将输入形状广播为单个形状。 |'
- en: Matlab-like Functions
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类似 Matlab 的函数
- en: '| [`who`](generated/numpy.who.html#numpy.who "numpy.who")([vardict]) | Print
    the NumPy arrays in the given dictionary. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`who`](generated/numpy.who.html#numpy.who "numpy.who")([vardict]) | 打印给定字典中的
    NumPy 数组。 |'
- en: '| [`disp`](generated/numpy.disp.html#numpy.disp "numpy.disp")(mesg[, device, linefeed])
    | Display a message on a device. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`disp`](generated/numpy.disp.html#numpy.disp "numpy.disp")(mesg[, device, linefeed])
    | 在设备上显示消息。 |'
- en: '### Exceptions and Warnings ([`numpy.exceptions`](#module-numpy.exceptions
    "numpy.exceptions"))'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '### 异常和警告 ([`numpy.exceptions`](#module-numpy.exceptions "numpy.exceptions"))'
- en: General exceptions used by NumPy. Note that some exceptions may be module specific,
    such as linear algebra errors.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 使用的常见异常。请注意，有些异常可能是特定于模块的，例如线性代数错误。
- en: 'New in version NumPy: 1.25'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 版本 1.25 新功能
- en: The exceptions module is new in NumPy 1.25\. Older exceptions remain available
    through the main NumPy namespace for compatibility.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 异常模块是NumPy 1.25中的新内容。 以前版本的异常仍通过主要的NumPy命名空间可用，以确保兼容性。
- en: Warnings
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 警告
- en: '| [`ComplexWarning`](generated/numpy.exceptions.ComplexWarning.html#numpy.exceptions.ComplexWarning
    "numpy.exceptions.ComplexWarning") | The warning raised when casting a complex
    dtype to a real dtype. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`ComplexWarning`](generated/numpy.exceptions.ComplexWarning.html#numpy.exceptions.ComplexWarning
    "numpy.exceptions.ComplexWarning") | 当将复杂dtype转换为实数dtype时引发的警告。 |'
- en: '| [`VisibleDeprecationWarning`](generated/numpy.exceptions.VisibleDeprecationWarning.html#numpy.exceptions.VisibleDeprecationWarning
    "numpy.exceptions.VisibleDeprecationWarning") | Visible deprecation warning. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`VisibleDeprecationWarning`](generated/numpy.exceptions.VisibleDeprecationWarning.html#numpy.exceptions.VisibleDeprecationWarning
    "numpy.exceptions.VisibleDeprecationWarning") | 可见性废弃警告。 |'
- en: Exceptions
  id: totrans-79
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 异常
- en: '| [`AxisError`](generated/numpy.exceptions.AxisError.html#numpy.exceptions.AxisError
    "numpy.exceptions.AxisError")(axis[, ndim, msg_prefix]) | Axis supplied was invalid.
    |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`AxisError`](generated/numpy.exceptions.AxisError.html#numpy.exceptions.AxisError
    "numpy.exceptions.AxisError")(axis[, ndim, msg_prefix]) | 提供的轴无效。 |'
- en: '| [`DTypePromotionError`](generated/numpy.exceptions.DTypePromotionError.html#numpy.exceptions.DTypePromotionError
    "numpy.exceptions.DTypePromotionError") | Multiple DTypes could not be converted
    to a common one. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`DTypePromotionError`](generated/numpy.exceptions.DTypePromotionError.html#numpy.exceptions.DTypePromotionError
    "numpy.exceptions.DTypePromotionError") | 无法将多个DType转换为共同的一个。 |'
- en: '| [`TooHardError`](generated/numpy.exceptions.TooHardError.html#numpy.exceptions.TooHardError
    "numpy.exceptions.TooHardError") | max_work was exceeded. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`TooHardError`](generated/numpy.exceptions.TooHardError.html#numpy.exceptions.TooHardError
    "numpy.exceptions.TooHardError") | 超过了最大工作量。 |'
- en: '### DType classes and utility ([`numpy.dtypes`](#module-numpy.dtypes "numpy.dtypes"))'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '### DType 类和实用程序（[`numpy.dtypes`](#module-numpy.dtypes "numpy.dtypes"))'
- en: This module is home to specific dtypes related functionality and their classes.
    For more general information about dtypes, also see [`numpy.dtype`](generated/numpy.dtype.html#numpy.dtype
    "numpy.dtype") and [Data type objects (dtype)](arrays.dtypes.html#arrays-dtypes).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块包含与特定dtype相关的功能和类。 关于dtype的更一般信息，请参阅[`numpy.dtype`](generated/numpy.dtype.html#numpy.dtype
    "numpy.dtype")和[数据类型对象（dtype）](arrays.dtypes.html#arrays-dtypes)。
- en: Similar to the builtin `types` module, this submodule defines types (classes)
    that are not widely used directly.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于内置的`types`模块，此子模块定义了不常直接使用的类型（类）。
- en: 'New in version NumPy: 1.25'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy新版本：1.25
- en: The dtypes module is new in NumPy 1.25\. Previously DType classes were only
    accessible indirectly.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: dtypes模块是NumPy 1.25中的新内容。 以前，DType类只能间接访问。
- en: DType classes
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DType 类
- en: The following are the classes of the corresponding NumPy dtype instances and
    NumPy scalar types. The classes can be used in `isinstance` checks and can also
    be instantiated or used directly. Direct use of these classes is not typical,
    since their scalar counterparts (e.g. `np.float64`) or strings like `"float64"`
    can be used.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是相应的NumPy dtype实例和NumPy标量类型的类。 可以在`isinstance`检查中使用这些类，也可以直接实例化或使用。 通常不会直接使用这些类，因为可以使用它们的标量对应物（例如`np.float64`）或像`"float64"`这样的字符串。
- en: '| Group | DType class |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 分组 | DType 类 |'
- en: '| --- | --- |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Boolean | `BoolDType` |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 布尔 | `BoolDType` |'
- en: '| Bit-sized integers | `Int8DType`, `UInt8DType`, `Int16DType`, `UInt16DType`,
    `Int32DType`, `UInt32DType`, `Int64DType`, `UInt64DType` |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 位大小整数 | `Int8DType`, `UInt8DType`, `Int16DType`, `UInt16DType`, `Int32DType`,
    `UInt32DType`, `Int64DType`, `UInt64DType` |'
- en: '| C-named integers (may be aliases) | `ByteDType`, `UByteDType`, `ShortDType`,
    `UShortDType`, `IntDType`, `UIntDType`, `LongDType`, `ULongDType`, `LongLongDType`,
    `ULongLongDType` |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 以C命名的整数（可能是别名） | `ByteDType`, `UByteDType`, `ShortDType`, `UShortDType`,
    `IntDType`, `UIntDType`, `LongDType`, `ULongDType`, `LongLongDType`, `ULongLongDType`
    |'
- en: '| Floating point | `Float16DType`, `Float32DType`, `Float64DType`, `LongDoubleDType`
    |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 浮点数 | `Float16DType`, `Float32DType`, `Float64DType`, `LongDoubleDType` |'
- en: '| Complex | `Complex64DType`, `Complex128DType`, `CLongDoubleDType` |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 复数 | `Complex64DType`, `Complex128DType`, `CLongDoubleDType` |'
- en: '| Strings | `BytesDType`, `BytesDType` |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 字符串 | `BytesDType`, `BytesDType` |'
- en: '| Times | `DateTime64DType`, `TimeDelta64DType` |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| Times | `DateTime64DType`, `TimeDelta64DType` |'
- en: '| Others | `ObjectDType`, `VoidDType` |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 其他 | `ObjectDType`, `VoidDType` |'
- en: Exceptions and Warnings ([`numpy.exceptions`](#module-numpy.exceptions "numpy.exceptions"))
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异常与警告（[`numpy.exceptions`](#module-numpy.exceptions "numpy.exceptions"))
- en: General exceptions used by NumPy. Note that some exceptions may be module specific,
    such as linear algebra errors.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy使用的常规异常。 请注意，一些异常可能是特定于模块的，例如线性代数错误。
- en: 'New in version NumPy: 1.25'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy新版本：1.25
- en: The exceptions module is new in NumPy 1.25\. Older exceptions remain available
    through the main NumPy namespace for compatibility.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 异常模块是 NumPy 1.25 中的新内容。较旧的异常保留在主 NumPy 命名空间中以确保兼容性。
- en: Warnings
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 警告
- en: '| [`ComplexWarning`](generated/numpy.exceptions.ComplexWarning.html#numpy.exceptions.ComplexWarning
    "numpy.exceptions.ComplexWarning") | The warning raised when casting a complex
    dtype to a real dtype. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`ComplexWarning`](generated/numpy.exceptions.ComplexWarning.html#numpy.exceptions.ComplexWarning
    "numpy.exceptions.ComplexWarning") | 将复数数据类型转换为实数数据类型时引发警告。 |'
- en: '| [`VisibleDeprecationWarning`](generated/numpy.exceptions.VisibleDeprecationWarning.html#numpy.exceptions.VisibleDeprecationWarning
    "numpy.exceptions.VisibleDeprecationWarning") | Visible deprecation warning. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`VisibleDeprecationWarning`](generated/numpy.exceptions.VisibleDeprecationWarning.html#numpy.exceptions.VisibleDeprecationWarning
    "numpy.exceptions.VisibleDeprecationWarning") | 可见的已弃用警告。 |'
- en: Exceptions
  id: totrans-107
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 异常
- en: '| [`AxisError`](generated/numpy.exceptions.AxisError.html#numpy.exceptions.AxisError
    "numpy.exceptions.AxisError")(axis[, ndim, msg_prefix]) | Axis supplied was invalid.
    |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`AxisError`](generated/numpy.exceptions.AxisError.html#numpy.exceptions.AxisError
    "numpy.exceptions.AxisError")(axis[, ndim, msg_prefix]) | 供应的轴无效。 |'
- en: '| [`DTypePromotionError`](generated/numpy.exceptions.DTypePromotionError.html#numpy.exceptions.DTypePromotionError
    "numpy.exceptions.DTypePromotionError") | Multiple DTypes could not be converted
    to a common one. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`DTypePromotionError`](generated/numpy.exceptions.DTypePromotionError.html#numpy.exceptions.DTypePromotionError
    "numpy.exceptions.DTypePromotionError") | 无法将多个数据类型转换为公共数据类型。 |'
- en: '| [`TooHardError`](generated/numpy.exceptions.TooHardError.html#numpy.exceptions.TooHardError
    "numpy.exceptions.TooHardError") | max_work was exceeded. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`TooHardError`](generated/numpy.exceptions.TooHardError.html#numpy.exceptions.TooHardError
    "numpy.exceptions.TooHardError") | 超出最大工作量。 |'
- en: Warnings
  id: totrans-111
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 警告
- en: '| [`ComplexWarning`](generated/numpy.exceptions.ComplexWarning.html#numpy.exceptions.ComplexWarning
    "numpy.exceptions.ComplexWarning") | The warning raised when casting a complex
    dtype to a real dtype. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`ComplexWarning`](generated/numpy.exceptions.ComplexWarning.html#numpy.exceptions.ComplexWarning
    "numpy.exceptions.ComplexWarning") | 将复数数据类型转换为实数数据类型时引发警告。 |'
- en: '| [`VisibleDeprecationWarning`](generated/numpy.exceptions.VisibleDeprecationWarning.html#numpy.exceptions.VisibleDeprecationWarning
    "numpy.exceptions.VisibleDeprecationWarning") | Visible deprecation warning. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`VisibleDeprecationWarning`](generated/numpy.exceptions.VisibleDeprecationWarning.html#numpy.exceptions.VisibleDeprecationWarning
    "numpy.exceptions.VisibleDeprecationWarning") | 可见的已弃用警告。 |'
- en: Exceptions
  id: totrans-114
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 异常
- en: '| [`AxisError`](generated/numpy.exceptions.AxisError.html#numpy.exceptions.AxisError
    "numpy.exceptions.AxisError")(axis[, ndim, msg_prefix]) | Axis supplied was invalid.
    |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`AxisError`](generated/numpy.exceptions.AxisError.html#numpy.exceptions.AxisError
    "numpy.exceptions.AxisError")(axis[, ndim, msg_prefix]) | 供应的轴无效。 |'
- en: '| [`DTypePromotionError`](generated/numpy.exceptions.DTypePromotionError.html#numpy.exceptions.DTypePromotionError
    "numpy.exceptions.DTypePromotionError") | Multiple DTypes could not be converted
    to a common one. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`DTypePromotionError`](generated/numpy.exceptions.DTypePromotionError.html#numpy.exceptions.DTypePromotionError
    "numpy.exceptions.DTypePromotionError") | 无法将多个数据类型转换为公共数据类型。 |'
- en: '| [`TooHardError`](generated/numpy.exceptions.TooHardError.html#numpy.exceptions.TooHardError
    "numpy.exceptions.TooHardError") | max_work was exceeded. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`TooHardError`](generated/numpy.exceptions.TooHardError.html#numpy.exceptions.TooHardError
    "numpy.exceptions.TooHardError") | 超出最大工作量。 |'
- en: DType classes and utility ([`numpy.dtypes`](#module-numpy.dtypes "numpy.dtypes"))
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据类型类和实用程序([`numpy.dtypes`](#module-numpy.dtypes "numpy.dtypes"))
- en: This module is home to specific dtypes related functionality and their classes.
    For more general information about dtypes, also see [`numpy.dtype`](generated/numpy.dtype.html#numpy.dtype
    "numpy.dtype") and [Data type objects (dtype)](arrays.dtypes.html#arrays-dtypes).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块包含特定的数据类型相关功能及其类。有关数据类型的更一般信息，还请参阅[`numpy.dtype`](generated/numpy.dtype.html#numpy.dtype
    "numpy.dtype")和[数据类型对象（dtype）](arrays.dtypes.html#arrays-dtypes)。
- en: Similar to the builtin `types` module, this submodule defines types (classes)
    that are not widely used directly.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 与内置的`types`模块类似，这个子模块定义了不常直接使用的类型（类）。
- en: 'New in version NumPy: 1.25'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 版本更新内容：1.25
- en: The dtypes module is new in NumPy 1.25\. Previously DType classes were only
    accessible indirectly.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型模块是 NumPy 1.25 中的新内容。以前的数据类型类只能间接访问。
- en: DType classes
  id: totrans-123
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据类型类
- en: The following are the classes of the corresponding NumPy dtype instances and
    NumPy scalar types. The classes can be used in `isinstance` checks and can also
    be instantiated or used directly. Direct use of these classes is not typical,
    since their scalar counterparts (e.g. `np.float64`) or strings like `"float64"`
    can be used.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是相应的NumPy dtype实例和NumPy标量类型的类。可以在`isinstance`检查中使用这些类，也可以直接实例化或使用。直接使用这些类并不典型，因为可以使用它们的标量对应物（例如`np.float64`）或类似`"float64"`的字符串。
- en: '| Group | DType class |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: 类别 | DType类 |
- en: '| --- | --- |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '--- | --- |'
- en: '| Boolean | `BoolDType` |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: 布尔类型 | `BoolDType` |
- en: '| Bit-sized integers | `Int8DType`, `UInt8DType`, `Int16DType`, `UInt16DType`,
    `Int32DType`, `UInt32DType`, `Int64DType`, `UInt64DType` |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: 位大小的整数 | `Int8DType`, `UInt8DType`, `Int16DType`, `UInt16DType`, `Int32DType`,
    `UInt32DType`, `Int64DType`, `UInt64DType` |
- en: '| C-named integers (may be aliases) | `ByteDType`, `UByteDType`, `ShortDType`,
    `UShortDType`, `IntDType`, `UIntDType`, `LongDType`, `ULongDType`, `LongLongDType`,
    `ULongLongDType` |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: C命名整数（可能是别名） | `ByteDType`, `UByteDType`, `ShortDType`, `UShortDType`, `IntDType`,
    `UIntDType`, `LongDType`, `ULongDType`, `LongLongDType`, `ULongLongDType` |
- en: '| Floating point | `Float16DType`, `Float32DType`, `Float64DType`, `LongDoubleDType`
    |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: 浮点数 | `Float16DType`, `Float32DType`, `Float64DType`, `LongDoubleDType` |
- en: '| Complex | `Complex64DType`, `Complex128DType`, `CLongDoubleDType` |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: 复数 | `Complex64DType`, `Complex128DType`, `CLongDoubleDType` |
- en: '| Strings | `BytesDType`, `BytesDType` |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: 字符串 | `BytesDType`, `BytesDType` |
- en: '| Times | `DateTime64DType`, `TimeDelta64DType` |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: 时间 | `DateTime64DType`, `TimeDelta64DType` |
- en: '| Others | `ObjectDType`, `VoidDType` |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: 其他 | `ObjectDType`, `VoidDType` |
- en: DType classes
  id: totrans-135
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DType类
- en: The following are the classes of the corresponding NumPy dtype instances and
    NumPy scalar types. The classes can be used in `isinstance` checks and can also
    be instantiated or used directly. Direct use of these classes is not typical,
    since their scalar counterparts (e.g. `np.float64`) or strings like `"float64"`
    can be used.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是相应的NumPy dtype实例和NumPy标量类型的类。可以在`isinstance`检查中使用这些类，也可以直接实例化或使用。直接使用这些类并不典型，因为可以使用它们的标量对应物（例如`np.float64`）或类似`"float64"`的字符串。
- en: '| Group | DType class |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: 类别 | DType类 |
- en: '| --- | --- |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '--- | --- |'
- en: '| Boolean | `BoolDType` |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: 布尔类型 | `BoolDType` |
- en: '| Bit-sized integers | `Int8DType`, `UInt8DType`, `Int16DType`, `UInt16DType`,
    `Int32DType`, `UInt32DType`, `Int64DType`, `UInt64DType` |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: 位大小的整数 | `Int8DType`, `UInt8DType`, `Int16DType`, `UInt16DType`, `Int32DType`,
    `UInt32DType`, `Int64DType`, `UInt64DType` |
- en: '| C-named integers (may be aliases) | `ByteDType`, `UByteDType`, `ShortDType`,
    `UShortDType`, `IntDType`, `UIntDType`, `LongDType`, `ULongDType`, `LongLongDType`,
    `ULongLongDType` |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: C命名整数（可能是别名） | `ByteDType`, `UByteDType`, `ShortDType`, `UShortDType`, `IntDType`,
    `UIntDType`, `LongDType`, `ULongDType`, `LongLongDType`, `ULongLongDType` |
- en: '| Floating point | `Float16DType`, `Float32DType`, `Float64DType`, `LongDoubleDType`
    |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: 浮点数 | `Float16DType`, `Float32DType`, `Float64DType`, `LongDoubleDType` |
- en: '| Complex | `Complex64DType`, `Complex128DType`, `CLongDoubleDType` |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: 复数 | `Complex64DType`, `Complex128DType`, `CLongDoubleDType` |
- en: '| Strings | `BytesDType`, `BytesDType` |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: 字符串 | `BytesDType`, `BytesDType` |
- en: '| Times | `DateTime64DType`, `TimeDelta64DType` |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: 时间 | `DateTime64DType`, `TimeDelta64DType` |
- en: '| Others | `ObjectDType`, `VoidDType` |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: 其他 | `ObjectDType`, `VoidDType` |
