- en: Model Prediction with Ultralytics YOLO
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ultralytics YOLO进行模型预测
- en: 原文：[`docs.ultralytics.com/modes/predict/`](https://docs.ultralytics.com/modes/predict/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`docs.ultralytics.com/modes/predict/`](https://docs.ultralytics.com/modes/predict/)
- en: '![Ultralytics YOLO ecosystem and integrations](img/1933b0eeaf180eaa6d0c37f29931fb7d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Ultralytics YOLO生态系统和集成](img/1933b0eeaf180eaa6d0c37f29931fb7d.png)'
- en: Introduction
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍
- en: In the world of machine learning and computer vision, the process of making
    sense out of visual data is called 'inference' or 'prediction'. Ultralytics YOLOv8
    offers a powerful feature known as **predict mode** that is tailored for high-performance,
    real-time inference on a wide range of data sources.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习和计算机视觉领域，从视觉数据中获取信息的过程称为“推理”或“预测”。Ultralytics YOLOv8提供了一个强大的功能，称为**预测模式**，专为在广泛的数据源上进行高性能、实时推理而设计。
- en: '[`www.youtube.com/embed/QtsI0TnwDZs?si=ljesw75cMO2Eas14`](https://www.youtube.com/embed/QtsI0TnwDZs?si=ljesw75cMO2Eas14)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`www.youtube.com/embed/QtsI0TnwDZs?si=ljesw75cMO2Eas14`](https://www.youtube.com/embed/QtsI0TnwDZs?si=ljesw75cMO2Eas14)'
- en: '**Watch:** How to Extract the Outputs from Ultralytics YOLOv8 Model for Custom
    Projects.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**观看：** 如何从Ultralytics YOLOv8模型中提取自定义项目的输出。'
- en: Real-world Applications
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实际应用场景
- en: '| Manufacturing | Sports | Safety |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 制造业 | 体育 | 安全 |'
- en: '| --- | --- | --- |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| ![Vehicle Spare Parts Detection](img/ec2480c75b750dbc15e22cd0ae7db1d3.png)
    | ![Football Player Detection](img/129da9e4720fda945dbb94f3a4c38fc7.png) | ![People
    Fall Detection](img/e1e052c2cdac6a3c10f8a36f47bb2417.png) |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| ![车辆零部件检测](img/ec2480c75b750dbc15e22cd0ae7db1d3.png) | ![足球运动员检测](img/129da9e4720fda945dbb94f3a4c38fc7.png)
    | ![人员摔倒检测](img/e1e052c2cdac6a3c10f8a36f47bb2417.png) |'
- en: '| Vehicle Spare Parts Detection | Football Player Detection | People Fall Detection
    |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 车辆零部件检测 | 足球运动员检测 | 人员摔倒检测 |'
- en: Why Use Ultralytics YOLO for Inference?
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么要使用Ultralytics YOLO进行推理？
- en: 'Here''s why you should consider YOLOv8''s predict mode for your various inference
    needs:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是考虑使用YOLOv8预测模式满足各种推理需求的原因：
- en: '**Versatility:** Capable of making inferences on images, videos, and even live
    streams.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多功能性：** 能够对图像、视频甚至实时流进行推理。'
- en: '**Performance:** Engineered for real-time, high-speed processing without sacrificing
    accuracy.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能：** 针对实时高速处理而设计，同时保持精度。'
- en: '**Ease of Use:** Intuitive Python and CLI interfaces for rapid deployment and
    testing.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**易于使用：** 提供直观的Python和CLI界面，用于快速部署和测试。'
- en: '**Highly Customizable:** Various settings and parameters to tune the model''s
    inference behavior according to your specific requirements.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高度可定制：** 可根据您的具体要求调整模型推理行为的各种设置和参数。'
- en: Key Features of Predict Mode
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预测模式的关键特性
- en: 'YOLOv8''s predict mode is designed to be robust and versatile, featuring:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv8的预测模式设计坚固多变，具备以下特点：
- en: '**Multiple Data Source Compatibility:** Whether your data is in the form of
    individual images, a collection of images, video files, or real-time video streams,
    predict mode has you covered.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多数据源兼容性：** 无论您的数据是单独的图像、图像集合、视频文件还是实时视频流，预测模式都能覆盖。'
- en: '**Streaming Mode:** Use the streaming feature to generate a memory-efficient
    generator of `Results` objects. Enable this by setting `stream=True` in the predictor''s
    call method.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流模式：** 使用流特性生成内存高效的`Results`对象的生成器。通过在预测器的调用方法中设置`stream=True`来启用此功能。'
- en: '**Batch Processing:** The ability to process multiple images or video frames
    in a single batch, further speeding up inference time.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**批处理处理：** 能够在单个批次中处理多个图像或视频帧，进一步加快推理时间。'
- en: '**Integration Friendly:** Easily integrate with existing data pipelines and
    other software components, thanks to its flexible API.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集成友好：** 由于其灵活的API，可以轻松集成到现有的数据流水线和其他软件组件中。'
- en: 'Ultralytics YOLO models return either a Python list of `Results` objects, or
    a memory-efficient Python generator of `Results` objects when `stream=True` is
    passed to the model during inference:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics YOLO模型返回的结果可以是Python列表的`Results`对象，或者当在推理过程中传递`stream=True`给模型时，返回内存高效的`Results`对象的Python生成器：
- en: Predict
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 预测
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Inference Sources
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推理来源
- en: YOLOv8 can process different types of input sources for inference, as shown
    in the table below. The sources include static images, video streams, and various
    data formats. The table also indicates whether each source can be used in streaming
    mode with the argument `stream=True` ✅. Streaming mode is beneficial for processing
    videos or live streams as it creates a generator of results instead of loading
    all frames into memory.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv8可以处理不同类型的输入源进行推理，如下表所示。这些源包括静态图像、视频流和各种数据格式。表格还指示了是否可以使用`stream=True`参数在流模式下使用每个源
    ✅。流模式对于处理视频或直播流非常有用，因为它创建了一个结果生成器，而不是将所有帧加载到内存中。
- en: Tip
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Use `stream=True` for processing long videos or large datasets to efficiently
    manage memory. When `stream=False`, the results for all frames or data points
    are stored in memory, which can quickly add up and cause out-of-memory errors
    for large inputs. In contrast, `stream=True` utilizes a generator, which only
    keeps the results of the current frame or data point in memory, significantly
    reducing memory consumption and preventing out-of-memory issues.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于处理长视频或大型数据集，可以使用`stream=True`来高效管理内存。当`stream=False`时，所有帧或数据点的结果都会存储在内存中，这可能会快速累积并导致大输入时的内存不足错误。相比之下，`stream=True`利用生成器，只在内存中保留当前帧或数据点的结果，大大减少内存消耗并防止内存不足问题。
- en: '| Source | Example | Type | Notes |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 源 | 示例 | 类型 | 注释 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| image | `''image.jpg''` | `str` or `Path` | Single image file. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 图像 | `''image.jpg''` | `str` 或 `Path` | 单个图像文件。 |'
- en: '| URL | `''https://ultralytics.com/images/bus.jpg''` | `str` | URL to an image.
    |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 网址 | `''https://ultralytics.com/images/bus.jpg''` | `str` | 图像的网址。 |'
- en: '| screenshot | `''screen''` | `str` | Capture a screenshot. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 截图 | `''screen''` | `str` | 捕获屏幕截图。 |'
- en: '| PIL | `Image.open(''im.jpg'')` | `PIL.Image` | HWC format with RGB channels.
    |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| PIL | `Image.open(''im.jpg'')` | `PIL.Image` | HWC格式，带有RGB通道。 |'
- en: '| OpenCV | `cv2.imread(''im.jpg'')` | `np.ndarray` | HWC format with BGR channels
    `uint8 (0-255)`. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| OpenCV | `cv2.imread(''im.jpg'')` | `np.ndarray` | HWC格式，带有BGR通道 `uint8 (0-255)`。
    |'
- en: '| numpy | `np.zeros((640,1280,3))` | `np.ndarray` | HWC format with BGR channels
    `uint8 (0-255)`. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| numpy | `np.zeros((640,1280,3))` | `np.ndarray` | HWC格式，带有BGR通道 `uint8 (0-255)`。
    |'
- en: '| torch | `torch.zeros(16,3,320,640)` | `torch.Tensor` | BCHW format with RGB
    channels `float32 (0.0-1.0)`. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| torch | `torch.zeros(16,3,320,640)` | `torch.Tensor` | BCHW格式，带有RGB通道 `float32
    (0.0-1.0)`。 |'
- en: '| CSV | `''sources.csv''` | `str` or `Path` | CSV file containing paths to
    images, videos, or directories. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| CSV | `''sources.csv''` | `str` 或 `Path` | 包含图像、视频或目录路径的CSV文件。 |'
- en: '| video ✅ | `''video.mp4''` | `str` or `Path` | Video file in formats like
    MP4, AVI, etc. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| video ✅ | `''video.mp4''` | `str` 或 `Path` | MP4、AVI等视频文件格式。 |'
- en: '| directory ✅ | `''path/''` | `str` or `Path` | Path to a directory containing
    images or videos. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 目录 ✅ | `''path/''` | `str` 或 `Path` | 包含图像或视频的目录路径。 |'
- en: '| glob ✅ | `''path/*.jpg''` | `str` | Glob pattern to match multiple files.
    Use the `*` character as a wildcard. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| glob ✅ | `''path/*.jpg''` | `str` | 匹配多个文件的通配符模式。使用 `*` 字符作为通配符。 |'
- en: '| YouTube ✅ | `''https://youtu.be/LNwODJXcvt4''` | `str` | URL to a YouTube
    video. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| YouTube ✅ | `''https://youtu.be/LNwODJXcvt4''` | `str` | YouTube视频的网址。 |'
- en: '| stream ✅ | `''rtsp://example.com/media.mp4''` | `str` | URL for streaming
    protocols such as RTSP, RTMP, TCP, or an IP address. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| stream ✅ | `''rtsp://example.com/media.mp4''` | `str` | 用于流协议（如RTSP、RTMP、TCP或IP地址）的网址。
    |'
- en: '| multi-stream ✅ | `''list.streams''` | `str` or `Path` | `*.streams` text
    file with one stream URL per row, i.e. 8 streams will run at batch-size 8. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| multi-stream ✅ | `''list.streams''` | `str` 或 `Path` | `*.streams`文本文件，每行一个流的URL，例如批处理大小为8的8个流将同时运行。
    |'
- en: 'Below are code examples for using each source type:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是每种源类型的代码示例：
- en: Prediction sources
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 预测源
- en: Run inference on an image file.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在图像文件上进行推理。
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Run inference on the current screen content as a screenshot.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 对当前屏幕内容（截图）进行推理。
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Run inference on an image or video hosted remotely via URL.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在远程托管的图像或视频上进行推理。
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Run inference on an image opened with Python Imaging Library (PIL).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对使用Python Imaging Library（PIL）打开的图像进行推理。
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Run inference on an image read with OpenCV.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用OpenCV读取的图像上运行推理。
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Run inference on an image represented as a numpy array.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在表示为numpy数组的图像上运行推理。
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Run inference on an image represented as a PyTorch tensor.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在表示为PyTorch张量的图像上运行推理。
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Run inference on a collection of images, URLs, videos and directories listed
    in a CSV file.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSV文件中列出的图像、URL、视频和目录集合上进行推理。
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Run inference on a video file. By using `stream=True`, you can create a generator
    of Results objects to reduce memory usage.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在视频文件上进行推理。通过使用`stream=True`，您可以创建一个Results对象的生成器来减少内存使用。
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Run inference on all images and videos in a directory. To also capture images
    and videos in subdirectories use a glob pattern, i.e. `path/to/dir/**/*`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在目录中的所有图像和视频上运行推断。要还包括子目录中的图像和视频，请使用 glob 模式，例如 `path/to/dir/**/*`。
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Run inference on all images and videos that match a glob expression with `*`
    characters.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 对匹配带有 `*` 字符的 glob 表达式的所有图像和视频运行推断。
- en: '[PRE12]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Run inference on a YouTube video. By using `stream=True`, you can create a generator
    of Results objects to reduce memory usage for long videos.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 YouTube 视频上运行推断。通过使用 `stream=True`，可以创建 Results 对象的生成器，以减少长视频的内存使用。
- en: '[PRE13]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Run inference on remote streaming sources using RTSP, RTMP, TCP and IP address
    protocols. If multiple streams are provided in a `*.streams` text file then batched
    inference will run, i.e. 8 streams will run at batch-size 8, otherwise single
    streams will run at batch-size 1.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在远程流媒体源（使用 RTSP、RTMP、TCP 和 IP 地址协议）上运行推断。如果在 `*.streams` 文本文件中提供了多个流，则将运行批处理推断，即
    8 个流将以批大小 8 运行，否则单个流将以批大小 1 运行。
- en: '[PRE14]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Inference Arguments
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推断参数
- en: '`model.predict()` accepts multiple arguments that can be passed at inference
    time to override defaults:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`model.predict()` 在推断时接受多个参数，可用于覆盖默认设置：'
- en: Example
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE15]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Inference arguments:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 推断参数：
- en: '| Argument | Type | Default | Description |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 类型 | 默认值 | 描述 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| `source` | `str` | `''ultralytics/assets''` | Specifies the data source for
    inference. Can be an image path, video file, directory, URL, or device ID for
    live feeds. Supports a wide range of formats and sources, enabling flexible application
    across different types of input. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `source` | `str` | `''ultralytics/assets''` | 指定推断的数据源。可以是图像路径、视频文件、目录、URL
    或用于实时视频流的设备 ID。支持多种格式和来源，适用于不同类型的输入。 |'
- en: '| `conf` | `float` | `0.25` | Sets the minimum confidence threshold for detections.
    Objects detected with confidence below this threshold will be disregarded. Adjusting
    this value can help reduce false positives. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `conf` | `float` | `0.25` | 设置检测的最小置信度阈值。置信度低于此阈值的检测对象将被忽略。调整此值有助于减少误检。 |'
- en: '| `iou` | `float` | `0.7` | Intersection Over Union (IoU) threshold for Non-Maximum
    Suppression (NMS). Lower values result in fewer detections by eliminating overlapping
    boxes, useful for reducing duplicates. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `iou` | `float` | `0.7` | 非最大抑制（NMS）的交并比（IoU）阈值。较低的值通过消除重叠的框来减少检测，有助于减少重复检测。
    |'
- en: '| `imgsz` | `int or tuple` | `640` | Defines the image size for inference.
    Can be a single integer `640` for square resizing or a (height, width) tuple.
    Proper sizing can improve detection accuracy and processing speed. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `imgsz` | `int or tuple` | `640` | 定义推断时的图像大小。可以是一个整数 `640` 用于正方形调整，或者是一个
    (height, width) 元组。正确的尺寸可以提高检测的准确性和处理速度。 |'
- en: '| `half` | `bool` | `False` | Enables half-precision (FP16) inference, which
    can speed up model inference on supported GPUs with minimal impact on accuracy.
    |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `half` | `bool` | `False` | 启用半精度（FP16）推断，可以在支持的 GPU 上加速模型推断，对准确性影响最小。 |'
- en: '| `device` | `str` | `None` | Specifies the device for inference (e.g., `cpu`,
    `cuda:0` or `0`). Allows users to select between CPU, a specific GPU, or other
    compute devices for model execution. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `device` | `str` | `None` | 指定推断时使用的设备（例如 `cpu`、`cuda:0` 或 `0`）。允许用户选择在 CPU、特定
    GPU 或其他计算设备上执行模型。 |'
- en: '| `max_det` | `int` | `300` | Maximum number of detections allowed per image.
    Limits the total number of objects the model can detect in a single inference,
    preventing excessive outputs in dense scenes. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `max_det` | `int` | `300` | 每个图像允许的最大检测数。限制模型在单次推断中可以检测的对象总数，避免在密集场景中输出过多对象。
    |'
- en: '| `vid_stride` | `int` | `1` | Frame stride for video inputs. Allows skipping
    frames in videos to speed up processing at the cost of temporal resolution. A
    value of 1 processes every frame, higher values skip frames. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `vid_stride` | `int` | `1` | 视频输入的帧步进。允许跳过视频中的帧以加快处理速度，但会降低时间分辨率。值为 1 表示处理每一帧，更高的值表示跳过帧。
    |'
- en: '| `stream_buffer` | `bool` | `False` | Determines if all frames should be buffered
    when processing video streams (`True`), or if the model should return the most
    recent frame (`False`). Useful for real-time applications. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `stream_buffer` | `bool` | `False` | 确定处理视频流时是否应缓冲所有帧 (`True`)，或者模型是否应返回最近的帧
    (`False`)。对实时应用非常有用。 |'
- en: '| `visualize` | `bool` | `False` | Activates visualization of model features
    during inference, providing insights into what the model is "seeing". Useful for
    debugging and model interpretation. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `visualize` | `bool` | `False` | 在推理过程中激活模型特征可视化，展示模型所“看到”的内容。用于调试和模型解释。
    |'
- en: '| `augment` | `bool` | `False` | Enables test-time augmentation (TTA) for predictions,
    potentially improving detection robustness at the cost of inference speed. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `augment` | `bool` | `False` | 启用测试时增强（TTA），可能提高检测的鲁棒性但会降低推理速度。 |'
- en: '| `agnostic_nms` | `bool` | `False` | Enables class-agnostic Non-Maximum Suppression
    (NMS), which merges overlapping boxes of different classes. Useful in multi-class
    detection scenarios where class overlap is common. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `agnostic_nms` | `bool` | `False` | 启用无关类别的非最大抑制（NMS），合并不同类别的重叠框。适用于多类别检测场景中常见的类别重叠情况。
    |'
- en: '| `classes` | `list[int]` | `None` | Filters predictions to a set of class
    IDs. Only detections belonging to the specified classes will be returned. Useful
    for focusing on relevant objects in multi-class detection tasks. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `classes` | `list[int]` | `None` | 将预测结果过滤为一组类别ID。仅返回属于指定类别的检测结果。用于多类检测任务中聚焦相关对象。
    |'
- en: '| `retina_masks` | `bool` | `False` | Uses high-resolution segmentation masks
    if available in the model. This can enhance mask quality for segmentation tasks,
    providing finer detail. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `retina_masks` | `bool` | `False` | 如果模型可用，使用高分辨率分割掩模。对于分割任务可提供更精细的掩模质量。
    |'
- en: '| `embed` | `list[int]` | `None` | Specifies the layers from which to extract
    feature vectors or embeddings. Useful for downstream tasks like clustering or
    similarity search. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `embed` | `list[int]` | `None` | 指定提取特征向量或嵌入的层。用于聚类或相似性搜索等下游任务。 |'
- en: 'Visualization arguments:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化参数：
- en: '| Argument | Type | Default | Description |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 类型 | 默认值 | 描述 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| `show` | `bool` | `False` | If `True`, displays the annotated images or videos
    in a window. Useful for immediate visual feedback during development or testing.
    |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `show` | `bool` | `False` | 如果为`True`，在窗口中显示带有注释的图像或视频。用于开发或测试过程中的即时视觉反馈。
    |'
- en: '| `save` | `bool` | `False` | Enables saving of the annotated images or videos
    to file. Useful for documentation, further analysis, or sharing results. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `save` | `bool` | `False` | 启用保存带有注释的图像或视频文件。用于文档、进一步分析或共享结果。 |'
- en: '| `save_frames` | `bool` | `False` | When processing videos, saves individual
    frames as images. Useful for extracting specific frames or for detailed frame-by-frame
    analysis. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `save_frames` | `bool` | `False` | 在处理视频时，将各个帧保存为图像。用于提取特定帧或进行详细的逐帧分析。 |'
- en: '| `save_txt` | `bool` | `False` | Saves detection results in a text file, following
    the format `[class] [x_center] [y_center] [width] [height] [confidence]`. Useful
    for integration with other analysis tools. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `save_txt` | `bool` | `False` | 将检测结果保存为文本文件，格式为`[class] [x_center] [y_center]
    [width] [height] [confidence]`。用于与其他分析工具集成。 |'
- en: '| `save_conf` | `bool` | `False` | Includes confidence scores in the saved
    text files. Enhances the detail available for post-processing and analysis. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `save_conf` | `bool` | `False` | 在保存的文本文件中包含置信度分数。增强后处理和分析的详细信息。 |'
- en: '| `save_crop` | `bool` | `False` | Saves cropped images of detections. Useful
    for dataset augmentation, analysis, or creating focused datasets for specific
    objects. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `save_crop` | `bool` | `False` | 保存检测到的物体的裁剪图像。用于数据增强、分析或创建特定对象的专注数据集。 |'
- en: '| `show_labels` | `bool` | `True` | Displays labels for each detection in the
    visual output. Provides immediate understanding of detected objects. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| `show_labels` | `bool` | `True` | 在视觉输出中显示每个检测结果的标签。提供检测到的对象的直观理解。 |'
- en: '| `show_conf` | `bool` | `True` | Displays the confidence score for each detection
    alongside the label. Gives insight into the model''s certainty for each detection.
    |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| `show_conf` | `bool` | `True` | 显示每个检测结果的置信度分数和标签。提供模型对每个检测结果的确定性见解。 |'
- en: '| `show_boxes` | `bool` | `True` | Draws bounding boxes around detected objects.
    Essential for visual identification and location of objects in images or video
    frames. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| `show_boxes` | `bool` | `True` | 在检测到的物体周围绘制边界框。对于图像或视频帧中对象的视觉识别和定位至关重要。
    |'
- en: '| `line_width` | `None or int` | `None` | Specifies the line width of bounding
    boxes. If `None`, the line width is automatically adjusted based on the image
    size. Provides visual customization for clarity. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| `line_width` | `None 或 int` | `None` | 指定边界框的线宽。如果为`None`，则根据图像大小自动调整线宽。提供视觉上的自定义以增强清晰度。
    |'
- en: Image and Video Formats
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像和视频格式
- en: YOLOv8 supports various image and video formats, as specified in [ultralytics/data/utils.py](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/data/utils.py).
    See the tables below for the valid suffixes and example predict commands.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv8支持多种图像和视频格式，详见[ultralytics/data/utils.py](https://github.com/ultralytics/ultralytics/blob/main/ultralytics/data/utils.py)。查看下表获取有效后缀和示例预测命令。
- en: Images
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像
- en: The below table contains valid Ultralytics image formats.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了有效的Ultralytics图像格式。
- en: '| Image Suffixes | Example Predict Command | Reference |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 图像后缀 | 示例预测命令 | 参考 |'
- en: '| --- | --- | --- |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `.bmp` | `yolo predict source=image.bmp` | [Microsoft BMP File Format](https://en.wikipedia.org/wiki/BMP_file_format)
    |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| `.bmp` | `yolo 预测 源=image.bmp` | [Microsoft BMP文件格式](https://zh.wikipedia.org/wiki/BMP_file_format)
    |'
- en: '| `.dng` | `yolo predict source=image.dng` | [Adobe DNG](https://en.wikipedia.org/wiki/Digital_Negative)
    |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| `.dng` | `yolo 预测 源=image.dng` | [Adobe DNG](https://zh.wikipedia.org/wiki/Digital_Negative)
    |'
- en: '| `.jpeg` | `yolo predict source=image.jpeg` | [JPEG](https://en.wikipedia.org/wiki/JPEG)
    |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| `.jpeg` | `yolo 预测 源=image.jpeg` | [JPEG](https://zh.wikipedia.org/wiki/JPEG)
    |'
- en: '| `.jpg` | `yolo predict source=image.jpg` | [JPEG](https://en.wikipedia.org/wiki/JPEG)
    |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| `.jpg` | `yolo 预测 源=image.jpg` | [JPEG](https://zh.wikipedia.org/wiki/JPEG)
    |'
- en: '| `.mpo` | `yolo predict source=image.mpo` | [Multi Picture Object](https://fileinfo.com/extension/mpo)
    |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| `.mpo` | `yolo 预测 源=image.mpo` | [多图片对象](https://fileinfo.com/extension/mpo)
    |'
- en: '| `.png` | `yolo predict source=image.png` | [Portable Network Graphics](https://en.wikipedia.org/wiki/PNG)
    |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `.png` | `yolo 预测 源=image.png` | [便携式网络图形](https://zh.wikipedia.org/wiki/PNG)
    |'
- en: '| `.tif` | `yolo predict source=image.tif` | [Tag Image File Format](https://en.wikipedia.org/wiki/TIFF)
    |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| `.tif` | `yolo 预测 源=image.tif` | [标签图像文件格式](https://zh.wikipedia.org/wiki/TIFF)
    |'
- en: '| `.tiff` | `yolo predict source=image.tiff` | [Tag Image File Format](https://en.wikipedia.org/wiki/TIFF)
    |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `.tiff` | `yolo 预测 源=image.tiff` | [标签图像文件格式](https://zh.wikipedia.org/wiki/TIFF)
    |'
- en: '| `.webp` | `yolo predict source=image.webp` | [WebP](https://en.wikipedia.org/wiki/WebP)
    |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `.webp` | `yolo 预测 源=image.webp` | [WebP](https://zh.wikipedia.org/wiki/WebP)
    |'
- en: '| `.pfm` | `yolo predict source=image.pfm` | [Portable FloatMap](https://en.wikipedia.org/wiki/Netpbm#File_formats)
    |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| `.pfm` | `yolo 预测 源=image.pfm` | [便携式浮点图](https://zh.wikipedia.org/wiki/Netpbm#File_formats)
    |'
- en: Videos
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 视频
- en: The below table contains valid Ultralytics video formats.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了有效的Ultralytics视频格式。
- en: '| Video Suffixes | Example Predict Command | Reference |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 视频后缀 | 示例预测命令 | 参考 |'
- en: '| --- | --- | --- |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `.asf` | `yolo predict source=video.asf` | [Advanced Systems Format](https://en.wikipedia.org/wiki/Advanced_Systems_Format)
    |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| `.asf` | `yolo 预测 源=video.asf` | [高级系统格式](https://zh.wikipedia.org/wiki/Advanced_Systems_Format)
    |'
- en: '| `.avi` | `yolo predict source=video.avi` | [Audio Video Interleave](https://en.wikipedia.org/wiki/Audio_Video_Interleave)
    |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| `.avi` | `yolo 预测 源=video.avi` | [音频视频交互式格式](https://zh.wikipedia.org/wiki/Audio_Video_Interleave)
    |'
- en: '| `.gif` | `yolo predict source=video.gif` | [Graphics Interchange Format](https://en.wikipedia.org/wiki/GIF)
    |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| `.gif` | `yolo 预测 源=video.gif` | [图形交换格式](https://zh.wikipedia.org/wiki/GIF)
    |'
- en: '| `.m4v` | `yolo predict source=video.m4v` | [MPEG-4 Part 14](https://en.wikipedia.org/wiki/M4V)
    |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| `.m4v` | `yolo 预测 源=video.m4v` | [MPEG-4第14部分](https://zh.wikipedia.org/wiki/M4V)
    |'
- en: '| `.mkv` | `yolo predict source=video.mkv` | [Matroska](https://en.wikipedia.org/wiki/Matroska)
    |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| `.mkv` | `yolo 预测 源=video.mkv` | [Matroska](https://zh.wikipedia.org/wiki/Matroska)
    |'
- en: '| `.mov` | `yolo predict source=video.mov` | [QuickTime File Format](https://en.wikipedia.org/wiki/QuickTime_File_Format)
    |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| `.mov` | `yolo 预测 源=video.mov` | [QuickTime文件格式](https://zh.wikipedia.org/wiki/QuickTime_File_Format)
    |'
- en: '| `.mp4` | `yolo predict source=video.mp4` | [MPEG-4 Part 14 - Wikipedia](https://en.wikipedia.org/wiki/MPEG-4_Part_14)
    |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| `.mp4` | `yolo 预测 源=video.mp4` | [MPEG-4第14部分 - Wikipedia](https://zh.wikipedia.org/wiki/MPEG-4_Part_14)
    |'
- en: '| `.mpeg` | `yolo predict source=video.mpeg` | [MPEG-1 Part 2](https://en.wikipedia.org/wiki/MPEG-1)
    |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| `.mpeg` | `yolo 预测 源=video.mpeg` | [MPEG-1第2部分](https://zh.wikipedia.org/wiki/MPEG-1)
    |'
- en: '| `.mpg` | `yolo predict source=video.mpg` | [MPEG-1 Part 2](https://en.wikipedia.org/wiki/MPEG-1)
    |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| `.mpg` | `yolo 预测 源=video.mpg` | [MPEG-1第2部分](https://zh.wikipedia.org/wiki/MPEG-1)
    |'
- en: '| `.ts` | `yolo predict source=video.ts` | [MPEG Transport Stream](https://en.wikipedia.org/wiki/MPEG_transport_stream)
    |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| `.ts` | `yolo 预测 源=video.ts` | [MPEG传输流](https://zh.wikipedia.org/wiki/MPEG_transport_stream)
    |'
- en: '| `.wmv` | `yolo predict source=video.wmv` | [Windows Media Video](https://en.wikipedia.org/wiki/Windows_Media_Video)
    |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| `.wmv` | `yolo 预测 源=video.wmv` | [Windows媒体视频](https://zh.wikipedia.org/wiki/Windows_Media_Video)
    |'
- en: '| `.webm` | `yolo predict source=video.webm` | [WebM Project](https://en.wikipedia.org/wiki/WebM)
    |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| `.webm` | `yolo 预测 源=video.webm` | [WebM项目](https://zh.wikipedia.org/wiki/WebM)
    |'
- en: Working with Results
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理结果
- en: 'All Ultralytics `predict()` calls will return a list of `Results` objects:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Ultralytics 的 `predict()` 调用将返回 `Results` 对象的列表：
- en: Results
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Results
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '`Results` objects have the following attributes:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`Results` 对象具有以下属性：'
- en: '| Attribute | Type | Description |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `orig_img` | `numpy.ndarray` | The original image as a numpy array. |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| `orig_img` | `numpy.ndarray` | 原始图像的 numpy 数组。 |'
- en: '| `orig_shape` | `tuple` | The original image shape in (height, width) format.
    |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| `orig_shape` | `tuple` | 原始图像形状，格式为 (height, width)。 |'
- en: '| `boxes` | `Boxes, optional` | A Boxes object containing the detection bounding
    boxes. |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| `boxes` | `Boxes, optional` | 包含检测边界框的 Boxes 对象。 |'
- en: '| `masks` | `Masks, optional` | A Masks object containing the detection masks.
    |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| `masks` | `Masks, optional` | 包含检测遮罩的 Masks 对象。 |'
- en: '| `probs` | `Probs, optional` | A Probs object containing probabilities of
    each class for classification task. |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| `probs` | `Probs, optional` | 包含分类任务每个类别概率的 Probs 对象。 |'
- en: '| `keypoints` | `Keypoints, optional` | A Keypoints object containing detected
    keypoints for each object. |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| `keypoints` | `Keypoints, optional` | 包含每个对象检测关键点的 Keypoints 对象。 |'
- en: '| `obb` | `OBB, optional` | An OBB object containing oriented bounding boxes.
    |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| `obb` | `OBB, optional` | 包含有向边界框的 OBB 对象。 |'
- en: '| `speed` | `dict` | A dictionary of preprocess, inference, and postprocess
    speeds in milliseconds per image. |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| `speed` | `dict` | 预处理、推断和后处理速度的毫秒数字典。 |'
- en: '| `names` | `dict` | A dictionary of class names. |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| `names` | `dict` | 类名字典。 |'
- en: '| `path` | `str` | The path to the image file. |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| `path` | `str` | 图像文件的路径。 |'
- en: '`Results` objects have the following methods:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`Results` 对象具有以下方法：'
- en: '| Method | Return Type | Description |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 返回类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `update()` | `None` | Update the boxes, masks, and probs attributes of the
    Results object. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| `update()` | `None` | 更新结果对象的 boxes、masks 和 probs 属性。 |'
- en: '| `cpu()` | `Results` | Return a copy of the Results object with all tensors
    on CPU memory. |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| `cpu()` | `Results` | 返回所有张量在 CPU 内存上的 Results 对象副本。 |'
- en: '| `numpy()` | `Results` | Return a copy of the Results object with all tensors
    as numpy arrays. |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| `numpy()` | `Results` | 返回所有张量转换为 numpy 数组的 Results 对象副本。 |'
- en: '| `cuda()` | `Results` | Return a copy of the Results object with all tensors
    on GPU memory. |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| `cuda()` | `Results` | 返回所有张量在 GPU 内存上的 Results 对象副本。 |'
- en: '| `to()` | `Results` | Return a copy of the Results object with tensors on
    the specified device and dtype. |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| `to()` | `Results` | 返回所有张量在指定设备和数据类型上的 Results 对象副本。 |'
- en: '| `new()` | `Results` | Return a new Results object with the same image, path,
    and names. |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| `new()` | `Results` | 返回具有相同图像、路径和名称的新 Results 对象。 |'
- en: '| `plot()` | `numpy.ndarray` | Plots the detection results. Returns a numpy
    array of the annotated image. |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| `plot()` | `numpy.ndarray` | 绘制检测结果。返回带注释的图像的 numpy 数组。 |'
- en: '| `show()` | `None` | Show annotated results to screen. |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| `show()` | `None` | 在屏幕上显示注释结果。 |'
- en: '| `save()` | `None` | Save annotated results to file. |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| `save()` | `None` | 将注释结果保存到文件。 |'
- en: '| `verbose()` | `str` | Return log string for each task. |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| `verbose()` | `str` | 返回每个任务的日志字符串。 |'
- en: '| `save_txt()` | `None` | Save predictions into a txt file. |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| `save_txt()` | `None` | 将预测保存到 txt 文件中。 |'
- en: '| `save_crop()` | `None` | Save cropped predictions to `save_dir/cls/file_name.jpg`.
    |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| `save_crop()` | `None` | 将裁剪后的预测保存到 `save_dir/cls/file_name.jpg`。 |'
- en: '| `tojson()` | `str` | Convert the object to JSON format. |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| `tojson()` | `str` | 将对象转换为 JSON 格式。 |'
- en: For more details see the `Results` class documentation.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多详情，请参阅 `Results` 类的文档。
- en: Boxes
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Boxes
- en: '`Boxes` object can be used to index, manipulate, and convert bounding boxes
    to different formats.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`Boxes` 对象可用于索引、操作和将边界框转换为不同格式。'
- en: Boxes
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Boxes
- en: '[PRE17]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Here is a table for the `Boxes` class methods and properties, including their
    name, type, and description:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 `Boxes` 类的方法和属性的表格，包括它们的名称、类型和描述：
- en: '| Name | Type | Description |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `cpu()` | Method | Move the object to CPU memory. |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| `cpu()` | 方法 | 将对象移动到 CPU 内存。 |'
- en: '| `numpy()` | Method | Convert the object to a numpy array. |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| `numpy()` | 方法 | 将对象转换为 numpy 数组。 |'
- en: '| `cuda()` | Method | Move the object to CUDA memory. |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| `cuda()` | 方法 | 将对象移动到 CUDA 内存。 |'
- en: '| `to()` | Method | Move the object to the specified device. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| `to()` | 方法 | 将对象移动到指定设备。 |'
- en: '| `xyxy` | Property (`torch.Tensor`) | Return the boxes in xyxy format. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| `xyxy` | 属性 (`torch.Tensor`) | 返回 xyxy 格式的边界框。 |'
- en: '| `conf` | Property (`torch.Tensor`) | Return the confidence values of the
    boxes. |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| `conf` | 属性 (`torch.Tensor`) | 返回边界框的置信度值。 |'
- en: '| `cls` | Property (`torch.Tensor`) | Return the class values of the boxes.
    |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| `cls` | 属性 (`torch.Tensor`) | 返回边界框的类别值。 |'
- en: '| `id` | Property (`torch.Tensor`) | Return the track IDs of the boxes (if
    available). |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| `id` | 属性 (`torch.Tensor`) | 返回框的轨迹 ID（如果可用）。 |'
- en: '| `xywh` | Property (`torch.Tensor`) | Return the boxes in xywh format. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| `xywh` | 属性 (`torch.Tensor`) | 返回 xywh 格式的框。 |'
- en: '| `xyxyn` | Property (`torch.Tensor`) | Return the boxes in xyxy format normalized
    by original image size. |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| `xyxyn` | 属性 (`torch.Tensor`) | 返回以原始图像大小归一化的 xyxy 格式的框。 |'
- en: '| `xywhn` | Property (`torch.Tensor`) | Return the boxes in xywh format normalized
    by original image size. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| `xywhn` | 属性 (`torch.Tensor`) | 返回以原始图像大小归一化的 xywh 格式的框。 |'
- en: For more details see the `Boxes` class documentation.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详情请参阅 `Boxes` 类文档。
- en: Masks
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 掩码
- en: '`Masks` object can be used index, manipulate and convert masks to segments.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`Masks` 对象可用于索引、操作和将掩码转换为分段。'
- en: Masks
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 掩码
- en: '[PRE18]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here is a table for the `Masks` class methods and properties, including their
    name, type, and description:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 `Masks` 类方法和属性的表格，包括它们的名称、类型和描述：
- en: '| Name | Type | Description |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `cpu()` | Method | Returns the masks tensor on CPU memory. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| `cpu()` | 方法 | 返回在 CPU 内存上的掩码张量。 |'
- en: '| `numpy()` | Method | Returns the masks tensor as a numpy array. |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| `numpy()` | 方法 | 将掩码张量返回为 numpy 数组。 |'
- en: '| `cuda()` | Method | Returns the masks tensor on GPU memory. |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| `cuda()` | 方法 | 返回在 GPU 内存上的掩码张量。 |'
- en: '| `to()` | Method | Returns the masks tensor with the specified device and
    dtype. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| `to()` | 方法 | 返回指定设备和数据类型的掩码张量。 |'
- en: '| `xyn` | Property (`torch.Tensor`) | A list of normalized segments represented
    as tensors. |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| `xyn` | 属性 (`torch.Tensor`) | 归一化分段列表，表示为张量。 |'
- en: '| `xy` | Property (`torch.Tensor`) | A list of segments in pixel coordinates
    represented as tensors. |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| `xy` | 属性 (`torch.Tensor`) | 像素坐标表示的分段列表，表示为张量。 |'
- en: For more details see the `Masks` class documentation.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详情请参阅 `Masks` 类文档。
- en: Keypoints
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关键点
- en: '`Keypoints` object can be used index, manipulate and normalize coordinates.'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`Keypoints` 对象可用于索引、操作和标准化坐标。'
- en: Keypoints
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 关键点
- en: '[PRE19]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here is a table for the `Keypoints` class methods and properties, including
    their name, type, and description:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是总结 `Keypoints` 类方法和属性的表格，包括它们的名称、类型和描述：
- en: '| Name | Type | Description |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `cpu()` | Method | Returns the keypoints tensor on CPU memory. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| `cpu()` | 方法 | 返回在 CPU 内存上的关键点张量。 |'
- en: '| `numpy()` | Method | Returns the keypoints tensor as a numpy array. |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| `numpy()` | 方法 | 将关键点张量返回为 numpy 数组。 |'
- en: '| `cuda()` | Method | Returns the keypoints tensor on GPU memory. |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| `cuda()` | 方法 | 返回在 GPU 内存上的关键点张量。 |'
- en: '| `to()` | Method | Returns the keypoints tensor with the specified device
    and dtype. |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| `to()` | 方法 | 返回指定设备和数据类型的关键点张量。 |'
- en: '| `xyn` | Property (`torch.Tensor`) | A list of normalized keypoints represented
    as tensors. |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| `xyn` | 属性 (`torch.Tensor`) | 归一化关键点列表，表示为张量。 |'
- en: '| `xy` | Property (`torch.Tensor`) | A list of keypoints in pixel coordinates
    represented as tensors. |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| `xy` | 属性 (`torch.Tensor`) | 像素坐标表示的关键点列表，表示为张量。 |'
- en: '| `conf` | Property (`torch.Tensor`) | Returns confidence values of keypoints
    if available, else None. |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| `conf` | 属性 (`torch.Tensor`) | 如果可用，则返回关键点的置信度值，否则返回 None。 |'
- en: For more details see the `Keypoints` class documentation.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详情请参阅 `Keypoints` 类文档。
- en: Probs
  id: totrans-225
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Probs
- en: '`Probs` object can be used index, get `top1` and `top5` indices and scores
    of classification.'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '`Probs` 对象可用于索引、获取分类的 `top1` 和 `top5` 索引及分数。'
- en: Probs
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: Probs
- en: '[PRE20]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here''s a table summarizing the methods and properties for the `Probs` class:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是总结 `Probs` 类方法和属性的表格：
- en: '| Name | Type | Description |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `cpu()` | Method | Returns a copy of the probs tensor on CPU memory. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| `cpu()` | 方法 | 返回在 CPU 内存上的概率张量的副本。 |'
- en: '| `numpy()` | Method | Returns a copy of the probs tensor as a numpy array.
    |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| `numpy()` | 方法 | 将概率张量的副本返回为 numpy 数组。 |'
- en: '| `cuda()` | Method | Returns a copy of the probs tensor on GPU memory. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| `cuda()` | 方法 | 返回在 GPU 内存上的概率张量的副本。 |'
- en: '| `to()` | Method | Returns a copy of the probs tensor with the specified device
    and dtype. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| `to()` | 方法 | 返回指定设备和数据类型的概率张量的副本。 |'
- en: '| `top1` | Property (`int`) | Index of the top 1 class. |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| `top1` | 属性 (`int`) | 最高类别的索引。 |'
- en: '| `top5` | Property (`list[int]`) | Indices of the top 5 classes. |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| `top5` | 属性 (`list[int]`) | 前五个类别的索引。 |'
- en: '| `top1conf` | Property (`torch.Tensor`) | Confidence of the top 1 class. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| `top1conf` | 属性 (`torch.Tensor`) | 最高类别的置信度。 |'
- en: '| `top5conf` | Property (`torch.Tensor`) | Confidences of the top 5 classes.
    |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| `top5conf` | 属性 (`torch.Tensor`) | 前五个类别的置信度。 |'
- en: For more details see the `Probs` class documentation.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多详情，请参阅`Probs`类文档。
- en: OBB
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`OBB`'
- en: '`OBB` object can be used to index, manipulate, and convert oriented bounding
    boxes to different formats.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '`OBB`对象可用于索引、操作和将定向边界框转换为不同格式。'
- en: OBB
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`OBB`'
- en: '[PRE21]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Here is a table for the `OBB` class methods and properties, including their
    name, type, and description:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是`OBB`类的方法和属性表，包括它们的名称、类型和描述：
- en: '| Name | Type | Description |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| 名称 | 类型 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `cpu()` | Method | Move the object to CPU memory. |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| `cpu()` | 方法 | 将对象移动到CPU内存。 |'
- en: '| `numpy()` | Method | Convert the object to a numpy array. |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| `numpy()` | 方法 | 将对象转换为numpy数组。 |'
- en: '| `cuda()` | Method | Move the object to CUDA memory. |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| `cuda()` | 方法 | 将对象移动到CUDA内存。 |'
- en: '| `to()` | Method | Move the object to the specified device. |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| `to()` | 方法 | 将对象移动到指定设备。 |'
- en: '| `conf` | Property (`torch.Tensor`) | Return the confidence values of the
    boxes. |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| `conf` | 属性（`torch.Tensor`） | 返回边界框的置信度值。 |'
- en: '| `cls` | Property (`torch.Tensor`) | Return the class values of the boxes.
    |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| `cls` | 属性（`torch.Tensor`） | 返回边界框的类别值。 |'
- en: '| `id` | Property (`torch.Tensor`) | Return the track IDs of the boxes (if
    available). |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| `id` | 属性（`torch.Tensor`） | 返回边界框的跟踪ID（如果可用）。 |'
- en: '| `xyxy` | Property (`torch.Tensor`) | Return the horizontal boxes in xyxy
    format. |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| `xyxy` | 属性（`torch.Tensor`） | 返回xyxy格式的水平框。 |'
- en: '| `xywhr` | Property (`torch.Tensor`) | Return the rotated boxes in xywhr format.
    |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| `xywhr` | 属性（`torch.Tensor`） | 返回xywhr格式的旋转框。 |'
- en: '| `xyxyxyxy` | Property (`torch.Tensor`) | Return the rotated boxes in xyxyxyxy
    format. |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| `xyxyxyxy` | 属性（`torch.Tensor`） | 返回xyxyxyxy格式的旋转框。 |'
- en: '| `xyxyxyxyn` | Property (`torch.Tensor`) | Return the rotated boxes in xyxyxyxy
    format normalized by image size. |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| `xyxyxyxyn` | 属性（`torch.Tensor`） | 返回归一化为图像大小的xyxyxyxy格式的旋转框。 |'
- en: For more details see the `OBB` class documentation.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多详情，请参阅`OBB`类文档。
- en: Plotting Results
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制结果
- en: The `plot()` method in `Results` objects facilitates visualization of predictions
    by overlaying detected objects (such as bounding boxes, masks, keypoints, and
    probabilities) onto the original image. This method returns the annotated image
    as a NumPy array, allowing for easy display or saving.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '`Results`对象中的`plot()`方法通过将检测到的对象（如边界框、掩码、关键点和概率）叠加到原始图像上，便于可视化预测。该方法将带注释的图像作为NumPy数组返回，方便显示或保存。'
- en: Plotting
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图
- en: '[PRE22]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`plot()` Method Parameters'
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`plot()`方法参数'
- en: 'The `plot()` method supports various arguments to customize the output:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()`方法支持各种参数以自定义输出：'
- en: '| Argument | Type | Description | Default |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 类型 | 描述 | 默认值 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| `conf` | `bool` | Include detection confidence scores. | `True` |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| `conf` | `bool` | 包括检测置信度分数。 | `True` |'
- en: '| `line_width` | `float` | Line width of bounding boxes. Scales with image
    size if `None`. | `None` |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| `line_width` | `float` | 边界框的线宽。如果为`None`，则随着图像大小缩放。 | `None` |'
- en: '| `font_size` | `float` | Text font size. Scales with image size if `None`.
    | `None` |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| `font_size` | `float` | 文本字体大小。如果为`None`，则随着图像大小缩放。 | `None` |'
- en: '| `font` | `str` | Font name for text annotations. | `''Arial.ttf''` |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| `font` | `str` | 文本注释的字体名称。 | `''Arial.ttf''` |'
- en: '| `pil` | `bool` | Return image as a PIL Image object. | `False` |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| `pil` | `bool` | 返回图像作为PIL图像对象。 | `False` |'
- en: '| `img` | `numpy.ndarray` | Alternative image for plotting. Uses the original
    image if `None`. | `None` |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| `img` | `numpy.ndarray` | 用于绘图的替代图像。如果为`None`，则使用原始图像。 | `None` |'
- en: '| `im_gpu` | `torch.Tensor` | GPU-accelerated image for faster mask plotting.
    Shape: (1, 3, 640, 640). | `None` |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| `im_gpu` | `torch.Tensor` | GPU加速的图像，用于更快的掩码绘制。形状：（1, 3, 640, 640）。 | `None`
    |'
- en: '| `kpt_radius` | `int` | Radius for drawn keypoints. | `5` |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| `kpt_radius` | `int` | 绘制关键点的半径。 | `5` |'
- en: '| `kpt_line` | `bool` | Connect keypoints with lines. | `True` |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| `kpt_line` | `bool` | 使用线连接关键点。 | `True` |'
- en: '| `labels` | `bool` | Include class labels in annotations. | `True` |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| `labels` | `bool` | 在注释中包含类标签。 | `True` |'
- en: '| `boxes` | `bool` | Overlay bounding boxes on the image. | `True` |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| `boxes` | `bool` | 在图像上叠加边界框。 | `True` |'
- en: '| `masks` | `bool` | Overlay masks on the image. | `True` |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| `masks` | `bool` | 在图像上叠加掩码。 | `True` |'
- en: '| `probs` | `bool` | Include classification probabilities. | `True` |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| `probs` | `bool` | 包括分类概率。 | `True` |'
- en: '| `show` | `bool` | Display the annotated image directly using the default
    image viewer. | `False` |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| `show` | `bool` | 直接使用默认图像查看器显示带注释的图像。 | `False` |'
- en: '| `save` | `bool` | Save the annotated image to a file specified by `filename`.
    | `False` |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| `save` | `bool` | 将带注释的图像保存到由`filename`指定的文件中。 | `False` |'
- en: '| `filename` | `str` | Path and name of the file to save the annotated image
    if `save` is `True`. | `None` |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| `filename` | `str` | 如果 `save` 为 `True`，保存带注释图像的文件的路径和名称。 | `None` |'
- en: Thread-Safe Inference
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 线程安全推理
- en: Ensuring thread safety during inference is crucial when you are running multiple
    YOLO models in parallel across different threads. Thread-safe inference guarantees
    that each thread's predictions are isolated and do not interfere with one another,
    avoiding race conditions and ensuring consistent and reliable outputs.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在不同线程上并行运行多个 YOLO 模型时，确保推理的线程安全性至关重要。线程安全推理确保每个线程的预测是隔离的，不会互相干扰，从而避免竞态条件，并确保输出一致和可靠。
- en: 'When using YOLO models in a multi-threaded application, it''s important to
    instantiate separate model objects for each thread or employ thread-local storage
    to prevent conflicts:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 当在多线程应用程序中使用 YOLO 模型时，重要的是为每个线程实例化单独的模型对象或使用线程本地存储来避免冲突：
- en: Thread-Safe Inference
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 线程安全推理
- en: 'Instantiate a single model inside each thread for thread-safe inference:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个线程内部实例化单个模型以实现线程安全推理：
- en: '[PRE23]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: For an in-depth look at thread-safe inference with YOLO models and step-by-step
    instructions, please refer to our YOLO Thread-Safe Inference Guide. This guide
    will provide you with all the necessary information to avoid common pitfalls and
    ensure that your multi-threaded inference runs smoothly.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 深入了解 YOLO 模型的线程安全推理和逐步指南，请参阅我们的 YOLO 线程安全推理指南。该指南将为您提供避免常见问题并确保多线程推理顺利运行的所有必要信息。
- en: Streaming Source `for`-loop
  id: totrans-291
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流式源 `for` 循环
- en: Here's a Python script using OpenCV (`cv2`) and YOLOv8 to run inference on video
    frames. This script assumes you have already installed the necessary packages
    (`opencv-python` and `ultralytics`).
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个使用 OpenCV (`cv2`) 和 YOLOv8 运行视频帧推理的 Python 脚本。该脚本假设您已经安装了必要的包 (`opencv-python`
    和 `ultralytics`)。
- en: Streaming for-loop
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 流式 for 循环
- en: '[PRE24]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: This script will run predictions on each frame of the video, visualize the results,
    and display them in a window. The loop can be exited by pressing 'q'.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本将对视频的每一帧进行预测，可视化结果，并在窗口中显示。通过按下 'q' 键可以退出循环。
- en: FAQ
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见问题解答（FAQ）
- en: What is Ultralytics YOLOv8 and its predict mode for real-time inference?
  id: totrans-297
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv8 及其用于实时推理的预测模式是什么？
- en: Ultralytics YOLOv8 is a state-of-the-art model for real-time object detection,
    segmentation, and classification. Its **predict mode** allows users to perform
    high-speed inference on various data sources such as images, videos, and live
    streams. Designed for performance and versatility, it also offers batch processing
    and streaming modes. For more details on its features, check out the Ultralytics
    YOLOv8 predict mode.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv8 是一种用于实时对象检测、分割和分类的先进模型。其**预测模式**允许用户在诸如图像、视频和实时流等多种数据源上进行高速推理。设计用于性能和多功能性，还提供批处理处理和流模式。有关其特性的更多详情，请查看
    Ultralytics YOLOv8 预测模式。
- en: How can I run inference using Ultralytics YOLOv8 on different data sources?
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何在不同数据源上使用 Ultralytics YOLOv8 进行推理？
- en: Ultralytics YOLOv8 can process a wide range of data sources, including individual
    images, videos, directories, URLs, and streams. You can specify the data source
    in the `model.predict()` call. For example, use `'image.jpg'` for a local image
    or `'https://ultralytics.com/images/bus.jpg'` for a URL. Check out the detailed
    examples for various inference sources in the documentation.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv8 可处理多种数据源，包括单个图像、视频、目录、URL 和流。您可以在 `model.predict()` 调用中指定数据源。例如，使用
    `'image.jpg'` 表示本地图像，`'https://ultralytics.com/images/bus.jpg'` 表示 URL。请查看文档中有关各种推理源的详细示例。
- en: How do I optimize YOLOv8 inference speed and memory usage?
  id: totrans-301
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何优化 YOLOv8 推理速度和内存使用？
- en: To optimize inference speed and manage memory efficiently, you can use the streaming
    mode by setting `stream=True` in the predictor's call method. The streaming mode
    generates a memory-efficient generator of `Results` objects instead of loading
    all frames into memory. For processing long videos or large datasets, streaming
    mode is particularly useful. Learn more about streaming mode.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 为了优化推理速度并有效管理内存，您可以在预测器的调用方法中设置 `stream=True` 来使用流模式。流模式生成一个内存高效的 `Results`
    对象生成器，而不是将所有帧加载到内存中。对于处理长视频或大型数据集，流模式特别有用。了解更多关于流模式的信息。
- en: What inference arguments does Ultralytics YOLOv8 support?
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ultralytics YOLOv8 支持哪些推理参数？
- en: The `model.predict()` method in YOLOv8 supports various arguments such as `conf`,
    `iou`, `imgsz`, `device`, and more. These arguments allow you to customize the
    inference process, setting parameters like confidence thresholds, image size,
    and the device used for computation. Detailed descriptions of these arguments
    can be found in the inference arguments section.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: YOLOv8 中的 `model.predict()` 方法支持各种参数，例如 `conf`、`iou`、`imgsz`、`device` 等。这些参数允许您自定义推断过程，设置诸如置信阈值、图像大小和用于计算的设备等参数。关于这些参数的详细描述可以在推断参数部分找到。
- en: How can I visualize and save the results of YOLOv8 predictions?
  id: totrans-305
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何可视化和保存 YOLOv8 预测结果？
- en: After running inference with YOLOv8, the `Results` objects contain methods for
    displaying and saving annotated images. You can use methods like `result.show()`
    and `result.save(filename="result.jpg")` to visualize and save the results. For
    a comprehensive list of these methods, refer to the working with results section.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 YOLOv8 进行推断后，`Results` 对象包含用于显示和保存带注释图像的方法。您可以使用诸如 `result.show()` 和 `result.save(filename="result.jpg")`
    的方法来可视化和保存结果。有关这些方法的详细列表，请参阅处理结果部分。
