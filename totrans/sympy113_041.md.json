["```py\n> >>> from sympy import sqrt, exp, solve, Symbol, Eq\n> \n> >>> from sympy.abc import x, y, z, a, b \n> ```", "```py\n> >>> solve(x - 1, dict=True)\n> \n> [{x: 1}]\n> \n> >>> solve([x**2 - y, x + y - 6], set=True)\n> \n> ([x, y], {(-3, 9), (2, 4)}) \n> ```", "```py\n> >>> solve(sqrt(x) + 1)  # or solve(sqrt(x) + 1, dict=True)\n> \n> []\n> \n> >>> solve(sqrt(x) + 1, set=True)\n> \n> ([x], set()) \n> ```", "```py\n> >>> solve(x**2 - 4)\n> \n> [-2, 2]\n> \n> >>> solve(x - y - 1, x)\n> \n> [y + 1] \n> ```", "```py\n> >>> solve([x + y - 2, x - y + 2], x, y)\n> \n> {x: 0, y: 2}\n> \n> >>> eq = a*x - 2*x + b - 5\n> \n> >>> solve(eq, {a, b})  # undetermined coefficients\n> \n> {a: 2, b: 5}\n> \n> >>> solve([eq], {a, b})  # algebraic\n> \n> {a: -b/x + (2*x + 5)/x} \n> ```", "```py\n> >>> solve(x - 1, x, y)  # more than one symbol\n> \n> [(1, y)]\n> \n> >>> solve([x**2], x)  # list with nonlinear equation\n> \n> [(0,)]\n> \n> >>> solve([x**2 - 1], x)\n> \n> [(-1,), (1,)]\n> \n> >>> solve([x**2 - y, x - 3], x, y)  # nonlinear and multiple symbols\n> \n> [(3, 9)] \n> ```", "```py\n> >>> solve(x - y)\n> \n> [{x: y}]\n> \n> >>> solve([exp(x) - 1, x*(x - 1)])\n> \n> [{x: 0}]\n> \n> >>> system = [x + y - z, x**2 - y + z, exp(z) + 1/x + 1/y - 2]\n> \n> >>> sol = solve(system[:2]); sol\n> \n> [{x: -1, y: z + 1}, {x: 0, y: z}] \n> ```", "```py\n> >>> from sympy import nsolve\n> \n> >>> [system[-1].subs(s) for s in sol]\n> \n> [exp(z) - 3 + 1/(z + 1), exp(z) + zoo + 1/z]\n> \n> >>> z_eq = _[0]\n> \n> >>> zsol = nsolve(z_eq, 1); zsol\n> \n> 0.906425478894557\n> \n> >>> sol0 = {k: v.subs(z, zsol) for k, v in sol[0].items()}\n> \n> >>> sol0[z] = zsol; sol0\n> \n> {x: -1, y: 1.90642547889456, z: 0.906425478894557} \n> ```", "```py\n> >>> solve([x**2 > 4, x > 0])\n> \n> (2 < x) & (x < oo) \n> ```", "```py\n> >>> from sympy import Unequality as Ne\n> \n> >>> solve([x**2 - 4, Ne(x, -2)])\n> \n> Eq(x, 2) \n> ```", "```py\n> >>> {_.lhs: _.rhs}\n> \n> {x: 2} \n> ```"]