- en: pandas arrays, scalars, and data types
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas 数组、标量和数据类型
- en: 原文：[https://pandas.pydata.org/docs/reference/arrays.html](https://pandas.pydata.org/docs/reference/arrays.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/arrays.html](https://pandas.pydata.org/docs/reference/arrays.html)
- en: '## Objects'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 对象'
- en: For most data types, pandas uses NumPy arrays as the concrete objects contained
    with a [`Index`](api/pandas.Index.html#pandas.Index "pandas.Index"), [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数数据类型，pandas 使用 NumPy 数组作为包含在 [`Index`](api/pandas.Index.html#pandas.Index
    "pandas.Index")、[`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    或 [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    中的具体对象。
- en: For some data types, pandas extends NumPy’s type system. String aliases for
    these types can be found at [dtypes](../user_guide/basics.html#basics-dtypes).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些数据类型，pandas 扩展了 NumPy 的类型系统。这些类型的字符串别名可以在 [dtypes](../user_guide/basics.html#basics-dtypes)
    中找到。
- en: '| Kind of Data | pandas Data Type | Scalar | Array |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| 数据类型 | pandas 数据类型 | 标量 | 数组 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| TZ-aware datetime | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") | [Datetimes](#api-arrays-datetime) |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| 时区感知日期时间 | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") | [日期时间](#api-arrays-datetime) |'
- en: '| Timedeltas | (none) | [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") | [Timedeltas](#api-arrays-timedelta) |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 时间增量 | (无) | [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    | [时间增量](#api-arrays-timedelta) |'
- en: '| Period (time spans) | [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") | [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")
    | [Periods](#api-arrays-period) |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| 时期（时间跨度） | [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") | [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")
    | [时期](#api-arrays-period) |'
- en: '| Intervals | [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") | [`Interval`](api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") | [Intervals](#api-arrays-interval) |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| 区间 | [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") | [`Interval`](api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") | [区间](#api-arrays-interval) |'
- en: '| Nullable Integer | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype"), … | (none) | [Nullable integer](#api-arrays-integer-na)
    |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 可空整数 | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype "pandas.Int64Dtype"),
    … | (无) | [可空整数](#api-arrays-integer-na) |'
- en: '| Nullable Float | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype"), … | (none) | [Nullable float](#api-arrays-float-na) |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 可空浮点数 | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype"), … | (无) | [可空浮点数](#api-arrays-float-na) |'
- en: '| Categorical | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (none) | [Categoricals](#api-arrays-categorical)
    |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 分类 | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (无) | [分类](#api-arrays-categorical) |'
- en: '| Sparse | [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")
    | (none) | [Sparse](#api-arrays-sparse) |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 稀疏 | [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")
    | (无) | [稀疏](#api-arrays-sparse) |'
- en: '| Strings | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") | [`str`](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)") | [Strings](#api-arrays-string) |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 字符串 | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")
    | [`str`](https://docs.python.org/3/library/stdtypes.html#str "(在 Python v3.12)")
    | [字符串](#api-arrays-string) |'
- en: '| Nullable Boolean | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | [`bool`](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)") | [Nullable Boolean](#api-arrays-bool) |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 可空布尔值 | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | [`bool`](https://docs.python.org/3/library/functions.html#bool
    "(在 Python v3.12)") | [可空布尔值](#api-arrays-bool) |'
- en: '| PyArrow | [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")
    | Python Scalars or [`NA`](api/pandas.NA.html#pandas.NA "pandas.NA") | [PyArrow](#api-arrays-arrow)
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| PyArrow | [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")
    | Python 标量或[`NA`](api/pandas.NA.html#pandas.NA "pandas.NA") | [PyArrow](#api-arrays-arrow)
    |'
- en: pandas and third-party libraries can extend NumPy’s type system (see [Extension
    types](../development/extending.html#extending-extension-types)). The top-level
    [`array()`](api/pandas.array.html#pandas.array "pandas.array") method can be used
    to create a new array, which may be stored in a [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`Index`](api/pandas.Index.html#pandas.Index "pandas.Index"),
    or as a column in a [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 和第三方库可以扩展 NumPy 的类型系统（参见[扩展类型](../development/extending.html#extending-extension-types)）。顶层的
    [`array()`](api/pandas.array.html#pandas.array "pandas.array") 方法可用于创建一个新数组，该数组可以存储在
    [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")、[`Index`](api/pandas.Index.html#pandas.Index
    "pandas.Index") 中，或作为 [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中的一列。
- en: '| [`array`](api/pandas.array.html#pandas.array "pandas.array")(data[, dtype, copy])
    | Create an array. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`array`](api/pandas.array.html#pandas.array "pandas.array")(data[, dtype, copy])
    | 创建一个数组。 |'
- en: '### PyArrow'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '### PyArrow'
- en: Warning
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: This feature is experimental, and the API can change in a future release without
    warning.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能是实验性的，API 可能在未来的发布中更改而不提供警告。
- en: The [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") is backed by a [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)") with a [`pyarrow.DataType`](https://arrow.apache.org/docs/python/generated/pyarrow.DataType.html#pyarrow.DataType
    "(in Apache Arrow v15.0.2)") instead of a NumPy array and data type. The `.dtype`
    of a [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") is an [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype").
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") 是由 [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)") 支持的，具有 [`pyarrow.DataType`](https://arrow.apache.org/docs/python/generated/pyarrow.DataType.html#pyarrow.DataType
    "(in Apache Arrow v15.0.2)") 而不是 NumPy 数组和数据类型。[`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") 的 `.dtype` 是一个 [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype")。'
- en: '[Pyarrow](https://arrow.apache.org/docs/python/index.html) provides similar
    array and [data type](https://arrow.apache.org/docs/python/api/datatypes.html)
    support as NumPy including first-class nullability support for all data types,
    immutability and more.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pyarrow](https://arrow.apache.org/docs/python/index.html) 提供了与 NumPy 类似的数组和[数据类型](https://arrow.apache.org/docs/python/api/datatypes.html)支持，包括所有数据类型的一流可空支持，不可变性等。'
- en: The table below shows the equivalent pyarrow-backed (`pa`), pandas extension,
    and numpy (`np`) types that are recognized by pandas. Pyarrow-backed types below
    need to be passed into [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") to be recognized by pandas e.g. `pd.ArrowDtype(pa.bool_())`
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了 pandas 可识别的等效的 pyarrow-backed (`pa`)、pandas 扩展和 numpy (`np`) 类型。下面的 pyarrow-backed
    类型需要传递给 [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")
    才能被 pandas 识别，例如 `pd.ArrowDtype(pa.bool_())`
- en: '| PyArrow type | pandas extension type | NumPy type |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| PyArrow 类型 | pandas 扩展类型 | NumPy 类型 |'
- en: '| --- | --- | --- |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| [`pyarrow.bool_()`](https://arrow.apache.org/docs/python/generated/pyarrow.bool_.html#pyarrow.bool_
    "(in Apache Arrow v15.0.2)") | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | `np.bool_` |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.bool_()`](https://arrow.apache.org/docs/python/generated/pyarrow.bool_.html#pyarrow.bool_
    "(in Apache Arrow v15.0.2)") | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | `np.bool_` |'
- en: '| [`pyarrow.int8()`](https://arrow.apache.org/docs/python/generated/pyarrow.int8.html#pyarrow.int8
    "(in Apache Arrow v15.0.2)") | [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype
    "pandas.Int8Dtype") | `np.int8` |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int8()`](https://arrow.apache.org/docs/python/generated/pyarrow.int8.html#pyarrow.int8
    "(in Apache Arrow v15.0.2)") | [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype
    "pandas.Int8Dtype") | `np.int8` |'
- en: '| [`pyarrow.int16()`](https://arrow.apache.org/docs/python/generated/pyarrow.int16.html#pyarrow.int16
    "(in Apache Arrow v15.0.2)") | [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype
    "pandas.Int16Dtype") | `np.int16` |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int16()`](https://arrow.apache.org/docs/python/generated/pyarrow.int16.html#pyarrow.int16
    "(in Apache Arrow v15.0.2)") | [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype
    "pandas.Int16Dtype") | `np.int16` |'
- en: '| [`pyarrow.int32()`](https://arrow.apache.org/docs/python/generated/pyarrow.int32.html#pyarrow.int32
    "(in Apache Arrow v15.0.2)") | [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype
    "pandas.Int32Dtype") | `np.int32` |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int32()`](https://arrow.apache.org/docs/python/generated/pyarrow.int32.html#pyarrow.int32
    "(在 Apache Arrow v15.0.2)") | [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype
    "pandas.Int32Dtype") | `np.int32` |'
- en: '| [`pyarrow.int64()`](https://arrow.apache.org/docs/python/generated/pyarrow.int64.html#pyarrow.int64
    "(in Apache Arrow v15.0.2)") | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype") | `np.int64` |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int64()`](https://arrow.apache.org/docs/python/generated/pyarrow.int64.html#pyarrow.int64
    "(在 Apache Arrow v15.0.2)") | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype") | `np.int64` |'
- en: '| [`pyarrow.uint8()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint8.html#pyarrow.uint8
    "(in Apache Arrow v15.0.2)") | [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype
    "pandas.UInt8Dtype") | `np.uint8` |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint8()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint8.html#pyarrow.uint8
    "(在 Apache Arrow v15.0.2)") | [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype
    "pandas.UInt8Dtype") | `np.uint8` |'
- en: '| [`pyarrow.uint16()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint16.html#pyarrow.uint16
    "(in Apache Arrow v15.0.2)") | [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype
    "pandas.UInt16Dtype") | `np.uint16` |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint16()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint16.html#pyarrow.uint16
    "(在 Apache Arrow v15.0.2)") | [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype
    "pandas.UInt16Dtype") | `np.uint16` |'
- en: '| [`pyarrow.uint32()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint32.html#pyarrow.uint32
    "(in Apache Arrow v15.0.2)") | [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype
    "pandas.UInt32Dtype") | `np.uint32` |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint32()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint32.html#pyarrow.uint32
    "(在 Apache Arrow v15.0.2)") | [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype
    "pandas.UInt32Dtype") | `np.uint32` |'
- en: '| [`pyarrow.uint64()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint64.html#pyarrow.uint64
    "(in Apache Arrow v15.0.2)") | [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype
    "pandas.UInt64Dtype") | `np.uint64` |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint64()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint64.html#pyarrow.uint64
    "(在 Apache Arrow v15.0.2)") | [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype
    "pandas.UInt64Dtype") | `np.uint64` |'
- en: '| [`pyarrow.float32()`](https://arrow.apache.org/docs/python/generated/pyarrow.float32.html#pyarrow.float32
    "(in Apache Arrow v15.0.2)") | [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") | `np.float32` |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.float32()`](https://arrow.apache.org/docs/python/generated/pyarrow.float32.html#pyarrow.float32
    "(在 Apache Arrow v15.0.2)") | [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") | `np.float32` |'
- en: '| [`pyarrow.float64()`](https://arrow.apache.org/docs/python/generated/pyarrow.float64.html#pyarrow.float64
    "(in Apache Arrow v15.0.2)") | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") | `np.float64` |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.float64()`](https://arrow.apache.org/docs/python/generated/pyarrow.float64.html#pyarrow.float64
    "(在 Apache Arrow v15.0.2)") | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") | `np.float64` |'
- en: '| [`pyarrow.time32()`](https://arrow.apache.org/docs/python/generated/pyarrow.time32.html#pyarrow.time32
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.time32()`](https://arrow.apache.org/docs/python/generated/pyarrow.time32.html#pyarrow.time32
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.time64()`](https://arrow.apache.org/docs/python/generated/pyarrow.time64.html#pyarrow.time64
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.time64()`](https://arrow.apache.org/docs/python/generated/pyarrow.time64.html#pyarrow.time64
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.timestamp()`](https://arrow.apache.org/docs/python/generated/pyarrow.timestamp.html#pyarrow.timestamp
    "(in Apache Arrow v15.0.2)") | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | `np.datetime64` |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.timestamp()`](https://arrow.apache.org/docs/python/generated/pyarrow.timestamp.html#pyarrow.timestamp
    "(在 Apache Arrow v15.0.2)") | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | `np.datetime64` |'
- en: '| [`pyarrow.date32()`](https://arrow.apache.org/docs/python/generated/pyarrow.date32.html#pyarrow.date32
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.date32()`](https://arrow.apache.org/docs/python/generated/pyarrow.date32.html#pyarrow.date32
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.date64()`](https://arrow.apache.org/docs/python/generated/pyarrow.date64.html#pyarrow.date64
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.date64()`](https://arrow.apache.org/docs/python/generated/pyarrow.date64.html#pyarrow.date64
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.duration()`](https://arrow.apache.org/docs/python/generated/pyarrow.duration.html#pyarrow.duration
    "(in Apache Arrow v15.0.2)") | (none) | `np.timedelta64` |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.duration()`](https://arrow.apache.org/docs/python/generated/pyarrow.duration.html#pyarrow.duration
    "(在 Apache Arrow v15.0.2)") | (无) | `np.timedelta64` |'
- en: '| [`pyarrow.binary()`](https://arrow.apache.org/docs/python/generated/pyarrow.binary.html#pyarrow.binary
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.binary()`](https://arrow.apache.org/docs/python/generated/pyarrow.binary.html#pyarrow.binary
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.string()`](https://arrow.apache.org/docs/python/generated/pyarrow.string.html#pyarrow.string
    "(in Apache Arrow v15.0.2)") | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") | `np.str_` |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.string()`](https://arrow.apache.org/docs/python/generated/pyarrow.string.html#pyarrow.string
    "(在 Apache Arrow v15.0.2)") | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") | `np.str_` |'
- en: '| [`pyarrow.decimal128()`](https://arrow.apache.org/docs/python/generated/pyarrow.decimal128.html#pyarrow.decimal128
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.decimal128()`](https://arrow.apache.org/docs/python/generated/pyarrow.decimal128.html#pyarrow.decimal128
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.list_()`](https://arrow.apache.org/docs/python/generated/pyarrow.list_.html#pyarrow.list_
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.list_()`](https://arrow.apache.org/docs/python/generated/pyarrow.list_.html#pyarrow.list_
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.map_()`](https://arrow.apache.org/docs/python/generated/pyarrow.map_.html#pyarrow.map_
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.map_()`](https://arrow.apache.org/docs/python/generated/pyarrow.map_.html#pyarrow.map_
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.dictionary()`](https://arrow.apache.org/docs/python/generated/pyarrow.dictionary.html#pyarrow.dictionary
    "(in Apache Arrow v15.0.2)") | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (none) |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.dictionary()`](https://arrow.apache.org/docs/python/generated/pyarrow.dictionary.html#pyarrow.dictionary
    "(在 Apache Arrow v15.0.2)") | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (无) |'
- en: Note
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Pyarrow-backed string support is provided by both `pd.StringDtype("pyarrow")`
    and `pd.ArrowDtype(pa.string())`. `pd.StringDtype("pyarrow")` is described below
    in the [string section](#api-arrays-string) and will be returned if the string
    alias `"string[pyarrow]"` is specified. `pd.ArrowDtype(pa.string())` generally
    has better interoperability with [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of different types.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Pyarrow 支持的字符串支持由 `pd.StringDtype("pyarrow")` 和 `pd.ArrowDtype(pa.string())`
    提供。如果指定了字符串别名 `"string[pyarrow]"`，则会返回 `pd.StringDtype("pyarrow")`，如下所述在 [string
    部分](#api-arrays-string) 中描述。 `pd.ArrowDtype(pa.string())` 通常与不同类型的 [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") 具有更好的互操作性。
- en: While individual values in an [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") are stored as a PyArrow objects, scalars
    are **returned** as Python scalars corresponding to the data type, e.g. a PyArrow
    int64 will be returned as Python int, or [`NA`](api/pandas.NA.html#pandas.NA "pandas.NA")
    for missing values.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") 中，单个值存储为 PyArrow 对象，而标量则以对应的 Python 标量返回，例如，PyArrow
    int64 将返回为 Python int，或者对于缺失值，返回 [`NA`](api/pandas.NA.html#pandas.NA "pandas.NA")。
- en: '| [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")(values) | Pandas ExtensionArray backed by
    a PyArrow ChunkedArray. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")(values) | 由 PyArrow ChunkedArray 支持的 Pandas
    ExtensionArray。 |'
- en: '| [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")(pyarrow_dtype)
    | An ExtensionDtype for PyArrow data types. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")(pyarrow_dtype)
    | 适用于 PyArrow 数据类型的 ExtensionDtype。 |'
- en: 'For more information, please see the [PyArrow user guide](../user_guide/pyarrow.html#pyarrow)  ###
    Datetimes'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '欲了解更多信息，请参阅 [PyArrow 用户指南](../user_guide/pyarrow.html#pyarrow)  ### Datetimes'
- en: NumPy cannot natively represent timezone-aware datetimes. pandas supports this
    with the [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") extension array, which can hold timezone-naive
    or timezone-aware values.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 无法本地表示带时区的日期时间。pandas 支持使用 [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") 扩展数组来实现这一点，该数组可以保存时区非感知或时区感知的值。
- en: '[`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp"),
    a subclass of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)"), is pandas’ scalar type for timezone-naive or timezone-aware
    datetime data. [`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT") is the missing
    value for datetime data.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")是
    pandas 的标量类型，用于时区非感知或时区感知的日期时间数据。[`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT")是缺失的日期时间数据值。'
- en: '| [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")([ts_input, year, month, day, ...])
    | Pandas replacement for python datetime.datetime object. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")([ts_input, year, month, day, ...])
    | Pandas 替代了 Python datetime.datetime 对象。 |'
- en: Properties
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Timestamp.asm8`](api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | Return numpy datetime64 format in nanoseconds. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.asm8`](api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | 返回纳秒单位的 numpy datetime64 格式。 |'
- en: '| [`Timestamp.day`](api/pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day`](api/pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
- en: '| [`Timestamp.dayofweek`](api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | Return day of the week. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dayofweek`](api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | 返回星期几。 |'
- en: '| [`Timestamp.day_of_week`](api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | Return day of the week. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_of_week`](api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | 返回星期几。 |'
- en: '| [`Timestamp.dayofyear`](api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | Return the day of the year. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dayofyear`](api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | 返回一年中的第几天。 |'
- en: '| [`Timestamp.day_of_year`](api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | Return the day of the year. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_of_year`](api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | 返回一年中的第几天。 |'
- en: '| [`Timestamp.days_in_month`](api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | Return the number of days in the month. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.days_in_month`](api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | 返回月份的天数。 |'
- en: '| [`Timestamp.daysinmonth`](api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | Return the number of days in the month. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.daysinmonth`](api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | 返回月份的天数。 |'
- en: '| [`Timestamp.fold`](api/pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fold`](api/pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
- en: '| [`Timestamp.hour`](api/pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.hour`](api/pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
- en: '| [`Timestamp.is_leap_year`](api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | Return True if year is a leap year. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_leap_year`](api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | 如果年份是闰年则返回 True。 |'
- en: '| [`Timestamp.is_month_end`](api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | Check if the date is the last day of the month.
    |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_month_end`](api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | 检查日期是否是月份的最后一天。 |'
- en: '| [`Timestamp.is_month_start`](api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | Check if the date is the first day of the
    month. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_month_start`](api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | 检查日期是否是月份的第一天。 |'
- en: '| [`Timestamp.is_quarter_end`](api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | Check if date is last day of the quarter.
    |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_quarter_end`](api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | 检查日期是否是季度的最后一天。 |'
- en: '| [`Timestamp.is_quarter_start`](api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | Check if the date is the first day of the
    quarter. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_quarter_start`](api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | 检查日期是否是季度的第一天。 |'
- en: '| [`Timestamp.is_year_end`](api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | Return True if date is last day of the year.
    |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_year_end`](api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | 如果日期是一年的最后一天，则返回True。 |'
- en: '| [`Timestamp.is_year_start`](api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | Return True if date is first day of the year.
    |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_year_start`](api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | 如果日期是一年的第一天，则返回True。 |'
- en: '| [`Timestamp.max`](api/pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.max`](api/pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
- en: '| [`Timestamp.microsecond`](api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.microsecond`](api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
- en: '| [`Timestamp.min`](api/pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.min`](api/pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
- en: '| [`Timestamp.minute`](api/pandas.Timestamp.minute.html#pandas.Timestamp.minute
    "pandas.Timestamp.minute") |  |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.minute`](api/pandas.Timestamp.minute.html#pandas.Timestamp.minute
    "pandas.Timestamp.minute") |  |'
- en: '| [`Timestamp.month`](api/pandas.Timestamp.month.html#pandas.Timestamp.month
    "pandas.Timestamp.month") |  |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.month`](api/pandas.Timestamp.month.html#pandas.Timestamp.month
    "pandas.Timestamp.month") |  |'
- en: '| [`Timestamp.nanosecond`](api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.nanosecond`](api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
- en: '| [`Timestamp.quarter`](api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter
    "pandas.Timestamp.quarter") | Return the quarter of the year. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.quarter`](api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter
    "pandas.Timestamp.quarter") | 返回一年中的季度。 |'
- en: '| [`Timestamp.resolution`](api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.resolution`](api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
- en: '| [`Timestamp.second`](api/pandas.Timestamp.second.html#pandas.Timestamp.second
    "pandas.Timestamp.second") |  |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.second`](api/pandas.Timestamp.second.html#pandas.Timestamp.second
    "pandas.Timestamp.second") |  |'
- en: '| [`Timestamp.tz`](api/pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | Alias for tzinfo. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz`](api/pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | tzinfo的别名。 |'
- en: '| [`Timestamp.tzinfo`](api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo
    "pandas.Timestamp.tzinfo") |  |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tzinfo`](api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo
    "pandas.Timestamp.tzinfo") |  |'
- en: '| [`Timestamp.unit`](api/pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | The abbreviation associated with self._creso. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.unit`](api/pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | 与self._creso相关联的缩写。 |'
- en: '| [`Timestamp.value`](api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") |  |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.value`](api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") |  |'
- en: '| [`Timestamp.week`](api/pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | Return the week number of the year. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.week`](api/pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | 返回一年中的周数。 |'
- en: '| [`Timestamp.weekofyear`](api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | Return the week number of the year. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.weekofyear`](api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | 返回一年中的周数。 |'
- en: '| [`Timestamp.year`](api/pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.year`](api/pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
- en: Methods
  id: totrans-94
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Timestamp.as_unit`](api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit
    "pandas.Timestamp.as_unit")(unit[, round_ok]) | Convert the underlying int64 representaton
    to the given unit. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.as_unit`](api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit
    "pandas.Timestamp.as_unit")(unit[, round_ok]) | 将底层int64表示转换为给定的单位。 |'
- en: '| [`Timestamp.astimezone`](api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.astimezone`](api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | 将时区感知的Timestamp转换为另一个时区。 |'
- en: '| [`Timestamp.ceil`](api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | Return a new Timestamp ceiled to this resolution. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.ceil`](api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | 返回一个新的Timestamp，其分辨率为此。 |'
- en: '| [`Timestamp.combine`](api/pandas.Timestamp.combine.html#pandas.Timestamp.combine
    "pandas.Timestamp.combine")(date, time) | Combine date, time into datetime with
    same date and time fields. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.combine`](api/pandas.Timestamp.combine.html#pandas.Timestamp.combine
    "pandas.Timestamp.combine")(date, time) | 将日期、时间组合为具有相同日期和时间字段的日期时间。 |'
- en: '| [`Timestamp.ctime`](api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime
    "pandas.Timestamp.ctime")() | Return ctime() style string. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.ctime`](api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime
    "pandas.Timestamp.ctime")() | 返回 ctime() 格式的字符串。 |'
- en: '| [`Timestamp.date`](api/pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | Return date object with same year, month and day. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.date`](api/pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | 返回具有相同年、月和日的日期对象。 |'
- en: '| [`Timestamp.day_name`](api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name")([locale]) | Return the day name of the Timestamp
    with specified locale. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_name`](api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name")([locale]) | 返回具有指定语言环境的时间戳的星期几名称。 |'
- en: '| [`Timestamp.dst`](api/pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | Return the daylight saving time (DST) adjustment. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dst`](api/pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | 返回夏令时（DST）调整。 |'
- en: '| [`Timestamp.floor`](api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent]) | Return a new Timestamp
    floored to this resolution. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.floor`](api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent]) | 返回一个新的时间戳，以此分辨率向下取整。
    |'
- en: '| [`Timestamp.fromordinal`](api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | Construct a timestamp from a
    a proleptic Gregorian ordinal. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fromordinal`](api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | 从普通的格里高利历序数构造时间戳。 |'
- en: '| [`Timestamp.fromtimestamp`](api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | Transform timestamp[, tz] to tz''s local
    time from POSIX timestamp. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fromtimestamp`](api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | 将时间戳（带时区）从 POSIX 时间戳转换为 tz 的本地时间。 |'
- en: '| [`Timestamp.isocalendar`](api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | Return a named tuple containing ISO year,
    week number, and weekday. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isocalendar`](api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | 返回包含 ISO 年、周数和工作日的命名元组。 |'
- en: '| [`Timestamp.isoformat`](api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat")([sep, timespec]) | Return the time formatted according
    to ISO 8601. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isoformat`](api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat")([sep, timespec]) | 根据 ISO 8601 格式返回时间。 |'
- en: '| [`Timestamp.isoweekday`](api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | Return the day of the week represented by the
    date. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isoweekday`](api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | 返回日期表示的星期几。 |'
- en: '| [`Timestamp.month_name`](api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | Return the month name of the Timestamp
    with specified locale. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.month_name`](api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | 返回具有指定语言环境的时间戳的月份名称。 |'
- en: '| [`Timestamp.normalize`](api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | Normalize Timestamp to midnight, preserving
    tz information. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.normalize`](api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | 将时间戳标准化为午夜，保留时区信息。 |'
- en: '| [`Timestamp.now`](api/pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | Return new Timestamp object representing current time local to tz. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.now`](api/pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | 返回表示当前时间的新时间戳对象，本地化到 tz。 |'
- en: '| [`Timestamp.replace`](api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace")([year, month, day, hour, ...]) | Implements datetime.replace,
    handles nanoseconds. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.replace`](api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace")([year, month, day, hour, ...]) | 实现 datetime.replace，处理纳秒。
    |'
- en: '| [`Timestamp.round`](api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round")(freq[, ambiguous, nonexistent]) | Round the Timestamp
    to the specified resolution. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.round`](api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round")(freq[, ambiguous, nonexistent]) | 将时间戳四舍五入到指定的分辨率。 |'
- en: '| [`Timestamp.strftime`](api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime
    "pandas.Timestamp.strftime")(format) | Return a formatted string of the Timestamp.
    |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.strftime`](api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime
    "pandas.Timestamp.strftime")(format) | 返回 Timestamp 的格式化字符串。 |'
- en: '| [`Timestamp.strptime`](api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime")(string, format) | Function is not implemented. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.strptime`](api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime")(string, format) | 函数未实现。 |'
- en: '| [`Timestamp.time`](api/pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | Return time object with same time but with tzinfo=None. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.time`](api/pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | 返回具有相同时间但 tzinfo=None 的时间对象。 |'
- en: '| [`Timestamp.timestamp`](api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | Return POSIX timestamp as float. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timestamp`](api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | 返回 POSIX 时间戳作为浮点数。 |'
- en: '| [`Timestamp.timetuple`](api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | Return time tuple, compatible with time.localtime().
    |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timetuple`](api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | 返回与 time.localtime() 兼容的时间元组。 |'
- en: '| [`Timestamp.timetz`](api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz
    "pandas.Timestamp.timetz")() | Return time object with same time and tzinfo. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timetz`](api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz
    "pandas.Timestamp.timetz")() | 返回具有相同时间和 tzinfo 的时间对象。 |'
- en: '| [`Timestamp.to_datetime64`](api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | Return a numpy.datetime64 object with same
    precision. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_datetime64`](api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | 返回具有相同精度的 numpy.datetime64 对象。 |'
- en: '| [`Timestamp.to_numpy`](api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy
    "pandas.Timestamp.to_numpy")([dtype, copy]) | Convert the Timestamp to a NumPy
    datetime64. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_numpy`](api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy
    "pandas.Timestamp.to_numpy")([dtype, copy]) | 将 Timestamp 转换为 NumPy datetime64。
    |'
- en: '| [`Timestamp.to_julian_date`](api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | Convert TimeStamp to a Julian Date. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_julian_date`](api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | 将 TimeStamp 转换为儒略日。 |'
- en: '| [`Timestamp.to_period`](api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | Return an period of which this timestamp
    is an observation. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_period`](api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | 返回一个周期，该时间戳是其观测值。 |'
- en: '| [`Timestamp.to_pydatetime`](api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | Convert a Timestamp object to a native
    Python datetime object. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_pydatetime`](api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | 将 Timestamp 对象转换为本机 Python datetime
    对象。 |'
- en: '| [`Timestamp.today`](api/pandas.Timestamp.today.html#pandas.Timestamp.today
    "pandas.Timestamp.today")([tz]) | Return the current time in the local timezone.
    |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.today`](api/pandas.Timestamp.today.html#pandas.Timestamp.today
    "pandas.Timestamp.today")([tz]) | 返回当前时区的当前时间。 |'
- en: '| [`Timestamp.toordinal`](api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | Return proleptic Gregorian ordinal. |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.toordinal`](api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | 返回普罗列普提克·格里高利的序数。 |'
- en: '| [`Timestamp.tz_convert`](api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz_convert`](api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | 将带有时区信息的 Timestamp 转换为另一个时区。 |'
- en: '| [`Timestamp.tz_localize`](api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, ...]) | Localize the Timestamp
    to a timezone. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz_localize`](api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, ...]) | 将时间戳本地化为时区。 |'
- en: '| [`Timestamp.tzname`](api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname
    "pandas.Timestamp.tzname")() | Return time zone name. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tzname`](api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname
    "pandas.Timestamp.tzname")() | 返回时区名称。 |'
- en: '| [`Timestamp.utcfromtimestamp`](api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | Construct a timezone-aware UTC datetime
    from a POSIX timestamp. |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcfromtimestamp`](api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | 从 POSIX 时间戳构造带有时区信息的 UTC 日期时间。 |'
- en: '| [`Timestamp.utcnow`](api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow
    "pandas.Timestamp.utcnow")() | Return a new Timestamp representing UTC day and
    time. |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcnow`](api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow
    "pandas.Timestamp.utcnow")() | 返回表示 UTC 日期和时间的新 Timestamp。 |'
- en: '| [`Timestamp.utcoffset`](api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | Return utc offset. |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcoffset`](api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | 返回 UTC 偏移量。 |'
- en: '| [`Timestamp.utctimetuple`](api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | Return UTC time tuple, compatible with time.localtime().
    |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utctimetuple`](api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | 返回 UTC 时间元组，与 time.localtime() 兼容。 |'
- en: '| [`Timestamp.weekday`](api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday
    "pandas.Timestamp.weekday")() | Return the day of the week represented by the
    date. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.weekday`](api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday
    "pandas.Timestamp.weekday")() | 返回由日期表示的星期几。 |'
- en: A collection of timestamps may be stored in a [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"). For timezone-aware data, the `.dtype` of a [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") is a [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype"). For timezone-naive data, `np.dtype("datetime64[ns]")`
    is used.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳的集合可以存储在 [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") 中。对于带时区的数据，[`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") 的 `.dtype` 是 [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")。对于时区非感知的数据，使用 `np.dtype("datetime64[ns]")`。
- en: If the data are timezone-aware, then every value in the array must have the
    same timezone.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据具有时区感知，则数组中的每个值必须具有相同的时区。
- en: '| [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")(values[, dtype, freq, copy]) | Pandas ExtensionArray
    for tz-naive or tz-aware datetime data. |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")(values[, dtype, freq, copy]) | 用于时区非感知或时区感知的日期时间数据的
    Pandas ExtensionArray。 |'
- en: '| [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")([unit, tz]) | An ExtensionDtype for timezone-aware datetime
    data. |  ### Timedeltas'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")([unit, tz]) | 用于带时区的日期时间数据的 ExtensionDtype。 |  ### 时间间隔'
- en: NumPy can natively represent timedeltas. pandas provides [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") for symmetry with [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"). [`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT") is the
    missing value for timedelta data.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 可以本地表示时间间隔。pandas 提供了用于与 [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") 对称的 [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")。[`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT") 是时间间隔数据的缺失值。
- en: '| [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")([value, unit])
    | Represents a duration, the difference between two dates or times. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")([value, unit])
    | 表示持续时间，即两个日期或时间之间的差异。 |'
- en: Properties
  id: totrans-141
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Timedelta.asm8`](api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | Return a numpy timedelta64 array scalar view. |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.asm8`](api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | 返回 numpy timedelta64 数组标量视图。 |'
- en: '| [`Timedelta.components`](api/pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | Return a components namedtuple-like. |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.components`](api/pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | 返回类似于命名元组的组件。 |'
- en: '| [`Timedelta.days`](api/pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | Returns the days of the timedelta. |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.days`](api/pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | 返回时间间隔的天数。 |'
- en: '| [`Timedelta.max`](api/pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.max`](api/pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
- en: '| [`Timedelta.microseconds`](api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.microseconds`](api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
- en: '| [`Timedelta.min`](api/pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.min`](api/pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
- en: '| [`Timedelta.nanoseconds`](api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | Return the number of nanoseconds (n), where
    0 <= n < 1 microsecond. |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.nanoseconds`](api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | 返回纳秒数（n），其中 0 <= n < 1 微秒。 |'
- en: '| [`Timedelta.resolution`](api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.resolution`](api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
- en: '| [`Timedelta.seconds`](api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds
    "pandas.Timedelta.seconds") | Return the total hours, minutes, and seconds of
    the timedelta as seconds. |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.seconds`](api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds
    "pandas.Timedelta.seconds") | 返回时间增量的总小时、分钟和秒数（以秒为单位）。 |'
- en: '| [`Timedelta.unit`](api/pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.unit`](api/pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
- en: '| [`Timedelta.value`](api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") |  |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.value`](api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") |  |'
- en: '| [`Timedelta.view`](api/pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | Array view compatibility. |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.view`](api/pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | 数组视图兼容性。 |'
- en: Methods
  id: totrans-154
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Timedelta.as_unit`](api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit
    "pandas.Timedelta.as_unit")(unit[, round_ok]) | Convert the underlying int64 representation
    to the given unit. |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.as_unit`](api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit
    "pandas.Timedelta.as_unit")(unit[, round_ok]) | 将底层 int64 表示转换为给定单位。 |'
- en: '| [`Timedelta.ceil`](api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | Return a new Timedelta ceiled to this resolution. |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.ceil`](api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | 返回一个新的 Timedelta，它以这种分辨率进行了上舍入。 |'
- en: '| [`Timedelta.floor`](api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor")(freq) | Return a new Timedelta floored to this resolution.
    |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.floor`](api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor")(freq) | 返回一个新的 Timedelta，它以这种分辨率进行了下舍入。 |'
- en: '| [`Timedelta.isoformat`](api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | Format the Timedelta as ISO 8601 Duration. |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.isoformat`](api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | 将 Timedelta 格式化为 ISO 8601 时长。 |'
- en: '| [`Timedelta.round`](api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round")(freq) | Round the Timedelta to the specified resolution.
    |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.round`](api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round")(freq) | 将时间增量舍入到指定的分辨率。 |'
- en: '| [`Timedelta.to_pytimedelta`](api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | Convert a pandas Timedelta object into
    a python `datetime.timedelta` object. |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_pytimedelta`](api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | 将 pandas Timedelta 对象转换为 python `datetime.timedelta`
    对象。 |'
- en: '| [`Timedelta.to_timedelta64`](api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | Return a numpy.timedelta64 object with
    ''ns'' precision. |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_timedelta64`](api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | 返回一个具有''ns''精度的 numpy.timedelta64 对象。 |'
- en: '| [`Timedelta.to_numpy`](api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy
    "pandas.Timedelta.to_numpy")([dtype, copy]) | Convert the Timedelta to a NumPy
    timedelta64. |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_numpy`](api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy
    "pandas.Timedelta.to_numpy")([dtype, copy]) | 将 Timedelta 转换为 NumPy timedelta64。
    |'
- en: '| [`Timedelta.total_seconds`](api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | Total seconds in the duration. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.total_seconds`](api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | 时长的总秒数。 |'
- en: A collection of [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    may be stored in a `TimedeltaArray`.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    集合可以存储在 `TimedeltaArray` 中。
- en: '| [`arrays.TimedeltaArray`](api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")(values[, dtype, freq, ...]) | Pandas ExtensionArray
    for timedelta data. |  ### Periods'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`arrays.TimedeltaArray`](api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")(values[, dtype, freq, ...]) | 用于 timedelta 数据的
    Pandas ExtensionArray。 |  ### 时期'
- en: pandas represents spans of times as [`Period`](api/pandas.Period.html#pandas.Period
    "pandas.Period") objects.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 以 [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period") 对象表示时间跨度。
- en: Period
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时期
- en: '| [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")([value, freq, ordinal, year, month, ...])
    | Represents a period of time. |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")([value, freq, ordinal, year, month, ...])
    | 表示一段时间。 |'
- en: Properties
  id: totrans-169
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Period.day`](api/pandas.Period.day.html#pandas.Period.day "pandas.Period.day")
    | Get day of the month that a Period falls on. |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day`](api/pandas.Period.day.html#pandas.Period.day "pandas.Period.day")
    | 获取 Period 所在月份的日期。 |'
- en: '| [`Period.dayofweek`](api/pandas.Period.dayofweek.html#pandas.Period.dayofweek
    "pandas.Period.dayofweek") | Day of the week the period lies in, with Monday=0
    and Sunday=6. |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.dayofweek`](api/pandas.Period.dayofweek.html#pandas.Period.dayofweek
    "pandas.Period.dayofweek") | Period 所在的星期几，星期一为 0，星期日为 6。 |'
- en: '| [`Period.day_of_week`](api/pandas.Period.day_of_week.html#pandas.Period.day_of_week
    "pandas.Period.day_of_week") | Day of the week the period lies in, with Monday=0
    and Sunday=6. |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day_of_week`](api/pandas.Period.day_of_week.html#pandas.Period.day_of_week
    "pandas.Period.day_of_week") | Period 所在的星期几，星期一为 0，星期日为 6。 |'
- en: '| [`Period.dayofyear`](api/pandas.Period.dayofyear.html#pandas.Period.dayofyear
    "pandas.Period.dayofyear") | Return the day of the year. |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.dayofyear`](api/pandas.Period.dayofyear.html#pandas.Period.dayofyear
    "pandas.Period.dayofyear") | 返回一年中的第几天。 |'
- en: '| [`Period.day_of_year`](api/pandas.Period.day_of_year.html#pandas.Period.day_of_year
    "pandas.Period.day_of_year") | Return the day of the year. |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day_of_year`](api/pandas.Period.day_of_year.html#pandas.Period.day_of_year
    "pandas.Period.day_of_year") | 返回一年中的第几天。 |'
- en: '| [`Period.days_in_month`](api/pandas.Period.days_in_month.html#pandas.Period.days_in_month
    "pandas.Period.days_in_month") | Get the total number of days in the month that
    this period falls on. |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.days_in_month`](api/pandas.Period.days_in_month.html#pandas.Period.days_in_month
    "pandas.Period.days_in_month") | 获取该期间所在月份的总天数。 |'
- en: '| [`Period.daysinmonth`](api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth
    "pandas.Period.daysinmonth") | Get the total number of days of the month that
    this period falls on. |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.daysinmonth`](api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth
    "pandas.Period.daysinmonth") | 获取该期间所在月份的总天数。 |'
- en: '| [`Period.end_time`](api/pandas.Period.end_time.html#pandas.Period.end_time
    "pandas.Period.end_time") | Get the Timestamp for the end of the period. |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.end_time`](api/pandas.Period.end_time.html#pandas.Period.end_time
    "pandas.Period.end_time") | 获取周期结束的时间戳。 |'
- en: '| [`Period.freq`](api/pandas.Period.freq.html#pandas.Period.freq "pandas.Period.freq")
    |  |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.freq`](api/pandas.Period.freq.html#pandas.Period.freq "pandas.Period.freq")
    |  |'
- en: '| [`Period.freqstr`](api/pandas.Period.freqstr.html#pandas.Period.freqstr "pandas.Period.freqstr")
    | Return a string representation of the frequency. |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.freqstr`](api/pandas.Period.freqstr.html#pandas.Period.freqstr "pandas.Period.freqstr")
    | 返回频率的字符串表示形式。 |'
- en: '| [`Period.hour`](api/pandas.Period.hour.html#pandas.Period.hour "pandas.Period.hour")
    | Get the hour of the day component of the Period. |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.hour`](api/pandas.Period.hour.html#pandas.Period.hour "pandas.Period.hour")
    | 获取 Period 的天部分的小时。 |'
- en: '| [`Period.is_leap_year`](api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year
    "pandas.Period.is_leap_year") | Return True if the period''s year is in a leap
    year. |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.is_leap_year`](api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year
    "pandas.Period.is_leap_year") | 如果 Period 所在的年份是闰年，则返回 True。 |'
- en: '| [`Period.minute`](api/pandas.Period.minute.html#pandas.Period.minute "pandas.Period.minute")
    | Get minute of the hour component of the Period. |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.minute`](api/pandas.Period.minute.html#pandas.Period.minute "pandas.Period.minute")
    | 获取 Period 的小时部分的分钟。 |'
- en: '| [`Period.month`](api/pandas.Period.month.html#pandas.Period.month "pandas.Period.month")
    | Return the month this Period falls on. |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.month`](api/pandas.Period.month.html#pandas.Period.month "pandas.Period.month")
    | 返回 Period 所在的月份。 |'
- en: '| [`Period.ordinal`](api/pandas.Period.ordinal.html#pandas.Period.ordinal "pandas.Period.ordinal")
    |  |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.ordinal`](api/pandas.Period.ordinal.html#pandas.Period.ordinal "pandas.Period.ordinal")
    |  |'
- en: '| [`Period.quarter`](api/pandas.Period.quarter.html#pandas.Period.quarter "pandas.Period.quarter")
    | Return the quarter this Period falls on. |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.quarter`](api/pandas.Period.quarter.html#pandas.Period.quarter "pandas.Period.quarter")
    | 返回 Period 所在的季度。 |'
- en: '| [`Period.qyear`](api/pandas.Period.qyear.html#pandas.Period.qyear "pandas.Period.qyear")
    | Fiscal year the Period lies in according to its starting-quarter. |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.qyear`](api/pandas.Period.qyear.html#pandas.Period.qyear "pandas.Period.qyear")
    | 根据其开始季度确定的 Period 所在财年。 |'
- en: '| [`Period.second`](api/pandas.Period.second.html#pandas.Period.second "pandas.Period.second")
    | Get the second component of the Period. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.second`](api/pandas.Period.second.html#pandas.Period.second "pandas.Period.second")
    | 获取 Period 的秒钟部分。 |'
- en: '| [`Period.start_time`](api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") | Get the Timestamp for the start of the period. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.start_time`](api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") | 获取周期开始的时间戳。'
- en: '| [`Period.week`](api/pandas.Period.week.html#pandas.Period.week "pandas.Period.week")
    | Get the week of the year on the given Period. |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.week`](api/pandas.Period.week.html#pandas.Period.week "pandas.Period.week")
    | 获取给定周期的年份周数。'
- en: '| [`Period.weekday`](api/pandas.Period.weekday.html#pandas.Period.weekday "pandas.Period.weekday")
    | Day of the week the period lies in, with Monday=0 and Sunday=6. |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.weekday`](api/pandas.Period.weekday.html#pandas.Period.weekday "pandas.Period.weekday")
    | 周期所在的星期几，星期一=0，星期日=6。'
- en: '| [`Period.weekofyear`](api/pandas.Period.weekofyear.html#pandas.Period.weekofyear
    "pandas.Period.weekofyear") | Get the week of the year on the given Period. |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.weekofyear`](api/pandas.Period.weekofyear.html#pandas.Period.weekofyear
    "pandas.Period.weekofyear") | 获取给定周期的年份周数。'
- en: '| [`Period.year`](api/pandas.Period.year.html#pandas.Period.year "pandas.Period.year")
    | Return the year this Period falls on. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.year`](api/pandas.Period.year.html#pandas.Period.year "pandas.Period.year")
    | 返回此周期所在的年份。'
- en: Methods
  id: totrans-193
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Period.asfreq`](api/pandas.Period.asfreq.html#pandas.Period.asfreq "pandas.Period.asfreq")(freq[, how])
    | Convert Period to desired frequency, at the start or end of the interval. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.asfreq`](api/pandas.Period.asfreq.html#pandas.Period.asfreq "pandas.Period.asfreq")(freq[, how])
    | 将周期转换为所需频率，在间隔的开始或结束。'
- en: '| [`Period.now`](api/pandas.Period.now.html#pandas.Period.now "pandas.Period.now")(freq)
    | Return the period of now''s date. |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.now`](api/pandas.Period.now.html#pandas.Period.now "pandas.Period.now")(freq)
    | 返回当前日期的周期。'
- en: '| [`Period.strftime`](api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime")(fmt) | Returns a formatted string representation of
    the [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period"). |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.strftime`](api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime")(fmt) | 返回[`Period`](api/pandas.Period.html#pandas.Period
    "pandas.Period")的格式化字符串表示。'
- en: '| [`Period.to_timestamp`](api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp")([freq, how]) | Return the Timestamp representation
    of the Period. |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.to_timestamp`](api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp") | 返回周期的时间戳表示。'
- en: A collection of [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")
    may be stored in a [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray"). Every period in a [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") must have the same `freq`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 一组[`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")可以存储在[`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")中。[`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")中的每个周期必须具有相同的`freq`。
- en: '| [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")(values[, dtype, freq, copy]) | Pandas ExtensionArray
    for storing Period data. |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")(values[, dtype, freq, copy]) | 用于存储周期数据的Pandas ExtensionArray。'
- en: '| [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype "pandas.PeriodDtype")(freq)
    | An ExtensionDtype for Period data. |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype "pandas.PeriodDtype")(freq)
    | 用于周期数据的ExtensionDtype。'
- en: '### Intervals'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '### 间隔'
- en: Arbitrary intervals can be represented as [`Interval`](api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 任意间隔可以表示为[`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")对象。
- en: '| [`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    | Immutable object implementing an Interval, a bounded slice-like interval. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    | 实现间隔的不可变对象，类似于有界的切片间隔。'
- en: Properties
  id: totrans-204
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Interval.closed`](api/pandas.Interval.closed.html#pandas.Interval.closed
    "pandas.Interval.closed") | String describing the inclusive side the intervals.
    |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed`](api/pandas.Interval.closed.html#pandas.Interval.closed
    "pandas.Interval.closed") | 描述间隔的包含侧的字符串。'
- en: '| [`Interval.closed_left`](api/pandas.Interval.closed_left.html#pandas.Interval.closed_left
    "pandas.Interval.closed_left") | Check if the interval is closed on the left side.
    |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed_left`](api/pandas.Interval.closed_left.html#pandas.Interval.closed_left
    "pandas.Interval.closed_left") | 检查间隔是否在左侧关闭。'
- en: '| [`Interval.closed_right`](api/pandas.Interval.closed_right.html#pandas.Interval.closed_right
    "pandas.Interval.closed_right") | Check if the interval is closed on the right
    side. |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed_right`](api/pandas.Interval.closed_right.html#pandas.Interval.closed_right
    "pandas.Interval.closed_right") | 检查区间是否在右侧关闭。 |'
- en: '| [`Interval.is_empty`](api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") | Indicates if an interval is empty, meaning it contains
    no points. |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.is_empty`](api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") | 指示区间是否为空，即不包含任何点。 |'
- en: '| [`Interval.left`](api/pandas.Interval.left.html#pandas.Interval.left "pandas.Interval.left")
    | Left bound for the interval. |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.left`](api/pandas.Interval.left.html#pandas.Interval.left "pandas.Interval.left")
    | 区间的左边界。 |'
- en: '| [`Interval.length`](api/pandas.Interval.length.html#pandas.Interval.length
    "pandas.Interval.length") | Return the length of the Interval. |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.length`](api/pandas.Interval.length.html#pandas.Interval.length
    "pandas.Interval.length") | 返回区间的长度。 |'
- en: '| [`Interval.mid`](api/pandas.Interval.mid.html#pandas.Interval.mid "pandas.Interval.mid")
    | Return the midpoint of the Interval. |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.mid`](api/pandas.Interval.mid.html#pandas.Interval.mid "pandas.Interval.mid")
    | 返回区间的中点。 |'
- en: '| [`Interval.open_left`](api/pandas.Interval.open_left.html#pandas.Interval.open_left
    "pandas.Interval.open_left") | Check if the interval is open on the left side.
    |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.open_left`](api/pandas.Interval.open_left.html#pandas.Interval.open_left
    "pandas.Interval.open_left") | 检查区间是否在左侧开放。 |'
- en: '| [`Interval.open_right`](api/pandas.Interval.open_right.html#pandas.Interval.open_right
    "pandas.Interval.open_right") | Check if the interval is open on the right side.
    |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.open_right`](api/pandas.Interval.open_right.html#pandas.Interval.open_right
    "pandas.Interval.open_right") | 检查区间是否在右侧开放。 |'
- en: '| [`Interval.overlaps`](api/pandas.Interval.overlaps.html#pandas.Interval.overlaps
    "pandas.Interval.overlaps")(other) | Check whether two Interval objects overlap.
    |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.overlaps`](api/pandas.Interval.overlaps.html#pandas.Interval.overlaps
    "pandas.Interval.overlaps")(other) | 检查两个区间对象是否重叠。 |'
- en: '| [`Interval.right`](api/pandas.Interval.right.html#pandas.Interval.right "pandas.Interval.right")
    | Right bound for the interval. |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.right`](api/pandas.Interval.right.html#pandas.Interval.right "pandas.Interval.right")
    | 区间的右边界。 |'
- en: A collection of intervals may be stored in an [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray").
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 区间集合可以存储在 [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") 中。
- en: '| [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")(data[, closed, dtype, ...]) | Pandas array for
    interval data that are closed on the same side. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")(data[, closed, dtype, ...]) | 区间数据的 Pandas 数组，这些数据在同一侧关闭。
    |'
- en: '| [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype "pandas.IntervalDtype")([subtype, closed])
    | An ExtensionDtype for Interval data. |  ### Nullable integer'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype "pandas.IntervalDtype")([subtype,
    closed]) | 用于区间数据的扩展数据类型。 |  ### 可空整数'
- en: '[`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)") cannot natively represent integer-data with missing values.
    pandas provides this through [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray").'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(在 NumPy v1.26 中)") 无法原生表示具有缺失值的整数数据。pandas 通过 [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") 提供了此功能。'
- en: '| [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")(values, mask[, copy]) | Array of integer (optional
    missing) values. |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")(values, mask[, copy]) | 整数（可选缺失）值的数组。 |'
- en: '| [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype "pandas.Int8Dtype")()
    | An ExtensionDtype for int8 integer data. |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype "pandas.Int8Dtype")()
    | 用于 int8 整数数据的扩展数据类型。 |'
- en: '| [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype "pandas.Int16Dtype")()
    | An ExtensionDtype for int16 integer data. |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype "pandas.Int16Dtype")()
    | 用于 int16 整数数据的扩展数据类型。 |'
- en: '| [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype "pandas.Int32Dtype")()
    | An ExtensionDtype for int32 integer data. |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype "pandas.Int32Dtype")()
    | 用于 int32 整数数据的扩展数据类型。 |'
- en: '| [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype "pandas.Int64Dtype")()
    | An ExtensionDtype for int64 integer data. |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype "pandas.Int64Dtype")()
    | 用于int64整数数据的ExtensionDtype。 |'
- en: '| [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype "pandas.UInt8Dtype")()
    | An ExtensionDtype for uint8 integer data. |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype "pandas.UInt8Dtype")()
    | 用于uint8整数数据的ExtensionDtype。 |'
- en: '| [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype "pandas.UInt16Dtype")()
    | An ExtensionDtype for uint16 integer data. |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype "pandas.UInt16Dtype")()
    | 用于uint16整数数据的ExtensionDtype。 |'
- en: '| [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype "pandas.UInt32Dtype")()
    | An ExtensionDtype for uint32 integer data. |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype "pandas.UInt32Dtype")()
    | 用于uint32整数数据的ExtensionDtype。 |'
- en: '| [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype "pandas.UInt64Dtype")()
    | An ExtensionDtype for uint64 integer data. |  ### Nullable float'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype "pandas.UInt64Dtype")()
    | 用于uint64整数数据的ExtensionDtype。 |  ### 可空浮点数'
- en: '| [`arrays.FloatingArray`](api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray")(values, mask[, copy]) | Array of floating (optional
    missing) values. |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.FloatingArray`](api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray")(values, mask[, copy]) | 浮点（可选缺失）值的数组。 |'
- en: '| [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype "pandas.Float32Dtype")()
    | An ExtensionDtype for float32 data. |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype "pandas.Float32Dtype")()
    | 用于float32数据的ExtensionDtype。 |'
- en: '| [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype "pandas.Float64Dtype")()
    | An ExtensionDtype for float64 data. |  ### Categoricals'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype "pandas.Float64Dtype")()
    | 用于float64数据的ExtensionDtype。 |  ### 分类'
- en: pandas defines a custom data type for representing data that can take only a
    limited, fixed set of values. The dtype of a [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") can be described by a [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype").
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: pandas定义了一种自定义数据类型，用于表示只能取有限固定值集的数据。[`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")的dtype可以由[`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")描述。
- en: '| [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")([categories, ordered]) | Type for categorical data
    with the categories and orderedness. |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")([categories, ordered]) | 具有类别和有序性的分类数据类型。 |'
- en: '| [`CategoricalDtype.categories`](api/pandas.CategoricalDtype.categories.html#pandas.CategoricalDtype.categories
    "pandas.CategoricalDtype.categories") | An `Index` containing the unique categories
    allowed. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype.categories`](api/pandas.CategoricalDtype.categories.html#pandas.CategoricalDtype.categories
    "pandas.CategoricalDtype.categories") | 包含允许的唯一类别的`Index`。 |'
- en: '| [`CategoricalDtype.ordered`](api/pandas.CategoricalDtype.ordered.html#pandas.CategoricalDtype.ordered
    "pandas.CategoricalDtype.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype.ordered`](api/pandas.CategoricalDtype.ordered.html#pandas.CategoricalDtype.ordered
    "pandas.CategoricalDtype.ordered") | 类别是否具有有序关系。 |'
- en: Categorical data can be stored in a [`pandas.Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 分类数据可以存储在[`pandas.Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")中
- en: '| [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")(values[, categories, ordered, ...])
    | Represent a categorical variable in classic R / S-plus fashion. |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")(values[, categories, ordered, ...])
    | 以经典R / S-plus风格表示分类变量。 |'
- en: 'The alternative [`Categorical.from_codes()`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") constructor can be used when you have the categories
    and integer codes already:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 当您���经有类别和整数代码时，可以使用替代的[`Categorical.from_codes()`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes")构造函数：
- en: '| [`Categorical.from_codes`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes")(codes[, categories, ...]) | Make a Categorical
    type from codes and categories or dtype. |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.from_codes`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes")(codes[, categories, ...]) | 从代码和类别或dtype创建一个分类类型。
    |'
- en: The dtype information is available on the [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: dtype信息可在[`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")上找到
- en: '| [`Categorical.dtype`](api/pandas.Categorical.dtype.html#pandas.Categorical.dtype
    "pandas.Categorical.dtype") | The `CategoricalDtype` for this instance. |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.dtype`](api/pandas.Categorical.dtype.html#pandas.Categorical.dtype
    "pandas.Categorical.dtype") | 此实例的 `CategoricalDtype`。 |'
- en: '| [`Categorical.categories`](api/pandas.Categorical.categories.html#pandas.Categorical.categories
    "pandas.Categorical.categories") | The categories of this categorical. |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.categories`](api/pandas.Categorical.categories.html#pandas.Categorical.categories
    "pandas.Categorical.categories") | 这个分类的类别。 |'
- en: '| [`Categorical.ordered`](api/pandas.Categorical.ordered.html#pandas.Categorical.ordered
    "pandas.Categorical.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.ordered`](api/pandas.Categorical.ordered.html#pandas.Categorical.ordered
    "pandas.Categorical.ordered") | 类别是否具有有序关系。 |'
- en: '| [`Categorical.codes`](api/pandas.Categorical.codes.html#pandas.Categorical.codes
    "pandas.Categorical.codes") | The category codes of this categorical index. |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.codes`](api/pandas.Categorical.codes.html#pandas.Categorical.codes
    "pandas.Categorical.codes") | 这个分类索引的类别代码。 |'
- en: '`np.asarray(categorical)` works by implementing the array interface. Be aware,
    that this converts the [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") back to a NumPy array, so categories and order information
    is not preserved!'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.asarray(categorical)` 通过实现数组接口来运作。请注意，这会将 [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") 转换回 NumPy 数组，因此类别和顺序信息不会被保留！'
- en: '| [`Categorical.__array__`](api/pandas.Categorical.__array__.html#pandas.Categorical.__array__
    "pandas.Categorical.__array__")([dtype, copy]) | The numpy array interface. |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.__array__`](api/pandas.Categorical.__array__.html#pandas.Categorical.__array__
    "pandas.Categorical.__array__")([dtype, copy]) | numpy 数组接口。 |'
- en: A [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")
    can be stored in a [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    To create a Series of dtype `category`, use `cat = s.astype(dtype)` or `Series(...,
    dtype=dtype)` where `dtype` is either
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")
    可以存储在 [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series") 或 [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中。要创建 dtype 为 `category` 的 Series，请使用 `cat = s.astype(dtype)`
    或 `Series(..., dtype=dtype)`，其中 `dtype` 是'
- en: the string `'category'`
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串 `'category'`
- en: an instance of [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype").
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") 的一个实例。'
- en: 'If the [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series") is
    of dtype [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype"), `Series.cat` can be used to change the categorical
    data. See [Categorical accessor](series.html#api-series-cat) for more.  ### Sparse'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '如果 [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series") 的 dtype
    是 [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")，则可以使用 `Series.cat` 来更改分类数据。更多信息请参见 [分类访问器](series.html#api-series-cat)。  ###
    稀疏'
- en: Data where a single value is repeated many times (e.g. `0` or `NaN`) may be
    stored efficiently as a [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray").
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 数据中重复多次的单个值（例如 `0` 或 `NaN`）可以高效地存储为 [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")。
- en: '| [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")(data[, sparse_index, ...]) | An ExtensionArray for
    storing sparse data. |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")(data[, sparse_index, ...]) | 用于存储稀疏数据的 ExtensionArray。
    |'
- en: '| [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")([dtype, fill_value])
    | Dtype for data stored in `SparseArray`. |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")([dtype, fill_value])
    | 存储在 `SparseArray` 中的数据的 Dtype。 |'
- en: 'The `Series.sparse` accessor may be used to access sparse-specific attributes
    and methods if the [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    contains sparse values. See [Sparse accessor](series.html#api-series-sparse) and
    [the user guide](../user_guide/sparse.html#sparse) for more.  ### Strings'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '当 [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series") 包含稀疏值时，可以使用
    `Series.sparse` 访问器来访问稀疏特定的属性和方法。更多信息请参见 [稀疏访问器](series.html#api-series-sparse)
    和 [用户指南](../user_guide/sparse.html#sparse)。  ### 字符串'
- en: When working with text data, where each valid element is a string or missing,
    we recommend using [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") (with the alias `"string"`).
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理文本数据时，每个有效元素为字符串或缺失时，建议使用[`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype")（别名为`"string"`）。
- en: '| [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray")(values[, copy]) | Extension array for string data.
    |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray")(values[, copy]) | 用于字符串数据的扩展数组。 |'
- en: '| [`arrays.ArrowStringArray`](api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray")(values) | Extension array for string data in
    a `pyarrow.ChunkedArray`. |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.ArrowStringArray`](api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray")(values) | 用于`pyarrow.ChunkedArray`中的字符串数据的扩展数组。
    |'
- en: '| [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")([storage])
    | Extension dtype for string data. |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")([storage])
    | 用于字符串数据的扩展dtype。 |'
- en: 'The `Series.str` accessor is available for [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series") backed by a [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray"). See [String handling](series.html#api-series-str)
    for more.  ### Nullable Boolean'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '对于由[`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray")支持的[`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series")，可使用`Series.str`访问器。有关更多信息，请参见[字符串处理](series.html#api-series-str)。  ###
    可空布尔'
- en: The boolean dtype (with the alias `"boolean"`) provides support for storing
    boolean data (`True`, `False`) with missing values, which is not possible with
    a bool [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)").
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔dtype（别名为`"boolean"`）支持存储带有缺失值的布尔数据（`True`，`False`），这是使用布尔[`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(在 NumPy v1.26 中)")不可能的。
- en: '| [`arrays.BooleanArray`](api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")(values, mask[, copy]) | Array of boolean (True/False)
    data with missing values. |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.BooleanArray`](api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")(values, mask[, copy]) | 具有缺失值的布尔（True/False）数据数组。
    |'
- en: '| [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype "pandas.BooleanDtype")()
    | Extension dtype for boolean data. |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype "pandas.BooleanDtype")()
    | 用于布尔数据的扩展dtype。 |'
- en: Utilities
  id: totrans-263
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实用工具
- en: Constructors
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构造函数
- en: '| [`api.types.union_categoricals`](api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals")(to_union[, ...]) | Combine list-like of
    Categorical-like, unioning categories. |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.union_categoricals`](api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals")(to_union[, ...]) | 合并类别列表，联合类别。 |'
- en: '| [`api.types.infer_dtype`](api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype")(value[, skipna]) | Return a string label of the
    type of a scalar or list-like of values. |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.infer_dtype`](api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype")(value[, skipna]) | 返回标量或类似值的类型的字符串标签。 |'
- en: '| [`api.types.pandas_dtype`](api/pandas.api.types.pandas_dtype.html#pandas.api.types.pandas_dtype
    "pandas.api.types.pandas_dtype")(dtype) | Convert input into a pandas only dtype
    object or a numpy dtype object. |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.pandas_dtype`](api/pandas.api.types.pandas_dtype.html#pandas.api.types.pandas_dtype
    "pandas.api.types.pandas_dtype")(dtype) | 将输入转换为仅限于 pandas 的 dtype 对象或 numpy 的
    dtype 对象。 |'
- en: Data type introspection
  id: totrans-268
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据类型内省
- en: '| [`api.types.is_any_real_numeric_dtype`](api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of a real number dtype. |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_any_real_numeric_dtype`](api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype")(arr_or_dtype) | 检查提供的数组或dtype是否为实数dtype。
    |'
- en: '| [`api.types.is_bool_dtype`](api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype")(arr_or_dtype) | Check whether the provided array
    or dtype is of a boolean dtype. |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_bool_dtype`](api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype")(arr_or_dtype) | 检查提供的数组或dtype是否为布尔dtype。 |'
- en: '| [`api.types.is_categorical_dtype`](api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Categorical dtype. |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_categorical_dtype`](api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为分类数据类型。
    |'
- en: '| [`api.types.is_complex_dtype`](api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype
    "pandas.api.types.is_complex_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a complex dtype. |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_complex_dtype`](api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype
    "pandas.api.types.is_complex_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为复数数据类型。 |'
- en: '| [`api.types.is_datetime64_any_dtype`](api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype
    "pandas.api.types.is_datetime64_any_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of the datetime64 dtype. |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_any_dtype`](api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype
    "pandas.api.types.is_datetime64_any_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为datetime64数据类型。
    |'
- en: '| [`api.types.is_datetime64_dtype`](api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype
    "pandas.api.types.is_datetime64_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the datetime64 dtype. |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_dtype`](api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype
    "pandas.api.types.is_datetime64_dtype")(arr_or_dtype) | 检查数组或数据类型是否为datetime64数据类型。
    |'
- en: '| [`api.types.is_datetime64_ns_dtype`](api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype
    "pandas.api.types.is_datetime64_ns_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of the datetime64[ns] dtype. |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_ns_dtype`](api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype
    "pandas.api.types.is_datetime64_ns_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为datetime64[ns]数据类型。
    |'
- en: '| [`api.types.is_datetime64tz_dtype`](api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype
    "pandas.api.types.is_datetime64tz_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of a DatetimeTZDtype dtype. |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64tz_dtype`](api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype
    "pandas.api.types.is_datetime64tz_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为DatetimeTZDtype数据类型。
    |'
- en: '| [`api.types.is_extension_array_dtype`](api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype
    "pandas.api.types.is_extension_array_dtype")(arr_or_dtype) | Check if an object
    is a pandas extension array type. |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_extension_array_dtype`](api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype
    "pandas.api.types.is_extension_array_dtype")(arr_or_dtype) | 检查对象是否为pandas扩展数组类型。
    |'
- en: '| [`api.types.is_float_dtype`](api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a float dtype. |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_float_dtype`](api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为浮点数数据类型。 |'
- en: '| [`api.types.is_int64_dtype`](api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype
    "pandas.api.types.is_int64_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    the provided array or dtype is of the int64 dtype. |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_int64_dtype`](api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype
    "pandas.api.types.is_int64_dtype")(arr_or_dtype) | (已弃用) 检查提供的数组或数据类型是否为int64数据类型。
    |'
- en: '| [`api.types.is_integer_dtype`](api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of an integer dtype. |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_integer_dtype`](api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为整数数据类型。 |'
- en: '| [`api.types.is_interval_dtype`](api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Interval dtype. |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_interval_dtype`](api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为Interval数据类型。
    |'
- en: '| [`api.types.is_numeric_dtype`](api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a numeric dtype. |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_numeric_dtype`](api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为数值数据类型。 |'
- en: '| [`api.types.is_object_dtype`](api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the object dtype. |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_object_dtype`](api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype")(arr_or_dtype) | 检查数组样式或数据类型是否为对象数据类型。 |'
- en: '| [`api.types.is_period_dtype`](api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype
    "pandas.api.types.is_period_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Period dtype. |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_period_dtype`](api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype
    "pandas.api.types.is_period_dtype")(arr_or_dtype) | (已弃用) 检查数组样式或数据类型是否为Period数据类型。
    |'
- en: '| [`api.types.is_signed_integer_dtype`](api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of a signed integer dtype. |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_signed_integer_dtype`](api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为有符号整数数据类型。
    |'
- en: '| [`api.types.is_string_dtype`](api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of the string dtype. |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_string_dtype`](api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为字符串数据类型。 |'
- en: '| [`api.types.is_timedelta64_dtype`](api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype
    "pandas.api.types.is_timedelta64_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the timedelta64 dtype. |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_timedelta64_dtype`](api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype
    "pandas.api.types.is_timedelta64_dtype")(arr_or_dtype) | 检查数组样式或数据类型是否为timedelta64数据类型。
    |'
- en: '| [`api.types.is_timedelta64_ns_dtype`](api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype
    "pandas.api.types.is_timedelta64_ns_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of the timedelta64[ns] dtype. |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_timedelta64_ns_dtype`](api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype
    "pandas.api.types.is_timedelta64_ns_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为timedelta64[ns]数据类型。
    |'
- en: '| [`api.types.is_unsigned_integer_dtype`](api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of an unsigned integer dtype. |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_unsigned_integer_dtype`](api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为无符号整数数据类型。
    |'
- en: '| [`api.types.is_sparse`](api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse
    "pandas.api.types.is_sparse")(arr) | (DEPRECATED) Check whether an array-like
    is a 1-D pandas sparse array. |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_sparse`](api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse
    "pandas.api.types.is_sparse")(arr) | (已弃用) 检查数组样式是否为1-D pandas稀疏数组。 |'
- en: Iterable introspection
  id: totrans-291
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 可迭代对象内省
- en: '| [`api.types.is_dict_like`](api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like
    "pandas.api.types.is_dict_like")(obj) | Check if the object is dict-like. |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_dict_like`](api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like
    "pandas.api.types.is_dict_like")(obj) | 检查对象是否类似于字典。 |'
- en: '| [`api.types.is_file_like`](api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like
    "pandas.api.types.is_file_like")(obj) | Check if the object is a file-like object.
    |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_file_like`](api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like
    "pandas.api.types.is_file_like")(obj) | 检查对象是否为类似文件的对象。 |'
- en: '| [`api.types.is_list_like`](api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like
    "pandas.api.types.is_list_like")(obj[, allow_sets]) | Check if the object is list-like.
    |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_list_like`](api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like
    "pandas.api.types.is_list_like")(obj[, allow_sets]) | 检查对象是否类似于列表。 |'
- en: '| [`api.types.is_named_tuple`](api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple
    "pandas.api.types.is_named_tuple")(obj) | Check if the object is a named tuple.
    |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_named_tuple`](api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple
    "pandas.api.types.is_named_tuple")(obj) | 检查对象是否为命名元组。 |'
- en: '| [`api.types.is_iterator`](api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator
    "pandas.api.types.is_iterator")(obj) | Check if the object is an iterator. |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_iterator`](api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator
    "pandas.api.types.is_iterator")(obj) | 检查对象是否为迭代器。 |'
- en: Scalar introspection
  id: totrans-297
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 标量内省
- en: '| [`api.types.is_bool`](api/pandas.api.types.is_bool.html#pandas.api.types.is_bool
    "pandas.api.types.is_bool")(obj) | Return True if given object is boolean. |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_bool`](api/pandas.api.types.is_bool.html#pandas.api.types.is_bool
    "pandas.api.types.is_bool")(obj) | 如果给定对象是布尔值，则返回True。 |'
- en: '| [`api.types.is_complex`](api/pandas.api.types.is_complex.html#pandas.api.types.is_complex
    "pandas.api.types.is_complex")(obj) | Return True if given object is complex.
    |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_complex`](api/pandas.api.types.is_complex.html#pandas.api.types.is_complex
    "pandas.api.types.is_complex")(obj) | 如果给定对象是复数，则返回True。 |'
- en: '| [`api.types.is_float`](api/pandas.api.types.is_float.html#pandas.api.types.is_float
    "pandas.api.types.is_float")(obj) | Return True if given object is float. |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_float`](api/pandas.api.types.is_float.html#pandas.api.types.is_float
    "pandas.api.types.is_float")(obj) | 如果给定对象是浮点数，则返回True。 |'
- en: '| [`api.types.is_hashable`](api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable
    "pandas.api.types.is_hashable")(obj) | Return True if hash(obj) will succeed,
    False otherwise. |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_hashable`](api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable
    "pandas.api.types.is_hashable")(obj) | 如果 hash(obj) 成功，则返回True，否则返回False。 |'
- en: '| [`api.types.is_integer`](api/pandas.api.types.is_integer.html#pandas.api.types.is_integer
    "pandas.api.types.is_integer")(obj) | Return True if given object is integer.
    |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_integer`](api/pandas.api.types.is_integer.html#pandas.api.types.is_integer
    "pandas.api.types.is_integer")(obj) | 如果给定对象是整数，则返回True。 |'
- en: '| [`api.types.is_interval`](api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval")(obj) |  |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_interval`](api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval")(obj) |  |'
- en: '| [`api.types.is_number`](api/pandas.api.types.is_number.html#pandas.api.types.is_number
    "pandas.api.types.is_number")(obj) | Check if the object is a number. |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_number`](api/pandas.api.types.is_number.html#pandas.api.types.is_number
    "pandas.api.types.is_number")(obj) | 检查对象是否为数字。 |'
- en: '| [`api.types.is_re`](api/pandas.api.types.is_re.html#pandas.api.types.is_re
    "pandas.api.types.is_re")(obj) | Check if the object is a regex pattern instance.
    |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_re`](api/pandas.api.types.is_re.html#pandas.api.types.is_re
    "pandas.api.types.is_re")(obj) | 检查对象是否为正则表达式模式实例。 |'
- en: '| [`api.types.is_re_compilable`](api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable
    "pandas.api.types.is_re_compilable")(obj) | Check if the object can be compiled
    into a regex pattern instance. |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_re_compilable`](api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable
    "pandas.api.types.is_re_compilable")(obj) | 检查对象是否可以编译为正则表达式模式实例。 |'
- en: '| [`api.types.is_scalar`](api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar")(val) | Return True if given object is scalar. |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_scalar`](api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar")(val) | 如果给定对象是标量，则返回True。 |'
- en: Objects
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对象
- en: For most data types, pandas uses NumPy arrays as the concrete objects contained
    with a [`Index`](api/pandas.Index.html#pandas.Index "pandas.Index"), [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数数据类型，pandas 使用 NumPy 数组作为包含在 [`Index`](api/pandas.Index.html#pandas.Index
    "pandas.Index")、[`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    或 [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    中的具体对象。
- en: For some data types, pandas extends NumPy’s type system. String aliases for
    these types can be found at [dtypes](../user_guide/basics.html#basics-dtypes).
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些数据类型，pandas 扩展了 NumPy 的类型系统。这些类型的字符串别名可以在 [dtypes](../user_guide/basics.html#basics-dtypes)
    中找到。
- en: '| Kind of Data | pandas Data Type | Scalar | Array |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| 数据类型 | pandas 数据类型 | 标量 | 数组 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| TZ-aware datetime | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") | [Datetimes](#api-arrays-datetime) |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| 时区感知日期时间 | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") | [日期时间](#api-arrays-datetime) |'
- en: '| Timedeltas | (none) | [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") | [Timedeltas](#api-arrays-timedelta) |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '| 时间增量 | (无) | [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    | [时间增量](#api-arrays-timedelta) |'
- en: '| Period (time spans) | [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") | [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")
    | [Periods](#api-arrays-period) |'
  id: totrans-315
  prefs: []
  type: TYPE_TB
  zh: '| 时期（时间跨度） | [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") | [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")
    | [时期](#api-arrays-period) |'
- en: '| Intervals | [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") | [`Interval`](api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") | [Intervals](#api-arrays-interval) |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| 区间 | [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") | [`Interval`](api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") | [区间](#api-arrays-interval) |'
- en: '| Nullable Integer | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype"), … | (none) | [Nullable integer](#api-arrays-integer-na)
    |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| 可空整数 | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype "pandas.Int64Dtype"),
    … | (无) | [可空整数](#api-arrays-integer-na) |'
- en: '| Nullable Float | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype"), … | (none) | [Nullable float](#api-arrays-float-na) |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| 可空浮点数 | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype"), … | (无) | [可空浮点数](#api-arrays-float-na) |'
- en: '| Categorical | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (none) | [Categoricals](#api-arrays-categorical)
    |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| 分类 | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (无) | [分类](#api-arrays-categorical) |'
- en: '| Sparse | [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")
    | (none) | [Sparse](#api-arrays-sparse) |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| 稀疏 | [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")
    | (无) | [稀疏](#api-arrays-sparse) |'
- en: '| Strings | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") | [`str`](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)") | [Strings](#api-arrays-string) |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| 字符串 | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")
    | [`str`](https://docs.python.org/3/library/stdtypes.html#str "(在 Python v3.12
    中)") | [字符串](#api-arrays-string) |'
- en: '| Nullable Boolean | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | [`bool`](https://docs.python.org/3/library/functions.html#bool
    "(in Python v3.12)") | [Nullable Boolean](#api-arrays-bool) |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '| 可空布尔值 | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | [`bool`](https://docs.python.org/3/library/functions.html#bool
    "(在 Python v3.12 中)") | [可空布尔值](#api-arrays-bool) |'
- en: '| PyArrow | [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")
    | Python Scalars or [`NA`](api/pandas.NA.html#pandas.NA "pandas.NA") | [PyArrow](#api-arrays-arrow)
    |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| PyArrow | [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")
    | Python 标量或 [`NA`](api/pandas.NA.html#pandas.NA "pandas.NA") | [PyArrow](#api-arrays-arrow)
    |'
- en: pandas and third-party libraries can extend NumPy’s type system (see [Extension
    types](../development/extending.html#extending-extension-types)). The top-level
    [`array()`](api/pandas.array.html#pandas.array "pandas.array") method can be used
    to create a new array, which may be stored in a [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`Index`](api/pandas.Index.html#pandas.Index "pandas.Index"),
    or as a column in a [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 和第三方库可以扩展 NumPy 的类型系统（参见 [扩展类型](../development/extending.html#extending-extension-types)）。顶层的
    [`array()`](api/pandas.array.html#pandas.array "pandas.array") 方法可用于创建一个新数组，该数组可以存储在
    [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")、[`Index`](api/pandas.Index.html#pandas.Index
    "pandas.Index") 中，或作为 [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中的一列。
- en: '| [`array`](api/pandas.array.html#pandas.array "pandas.array")(data[, dtype, copy])
    | Create an array. |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| [`array`](api/pandas.array.html#pandas.array "pandas.array")(数据[, dtype, copy])
    | 创建一个数组。 |'
- en: '### PyArrow'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '### PyArrow'
- en: Warning
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: This feature is experimental, and the API can change in a future release without
    warning.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能是实验性的，API 可能在未经警告的情况下在未来版本中更改。
- en: The [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") is backed by a [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)") with a [`pyarrow.DataType`](https://arrow.apache.org/docs/python/generated/pyarrow.DataType.html#pyarrow.DataType
    "(in Apache Arrow v15.0.2)") instead of a NumPy array and data type. The `.dtype`
    of a [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") is an [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype").
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '[`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") 是由 [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(在 Apache Arrow v15.0.2 中)") 支持的，而不是 NumPy 数组和数据类型。[`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") 的 `.dtype` 是一个 [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype")。'
- en: '[Pyarrow](https://arrow.apache.org/docs/python/index.html) provides similar
    array and [data type](https://arrow.apache.org/docs/python/api/datatypes.html)
    support as NumPy including first-class nullability support for all data types,
    immutability and more.'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pyarrow](https://arrow.apache.org/docs/python/index.html) 提供与 NumPy 类似的数组和[数据类型](https://arrow.apache.org/docs/python/api/datatypes.html)支持，包括所有数据类型的一流可空性支持、不可变性等。'
- en: The table below shows the equivalent pyarrow-backed (`pa`), pandas extension,
    and numpy (`np`) types that are recognized by pandas. Pyarrow-backed types below
    need to be passed into [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") to be recognized by pandas e.g. `pd.ArrowDtype(pa.bool_())`
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了 pandas 可识别的等效 pyarrow 支持的 (`pa`)、pandas 扩展和 numpy (`np`) 类型。下面的 pyarrow
    支持的类型需要传入 [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")
    才能被 pandas 识别，例如 `pd.ArrowDtype(pa.bool_())`
- en: '| PyArrow type | pandas extension type | NumPy type |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: PyArrow 类型 | pandas 扩展类型 | NumPy 类型 |
- en: '| --- | --- | --- |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| [`pyarrow.bool_()`](https://arrow.apache.org/docs/python/generated/pyarrow.bool_.html#pyarrow.bool_
    "(in Apache Arrow v15.0.2)") | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | `np.bool_` |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.bool_()`](https://arrow.apache.org/docs/python/generated/pyarrow.bool_.html#pyarrow.bool_
    "(在 Apache Arrow v15.0.2)") | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | `np.bool_` |'
- en: '| [`pyarrow.int8()`](https://arrow.apache.org/docs/python/generated/pyarrow.int8.html#pyarrow.int8
    "(in Apache Arrow v15.0.2)") | [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype
    "pandas.Int8Dtype") | `np.int8` |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int8()`](https://arrow.apache.org/docs/python/generated/pyarrow.int8.html#pyarrow.int8
    "(在 Apache Arrow v15.0.2)") | [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype
    "pandas.Int8Dtype") | `np.int8` |'
- en: '| [`pyarrow.int16()`](https://arrow.apache.org/docs/python/generated/pyarrow.int16.html#pyarrow.int16
    "(in Apache Arrow v15.0.2)") | [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype
    "pandas.Int16Dtype") | `np.int16` |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int16()`](https://arrow.apache.org/docs/python/generated/pyarrow.int16.html#pyarrow.int16
    "(在 Apache Arrow v15.0.2)") | [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype
    "pandas.Int16Dtype") | `np.int16` |'
- en: '| [`pyarrow.int32()`](https://arrow.apache.org/docs/python/generated/pyarrow.int32.html#pyarrow.int32
    "(in Apache Arrow v15.0.2)") | [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype
    "pandas.Int32Dtype") | `np.int32` |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int32()`](https://arrow.apache.org/docs/python/generated/pyarrow.int32.html#pyarrow.int32
    "(在 Apache Arrow v15.0.2)") | [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype
    "pandas.Int32Dtype") | `np.int32` |'
- en: '| [`pyarrow.int64()`](https://arrow.apache.org/docs/python/generated/pyarrow.int64.html#pyarrow.int64
    "(in Apache Arrow v15.0.2)") | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype") | `np.int64` |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int64()`](https://arrow.apache.org/docs/python/generated/pyarrow.int64.html#pyarrow.int64
    "(在 Apache Arrow v15.0.2)") | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype") | `np.int64` |'
- en: '| [`pyarrow.uint8()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint8.html#pyarrow.uint8
    "(in Apache Arrow v15.0.2)") | [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype
    "pandas.UInt8Dtype") | `np.uint8` |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint8()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint8.html#pyarrow.uint8
    "(在 Apache Arrow v15.0.2)") | [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype
    "pandas.UInt8Dtype") | `np.uint8` |'
- en: '| [`pyarrow.uint16()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint16.html#pyarrow.uint16
    "(in Apache Arrow v15.0.2)") | [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype
    "pandas.UInt16Dtype") | `np.uint16` |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint16()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint16.html#pyarrow.uint16
    "(在 Apache Arrow v15.0.2)") | [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype
    "pandas.UInt16Dtype") | `np.uint16` |'
- en: '| [`pyarrow.uint32()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint32.html#pyarrow.uint32
    "(in Apache Arrow v15.0.2)") | [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype
    "pandas.UInt32Dtype") | `np.uint32` |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint32()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint32.html#pyarrow.uint32
    "(在 Apache Arrow v15.0.2)") | [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype
    "pandas.UInt32Dtype") | `np.uint32` |'
- en: '| [`pyarrow.uint64()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint64.html#pyarrow.uint64
    "(in Apache Arrow v15.0.2)") | [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype
    "pandas.UInt64Dtype") | `np.uint64` |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint64()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint64.html#pyarrow.uint64
    "(在 Apache Arrow v15.0.2)") | [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype
    "pandas.UInt64Dtype") | `np.uint64` |'
- en: '| [`pyarrow.float32()`](https://arrow.apache.org/docs/python/generated/pyarrow.float32.html#pyarrow.float32
    "(in Apache Arrow v15.0.2)") | [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") | `np.float32` |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.float32()`](https://arrow.apache.org/docs/python/generated/pyarrow.float32.html#pyarrow.float32
    "(在 Apache Arrow v15.0.2)") | [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") | `np.float32` |'
- en: '| [`pyarrow.float64()`](https://arrow.apache.org/docs/python/generated/pyarrow.float64.html#pyarrow.float64
    "(in Apache Arrow v15.0.2)") | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") | `np.float64` |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.float64()`](https://arrow.apache.org/docs/python/generated/pyarrow.float64.html#pyarrow.float64
    "(在 Apache Arrow v15.0.2 中)") | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") | `np.float64` |'
- en: '| [`pyarrow.time32()`](https://arrow.apache.org/docs/python/generated/pyarrow.time32.html#pyarrow.time32
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.time32()`](https://arrow.apache.org/docs/python/generated/pyarrow.time32.html#pyarrow.time32
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.time64()`](https://arrow.apache.org/docs/python/generated/pyarrow.time64.html#pyarrow.time64
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.time64()`](https://arrow.apache.org/docs/python/generated/pyarrow.time64.html#pyarrow.time64
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.timestamp()`](https://arrow.apache.org/docs/python/generated/pyarrow.timestamp.html#pyarrow.timestamp
    "(in Apache Arrow v15.0.2)") | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | `np.datetime64` |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.timestamp()`](https://arrow.apache.org/docs/python/generated/pyarrow.timestamp.html#pyarrow.timestamp
    "(在 Apache Arrow v15.0.2 中)") | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | `np.datetime64` |'
- en: '| [`pyarrow.date32()`](https://arrow.apache.org/docs/python/generated/pyarrow.date32.html#pyarrow.date32
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.date32()`](https://arrow.apache.org/docs/python/generated/pyarrow.date32.html#pyarrow.date32
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.date64()`](https://arrow.apache.org/docs/python/generated/pyarrow.date64.html#pyarrow.date64
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.date64()`](https://arrow.apache.org/docs/python/generated/pyarrow.date64.html#pyarrow.date64
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.duration()`](https://arrow.apache.org/docs/python/generated/pyarrow.duration.html#pyarrow.duration
    "(in Apache Arrow v15.0.2)") | (none) | `np.timedelta64` |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.duration()`](https://arrow.apache.org/docs/python/generated/pyarrow.duration.html#pyarrow.duration
    "(在 Apache Arrow v15.0.2 中)") | (无) | `np.timedelta64` |'
- en: '| [`pyarrow.binary()`](https://arrow.apache.org/docs/python/generated/pyarrow.binary.html#pyarrow.binary
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.binary()`](https://arrow.apache.org/docs/python/generated/pyarrow.binary.html#pyarrow.binary
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.string()`](https://arrow.apache.org/docs/python/generated/pyarrow.string.html#pyarrow.string
    "(in Apache Arrow v15.0.2)") | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") | `np.str_` |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.string()`](https://arrow.apache.org/docs/python/generated/pyarrow.string.html#pyarrow.string
    "(在 Apache Arrow v15.0.2 中)") | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") | `np.str_` |'
- en: '| [`pyarrow.decimal128()`](https://arrow.apache.org/docs/python/generated/pyarrow.decimal128.html#pyarrow.decimal128
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.decimal128()`](https://arrow.apache.org/docs/python/generated/pyarrow.decimal128.html#pyarrow.decimal128
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.list_()`](https://arrow.apache.org/docs/python/generated/pyarrow.list_.html#pyarrow.list_
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.list_()`](https://arrow.apache.org/docs/python/generated/pyarrow.list_.html#pyarrow.list_
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.map_()`](https://arrow.apache.org/docs/python/generated/pyarrow.map_.html#pyarrow.map_
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.map_()`](https://arrow.apache.org/docs/python/generated/pyarrow.map_.html#pyarrow.map_
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.dictionary()`](https://arrow.apache.org/docs/python/generated/pyarrow.dictionary.html#pyarrow.dictionary
    "(in Apache Arrow v15.0.2)") | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (none) |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.dictionary()`](https://arrow.apache.org/docs/python/generated/pyarrow.dictionary.html#pyarrow.dictionary
    "(在 Apache Arrow v15.0.2 中)") | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (无) |'
- en: Note
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '注： '
- en: Pyarrow-backed string support is provided by both `pd.StringDtype("pyarrow")`
    and `pd.ArrowDtype(pa.string())`. `pd.StringDtype("pyarrow")` is described below
    in the [string section](#api-arrays-string) and will be returned if the string
    alias `"string[pyarrow]"` is specified. `pd.ArrowDtype(pa.string())` generally
    has better interoperability with [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of different types.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: Pyarrow 支持的字符串由 `pd.StringDtype("pyarrow")` 和 `pd.ArrowDtype(pa.string())` 提供。如果指定字符串别名
    `"string[pyarrow]"`，则将返回 `pd.StringDtype("pyarrow")`，如下所述在[string section](#api-arrays-string)中。
    `pd.ArrowDtype(pa.string())` 通常与不同类型的 [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") 具有更好的互操作性。
- en: While individual values in an [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") are stored as a PyArrow objects, scalars
    are **returned** as Python scalars corresponding to the data type, e.g. a PyArrow
    int64 will be returned as Python int, or [`NA`](api/pandas.NA.html#pandas.NA "pandas.NA")
    for missing values.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") 中的单个值存储为 PyArrow 对象，但标量会以对应数据类型的 Python 标量返回，例如
    PyArrow int64 会以 Python int 返回，或者对于缺失值会返回 [`NA`](api/pandas.NA.html#pandas.NA
    "pandas.NA")。
- en: '| [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")(values) | Pandas ExtensionArray backed by
    a PyArrow ChunkedArray. |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")(values) | 由 PyArrow ChunkedArray 支持的 Pandas
    ExtensionArray。 |'
- en: '| [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")(pyarrow_dtype)
    | An ExtensionDtype for PyArrow data types. |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")(pyarrow_dtype)
    | 用于 PyArrow 数据类型的 ExtensionDtype。 |'
- en: 'For more information, please see the [PyArrow user guide](../user_guide/pyarrow.html#pyarrow)  ###
    Datetimes'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '更多信息，请参阅 [PyArrow 用户指南](../user_guide/pyarrow.html#pyarrow)  ### 日期时间'
- en: NumPy cannot natively represent timezone-aware datetimes. pandas supports this
    with the [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") extension array, which can hold timezone-naive
    or timezone-aware values.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 无法原生表示时区感知日期时间。pandas 支持使用 [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") 扩展数组来实现，该数组可以保存时区无关或时区感知的值。
- en: '[`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp"),
    a subclass of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)"), is pandas’ scalar type for timezone-naive or timezone-aware
    datetime data. [`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT") is the missing
    value for datetime data.'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")，是
    [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(在 Python v3.12 中)") 的子类，是 pandas 用于时区无关或时区感知日期时间数据的标量类型。 [`NaT`](api/pandas.NaT.html#pandas.NaT
    "pandas.NaT") 是日期时间数据的缺失值。'
- en: '| [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")([ts_input, year, month, day, ...])
    | Pandas replacement for python datetime.datetime object. |'
  id: totrans-365
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")([ts_input, year, month, day, ...])
    | 用于替代 python datetime.datetime 对象的 Pandas 类型。 |'
- en: Properties
  id: totrans-366
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Timestamp.asm8`](api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | Return numpy datetime64 format in nanoseconds. |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.asm8`](api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | 以纳秒为单位返回 numpy datetime64 格式。 |'
- en: '| [`Timestamp.day`](api/pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day`](api/pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
- en: '| [`Timestamp.dayofweek`](api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | Return day of the week. |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dayofweek`](api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | 返回星期几。 |'
- en: '| [`Timestamp.day_of_week`](api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | Return day of the week. |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_of_week`](api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | 返回星期几。 |'
- en: '| [`Timestamp.dayofyear`](api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | Return the day of the year. |'
  id: totrans-371
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dayofyear`](api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | 返回一年中的第几天。 |'
- en: '| [`Timestamp.day_of_year`](api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | Return the day of the year. |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_of_year`](api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | 返回一年中的第几天。 |'
- en: '| [`Timestamp.days_in_month`](api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | Return the number of days in the month. |'
  id: totrans-373
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.days_in_month`](api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | 返回该月的天数。 |'
- en: '| [`Timestamp.daysinmonth`](api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | Return the number of days in the month. |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.daysinmonth`](api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | 返回该月的天数。 |'
- en: '| [`Timestamp.fold`](api/pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fold`](api/pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
- en: '| [`Timestamp.hour`](api/pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.hour`](api/pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
- en: '| [`Timestamp.is_leap_year`](api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | Return True if year is a leap year. |'
  id: totrans-377
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_leap_year`](api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | 如果年份是闰年则返回True。 |'
- en: '| [`Timestamp.is_month_end`](api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | Check if the date is the last day of the month.
    |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_month_end`](api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | 检查日期是否为月份的最后一天。 |'
- en: '| [`Timestamp.is_month_start`](api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | Check if the date is the first day of the
    month. |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_month_start`](api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | 检查日期是否为月份的第一天。 |'
- en: '| [`Timestamp.is_quarter_end`](api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | Check if date is last day of the quarter.
    |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_quarter_end`](api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | 检查日期是否为季度的最后一天。 |'
- en: '| [`Timestamp.is_quarter_start`](api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | Check if the date is the first day of the
    quarter. |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_quarter_start`](api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | 检查日期是否为季度的第一天。 |'
- en: '| [`Timestamp.is_year_end`](api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | Return True if date is last day of the year.
    |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_year_end`](api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | 如果日期是一年的最后一天则返回True。 |'
- en: '| [`Timestamp.is_year_start`](api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | Return True if date is first day of the year.
    |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_year_start`](api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | 如果日期是一年的第一天则返回True。 |'
- en: '| [`Timestamp.max`](api/pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
  id: totrans-384
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.max`](api/pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
- en: '| [`Timestamp.microsecond`](api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
  id: totrans-385
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.microsecond`](api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
- en: '| [`Timestamp.min`](api/pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.min`](api/pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
- en: '| [`Timestamp.minute`](api/pandas.Timestamp.minute.html#pandas.Timestamp.minute
    "pandas.Timestamp.minute") |  |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.minute`](api/pandas.Timestamp.minute.html#pandas.Timestamp.minute
    "pandas.Timestamp.minute") |  |'
- en: '| [`Timestamp.month`](api/pandas.Timestamp.month.html#pandas.Timestamp.month
    "pandas.Timestamp.month") |  |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.month`](api/pandas.Timestamp.month.html#pandas.Timestamp.month
    "pandas.Timestamp.month") |  |'
- en: '| [`Timestamp.nanosecond`](api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.nanosecond`](api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
- en: '| [`Timestamp.quarter`](api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter
    "pandas.Timestamp.quarter") | Return the quarter of the year. |'
  id: totrans-390
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.quarter`](api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter
    "pandas.Timestamp.quarter") | 返回年份的季度。 |'
- en: '| [`Timestamp.resolution`](api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
  id: totrans-391
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.resolution`](api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
- en: '| [`Timestamp.second`](api/pandas.Timestamp.second.html#pandas.Timestamp.second
    "pandas.Timestamp.second") |  |'
  id: totrans-392
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.second`](api/pandas.Timestamp.second.html#pandas.Timestamp.second
    "pandas.Timestamp.second") |  |'
- en: '| [`Timestamp.tz`](api/pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | Alias for tzinfo. |'
  id: totrans-393
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz`](api/pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | tzinfo的别名。 |'
- en: '| [`Timestamp.tzinfo`](api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo
    "pandas.Timestamp.tzinfo") |  |'
  id: totrans-394
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tzinfo`](api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo
    "pandas.Timestamp.tzinfo") |  |'
- en: '| [`Timestamp.unit`](api/pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | The abbreviation associated with self._creso. |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.unit`](api/pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | 与self._creso相关的缩写。 |'
- en: '| [`Timestamp.value`](api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") |  |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.value`](api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") |  |'
- en: '| [`Timestamp.week`](api/pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | Return the week number of the year. |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.week`](api/pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | 返回一年中的周数。 |'
- en: '| [`Timestamp.weekofyear`](api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | Return the week number of the year. |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.weekofyear`](api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | 返回一年中的周数。 |'
- en: '| [`Timestamp.year`](api/pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.year`](api/pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
- en: Methods
  id: totrans-400
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Timestamp.as_unit`](api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit
    "pandas.Timestamp.as_unit")(unit[, round_ok]) | Convert the underlying int64 representaton
    to the given unit. |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.as_unit`](api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit
    "pandas.Timestamp.as_unit")(unit[, round_ok]) | 将底层 int64 表示转换为给定单位。 |'
- en: '| [`Timestamp.astimezone`](api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  id: totrans-402
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.astimezone`](api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | 将带有时区信息的 Timestamp 转换为另一个时区的时间。 |'
- en: '| [`Timestamp.ceil`](api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | Return a new Timestamp ceiled to this resolution. |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.ceil`](api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | 返回按此分辨率取天花板的新 Timestamp。 |'
- en: '| [`Timestamp.combine`](api/pandas.Timestamp.combine.html#pandas.Timestamp.combine
    "pandas.Timestamp.combine")(date, time) | Combine date, time into datetime with
    same date and time fields. |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.combine`](api/pandas.Timestamp.combine.html#pandas.Timestamp.combine
    "pandas.Timestamp.combine")(date, time) | 将日期、时间合并为具有相同日期和时间字段的日期时间。 |'
- en: '| [`Timestamp.ctime`](api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime
    "pandas.Timestamp.ctime")() | Return ctime() style string. |'
  id: totrans-405
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.ctime`](api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime
    "pandas.Timestamp.ctime")() | 返回 ctime() 格式的字符串。 |'
- en: '| [`Timestamp.date`](api/pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | Return date object with same year, month and day. |'
  id: totrans-406
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.date`](api/pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | 返回具有相同年、月和日的日期对象。 |'
- en: '| [`Timestamp.day_name`](api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name")([locale]) | Return the day name of the Timestamp
    with specified locale. |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_name`](api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name")([locale]) | 返回指定区域设置的 Timestamp 的星期几。 |'
- en: '| [`Timestamp.dst`](api/pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | Return the daylight saving time (DST) adjustment. |'
  id: totrans-408
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dst`](api/pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | 返回夏令时（DST）调整。 |'
- en: '| [`Timestamp.floor`](api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent]) | Return a new Timestamp
    floored to this resolution. |'
  id: totrans-409
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.floor`](api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent]) | 返回按此分辨率取整的新 Timestamp。
    |'
- en: '| [`Timestamp.fromordinal`](api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | Construct a timestamp from a
    a proleptic Gregorian ordinal. |'
  id: totrans-410
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fromordinal`](api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | 从普通公历序数构造时间戳。 |'
- en: '| [`Timestamp.fromtimestamp`](api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | Transform timestamp[, tz] to tz''s local
    time from POSIX timestamp. |'
  id: totrans-411
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fromtimestamp`](api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | 从 POSIX 时间戳转换时间戳[, 时区] 到时区的本地时间。 |'
- en: '| [`Timestamp.isocalendar`](api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | Return a named tuple containing ISO year,
    week number, and weekday. |'
  id: totrans-412
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isocalendar`](api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | 返回包含 ISO 年份、周数和工作日的命名元组。 |'
- en: '| [`Timestamp.isoformat`](api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat")([sep, timespec]) | Return the time formatted according
    to ISO 8601. |'
  id: totrans-413
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isoformat`](api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat)([sep, timespec])
    | 返回根据 ISO 8601 格式化的时间。 |'
- en: '| [`Timestamp.isoweekday`](api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | Return the day of the week represented by the
    date. |'
  id: totrans-414
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isoweekday`](api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | 返回日期代表的星期几。 |'
- en: '| [`Timestamp.month_name`](api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | Return the month name of the Timestamp
    with specified locale. |'
  id: totrans-415
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.month_name`](api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | 返回具有指定语言环境的时间戳的月份名称。 |'
- en: '| [`Timestamp.normalize`](api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | Normalize Timestamp to midnight, preserving
    tz information. |'
  id: totrans-416
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.normalize`](api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | 将 `Timestamp` 规范化为午夜时间，并保留 `tz` 信息。 |'
- en: '| [`Timestamp.now`](api/pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | Return new Timestamp object representing current time local to tz. |'
  id: totrans-417
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.now`](api/pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | 返回表示当前本地时间的新 `Timestamp` 对象。 |'
- en: '| [`Timestamp.replace`](api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace")([year, month, day, hour, ...]) | Implements datetime.replace,
    handles nanoseconds. |'
  id: totrans-418
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.replace`](api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace")([year, month, day, hour, ...]) | 实现 `datetime.replace`，处理纳秒。
    |'
- en: '| [`Timestamp.round`](api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round")(freq[, ambiguous, nonexistent]) | Round the Timestamp
    to the specified resolution. |'
  id: totrans-419
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.round`](api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round")(freq[, ambiguous, nonexistent]) | 将 `Timestamp` 四舍五入到指定的分辨率。
    |'
- en: '| [`Timestamp.strftime`](api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime
    "pandas.Timestamp.strftime")(format) | Return a formatted string of the Timestamp.
    |'
  id: totrans-420
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.strftime`](api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime
    "pandas.Timestamp.strftime")(format) | 返回 `Timestamp` 的格式化字符串。 |'
- en: '| [`Timestamp.strptime`](api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime")(string, format) | Function is not implemented. |'
  id: totrans-421
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.strptime`](api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime")(string, format) | 此函数未实现。 |'
- en: '| [`Timestamp.time`](api/pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | Return time object with same time but with tzinfo=None. |'
  id: totrans-422
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.time`](api/pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | 返回具有相同时间但 `tzinfo=None` 的时间对象。 |'
- en: '| [`Timestamp.timestamp`](api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | Return POSIX timestamp as float. |'
  id: totrans-423
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timestamp`](api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | 返回浮点型的 POSIX 时间戳。 |'
- en: '| [`Timestamp.timetuple`](api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | Return time tuple, compatible with time.localtime().
    |'
  id: totrans-424
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timetuple`](api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | 返回时间元组，与 `time.localtime()` 兼容。 |'
- en: '| [`Timestamp.timetz`](api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz
    "pandas.Timestamp.timetz")() | Return time object with same time and tzinfo. |'
  id: totrans-425
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timetz`](api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz
    "pandas.Timestamp.timetz")() | 返回具有相同时间和 `tzinfo` 的时间对象。 |'
- en: '| [`Timestamp.to_datetime64`](api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | Return a numpy.datetime64 object with same
    precision. |'
  id: totrans-426
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_datetime64`](api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | 返回具有相同精度的 `numpy.datetime64` 对象。 |'
- en: '| [`Timestamp.to_numpy`](api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy
    "pandas.Timestamp.to_numpy")([dtype, copy]) | Convert the Timestamp to a NumPy
    datetime64. |'
  id: totrans-427
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_numpy`](api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy
    "pandas.Timestamp.to_numpy")([dtype, copy]) | 将 `Timestamp` 转换为 NumPy `datetime64`。
    |'
- en: '| [`Timestamp.to_julian_date`](api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | Convert TimeStamp to a Julian Date. |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_julian_date`](api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | 将 `TimeStamp` 转换为儒略日期。 |'
- en: '| [`Timestamp.to_period`](api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | Return an period of which this timestamp
    is an observation. |'
  id: totrans-429
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_period`](api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | 返回一个时间段，其中此时间戳是一个观测值。 |'
- en: '| [`Timestamp.to_pydatetime`](api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | Convert a Timestamp object to a native
    Python datetime object. |'
  id: totrans-430
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_pydatetime`](api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | 将 Timestamp 对象转换为本机 Python datetime
    对象。 |'
- en: '| [`Timestamp.today`](api/pandas.Timestamp.today.html#pandas.Timestamp.today
    "pandas.Timestamp.today")([tz]) | Return the current time in the local timezone.
    |'
  id: totrans-431
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.today`](api/pandas.Timestamp.today.html#pandas.Timestamp.today
    "pandas.Timestamp.today")([tz]) | 返回当前时区的当前时间。 |'
- en: '| [`Timestamp.toordinal`](api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | Return proleptic Gregorian ordinal. |'
  id: totrans-432
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.toordinal`](api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | 返回普通格里高利历的序数。 |'
- en: '| [`Timestamp.tz_convert`](api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  id: totrans-433
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz_convert`](api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | 将时区感知的时间戳转换为另一个时区。 |'
- en: '| [`Timestamp.tz_localize`](api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, ...]) | Localize the Timestamp
    to a timezone. |'
  id: totrans-434
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz_localize`](api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, ...]) | 将时间戳本地化到一个时区。 |'
- en: '| [`Timestamp.tzname`](api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname
    "pandas.Timestamp.tzname")() | Return time zone name. |'
  id: totrans-435
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tzname`](api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname
    "pandas.Timestamp.tzname")() | 返回时区名称。 |'
- en: '| [`Timestamp.utcfromtimestamp`](api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | Construct a timezone-aware UTC datetime
    from a POSIX timestamp. |'
  id: totrans-436
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcfromtimestamp`](api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | 从 POSIX 时间戳构造一个时区感知的 UTC 日期时间。 |'
- en: '| [`Timestamp.utcnow`](api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow
    "pandas.Timestamp.utcnow")() | Return a new Timestamp representing UTC day and
    time. |'
  id: totrans-437
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcnow`](api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow
    "pandas.Timestamp.utcnow")() | 返回表示 UTC 日期和时间的新 Timestamp。 |'
- en: '| [`Timestamp.utcoffset`](api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | Return utc offset. |'
  id: totrans-438
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcoffset`](api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | 返回 UTC 偏移。 |'
- en: '| [`Timestamp.utctimetuple`](api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | Return UTC time tuple, compatible with time.localtime().
    |'
  id: totrans-439
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utctimetuple`](api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | 返回与 time.localtime() 兼容的 UTC 时间元组。 |'
- en: '| [`Timestamp.weekday`](api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday
    "pandas.Timestamp.weekday")() | Return the day of the week represented by the
    date. |'
  id: totrans-440
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.weekday`](api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday
    "pandas.Timestamp.weekday")() | 返回日期所代表的星期几。 |'
- en: A collection of timestamps may be stored in a [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"). For timezone-aware data, the `.dtype` of a [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") is a [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype"). For timezone-naive data, `np.dtype("datetime64[ns]")`
    is used.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳的集合可以存储在 [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") 中。对于时区感知的数据，[`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") 的 `.dtype` 是一个 [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")。对于时区无关的数据，使用 `np.dtype("datetime64[ns]")`。
- en: If the data are timezone-aware, then every value in the array must have the
    same timezone.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据是时区感知的，则数组中的每个值必须具有相同的时区。
- en: '| [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")(values[, dtype, freq, copy]) | Pandas ExtensionArray
    for tz-naive or tz-aware datetime data. |'
  id: totrans-443
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")(values[, dtype, freq, copy]) | 用于时区无关或时区感知的日期时间数据的
    Pandas ExtensionArray。 |'
- en: '| [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")([unit, tz]) | An ExtensionDtype for timezone-aware datetime
    data. |  ### Timedeltas'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")([unit, tz]) | 用于时区感知的日期时间数据的扩展数据类型。 |  ### 时间增量'
- en: NumPy can natively represent timedeltas. pandas provides [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") for symmetry with [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"). [`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT") is the
    missing value for timedelta data.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy可以原生表示时间增量。pandas提供了[`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta")以与[`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp")对称。[`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT")是时间增量数据的缺失值。
- en: '| [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")([value, unit])
    | Represents a duration, the difference between two dates or times. |'
  id: totrans-446
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")([value, unit])
    | 表示持续时间，即两个日期或时间之间的差异。'
- en: Properties
  id: totrans-447
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Timedelta.asm8`](api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | Return a numpy timedelta64 array scalar view. |'
  id: totrans-448
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.asm8`](api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | 返回一个numpy timedelta64数组标量视图。'
- en: '| [`Timedelta.components`](api/pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | Return a components namedtuple-like. |'
  id: totrans-449
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.components`](api/pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | 返回类似于命名元组的组件。'
- en: '| [`Timedelta.days`](api/pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | Returns the days of the timedelta. |'
  id: totrans-450
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.days`](api/pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | 返回时间增量的天数。'
- en: '| [`Timedelta.max`](api/pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
  id: totrans-451
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.max`](api/pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
- en: '| [`Timedelta.microseconds`](api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
  id: totrans-452
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.microseconds`](api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds")
    |  |'
- en: '| [`Timedelta.min`](api/pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
  id: totrans-453
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.min`](api/pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
- en: '| [`Timedelta.nanoseconds`](api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | Return the number of nanoseconds (n), where
    0 <= n < 1 microsecond. |'
  id: totrans-454
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.nanoseconds`](api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | 返回纳秒数（n），其中0 <= n < 1微秒。'
- en: '| [`Timedelta.resolution`](api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
  id: totrans-455
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.resolution`](api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
- en: '| [`Timedelta.seconds`](api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds
    "pandas.Timedelta.seconds") | Return the total hours, minutes, and seconds of
    the timedelta as seconds. |'
  id: totrans-456
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.seconds`](api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds
    "pandas.Timedelta.seconds") | 返回时间增量的总小时数、分钟数和秒数（以秒为单位）。'
- en: '| [`Timedelta.unit`](api/pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
  id: totrans-457
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.unit`](api/pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
- en: '| [`Timedelta.value`](api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") |  |'
  id: totrans-458
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.value`](api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") |  |'
- en: '| [`Timedelta.view`](api/pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | Array view compatibility. |'
  id: totrans-459
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.view`](api/pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | 数组视图兼容性。'
- en: Methods
  id: totrans-460
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Timedelta.as_unit`](api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit
    "pandas.Timedelta.as_unit")(unit[, round_ok]) | Convert the underlying int64 representation
    to the given unit. |'
  id: totrans-461
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.as_unit`](api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit
    "pandas.Timedelta.as_unit")(unit[, round_ok]) | 将底层int64表示转换为给定的单位。'
- en: '| [`Timedelta.ceil`](api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | Return a new Timedelta ceiled to this resolution. |'
  id: totrans-462
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.ceil`](api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | 返回一个新的时间增量，使其上限为此分辨率。'
- en: '| [`Timedelta.floor`](api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor")(freq) | Return a new Timedelta floored to this resolution.
    |'
  id: totrans-463
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.floor`](api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor")(freq) | 返回一个新的时间增量，使其下限为此分辨率。'
- en: '| [`Timedelta.isoformat`](api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | Format the Timedelta as ISO 8601 Duration. |'
  id: totrans-464
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.isoformat`](api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | 将时间增量格式化为ISO 8601持续时间。'
- en: '| [`Timedelta.round`](api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round")(freq) | Round the Timedelta to the specified resolution.
    |'
  id: totrans-465
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.round`](api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round")(freq) | 将 Timedelta 四舍五入到指定的分辨率。 |'
- en: '| [`Timedelta.to_pytimedelta`](api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | Convert a pandas Timedelta object into
    a python `datetime.timedelta` object. |'
  id: totrans-466
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_pytimedelta`](api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | 将 pandas Timedelta 对象转换为 python `datetime.timedelta`
    对象。 |'
- en: '| [`Timedelta.to_timedelta64`](api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | Return a numpy.timedelta64 object with
    ''ns'' precision. |'
  id: totrans-467
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_timedelta64`](api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | 返回一个具有 ''ns'' 精度的 numpy.timedelta64 对象。
    |'
- en: '| [`Timedelta.to_numpy`](api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy
    "pandas.Timedelta.to_numpy")([dtype, copy]) | Convert the Timedelta to a NumPy
    timedelta64. |'
  id: totrans-468
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_numpy`](api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy
    "pandas.Timedelta.to_numpy")([dtype, copy]) | 将 Timedelta 转换为 NumPy timedelta64。
    |'
- en: '| [`Timedelta.total_seconds`](api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | Total seconds in the duration. |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.total_seconds`](api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | 持续时间中的总秒数。 |'
- en: A collection of [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    may be stored in a `TimedeltaArray`.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 一组[`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")可以存储在`TimedeltaArray`中。
- en: '| [`arrays.TimedeltaArray`](api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")(values[, dtype, freq, ...]) | Pandas ExtensionArray
    for timedelta data. |  ### Periods'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`arrays.TimedeltaArray`](api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")(values[, dtype, freq, ...]) | 用于时间差数据的 Pandas
    扩展数组。 |  ### 周期'
- en: pandas represents spans of times as [`Period`](api/pandas.Period.html#pandas.Period
    "pandas.Period") objects.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 将时间段表示为[`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")对象。
- en: Period
  id: totrans-473
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 周期
- en: '| [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")([value, freq, ordinal, year, month, ...])
    | Represents a period of time. |'
  id: totrans-474
  prefs: []
  type: TYPE_TB
  zh: '| [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")([value, freq, ordinal, year, month, ...])
    | 表示一段时间。 |'
- en: Properties
  id: totrans-475
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Period.day`](api/pandas.Period.day.html#pandas.Period.day "pandas.Period.day")
    | Get day of the month that a Period falls on. |'
  id: totrans-476
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day`](api/pandas.Period.day.html#pandas.Period.day "pandas.Period.day")
    | 获取周期落在的月份的日期。 |'
- en: '| [`Period.dayofweek`](api/pandas.Period.dayofweek.html#pandas.Period.dayofweek
    "pandas.Period.dayofweek") | Day of the week the period lies in, with Monday=0
    and Sunday=6. |'
  id: totrans-477
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.dayofweek`](api/pandas.Period.dayofweek.html#pandas.Period.dayofweek
    "pandas.Period.dayofweek") | 周期所处的星期几，星期一为0，星期日为6。 |'
- en: '| [`Period.day_of_week`](api/pandas.Period.day_of_week.html#pandas.Period.day_of_week
    "pandas.Period.day_of_week") | Day of the week the period lies in, with Monday=0
    and Sunday=6. |'
  id: totrans-478
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day_of_week`](api/pandas.Period.day_of_week.html#pandas.Period.day_of_week
    "pandas.Period.day_of_week") | 周期所处的星期几，星期一为0，星期日为6。 |'
- en: '| [`Period.dayofyear`](api/pandas.Period.dayofyear.html#pandas.Period.dayofyear
    "pandas.Period.dayofyear") | Return the day of the year. |'
  id: totrans-479
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.dayofyear`](api/pandas.Period.dayofyear.html#pandas.Period.dayofyear
    "pandas.Period.dayofyear") | 返回一年中的第几天。 |'
- en: '| [`Period.day_of_year`](api/pandas.Period.day_of_year.html#pandas.Period.day_of_year
    "pandas.Period.day_of_year") | Return the day of the year. |'
  id: totrans-480
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day_of_year`](api/pandas.Period.day_of_year.html#pandas.Period.day_of_year
    "pandas.Period.day_of_year") | 返回一年中的第几天。 |'
- en: '| [`Period.days_in_month`](api/pandas.Period.days_in_month.html#pandas.Period.days_in_month
    "pandas.Period.days_in_month") | Get the total number of days in the month that
    this period falls on. |'
  id: totrans-481
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.days_in_month`](api/pandas.Period.days_in_month.html#pandas.Period.days_in_month
    "pandas.Period.days_in_month") | 获取此周期所在月份的总天数。 |'
- en: '| [`Period.daysinmonth`](api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth
    "pandas.Period.daysinmonth") | Get the total number of days of the month that
    this period falls on. |'
  id: totrans-482
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.daysinmonth`](api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth
    "pandas.Period.daysinmonth") | 获取此周期所在月份的总天数。 |'
- en: '| [`Period.end_time`](api/pandas.Period.end_time.html#pandas.Period.end_time
    "pandas.Period.end_time") | Get the Timestamp for the end of the period. |'
  id: totrans-483
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.end_time`](api/pandas.Period.end_time.html#pandas.Period.end_time
    "pandas.Period.end_time") | 获取周期结束时间的时间戳。 |'
- en: '| [`Period.freq`](api/pandas.Period.freq.html#pandas.Period.freq "pandas.Period.freq")
    |  |'
  id: totrans-484
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.freq`](api/pandas.Period.freq.html#pandas.Period.freq "pandas.Period.freq")
    |  |'
- en: '| [`Period.freqstr`](api/pandas.Period.freqstr.html#pandas.Period.freqstr "pandas.Period.freqstr")
    | Return a string representation of the frequency. |'
  id: totrans-485
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.freqstr`](api/pandas.Period.freqstr.html#pandas.Period.freqstr "pandas.Period.freqstr")
    | 返回频率的字符串表示。 |'
- en: '| [`Period.hour`](api/pandas.Period.hour.html#pandas.Period.hour "pandas.Period.hour")
    | Get the hour of the day component of the Period. |'
  id: totrans-486
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.hour`](api/pandas.Period.hour.html#pandas.Period.hour "pandas.Period.hour")
    | 获取周期的小时组件。 |'
- en: '| [`Period.is_leap_year`](api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year
    "pandas.Period.is_leap_year") | Return True if the period''s year is in a leap
    year. |'
  id: totrans-487
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.is_leap_year`](api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year
    "pandas.Period.is_leap_year") | 如果周期的年份是闰年，则返回True。 |'
- en: '| [`Period.minute`](api/pandas.Period.minute.html#pandas.Period.minute "pandas.Period.minute")
    | Get minute of the hour component of the Period. |'
  id: totrans-488
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.minute`](api/pandas.Period.minute.html#pandas.Period.minute "pandas.Period.minute")
    | 获取周期的小时分钟组件。 |'
- en: '| [`Period.month`](api/pandas.Period.month.html#pandas.Period.month "pandas.Period.month")
    | Return the month this Period falls on. |'
  id: totrans-489
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.month`](api/pandas.Period.month.html#pandas.Period.month "pandas.Period.month")
    | 返回此周期所在的月份。 |'
- en: '| [`Period.ordinal`](api/pandas.Period.ordinal.html#pandas.Period.ordinal "pandas.Period.ordinal")
    |  |'
  id: totrans-490
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.ordinal`](api/pandas.Period.ordinal.html#pandas.Period.ordinal "pandas.Period.ordinal")
    |  |'
- en: '| [`Period.quarter`](api/pandas.Period.quarter.html#pandas.Period.quarter "pandas.Period.quarter")
    | Return the quarter this Period falls on. |'
  id: totrans-491
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.quarter`](api/pandas.Period.quarter.html#pandas.Period.quarter "pandas.Period.quarter")
    | 返回此周期所在的季度。 |'
- en: '| [`Period.qyear`](api/pandas.Period.qyear.html#pandas.Period.qyear "pandas.Period.qyear")
    | Fiscal year the Period lies in according to its starting-quarter. |'
  id: totrans-492
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.qyear`](api/pandas.Period.qyear.html#pandas.Period.qyear "pandas.Period.qyear")
    | 根据其起始季度确定周期所在的财政年度。 |'
- en: '| [`Period.second`](api/pandas.Period.second.html#pandas.Period.second "pandas.Period.second")
    | Get the second component of the Period. |'
  id: totrans-493
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.second`](api/pandas.Period.second.html#pandas.Period.second "pandas.Period.second")
    | 获取周期的秒组件。 |'
- en: '| [`Period.start_time`](api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") | Get the Timestamp for the start of the period. |'
  id: totrans-494
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.start_time`](api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") | 获取周期开始时间的时间戳。 |'
- en: '| [`Period.week`](api/pandas.Period.week.html#pandas.Period.week "pandas.Period.week")
    | Get the week of the year on the given Period. |'
  id: totrans-495
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.week`](api/pandas.Period.week.html#pandas.Period.week "pandas.Period.week")
    | 获取给定周期的一年中的周数。 |'
- en: '| [`Period.weekday`](api/pandas.Period.weekday.html#pandas.Period.weekday "pandas.Period.weekday")
    | Day of the week the period lies in, with Monday=0 and Sunday=6. |'
  id: totrans-496
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.weekday`](api/pandas.Period.weekday.html#pandas.Period.weekday "pandas.Period.weekday")
    | 周期所在的星期几，星期一=0，星期日=6。 |'
- en: '| [`Period.weekofyear`](api/pandas.Period.weekofyear.html#pandas.Period.weekofyear
    "pandas.Period.weekofyear") | Get the week of the year on the given Period. |'
  id: totrans-497
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.weekofyear`](api/pandas.Period.weekofyear.html#pandas.Period.weekofyear
    "pandas.Period.weekofyear") | 获取给定周期的一年中的周数。 |'
- en: '| [`Period.year`](api/pandas.Period.year.html#pandas.Period.year "pandas.Period.year")
    | Return the year this Period falls on. |'
  id: totrans-498
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.year`](api/pandas.Period.year.html#pandas.Period.year "pandas.Period.year")
    | 返回此周期所在的年份。 |'
- en: Methods
  id: totrans-499
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Period.asfreq`](api/pandas.Period.asfreq.html#pandas.Period.asfreq "pandas.Period.asfreq")(freq[, how])
    | Convert Period to desired frequency, at the start or end of the interval. |'
  id: totrans-500
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.asfreq`](api/pandas.Period.asfreq.html#pandas.Period.asfreq "pandas.Period.asfreq")(freq[, how])
    | 将周期转换为所需频率，位于间隔的开始或结束。 |'
- en: '| [`Period.now`](api/pandas.Period.now.html#pandas.Period.now "pandas.Period.now")(freq)
    | Return the period of now''s date. |'
  id: totrans-501
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.now`](api/pandas.Period.now.html#pandas.Period.now "pandas.Period.now")(freq)
    | 返回当前日期的周期。 |'
- en: '| [`Period.strftime`](api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime")(fmt) | Returns a formatted string representation of
    the [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period"). |'
  id: totrans-502
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.strftime`](api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime")(fmt) | 返回[`Period`](api/pandas.Period.html#pandas.Period
    "pandas.Period")的格式化字符串表示。 |'
- en: '| [`Period.to_timestamp`](api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp")([freq, how]) | Return the Timestamp representation
    of the Period. |'
  id: totrans-503
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.to_timestamp`](api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp")([freq, how]) | 返回周期的时间戳表示。 |'
- en: A collection of [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")
    may be stored in a [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray"). Every period in a [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") must have the same `freq`.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 一组[`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")可以存储在[`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")中。[`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")中的每个周期必须具有相同的`freq`。
- en: '| [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")(values[, dtype, freq, copy]) | Pandas ExtensionArray
    for storing Period data. |'
  id: totrans-505
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")(values[, dtype, freq, copy]) | 用于存储周期数据的 Pandas ExtensionArray。
    |'
- en: '| [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype "pandas.PeriodDtype")(freq)
    | An ExtensionDtype for Period data. |'
  id: totrans-506
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype "pandas.PeriodDtype")(freq)
    | 用于周期数据的扩展数据类型。 |'
- en: '### Intervals'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: '### 区间'
- en: Arbitrary intervals can be represented as [`Interval`](api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 任意区间可以表示为[`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")对象。
- en: '| [`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    | Immutable object implementing an Interval, a bounded slice-like interval. |'
  id: totrans-509
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    | 实现区间（Interval）的不可变对象，类似于有界的切片区间。 |'
- en: Properties
  id: totrans-510
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Interval.closed`](api/pandas.Interval.closed.html#pandas.Interval.closed
    "pandas.Interval.closed") | String describing the inclusive side the intervals.
    |'
  id: totrans-511
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed`](api/pandas.Interval.closed.html#pandas.Interval.closed
    "pandas.Interval.closed") | 描述区间的包含侧的字符串。 |'
- en: '| [`Interval.closed_left`](api/pandas.Interval.closed_left.html#pandas.Interval.closed_left
    "pandas.Interval.closed_left") | Check if the interval is closed on the left side.
    |'
  id: totrans-512
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed_left`](api/pandas.Interval.closed_left.html#pandas.Interval.closed_left
    "pandas.Interval.closed_left") | 检查区间左侧是否闭合。 |'
- en: '| [`Interval.closed_right`](api/pandas.Interval.closed_right.html#pandas.Interval.closed_right
    "pandas.Interval.closed_right") | Check if the interval is closed on the right
    side. |'
  id: totrans-513
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed_right`](api/pandas.Interval.closed_right.html#pandas.Interval.closed_right
    "pandas.Interval.closed_right") | 检查区间右侧是否闭合。 |'
- en: '| [`Interval.is_empty`](api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") | Indicates if an interval is empty, meaning it contains
    no points. |'
  id: totrans-514
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.is_empty`](api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") | 指示区间是否为空，即是否不包含任何点。 |'
- en: '| [`Interval.left`](api/pandas.Interval.left.html#pandas.Interval.left "pandas.Interval.left")
    | Left bound for the interval. |'
  id: totrans-515
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.left`](api/pandas.Interval.left.html#pandas.Interval.left "pandas.Interval.left")
    | 区间的左边界。 |'
- en: '| [`Interval.length`](api/pandas.Interval.length.html#pandas.Interval.length
    "pandas.Interval.length") | Return the length of the Interval. |'
  id: totrans-516
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.length`](api/pandas.Interval.length.html#pandas.Interval.length
    "pandas.Interval.length") | 返回区间的长度。 |'
- en: '| [`Interval.mid`](api/pandas.Interval.mid.html#pandas.Interval.mid "pandas.Interval.mid")
    | Return the midpoint of the Interval. |'
  id: totrans-517
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.mid`](api/pandas.Interval.mid.html#pandas.Interval.mid "pandas.Interval.mid")
    | 返回区间的中点。 |'
- en: '| [`Interval.open_left`](api/pandas.Interval.open_left.html#pandas.Interval.open_left
    "pandas.Interval.open_left") | Check if the interval is open on the left side.
    |'
  id: totrans-518
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.open_left`](api/pandas.Interval.open_left.html#pandas.Interval.open_left
    "pandas.Interval.open_left") | 检查区间左侧是否开放。 |'
- en: '| [`Interval.open_right`](api/pandas.Interval.open_right.html#pandas.Interval.open_right
    "pandas.Interval.open_right") | Check if the interval is open on the right side.
    |'
  id: totrans-519
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.open_right`](api/pandas.Interval.open_right.html#pandas.Interval.open_right
    "pandas.Interval.open_right") | 检查区间右侧是否开放。 |'
- en: '| [`Interval.overlaps`](api/pandas.Interval.overlaps.html#pandas.Interval.overlaps
    "pandas.Interval.overlaps")(other) | Check whether two Interval objects overlap.
    |'
  id: totrans-520
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.overlaps`](api/pandas.Interval.overlaps.html#pandas.Interval.overlaps
    "pandas.Interval.overlaps")(other) | 检查两个区间对象是否重叠。 |'
- en: '| [`Interval.right`](api/pandas.Interval.right.html#pandas.Interval.right "pandas.Interval.right")
    | Right bound for the interval. |'
  id: totrans-521
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.right`](api/pandas.Interval.right.html#pandas.Interval.right "pandas.Interval.right")
    | 区间的右边界。 |'
- en: A collection of intervals may be stored in an [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray").
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 一组区间可以存储在[`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")中。
- en: '| [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")(data[, closed, dtype, ...]) | Pandas array for
    interval data that are closed on the same side. |'
  id: totrans-523
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")(data[, closed, dtype, ...]) | 用于在同一侧关闭的区间数据的 Pandas
    数组。 |'
- en: '| [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype "pandas.IntervalDtype")([subtype, closed])
    | An ExtensionDtype for Interval data. |  ### Nullable integer'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype "pandas.IntervalDtype")([subtype, closed])
    | 区间数据的扩展 dtype。 |  ### 可空整数'
- en: '[`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)") cannot natively represent integer-data with missing values.
    pandas provides this through [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray").'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)") 无法原生地表示带有缺失值的整数数据。pandas 通过 [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") 提供了这种功能。'
- en: '| [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")(values, mask[, copy]) | Array of integer (optional
    missing) values. |'
  id: totrans-526
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")(values, mask[, copy]) | 整数（可选缺失）值数组。 |'
- en: '| [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype "pandas.Int8Dtype")()
    | An ExtensionDtype for int8 integer data. |'
  id: totrans-527
  prefs: []
  type: TYPE_TB
  zh: '| [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype "pandas.Int8Dtype")()
    | 用于 int8 整数数据的扩展 dtype。 |'
- en: '| [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype "pandas.Int16Dtype")()
    | An ExtensionDtype for int16 integer data. |'
  id: totrans-528
  prefs: []
  type: TYPE_TB
  zh: '| [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype "pandas.Int16Dtype")()
    | 用于 int16 整数数据的扩展 dtype。 |'
- en: '| [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype "pandas.Int32Dtype")()
    | An ExtensionDtype for int32 integer data. |'
  id: totrans-529
  prefs: []
  type: TYPE_TB
  zh: '| [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype "pandas.Int32Dtype")()
    | 用于 int32 整数数据的扩展 dtype。 |'
- en: '| [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype "pandas.Int64Dtype")()
    | An ExtensionDtype for int64 integer data. |'
  id: totrans-530
  prefs: []
  type: TYPE_TB
  zh: '| [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype "pandas.Int64Dtype")()
    | 用于 int64 整数数据的扩展 dtype。 |'
- en: '| [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype "pandas.UInt8Dtype")()
    | An ExtensionDtype for uint8 integer data. |'
  id: totrans-531
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype "pandas.UInt8Dtype")()
    | 用于 uint8 整数数据的扩展 dtype。 |'
- en: '| [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype "pandas.UInt16Dtype")()
    | An ExtensionDtype for uint16 integer data. |'
  id: totrans-532
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype "pandas.UInt16Dtype")()
    | 用于 uint16 整数数据的扩展 dtype。 |'
- en: '| [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype "pandas.UInt32Dtype")()
    | An ExtensionDtype for uint32 integer data. |'
  id: totrans-533
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype "pandas.UInt32Dtype")()
    | 用于 uint32 整数数据的扩展 dtype。 |'
- en: '| [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype "pandas.UInt64Dtype")()
    | An ExtensionDtype for uint64 integer data. |  ### Nullable float'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype "pandas.UInt64Dtype")()
    | 用于 uint64 整数数据的扩展 dtype。 |  ### 可空浮点数'
- en: '| [`arrays.FloatingArray`](api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray")(values, mask[, copy]) | Array of floating (optional
    missing) values. |'
  id: totrans-535
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.FloatingArray`](api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray")(values, mask[, copy]) | 浮点数（可选缺失）值数组。 |'
- en: '| [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype "pandas.Float32Dtype")()
    | An ExtensionDtype for float32 data. |'
  id: totrans-536
  prefs: []
  type: TYPE_TB
  zh: '| [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype "pandas.Float32Dtype")()
    | 用于 float32 数据的扩展 dtype。 |'
- en: '| [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype "pandas.Float64Dtype")()
    | An ExtensionDtype for float64 data. |  ### Categoricals'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype "pandas.Float64Dtype")()
    | 用于 float64 数据的扩展 dtype。 |  ### 分类'
- en: pandas defines a custom data type for representing data that can take only a
    limited, fixed set of values. The dtype of a [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") can be described by a [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype").
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 定义了一种自定义数据类型，用于表示只能采用有限的、固定集合的数据。 [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") 的 dtype 可以由 [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") 描述。
- en: '| [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")([categories, ordered]) | Type for categorical data
    with the categories and orderedness. |'
  id: totrans-539
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")([categories, ordered]) | 具有类别和顺序的分类数据类型。 |'
- en: '| [`CategoricalDtype.categories`](api/pandas.CategoricalDtype.categories.html#pandas.CategoricalDtype.categories
    "pandas.CategoricalDtype.categories") | An `Index` containing the unique categories
    allowed. |'
  id: totrans-540
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype.categories`](api/pandas.CategoricalDtype.categories.html#pandas.CategoricalDtype.categories
    "pandas.CategoricalDtype.categories") | 包含允许的唯一类别的`Index`。 |'
- en: '| [`CategoricalDtype.ordered`](api/pandas.CategoricalDtype.ordered.html#pandas.CategoricalDtype.ordered
    "pandas.CategoricalDtype.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-541
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype.ordered`](api/pandas.CategoricalDtype.ordered.html#pandas.CategoricalDtype.ordered
    "pandas.CategoricalDtype.ordered") | 类别是否具有有序关系。 |'
- en: Categorical data can be stored in a [`pandas.Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 分类数据可以存储在[`pandas.Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")中
- en: '| [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")(values[, categories, ordered, ...])
    | Represent a categorical variable in classic R / S-plus fashion. |'
  id: totrans-543
  prefs: []
  type: TYPE_TB
  zh: '| [`分类`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")(values[, categories, ordered, ...])
    | 以经典的R / S-plus风格表示分类变量。 |'
- en: 'The alternative [`Categorical.from_codes()`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") constructor can be used when you have the categories
    and integer codes already:'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 当您已经有类别和整数编码时，可以使用替代的[`Categorical.from_codes()`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes")构造函数：
- en: '| [`Categorical.from_codes`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes")(codes[, categories, ...]) | Make a Categorical
    type from codes and categories or dtype. |'
  id: totrans-545
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.from_codes`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes")(codes[, categories, ...]) | 从代码和类别或dtype创建一个分类类型。
    |'
- en: The dtype information is available on the [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: dtype信息可在[`分类`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")上找到
- en: '| [`Categorical.dtype`](api/pandas.Categorical.dtype.html#pandas.Categorical.dtype
    "pandas.Categorical.dtype") | The `CategoricalDtype` for this instance. |'
  id: totrans-547
  prefs: []
  type: TYPE_TB
  zh: '| [`分类.dtype`](api/pandas.Categorical.dtype.html#pandas.Categorical.dtype "pandas.Categorical.dtype")
    | 此实例的`CategoricalDtype`。 |'
- en: '| [`Categorical.categories`](api/pandas.Categorical.categories.html#pandas.Categorical.categories
    "pandas.Categorical.categories") | The categories of this categorical. |'
  id: totrans-548
  prefs: []
  type: TYPE_TB
  zh: '| [`分类.categories`](api/pandas.Categorical.categories.html#pandas.Categorical.categories
    "pandas.Categorical.categories") | 此分类的类别。 |'
- en: '| [`Categorical.ordered`](api/pandas.Categorical.ordered.html#pandas.Categorical.ordered
    "pandas.Categorical.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-549
  prefs: []
  type: TYPE_TB
  zh: '| [`分类.ordered`](api/pandas.Categorical.ordered.html#pandas.Categorical.ordered
    "pandas.Categorical.ordered") | 类别是否具有有序关系。 |'
- en: '| [`Categorical.codes`](api/pandas.Categorical.codes.html#pandas.Categorical.codes
    "pandas.Categorical.codes") | The category codes of this categorical index. |'
  id: totrans-550
  prefs: []
  type: TYPE_TB
  zh: '| [`分类.codes`](api/pandas.Categorical.codes.html#pandas.Categorical.codes "pandas.Categorical.codes")
    | 此分类索引的类别代码。 |'
- en: '`np.asarray(categorical)` works by implementing the array interface. Be aware,
    that this converts the [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") back to a NumPy array, so categories and order information
    is not preserved!'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.asarray(categorical)`通过实现数组接口来工作。请注意，这会将[`分类`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")转换回NumPy数组，因此类别和顺序信息不会被保留！'
- en: '| [`Categorical.__array__`](api/pandas.Categorical.__array__.html#pandas.Categorical.__array__
    "pandas.Categorical.__array__")([dtype, copy]) | The numpy array interface. |'
  id: totrans-552
  prefs: []
  type: TYPE_TB
  zh: '| [`分类.__array__`](api/pandas.Categorical.__array__.html#pandas.Categorical.__array__
    "pandas.Categorical.__array__")([dtype, copy]) | numpy数组接口。 |'
- en: A [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")
    can be stored in a [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    To create a Series of dtype `category`, use `cat = s.astype(dtype)` or `Series(...,
    dtype=dtype)` where `dtype` is either
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`分类`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")可以存储在[`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")中。要创建一个`category`类型的Series，使用`cat
    = s.astype(dtype)`或`Series(..., dtype=dtype)`，其中`dtype`可以是
- en: the string `'category'`
  id: totrans-554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串`'category'`
- en: an instance of [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype").
  id: totrans-555
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个[`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")的实例。
- en: 'If the [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series") is
    of dtype [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype"), `Series.cat` can be used to change the categorical
    data. See [Categorical accessor](series.html#api-series-cat) for more.  ### Sparse'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '如果 [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series") 的数据类型是
    [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")，则可以使用 `Series.cat` 来更改分类数据。查看 [分类访问器](series.html#api-series-cat)
    了解更多。  ### 稀疏'
- en: Data where a single value is repeated many times (e.g. `0` or `NaN`) may be
    stored efficiently as a [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray").
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 单个值重复多次的数据（例如 `0` 或 `NaN`）可以高效地存储为 [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")。
- en: '| [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")(data[, sparse_index, ...]) | An ExtensionArray for
    storing sparse data. |'
  id: totrans-558
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")(data[, sparse_index, ...]) | 用于存储稀疏数据的 ExtensionArray。
    |'
- en: '| [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")([dtype, fill_value])
    | Dtype for data stored in `SparseArray`. |'
  id: totrans-559
  prefs: []
  type: TYPE_TB
  zh: '| [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")([dtype, fill_value])
    | 存储在 `SparseArray` 中的数据类型。 |'
- en: 'The `Series.sparse` accessor may be used to access sparse-specific attributes
    and methods if the [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    contains sparse values. See [Sparse accessor](series.html#api-series-sparse) and
    [the user guide](../user_guide/sparse.html#sparse) for more.  ### Strings'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.sparse` 访问器可用于访问稀疏值特定的属性和方法，如果 [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series") 包含稀疏值。查看 [稀疏访问器](series.html#api-series-sparse) 和 [用户指南](../user_guide/sparse.html#sparse)
    了解更多。  ### 字符串'
- en: When working with text data, where each valid element is a string or missing,
    we recommend using [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") (with the alias `"string"`).
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理文本数据时，每个有效元素是字符串或缺失值时，建议使用 [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype")（别名为 `"string"`）。
- en: '| [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray")(values[, copy]) | Extension array for string data.
    |'
  id: totrans-562
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray")(values[, copy]) | 字符串数据的扩展数组。 |'
- en: '| [`arrays.ArrowStringArray`](api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray")(values) | Extension array for string data in
    a `pyarrow.ChunkedArray`. |'
  id: totrans-563
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.ArrowStringArray`](api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray")(values) | 在 `pyarrow.ChunkedArray` 中存储字符串数据的扩展数组。
    |'
- en: '| [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")([storage])
    | Extension dtype for string data. |'
  id: totrans-564
  prefs: []
  type: TYPE_TB
  zh: '| [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")([storage])
    | 字符串数据的扩展数据类型。 |'
- en: 'The `Series.str` accessor is available for [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series") backed by a [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray"). See [String handling](series.html#api-series-str)
    for more.  ### Nullable Boolean'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series.str` 访问器适用于由 [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") 支持的 [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series")。查看 [字符串处理](series.html#api-series-str) 了解更多。  ### 可空布尔'
- en: The boolean dtype (with the alias `"boolean"`) provides support for storing
    boolean data (`True`, `False`) with missing values, which is not possible with
    a bool [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)").
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔数据类型（别名为 `"boolean"`）支持存储布尔数据（`True`、`False`）和缺失值，这是使用 bool [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)") 不可能实现的。
- en: '| [`arrays.BooleanArray`](api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")(values, mask[, copy]) | Array of boolean (True/False)
    data with missing values. |'
  id: totrans-567
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.BooleanArray`](api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")(values, mask[, copy]) | 包含缺失值的布尔（True/False）数据数组。
    |'
- en: '| [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype "pandas.BooleanDtype")()
    | Extension dtype for boolean data. |  ### PyArrow'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '| [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype "pandas.BooleanDtype")()
    | 布尔数据的扩展数据类型。 |  ### PyArrow'
- en: Warning
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: This feature is experimental, and the API can change in a future release without
    warning.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能是实验性的，API 可能在未来的发布中更改而没有警告。
- en: The [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") is backed by a [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)") with a [`pyarrow.DataType`](https://arrow.apache.org/docs/python/generated/pyarrow.DataType.html#pyarrow.DataType
    "(in Apache Arrow v15.0.2)") instead of a NumPy array and data type. The `.dtype`
    of a [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") is an [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype").
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: '[`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") 由 [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(在 Apache Arrow v15.0.2 中)") 支持，使用 [`pyarrow.DataType`](https://arrow.apache.org/docs/python/generated/pyarrow.DataType.html#pyarrow.DataType
    "(在 Apache Arrow v15.0.2 中)") 而不是 NumPy 数组和数据类型。 [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") 的 `.dtype` 是 [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype")。'
- en: '[Pyarrow](https://arrow.apache.org/docs/python/index.html) provides similar
    array and [data type](https://arrow.apache.org/docs/python/api/datatypes.html)
    support as NumPy including first-class nullability support for all data types,
    immutability and more.'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: '[Pyarrow](https://arrow.apache.org/docs/python/index.html) 提供类似 NumPy 的数组和[数据类型](https://arrow.apache.org/docs/python/api/datatypes.html)支持，包括对所有数据类型的一流可空支持，不可变性等。'
- en: The table below shows the equivalent pyarrow-backed (`pa`), pandas extension,
    and numpy (`np`) types that are recognized by pandas. Pyarrow-backed types below
    need to be passed into [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") to be recognized by pandas e.g. `pd.ArrowDtype(pa.bool_())`
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了 pandas 认可的等效 pyarrow 支持（`pa`）、pandas 扩展和 numpy (`np`) 类型。下表中的 Pyarrow
    支持类型需要传递给 [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")
    才能被 pandas 识别，例如 `pd.ArrowDtype(pa.bool_())`。
- en: '| PyArrow type | pandas extension type | NumPy type |'
  id: totrans-574
  prefs: []
  type: TYPE_TB
  zh: '| PyArrow 类型 | pandas 扩展类型 | NumPy 类型 |'
- en: '| --- | --- | --- |'
  id: totrans-575
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| [`pyarrow.bool_()`](https://arrow.apache.org/docs/python/generated/pyarrow.bool_.html#pyarrow.bool_
    "(in Apache Arrow v15.0.2)") | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | `np.bool_` |'
  id: totrans-576
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.bool_()`](https://arrow.apache.org/docs/python/generated/pyarrow.bool_.html#pyarrow.bool_
    "(在 Apache Arrow v15.0.2 中)") | [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") | `np.bool_` |'
- en: '| [`pyarrow.int8()`](https://arrow.apache.org/docs/python/generated/pyarrow.int8.html#pyarrow.int8
    "(in Apache Arrow v15.0.2)") | [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype
    "pandas.Int8Dtype") | `np.int8` |'
  id: totrans-577
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int8()`](https://arrow.apache.org/docs/python/generated/pyarrow.int8.html#pyarrow.int8
    "(在 Apache Arrow v15.0.2 中)") | [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype
    "pandas.Int8Dtype") | `np.int8` |'
- en: '| [`pyarrow.int16()`](https://arrow.apache.org/docs/python/generated/pyarrow.int16.html#pyarrow.int16
    "(in Apache Arrow v15.0.2)") | [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype
    "pandas.Int16Dtype") | `np.int16` |'
  id: totrans-578
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int16()`](https://arrow.apache.org/docs/python/generated/pyarrow.int16.html#pyarrow.int16
    "(在 Apache Arrow v15.0.2 中)") | [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype
    "pandas.Int16Dtype") | `np.int16` |'
- en: '| [`pyarrow.int32()`](https://arrow.apache.org/docs/python/generated/pyarrow.int32.html#pyarrow.int32
    "(in Apache Arrow v15.0.2)") | [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype
    "pandas.Int32Dtype") | `np.int32` |'
  id: totrans-579
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int32()`](https://arrow.apache.org/docs/python/generated/pyarrow.int32.html#pyarrow.int32
    "(在 Apache Arrow v15.0.2 中)") | [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype
    "pandas.Int32Dtype") | `np.int32` |'
- en: '| [`pyarrow.int64()`](https://arrow.apache.org/docs/python/generated/pyarrow.int64.html#pyarrow.int64
    "(in Apache Arrow v15.0.2)") | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype") | `np.int64` |'
  id: totrans-580
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.int64()`](https://arrow.apache.org/docs/python/generated/pyarrow.int64.html#pyarrow.int64
    "(在 Apache Arrow v15.0.2 中)") | [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype
    "pandas.Int64Dtype") | `np.int64` |'
- en: '| [`pyarrow.uint8()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint8.html#pyarrow.uint8
    "(in Apache Arrow v15.0.2)") | [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype
    "pandas.UInt8Dtype") | `np.uint8` |'
  id: totrans-581
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint8()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint8.html#pyarrow.uint8
    "(在 Apache Arrow v15.0.2 中)") | [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype
    "pandas.UInt8Dtype") | `np.uint8` |'
- en: '| [`pyarrow.uint16()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint16.html#pyarrow.uint16
    "(in Apache Arrow v15.0.2)") | [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype
    "pandas.UInt16Dtype") | `np.uint16` |'
  id: totrans-582
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint16()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint16.html#pyarrow.uint16
    "(在 Apache Arrow v15.0.2)") | [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype
    "pandas.UInt16Dtype") | `np.uint16` |'
- en: '| [`pyarrow.uint32()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint32.html#pyarrow.uint32
    "(in Apache Arrow v15.0.2)") | [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype
    "pandas.UInt32Dtype") | `np.uint32` |'
  id: totrans-583
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint32()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint32.html#pyarrow.uint32
    "(在 Apache Arrow v15.0.2)") | [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype
    "pandas.UInt32Dtype") | `np.uint32` |'
- en: '| [`pyarrow.uint64()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint64.html#pyarrow.uint64
    "(in Apache Arrow v15.0.2)") | [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype
    "pandas.UInt64Dtype") | `np.uint64` |'
  id: totrans-584
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.uint64()`](https://arrow.apache.org/docs/python/generated/pyarrow.uint64.html#pyarrow.uint64
    "(在 Apache Arrow v15.0.2)") | [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype
    "pandas.UInt64Dtype") | `np.uint64` |'
- en: '| [`pyarrow.float32()`](https://arrow.apache.org/docs/python/generated/pyarrow.float32.html#pyarrow.float32
    "(in Apache Arrow v15.0.2)") | [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") | `np.float32` |'
  id: totrans-585
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.float32()`](https://arrow.apache.org/docs/python/generated/pyarrow.float32.html#pyarrow.float32
    "(在 Apache Arrow v15.0.2)") | [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype
    "pandas.Float32Dtype") | `np.float32` |'
- en: '| [`pyarrow.float64()`](https://arrow.apache.org/docs/python/generated/pyarrow.float64.html#pyarrow.float64
    "(in Apache Arrow v15.0.2)") | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") | `np.float64` |'
  id: totrans-586
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.float64()`](https://arrow.apache.org/docs/python/generated/pyarrow.float64.html#pyarrow.float64
    "(在 Apache Arrow v15.0.2)") | [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype
    "pandas.Float64Dtype") | `np.float64` |'
- en: '| [`pyarrow.time32()`](https://arrow.apache.org/docs/python/generated/pyarrow.time32.html#pyarrow.time32
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-587
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.time32()`](https://arrow.apache.org/docs/python/generated/pyarrow.time32.html#pyarrow.time32
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.time64()`](https://arrow.apache.org/docs/python/generated/pyarrow.time64.html#pyarrow.time64
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-588
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.time64()`](https://arrow.apache.org/docs/python/generated/pyarrow.time64.html#pyarrow.time64
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.timestamp()`](https://arrow.apache.org/docs/python/generated/pyarrow.timestamp.html#pyarrow.timestamp
    "(in Apache Arrow v15.0.2)") | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | `np.datetime64` |'
  id: totrans-589
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.timestamp()`](https://arrow.apache.org/docs/python/generated/pyarrow.timestamp.html#pyarrow.timestamp
    "(在 Apache Arrow v15.0.2)") | [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") | `np.datetime64` |'
- en: '| [`pyarrow.date32()`](https://arrow.apache.org/docs/python/generated/pyarrow.date32.html#pyarrow.date32
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-590
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.date32()`](https://arrow.apache.org/docs/python/generated/pyarrow.date32.html#pyarrow.date32
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.date64()`](https://arrow.apache.org/docs/python/generated/pyarrow.date64.html#pyarrow.date64
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-591
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.date64()`](https://arrow.apache.org/docs/python/generated/pyarrow.date64.html#pyarrow.date64
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.duration()`](https://arrow.apache.org/docs/python/generated/pyarrow.duration.html#pyarrow.duration
    "(in Apache Arrow v15.0.2)") | (none) | `np.timedelta64` |'
  id: totrans-592
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.duration()`](https://arrow.apache.org/docs/python/generated/pyarrow.duration.html#pyarrow.duration
    "(在 Apache Arrow v15.0.2)") | (无) | `np.timedelta64` |'
- en: '| [`pyarrow.binary()`](https://arrow.apache.org/docs/python/generated/pyarrow.binary.html#pyarrow.binary
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-593
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.binary()`](https://arrow.apache.org/docs/python/generated/pyarrow.binary.html#pyarrow.binary
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.string()`](https://arrow.apache.org/docs/python/generated/pyarrow.string.html#pyarrow.string
    "(in Apache Arrow v15.0.2)") | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") | `np.str_` |'
  id: totrans-594
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.string()`](https://arrow.apache.org/docs/python/generated/pyarrow.string.html#pyarrow.string
    "(在 Apache Arrow v15.0.2)") | [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") | `np.str_` |'
- en: '| [`pyarrow.decimal128()`](https://arrow.apache.org/docs/python/generated/pyarrow.decimal128.html#pyarrow.decimal128
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-595
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.decimal128()`](https://arrow.apache.org/docs/python/generated/pyarrow.decimal128.html#pyarrow.decimal128
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.list_()`](https://arrow.apache.org/docs/python/generated/pyarrow.list_.html#pyarrow.list_
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-596
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.list_()`](https://arrow.apache.org/docs/python/generated/pyarrow.list_.html#pyarrow.list_
    "(在 Apache Arrow v15.0.2)") | (无) | (无) |'
- en: '| [`pyarrow.map_()`](https://arrow.apache.org/docs/python/generated/pyarrow.map_.html#pyarrow.map_
    "(in Apache Arrow v15.0.2)") | (none) | (none) |'
  id: totrans-597
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.map_()`](https://arrow.apache.org/docs/python/generated/pyarrow.map_.html#pyarrow.map_
    "(在 Apache Arrow v15.0.2 中)") | (无) | (无) |'
- en: '| [`pyarrow.dictionary()`](https://arrow.apache.org/docs/python/generated/pyarrow.dictionary.html#pyarrow.dictionary
    "(in Apache Arrow v15.0.2)") | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (none) |'
  id: totrans-598
  prefs: []
  type: TYPE_TB
  zh: '| [`pyarrow.dictionary()`](https://arrow.apache.org/docs/python/generated/pyarrow.dictionary.html#pyarrow.dictionary
    "(在 Apache Arrow v15.0.2 中)") | [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") | (无) |'
- en: Note
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Pyarrow-backed string support is provided by both `pd.StringDtype("pyarrow")`
    and `pd.ArrowDtype(pa.string())`. `pd.StringDtype("pyarrow")` is described below
    in the [string section](#api-arrays-string) and will be returned if the string
    alias `"string[pyarrow]"` is specified. `pd.ArrowDtype(pa.string())` generally
    has better interoperability with [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of different types.
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: PyArrow 支持的字符串支持由`pd.StringDtype("pyarrow")`和`pd.ArrowDtype(pa.string())`提供。`pd.StringDtype("pyarrow")`在
    [字符串部分](#api-arrays-string) 中描述，并且如果指定了字符串别名 `"string[pyarrow]"`，将返回该别名。`pd.ArrowDtype(pa.string())`通常与不同类型的
    [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")
    更好地实现互操作性。
- en: While individual values in an [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") are stored as a PyArrow objects, scalars
    are **returned** as Python scalars corresponding to the data type, e.g. a PyArrow
    int64 will be returned as Python int, or [`NA`](api/pandas.NA.html#pandas.NA "pandas.NA")
    for missing values.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然[`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")中的单个值存储为 PyArrow 对象，但标量会**返回**对应于数据类型的 Python
    标量，例如，PyArrow int64 将返回为 Python int，或者对于缺失值将返回 [`NA`](api/pandas.NA.html#pandas.NA
    "pandas.NA")。
- en: '| [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")(values) | Pandas ExtensionArray backed by
    a PyArrow ChunkedArray. |'
  id: totrans-602
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.ArrowExtensionArray`](api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")(values) | 由 PyArrow ChunkedArray 支持的 Pandas
    ExtensionArray。 |'
- en: '| [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")(pyarrow_dtype)
    | An ExtensionDtype for PyArrow data types. |'
  id: totrans-603
  prefs: []
  type: TYPE_TB
  zh: '| [`ArrowDtype`](api/pandas.ArrowDtype.html#pandas.ArrowDtype "pandas.ArrowDtype")(pyarrow_dtype)
    | 用于 PyArrow 数据类型的 ExtensionDtype。 |'
- en: For more information, please see the [PyArrow user guide](../user_guide/pyarrow.html#pyarrow)
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[PyArrow用户指南](../user_guide/pyarrow.html#pyarrow)
- en: '### Datetimes'
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: '### 日期时间'
- en: NumPy cannot natively represent timezone-aware datetimes. pandas supports this
    with the [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") extension array, which can hold timezone-naive
    or timezone-aware values.
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 无法原生表示时区感知的日期时间。pandas 支持使用[`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")扩展数组来实现此功能，该数组可以容纳时区感知或时区无关的值。
- en: '[`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp"),
    a subclass of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(in Python v3.12)"), is pandas’ scalar type for timezone-naive or timezone-aware
    datetime data. [`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT") is the missing
    value for datetime data.'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")是
    [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime
    "(在 Python v3.12 中)")的子类，是 pandas 用于时区无关或时区感知日期时间数据的标量类型。[`NaT`](api/pandas.NaT.html#pandas.NaT
    "pandas.NaT") 是日期时间数据的缺失值。'
- en: '| [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")([ts_input, year, month, day, ...])
    | Pandas replacement for python datetime.datetime object. |'
  id: totrans-608
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp "pandas.Timestamp")([ts_input,
    year, month, day, ...]) | 用于 pandas 的 python datetime.datetime 对象的替代品。 |'
- en: Properties
  id: totrans-609
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Timestamp.asm8`](api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | Return numpy datetime64 format in nanoseconds. |'
  id: totrans-610
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.asm8`](api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | 以纳秒为单位返回 numpy datetime64 格式。 |'
- en: '| [`Timestamp.day`](api/pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
  id: totrans-611
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day`](api/pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
- en: '| [`Timestamp.dayofweek`](api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | Return day of the week. |'
  id: totrans-612
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dayofweek`](api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | 返回星期几。 |'
- en: '| [`Timestamp.day_of_week`](api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | Return day of the week. |'
  id: totrans-613
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_of_week`](api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | 返回星期几。 |'
- en: '| [`Timestamp.dayofyear`](api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | Return the day of the year. |'
  id: totrans-614
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dayofyear`](api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | 返回一年中的第几天。 |'
- en: '| [`Timestamp.day_of_year`](api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | Return the day of the year. |'
  id: totrans-615
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_of_year`](api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | 返回一年中的第几天。 |'
- en: '| [`Timestamp.days_in_month`](api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | Return the number of days in the month. |'
  id: totrans-616
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.days_in_month`](api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | 返回月份的天数。 |'
- en: '| [`Timestamp.daysinmonth`](api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | Return the number of days in the month. |'
  id: totrans-617
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.daysinmonth`](api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | 返回月份的天数。 |'
- en: '| [`Timestamp.fold`](api/pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
  id: totrans-618
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fold`](api/pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
- en: '| [`Timestamp.hour`](api/pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
  id: totrans-619
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.hour`](api/pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
- en: '| [`Timestamp.is_leap_year`](api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | Return True if year is a leap year. |'
  id: totrans-620
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_leap_year`](api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | 如果年份为闰年，则返回 True。 |'
- en: '| [`Timestamp.is_month_end`](api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | Check if the date is the last day of the month.
    |'
  id: totrans-621
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_month_end`](api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | 检查日期是否为月份的最后一天。 |'
- en: '| [`Timestamp.is_month_start`](api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | Check if the date is the first day of the
    month. |'
  id: totrans-622
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_month_start`](api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | 检查日期是否为月份的第一天。 |'
- en: '| [`Timestamp.is_quarter_end`](api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | Check if date is last day of the quarter.
    |'
  id: totrans-623
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_quarter_end`](api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | 检查日期是否为季度的最后一天。 |'
- en: '| [`Timestamp.is_quarter_start`](api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | Check if the date is the first day of the
    quarter. |'
  id: totrans-624
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_quarter_start`](api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | 检查日期是否为季度的第一天。 |'
- en: '| [`Timestamp.is_year_end`](api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | Return True if date is last day of the year.
    |'
  id: totrans-625
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_year_end`](api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | 如果日期为一年的最后一天，则返回 True。 |'
- en: '| [`Timestamp.is_year_start`](api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | Return True if date is first day of the year.
    |'
  id: totrans-626
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_year_start`](api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | 如果日期为一年的第一天，则返回 True。 |'
- en: '| [`Timestamp.max`](api/pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
  id: totrans-627
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.max`](api/pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
- en: '| [`Timestamp.microsecond`](api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
  id: totrans-628
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.microsecond`](api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
- en: '| [`Timestamp.min`](api/pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
  id: totrans-629
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.min`](api/pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
- en: '| [`Timestamp.minute`](api/pandas.Timestamp.minute.html#pandas.Timestamp.minute
    "pandas.Timestamp.minute") |  |'
  id: totrans-630
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.minute`](api/pandas.Timestamp.minute.html#pandas.Timestamp.minute
    "pandas.Timestamp.minute") |  |'
- en: '| [`Timestamp.month`](api/pandas.Timestamp.month.html#pandas.Timestamp.month
    "pandas.Timestamp.month") |  |'
  id: totrans-631
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.month`](api/pandas.Timestamp.month.html#pandas.Timestamp.month
    "pandas.Timestamp.month") |  |'
- en: '| [`Timestamp.nanosecond`](api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
  id: totrans-632
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.nanosecond`](api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
- en: '| [`Timestamp.quarter`](api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter
    "pandas.Timestamp.quarter") | Return the quarter of the year. |'
  id: totrans-633
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.quarter`](api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter
    "pandas.Timestamp.quarter") | 返回一年中的季度。 |'
- en: '| [`Timestamp.resolution`](api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
  id: totrans-634
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.resolution`](api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
- en: '| [`Timestamp.second`](api/pandas.Timestamp.second.html#pandas.Timestamp.second
    "pandas.Timestamp.second") |  |'
  id: totrans-635
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.second`](api/pandas.Timestamp.second.html#pandas.Timestamp.second
    "pandas.Timestamp.second") |  |'
- en: '| [`Timestamp.tz`](api/pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | Alias for tzinfo. |'
  id: totrans-636
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz`](api/pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | tzinfo 的别名。 |'
- en: '| [`Timestamp.tzinfo`](api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo
    "pandas.Timestamp.tzinfo") |  |'
  id: totrans-637
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tzinfo`](api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo
    "pandas.Timestamp.tzinfo") |  |'
- en: '| [`Timestamp.unit`](api/pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | The abbreviation associated with self._creso. |'
  id: totrans-638
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.unit`](api/pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | 与 self._creso 关联的缩写。 |'
- en: '| [`Timestamp.value`](api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") |  |'
  id: totrans-639
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.value`](api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") |  |'
- en: '| [`Timestamp.week`](api/pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | Return the week number of the year. |'
  id: totrans-640
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.week`](api/pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | 返回一年中的周数。 |'
- en: '| [`Timestamp.weekofyear`](api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | Return the week number of the year. |'
  id: totrans-641
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.weekofyear`](api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | 返回一年中的周数。 |'
- en: '| [`Timestamp.year`](api/pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
  id: totrans-642
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.year`](api/pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
- en: Methods
  id: totrans-643
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Timestamp.as_unit`](api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit
    "pandas.Timestamp.as_unit")(unit[, round_ok]) | Convert the underlying int64 representaton
    to the given unit. |'
  id: totrans-644
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.as_unit`](api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit
    "pandas.Timestamp.as_unit")(unit[, round_ok]) | 将底层 int64 表示转换为给定的单位。 |'
- en: '| [`Timestamp.astimezone`](api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  id: totrans-645
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.astimezone`](api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | 将带有时区信息的时间戳转换为另一个时区。 |'
- en: '| [`Timestamp.ceil`](api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | Return a new Timestamp ceiled to this resolution. |'
  id: totrans-646
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.ceil`](api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | 返回一个按此分辨率向上取整的新时间戳。 |'
- en: '| [`Timestamp.combine`](api/pandas.Timestamp.combine.html#pandas.Timestamp.combine
    "pandas.Timestamp.combine")(date, time) | Combine date, time into datetime with
    same date and time fields. |'
  id: totrans-647
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.combine`](api/pandas.Timestamp.combine.html#pandas.Timestamp.combine
    "pandas.Timestamp.combine")(date, time) | 将日期、时间组合成具有相同日期和时间字段的日期时间。 |'
- en: '| [`Timestamp.ctime`](api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime
    "pandas.Timestamp.ctime")() | Return ctime() style string. |'
  id: totrans-648
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.ctime`](api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime
    "pandas.Timestamp.ctime")() | 返回 ctime() 样式的字符串。 |'
- en: '| [`Timestamp.date`](api/pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | Return date object with same year, month and day. |'
  id: totrans-649
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.date`](api/pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | 返回具有相同年、月和日的日期对象。 |'
- en: '| [`Timestamp.day_name`](api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name")([locale]) | Return the day name of the Timestamp
    with specified locale. |'
  id: totrans-650
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_name`](api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name")([locale]) | 返回具有指定区域设置的时间戳的星期几名称。 |'
- en: '| [`Timestamp.dst`](api/pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | Return the daylight saving time (DST) adjustment. |'
  id: totrans-651
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dst`](api/pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | 返回夏令时（DST）调整。 |'
- en: '| [`Timestamp.floor`](api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent]) | Return a new Timestamp
    floored to this resolution. |'
  id: totrans-652
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.floor`](api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent]) | 返回一个按此分辨率向下取整的新时间戳。
    |'
- en: '| [`Timestamp.fromordinal`](api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | Construct a timestamp from a
    a proleptic Gregorian ordinal. |'
  id: totrans-653
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fromordinal`](api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | 从普罗利普提克格里高利序数构造时间戳。 |'
- en: '| [`Timestamp.fromtimestamp`](api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | Transform timestamp[, tz] to tz''s local
    time from POSIX timestamp. |'
  id: totrans-654
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fromtimestamp`](api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | 将时间戳[, tz]从POSIX时间戳转换为tz的本地时间。 |'
- en: '| [`Timestamp.isocalendar`](api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | Return a named tuple containing ISO year,
    week number, and weekday. |'
  id: totrans-655
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isocalendar`](api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | 返回包含ISO年份、周数和工作日的命名元组。 |'
- en: '| [`Timestamp.isoformat`](api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat")([sep, timespec]) | Return the time formatted according
    to ISO 8601. |'
  id: totrans-656
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isoformat`](api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat")([sep, timespec]) | 根据ISO 8601格式返回时间。 |'
- en: '| [`Timestamp.isoweekday`](api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | Return the day of the week represented by the
    date. |'
  id: totrans-657
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isoweekday`](api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | 返回日期表示的星期几。 |'
- en: '| [`Timestamp.month_name`](api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | Return the month name of the Timestamp
    with specified locale. |'
  id: totrans-658
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.month_name`](api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | 返回具有指定区域设置的时间戳的月份名称。 |'
- en: '| [`Timestamp.normalize`](api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | Normalize Timestamp to midnight, preserving
    tz information. |'
  id: totrans-659
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.normalize`](api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | 将时间戳规范化为午夜，保留tz信息。 |'
- en: '| [`Timestamp.now`](api/pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | Return new Timestamp object representing current time local to tz. |'
  id: totrans-660
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.now`](api/pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | 返回表示当前本地时间的新时间戳对象。 |'
- en: '| [`Timestamp.replace`](api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace")([year, month, day, hour, ...]) | Implements datetime.replace,
    handles nanoseconds. |'
  id: totrans-661
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.replace`](api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace")([year, month, day, hour, ...]) | 实现datetime.replace，处理纳秒。
    |'
- en: '| [`Timestamp.round`](api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round")(freq[, ambiguous, nonexistent]) | Round the Timestamp
    to the specified resolution. |'
  id: totrans-662
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.round`](api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round")(freq[, ambiguous, nonexistent]) | 将时间戳舍入到指定的分辨率。 |'
- en: '| [`Timestamp.strftime`](api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime
    "pandas.Timestamp.strftime")(format) | Return a formatted string of the Timestamp.
    |'
  id: totrans-663
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.strftime`](api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime
    "pandas.Timestamp.strftime")(format) | 返回时间戳的格式化字符串。 |'
- en: '| [`Timestamp.strptime`](api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime")(string, format) | Function is not implemented. |'
  id: totrans-664
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.strptime`](api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime")(string, format) | 该函数未实现。 |'
- en: '| [`Timestamp.time`](api/pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | Return time object with same time but with tzinfo=None. |'
  id: totrans-665
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.time`](api/pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | 返回具有相同时间但tzinfo=None的时间对象。 |'
- en: '| [`Timestamp.timestamp`](api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | Return POSIX timestamp as float. |'
  id: totrans-666
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timestamp`](api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | 返回POSIX时间戳作为浮点数。 |'
- en: '| [`Timestamp.timetuple`](api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | Return time tuple, compatible with time.localtime().
    |'
  id: totrans-667
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timetuple`](api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | 返回与time.localtime()兼容的时间元组。 |'
- en: '| [`Timestamp.timetz`](api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz
    "pandas.Timestamp.timetz")() | Return time object with same time and tzinfo. |'
  id: totrans-668
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timetz`](api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz
    "pandas.Timestamp.timetz")() | 返回具有相同时间和tzinfo的时间对象。 |'
- en: '| [`Timestamp.to_datetime64`](api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | Return a numpy.datetime64 object with same
    precision. |'
  id: totrans-669
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_datetime64`](api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | 返回具有相同精度的 numpy.datetime64 对象。 |'
- en: '| [`Timestamp.to_numpy`](api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy
    "pandas.Timestamp.to_numpy")([dtype, copy]) | Convert the Timestamp to a NumPy
    datetime64. |'
  id: totrans-670
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_numpy`](api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy
    "pandas.Timestamp.to_numpy")([dtype, copy]) | 将时间戳转换为 NumPy datetime64。 |'
- en: '| [`Timestamp.to_julian_date`](api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | Convert TimeStamp to a Julian Date. |'
  id: totrans-671
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_julian_date`](api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | 将 TimeStamp 转换为儒略日。 |'
- en: '| [`Timestamp.to_period`](api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | Return an period of which this timestamp
    is an observation. |'
  id: totrans-672
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_period`](api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | 返回一个周期，该周期是此时间戳的观察结果。 |'
- en: '| [`Timestamp.to_pydatetime`](api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | Convert a Timestamp object to a native
    Python datetime object. |'
  id: totrans-673
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_pydatetime`](api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | 将时间戳对象转换为本机 Python datetime 对象。 |'
- en: '| [`Timestamp.today`](api/pandas.Timestamp.today.html#pandas.Timestamp.today
    "pandas.Timestamp.today")([tz]) | Return the current time in the local timezone.
    |'
  id: totrans-674
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.today`](api/pandas.Timestamp.today.html#pandas.Timestamp.today
    "pandas.Timestamp.today")([tz]) | 返回本地时区的当前时间。 |'
- en: '| [`Timestamp.toordinal`](api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | Return proleptic Gregorian ordinal. |'
  id: totrans-675
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.toordinal`](api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | 返回普通的格里高利序数。 |'
- en: '| [`Timestamp.tz_convert`](api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  id: totrans-676
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz_convert`](api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | 将带有时区的时间戳转换为另一个时区。 |'
- en: '| [`Timestamp.tz_localize`](api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, ...]) | Localize the Timestamp
    to a timezone. |'
  id: totrans-677
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz_localize`](api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, ...]) | 将时间戳本地化到一个时区。 |'
- en: '| [`Timestamp.tzname`](api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname
    "pandas.Timestamp.tzname")() | Return time zone name. |'
  id: totrans-678
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tzname`](api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname
    "pandas.Timestamp.tzname")() | 返回时区名称。 |'
- en: '| [`Timestamp.utcfromtimestamp`](api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | Construct a timezone-aware UTC datetime
    from a POSIX timestamp. |'
  id: totrans-679
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcfromtimestamp`](api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | 从 POSIX 时间戳构造一个带时区的UTC日期时间。 |'
- en: '| [`Timestamp.utcnow`](api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow
    "pandas.Timestamp.utcnow")() | Return a new Timestamp representing UTC day and
    time. |'
  id: totrans-680
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcnow`](api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow
    "pandas.Timestamp.utcnow")() | 返回表示UTC日期和时间的新时间戳。 |'
- en: '| [`Timestamp.utcoffset`](api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | Return utc offset. |'
  id: totrans-681
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcoffset`](api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | 返回UTC偏移量。 |'
- en: '| [`Timestamp.utctimetuple`](api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | Return UTC time tuple, compatible with time.localtime().
    |'
  id: totrans-682
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utctimetuple`](api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | 返回UTC时间元组，与 time.localtime() 兼容。 |'
- en: '| [`Timestamp.weekday`](api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday
    "pandas.Timestamp.weekday")() | Return the day of the week represented by the
    date. |'
  id: totrans-683
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.weekday`](api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday
    "pandas.Timestamp.weekday")() | 返回日期代表的星期几。 |'
- en: A collection of timestamps may be stored in a [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"). For timezone-aware data, the `.dtype` of a [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") is a [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype"). For timezone-naive data, `np.dtype("datetime64[ns]")`
    is used.
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳的集合可以存储在[`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")中。对于时区感知数据，[`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")的`.dtype`是[`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")。对于非时区感知数据，使用`np.dtype("datetime64[ns]")`。
- en: If the data are timezone-aware, then every value in the array must have the
    same timezone.
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据是时区感知的，则数组中的每个值必须具有相同的时区。
- en: '| [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")(values[, dtype, freq, copy]) | Pandas ExtensionArray
    for tz-naive or tz-aware datetime data. |'
  id: totrans-686
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")(values[, dtype, freq, copy]) | 用于时区感知或非时区感知日期时间数据的
    Pandas ExtensionArray。 |'
- en: '| [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")([unit, tz]) | An ExtensionDtype for timezone-aware datetime
    data. |'
  id: totrans-687
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")([unit, tz]) | 用于时区感知日期时间数据的 ExtensionDtype。 |'
- en: Properties
  id: totrans-688
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Timestamp.asm8`](api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | Return numpy datetime64 format in nanoseconds. |'
  id: totrans-689
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.asm8`](api/pandas.Timestamp.asm8.html#pandas.Timestamp.asm8 "pandas.Timestamp.asm8")
    | 返回纳秒的 numpy datetime64 格式。 |'
- en: '| [`Timestamp.day`](api/pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
  id: totrans-690
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day`](api/pandas.Timestamp.day.html#pandas.Timestamp.day "pandas.Timestamp.day")
    |  |'
- en: '| [`Timestamp.dayofweek`](api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | Return day of the week. |'
  id: totrans-691
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dayofweek`](api/pandas.Timestamp.dayofweek.html#pandas.Timestamp.dayofweek
    "pandas.Timestamp.dayofweek") | 返回一周中的天数。 |'
- en: '| [`Timestamp.day_of_week`](api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | Return day of the week. |'
  id: totrans-692
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_of_week`](api/pandas.Timestamp.day_of_week.html#pandas.Timestamp.day_of_week
    "pandas.Timestamp.day_of_week") | 返回一周中的天数。 |'
- en: '| [`Timestamp.dayofyear`](api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | Return the day of the year. |'
  id: totrans-693
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dayofyear`](api/pandas.Timestamp.dayofyear.html#pandas.Timestamp.dayofyear
    "pandas.Timestamp.dayofyear") | 返回一年中的天数。 |'
- en: '| [`Timestamp.day_of_year`](api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | Return the day of the year. |'
  id: totrans-694
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_of_year`](api/pandas.Timestamp.day_of_year.html#pandas.Timestamp.day_of_year
    "pandas.Timestamp.day_of_year") | 返回一年中的天数。 |'
- en: '| [`Timestamp.days_in_month`](api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | Return the number of days in the month. |'
  id: totrans-695
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.days_in_month`](api/pandas.Timestamp.days_in_month.html#pandas.Timestamp.days_in_month
    "pandas.Timestamp.days_in_month") | 返回该月的天数。 |'
- en: '| [`Timestamp.daysinmonth`](api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | Return the number of days in the month. |'
  id: totrans-696
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.daysinmonth`](api/pandas.Timestamp.daysinmonth.html#pandas.Timestamp.daysinmonth
    "pandas.Timestamp.daysinmonth") | 返回该月的天数。 |'
- en: '| [`Timestamp.fold`](api/pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
  id: totrans-697
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fold`](api/pandas.Timestamp.fold.html#pandas.Timestamp.fold "pandas.Timestamp.fold")
    |  |'
- en: '| [`Timestamp.hour`](api/pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
  id: totrans-698
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.hour`](api/pandas.Timestamp.hour.html#pandas.Timestamp.hour "pandas.Timestamp.hour")
    |  |'
- en: '| [`Timestamp.is_leap_year`](api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | Return True if year is a leap year. |'
  id: totrans-699
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_leap_year`](api/pandas.Timestamp.is_leap_year.html#pandas.Timestamp.is_leap_year
    "pandas.Timestamp.is_leap_year") | 如果年份是闰年，则返回 True。 |'
- en: '| [`Timestamp.is_month_end`](api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | Check if the date is the last day of the month.
    |'
  id: totrans-700
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_month_end`](api/pandas.Timestamp.is_month_end.html#pandas.Timestamp.is_month_end
    "pandas.Timestamp.is_month_end") | 检查日期是否是该月的最后一天。 |'
- en: '| [`Timestamp.is_month_start`](api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | Check if the date is the first day of the
    month. |'
  id: totrans-701
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_month_start`](api/pandas.Timestamp.is_month_start.html#pandas.Timestamp.is_month_start
    "pandas.Timestamp.is_month_start") | 检查日期是否是该月的第一天。 |'
- en: '| [`Timestamp.is_quarter_end`](api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | Check if date is last day of the quarter.
    |'
  id: totrans-702
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_quarter_end`](api/pandas.Timestamp.is_quarter_end.html#pandas.Timestamp.is_quarter_end
    "pandas.Timestamp.is_quarter_end") | 检查日期是否为季度的最后一天。 |'
- en: '| [`Timestamp.is_quarter_start`](api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | Check if the date is the first day of the
    quarter. |'
  id: totrans-703
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_quarter_start`](api/pandas.Timestamp.is_quarter_start.html#pandas.Timestamp.is_quarter_start
    "pandas.Timestamp.is_quarter_start") | 检查日期是否为季度的第一天。 |'
- en: '| [`Timestamp.is_year_end`](api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | Return True if date is last day of the year.
    |'
  id: totrans-704
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_year_end`](api/pandas.Timestamp.is_year_end.html#pandas.Timestamp.is_year_end
    "pandas.Timestamp.is_year_end") | 如果日期是年份的最后一天，则返回 True。 |'
- en: '| [`Timestamp.is_year_start`](api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | Return True if date is first day of the year.
    |'
  id: totrans-705
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.is_year_start`](api/pandas.Timestamp.is_year_start.html#pandas.Timestamp.is_year_start
    "pandas.Timestamp.is_year_start") | 如果日期是年份的第一天，则返回 True。 |'
- en: '| [`Timestamp.max`](api/pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
  id: totrans-706
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.max`](api/pandas.Timestamp.max.html#pandas.Timestamp.max "pandas.Timestamp.max")
    |  |'
- en: '| [`Timestamp.microsecond`](api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
  id: totrans-707
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.microsecond`](api/pandas.Timestamp.microsecond.html#pandas.Timestamp.microsecond
    "pandas.Timestamp.microsecond") |  |'
- en: '| [`Timestamp.min`](api/pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
  id: totrans-708
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.min`](api/pandas.Timestamp.min.html#pandas.Timestamp.min "pandas.Timestamp.min")
    |  |'
- en: '| [`Timestamp.minute`](api/pandas.Timestamp.minute.html#pandas.Timestamp.minute
    "pandas.Timestamp.minute") |  |'
  id: totrans-709
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.minute`](api/pandas.Timestamp.minute.html#pandas.Timestamp.minute
    "pandas.Timestamp.minute") |  |'
- en: '| [`Timestamp.month`](api/pandas.Timestamp.month.html#pandas.Timestamp.month
    "pandas.Timestamp.month") |  |'
  id: totrans-710
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.month`](api/pandas.Timestamp.month.html#pandas.Timestamp.month
    "pandas.Timestamp.month") |  |'
- en: '| [`Timestamp.nanosecond`](api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
  id: totrans-711
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.nanosecond`](api/pandas.Timestamp.nanosecond.html#pandas.Timestamp.nanosecond
    "pandas.Timestamp.nanosecond") |  |'
- en: '| [`Timestamp.quarter`](api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter
    "pandas.Timestamp.quarter") | Return the quarter of the year. |'
  id: totrans-712
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.quarter`](api/pandas.Timestamp.quarter.html#pandas.Timestamp.quarter
    "pandas.Timestamp.quarter") | 返回年份的季度。 |'
- en: '| [`Timestamp.resolution`](api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
  id: totrans-713
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.resolution`](api/pandas.Timestamp.resolution.html#pandas.Timestamp.resolution
    "pandas.Timestamp.resolution") |  |'
- en: '| [`Timestamp.second`](api/pandas.Timestamp.second.html#pandas.Timestamp.second
    "pandas.Timestamp.second") |  |'
  id: totrans-714
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.second`](api/pandas.Timestamp.second.html#pandas.Timestamp.second
    "pandas.Timestamp.second") |  |'
- en: '| [`Timestamp.tz`](api/pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | Alias for tzinfo. |'
  id: totrans-715
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz`](api/pandas.Timestamp.tz.html#pandas.Timestamp.tz "pandas.Timestamp.tz")
    | tzinfo 的别名。 |'
- en: '| [`Timestamp.tzinfo`](api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo
    "pandas.Timestamp.tzinfo") |  |'
  id: totrans-716
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tzinfo`](api/pandas.Timestamp.tzinfo.html#pandas.Timestamp.tzinfo
    "pandas.Timestamp.tzinfo") |  |'
- en: '| [`Timestamp.unit`](api/pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | The abbreviation associated with self._creso. |'
  id: totrans-717
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.unit`](api/pandas.Timestamp.unit.html#pandas.Timestamp.unit "pandas.Timestamp.unit")
    | 与 self._creso 关联的缩写。 |'
- en: '| [`Timestamp.value`](api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") |  |'
  id: totrans-718
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.value`](api/pandas.Timestamp.value.html#pandas.Timestamp.value
    "pandas.Timestamp.value") |  |'
- en: '| [`Timestamp.week`](api/pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | Return the week number of the year. |'
  id: totrans-719
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.week`](api/pandas.Timestamp.week.html#pandas.Timestamp.week "pandas.Timestamp.week")
    | 返回年份的周数。 |'
- en: '| [`Timestamp.weekofyear`](api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | Return the week number of the year. |'
  id: totrans-720
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.weekofyear`](api/pandas.Timestamp.weekofyear.html#pandas.Timestamp.weekofyear
    "pandas.Timestamp.weekofyear") | 返回年份的周数。 |'
- en: '| [`Timestamp.year`](api/pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
  id: totrans-721
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.year`](api/pandas.Timestamp.year.html#pandas.Timestamp.year "pandas.Timestamp.year")
    |  |'
- en: Methods
  id: totrans-722
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Timestamp.as_unit`](api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit
    "pandas.Timestamp.as_unit")(unit[, round_ok]) | Convert the underlying int64 representaton
    to the given unit. |'
  id: totrans-723
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.as_unit`](api/pandas.Timestamp.as_unit.html#pandas.Timestamp.as_unit
    "pandas.Timestamp.as_unit")(unit[, round_ok]) | 将底层 int64 表示转换为给定的单位。 |'
- en: '| [`Timestamp.astimezone`](api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  id: totrans-724
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.astimezone`](api/pandas.Timestamp.astimezone.html#pandas.Timestamp.astimezone
    "pandas.Timestamp.astimezone")(tz) | 将时区感知的时间戳转换为另一个时区的时间。 |'
- en: '| [`Timestamp.ceil`](api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | Return a new Timestamp ceiled to this resolution. |'
  id: totrans-725
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.ceil`](api/pandas.Timestamp.ceil.html#pandas.Timestamp.ceil "pandas.Timestamp.ceil")(freq[, ambiguous, nonexistent])
    | 返回一个新的时间戳，其精度高于此分辨率。 |'
- en: '| [`Timestamp.combine`](api/pandas.Timestamp.combine.html#pandas.Timestamp.combine
    "pandas.Timestamp.combine")(date, time) | Combine date, time into datetime with
    same date and time fields. |'
  id: totrans-726
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.combine`](api/pandas.Timestamp.combine.html#pandas.Timestamp.combine
    "pandas.Timestamp.combine")(date, time) | 将日期和时间合并为具有相同日期和时间字段的日期时间。 |'
- en: '| [`Timestamp.ctime`](api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime
    "pandas.Timestamp.ctime")() | Return ctime() style string. |'
  id: totrans-727
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.ctime`](api/pandas.Timestamp.ctime.html#pandas.Timestamp.ctime
    "pandas.Timestamp.ctime")() | 返回 ctime() 格式的字符串。 |'
- en: '| [`Timestamp.date`](api/pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | Return date object with same year, month and day. |'
  id: totrans-728
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.date`](api/pandas.Timestamp.date.html#pandas.Timestamp.date "pandas.Timestamp.date")()
    | 返回具有相同年份、月份和日期的日期对象。 |'
- en: '| [`Timestamp.day_name`](api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name")([locale]) | Return the day name of the Timestamp
    with specified locale. |'
  id: totrans-729
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.day_name`](api/pandas.Timestamp.day_name.html#pandas.Timestamp.day_name
    "pandas.Timestamp.day_name")([locale]) | 返回具有指定区域设置的时间戳的星期几名称。 |'
- en: '| [`Timestamp.dst`](api/pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | Return the daylight saving time (DST) adjustment. |'
  id: totrans-730
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.dst`](api/pandas.Timestamp.dst.html#pandas.Timestamp.dst "pandas.Timestamp.dst")()
    | 返回夏令时（DST）调整。 |'
- en: '| [`Timestamp.floor`](api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent]) | Return a new Timestamp
    floored to this resolution. |'
  id: totrans-731
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.floor`](api/pandas.Timestamp.floor.html#pandas.Timestamp.floor
    "pandas.Timestamp.floor")(freq[, ambiguous, nonexistent]) | 返回一个新的时间戳，其精度低于此分辨率。
    |'
- en: '| [`Timestamp.fromordinal`](api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | Construct a timestamp from a
    a proleptic Gregorian ordinal. |'
  id: totrans-732
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fromordinal`](api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal")(ordinal[, tz]) | 从修正后的公历序数构造时间戳。 |'
- en: '| [`Timestamp.fromtimestamp`](api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | Transform timestamp[, tz] to tz''s local
    time from POSIX timestamp. |'
  id: totrans-733
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.fromtimestamp`](api/pandas.Timestamp.fromtimestamp.html#pandas.Timestamp.fromtimestamp
    "pandas.Timestamp.fromtimestamp")(ts) | 将 POSIX 时间戳转换为 tz 的本地时间。 |'
- en: '| [`Timestamp.isocalendar`](api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | Return a named tuple containing ISO year,
    week number, and weekday. |'
  id: totrans-734
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isocalendar`](api/pandas.Timestamp.isocalendar.html#pandas.Timestamp.isocalendar
    "pandas.Timestamp.isocalendar")() | 返回一个命名元组，其中包含 ISO 年、周编号和工作日。 |'
- en: '| [`Timestamp.isoformat`](api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat")([sep, timespec]) | Return the time formatted according
    to ISO 8601. |'
  id: totrans-735
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isoformat`](api/pandas.Timestamp.isoformat.html#pandas.Timestamp.isoformat
    "pandas.Timestamp.isoformat")([sep, timespec]) | 返回按照 ISO 8601 格式化的时间。 |'
- en: '| [`Timestamp.isoweekday`](api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | Return the day of the week represented by the
    date. |'
  id: totrans-736
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.isoweekday`](api/pandas.Timestamp.isoweekday.html#pandas.Timestamp.isoweekday
    "pandas.Timestamp.isoweekday")() | 返回日期所代表的星期几。 |'
- en: '| [`Timestamp.month_name`](api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | Return the month name of the Timestamp
    with specified locale. |'
  id: totrans-737
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.month_name`](api/pandas.Timestamp.month_name.html#pandas.Timestamp.month_name
    "pandas.Timestamp.month_name")([locale]) | 返回具有指定区域设置的时间戳的月份名称。 |'
- en: '| [`Timestamp.normalize`](api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | Normalize Timestamp to midnight, preserving
    tz information. |'
  id: totrans-738
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.normalize`](api/pandas.Timestamp.normalize.html#pandas.Timestamp.normalize
    "pandas.Timestamp.normalize")() | 将时间戳归一化为午夜，保留时区信息。 |'
- en: '| [`Timestamp.now`](api/pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | Return new Timestamp object representing current time local to tz. |'
  id: totrans-739
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.now`](api/pandas.Timestamp.now.html#pandas.Timestamp.now "pandas.Timestamp.now")([tz])
    | 返回表示当前本地时间的新 Timestamp 对象。 |'
- en: '| [`Timestamp.replace`](api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace")([year, month, day, hour, ...]) | Implements datetime.replace,
    handles nanoseconds. |'
  id: totrans-740
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.replace`](api/pandas.Timestamp.replace.html#pandas.Timestamp.replace
    "pandas.Timestamp.replace")([year, month, day, hour, ...]) | 实现 datetime.replace，处理纳秒。
    |'
- en: '| [`Timestamp.round`](api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round")(freq[, ambiguous, nonexistent]) | Round the Timestamp
    to the specified resolution. |'
  id: totrans-741
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.round`](api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round")(freq[, ambiguous, nonexistent]) | 将时间戳舍入到指定的分辨率。 |'
- en: '| [`Timestamp.strftime`](api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime
    "pandas.Timestamp.strftime")(format) | Return a formatted string of the Timestamp.
    |'
  id: totrans-742
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.strftime`](api/pandas.Timestamp.strftime.html#pandas.Timestamp.strftime
    "pandas.Timestamp.strftime")(format) | 返回时间戳的格式化字符串。 |'
- en: '| [`Timestamp.strptime`](api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime")(string, format) | Function is not implemented. |'
  id: totrans-743
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.strptime`](api/pandas.Timestamp.strptime.html#pandas.Timestamp.strptime
    "pandas.Timestamp.strptime")(string, format) | 该函数尚未实现。 |'
- en: '| [`Timestamp.time`](api/pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | Return time object with same time but with tzinfo=None. |'
  id: totrans-744
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.time`](api/pandas.Timestamp.time.html#pandas.Timestamp.time "pandas.Timestamp.time")()
    | 返回具有相同时间但 tzinfo=None 的时间对象。 |'
- en: '| [`Timestamp.timestamp`](api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | Return POSIX timestamp as float. |'
  id: totrans-745
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timestamp`](api/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp
    "pandas.Timestamp.timestamp")() | 返回 POSIX 时间戳作为浮点数。 |'
- en: '| [`Timestamp.timetuple`](api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | Return time tuple, compatible with time.localtime().
    |'
  id: totrans-746
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timetuple`](api/pandas.Timestamp.timetuple.html#pandas.Timestamp.timetuple
    "pandas.Timestamp.timetuple")() | 返回与 time.localtime() 兼容的时间元组。 |'
- en: '| [`Timestamp.timetz`](api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz
    "pandas.Timestamp.timetz")() | Return time object with same time and tzinfo. |'
  id: totrans-747
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.timetz`](api/pandas.Timestamp.timetz.html#pandas.Timestamp.timetz
    "pandas.Timestamp.timetz")() | 返回具有相同时间和 tzinfo 的时间对象。 |'
- en: '| [`Timestamp.to_datetime64`](api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | Return a numpy.datetime64 object with same
    precision. |'
  id: totrans-748
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_datetime64`](api/pandas.Timestamp.to_datetime64.html#pandas.Timestamp.to_datetime64
    "pandas.Timestamp.to_datetime64")() | 返回具有相同精度的 numpy.datetime64 对象。 |'
- en: '| [`Timestamp.to_numpy`](api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy
    "pandas.Timestamp.to_numpy")([dtype, copy]) | Convert the Timestamp to a NumPy
    datetime64. |'
  id: totrans-749
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_numpy`](api/pandas.Timestamp.to_numpy.html#pandas.Timestamp.to_numpy
    "pandas.Timestamp.to_numpy") | 将时间戳转换为 NumPy datetime64。 |'
- en: '| [`Timestamp.to_julian_date`](api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | Convert TimeStamp to a Julian Date. |'
  id: totrans-750
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_julian_date`](api/pandas.Timestamp.to_julian_date.html#pandas.Timestamp.to_julian_date
    "pandas.Timestamp.to_julian_date")() | 将 TimeStamp 转换为儒略日。 |'
- en: '| [`Timestamp.to_period`](api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | Return an period of which this timestamp
    is an observation. |'
  id: totrans-751
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_period`](api/pandas.Timestamp.to_period.html#pandas.Timestamp.to_period
    "pandas.Timestamp.to_period")([freq]) | 返回一个周期，其中该时间戳是一个观测点。 |'
- en: '| [`Timestamp.to_pydatetime`](api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | Convert a Timestamp object to a native
    Python datetime object. |'
  id: totrans-752
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.to_pydatetime`](api/pandas.Timestamp.to_pydatetime.html#pandas.Timestamp.to_pydatetime
    "pandas.Timestamp.to_pydatetime")([warn]) | 将时间戳对象转换为本机 Python datetime 对象。 |'
- en: '| [`Timestamp.today`](api/pandas.Timestamp.today.html#pandas.Timestamp.today
    "pandas.Timestamp.today")([tz]) | Return the current time in the local timezone.
    |'
  id: totrans-753
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.today`](api/pandas.Timestamp.today.html#pandas.Timestamp.today
    "pandas.Timestamp.today")([tz]) | 返回本地时区的当前时间。 |'
- en: '| [`Timestamp.toordinal`](api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | Return proleptic Gregorian ordinal. |'
  id: totrans-754
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.toordinal`](api/pandas.Timestamp.toordinal.html#pandas.Timestamp.toordinal
    "pandas.Timestamp.toordinal")() | 返回普通格里高利历的序数。 |'
- en: '| [`Timestamp.tz_convert`](api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | Convert timezone-aware Timestamp to another
    time zone. |'
  id: totrans-755
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz_convert`](api/pandas.Timestamp.tz_convert.html#pandas.Timestamp.tz_convert
    "pandas.Timestamp.tz_convert")(tz) | 将带时区信息的时间戳转换为另一个时区。 |'
- en: '| [`Timestamp.tz_localize`](api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, ...]) | Localize the Timestamp
    to a timezone. |'
  id: totrans-756
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tz_localize`](api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize")(tz[, ambiguous, ...]) | 将时间戳本地化到一个时区。 |'
- en: '| [`Timestamp.tzname`](api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname
    "pandas.Timestamp.tzname")() | Return time zone name. |'
  id: totrans-757
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.tzname`](api/pandas.Timestamp.tzname.html#pandas.Timestamp.tzname
    "pandas.Timestamp.tzname")() | 返回时区名称。 |'
- en: '| [`Timestamp.utcfromtimestamp`](api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | Construct a timezone-aware UTC datetime
    from a POSIX timestamp. |'
  id: totrans-758
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcfromtimestamp`](api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp")(ts) | 从 POSIX 时间戳构造一个带时区的 UTC 日期时间。 |'
- en: '| [`Timestamp.utcnow`](api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow
    "pandas.Timestamp.utcnow")() | Return a new Timestamp representing UTC day and
    time. |'
  id: totrans-759
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcnow`](api/pandas.Timestamp.utcnow.html#pandas.Timestamp.utcnow
    "pandas.Timestamp.utcnow")() | 返回表示 UTC 日期和时间的新时间戳。 |'
- en: '| [`Timestamp.utcoffset`](api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | Return utc offset. |'
  id: totrans-760
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utcoffset`](api/pandas.Timestamp.utcoffset.html#pandas.Timestamp.utcoffset
    "pandas.Timestamp.utcoffset")() | 返回 UTC 偏移量。 |'
- en: '| [`Timestamp.utctimetuple`](api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | Return UTC time tuple, compatible with time.localtime().
    |'
  id: totrans-761
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.utctimetuple`](api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple")() | 返回与 time.localtime() 兼容的 UTC 时间元组。 |'
- en: '| [`Timestamp.weekday`](api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday
    "pandas.Timestamp.weekday")() | Return the day of the week represented by the
    date. |'
  id: totrans-762
  prefs: []
  type: TYPE_TB
  zh: '| [`Timestamp.weekday`](api/pandas.Timestamp.weekday.html#pandas.Timestamp.weekday
    "pandas.Timestamp.weekday")() | 返回日期所代表的星期几。 |'
- en: A collection of timestamps may be stored in a [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"). For timezone-aware data, the `.dtype` of a [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") is a [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype"). For timezone-naive data, `np.dtype("datetime64[ns]")`
    is used.
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳的集合可以存储在 [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") 中。对于带时区的数据，[`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray") 的 `.dtype` 是 [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")。对于不带时区的数据，使用 `np.dtype("datetime64[ns]")`。
- en: If the data are timezone-aware, then every value in the array must have the
    same timezone.
  id: totrans-764
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据带有时区信息，则数组中的每个值必须具有相同的时区。
- en: '| [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")(values[, dtype, freq, copy]) | Pandas ExtensionArray
    for tz-naive or tz-aware datetime data. |'
  id: totrans-765
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.DatetimeArray`](api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray")(values[, dtype, freq, copy]) | 用于不带时区或带时区的日期时间数据的
    Pandas ExtensionArray。 |'
- en: '| [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")([unit, tz]) | An ExtensionDtype for timezone-aware datetime
    data. |'
  id: totrans-766
  prefs: []
  type: TYPE_TB
  zh: '| [`DatetimeTZDtype`](api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")([unit, tz]) | 用于带时区的日期时间数据的 ExtensionDtype。 |'
- en: '### Timedeltas'
  id: totrans-767
  prefs: []
  type: TYPE_NORMAL
  zh: '### 时间差'
- en: NumPy can natively represent timedeltas. pandas provides [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") for symmetry with [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"). [`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT") is the
    missing value for timedelta data.
  id: totrans-768
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 可以原生表示时间差。pandas 提供了 [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") 以与 [`Timestamp`](api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") 对称。[`NaT`](api/pandas.NaT.html#pandas.NaT "pandas.NaT") 是时间差数据的缺失值。
- en: '| [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")([value, unit])
    | Represents a duration, the difference between two dates or times. |'
  id: totrans-769
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")([value, unit])
    | 表示两个日期或时间之间的持续时间。 |'
- en: Properties
  id: totrans-770
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Timedelta.asm8`](api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | Return a numpy timedelta64 array scalar view. |'
  id: totrans-771
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.asm8`](api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | 返回一个 numpy timedelta64 数组标量视图。 |'
- en: '| [`Timedelta.components`](api/pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | Return a components namedtuple-like. |'
  id: totrans-772
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.components`](api/pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | 返回一个类似命名元组的组件。 |'
- en: '| [`Timedelta.days`](api/pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | Returns the days of the timedelta. |'
  id: totrans-773
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.days`](api/pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | 返回 timedelta 的天数。 |'
- en: '| [`Timedelta.max`](api/pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
  id: totrans-774
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.max`](api/pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
- en: '| [`Timedelta.microseconds`](api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
  id: totrans-775
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.microseconds`](api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
- en: '| [`Timedelta.min`](api/pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
  id: totrans-776
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.min`](api/pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
- en: '| [`Timedelta.nanoseconds`](api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | Return the number of nanoseconds (n), where
    0 <= n < 1 microsecond. |'
  id: totrans-777
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.nanoseconds`](api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | 返回纳秒数 (n)，其中 0 <= n < 1 微秒。 |'
- en: '| [`Timedelta.resolution`](api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
  id: totrans-778
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.resolution`](api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
- en: '| [`Timedelta.seconds`](api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds
    "pandas.Timedelta.seconds") | Return the total hours, minutes, and seconds of
    the timedelta as seconds. |'
  id: totrans-779
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.seconds`](api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds
    "pandas.Timedelta.seconds") | 返回 timedelta 的总小时数、分钟数和秒数（以秒为单位）。 |'
- en: '| [`Timedelta.unit`](api/pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
  id: totrans-780
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.unit`](api/pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
- en: '| [`Timedelta.value`](api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") |  |'
  id: totrans-781
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.value`](api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") |  |'
- en: '| [`Timedelta.view`](api/pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | Array view compatibility. |'
  id: totrans-782
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.view`](api/pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | 数组视图兼容性。 |'
- en: Methods
  id: totrans-783
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Methods
- en: '| [`Timedelta.as_unit`](api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit
    "pandas.Timedelta.as_unit")(unit[, round_ok]) | Convert the underlying int64 representation
    to the given unit. |'
  id: totrans-784
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.as_unit`](api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit
    "pandas.Timedelta.as_unit")(unit[, round_ok]) | 将底层 int64 表示转换为给定的单位。 |'
- en: '| [`Timedelta.ceil`](api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | Return a new Timedelta ceiled to this resolution. |'
  id: totrans-785
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.ceil`](api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | 返回一个新的 Timedelta，使其上限为此分辨率。 |'
- en: '| [`Timedelta.floor`](api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor")(freq) | Return a new Timedelta floored to this resolution.
    |'
  id: totrans-786
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.floor`](api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor")(freq) | 返回一个新的 Timedelta，使其分辨率下限为此。 |'
- en: '| [`Timedelta.isoformat`](api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | Format the Timedelta as ISO 8601 Duration. |'
  id: totrans-787
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.isoformat`](api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | 将 Timedelta 格式化为 ISO 8601 Duration。 |'
- en: '| [`Timedelta.round`](api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round")(freq) | Round the Timedelta to the specified resolution.
    |'
  id: totrans-788
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.round`](api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round")(freq) | 将 Timedelta 四舍五入到指定的分辨率。 |'
- en: '| [`Timedelta.to_pytimedelta`](api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | Convert a pandas Timedelta object into
    a python `datetime.timedelta` object. |'
  id: totrans-789
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_pytimedelta`](api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | 将 pandas Timedelta 对象转换为 python `datetime.timedelta`
    对象。 |'
- en: '| [`Timedelta.to_timedelta64`](api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | Return a numpy.timedelta64 object with
    ''ns'' precision. |'
  id: totrans-790
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_timedelta64`](api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | 返回一个带有''ns''精度的 numpy.timedelta64 对象。 |'
- en: '| [`Timedelta.to_numpy`](api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy
    "pandas.Timedelta.to_numpy")([dtype, copy]) | Convert the Timedelta to a NumPy
    timedelta64. |'
  id: totrans-791
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_numpy`](api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy
    "pandas.Timedelta.to_numpy")([dtype, copy]) | 将 Timedelta 转换为 NumPy timedelta64。
    |'
- en: '| [`Timedelta.total_seconds`](api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | Total seconds in the duration. |'
  id: totrans-792
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.total_seconds`](api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | 持续时间的总秒数。 |'
- en: A collection of [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    may be stored in a `TimedeltaArray`.
  id: totrans-793
  prefs: []
  type: TYPE_NORMAL
  zh: 一组 [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    可以存储在 `TimedeltaArray` 中。
- en: '| [`arrays.TimedeltaArray`](api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")(values[, dtype, freq, ...]) | Pandas ExtensionArray
    for timedelta data. |'
  id: totrans-794
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.TimedeltaArray`](api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")(values[, dtype, freq, ...]) | 用于时间数据的 Pandas ExtensionArray。
    |'
- en: Properties
  id: totrans-795
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Timedelta.asm8`](api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | Return a numpy timedelta64 array scalar view. |'
  id: totrans-796
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.asm8`](api/pandas.Timedelta.asm8.html#pandas.Timedelta.asm8 "pandas.Timedelta.asm8")
    | 返回一个 numpy timedelta64 数组标量视图。 |'
- en: '| [`Timedelta.components`](api/pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | Return a components namedtuple-like. |'
  id: totrans-797
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.components`](api/pandas.Timedelta.components.html#pandas.Timedelta.components
    "pandas.Timedelta.components") | 返回类似于 components 的命名元组。 |'
- en: '| [`Timedelta.days`](api/pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | Returns the days of the timedelta. |'
  id: totrans-798
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.days`](api/pandas.Timedelta.days.html#pandas.Timedelta.days "pandas.Timedelta.days")
    | 返回 timedelta 的天数。 |'
- en: '| [`Timedelta.max`](api/pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
  id: totrans-799
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.max`](api/pandas.Timedelta.max.html#pandas.Timedelta.max "pandas.Timedelta.max")
    |  |'
- en: '| [`Timedelta.microseconds`](api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
  id: totrans-800
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.microseconds`](api/pandas.Timedelta.microseconds.html#pandas.Timedelta.microseconds
    "pandas.Timedelta.microseconds") |  |'
- en: '| [`Timedelta.min`](api/pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
  id: totrans-801
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.min`](api/pandas.Timedelta.min.html#pandas.Timedelta.min "pandas.Timedelta.min")
    |  |'
- en: '| [`Timedelta.nanoseconds`](api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | Return the number of nanoseconds (n), where
    0 <= n < 1 microsecond. |'
  id: totrans-802
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.nanoseconds`](api/pandas.Timedelta.nanoseconds.html#pandas.Timedelta.nanoseconds
    "pandas.Timedelta.nanoseconds") | 返回纳秒数（n），其中 0 <= n < 1 微秒。 |'
- en: '| [`Timedelta.resolution`](api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
  id: totrans-803
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.resolution`](api/pandas.Timedelta.resolution.html#pandas.Timedelta.resolution
    "pandas.Timedelta.resolution") |  |'
- en: '| [`Timedelta.seconds`](api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds
    "pandas.Timedelta.seconds") | Return the total hours, minutes, and seconds of
    the timedelta as seconds. |'
  id: totrans-804
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.seconds`](api/pandas.Timedelta.seconds.html#pandas.Timedelta.seconds
    "pandas.Timedelta.seconds") | 返回 timedelta 的总小时数、分钟数和秒数（以秒为单位）。 |'
- en: '| [`Timedelta.unit`](api/pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
  id: totrans-805
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.unit`](api/pandas.Timedelta.unit.html#pandas.Timedelta.unit "pandas.Timedelta.unit")
    |  |'
- en: '| [`Timedelta.value`](api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") |  |'
  id: totrans-806
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.value`](api/pandas.Timedelta.value.html#pandas.Timedelta.value
    "pandas.Timedelta.value") |  |'
- en: '| [`Timedelta.view`](api/pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | Array view compatibility. |'
  id: totrans-807
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.view`](api/pandas.Timedelta.view.html#pandas.Timedelta.view "pandas.Timedelta.view")(dtype)
    | 数组视图兼容性。 |'
- en: Methods
  id: totrans-808
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Timedelta.as_unit`](api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit
    "pandas.Timedelta.as_unit")(unit[, round_ok]) | Convert the underlying int64 representation
    to the given unit. |'
  id: totrans-809
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.as_unit`](api/pandas.Timedelta.as_unit.html#pandas.Timedelta.as_unit
    "pandas.Timedelta.as_unit")(unit[, round_ok]) | 将底层 int64 表示转换为给定单位。 |'
- en: '| [`Timedelta.ceil`](api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | Return a new Timedelta ceiled to this resolution. |'
  id: totrans-810
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.ceil`](api/pandas.Timedelta.ceil.html#pandas.Timedelta.ceil "pandas.Timedelta.ceil")(freq)
    | 返回一个新的 Timedelta，其分辨率为此分辨率。 |'
- en: '| [`Timedelta.floor`](api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor")(freq) | Return a new Timedelta floored to this resolution.
    |'
  id: totrans-811
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.floor`](api/pandas.Timedelta.floor.html#pandas.Timedelta.floor
    "pandas.Timedelta.floor")(freq) | 返回一个新的 Timedelta，其分辨率为此分辨率。 |'
- en: '| [`Timedelta.isoformat`](api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | Format the Timedelta as ISO 8601 Duration. |'
  id: totrans-812
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.isoformat`](api/pandas.Timedelta.isoformat.html#pandas.Timedelta.isoformat
    "pandas.Timedelta.isoformat")() | 将 Timedelta 格式化为 ISO 8601 时长。 |'
- en: '| [`Timedelta.round`](api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round")(freq) | Round the Timedelta to the specified resolution.
    |'
  id: totrans-813
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.round`](api/pandas.Timedelta.round.html#pandas.Timedelta.round
    "pandas.Timedelta.round")(freq) | 将Timedelta舍入到指定的分辨率。 |'
- en: '| [`Timedelta.to_pytimedelta`](api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | Convert a pandas Timedelta object into
    a python `datetime.timedelta` object. |'
  id: totrans-814
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_pytimedelta`](api/pandas.Timedelta.to_pytimedelta.html#pandas.Timedelta.to_pytimedelta
    "pandas.Timedelta.to_pytimedelta")() | 将pandas Timedelta对象转换为python `datetime.timedelta`对象。
    |'
- en: '| [`Timedelta.to_timedelta64`](api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | Return a numpy.timedelta64 object with
    ''ns'' precision. |'
  id: totrans-815
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_timedelta64`](api/pandas.Timedelta.to_timedelta64.html#pandas.Timedelta.to_timedelta64
    "pandas.Timedelta.to_timedelta64")() | 返回具有''ns''精度的numpy.timedelta64对象。 |'
- en: '| [`Timedelta.to_numpy`](api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy
    "pandas.Timedelta.to_numpy")([dtype, copy]) | Convert the Timedelta to a NumPy
    timedelta64. |'
  id: totrans-816
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.to_numpy`](api/pandas.Timedelta.to_numpy.html#pandas.Timedelta.to_numpy
    "pandas.Timedelta.to_numpy")([dtype, copy]) | 将Timedelta转换为NumPy timedelta64。
    |'
- en: '| [`Timedelta.total_seconds`](api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | Total seconds in the duration. |'
  id: totrans-817
  prefs: []
  type: TYPE_TB
  zh: '| [`Timedelta.total_seconds`](api/pandas.Timedelta.total_seconds.html#pandas.Timedelta.total_seconds
    "pandas.Timedelta.total_seconds")() | 持续时间的总秒数。 |'
- en: A collection of [`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")
    may be stored in a `TimedeltaArray`.
  id: totrans-818
  prefs: []
  type: TYPE_NORMAL
  zh: 一组[`Timedelta`](api/pandas.Timedelta.html#pandas.Timedelta "pandas.Timedelta")可以存储在`TimedeltaArray`中。
- en: '| [`arrays.TimedeltaArray`](api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")(values[, dtype, freq, ...]) | Pandas ExtensionArray
    for timedelta data. |'
  id: totrans-819
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.TimedeltaArray`](api/pandas.arrays.TimedeltaArray.html#pandas.arrays.TimedeltaArray
    "pandas.arrays.TimedeltaArray")(values[, dtype, freq, ...]) | 用于timedelta数据的Pandas
    ExtensionArray。 |'
- en: '### Periods'
  id: totrans-820
  prefs: []
  type: TYPE_NORMAL
  zh: '### 时期'
- en: pandas represents spans of times as [`Period`](api/pandas.Period.html#pandas.Period
    "pandas.Period") objects.
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: pandas将时间段表示为[`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")对象。
- en: Period
  id: totrans-822
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Period
- en: '| [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")([value, freq, ordinal, year, month, ...])
    | Represents a period of time. |'
  id: totrans-823
  prefs: []
  type: TYPE_TB
  zh: '| [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")([value, freq, ordinal, year, month, ...])
    | 表示一段时间。 |'
- en: Properties
  id: totrans-824
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Properties
- en: '| [`Period.day`](api/pandas.Period.day.html#pandas.Period.day "pandas.Period.day")
    | Get day of the month that a Period falls on. |'
  id: totrans-825
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day`](api/pandas.Period.day.html#pandas.Period.day "pandas.Period.day")
    | 获取周期落在的月份的日期。 |'
- en: '| [`Period.dayofweek`](api/pandas.Period.dayofweek.html#pandas.Period.dayofweek
    "pandas.Period.dayofweek") | Day of the week the period lies in, with Monday=0
    and Sunday=6. |'
  id: totrans-826
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.dayofweek`](api/pandas.Period.dayofweek.html#pandas.Period.dayofweek
    "pandas.Period.dayofweek") | 该周期所在的星期几，星期一为0，星期日为6。 |'
- en: '| [`Period.day_of_week`](api/pandas.Period.day_of_week.html#pandas.Period.day_of_week
    "pandas.Period.day_of_week") | Day of the week the period lies in, with Monday=0
    and Sunday=6. |'
  id: totrans-827
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day_of_week`](api/pandas.Period.day_of_week.html#pandas.Period.day_of_week
    "pandas.Period.day_of_week") | 该周期所在的星期几，星期一为0，星期日为6。 |'
- en: '| [`Period.dayofyear`](api/pandas.Period.dayofyear.html#pandas.Period.dayofyear
    "pandas.Period.dayofyear") | Return the day of the year. |'
  id: totrans-828
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.dayofyear`](api/pandas.Period.dayofyear.html#pandas.Period.dayofyear
    "pandas.Period.dayofyear") | 返回一年中的第几天。 |'
- en: '| [`Period.day_of_year`](api/pandas.Period.day_of_year.html#pandas.Period.day_of_year
    "pandas.Period.day_of_year") | Return the day of the year. |'
  id: totrans-829
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day_of_year`](api/pandas.Period.day_of_year.html#pandas.Period.day_of_year
    "pandas.Period.day_of_year") | 返回一年中的第几天。 |'
- en: '| [`Period.days_in_month`](api/pandas.Period.days_in_month.html#pandas.Period.days_in_month
    "pandas.Period.days_in_month") | Get the total number of days in the month that
    this period falls on. |'
  id: totrans-830
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.days_in_month`](api/pandas.Period.days_in_month.html#pandas.Period.days_in_month
    "pandas.Period.days_in_month") | 获取该周期所在月份的总天数。 |'
- en: '| [`Period.daysinmonth`](api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth
    "pandas.Period.daysinmonth") | Get the total number of days of the month that
    this period falls on. |'
  id: totrans-831
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.daysinmonth`](api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth
    "pandas.Period.daysinmonth") | 获取该周期所在月份的总天数。 |'
- en: '| [`Period.end_time`](api/pandas.Period.end_time.html#pandas.Period.end_time
    "pandas.Period.end_time") | Get the Timestamp for the end of the period. |'
  id: totrans-832
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.end_time`](api/pandas.Period.end_time.html#pandas.Period.end_time
    "pandas.Period.end_time") | 获取周期结束的时间戳。 |'
- en: '| [`Period.freq`](api/pandas.Period.freq.html#pandas.Period.freq "pandas.Period.freq")
    |  |'
  id: totrans-833
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.freq`](api/pandas.Period.freq.html#pandas.Period.freq "pandas.Period.freq")
    |  |'
- en: '| [`Period.freqstr`](api/pandas.Period.freqstr.html#pandas.Period.freqstr "pandas.Period.freqstr")
    | Return a string representation of the frequency. |'
  id: totrans-834
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.freqstr`](api/pandas.Period.freqstr.html#pandas.Period.freqstr "pandas.Period.freqstr")
    | 返回频率的字符串表示。 |'
- en: '| [`Period.hour`](api/pandas.Period.hour.html#pandas.Period.hour "pandas.Period.hour")
    | Get the hour of the day component of the Period. |'
  id: totrans-835
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.hour`](api/pandas.Period.hour.html#pandas.Period.hour "pandas.Period.hour")
    | 获取周期的一天中的小时组件。 |'
- en: '| [`Period.is_leap_year`](api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year
    "pandas.Period.is_leap_year") | Return True if the period''s year is in a leap
    year. |'
  id: totrans-836
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.is_leap_year`](api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year
    "pandas.Period.is_leap_year") | 如果周期的年份是闰年，则返回True。 |'
- en: '| [`Period.minute`](api/pandas.Period.minute.html#pandas.Period.minute "pandas.Period.minute")
    | Get minute of the hour component of the Period. |'
  id: totrans-837
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.minute`](api/pandas.Period.minute.html#pandas.Period.minute "pandas.Period.minute")
    | 获取周期的小时中的分钟组件。 |'
- en: '| [`Period.month`](api/pandas.Period.month.html#pandas.Period.month "pandas.Period.month")
    | Return the month this Period falls on. |'
  id: totrans-838
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.month`](api/pandas.Period.month.html#pandas.Period.month "pandas.Period.month")
    | 返回此周期所在的月份。 |'
- en: '| [`Period.ordinal`](api/pandas.Period.ordinal.html#pandas.Period.ordinal "pandas.Period.ordinal")
    |  |'
  id: totrans-839
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.ordinal`](api/pandas.Period.ordinal.html#pandas.Period.ordinal "pandas.Period.ordinal")
    |  |'
- en: '| [`Period.quarter`](api/pandas.Period.quarter.html#pandas.Period.quarter "pandas.Period.quarter")
    | Return the quarter this Period falls on. |'
  id: totrans-840
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.quarter`](api/pandas.Period.quarter.html#pandas.Period.quarter "pandas.Period.quarter")
    | 返回此周期所在的季度。 |'
- en: '| [`Period.qyear`](api/pandas.Period.qyear.html#pandas.Period.qyear "pandas.Period.qyear")
    | Fiscal year the Period lies in according to its starting-quarter. |'
  id: totrans-841
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.qyear`](api/pandas.Period.qyear.html#pandas.Period.qyear "pandas.Period.qyear")
    | 根据其起始季度确定周期所在的财政年度。 |'
- en: '| [`Period.second`](api/pandas.Period.second.html#pandas.Period.second "pandas.Period.second")
    | Get the second component of the Period. |'
  id: totrans-842
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.second`](api/pandas.Period.second.html#pandas.Period.second "pandas.Period.second")
    | 获取周期的秒组件。 |'
- en: '| [`Period.start_time`](api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") | Get the Timestamp for the start of the period. |'
  id: totrans-843
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.start_time`](api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") | 获取周期开始的时间戳。 |'
- en: '| [`Period.week`](api/pandas.Period.week.html#pandas.Period.week "pandas.Period.week")
    | Get the week of the year on the given Period. |'
  id: totrans-844
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.week`](api/pandas.Period.week.html#pandas.Period.week "pandas.Period.week")
    | 获取给定周期所在的一年中的周数。 |'
- en: '| [`Period.weekday`](api/pandas.Period.weekday.html#pandas.Period.weekday "pandas.Period.weekday")
    | Day of the week the period lies in, with Monday=0 and Sunday=6. |'
  id: totrans-845
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.weekday`](api/pandas.Period.weekday.html#pandas.Period.weekday "pandas.Period.weekday")
    | 周期所在的星期几，星期一为0，星期日为6。 |'
- en: '| [`Period.weekofyear`](api/pandas.Period.weekofyear.html#pandas.Period.weekofyear
    "pandas.Period.weekofyear") | Get the week of the year on the given Period. |'
  id: totrans-846
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.weekofyear`](api/pandas.Period.weekofyear.html#pandas.Period.weekofyear
    "pandas.Period.weekofyear") | 获取给定周期所在的一年中的周数。 |'
- en: '| [`Period.year`](api/pandas.Period.year.html#pandas.Period.year "pandas.Period.year")
    | Return the year this Period falls on. |'
  id: totrans-847
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.year`](api/pandas.Period.year.html#pandas.Period.year "pandas.Period.year")
    | 返回此周期所在的年份。 |'
- en: Methods
  id: totrans-848
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Period.asfreq`](api/pandas.Period.asfreq.html#pandas.Period.asfreq "pandas.Period.asfreq")(freq[, how])
    | Convert Period to desired frequency, at the start or end of the interval. |'
  id: totrans-849
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.asfreq`](api/pandas.Period.asfreq.html#pandas.Period.asfreq "pandas.Period.asfreq")(freq[, how])
    | 将周期转换为所需频率，位于间隔的开始或结束。 |'
- en: '| [`Period.now`](api/pandas.Period.now.html#pandas.Period.now "pandas.Period.now")(freq)
    | Return the period of now''s date. |'
  id: totrans-850
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.now`](api/pandas.Period.now.html#pandas.Period.now "pandas.Period.now")(freq)
    | 返回当前日期的周期。 |'
- en: '| [`Period.strftime`](api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime")(fmt) | Returns a formatted string representation of
    the [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period"). |'
  id: totrans-851
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.strftime`](api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime")(fmt) | 返回[`Period`](api/pandas.Period.html#pandas.Period
    "pandas.Period")的格式化字符串表示。 |'
- en: '| [`Period.to_timestamp`](api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp")([freq, how]) | Return the Timestamp representation
    of the Period. |'
  id: totrans-852
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.to_timestamp`](api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp")([freq, how]) | 返回周期的时间戳表示。 |'
- en: A collection of [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")
    may be stored in a [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray"). Every period in a [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") must have the same `freq`.
  id: totrans-853
  prefs: []
  type: TYPE_NORMAL
  zh: 一组 [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period") 可能存储在 [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") 中。[`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") 中的每个 Period 必须具有相同的 `freq`。
- en: '| [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")(values[, dtype, freq, copy]) | Pandas ExtensionArray
    for storing Period data. |'
  id: totrans-854
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")(values[, dtype, freq, copy]) | 用于存储 Period 数据的 Pandas
    ExtensionArray。 |'
- en: '| [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype "pandas.PeriodDtype")(freq)
    | An ExtensionDtype for Period data. |'
  id: totrans-855
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype "pandas.PeriodDtype")(freq)
    | 用于 Period 数据的 ExtensionDtype。 |'
- en: Properties
  id: totrans-856
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Period.day`](api/pandas.Period.day.html#pandas.Period.day "pandas.Period.day")
    | Get day of the month that a Period falls on. |'
  id: totrans-857
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day`](api/pandas.Period.day.html#pandas.Period.day "pandas.Period.day")
    | 获取 Period 所在月份的日期。 |'
- en: '| [`Period.dayofweek`](api/pandas.Period.dayofweek.html#pandas.Period.dayofweek
    "pandas.Period.dayofweek") | Day of the week the period lies in, with Monday=0
    and Sunday=6. |'
  id: totrans-858
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.dayofweek`](api/pandas.Period.dayofweek.html#pandas.Period.dayofweek
    "pandas.Period.dayofweek") | Period 所在的星期几，星期一为 0，星期日为 6。 |'
- en: '| [`Period.day_of_week`](api/pandas.Period.day_of_week.html#pandas.Period.day_of_week
    "pandas.Period.day_of_week") | Day of the week the period lies in, with Monday=0
    and Sunday=6. |'
  id: totrans-859
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day_of_week`](api/pandas.Period.day_of_week.html#pandas.Period.day_of_week
    "pandas.Period.day_of_week") | Period 所在的星期几，星期一为 0，星期日为 6。 |'
- en: '| [`Period.dayofyear`](api/pandas.Period.dayofyear.html#pandas.Period.dayofyear
    "pandas.Period.dayofyear") | Return the day of the year. |'
  id: totrans-860
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.dayofyear`](api/pandas.Period.dayofyear.html#pandas.Period.dayofyear
    "pandas.Period.dayofyear") | 返回一年中的第几天。 |'
- en: '| [`Period.day_of_year`](api/pandas.Period.day_of_year.html#pandas.Period.day_of_year
    "pandas.Period.day_of_year") | Return the day of the year. |'
  id: totrans-861
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.day_of_year`](api/pandas.Period.day_of_year.html#pandas.Period.day_of_year
    "pandas.Period.day_of_year") | 返回一年中的第几天。 |'
- en: '| [`Period.days_in_month`](api/pandas.Period.days_in_month.html#pandas.Period.days_in_month
    "pandas.Period.days_in_month") | Get the total number of days in the month that
    this period falls on. |'
  id: totrans-862
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.days_in_month`](api/pandas.Period.days_in_month.html#pandas.Period.days_in_month
    "pandas.Period.days_in_month") | 获取该期间所在月份的总天数。 |'
- en: '| [`Period.daysinmonth`](api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth
    "pandas.Period.daysinmonth") | Get the total number of days of the month that
    this period falls on. |'
  id: totrans-863
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.daysinmonth`](api/pandas.Period.daysinmonth.html#pandas.Period.daysinmonth
    "pandas.Period.daysinmonth") | 获取该期间所在月份的总天数。 |'
- en: '| [`Period.end_time`](api/pandas.Period.end_time.html#pandas.Period.end_time
    "pandas.Period.end_time") | Get the Timestamp for the end of the period. |'
  id: totrans-864
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.end_time`](api/pandas.Period.end_time.html#pandas.Period.end_time
    "pandas.Period.end_time") | 获取期间结束时间的时间戳。 |'
- en: '| [`Period.freq`](api/pandas.Period.freq.html#pandas.Period.freq "pandas.Period.freq")
    |  |'
  id: totrans-865
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.freq`](api/pandas.Period.freq.html#pandas.Period.freq "pandas.Period.freq")
    |  |'
- en: '| [`Period.freqstr`](api/pandas.Period.freqstr.html#pandas.Period.freqstr "pandas.Period.freqstr")
    | Return a string representation of the frequency. |'
  id: totrans-866
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.freqstr`](api/pandas.Period.freqstr.html#pandas.Period.freqstr "pandas.Period.freqstr")
    | 返回频率的字符串表示。 |'
- en: '| [`Period.hour`](api/pandas.Period.hour.html#pandas.Period.hour "pandas.Period.hour")
    | Get the hour of the day component of the Period. |'
  id: totrans-867
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.hour`](api/pandas.Period.hour.html#pandas.Period.hour "pandas.Period.hour")
    | 获取 Period 的一天中的小时数。 |'
- en: '| [`Period.is_leap_year`](api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year
    "pandas.Period.is_leap_year") | Return True if the period''s year is in a leap
    year. |'
  id: totrans-868
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.is_leap_year`](api/pandas.Period.is_leap_year.html#pandas.Period.is_leap_year
    "pandas.Period.is_leap_year") | 如果该期间所在年份是闰年，则返回 True。 |'
- en: '| [`Period.minute`](api/pandas.Period.minute.html#pandas.Period.minute "pandas.Period.minute")
    | Get minute of the hour component of the Period. |'
  id: totrans-869
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.minute`](api/pandas.Period.minute.html#pandas.Period.minute "pandas.Period.minute")
    | 获取 Period 的小时数。 |'
- en: '| [`Period.month`](api/pandas.Period.month.html#pandas.Period.month "pandas.Period.month")
    | Return the month this Period falls on. |'
  id: totrans-870
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.month`](api/pandas.Period.month.html#pandas.Period.month "pandas.Period.month")
    | 返回 Period 所在的月份。 |'
- en: '| [`Period.ordinal`](api/pandas.Period.ordinal.html#pandas.Period.ordinal "pandas.Period.ordinal")
    |  |'
  id: totrans-871
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.ordinal`](api/pandas.Period.ordinal.html#pandas.Period.ordinal "pandas.Period.ordinal")
    |  |'
- en: '| [`Period.quarter`](api/pandas.Period.quarter.html#pandas.Period.quarter "pandas.Period.quarter")
    | Return the quarter this Period falls on. |'
  id: totrans-872
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.quarter`](api/pandas.Period.quarter.html#pandas.Period.quarter "pandas.Period.quarter")
    | 返回此周期所属的季度。 |'
- en: '| [`Period.qyear`](api/pandas.Period.qyear.html#pandas.Period.qyear "pandas.Period.qyear")
    | Fiscal year the Period lies in according to its starting-quarter. |'
  id: totrans-873
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.qyear`](api/pandas.Period.qyear.html#pandas.Period.qyear "pandas.Period.qyear")
    | 根据其起始季度确定周期所在的财政年度。 |'
- en: '| [`Period.second`](api/pandas.Period.second.html#pandas.Period.second "pandas.Period.second")
    | Get the second component of the Period. |'
  id: totrans-874
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.second`](api/pandas.Period.second.html#pandas.Period.second "pandas.Period.second")
    | 获取周期的第二个组成部分。 |'
- en: '| [`Period.start_time`](api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") | Get the Timestamp for the start of the period. |'
  id: totrans-875
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.start_time`](api/pandas.Period.start_time.html#pandas.Period.start_time
    "pandas.Period.start_time") | 获取周期开始的时间戳。 |'
- en: '| [`Period.week`](api/pandas.Period.week.html#pandas.Period.week "pandas.Period.week")
    | Get the week of the year on the given Period. |'
  id: totrans-876
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.week`](api/pandas.Period.week.html#pandas.Period.week "pandas.Period.week")
    | 获取给定周期的年份周数。 |'
- en: '| [`Period.weekday`](api/pandas.Period.weekday.html#pandas.Period.weekday "pandas.Period.weekday")
    | Day of the week the period lies in, with Monday=0 and Sunday=6. |'
  id: totrans-877
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.weekday`](api/pandas.Period.weekday.html#pandas.Period.weekday "pandas.Period.weekday")
    | 周期所在的星期几，星期一为0，星期日为6。 |'
- en: '| [`Period.weekofyear`](api/pandas.Period.weekofyear.html#pandas.Period.weekofyear
    "pandas.Period.weekofyear") | Get the week of the year on the given Period. |'
  id: totrans-878
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.weekofyear`](api/pandas.Period.weekofyear.html#pandas.Period.weekofyear
    "pandas.Period.weekofyear") | 获取给定周期的年份周数。 |'
- en: '| [`Period.year`](api/pandas.Period.year.html#pandas.Period.year "pandas.Period.year")
    | Return the year this Period falls on. |'
  id: totrans-879
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.year`](api/pandas.Period.year.html#pandas.Period.year "pandas.Period.year")
    | 返回此周期所在的年份。 |'
- en: Methods
  id: totrans-880
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`Period.asfreq`](api/pandas.Period.asfreq.html#pandas.Period.asfreq "pandas.Period.asfreq")(freq[, how])
    | Convert Period to desired frequency, at the start or end of the interval. |'
  id: totrans-881
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.asfreq`](api/pandas.Period.asfreq.html#pandas.Period.asfreq "pandas.Period.asfreq")(freq[, how])
    | 将周期转换为所需频率，以间隔的开始或结束为准。 |'
- en: '| [`Period.now`](api/pandas.Period.now.html#pandas.Period.now "pandas.Period.now")(freq)
    | Return the period of now''s date. |'
  id: totrans-882
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.now`](api/pandas.Period.now.html#pandas.Period.now "pandas.Period.now")(freq)
    | 返回当前日期的周期。 |'
- en: '| [`Period.strftime`](api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime")(fmt) | Returns a formatted string representation of
    the [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period"). |'
  id: totrans-883
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.strftime`](api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime")(fmt) | 返回[`Period`](api/pandas.Period.html#pandas.Period
    "pandas.Period")的格式化字符串表示形式。 |'
- en: '| [`Period.to_timestamp`](api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp")([freq, how]) | Return the Timestamp representation
    of the Period. |'
  id: totrans-884
  prefs: []
  type: TYPE_TB
  zh: '| [`Period.to_timestamp`](api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp")([freq, how]) | 返回周期的时间戳表示。 |'
- en: A collection of [`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")
    may be stored in a [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray"). Every period in a [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray") must have the same `freq`.
  id: totrans-885
  prefs: []
  type: TYPE_NORMAL
  zh: 一组[`Period`](api/pandas.Period.html#pandas.Period "pandas.Period")可以存储在[`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")中。[`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")中的每个周期必须具有相同的`freq`。
- en: '| [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")(values[, dtype, freq, copy]) | Pandas ExtensionArray
    for storing Period data. |'
  id: totrans-886
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.PeriodArray`](api/pandas.arrays.PeriodArray.html#pandas.arrays.PeriodArray
    "pandas.arrays.PeriodArray")(values[, dtype, freq, copy]) | 用于存储周期数据的Pandas扩展数组。
    |'
- en: '| [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype "pandas.PeriodDtype")(freq)
    | An ExtensionDtype for Period data. |'
  id: totrans-887
  prefs: []
  type: TYPE_TB
  zh: '| [`PeriodDtype`](api/pandas.PeriodDtype.html#pandas.PeriodDtype "pandas.PeriodDtype")(freq)
    | 用于周期数据的ExtensionDtype。 |'
- en: '### Intervals'
  id: totrans-888
  prefs: []
  type: TYPE_NORMAL
  zh: '### 区间'
- en: Arbitrary intervals can be represented as [`Interval`](api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects.
  id: totrans-889
  prefs: []
  type: TYPE_NORMAL
  zh: 任意间隔都可以表示为[`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")对象。
- en: '| [`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    | Immutable object implementing an Interval, a bounded slice-like interval. |'
  id: totrans-890
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval`](api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    | 实现区间的不可变对象，类似于有界切片。 |'
- en: Properties
  id: totrans-891
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Interval.closed`](api/pandas.Interval.closed.html#pandas.Interval.closed
    "pandas.Interval.closed") | String describing the inclusive side the intervals.
    |'
  id: totrans-892
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed`](api/pandas.Interval.closed.html#pandas.Interval.closed
    "pandas.Interval.closed") | 描述区间包含侧的字符串。 |'
- en: '| [`Interval.closed_left`](api/pandas.Interval.closed_left.html#pandas.Interval.closed_left
    "pandas.Interval.closed_left") | Check if the interval is closed on the left side.
    |'
  id: totrans-893
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed_left`](api/pandas.Interval.closed_left.html#pandas.Interval.closed_left
    "pandas.Interval.closed_left") | 检查区间左侧是否闭合。 |'
- en: '| [`Interval.closed_right`](api/pandas.Interval.closed_right.html#pandas.Interval.closed_right
    "pandas.Interval.closed_right") | Check if the interval is closed on the right
    side. |'
  id: totrans-894
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed_right`](api/pandas.Interval.closed_right.html#pandas.Interval.closed_right
    "pandas.Interval.closed_right") | 检查区间右侧是否闭合。 |'
- en: '| [`Interval.is_empty`](api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") | Indicates if an interval is empty, meaning it contains
    no points. |'
  id: totrans-895
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.is_empty`](api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") | 指示区间是否为空，即不包含任何点。 |'
- en: '| [`Interval.left`](api/pandas.Interval.left.html#pandas.Interval.left "pandas.Interval.left")
    | Left bound for the interval. |'
  id: totrans-896
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.left`](api/pandas.Interval.left.html#pandas.Interval.left "pandas.Interval.left")
    | 区间的左边界。 |'
- en: '| [`Interval.length`](api/pandas.Interval.length.html#pandas.Interval.length
    "pandas.Interval.length") | Return the length of the Interval. |'
  id: totrans-897
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.length`](api/pandas.Interval.length.html#pandas.Interval.length
    "pandas.Interval.length") | 返回区间的长度。 |'
- en: '| [`Interval.mid`](api/pandas.Interval.mid.html#pandas.Interval.mid "pandas.Interval.mid")
    | Return the midpoint of the Interval. |'
  id: totrans-898
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.mid`](api/pandas.Interval.mid.html#pandas.Interval.mid "pandas.Interval.mid")
    | 返回区间的中点。 |'
- en: '| [`Interval.open_left`](api/pandas.Interval.open_left.html#pandas.Interval.open_left
    "pandas.Interval.open_left") | Check if the interval is open on the left side.
    |'
  id: totrans-899
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.open_left`](api/pandas.Interval.open_left.html#pandas.Interval.open_left
    "pandas.Interval.open_left") | 检查区间左侧是否开放。 |'
- en: '| [`Interval.open_right`](api/pandas.Interval.open_right.html#pandas.Interval.open_right
    "pandas.Interval.open_right") | Check if the interval is open on the right side.
    |'
  id: totrans-900
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.open_right`](api/pandas.Interval.open_right.html#pandas.Interval.open_right
    "pandas.Interval.open_right") | 检查区间右侧是否开放。 |'
- en: '| [`Interval.overlaps`](api/pandas.Interval.overlaps.html#pandas.Interval.overlaps
    "pandas.Interval.overlaps")(other) | Check whether two Interval objects overlap.
    |'
  id: totrans-901
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.overlaps`](api/pandas.Interval.overlaps.html#pandas.Interval.overlaps
    "pandas.Interval.overlaps")(other) | 检查两个区间对象是否重叠。 |'
- en: '| [`Interval.right`](api/pandas.Interval.right.html#pandas.Interval.right "pandas.Interval.right")
    | Right bound for the interval. |'
  id: totrans-902
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.right`](api/pandas.Interval.right.html#pandas.Interval.right "pandas.Interval.right")
    | 区间的右边界。 |'
- en: A collection of intervals may be stored in an [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray").
  id: totrans-903
  prefs: []
  type: TYPE_NORMAL
  zh: 一组区间可以存储在[`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")中。
- en: '| [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")(data[, closed, dtype, ...]) | Pandas array for
    interval data that are closed on the same side. |'
  id: totrans-904
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")(data[, closed, dtype, ...]) | 用于在同一侧闭合的区间数据的Pandas数组。
    |'
- en: '| [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype "pandas.IntervalDtype")([subtype, closed])
    | An ExtensionDtype for Interval data. |'
  id: totrans-905
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype "pandas.IntervalDtype")([subtype, closed])
    | 用于区间数据的扩展数据类型。 |'
- en: Properties
  id: totrans-906
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`Interval.closed`](api/pandas.Interval.closed.html#pandas.Interval.closed
    "pandas.Interval.closed") | String describing the inclusive side the intervals.
    |'
  id: totrans-907
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed`](api/pandas.Interval.closed.html#pandas.Interval.closed
    "pandas.Interval.closed") | 描述区间包含侧的字符串。 |'
- en: '| [`Interval.closed_left`](api/pandas.Interval.closed_left.html#pandas.Interval.closed_left
    "pandas.Interval.closed_left") | Check if the interval is closed on the left side.
    |'
  id: totrans-908
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed_left`](api/pandas.Interval.closed_left.html#pandas.Interval.closed_left
    "pandas.Interval.closed_left") | 检查区间左侧是否闭合。 |'
- en: '| [`Interval.closed_right`](api/pandas.Interval.closed_right.html#pandas.Interval.closed_right
    "pandas.Interval.closed_right") | Check if the interval is closed on the right
    side. |'
  id: totrans-909
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.closed_right`](api/pandas.Interval.closed_right.html#pandas.Interval.closed_right
    "pandas.Interval.closed_right") | 检查区间右侧是否闭合。 |'
- en: '| [`Interval.is_empty`](api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") | Indicates if an interval is empty, meaning it contains
    no points. |'
  id: totrans-910
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.is_empty`](api/pandas.Interval.is_empty.html#pandas.Interval.is_empty
    "pandas.Interval.is_empty") | 指示区间是否为空，即不包含任何点。 |'
- en: '| [`Interval.left`](api/pandas.Interval.left.html#pandas.Interval.left "pandas.Interval.left")
    | Left bound for the interval. |'
  id: totrans-911
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.left`](api/pandas.Interval.left.html#pandas.Interval.left "pandas.Interval.left")
    | 区间的左边界。 |'
- en: '| [`Interval.length`](api/pandas.Interval.length.html#pandas.Interval.length
    "pandas.Interval.length") | Return the length of the Interval. |'
  id: totrans-912
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.length`](api/pandas.Interval.length.html#pandas.Interval.length
    "pandas.Interval.length") | 返回区间的长度。 |'
- en: '| [`Interval.mid`](api/pandas.Interval.mid.html#pandas.Interval.mid "pandas.Interval.mid")
    | Return the midpoint of the Interval. |'
  id: totrans-913
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.mid`](api/pandas.Interval.mid.html#pandas.Interval.mid "pandas.Interval.mid")
    | 返回区间的中点。 |'
- en: '| [`Interval.open_left`](api/pandas.Interval.open_left.html#pandas.Interval.open_left
    "pandas.Interval.open_left") | Check if the interval is open on the left side.
    |'
  id: totrans-914
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.open_left`](api/pandas.Interval.open_left.html#pandas.Interval.open_left
    "pandas.Interval.open_left") | 检查区间左侧是否开放。 |'
- en: '| [`Interval.open_right`](api/pandas.Interval.open_right.html#pandas.Interval.open_right
    "pandas.Interval.open_right") | Check if the interval is open on the right side.
    |'
  id: totrans-915
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.open_right`](api/pandas.Interval.open_right.html#pandas.Interval.open_right
    "pandas.Interval.open_right") | 检查区间右侧是否开放。 |'
- en: '| [`Interval.overlaps`](api/pandas.Interval.overlaps.html#pandas.Interval.overlaps
    "pandas.Interval.overlaps")(other) | Check whether two Interval objects overlap.
    |'
  id: totrans-916
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.overlaps`](api/pandas.Interval.overlaps.html#pandas.Interval.overlaps
    "pandas.Interval.overlaps")(other) | 检查两个区间对象是否重叠。 |'
- en: '| [`Interval.right`](api/pandas.Interval.right.html#pandas.Interval.right "pandas.Interval.right")
    | Right bound for the interval. |'
  id: totrans-917
  prefs: []
  type: TYPE_TB
  zh: '| [`Interval.right`](api/pandas.Interval.right.html#pandas.Interval.right "pandas.Interval.right")
    | 区间的右边界。 |'
- en: A collection of intervals may be stored in an [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray").
  id: totrans-918
  prefs: []
  type: TYPE_NORMAL
  zh: 区间的集合可以存储在 [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray") 中。
- en: '| [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")(data[, closed, dtype, ...]) | Pandas array for
    interval data that are closed on the same side. |'
  id: totrans-919
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.IntervalArray`](api/pandas.arrays.IntervalArray.html#pandas.arrays.IntervalArray
    "pandas.arrays.IntervalArray")(data[, closed, dtype, ...]) | 存储在同一侧封闭的区间数据的 Pandas
    数组。 |'
- en: '| [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype "pandas.IntervalDtype")([subtype, closed])
    | An ExtensionDtype for Interval data. |'
  id: totrans-920
  prefs: []
  type: TYPE_TB
  zh: '| [`IntervalDtype`](api/pandas.IntervalDtype.html#pandas.IntervalDtype "pandas.IntervalDtype")([subtype, closed])
    | 用于区间数据的 ExtensionDtype。 |'
- en: '### Nullable integer'
  id: totrans-921
  prefs: []
  type: TYPE_NORMAL
  zh: '### 可空整数'
- en: '[`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)") cannot natively represent integer-data with missing values.
    pandas provides this through [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray").'
  id: totrans-922
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(在 NumPy v1.26 中)") 无法原生表示具有缺失值的整数数据。pandas 通过 [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray") 实现了这一点。 |'
- en: '| [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")(values, mask[, copy]) | Array of integer (optional
    missing) values. |'
  id: totrans-923
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.IntegerArray`](api/pandas.arrays.IntegerArray.html#pandas.arrays.IntegerArray
    "pandas.arrays.IntegerArray")(values, mask[, copy]) | 整数（可选缺失）值的数组。 |'
- en: '| [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype "pandas.Int8Dtype")()
    | An ExtensionDtype for int8 integer data. |'
  id: totrans-924
  prefs: []
  type: TYPE_TB
  zh: '| [`Int8Dtype`](api/pandas.Int8Dtype.html#pandas.Int8Dtype "pandas.Int8Dtype")()
    | 用于 int8 整数数据的 ExtensionDtype。 |'
- en: '| [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype "pandas.Int16Dtype")()
    | An ExtensionDtype for int16 integer data. |'
  id: totrans-925
  prefs: []
  type: TYPE_TB
  zh: '| [`Int16Dtype`](api/pandas.Int16Dtype.html#pandas.Int16Dtype "pandas.Int16Dtype")()
    | 用于 int16 整数数据的 ExtensionDtype。 |'
- en: '| [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype "pandas.Int32Dtype")()
    | An ExtensionDtype for int32 integer data. |'
  id: totrans-926
  prefs: []
  type: TYPE_TB
  zh: '| [`Int32Dtype`](api/pandas.Int32Dtype.html#pandas.Int32Dtype "pandas.Int32Dtype")()
    | 用于 int32 整数数据的 ExtensionDtype。 |'
- en: '| [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype "pandas.Int64Dtype")()
    | An ExtensionDtype for int64 integer data. |'
  id: totrans-927
  prefs: []
  type: TYPE_TB
  zh: '| [`Int64Dtype`](api/pandas.Int64Dtype.html#pandas.Int64Dtype "pandas.Int64Dtype")()
    | 用于 int64 整数数据的 ExtensionDtype。 |'
- en: '| [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype "pandas.UInt8Dtype")()
    | An ExtensionDtype for uint8 integer data. |'
  id: totrans-928
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt8Dtype`](api/pandas.UInt8Dtype.html#pandas.UInt8Dtype "pandas.UInt8Dtype")()
    | 用于 uint8 整数数据的 ExtensionDtype。 |'
- en: '| [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype "pandas.UInt16Dtype")()
    | An ExtensionDtype for uint16 integer data. |'
  id: totrans-929
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt16Dtype`](api/pandas.UInt16Dtype.html#pandas.UInt16Dtype "pandas.UInt16Dtype")()
    | 用于 uint16 整数数据的 ExtensionDtype。 |'
- en: '| [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype "pandas.UInt32Dtype")()
    | An ExtensionDtype for uint32 integer data. |'
  id: totrans-930
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt32Dtype`](api/pandas.UInt32Dtype.html#pandas.UInt32Dtype "pandas.UInt32Dtype")()
    | 用于 uint32 整数数据的扩展数据类型。 |'
- en: '| [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype "pandas.UInt64Dtype")()
    | An ExtensionDtype for uint64 integer data. |'
  id: totrans-931
  prefs: []
  type: TYPE_TB
  zh: '| [`UInt64Dtype`](api/pandas.UInt64Dtype.html#pandas.UInt64Dtype "pandas.UInt64Dtype")()
    | 用于 uint64 整数数据的扩展数据类型。 |'
- en: '### Nullable float'
  id: totrans-932
  prefs: []
  type: TYPE_NORMAL
  zh: '### 可空浮点数'
- en: '| [`arrays.FloatingArray`](api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray")(values, mask[, copy]) | Array of floating (optional
    missing) values. |'
  id: totrans-933
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.FloatingArray`](api/pandas.arrays.FloatingArray.html#pandas.arrays.FloatingArray
    "pandas.arrays.FloatingArray")(values, mask[, copy]) | 浮点数（可选缺失）值数组。 |'
- en: '| [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype "pandas.Float32Dtype")()
    | An ExtensionDtype for float32 data. |'
  id: totrans-934
  prefs: []
  type: TYPE_TB
  zh: '| [`Float32Dtype`](api/pandas.Float32Dtype.html#pandas.Float32Dtype "pandas.Float32Dtype")()
    | 用于 float32 数据的扩展数据类型。 |'
- en: '| [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype "pandas.Float64Dtype")()
    | An ExtensionDtype for float64 data. |'
  id: totrans-935
  prefs: []
  type: TYPE_TB
  zh: '| [`Float64Dtype`](api/pandas.Float64Dtype.html#pandas.Float64Dtype "pandas.Float64Dtype")()
    | 用于 float64 数据的扩展数据类型。 |'
- en: '### Categoricals'
  id: totrans-936
  prefs: []
  type: TYPE_NORMAL
  zh: '### 分类数据'
- en: pandas defines a custom data type for representing data that can take only a
    limited, fixed set of values. The dtype of a [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") can be described by a [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype").
  id: totrans-937
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 定义了一种自定义数据类型来表示只能取有限固定值集的数据。[`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") 的数据类型可以由 [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") 描述。
- en: '| [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")([categories, ordered]) | Type for categorical data
    with the categories and orderedness. |'
  id: totrans-938
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")([categories, ordered]) | 分类数据的类型，包括类别和顺序。 |'
- en: '| [`CategoricalDtype.categories`](api/pandas.CategoricalDtype.categories.html#pandas.CategoricalDtype.categories
    "pandas.CategoricalDtype.categories") | An `Index` containing the unique categories
    allowed. |'
  id: totrans-939
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype.categories`](api/pandas.CategoricalDtype.categories.html#pandas.CategoricalDtype.categories
    "pandas.CategoricalDtype.categories") | 包含允许的唯一类别的索引。 |'
- en: '| [`CategoricalDtype.ordered`](api/pandas.CategoricalDtype.ordered.html#pandas.CategoricalDtype.ordered
    "pandas.CategoricalDtype.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-940
  prefs: []
  type: TYPE_TB
  zh: '| [`CategoricalDtype.ordered`](api/pandas.CategoricalDtype.ordered.html#pandas.CategoricalDtype.ordered
    "pandas.CategoricalDtype.ordered") | 类别是否具有顺序关系。 |'
- en: Categorical data can be stored in a [`pandas.Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")
  id: totrans-941
  prefs: []
  type: TYPE_NORMAL
  zh: 分类数据可以存储在 [`pandas.Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") 中。
- en: '| [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")(values[, categories, ordered, ...])
    | Represent a categorical variable in classic R / S-plus fashion. |'
  id: totrans-942
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")(values[, categories, ordered, ...])
    | 以经典的 R / S-plus 方式表示分类变量。 |'
- en: 'The alternative [`Categorical.from_codes()`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") constructor can be used when you have the categories
    and integer codes already:'
  id: totrans-943
  prefs: []
  type: TYPE_NORMAL
  zh: 当你已经有了类别和整数编码时，可以使用另一种 [`Categorical.from_codes()`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes") 构造函数：
- en: '| [`Categorical.from_codes`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes")(codes[, categories, ...]) | Make a Categorical
    type from codes and categories or dtype. |'
  id: totrans-944
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.from_codes`](api/pandas.Categorical.from_codes.html#pandas.Categorical.from_codes
    "pandas.Categorical.from_codes")(codes[, categories, ...]) | 从代码和类别或数据类型创建分类类型。
    |'
- en: The dtype information is available on the [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")
  id: totrans-945
  prefs: []
  type: TYPE_NORMAL
  zh: 数据类型信息可在 [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")
    上找到。
- en: '| [`Categorical.dtype`](api/pandas.Categorical.dtype.html#pandas.Categorical.dtype
    "pandas.Categorical.dtype") | The `CategoricalDtype` for this instance. |'
  id: totrans-946
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.dtype`](api/pandas.Categorical.dtype.html#pandas.Categorical.dtype
    "pandas.Categorical.dtype") | 此实例的 `CategoricalDtype`。 |'
- en: '| [`Categorical.categories`](api/pandas.Categorical.categories.html#pandas.Categorical.categories
    "pandas.Categorical.categories") | The categories of this categorical. |'
  id: totrans-947
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.categories`](api/pandas.Categorical.categories.html#pandas.Categorical.categories
    "pandas.Categorical.categories") | 此分类的类别。 |'
- en: '| [`Categorical.ordered`](api/pandas.Categorical.ordered.html#pandas.Categorical.ordered
    "pandas.Categorical.ordered") | Whether the categories have an ordered relationship.
    |'
  id: totrans-948
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.ordered`](api/pandas.Categorical.ordered.html#pandas.Categorical.ordered
    "pandas.Categorical.ordered") | 类别是否具有有序关系。 |'
- en: '| [`Categorical.codes`](api/pandas.Categorical.codes.html#pandas.Categorical.codes
    "pandas.Categorical.codes") | The category codes of this categorical index. |'
  id: totrans-949
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.codes`](api/pandas.Categorical.codes.html#pandas.Categorical.codes
    "pandas.Categorical.codes") | 此分类索引的类别代码。 |'
- en: '`np.asarray(categorical)` works by implementing the array interface. Be aware,
    that this converts the [`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") back to a NumPy array, so categories and order information
    is not preserved!'
  id: totrans-950
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.asarray(categorical)`通过实现数���接口来工作。请注意，这会将[`Categorical`](api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")转换回NumPy数组，因此类别和顺序信息不会被保留！'
- en: '| [`Categorical.__array__`](api/pandas.Categorical.__array__.html#pandas.Categorical.__array__
    "pandas.Categorical.__array__")([dtype, copy]) | The numpy array interface. |'
  id: totrans-951
  prefs: []
  type: TYPE_TB
  zh: '| [`Categorical.__array__`](api/pandas.Categorical.__array__.html#pandas.Categorical.__array__
    "pandas.Categorical.__array__")([dtype, copy]) | numpy数组接口。 |'
- en: A [`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")
    can be stored in a [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    To create a Series of dtype `category`, use `cat = s.astype(dtype)` or `Series(...,
    dtype=dtype)` where `dtype` is either
  id: totrans-952
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`Categorical`](api/pandas.Categorical.html#pandas.Categorical "pandas.Categorical")可以存储在[`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")中。要创建dtype为`category`的Series，使用`cat
    = s.astype(dtype)`或`Series(..., dtype=dtype)`，其中`dtype`可以是
- en: the string `'category'`
  id: totrans-953
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串`'category'`
- en: an instance of [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype").
  id: totrans-954
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个[`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")的实例。
- en: If the [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series") is of
    dtype [`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype"), `Series.cat` can be used to change the categorical
    data. See [Categorical accessor](series.html#api-series-cat) for more.
  id: totrans-955
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")的dtype为[`CategoricalDtype`](api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype")，则可以使用`Series.cat`来更改分类数据。更多信息请参见[分类访问器](series.html#api-series-cat)。
- en: '### Sparse'
  id: totrans-956
  prefs: []
  type: TYPE_NORMAL
  zh: '### 稀疏'
- en: Data where a single value is repeated many times (e.g. `0` or `NaN`) may be
    stored efficiently as a [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray").
  id: totrans-957
  prefs: []
  type: TYPE_NORMAL
  zh: 数据中一个值重复多次（例如`0`或`NaN`）可以高效地存储为[`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")。
- en: '| [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")(data[, sparse_index, ...]) | An ExtensionArray for
    storing sparse data. |'
  id: totrans-958
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.SparseArray`](api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray")(data[, sparse_index, ...]) | 用于存储稀疏数据的ExtensionArray。
    |'
- en: '| [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")([dtype, fill_value])
    | Dtype for data stored in `SparseArray`. |'
  id: totrans-959
  prefs: []
  type: TYPE_TB
  zh: '| [`SparseDtype`](api/pandas.SparseDtype.html#pandas.SparseDtype "pandas.SparseDtype")([dtype, fill_value])
    | 存储在`SparseArray`中的数据类型。 |'
- en: The `Series.sparse` accessor may be used to access sparse-specific attributes
    and methods if the [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    contains sparse values. See [Sparse accessor](series.html#api-series-sparse) and
    [the user guide](../user_guide/sparse.html#sparse) for more.
  id: totrans-960
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")包含稀疏值，则可以使用`Series.sparse`访问器来访问稀疏特定属性和方法。更多信息请参见[稀疏访问器](series.html#api-series-sparse)和[用户指南](../user_guide/sparse.html#sparse)。
- en: '### Strings'
  id: totrans-961
  prefs: []
  type: TYPE_NORMAL
  zh: '### 字符串'
- en: When working with text data, where each valid element is a string or missing,
    we recommend using [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") (with the alias `"string"`).
  id: totrans-962
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理文本数据时，其中每个有效元素都是字符串或缺失值，我们建议使用[`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype")（别名为`"string"`）。
- en: '| [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray")(values[, copy]) | Extension array for string data.
    |'
  id: totrans-963
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray")(values[, copy]) | 用于字符串数据的扩展数组。 |'
- en: '| [`arrays.ArrowStringArray`](api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray")(values) | Extension array for string data in
    a `pyarrow.ChunkedArray`. |'
  id: totrans-964
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.ArrowStringArray`](api/pandas.arrays.ArrowStringArray.html#pandas.arrays.ArrowStringArray
    "pandas.arrays.ArrowStringArray")(values) | 在 `pyarrow.ChunkedArray` 中存储字符串数据的扩展数组。
    |'
- en: '| [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")([storage])
    | Extension dtype for string data. |'
  id: totrans-965
  prefs: []
  type: TYPE_TB
  zh: '| [`StringDtype`](api/pandas.StringDtype.html#pandas.StringDtype "pandas.StringDtype")([storage])
    | 用于字符串数据的扩展数据类型。 |'
- en: The `Series.str` accessor is available for [`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series") backed by a [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray"). See [String handling](series.html#api-series-str)
    for more.
  id: totrans-966
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [`arrays.StringArray`](api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") 支持的 `Series` 的 `str` 访问器可用。更多信息请参见[字符串处理](series.html#api-series-str)。
- en: '### Nullable Boolean'
  id: totrans-967
  prefs: []
  type: TYPE_NORMAL
  zh: '### 可空布尔'
- en: The boolean dtype (with the alias `"boolean"`) provides support for storing
    boolean data (`True`, `False`) with missing values, which is not possible with
    a bool [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v1.26)").
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔数据类型（别名为`"boolean"`）支持存储具有缺失值的布尔数据（`True`，`False`），这在布尔 [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(在 NumPy v1.26 中)") 中是不可能的。
- en: '| [`arrays.BooleanArray`](api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")(values, mask[, copy]) | Array of boolean (True/False)
    data with missing values. |'
  id: totrans-969
  prefs: []
  type: TYPE_TB
  zh: '| [`arrays.BooleanArray`](api/pandas.arrays.BooleanArray.html#pandas.arrays.BooleanArray
    "pandas.arrays.BooleanArray")(values, mask[, copy]) | 存储具有缺失值的布尔（True/False）数据的数组。
    |'
- en: '| [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype "pandas.BooleanDtype")()
    | Extension dtype for boolean data. |'
  id: totrans-970
  prefs: []
  type: TYPE_TB
  zh: '| [`BooleanDtype`](api/pandas.BooleanDtype.html#pandas.BooleanDtype "pandas.BooleanDtype")()
    | 用于布尔数据的扩展数据类型。 |'
- en: Utilities
  id: totrans-971
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实用工具
- en: Constructors
  id: totrans-972
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构造函数
- en: '| [`api.types.union_categoricals`](api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals")(to_union[, ...]) | Combine list-like of
    Categorical-like, unioning categories. |'
  id: totrans-973
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.union_categoricals`](api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals")(to_union[, ...]) | 结合类别列表，联合类别。 |'
- en: '| [`api.types.infer_dtype`](api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype")(value[, skipna]) | Return a string label of the
    type of a scalar or list-like of values. |'
  id: totrans-974
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.infer_dtype`](api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype")(value[, skipna]) | 返回标量或类似值的类型的字符串标签。 |'
- en: '| [`api.types.pandas_dtype`](api/pandas.api.types.pandas_dtype.html#pandas.api.types.pandas_dtype
    "pandas.api.types.pandas_dtype")(dtype) | Convert input into a pandas only dtype
    object or a numpy dtype object. |'
  id: totrans-975
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.pandas_dtype`](api/pandas.api.types.pandas_dtype.html#pandas.api.types.pandas_dtype
    "pandas.api.types.pandas_dtype")(dtype) | 将输入转换为仅限于 pandas 的数据类型对象或 numpy 的数据类型对象。
    |'
- en: Data type introspection
  id: totrans-976
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据类型内省
- en: '| [`api.types.is_any_real_numeric_dtype`](api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of a real number dtype. |'
  id: totrans-977
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_any_real_numeric_dtype`](api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为实数数据类型。
    |'
- en: '| [`api.types.is_bool_dtype`](api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype")(arr_or_dtype) | Check whether the provided array
    or dtype is of a boolean dtype. |'
  id: totrans-978
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_bool_dtype`](api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为布尔数据类型。 |'
- en: '| [`api.types.is_categorical_dtype`](api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Categorical dtype. |'
  id: totrans-979
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_categorical_dtype`](api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")(arr_or_dtype) | （已弃用）检查数组样式或数据类型是否为分类数据类型。
    |'
- en: '| [`api.types.is_complex_dtype`](api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype
    "pandas.api.types.is_complex_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a complex dtype. |'
  id: totrans-980
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_complex_dtype`](api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype
    "pandas.api.types.is_complex_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为复数数据类型。 |'
- en: '| [`api.types.is_datetime64_any_dtype`](api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype
    "pandas.api.types.is_datetime64_any_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of the datetime64 dtype. |'
  id: totrans-981
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_any_dtype`](api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype
    "pandas.api.types.is_datetime64_any_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为datetime64数据类型。
    |'
- en: '| [`api.types.is_datetime64_dtype`](api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype
    "pandas.api.types.is_datetime64_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the datetime64 dtype. |'
  id: totrans-982
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_dtype`](api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype
    "pandas.api.types.is_datetime64_dtype")(arr_or_dtype) | 检查数组或数据类型是否为datetime64数据类型。
    |'
- en: '| [`api.types.is_datetime64_ns_dtype`](api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype
    "pandas.api.types.is_datetime64_ns_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of the datetime64[ns] dtype. |'
  id: totrans-983
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_ns_dtype`](api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype
    "pandas.api.types.is_datetime64_ns_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为datetime64[ns]数据类型。
    |'
- en: '| [`api.types.is_datetime64tz_dtype`](api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype
    "pandas.api.types.is_datetime64tz_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of a DatetimeTZDtype dtype. |'
  id: totrans-984
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64tz_dtype`](api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype
    "pandas.api.types.is_datetime64tz_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为DatetimeTZDtype数据类型。
    |'
- en: '| [`api.types.is_extension_array_dtype`](api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype
    "pandas.api.types.is_extension_array_dtype")(arr_or_dtype) | Check if an object
    is a pandas extension array type. |'
  id: totrans-985
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_extension_array_dtype`](api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype
    "pandas.api.types.is_extension_array_dtype")(arr_or_dtype) | 检查对象是否为pandas扩展数组类型。
    |'
- en: '| [`api.types.is_float_dtype`](api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a float dtype. |'
  id: totrans-986
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_float_dtype`](api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为浮点数数据类型。 |'
- en: '| [`api.types.is_int64_dtype`](api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype
    "pandas.api.types.is_int64_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    the provided array or dtype is of the int64 dtype. |'
  id: totrans-987
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_int64_dtype`](api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype
    "pandas.api.types.is_int64_dtype")(arr_or_dtype) | (已弃用) 检查提供的数组或数据类型是否为int64数据类型。
    |'
- en: '| [`api.types.is_integer_dtype`](api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of an integer dtype. |'
  id: totrans-988
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_integer_dtype`](api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为整数数据类型。 |'
- en: '| [`api.types.is_interval_dtype`](api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Interval dtype. |'
  id: totrans-989
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_interval_dtype`](api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为区间数据类型。
    |'
- en: '| [`api.types.is_numeric_dtype`](api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a numeric dtype. |'
  id: totrans-990
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_numeric_dtype`](api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为数值数据类型。 |'
- en: '| [`api.types.is_object_dtype`](api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the object dtype. |'
  id: totrans-991
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_object_dtype`](api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype")(arr_or_dtype) | 检查数组或数据类型是否为对象数据类型。 |'
- en: '| [`api.types.is_period_dtype`](api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype
    "pandas.api.types.is_period_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Period dtype. |'
  id: totrans-992
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_period_dtype`](api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype
    "pandas.api.types.is_period_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为周期数据类型。
    |'
- en: '| [`api.types.is_signed_integer_dtype`](api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of a signed integer dtype. |'
  id: totrans-993
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_signed_integer_dtype`](api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为带符号整数
    dtype。 |'
- en: '| [`api.types.is_string_dtype`](api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of the string dtype. |'
  id: totrans-994
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_string_dtype`](api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为字符串 dtype。
    |'
- en: '| [`api.types.is_timedelta64_dtype`](api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype
    "pandas.api.types.is_timedelta64_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the timedelta64 dtype. |'
  id: totrans-995
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_timedelta64_dtype`](api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype
    "pandas.api.types.is_timedelta64_dtype")(arr_or_dtype) | 检查数组或 dtype 是否为 timedelta64
    dtype。 |'
- en: '| [`api.types.is_timedelta64_ns_dtype`](api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype
    "pandas.api.types.is_timedelta64_ns_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of the timedelta64[ns] dtype. |'
  id: totrans-996
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_timedelta64_ns_dtype`](api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype
    "pandas.api.types.is_timedelta64_ns_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为
    timedelta64[ns] dtype。 |'
- en: '| [`api.types.is_unsigned_integer_dtype`](api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of an unsigned integer dtype. |'
  id: totrans-997
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_unsigned_integer_dtype`](api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为无符号整数
    dtype。 |'
- en: '| [`api.types.is_sparse`](api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse
    "pandas.api.types.is_sparse")(arr) | (DEPRECATED) Check whether an array-like
    is a 1-D pandas sparse array. |'
  id: totrans-998
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_sparse`](api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse
    "pandas.api.types.is_sparse")(arr) | (已弃用) 检查数组样式是否为 1-D pandas 稀疏数组。 |'
- en: Iterable introspection
  id: totrans-999
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Iterable introspection
- en: '| [`api.types.is_dict_like`](api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like
    "pandas.api.types.is_dict_like")(obj) | Check if the object is dict-like. |'
  id: totrans-1000
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_dict_like`](api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like
    "pandas.api.types.is_dict_like")(obj) | 检查对象是否类似字典。 |'
- en: '| [`api.types.is_file_like`](api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like
    "pandas.api.types.is_file_like")(obj) | Check if the object is a file-like object.
    |'
  id: totrans-1001
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_file_like`](api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like
    "pandas.api.types.is_file_like")(obj) | 检查对象是否为类似文件的对象。 |'
- en: '| [`api.types.is_list_like`](api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like
    "pandas.api.types.is_list_like")(obj[, allow_sets]) | Check if the object is list-like.
    |'
  id: totrans-1002
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_list_like`](api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like
    "pandas.api.types.is_list_like")(obj[, allow_sets]) | 检查对象是否为类似列表。 |'
- en: '| [`api.types.is_named_tuple`](api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple
    "pandas.api.types.is_named_tuple")(obj) | Check if the object is a named tuple.
    |'
  id: totrans-1003
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_named_tuple`](api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple
    "pandas.api.types.is_named_tuple")(obj) | 检查对象是否为命名元组。 |'
- en: '| [`api.types.is_iterator`](api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator
    "pandas.api.types.is_iterator")(obj) | Check if the object is an iterator. |'
  id: totrans-1004
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_iterator`](api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator
    "pandas.api.types.is_iterator")(obj) | 检查对象是否为迭代器。 |'
- en: Scalar introspection
  id: totrans-1005
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Scalar introspection
- en: '| [`api.types.is_bool`](api/pandas.api.types.is_bool.html#pandas.api.types.is_bool
    "pandas.api.types.is_bool")(obj) | Return True if given object is boolean. |'
  id: totrans-1006
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_bool`](api/pandas.api.types.is_bool.html#pandas.api.types.is_bool
    "pandas.api.types.is_bool")(obj) | 如果给定对象是布尔值，则返回 True。 |'
- en: '| [`api.types.is_complex`](api/pandas.api.types.is_complex.html#pandas.api.types.is_complex
    "pandas.api.types.is_complex")(obj) | Return True if given object is complex.
    |'
  id: totrans-1007
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_complex`](api/pandas.api.types.is_complex.html#pandas.api.types.is_complex
    "pandas.api.types.is_complex")(obj) | 如果给定对象是复数，则返回 True。 |'
- en: '| [`api.types.is_float`](api/pandas.api.types.is_float.html#pandas.api.types.is_float
    "pandas.api.types.is_float")(obj) | Return True if given object is float. |'
  id: totrans-1008
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_float`](api/pandas.api.types.is_float.html#pandas.api.types.is_float
    "pandas.api.types.is_float")(obj) | 如果给定对象是浮点数，则返回 True。 |'
- en: '| [`api.types.is_hashable`](api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable
    "pandas.api.types.is_hashable")(obj) | Return True if hash(obj) will succeed,
    False otherwise. |'
  id: totrans-1009
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_hashable`](api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable
    "pandas.api.types.is_hashable")(obj) | 如果 hash(obj) 成功，则返回 True，否则返回 False。 |'
- en: '| [`api.types.is_integer`](api/pandas.api.types.is_integer.html#pandas.api.types.is_integer
    "pandas.api.types.is_integer")(obj) | Return True if given object is integer.
    |'
  id: totrans-1010
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_integer`](api/pandas.api.types.is_integer.html#pandas.api.types.is_integer
    "pandas.api.types.is_integer")(obj) | 如果给定对象为整数，则返回 True。 |'
- en: '| [`api.types.is_interval`](api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval")(obj) |  |'
  id: totrans-1011
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_interval`](api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval")(obj) |  |'
- en: '| [`api.types.is_number`](api/pandas.api.types.is_number.html#pandas.api.types.is_number
    "pandas.api.types.is_number")(obj) | Check if the object is a number. |'
  id: totrans-1012
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_number`](api/pandas.api.types.is_number.html#pandas.api.types.is_number
    "pandas.api.types.is_number")(obj) | 检查对象是否为数字。 |'
- en: '| [`api.types.is_re`](api/pandas.api.types.is_re.html#pandas.api.types.is_re
    "pandas.api.types.is_re")(obj) | Check if the object is a regex pattern instance.
    |'
  id: totrans-1013
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_re`](api/pandas.api.types.is_re.html#pandas.api.types.is_re
    "pandas.api.types.is_re")(obj) | 检查对象是否为正则表达式模式实例。 |'
- en: '| [`api.types.is_re_compilable`](api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable
    "pandas.api.types.is_re_compilable")(obj) | Check if the object can be compiled
    into a regex pattern instance. |'
  id: totrans-1014
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_re_compilable`](api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable
    "pandas.api.types.is_re_compilable")(obj) | 检查对象是否可编译为正则表达式模式实例。 |'
- en: '| [`api.types.is_scalar`](api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar")(val) | Return True if given object is scalar. |'
  id: totrans-1015
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_scalar`](api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar")(val) | 如果给定对象为标量，则返回 True。 |'
- en: Constructors
  id: totrans-1016
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 构造函数
- en: '| [`api.types.union_categoricals`](api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals")(to_union[, ...]) | Combine list-like of
    Categorical-like, unioning categories. |'
  id: totrans-1017
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.union_categoricals`](api/pandas.api.types.union_categoricals.html#pandas.api.types.union_categoricals
    "pandas.api.types.union_categoricals")(to_union[, ...]) | 组合类别类似的 Categorical
    对象列表，合并类别。 |'
- en: '| [`api.types.infer_dtype`](api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype")(value[, skipna]) | Return a string label of the
    type of a scalar or list-like of values. |'
  id: totrans-1018
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.infer_dtype`](api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype")(value[, skipna]) | 返回标量或类似值列表的类型的字符串标签。 |'
- en: '| [`api.types.pandas_dtype`](api/pandas.api.types.pandas_dtype.html#pandas.api.types.pandas_dtype
    "pandas.api.types.pandas_dtype")(dtype) | Convert input into a pandas only dtype
    object or a numpy dtype object. |'
  id: totrans-1019
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.pandas_dtype`](api/pandas.api.types.pandas_dtype.html#pandas.api.types.pandas_dtype
    "pandas.api.types.pandas_dtype")(dtype) | 将输入转换为仅限于 pandas 的 dtype 对象或 numpy 的
    dtype 对象。 |'
- en: Data type introspection
  id: totrans-1020
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据类型内省
- en: '| [`api.types.is_any_real_numeric_dtype`](api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of a real number dtype. |'
  id: totrans-1021
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_any_real_numeric_dtype`](api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为实数
    dtype。 |'
- en: '| [`api.types.is_bool_dtype`](api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype")(arr_or_dtype) | Check whether the provided array
    or dtype is of a boolean dtype. |'
  id: totrans-1022
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_bool_dtype`](api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为布尔 dtype。
    |'
- en: '| [`api.types.is_categorical_dtype`](api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Categorical dtype. |'
  id: totrans-1023
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_categorical_dtype`](api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")(arr_or_dtype) | (已弃用) 检查数组类似对象或 dtype
    是否为分类 dtype。 |'
- en: '| [`api.types.is_complex_dtype`](api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype
    "pandas.api.types.is_complex_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a complex dtype. |'
  id: totrans-1024
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_complex_dtype`](api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype
    "pandas.api.types.is_complex_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为复数 dtype。
    |'
- en: '| [`api.types.is_datetime64_any_dtype`](api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype
    "pandas.api.types.is_datetime64_any_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of the datetime64 dtype. |'
  id: totrans-1025
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_any_dtype`](api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype
    "pandas.api.types.is_datetime64_any_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为 datetime64
    数据类型。 |'
- en: '| [`api.types.is_datetime64_dtype`](api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype
    "pandas.api.types.is_datetime64_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the datetime64 dtype. |'
  id: totrans-1026
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_dtype`](api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype
    "pandas.api.types.is_datetime64_dtype")(arr_or_dtype) | 检查数组或数据类型是否为 datetime64
    数据类型。 |'
- en: '| [`api.types.is_datetime64_ns_dtype`](api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype
    "pandas.api.types.is_datetime64_ns_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of the datetime64[ns] dtype. |'
  id: totrans-1027
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_ns_dtype`](api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype
    "pandas.api.types.is_datetime64_ns_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为 datetime64[ns]
    数据类型。 |'
- en: '| [`api.types.is_datetime64tz_dtype`](api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype
    "pandas.api.types.is_datetime64tz_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of a DatetimeTZDtype dtype. |'
  id: totrans-1028
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64tz_dtype`](api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype
    "pandas.api.types.is_datetime64tz_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为 DatetimeTZDtype
    数据类型。 |'
- en: '| [`api.types.is_extension_array_dtype`](api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype
    "pandas.api.types.is_extension_array_dtype")(arr_or_dtype) | Check if an object
    is a pandas extension array type. |'
  id: totrans-1029
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_extension_array_dtype`](api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype
    "pandas.api.types.is_extension_array_dtype")(arr_or_dtype) | 检查对象是否为 pandas 扩展数组类型。
    |'
- en: '| [`api.types.is_float_dtype`](api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a float dtype. |'
  id: totrans-1030
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_float_dtype`](api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为浮点数数据类型。 |'
- en: '| [`api.types.is_int64_dtype`](api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype
    "pandas.api.types.is_int64_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    the provided array or dtype is of the int64 dtype. |'
  id: totrans-1031
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_int64_dtype`](api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype
    "pandas.api.types.is_int64_dtype")(arr_or_dtype) | (已弃用) 检查提供的数组或数据类型是否为 int64
    数据类型。 |'
- en: '| [`api.types.is_integer_dtype`](api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of an integer dtype. |'
  id: totrans-1032
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_integer_dtype`](api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为整数数据类型。 |'
- en: '| [`api.types.is_interval_dtype`](api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Interval dtype. |'
  id: totrans-1033
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_interval_dtype`](api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为 Interval
    数据类型。 |'
- en: '| [`api.types.is_numeric_dtype`](api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a numeric dtype. |'
  id: totrans-1034
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_numeric_dtype`](api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为数值数据类型。 |'
- en: '| [`api.types.is_object_dtype`](api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the object dtype. |'
  id: totrans-1035
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_object_dtype`](api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype")(arr_or_dtype) | 检查数组或数据类型是否为 object 数据类型。
    |'
- en: '| [`api.types.is_period_dtype`](api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype
    "pandas.api.types.is_period_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Period dtype. |'
  id: totrans-1036
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_period_dtype`](api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype
    "pandas.api.types.is_period_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为 Period
    数据类型。 |'
- en: '| [`api.types.is_signed_integer_dtype`](api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of a signed integer dtype. |'
  id: totrans-1037
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_signed_integer_dtype`](api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为有符号整数
    dtype。 |'
- en: '| [`api.types.is_string_dtype`](api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of the string dtype. |'
  id: totrans-1038
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_string_dtype`](api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为字符串 dtype。
    |'
- en: '| [`api.types.is_timedelta64_dtype`](api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype
    "pandas.api.types.is_timedelta64_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the timedelta64 dtype. |'
  id: totrans-1039
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_timedelta64_dtype`](api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype
    "pandas.api.types.is_timedelta64_dtype")(arr_or_dtype) | 检查数组样式或 dtype 是否为 timedelta64
    dtype。 |'
- en: '| [`api.types.is_timedelta64_ns_dtype`](api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype
    "pandas.api.types.is_timedelta64_ns_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of the timedelta64[ns] dtype. |'
  id: totrans-1040
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_timedelta64_ns_dtype`](api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype
    "pandas.api.types.is_timedelta64_ns_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为
    timedelta64[ns] dtype。 |'
- en: '| [`api.types.is_unsigned_integer_dtype`](api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of an unsigned integer dtype. |'
  id: totrans-1041
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_unsigned_integer_dtype`](api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为无符号整数
    dtype。 |'
- en: '| [`api.types.is_sparse`](api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse
    "pandas.api.types.is_sparse")(arr) | (DEPRECATED) Check whether an array-like
    is a 1-D pandas sparse array. |'
  id: totrans-1042
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_sparse`](api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse
    "pandas.api.types.is_sparse")(arr) | （已弃用）检查数组样式是否为 1-D pandas 稀疏数组。 |'
- en: Iterable introspection
  id: totrans-1043
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 可迭代对象内省
- en: '| [`api.types.is_dict_like`](api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like
    "pandas.api.types.is_dict_like")(obj) | Check if the object is dict-like. |'
  id: totrans-1044
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_dict_like`](api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like
    "pandas.api.types.is_dict_like")(obj) | 检查对象是否类似字典。 |'
- en: '| [`api.types.is_file_like`](api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like
    "pandas.api.types.is_file_like")(obj) | Check if the object is a file-like object.
    |'
  id: totrans-1045
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_file_like`](api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like
    "pandas.api.types.is_file_like")(obj) | 检查对象是否为类文件对象。 |'
- en: '| [`api.types.is_list_like`](api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like
    "pandas.api.types.is_list_like")(obj[, allow_sets]) | Check if the object is list-like.
    |'
  id: totrans-1046
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_list_like`](api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like
    "pandas.api.types.is_list_like")(obj[, allow_sets]) | 检查对象是否类似列表。 |'
- en: '| [`api.types.is_named_tuple`](api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple
    "pandas.api.types.is_named_tuple")(obj) | Check if the object is a named tuple.
    |'
  id: totrans-1047
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_named_tuple`](api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple
    "pandas.api.types.is_named_tuple")(obj) | 检查对象是否为命名元组。 |'
- en: '| [`api.types.is_iterator`](api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator
    "pandas.api.types.is_iterator")(obj) | Check if the object is an iterator. |'
  id: totrans-1048
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_iterator`](api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator
    "pandas.api.types.is_iterator")(obj) | 检查对象是否为迭代器。 |'
- en: Scalar introspection
  id: totrans-1049
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 标量内省
- en: '| [`api.types.is_bool`](api/pandas.api.types.is_bool.html#pandas.api.types.is_bool
    "pandas.api.types.is_bool")(obj) | Return True if given object is boolean. |'
  id: totrans-1050
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_bool`](api/pandas.api.types.is_bool.html#pandas.api.types.is_bool
    "pandas.api.types.is_bool")(obj) | 如果给定对象为布尔值，则返回 True。 |'
- en: '| [`api.types.is_complex`](api/pandas.api.types.is_complex.html#pandas.api.types.is_complex
    "pandas.api.types.is_complex")(obj) | Return True if given object is complex.
    |'
  id: totrans-1051
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_complex`](api/pandas.api.types.is_complex.html#pandas.api.types.is_complex
    "pandas.api.types.is_complex")(obj) | 如果给定对象为复数，则返回 True。 |'
- en: '| [`api.types.is_float`](api/pandas.api.types.is_float.html#pandas.api.types.is_float
    "pandas.api.types.is_float")(obj) | Return True if given object is float. |'
  id: totrans-1052
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_float`](api/pandas.api.types.is_float.html#pandas.api.types.is_float
    "pandas.api.types.is_float")(obj) | 如果给定对象为浮点数，则返回 True。 |'
- en: '| [`api.types.is_hashable`](api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable
    "pandas.api.types.is_hashable")(obj) | Return True if hash(obj) will succeed,
    False otherwise. |'
  id: totrans-1053
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_hashable`](api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable
    "pandas.api.types.is_hashable")(obj) | 如果hash(obj)成功，则返回True，否则返回False。 |'
- en: '| [`api.types.is_integer`](api/pandas.api.types.is_integer.html#pandas.api.types.is_integer
    "pandas.api.types.is_integer")(obj) | Return True if given object is integer.
    |'
  id: totrans-1054
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_integer`](api/pandas.api.types.is_integer.html#pandas.api.types.is_integer
    "pandas.api.types.is_integer")(obj) | 如果给定对象是整数，则返回True。 |'
- en: '| [`api.types.is_interval`](api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval")(obj) |  |'
  id: totrans-1055
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_interval`](api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval")(obj) |  |'
- en: '| [`api.types.is_number`](api/pandas.api.types.is_number.html#pandas.api.types.is_number
    "pandas.api.types.is_number")(obj) | Check if the object is a number. |'
  id: totrans-1056
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_number`](api/pandas.api.types.is_number.html#pandas.api.types.is_number
    "pandas.api.types.is_number")(obj) | 检查对象是否为数字。 |'
- en: '| [`api.types.is_re`](api/pandas.api.types.is_re.html#pandas.api.types.is_re
    "pandas.api.types.is_re")(obj) | Check if the object is a regex pattern instance.
    |'
  id: totrans-1057
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_re`](api/pandas.api.types.is_re.html#pandas.api.types.is_re
    "pandas.api.types.is_re")(obj) | 检查对象是否为正则表达式模式实例。 |'
- en: '| [`api.types.is_re_compilable`](api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable
    "pandas.api.types.is_re_compilable")(obj) | Check if the object can be compiled
    into a regex pattern instance. |'
  id: totrans-1058
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_re_compilable`](api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable
    "pandas.api.types.is_re_compilable")(obj) | 检查对象是否可以编译为正则表达式模式实例。 |'
- en: '| [`api.types.is_scalar`](api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar")(val) | Return True if given object is scalar. |'
  id: totrans-1059
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_scalar`](api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar")(val) | 如果给定对象是标量，则返回True。 |'
- en: Data type introspection
  id: totrans-1060
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 数据类型内省
- en: '| [`api.types.is_any_real_numeric_dtype`](api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of a real number dtype. |'
  id: totrans-1061
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_any_real_numeric_dtype`](api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为实数数据类型。
    |'
- en: '| [`api.types.is_bool_dtype`](api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype")(arr_or_dtype) | Check whether the provided array
    or dtype is of a boolean dtype. |'
  id: totrans-1062
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_bool_dtype`](api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为布尔数据类型。 |'
- en: '| [`api.types.is_categorical_dtype`](api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Categorical dtype. |'
  id: totrans-1063
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_categorical_dtype`](api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype")(arr_or_dtype) | (已弃用) 检查数组或数据类型是否为分类数据类型。
    |'
- en: '| [`api.types.is_complex_dtype`](api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype
    "pandas.api.types.is_complex_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a complex dtype. |'
  id: totrans-1064
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_complex_dtype`](api/pandas.api.types.is_complex_dtype.html#pandas.api.types.is_complex_dtype
    "pandas.api.types.is_complex_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为复数数据类型。 |'
- en: '| [`api.types.is_datetime64_any_dtype`](api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype
    "pandas.api.types.is_datetime64_any_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of the datetime64 dtype. |'
  id: totrans-1065
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_any_dtype`](api/pandas.api.types.is_datetime64_any_dtype.html#pandas.api.types.is_datetime64_any_dtype
    "pandas.api.types.is_datetime64_any_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为datetime64数据类型。
    |'
- en: '| [`api.types.is_datetime64_dtype`](api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype
    "pandas.api.types.is_datetime64_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the datetime64 dtype. |'
  id: totrans-1066
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_dtype`](api/pandas.api.types.is_datetime64_dtype.html#pandas.api.types.is_datetime64_dtype
    "pandas.api.types.is_datetime64_dtype")(arr_or_dtype) | 检查数组或数据类型是否为datetime64数据类型。
    |'
- en: '| [`api.types.is_datetime64_ns_dtype`](api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype
    "pandas.api.types.is_datetime64_ns_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of the datetime64[ns] dtype. |'
  id: totrans-1067
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64_ns_dtype`](api/pandas.api.types.is_datetime64_ns_dtype.html#pandas.api.types.is_datetime64_ns_dtype
    "pandas.api.types.is_datetime64_ns_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为datetime64[ns]数据类型。
    |'
- en: '| [`api.types.is_datetime64tz_dtype`](api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype
    "pandas.api.types.is_datetime64tz_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of a DatetimeTZDtype dtype. |'
  id: totrans-1068
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_datetime64tz_dtype`](api/pandas.api.types.is_datetime64tz_dtype.html#pandas.api.types.is_datetime64tz_dtype
    "pandas.api.types.is_datetime64tz_dtype")(arr_or_dtype) | （已弃用）检查数组或数据类型是否为DatetimeTZDtype数据类型。
    |'
- en: '| [`api.types.is_extension_array_dtype`](api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype
    "pandas.api.types.is_extension_array_dtype")(arr_or_dtype) | Check if an object
    is a pandas extension array type. |'
  id: totrans-1069
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_extension_array_dtype`](api/pandas.api.types.is_extension_array_dtype.html#pandas.api.types.is_extension_array_dtype
    "pandas.api.types.is_extension_array_dtype")(arr_or_dtype) | 检查对象是否为pandas扩展数组类型。
    |'
- en: '| [`api.types.is_float_dtype`](api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a float dtype. |'
  id: totrans-1070
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_float_dtype`](api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为浮点数数据类型。 |'
- en: '| [`api.types.is_int64_dtype`](api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype
    "pandas.api.types.is_int64_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    the provided array or dtype is of the int64 dtype. |'
  id: totrans-1071
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_int64_dtype`](api/pandas.api.types.is_int64_dtype.html#pandas.api.types.is_int64_dtype
    "pandas.api.types.is_int64_dtype")(arr_or_dtype) | （已弃用）检查提供的数组或数据类型是否为int64数据类型。
    |'
- en: '| [`api.types.is_integer_dtype`](api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of an integer dtype. |'
  id: totrans-1072
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_integer_dtype`](api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为整数数据类型。 |'
- en: '| [`api.types.is_interval_dtype`](api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Interval dtype. |'
  id: totrans-1073
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_interval_dtype`](api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype")(arr_or_dtype) | （已弃用）检查数组或数据类型是否为Interval数据类型。
    |'
- en: '| [`api.types.is_numeric_dtype`](api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of a numeric dtype. |'
  id: totrans-1074
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_numeric_dtype`](api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为数值数据类型。 |'
- en: '| [`api.types.is_object_dtype`](api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the object dtype. |'
  id: totrans-1075
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_object_dtype`](api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype")(arr_or_dtype) | 检查数组或数据类型是否为对象数据类型。 |'
- en: '| [`api.types.is_period_dtype`](api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype
    "pandas.api.types.is_period_dtype")(arr_or_dtype) | (DEPRECATED) Check whether
    an array-like or dtype is of the Period dtype. |'
  id: totrans-1076
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_period_dtype`](api/pandas.api.types.is_period_dtype.html#pandas.api.types.is_period_dtype
    "pandas.api.types.is_period_dtype")(arr_or_dtype) | （已弃用）检查数组或数据类型是否为Period数据类型。
    |'
- en: '| [`api.types.is_signed_integer_dtype`](api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of a signed integer dtype. |'
  id: totrans-1077
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_signed_integer_dtype`](api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为有��号整数数据类型。
    |'
- en: '| [`api.types.is_string_dtype`](api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype")(arr_or_dtype) | Check whether the provided
    array or dtype is of the string dtype. |'
  id: totrans-1078
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_string_dtype`](api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype")(arr_or_dtype) | 检查提供的数组或数据类型是否为字符串数据类型。 |'
- en: '| [`api.types.is_timedelta64_dtype`](api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype
    "pandas.api.types.is_timedelta64_dtype")(arr_or_dtype) | Check whether an array-like
    or dtype is of the timedelta64 dtype. |'
  id: totrans-1079
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_timedelta64_dtype`](api/pandas.api.types.is_timedelta64_dtype.html#pandas.api.types.is_timedelta64_dtype
    "pandas.api.types.is_timedelta64_dtype")(arr_or_dtype) | 检查数组或数据类型是否为timedelta64数据类型。
    |'
- en: '| [`api.types.is_timedelta64_ns_dtype`](api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype
    "pandas.api.types.is_timedelta64_ns_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of the timedelta64[ns] dtype. |'
  id: totrans-1080
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_timedelta64_ns_dtype`](api/pandas.api.types.is_timedelta64_ns_dtype.html#pandas.api.types.is_timedelta64_ns_dtype
    "pandas.api.types.is_timedelta64_ns_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为
    timedelta64[ns] dtype。 |'
- en: '| [`api.types.is_unsigned_integer_dtype`](api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype")(arr_or_dtype) | Check whether the
    provided array or dtype is of an unsigned integer dtype. |'
  id: totrans-1081
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_unsigned_integer_dtype`](api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype")(arr_or_dtype) | 检查提供的数组或 dtype 是否为无符号整数
    dtype。 |'
- en: '| [`api.types.is_sparse`](api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse
    "pandas.api.types.is_sparse")(arr) | (DEPRECATED) Check whether an array-like
    is a 1-D pandas sparse array. |'
  id: totrans-1082
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_sparse`](api/pandas.api.types.is_sparse.html#pandas.api.types.is_sparse
    "pandas.api.types.is_sparse")(arr) | (已弃用) 检查数组样式是否为 1-D pandas 稀疏数组。 |'
- en: Iterable introspection
  id: totrans-1083
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 可迭代内省
- en: '| [`api.types.is_dict_like`](api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like
    "pandas.api.types.is_dict_like")(obj) | Check if the object is dict-like. |'
  id: totrans-1084
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_dict_like`](api/pandas.api.types.is_dict_like.html#pandas.api.types.is_dict_like
    "pandas.api.types.is_dict_like")(obj) | 检查对象是否类似字典。 |'
- en: '| [`api.types.is_file_like`](api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like
    "pandas.api.types.is_file_like")(obj) | Check if the object is a file-like object.
    |'
  id: totrans-1085
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_file_like`](api/pandas.api.types.is_file_like.html#pandas.api.types.is_file_like
    "pandas.api.types.is_file_like")(obj) | 检查对象是否为文件样对象。 |'
- en: '| [`api.types.is_list_like`](api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like
    "pandas.api.types.is_list_like")(obj[, allow_sets]) | Check if the object is list-like.
    |'
  id: totrans-1086
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_list_like`](api/pandas.api.types.is_list_like.html#pandas.api.types.is_list_like
    "pandas.api.types.is_list_like")(obj[, allow_sets]) | 检查对象是否类似列表。 |'
- en: '| [`api.types.is_named_tuple`](api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple
    "pandas.api.types.is_named_tuple")(obj) | Check if the object is a named tuple.
    |'
  id: totrans-1087
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_named_tuple`](api/pandas.api.types.is_named_tuple.html#pandas.api.types.is_named_tuple
    "pandas.api.types.is_named_tuple")(obj) | 检查对象是否为命名元组。 |'
- en: '| [`api.types.is_iterator`](api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator
    "pandas.api.types.is_iterator")(obj) | Check if the object is an iterator. |'
  id: totrans-1088
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_iterator`](api/pandas.api.types.is_iterator.html#pandas.api.types.is_iterator
    "pandas.api.types.is_iterator")(obj) | 检查对象是否为迭代器。 |'
- en: Scalar introspection
  id: totrans-1089
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 标量内省
- en: '| [`api.types.is_bool`](api/pandas.api.types.is_bool.html#pandas.api.types.is_bool
    "pandas.api.types.is_bool")(obj) | Return True if given object is boolean. |'
  id: totrans-1090
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_bool`](api/pandas.api.types.is_bool.html#pandas.api.types.is_bool
    "pandas.api.types.is_bool")(obj) | 如果给定对象是布尔值，则返回 True。 |'
- en: '| [`api.types.is_complex`](api/pandas.api.types.is_complex.html#pandas.api.types.is_complex
    "pandas.api.types.is_complex")(obj) | Return True if given object is complex.
    |'
  id: totrans-1091
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_complex`](api/pandas.api.types.is_complex.html#pandas.api.types.is_complex
    "pandas.api.types.is_complex")(obj) | 如果给定对象是复数，则返回 True。 |'
- en: '| [`api.types.is_float`](api/pandas.api.types.is_float.html#pandas.api.types.is_float
    "pandas.api.types.is_float")(obj) | Return True if given object is float. |'
  id: totrans-1092
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_float`](api/pandas.api.types.is_float.html#pandas.api.types.is_float
    "pandas.api.types.is_float")(obj) | 如果给定对象是浮点数，则返回 True。 |'
- en: '| [`api.types.is_hashable`](api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable
    "pandas.api.types.is_hashable")(obj) | Return True if hash(obj) will succeed,
    False otherwise. |'
  id: totrans-1093
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_hashable`](api/pandas.api.types.is_hashable.html#pandas.api.types.is_hashable
    "pandas.api.types.is_hashable")(obj) | 如果 hash(obj) 成功，则返回 True；否则返回 False。 |'
- en: '| [`api.types.is_integer`](api/pandas.api.types.is_integer.html#pandas.api.types.is_integer
    "pandas.api.types.is_integer")(obj) | Return True if given object is integer.
    |'
  id: totrans-1094
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_integer`](api/pandas.api.types.is_integer.html#pandas.api.types.is_integer
    "pandas.api.types.is_integer")(obj) | 如果给定对象是整数，则返回 True。 |'
- en: '| [`api.types.is_interval`](api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval")(obj) |  |'
  id: totrans-1095
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_interval`](api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval")(obj) |  |'
- en: '| [`api.types.is_number`](api/pandas.api.types.is_number.html#pandas.api.types.is_number
    "pandas.api.types.is_number")(obj) | Check if the object is a number. |'
  id: totrans-1096
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_number`](api/pandas.api.types.is_number.html#pandas.api.types.is_number
    "pandas.api.types.is_number")(obj) | 检查对象是否为数字。 |'
- en: '| [`api.types.is_re`](api/pandas.api.types.is_re.html#pandas.api.types.is_re
    "pandas.api.types.is_re")(obj) | Check if the object is a regex pattern instance.
    |'
  id: totrans-1097
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_re`](api/pandas.api.types.is_re.html#pandas.api.types.is_re
    "pandas.api.types.is_re")(obj) | 检查对象是否为正则表达式模式实例。 |'
- en: '| [`api.types.is_re_compilable`](api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable
    "pandas.api.types.is_re_compilable")(obj) | Check if the object can be compiled
    into a regex pattern instance. |'
  id: totrans-1098
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_re_compilable`](api/pandas.api.types.is_re_compilable.html#pandas.api.types.is_re_compilable
    "pandas.api.types.is_re_compilable")(obj) | 检查对象是否可以编译为正则表达式模式实例。 |'
- en: '| [`api.types.is_scalar`](api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar")(val) | Return True if given object is scalar. |'
  id: totrans-1099
  prefs: []
  type: TYPE_TB
  zh: '| [`api.types.is_scalar`](api/pandas.api.types.is_scalar.html#pandas.api.types.is_scalar
    "pandas.api.types.is_scalar")(val) | 如果给定对象是标量，则返回True。 |'
