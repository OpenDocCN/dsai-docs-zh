- en: numpy.binary_repr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.binary_repr.html](https://numpy.org/doc/1.26/reference/generated/numpy.binary_repr.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return the binary representation of the input number as a string.
  prefs: []
  type: TYPE_NORMAL
- en: For negative numbers, if width is not given, a minus sign is added to the front.
    If width is given, the two’s complement of the number is returned, with respect
    to that width.
  prefs: []
  type: TYPE_NORMAL
- en: In a two’s-complement system negative numbers are represented by the two’s complement
    of the absolute value. This is the most common method of representing signed integers
    on computers [[1]](#r962252997619-1). A N-bit two’s-complement system can represent
    every integer in the range \(-2^{N-1}\) to \(+2^{N-1}-1\).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**num**int'
  prefs: []
  type: TYPE_NORMAL
- en: Only an integer decimal number can be used.
  prefs: []
  type: TYPE_NORMAL
- en: '**width**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The length of the returned string if *num* is positive, or the length of the
    two’s complement if *num* is negative, provided that *width* is at least a sufficient
    number of bits for *num* to be represented in the designated form.
  prefs: []
  type: TYPE_NORMAL
- en: If the *width* value is insufficient, it will be ignored, and *num* will be
    returned in binary (*num* > 0) or two’s complement (*num* < 0) form with its width
    equal to the minimum number of bits needed to represent the number in the designated
    form. This behavior is deprecated and will later raise an error.
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated since version 1.12.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**bin**str'
  prefs: []
  type: TYPE_NORMAL
- en: Binary representation of *num* or two’s complement of *num*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`base_repr`](numpy.base_repr.html#numpy.base_repr "numpy.base_repr")'
  prefs: []
  type: TYPE_NORMAL
- en: Return a string representation of a number in the given base system.
  prefs: []
  type: TYPE_NORMAL
- en: '[`bin`](https://docs.python.org/3/library/functions.html#bin "(in Python v3.11)")'
  prefs: []
  type: TYPE_NORMAL
- en: Python’s built-in binary representation generator of an integer.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: '[`binary_repr`](#numpy.binary_repr "numpy.binary_repr") is equivalent to using
    [`base_repr`](numpy.base_repr.html#numpy.base_repr "numpy.base_repr") with base
    2, but about 25x faster.'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Wikipedia, “Two’s complement”, [https://en.wikipedia.org/wiki/Two’s_complement](https://en.wikipedia.org/wiki/Two's_complement)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The two’s complement is returned when the input number is negative and width
    is specified:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
