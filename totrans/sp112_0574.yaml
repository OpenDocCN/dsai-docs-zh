- en: scipy.signal.besselap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.besselap.html#scipy.signal.besselap](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.besselap.html#scipy.signal.besselap)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return (z,p,k) for analog prototype of an Nth-order Bessel filter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**N**int'
  prefs: []
  type: TYPE_NORMAL
- en: The order of the filter.
  prefs: []
  type: TYPE_NORMAL
- en: '**norm**{‘phase’, ‘delay’, ‘mag’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Frequency normalization:'
  prefs: []
  type: TYPE_NORMAL
- en: '`phase`'
  prefs: []
  type: TYPE_NORMAL
- en: The filter is normalized such that the phase response reaches its midpoint at
    an angular (e.g., rad/s) cutoff frequency of 1\. This happens for both low-pass
    and high-pass filters, so this is the “phase-matched” case. [[6]](#r96887f5d7b02-6)
  prefs: []
  type: TYPE_NORMAL
- en: The magnitude response asymptotes are the same as a Butterworth filter of the
    same order with a cutoff of *Wn*.
  prefs: []
  type: TYPE_NORMAL
- en: This is the default, and matches MATLAB’s implementation.
  prefs: []
  type: TYPE_NORMAL
- en: '`delay`'
  prefs: []
  type: TYPE_NORMAL
- en: The filter is normalized such that the group delay in the passband is 1 (e.g.,
    1 second). This is the “natural” type obtained by solving Bessel polynomials
  prefs: []
  type: TYPE_NORMAL
- en: '`mag`'
  prefs: []
  type: TYPE_NORMAL
- en: The filter is normalized such that the gain magnitude is -3 dB at angular frequency
    1\. This is called “frequency normalization” by Bond. [[1]](#r96887f5d7b02-1)
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.18.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Zeros of the transfer function. Is always an empty array.
  prefs: []
  type: TYPE_NORMAL
- en: '**p**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Poles of the transfer function.
  prefs: []
  type: TYPE_NORMAL
- en: '**k**scalar'
  prefs: []
  type: TYPE_NORMAL
- en: Gain of the transfer function. For phase-normalized, this is always 1.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`bessel`](scipy.signal.bessel.html#scipy.signal.bessel "scipy.signal.bessel")'
  prefs: []
  type: TYPE_NORMAL
- en: Filter design function using this prototype
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: To find the pole locations, approximate starting points are generated [[2]](#r96887f5d7b02-2)
    for the zeros of the ordinary Bessel polynomial [[3]](#r96887f5d7b02-3), then
    the Aberth-Ehrlich method [[4]](#r96887f5d7b02-4) [[5]](#r96887f5d7b02-5) is used
    on the Kv(x) Bessel function to calculate more accurate zeros, and these locations
    are then inverted about the unit circle.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: C.R. Bond, “Bessel Filter Constants”, [http://www.crbond.com/papers/bsf.pdf](http://www.crbond.com/papers/bsf.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: Campos and Calderon, “Approximate closed-form formulas for the zeros of the
    Bessel Polynomials”, [arXiv:1105.0957](https://arxiv.org/abs/1105.0957).
  prefs: []
  type: TYPE_NORMAL
- en: '[[3](#id4)]'
  prefs: []
  type: TYPE_NORMAL
- en: Thomson, W.E., “Delay Networks having Maximally Flat Frequency Characteristics”,
    Proceedings of the Institution of Electrical Engineers, Part III, November 1949,
    Vol. 96, No. 44, pp. 487-490.
  prefs: []
  type: TYPE_NORMAL
- en: '[[4](#id5)]'
  prefs: []
  type: TYPE_NORMAL
- en: Aberth, “Iteration Methods for Finding all Zeros of a Polynomial Simultaneously”,
    Mathematics of Computation, Vol. 27, No. 122, April 1973
  prefs: []
  type: TYPE_NORMAL
- en: '[[5](#id6)]'
  prefs: []
  type: TYPE_NORMAL
- en: Ehrlich, “A modified Newton method for polynomials”, Communications of the ACM,
    Vol. 10, Issue 2, pp. 107-108, Feb. 1967, [DOI:10.1145/363067.363115](https://doi.org/10.1145/363067.363115)
  prefs: []
  type: TYPE_NORMAL
- en: '[[6](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Miller and Bohn, “A Bessel Filter Crossover, and Its Relation to Others”, RaneNote
    147, 1998, [https://www.ranecommercial.com/legacy/note147.html](https://www.ranecommercial.com/legacy/note147.html)
  prefs: []
  type: TYPE_NORMAL
