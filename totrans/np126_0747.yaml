- en: numpy.ma.cov
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.cov.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.cov.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Estimate the covariance matrix.
  prefs: []
  type: TYPE_NORMAL
- en: Except for the handling of missing data this function does the same as [`numpy.cov`](numpy.cov.html#numpy.cov
    "numpy.cov"). For more details and examples, see [`numpy.cov`](numpy.cov.html#numpy.cov
    "numpy.cov").
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, masked values are recognized as such. If *x* and *y* have the same
    shape, a common mask is allocated: if `x[i,j]` is masked, then `y[i,j]` will also
    be masked. Setting *allow_masked* to False will raise an exception if values are
    missing in either of the input arrays.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A 1-D or 2-D array containing multiple variables and observations. Each row
    of *x* represents a variable, and each column a single observation of all those
    variables. Also see *rowvar* below.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An additional set of variables and observations. *y* has the same shape as *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**rowvar**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'If *rowvar* is True (default), then each row represents a variable, with observations
    in the columns. Otherwise, the relationship is transposed: each column represents
    a variable, while the rows contain observations.'
  prefs: []
  type: TYPE_NORMAL
- en: '**bias**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Default normalization (False) is by `(N-1)`, where `N` is the number of observations
    given (unbiased estimate). If *bias* is True, then normalization is by `N`. This
    keyword can be overridden by the keyword `ddof` in numpy versions >= 1.5.
  prefs: []
  type: TYPE_NORMAL
- en: '**allow_masked**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'If True, masked values are propagated pair-wise: if a value is masked in *x*,
    the corresponding value is masked in *y*. If False, raises a *ValueError* exception
    when some values are missing.'
  prefs: []
  type: TYPE_NORMAL
- en: '**ddof**{None, int}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If not `None` normalization is by `(N - ddof)`, where `N` is the number of observations;
    this overrides the value implied by `bias`. The default value is `None`.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.5.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: Raised if some values are missing and *allow_masked* is False.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.cov`](numpy.cov.html#numpy.cov "numpy.cov")'
  prefs: []
  type: TYPE_NORMAL
