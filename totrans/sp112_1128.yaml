- en: scipy.stats.exponweib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.exponweib.html#scipy.stats.exponweib](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.exponweib.html#scipy.stats.exponweib)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: An exponentiated Weibull continuous random variable.
  prefs: []
  type: TYPE_NORMAL
- en: As an instance of the [`rv_continuous`](scipy.stats.rv_continuous.html#scipy.stats.rv_continuous
    "scipy.stats.rv_continuous") class, [`exponweib`](#scipy.stats.exponweib "scipy.stats.exponweib")
    object inherits from it a collection of generic methods (see below for the full
    list), and completes them with details specific for this particular distribution.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`weibull_min`](scipy.stats.weibull_min.html#scipy.stats.weibull_min "scipy.stats.weibull_min"),
    [`numpy.random.Generator.weibull`](https://numpy.org/devdocs/reference/random/generated/numpy.random.Generator.weibull.html#numpy.random.Generator.weibull
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The probability density function for [`exponweib`](#scipy.stats.exponweib "scipy.stats.exponweib")
    is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[f(x, a, c) = a c [1-\exp(-x^c)]^{a-1} \exp(-x^c) x^{c-1}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'and its cumulative distribution function is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[F(x, a, c) = [1-\exp(-x^c)]^a\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(x > 0\), \(a > 0\), \(c > 0\).
  prefs: []
  type: TYPE_NORMAL
- en: '[`exponweib`](#scipy.stats.exponweib "scipy.stats.exponweib") takes \(a\) and
    \(c\) as shape parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: \(a\) is the exponentiation parameter, with the special case \(a=1\) corresponding
    to the (non-exponentiated) Weibull distribution [`weibull_min`](scipy.stats.weibull_min.html#scipy.stats.weibull_min
    "scipy.stats.weibull_min").
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: \(c\) is the shape parameter of the non-exponentiated Weibull law.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The probability density above is defined in the “standardized” form. To shift
    and/or scale the distribution use the `loc` and `scale` parameters. Specifically,
    `exponweib.pdf(x, a, c, loc, scale)` is identically equivalent to `exponweib.pdf(y,
    a, c) / scale` with `y = (x - loc) / scale`. Note that shifting the location of
    a distribution does not make it a “noncentral” distribution; noncentral generalizations
    of some distributions are available in separate classes.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Exponentiated_Weibull_distribution](https://en.wikipedia.org/wiki/Exponentiated_Weibull_distribution)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the first four moments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Display the probability density function (`pdf`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, the distribution object can be called (as a function) to fix
    the shape, location and scale parameters. This returns a “frozen” RV object holding
    the given parameters fixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Freeze the distribution and display the frozen `pdf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Check accuracy of `cdf` and `ppf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate random numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'And compare the histogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-exponweib-1.png](../Images/c30566332dc4093ef173f0d7a36820c0.png)'
  prefs: []
  type: TYPE_IMG
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **rvs(a, c, loc=0, scale=1, size=1, random_state=None)** | Random variates.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **pdf(x, a, c, loc=0, scale=1)** | Probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(x, a, c, loc=0, scale=1)** | Log of the probability density function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **cdf(x, a, c, loc=0, scale=1)** | Cumulative distribution function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logcdf(x, a, c, loc=0, scale=1)** | Log of the cumulative distribution
    function. |'
  prefs: []
  type: TYPE_TB
- en: '| **sf(x, a, c, loc=0, scale=1)** | Survival function (also defined as `1 -
    cdf`, but *sf* is sometimes more accurate). |'
  prefs: []
  type: TYPE_TB
- en: '| **logsf(x, a, c, loc=0, scale=1)** | Log of the survival function. |'
  prefs: []
  type: TYPE_TB
- en: '| **ppf(q, a, c, loc=0, scale=1)** | Percent point function (inverse of `cdf`
    — percentiles). |'
  prefs: []
  type: TYPE_TB
- en: '| **isf(q, a, c, loc=0, scale=1)** | Inverse survival function (inverse of
    `sf`). |'
  prefs: []
  type: TYPE_TB
- en: '| **moment(order, a, c, loc=0, scale=1)** | Non-central moment of the specified
    order. |'
  prefs: []
  type: TYPE_TB
- en: '| **stats(a, c, loc=0, scale=1, moments=’mv’)** | Mean(‘m’), variance(‘v’),
    skew(‘s’), and/or kurtosis(‘k’). |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(a, c, loc=0, scale=1)** | (Differential) entropy of the RV. |'
  prefs: []
  type: TYPE_TB
- en: '| **fit(data)** | Parameter estimates for generic data. See [scipy.stats.rv_continuous.fit](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.fit.html#scipy.stats.rv_continuous.fit)
    for detailed documentation of the keyword arguments. |'
  prefs: []
  type: TYPE_TB
- en: '| **expect(func, args=(a, c), loc=0, scale=1, lb=None, ub=None, conditional=False,
    **kwds)** | Expected value of a function (of one argument) with respect to the
    distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **median(a, c, loc=0, scale=1)** | Median of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **mean(a, c, loc=0, scale=1)** | Mean of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **var(a, c, loc=0, scale=1)** | Variance of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **std(a, c, loc=0, scale=1)** | Standard deviation of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **interval(confidence, a, c, loc=0, scale=1)** | Confidence interval with
    equal areas around the median. |'
  prefs: []
  type: TYPE_TB
