["```py\nscipy.optimize.milp(c, *, integrality=None, bounds=None, constraints=None, options=None)\n```", "```py\nc @ x \n```", "```py\nb_l <= A @ x <= b_u\nl <= x <= u\nSpecified elements of x must be integers \n```", "```py\n>>> import numpy as np\n>>> c = -np.array([0, 1]) \n```", "```py\n>>> A = np.array([[-1, 1], [3, 2], [2, 3]])\n>>> b_u = np.array([1, 12, 12])\n>>> b_l = np.full_like(b_u, -np.inf) \n```", "```py\n>>> from scipy.optimize import LinearConstraint\n>>> constraints = LinearConstraint(A, b_l, b_u) \n```", "```py\n>>> integrality = np.ones_like(c) \n```", "```py\n>>> from scipy.optimize import milp\n>>> res = milp(c=c, constraints=constraints, integrality=integrality)\n>>> res.x\n[1.0, 2.0] \n```", "```py\n>>> res = milp(c=c, constraints=constraints)  # OR:\n>>> # from scipy.optimize import linprog; res = linprog(c, A, b_u)\n>>> res.x\n[1.8, 2.8] \n```"]