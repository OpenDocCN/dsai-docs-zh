- en: scipy.optimize.fmin_slsqp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fmin_slsqp.html#scipy.optimize.fmin_slsqp](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fmin_slsqp.html#scipy.optimize.fmin_slsqp)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Minimize a function using Sequential Least Squares Programming
  prefs: []
  type: TYPE_NORMAL
- en: Python interface function for the SLSQP Optimization subroutine originally implemented
    by Dieter Kraft.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**callable f(x,*args)'
  prefs: []
  type: TYPE_NORMAL
- en: Objective function. Must return a scalar.
  prefs: []
  type: TYPE_NORMAL
- en: '**x0**1-D ndarray of float'
  prefs: []
  type: TYPE_NORMAL
- en: Initial guess for the independent variable(s).
  prefs: []
  type: TYPE_NORMAL
- en: '**eqcons**list, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A list of functions of length n such that eqcons[j](x,*args) == 0.0 in a successfully
    optimized problem.
  prefs: []
  type: TYPE_NORMAL
- en: '**f_eqcons**callable f(x,*args), optional'
  prefs: []
  type: TYPE_NORMAL
- en: Returns a 1-D array in which each element must equal 0.0 in a successfully optimized
    problem. If f_eqcons is specified, eqcons is ignored.
  prefs: []
  type: TYPE_NORMAL
- en: '**ieqcons**list, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A list of functions of length n such that ieqcons[j](x,*args) >= 0.0 in a successfully
    optimized problem.
  prefs: []
  type: TYPE_NORMAL
- en: '**f_ieqcons**callable f(x,*args), optional'
  prefs: []
  type: TYPE_NORMAL
- en: Returns a 1-D ndarray in which each element must be greater or equal to 0.0
    in a successfully optimized problem. If f_ieqcons is specified, ieqcons is ignored.
  prefs: []
  type: TYPE_NORMAL
- en: '**bounds**list, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A list of tuples specifying the lower and upper bound for each independent variable
    [(xl0, xu0),(xl1, xu1),…] Infinite values will be interpreted as large floating
    values.
  prefs: []
  type: TYPE_NORMAL
- en: '**fprime**callable *f(x,*args)*, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A function that evaluates the partial derivatives of func.
  prefs: []
  type: TYPE_NORMAL
- en: '**fprime_eqcons**callable *f(x,*args)*, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A function of the form *f(x, *args)* that returns the m by n array of equality
    constraint normals. If not provided, the normals will be approximated. The array
    returned by fprime_eqcons should be sized as ( len(eqcons), len(x0) ).
  prefs: []
  type: TYPE_NORMAL
- en: '**fprime_ieqcons**callable *f(x,*args)*, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A function of the form *f(x, *args)* that returns the m by n array of inequality
    constraint normals. If not provided, the normals will be approximated. The array
    returned by fprime_ieqcons should be sized as ( len(ieqcons), len(x0) ).
  prefs: []
  type: TYPE_NORMAL
- en: '**args**sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Additional arguments passed to func and fprime.
  prefs: []
  type: TYPE_NORMAL
- en: '**iter**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The maximum number of iterations.
  prefs: []
  type: TYPE_NORMAL
- en: '**acc**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Requested accuracy.
  prefs: []
  type: TYPE_NORMAL
- en: '**iprint**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'The verbosity of fmin_slsqp :'
  prefs: []
  type: TYPE_NORMAL
- en: 'iprint <= 0 : Silent operation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'iprint == 1 : Print summary upon completion (default)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'iprint >= 2 : Print status of each iterate and summary'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**disp**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Overrides the iprint interface (preferred).
  prefs: []
  type: TYPE_NORMAL
- en: '**full_output**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If False, return only the minimizer of func (default). Otherwise, output final
    objective function and summary information.
  prefs: []
  type: TYPE_NORMAL
- en: '**epsilon**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The step size for finite-difference derivative estimates.
  prefs: []
  type: TYPE_NORMAL
- en: '**callback**callable, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Called after each iteration, as `callback(x)`, where `x` is the current parameter
    vector.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray of float'
  prefs: []
  type: TYPE_NORMAL
- en: The final minimizer of func.
  prefs: []
  type: TYPE_NORMAL
- en: '**fx**ndarray of float, if full_output is true'
  prefs: []
  type: TYPE_NORMAL
- en: The final value of the objective function.
  prefs: []
  type: TYPE_NORMAL
- en: '**its**int, if full_output is true'
  prefs: []
  type: TYPE_NORMAL
- en: The number of iterations.
  prefs: []
  type: TYPE_NORMAL
- en: '**imode**int, if full_output is true'
  prefs: []
  type: TYPE_NORMAL
- en: The exit mode from the optimizer (see below).
  prefs: []
  type: TYPE_NORMAL
- en: '**smode**string, if full_output is true'
  prefs: []
  type: TYPE_NORMAL
- en: Message describing the exit mode from the optimizer.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`minimize`](scipy.optimize.minimize.html#scipy.optimize.minimize "scipy.optimize.minimize")'
  prefs: []
  type: TYPE_NORMAL
- en: Interface to minimization algorithms for multivariate functions. See the ‘SLSQP’
    *method* in particular.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Exit modes are defined as follows
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Examples are given [in the tutorial](../../tutorial/optimize.html#tutorial-sqlsp).
  prefs: []
  type: TYPE_NORMAL
