["```py\nscipy.stats.multivariate_normal = <scipy.stats._multivariate.multivariate_normal_gen object>\n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy.stats import multivariate_normal \n```", "```py\n>>> x = np.linspace(0, 5, 10, endpoint=False)\n>>> y = multivariate_normal.pdf(x, mean=2.5, cov=0.5); y\narray([ 0.00108914,  0.01033349,  0.05946514,  0.20755375,  0.43939129,\n 0.56418958,  0.43939129,  0.20755375,  0.05946514,  0.01033349])\n>>> fig1 = plt.figure()\n>>> ax = fig1.add_subplot(111)\n>>> ax.plot(x, y)\n>>> plt.show() \n```", "```py\n>>> rv = multivariate_normal(mean=None, cov=1, allow_singular=False)\n>>> # Frozen object with the same methods but holding the given\n>>> # mean and covariance fixed. \n```", "```py\n>>> x, y = np.mgrid[-1:1:.01, -1:1:.01]\n>>> pos = np.dstack((x, y))\n>>> rv = multivariate_normal([0.5, -0.2], [[2.0, 0.3], [0.3, 0.5]])\n>>> fig2 = plt.figure()\n>>> ax2 = fig2.add_subplot(111)\n>>> ax2.contourf(x, y, rv.pdf(pos)) \n```"]