- en: scipy.linalg.expm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.expm.html#scipy.linalg.expm](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.linalg.expm.html#scipy.linalg.expm)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the matrix exponential of an array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Input with last two dimensions are square `(..., n, n)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**eA**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The resulting matrix exponential with the same shape of `A`
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Implements the algorithm given in [1], which is essentially a Pade approximation
    with a variable order that is decided based on the array data.
  prefs: []
  type: TYPE_NORMAL
- en: For input with size `n`, the memory usage is in the worst case in the order
    of `8*(n**2)`. If the input data is not of single and double precision of real
    and complex dtypes, it is copied to a new array.
  prefs: []
  type: TYPE_NORMAL
- en: For cases `n >= 400`, the exact 1-norm computation cost, breaks even with 1-norm
    estimation and from that point on the estimation scheme given in [2] is used to
    decide on the approximation order.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: Awad H. Al-Mohy and Nicholas J. Higham, (2009), “A New Scaling and Squaring
    Algorithm for the Matrix Exponential”, SIAM J. Matrix Anal. Appl. 31(3):970-989,
    [DOI:10.1137/09074721X](https://doi.org/10.1137/09074721X)
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: Nicholas J. Higham and Francoise Tisseur (2000), “A Block Algorithm for Matrix
    1-Norm Estimation, with an Application to 1-Norm Pseudospectra.” SIAM J. Matrix
    Anal. Appl. 21(4):1185-1201, [DOI:10.1137/S0895479899356080](https://doi.org/10.1137/S0895479899356080)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Matrix version of the formula exp(0) = 1:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Euler’s identity (exp(i*theta) = cos(theta) + i*sin(theta)) applied to a matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
