["```py\nscipy.linalg.qr_update(Q, R, u, v, overwrite_qruv=False, check_finite=True)\n```", "```py\n>>> import numpy as np\n>>> from scipy import linalg\n>>> a = np.array([[  3.,  -2.,  -2.],\n...               [  6.,  -9.,  -3.],\n...               [ -3.,  10.,   1.],\n...               [  6.,  -7.,   4.],\n...               [  7.,   8.,  -6.]])\n>>> q, r = linalg.qr(a) \n```", "```py\n>>> u = np.array([7., -2., 4., 3., 5.])\n>>> v = np.array([1., 3., -5.])\n>>> q_up, r_up = linalg.qr_update(q, r, u, v, False)\n>>> q_up\narray([[ 0.54073807,  0.18645997,  0.81707661, -0.02136616,  0.06902409],  # may vary (signs)\n [ 0.21629523, -0.63257324,  0.06567893,  0.34125904, -0.65749222],\n [ 0.05407381,  0.64757787, -0.12781284, -0.20031219, -0.72198188],\n [ 0.48666426, -0.30466718, -0.27487277, -0.77079214,  0.0256951 ],\n [ 0.64888568,  0.23001   , -0.4859845 ,  0.49883891,  0.20253783]])\n>>> r_up\narray([[ 18.49324201,  24.11691794, -44.98940746],  # may vary (signs)\n [  0\\.        ,  31.95894662, -27.40998201],\n [  0\\.        ,   0\\.        ,  -9.25451794],\n [  0\\.        ,   0\\.        ,   0\\.        ],\n [  0\\.        ,   0\\.        ,   0\\.        ]]) \n```", "```py\n>>> a_up = a + np.outer(u, v)\n>>> q_direct, r_direct = linalg.qr(a_up) \n```", "```py\n>>> np.allclose(np.dot(q_up, r_up), a_up)\nTrue \n```", "```py\n>>> np.allclose(np.dot(q_up.T, q_up), np.eye(5))\nTrue \n```", "```py\n>>> qe, re = linalg.qr(a, mode='economic')\n>>> qe_up, re_up = linalg.qr_update(qe, re, u, v, False)\n>>> qe_up\narray([[ 0.54073807,  0.18645997,  0.81707661],  # may vary (signs)\n [ 0.21629523, -0.63257324,  0.06567893],\n [ 0.05407381,  0.64757787, -0.12781284],\n [ 0.48666426, -0.30466718, -0.27487277],\n [ 0.64888568,  0.23001   , -0.4859845 ]])\n>>> re_up\narray([[ 18.49324201,  24.11691794, -44.98940746],  # may vary (signs)\n [  0\\.        ,  31.95894662, -27.40998201],\n [  0\\.        ,   0\\.        ,  -9.25451794]])\n>>> np.allclose(np.dot(qe_up, re_up), a_up)\nTrue\n>>> np.allclose(np.dot(qe_up.T, qe_up), np.eye(3))\nTrue \n```", "```py\n>>> u2 = np.array([[ 7., -1,],\n...                [-2.,  4.],\n...                [ 4.,  2.],\n...                [ 3., -6.],\n...                [ 5.,  3.]])\n>>> v2 = np.array([[ 1., 2.],\n...                [ 3., 4.],\n...                [-5., 2]])\n>>> q_up2, r_up2 = linalg.qr_update(q, r, u2, v2, False)\n>>> q_up2\narray([[-0.33626508, -0.03477253,  0.61956287, -0.64352987, -0.29618884],  # may vary (signs)\n [-0.50439762,  0.58319694, -0.43010077, -0.33395279,  0.33008064],\n [-0.21016568, -0.63123106,  0.0582249 , -0.13675572,  0.73163206],\n [ 0.12609941,  0.49694436,  0.64590024,  0.31191919,  0.47187344],\n [-0.75659643, -0.11517748,  0.10284903,  0.5986227 , -0.21299983]])\n>>> r_up2\narray([[-23.79075451, -41.1084062 ,  24.71548348],  # may vary (signs)\n [  0\\.        , -33.83931057,  11.02226551],\n [  0\\.        ,   0\\.        ,  48.91476811],\n [  0\\.        ,   0\\.        ,   0\\.        ],\n [  0\\.        ,   0\\.        ,   0\\.        ]]) \n```", "```py\n>>> a_up2 = a + np.dot(u2, v2.T)\n>>> np.allclose(a_up2, np.dot(q_up2, r_up2))\nTrue\n>>> np.allclose(np.dot(q_up2.T, q_up2), np.eye(5))\nTrue \n```"]