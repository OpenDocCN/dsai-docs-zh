- en: numpy.nanquantile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.nanquantile.html](https://numpy.org/doc/1.26/reference/generated/numpy.nanquantile.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the qth quantile of the data along the specified axis, while ignoring
    nan values. Returns the qth quantile(s) of the array elements.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.15.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array or object that can be converted to an array, containing nan values
    to be ignored
  prefs: []
  type: TYPE_NORMAL
- en: '**q**array_like of float'
  prefs: []
  type: TYPE_NORMAL
- en: Probability or sequence of probabilities for the quantiles to compute. Values
    must be between 0 and 1 inclusive.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{int, tuple of int, None}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis or axes along which the quantiles are computed. The default is to compute
    the quantile(s) along a flattened version of the array.
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Alternative output array in which to place the result. It must have the same
    shape and buffer length as the expected output, but the type (of the output) will
    be cast if necessary.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_input**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, then allow the input array *a* to be modified by intermediate calculations,
    to save memory. In this case, the contents of the input *a* after this function
    completes is undefined.
  prefs: []
  type: TYPE_NORMAL
- en: '**method**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'This parameter specifies the method to use for estimating the quantile. There
    are many different methods, some unique to NumPy. See the notes for explanation.
    The options sorted by their R type as summarized in the H&F paper [[1]](#r02de30f409d2-1)
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘inverted_cdf’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ‘averaged_inverted_cdf’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ‘closest_observation’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ‘interpolated_inverted_cdf’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ‘hazen’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ‘weibull’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ‘linear’ (default)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ‘median_unbiased’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ‘normal_unbiased’
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The first three methods are discontinuous. NumPy further defines the following
    discontinuous variations of the default ‘linear’ (7.) option:'
  prefs: []
  type: TYPE_NORMAL
- en: ‘lower’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘higher’,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘midpoint’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ‘nearest’
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Changed in version 1.22.0: This argument was previously called “interpolation”
    and only offered the “linear” default and last four options.'
  prefs: []
  type: TYPE_NORMAL
- en: '**keepdims**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the original array *a*.
  prefs: []
  type: TYPE_NORMAL
- en: If this is anything but the default value it will be passed through (in the
    special case of an empty array) to the [`mean`](numpy.mean.html#numpy.mean "numpy.mean")
    function of the underlying array. If the array is a sub-class and [`mean`](numpy.mean.html#numpy.mean
    "numpy.mean") does not have the kwarg *keepdims* this will raise a RuntimeError.
  prefs: []
  type: TYPE_NORMAL
- en: '**interpolation**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated name for the method keyword argument.
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated since version 1.22.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**quantile**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: If *q* is a single probability and *axis=None*, then the result is a scalar.
    If multiple probability levels are given, first axis of the result corresponds
    to the quantiles. The other axes are the axes that remain after the reduction
    of *a*. If the input contains integers or floats smaller than `float64`, the output
    data-type is `float64`. Otherwise, the output data-type is the same as that of
    the input. If *out* is specified, that array is returned instead.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`quantile`](numpy.quantile.html#numpy.quantile "numpy.quantile")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`nanmean`](numpy.nanmean.html#numpy.nanmean "numpy.nanmean"), [`nanmedian`](numpy.nanmedian.html#numpy.nanmedian
    "numpy.nanmedian")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`nanmedian`](numpy.nanmedian.html#numpy.nanmedian "numpy.nanmedian")'
  prefs: []
  type: TYPE_NORMAL
- en: equivalent to `nanquantile(..., 0.5)`
  prefs: []
  type: TYPE_NORMAL
- en: '[`nanpercentile`](numpy.nanpercentile.html#numpy.nanpercentile "numpy.nanpercentile")'
  prefs: []
  type: TYPE_NORMAL
- en: same as nanquantile, but with q in the range [0, 100].
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For more information please see [`numpy.quantile`](numpy.quantile.html#numpy.quantile
    "numpy.quantile")
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: R. J. Hyndman and Y. Fan, “Sample quantiles in statistical packages,” The American
    Statistician, 50(4), pp. 361-365, 1996
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
