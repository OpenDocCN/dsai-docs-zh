- en: pandas.Series
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.Series
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: One-dimensional ndarray with axis labels (including time series).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 包含轴标签的一维ndarray（包括时间序列）。
- en: Labels need not be unique but must be a hashable type. The object supports both
    integer- and label-based indexing and provides a host of methods for performing
    operations involving the index. Statistical methods from ndarray have been overridden
    to automatically exclude missing data (currently represented as NaN).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 标签不必是唯一的，但必须是可哈希的类型。该对象支持基于整数和标签的索引，并提供了许多涉及索引的操作方法。ndarray的统计方法已被覆盖以自动排除缺失数据（当前表示为NaN）。
- en: Operations between Series (+, -, /, *, **) align values based on their associated
    index values– they need not be the same length. The result index will be the sorted
    union of the two indexes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Series之间的运算（+、-、/、*、**）会根据它们关联的索引值对齐数据，这些索引值不需要相同长度。结果索引将是这两个索引的排序并集。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**data**array-like, Iterable, dict, or scalar value'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**data**类似数组，可迭代对象，字典或标量值'
- en: Contains data stored in Series. If data is a dict, argument order is maintained.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 包含存储在Series中的数据。如果数据是一个字典，则保持参数顺序。
- en: '**index**array-like or Index (1d)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**index**类似数组或索引（1d）'
- en: Values must be hashable and have the same length as data. Non-unique index values
    are allowed. Will default to RangeIndex (0, 1, 2, …, n) if not provided. If data
    is dict-like and index is None, then the keys in the data are used as the index.
    If the index is not None, the resulting Series is reindexed with the index values.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 值必须是可哈希的，并且与数据具有相同的长度。允许非唯一索引值。如果未提供，将默认为RangeIndex（0、1、2、...、n）。如果数据类似字典并且索引为None，则使用数据中的键作为索引。如果索引不为None，则生成的Series将根据索引值重新索引。
- en: '**dtype**str, numpy.dtype, or ExtensionDtype, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**str、numpy.dtype或ExtensionDtype，可选'
- en: Data type for the output Series. If not specified, this will be inferred from
    data. See the [user guide](../../user_guide/basics.html#basics-dtypes) for more
    usages.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 输出Series的数据类型。如果未指定，则将从数据中推断出。请参阅[用户指南](../../user_guide/basics.html#basics-dtypes)获取更多用法。
- en: '**name**Hashable, default None'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**name**可哈希，默认为None'
- en: The name to give to the Series.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要赋予Series的名称。
- en: '**copy**bool, default False'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**copy**bool，默认为False'
- en: Copy input data. Only affects Series or 1d ndarray input. See examples.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 复制输入数据。仅影响Series或1d ndarray输入。见示例。
- en: Notes
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Please reference the [User Guide](../../user_guide/dsintro.html#basics-series)
    for more information.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参考[用户指南](../../user_guide/dsintro.html#basics-series)。
- en: Examples
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Constructing Series from a dictionary with an Index specified
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从指定了索引的字典构建Series
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The keys of the dictionary match with the Index values, hence the Index values
    have no effect.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 字典的键与索引值匹配，因此索引值没有影响。
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that the Index is first build with the keys from the dictionary. After
    this the Series is reindexed with the given Index values, hence we get all NaN
    as a result.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，索引首先是由字典中的键构建的。之后，Series会根据给定的索引值重新索引，因此我们会得到全部NaN作为结果。
- en: Constructing Series from a list with copy=False.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用copy=False从列表构建Series。
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Due to input data type the Series has a copy of the original data even though
    copy=False, so the data is unchanged.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 由于输入数据类型，即使copy=False，Series也会复制原始数据的副本，因此数据不会改变。
- en: Constructing Series from a 1d ndarray with copy=False.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用copy=False从1d ndarray构建Series。
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Due to input data type the Series has a view on the original data, so the data
    is changed as well.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 由于输入数据类型，Series对原始数据有一个视图，因此数据也会发生变化。
- en: Attributes
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`T`](pandas.Series.T.html#pandas.Series.T "pandas.Series.T") | Return the
    transpose, which is by definition self. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`T`](pandas.Series.T.html#pandas.Series.T "pandas.Series.T") | 返回转置，按定义为自身。
    |'
- en: '| [`array`](pandas.Series.array.html#pandas.Series.array "pandas.Series.array")
    | The ExtensionArray of the data backing this Series or Index. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`array`](pandas.Series.array.html#pandas.Series.array "pandas.Series.array")
    | 支持此Series或Index的数据的ExtensionArray。 |'
- en: '| [`at`](pandas.Series.at.html#pandas.Series.at "pandas.Series.at") | Access
    a single value for a row/column label pair. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`at`](pandas.Series.at.html#pandas.Series.at "pandas.Series.at") | 访问行/列标签对的单个值。
    |'
- en: '| [`attrs`](pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    | Dictionary of global attributes of this dataset. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`attrs`](pandas.Series.attrs.html#pandas.Series.attrs "pandas.Series.attrs")
    | 此数据集的全局属性字典。 |'
- en: '| `axes` | Return a list of the row axis labels. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| `axes` | 返回行轴标签列表。 |'
- en: '| [`dtype`](pandas.Series.dtype.html#pandas.Series.dtype "pandas.Series.dtype")
    | Return the dtype object of the underlying data. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`dtype`](pandas.Series.dtype.html#pandas.Series.dtype "pandas.Series.dtype")
    | 返回基础数据的 dtype 对象。 |'
- en: '| [`dtypes`](pandas.Series.dtypes.html#pandas.Series.dtypes "pandas.Series.dtypes")
    | Return the dtype object of the underlying data. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`dtypes`](pandas.Series.dtypes.html#pandas.Series.dtypes "pandas.Series.dtypes")
    | 返回基础数据的 dtype 对象。 |'
- en: '| [`empty`](pandas.Series.empty.html#pandas.Series.empty "pandas.Series.empty")
    | Indicator whether Series/DataFrame is empty. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`empty`](pandas.Series.empty.html#pandas.Series.empty "pandas.Series.empty")
    | 指示 Series/DataFrame 是否为空。 |'
- en: '| [`flags`](pandas.Series.flags.html#pandas.Series.flags "pandas.Series.flags")
    | Get the properties associated with this pandas object. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`flags`](pandas.Series.flags.html#pandas.Series.flags "pandas.Series.flags")
    | 获取与此 pandas 对象关联的属性。 |'
- en: '| [`hasnans`](pandas.Series.hasnans.html#pandas.Series.hasnans "pandas.Series.hasnans")
    | Return True if there are any NaNs. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`hasnans`](pandas.Series.hasnans.html#pandas.Series.hasnans "pandas.Series.hasnans")
    | 如果存在任何 NaN，则返回 True。 |'
- en: '| [`iat`](pandas.Series.iat.html#pandas.Series.iat "pandas.Series.iat") | Access
    a single value for a row/column pair by integer position. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`iat`](pandas.Series.iat.html#pandas.Series.iat "pandas.Series.iat") | 通过整数位置访问行/列对的单个值。
    |'
- en: '| [`iloc`](pandas.Series.iloc.html#pandas.Series.iloc "pandas.Series.iloc")
    | (DEPRECATED) Purely integer-location based indexing for selection by position.
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`iloc`](pandas.Series.iloc.html#pandas.Series.iloc "pandas.Series.iloc")
    | （已弃用）纯粹基于整数位置的索引，用于按位置进行选择。 |'
- en: '| [`index`](pandas.Series.index.html#pandas.Series.index "pandas.Series.index")
    | The index (axis labels) of the Series. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`index`](pandas.Series.index.html#pandas.Series.index "pandas.Series.index")
    | Series 的索引（轴标签）。 |'
- en: '| [`is_monotonic_decreasing`](pandas.Series.is_monotonic_decreasing.html#pandas.Series.is_monotonic_decreasing
    "pandas.Series.is_monotonic_decreasing") | Return boolean if values in the object
    are monotonically decreasing. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`is_monotonic_decreasing`](pandas.Series.is_monotonic_decreasing.html#pandas.Series.is_monotonic_decreasing
    "pandas.Series.is_monotonic_decreasing") | 如果对象中的值是单调递减的，则返回布尔值。 |'
- en: '| [`is_monotonic_increasing`](pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") | Return boolean if values in the object
    are monotonically increasing. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`is_monotonic_increasing`](pandas.Series.is_monotonic_increasing.html#pandas.Series.is_monotonic_increasing
    "pandas.Series.is_monotonic_increasing") | 如果对象中的值是单调递增的，则返回布尔值。 |'
- en: '| [`is_unique`](pandas.Series.is_unique.html#pandas.Series.is_unique "pandas.Series.is_unique")
    | Return boolean if values in the object are unique. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`is_unique`](pandas.Series.is_unique.html#pandas.Series.is_unique "pandas.Series.is_unique")
    | 如果对象中的值是唯一的，则返回布尔值。 |'
- en: '| [`loc`](pandas.Series.loc.html#pandas.Series.loc "pandas.Series.loc") | Access
    a group of rows and columns by label(s) or a boolean array. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`loc`](pandas.Series.loc.html#pandas.Series.loc "pandas.Series.loc") | 通过标签或布尔数组访问一组行和列。
    |'
- en: '| [`name`](pandas.Series.name.html#pandas.Series.name "pandas.Series.name")
    | Return the name of the Series. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`name`](pandas.Series.name.html#pandas.Series.name "pandas.Series.name")
    | 返回 Series 的名称。 |'
- en: '| [`nbytes`](pandas.Series.nbytes.html#pandas.Series.nbytes "pandas.Series.nbytes")
    | Return the number of bytes in the underlying data. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`nbytes`](pandas.Series.nbytes.html#pandas.Series.nbytes "pandas.Series.nbytes")
    | 返回基础数据中的字节数。 |'
- en: '| [`ndim`](pandas.Series.ndim.html#pandas.Series.ndim "pandas.Series.ndim")
    | Number of dimensions of the underlying data, by definition 1. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`ndim`](pandas.Series.ndim.html#pandas.Series.ndim "pandas.Series.ndim")
    | 基础数据的维数，根据定义为 1。 |'
- en: '| [`shape`](pandas.Series.shape.html#pandas.Series.shape "pandas.Series.shape")
    | Return a tuple of the shape of the underlying data. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`shape`](pandas.Series.shape.html#pandas.Series.shape "pandas.Series.shape")
    | 返回基础数据的形状的元组。 |'
- en: '| [`size`](pandas.Series.size.html#pandas.Series.size "pandas.Series.size")
    | Return the number of elements in the underlying data. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`size`](pandas.Series.size.html#pandas.Series.size "pandas.Series.size")
    | 返回基础数据中的元素数。 |'
- en: '| [`values`](pandas.Series.values.html#pandas.Series.values "pandas.Series.values")
    | Return Series as ndarray or ndarray-like depending on the dtype. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`values`](pandas.Series.values.html#pandas.Series.values "pandas.Series.values")
    | 根据 dtype 返回 Series 作为 ndarray 或类似 ndarray。 |'
- en: Methods
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`abs`](pandas.Series.abs.html#pandas.Series.abs "pandas.Series.abs")() |
    Return a Series/DataFrame with absolute numeric value of each element. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`abs`](pandas.Series.abs.html#pandas.Series.abs "pandas.Series.abs")() |
    返回每个元素的绝对数值的 Series/DataFrame。 |'
- en: '| [`add`](pandas.Series.add.html#pandas.Series.add "pandas.Series.add")(other[, level, fill_value, axis])
    | Return Addition of series and other, element-wise (binary operator add). |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`add`](pandas.Series.add.html#pandas.Series.add "pandas.Series.add")(other[,
    level, fill_value, axis]) | 返回系列和其他的加法，逐元素进行（二进制运算符 add）。 |'
- en: '| [`add_prefix`](pandas.Series.add_prefix.html#pandas.Series.add_prefix "pandas.Series.add_prefix")(prefix[, axis])
    | Prefix labels with string prefix. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`add_prefix`](pandas.Series.add_prefix.html#pandas.Series.add_prefix "pandas.Series.add_prefix")(prefix[, axis])
    | 使用字符串前缀为标签添加前缀。 |'
- en: '| [`add_suffix`](pandas.Series.add_suffix.html#pandas.Series.add_suffix "pandas.Series.add_suffix")(suffix[, axis])
    | Suffix labels with string suffix. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`add_suffix`](pandas.Series.add_suffix.html#pandas.Series.add_suffix "pandas.Series.add_suffix")(suffix[, axis])
    | 使用字符串后缀为标签添加后缀。 |'
- en: '| [`agg`](pandas.Series.agg.html#pandas.Series.agg "pandas.Series.agg")([func, axis])
    | Aggregate using one or more operations over the specified axis. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`agg`](pandas.Series.agg.html#pandas.Series.agg "pandas.Series.agg")([func, axis])
    | 使用一个或多个操作在指定轴上进行聚合。 |'
- en: '| [`aggregate`](pandas.Series.aggregate.html#pandas.Series.aggregate "pandas.Series.aggregate")([func, axis])
    | Aggregate using one or more operations over the specified axis. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`aggregate`](pandas.Series.aggregate.html#pandas.Series.aggregate "pandas.Series.aggregate")([func, axis])
    | 使用一个或多个操作在指定轴上进行聚合。 |'
- en: '| [`align`](pandas.Series.align.html#pandas.Series.align "pandas.Series.align")(other[, join, axis, level, copy, ...])
    | Align two objects on their axes with the specified join method. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`align`](pandas.Series.align.html#pandas.Series.align "pandas.Series.align")(other[, join, axis, level, copy, ...])
    | 使用指定的连接方法在它们的轴上对齐两个对象。 |'
- en: '| [`all`](pandas.Series.all.html#pandas.Series.all "pandas.Series.all")([axis, bool_only, skipna])
    | Return whether all elements are True, potentially over an axis. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`all`](pandas.Series.all.html#pandas.Series.all "pandas.Series.all")([axis, bool_only, skipna])
    | 返回是否所有元素都为 True，可能在一个轴上。 |'
- en: '| [`any`](pandas.Series.any.html#pandas.Series.any "pandas.Series.any")(*[, axis, bool_only, skipna])
    | Return whether any element is True, potentially over an axis. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`any`](pandas.Series.any.html#pandas.Series.any "pandas.Series.any")(*[, axis, bool_only, skipna])
    | 返回是否有任何元素为 True，可能在一个轴上。 |'
- en: '| [`apply`](pandas.Series.apply.html#pandas.Series.apply "pandas.Series.apply")(func[, convert_dtype, args, by_row])
    | Invoke function on values of Series. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`apply`](pandas.Series.apply.html#pandas.Series.apply "pandas.Series.apply")(func[, convert_dtype, args, by_row])
    | 对 Series 的值调用函数。 |'
- en: '| [`argmax`](pandas.Series.argmax.html#pandas.Series.argmax "pandas.Series.argmax")([axis, skipna])
    | Return int position of the largest value in the Series. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`argmax`](pandas.Series.argmax.html#pandas.Series.argmax "pandas.Series.argmax")([axis, skipna])
    | 返回 Series 中最大值的整数位置。 |'
- en: '| [`argmin`](pandas.Series.argmin.html#pandas.Series.argmin "pandas.Series.argmin")([axis, skipna])
    | Return int position of the smallest value in the Series. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`argmin`](pandas.Series.argmin.html#pandas.Series.argmin "pandas.Series.argmin")([axis, skipna])
    | 返回 Series 中最小值的整数位置。 |'
- en: '| [`argsort`](pandas.Series.argsort.html#pandas.Series.argsort "pandas.Series.argsort")([axis, kind, order, stable])
    | Return the integer indices that would sort the Series values. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`argsort`](pandas.Series.argsort.html#pandas.Series.argsort "pandas.Series.argsort")([axis, kind, order, stable])
    | 返回将 Series 值排序的整数索引。 |'
- en: '| [`asfreq`](pandas.Series.asfreq.html#pandas.Series.asfreq "pandas.Series.asfreq")(freq[, method, how, normalize, ...])
    | Convert time series to specified frequency. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`asfreq`](pandas.Series.asfreq.html#pandas.Series.asfreq "pandas.Series.asfreq")(freq[, method, how, normalize, ...])
    | 将时间序列转换为指定频率。 |'
- en: '| [`asof`](pandas.Series.asof.html#pandas.Series.asof "pandas.Series.asof")(where[, subset])
    | Return the last row(s) without any NaNs before where. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`asof`](pandas.Series.asof.html#pandas.Series.asof "pandas.Series.asof")(where[, subset])
    | 返回在指定位置之前没有任何 NaN 的最后一行。 |'
- en: '| [`astype`](pandas.Series.astype.html#pandas.Series.astype "pandas.Series.astype")(dtype[, copy, errors])
    | Cast a pandas object to a specified dtype `dtype`. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`astype`](pandas.Series.astype.html#pandas.Series.astype "pandas.Series.astype")(dtype[, copy, errors])
    | 将 pandas 对象转换为指定的数据类型 `dtype`。 |'
- en: '| [`at_time`](pandas.Series.at_time.html#pandas.Series.at_time "pandas.Series.at_time")(time[, asof, axis])
    | Select values at particular time of day (e.g., 9:30AM). |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`at_time`](pandas.Series.at_time.html#pandas.Series.at_time "pandas.Series.at_time")(time[, asof, axis])
    | 选择特定时间的值（例如，上午 9:30）。 |'
- en: '| [`autocorr`](pandas.Series.autocorr.html#pandas.Series.autocorr "pandas.Series.autocorr")([lag])
    | Compute the lag-N autocorrelation. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`autocorr`](pandas.Series.autocorr.html#pandas.Series.autocorr "pandas.Series.autocorr")([lag])
    | 计算滞后 N 的自相关性。 |'
- en: '| [`backfill`](pandas.Series.backfill.html#pandas.Series.backfill "pandas.Series.backfill")(*[, axis, inplace, limit, downcast])
    | (DEPRECATED) Fill NA/NaN values by using the next valid observation to fill
    the gap. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`backfill`](pandas.Series.backfill.html#pandas.Series.backfill "pandas.Series.backfill")(*[, axis, inplace, limit, downcast])
    | (已弃用) 使用下一个有效观察值填充 NA/NaN 值以填补间隙。 |'
- en: '| [`between`](pandas.Series.between.html#pandas.Series.between "pandas.Series.between")(left, right[, inclusive])
    | Return boolean Series equivalent to left <= series <= right. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`between`](pandas.Series.between.html#pandas.Series.between "pandas.Series.between")(left, right[, inclusive])
    | 返回布尔 Series，等效于 left <= series <= right。 |'
- en: '| [`between_time`](pandas.Series.between_time.html#pandas.Series.between_time
    "pandas.Series.between_time")(start_time, end_time[, ...]) | Select values between
    particular times of the day (e.g., 9:00-9:30 AM). |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`between_time`](pandas.Series.between_time.html#pandas.Series.between_time
    "pandas.Series.between_time")(start_time, end_time[, ...]) | 选择一天中特定时间段之间的值（例如，上午
    9:00-9:30）。 |'
- en: '| [`bfill`](pandas.Series.bfill.html#pandas.Series.bfill "pandas.Series.bfill")(*[, axis, inplace, limit, limit_area, ...])
    | Fill NA/NaN values by using the next valid observation to fill the gap. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`bfill`](pandas.Series.bfill.html#pandas.Series.bfill "pandas.Series.bfill")(*[, axis, inplace, limit, limit_area, ...])
    | 使用下一个有效观测值填充 NA/NaN 值。 |'
- en: '| [`bool`](pandas.Series.bool.html#pandas.Series.bool "pandas.Series.bool")()
    | (DEPRECATED) Return the bool of a single element Series or DataFrame. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`bool`](pandas.Series.bool.html#pandas.Series.bool "pandas.Series.bool")()
    | （已弃用）返回单个元素 Series 或 DataFrame 的布尔值。 |'
- en: '| [`case_when`](pandas.Series.case_when.html#pandas.Series.case_when "pandas.Series.case_when")(caselist)
    | Replace values where the conditions are True. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`case_when`](pandas.Series.case_when.html#pandas.Series.case_when "pandas.Series.case_when")(caselist)
    | 替换条件为 True 的值。 |'
- en: '| [`clip`](pandas.Series.clip.html#pandas.Series.clip "pandas.Series.clip")([lower, upper, axis, inplace])
    | Trim values at input threshold(s). |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`clip`](pandas.Series.clip.html#pandas.Series.clip "pandas.Series.clip")([lower, upper, axis, inplace])
    | 在输入阈值处修剪值。 |'
- en: '| [`combine`](pandas.Series.combine.html#pandas.Series.combine "pandas.Series.combine")(other, func[, fill_value])
    | Combine the Series with a Series or scalar according to func. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`combine`](pandas.Series.combine.html#pandas.Series.combine "pandas.Series.combine")(other, func[, fill_value])
    | 根据 func 将 Series 与 Series 或标量组合。 |'
- en: '| [`combine_first`](pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first")(other) | Update null elements with value in the
    same location in ''other''. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`combine_first`](pandas.Series.combine_first.html#pandas.Series.combine_first
    "pandas.Series.combine_first")(other) | 使用 ''other'' 中相同位置的值更新空元素。 |'
- en: '| [`compare`](pandas.Series.compare.html#pandas.Series.compare "pandas.Series.compare")(other[, align_axis, keep_shape, ...])
    | Compare to another Series and show the differences. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`compare`](pandas.Series.compare.html#pandas.Series.compare "pandas.Series.compare")(other[, align_axis, keep_shape, ...])
    | 与另一个 Series 进行比较并显示差异。 |'
- en: '| [`convert_dtypes`](pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")([infer_objects, ...]) | Convert columns to the
    best possible dtypes using dtypes supporting `pd.NA`. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`convert_dtypes`](pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")([infer_objects, ...]) | 使用支持 `pd.NA` 的 dtypes
    将列转换为最佳可能的 dtypes。 |'
- en: '| [`copy`](pandas.Series.copy.html#pandas.Series.copy "pandas.Series.copy")([deep])
    | Make a copy of this object''s indices and data. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`copy`](pandas.Series.copy.html#pandas.Series.copy "pandas.Series.copy")([deep])
    | 复制此对象的索引和数据。 |'
- en: '| [`corr`](pandas.Series.corr.html#pandas.Series.corr "pandas.Series.corr")(other[, method, min_periods])
    | Compute correlation with other Series, excluding missing values. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`corr`](pandas.Series.corr.html#pandas.Series.corr "pandas.Series.corr")(other[, method, min_periods])
    | 计算与其他 Series 的相关性，不包括缺失值。 |'
- en: '| [`count`](pandas.Series.count.html#pandas.Series.count "pandas.Series.count")()
    | Return number of non-NA/null observations in the Series. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`count`](pandas.Series.count.html#pandas.Series.count "pandas.Series.count")()
    | 返回 Series 中非 NA/null 观测值的数量。 |'
- en: '| [`cov`](pandas.Series.cov.html#pandas.Series.cov "pandas.Series.cov")(other[, min_periods, ddof])
    | Compute covariance with Series, excluding missing values. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`cov`](pandas.Series.cov.html#pandas.Series.cov "pandas.Series.cov")(other[, min_periods, ddof])
    | 计算与 Series 的协方差，不包括缺失值。 |'
- en: '| [`cummax`](pandas.Series.cummax.html#pandas.Series.cummax "pandas.Series.cummax")([axis, skipna])
    | Return cumulative maximum over a DataFrame or Series axis. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`cummax`](pandas.Series.cummax.html#pandas.Series.cummax "pandas.Series.cummax")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积最大值。 |'
- en: '| [`cummin`](pandas.Series.cummin.html#pandas.Series.cummin "pandas.Series.cummin")([axis, skipna])
    | Return cumulative minimum over a DataFrame or Series axis. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`cummin`](pandas.Series.cummin.html#pandas.Series.cummin "pandas.Series.cummin")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积最小值。 |'
- en: '| [`cumprod`](pandas.Series.cumprod.html#pandas.Series.cumprod "pandas.Series.cumprod")([axis, skipna])
    | Return cumulative product over a DataFrame or Series axis. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`cumprod`](pandas.Series.cumprod.html#pandas.Series.cumprod "pandas.Series.cumprod")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积乘积。 |'
- en: '| [`cumsum`](pandas.Series.cumsum.html#pandas.Series.cumsum "pandas.Series.cumsum")([axis, skipna])
    | Return cumulative sum over a DataFrame or Series axis. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`cumsum`](pandas.Series.cumsum.html#pandas.Series.cumsum "pandas.Series.cumsum")([axis, skipna])
    | 返回 DataFrame 或 Series 轴上的累积和。 |'
- en: '| [`describe`](pandas.Series.describe.html#pandas.Series.describe "pandas.Series.describe")([percentiles, include, exclude])
    | Generate descriptive statistics. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`describe`](pandas.Series.describe.html#pandas.Series.describe "pandas.Series.describe")([percentiles, include, exclude])
    | 生成描述性统计信息。 |'
- en: '| [`diff`](pandas.Series.diff.html#pandas.Series.diff "pandas.Series.diff")([periods])
    | First discrete difference of element. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`diff`](pandas.Series.diff.html#pandas.Series.diff "pandas.Series.diff")([periods])
    | 元素的第一个离散差异。 |'
- en: '| [`div`](pandas.Series.div.html#pandas.Series.div "pandas.Series.div")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    truediv). |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`div`](pandas.Series.div.html#pandas.Series.div "pandas.Series.div")(other[, level, fill_value, axis])
    | 返回系列和其他元素的浮点除法，逐元素进行（二元运算符 truediv）。 |'
- en: '| `divide`(other[, level, fill_value, axis]) | Return Floating division of
    series and other, element-wise (binary operator truediv). |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `divide`(other[, level, fill_value, axis]) | 返回系列和其他元素的浮点除法，逐元素进行（二元运算符 truediv）。
    |'
- en: '| `divmod`(other[, level, fill_value, axis]) | Return Integer division and
    modulo of series and other, element-wise (binary operator divmod). |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `divmod`(other[, level, fill_value, axis]) | 返回系列和其他元素的整数除法和模数，逐元素进行（二元运算符
    divmod）。 |'
- en: '| [`dot`](pandas.Series.dot.html#pandas.Series.dot "pandas.Series.dot")(other)
    | Compute the dot product between the Series and the columns of other. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`dot`](pandas.Series.dot.html#pandas.Series.dot "pandas.Series.dot")(other)
    | 计算 Series 和其他列之间的点积。 |'
- en: '| [`drop`](pandas.Series.drop.html#pandas.Series.drop "pandas.Series.drop")([labels, axis, index, columns, level, ...])
    | Return Series with specified index labels removed. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`drop`](pandas.Series.drop.html#pandas.Series.drop "pandas.Series.drop")([labels, axis, index, columns, level, ...])
    | 返回删除指定索引标签的 Series。 |'
- en: '| [`drop_duplicates`](pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates")(*[, keep, inplace, ignore_index]) | Return Series
    with duplicate values removed. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`drop_duplicates`](pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates")(*[, keep, inplace, ignore_index]) | 返回删除重复值的
    Series。 |'
- en: '| [`droplevel`](pandas.Series.droplevel.html#pandas.Series.droplevel "pandas.Series.droplevel")(level[, axis])
    | Return Series/DataFrame with requested index / column level(s) removed. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| [`droplevel`](pandas.Series.droplevel.html#pandas.Series.droplevel "pandas.Series.droplevel")(level[, axis])
    | 返回删除请求的索引/列级别的 Series/DataFrame。 |'
- en: '| [`dropna`](pandas.Series.dropna.html#pandas.Series.dropna "pandas.Series.dropna")(*[, axis, inplace, how, ignore_index])
    | Return a new Series with missing values removed. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`dropna`](pandas.Series.dropna.html#pandas.Series.dropna "pandas.Series.dropna")(*[, axis, inplace, how, ignore_index])
    | 返回删除缺失值的新 Series。 |'
- en: '| [`duplicated`](pandas.Series.duplicated.html#pandas.Series.duplicated "pandas.Series.duplicated")([keep])
    | Indicate duplicate Series values. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`duplicated`](pandas.Series.duplicated.html#pandas.Series.duplicated "pandas.Series.duplicated")([keep])
    | 表示 Series 值是否重复。 |'
- en: '| [`eq`](pandas.Series.eq.html#pandas.Series.eq "pandas.Series.eq")(other[, level, fill_value, axis])
    | Return Equal to of series and other, element-wise (binary operator eq). |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`eq`](pandas.Series.eq.html#pandas.Series.eq "pandas.Series.eq")(other[, level, fill_value, axis])
    | 返回系列���其他元素的相等，逐元素进行（二元运算符 eq）。 |'
- en: '| [`equals`](pandas.Series.equals.html#pandas.Series.equals "pandas.Series.equals")(other)
    | Test whether two objects contain the same elements. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`equals`](pandas.Series.equals.html#pandas.Series.equals "pandas.Series.equals")(other)
    | 测试两个对象是否包含相同的元素。 |'
- en: '| [`ewm`](pandas.Series.ewm.html#pandas.Series.ewm "pandas.Series.ewm")([com, span, halflife, alpha, ...])
    | Provide exponentially weighted (EW) calculations. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`ewm`](pandas.Series.ewm.html#pandas.Series.ewm "pandas.Series.ewm")([com, span, halflife, alpha, ...])
    | 提供指数加权（EW）计算。 |'
- en: '| [`expanding`](pandas.Series.expanding.html#pandas.Series.expanding "pandas.Series.expanding")([min_periods, axis, method])
    | Provide expanding window calculations. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`expanding`](pandas.Series.expanding.html#pandas.Series.expanding "pandas.Series.expanding")([min_periods, axis, method])
    | 提供扩展窗口计算。 |'
- en: '| [`explode`](pandas.Series.explode.html#pandas.Series.explode "pandas.Series.explode")([ignore_index])
    | Transform each element of a list-like to a row. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`explode`](pandas.Series.explode.html#pandas.Series.explode "pandas.Series.explode")([ignore_index])
    | 将类似列表的每个元素转换为一行。 |'
- en: '| [`factorize`](pandas.Series.factorize.html#pandas.Series.factorize "pandas.Series.factorize")([sort, use_na_sentinel])
    | Encode the object as an enumerated type or categorical variable. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`factorize`](pandas.Series.factorize.html#pandas.Series.factorize "pandas.Series.factorize")([sort, use_na_sentinel])
    | 将对象编码为枚举类型或分类变量。 |'
- en: '| [`ffill`](pandas.Series.ffill.html#pandas.Series.ffill "pandas.Series.ffill")(*[, axis, inplace, limit, limit_area, ...])
    | Fill NA/NaN values by propagating the last valid observation to next valid.
    |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`ffill`](pandas.Series.ffill.html#pandas.Series.ffill "pandas.Series.ffill")(*[, axis, inplace, limit, limit_area, ...])
    | 通过将最后一个有效观察传播到下一个有效值，填充 NA/NaN 值。 |'
- en: '| [`fillna`](pandas.Series.fillna.html#pandas.Series.fillna "pandas.Series.fillna")([value, method, axis, inplace, ...])
    | Fill NA/NaN values using the specified method. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`fillna`](pandas.Series.fillna.html#pandas.Series.fillna "pandas.Series.fillna")([value, method, axis, inplace, ...])
    | 使用指定方法填充 NA/NaN 值。 |'
- en: '| [`filter`](pandas.Series.filter.html#pandas.Series.filter "pandas.Series.filter")([items, like, regex, axis])
    | Subset the dataframe rows or columns according to the specified index labels.
    |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`filter`](pandas.Series.filter.html#pandas.Series.filter "pandas.Series.filter")([items, like, regex, axis])
    | 根据指定的索引标签，对数据帧行或列进行子集选择。 |'
- en: '| [`first`](pandas.Series.first.html#pandas.Series.first "pandas.Series.first")(offset)
    | (DEPRECATED) Select initial periods of time series data based on a date offset.
    |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`first`](pandas.Series.first.html#pandas.Series.first "pandas.Series.first")(offset)
    | (已弃用)根据日期偏移量选择时间序列数据的初始周期。 |'
- en: '| [`first_valid_index`](pandas.Series.first_valid_index.html#pandas.Series.first_valid_index
    "pandas.Series.first_valid_index")() | Return index for first non-NA value or
    None, if no non-NA value is found. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`first_valid_index`](pandas.Series.first_valid_index.html#pandas.Series.first_valid_index
    "pandas.Series.first_valid_index")() | 返回第一个非 NA 值的索引，如果没有找到非 NA 值，则返回 None。 |'
- en: '| [`floordiv`](pandas.Series.floordiv.html#pandas.Series.floordiv "pandas.Series.floordiv")(other[, level, fill_value, axis])
    | Return Integer division of series and other, element-wise (binary operator floordiv).
    |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`floordiv`](pandas.Series.floordiv.html#pandas.Series.floordiv "pandas.Series.floordiv")(other[, level, fill_value, axis])
    | 返回序列和其他的整数除法，逐元素（二进制运算符 floordiv）。 |'
- en: '| [`ge`](pandas.Series.ge.html#pandas.Series.ge "pandas.Series.ge")(other[, level, fill_value, axis])
    | Return Greater than or equal to of series and other, element-wise (binary operator
    ge). |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`ge`](pandas.Series.ge.html#pandas.Series.ge "pandas.Series.ge")(other[, level, fill_value, axis])
    | 返回序列和其他的大于或等于，逐元素（二进制运算符 ge）。 |'
- en: '| [`get`](pandas.Series.get.html#pandas.Series.get "pandas.Series.get")(key[, default])
    | Get item from object for given key (ex: DataFrame column). |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`get`](pandas.Series.get.html#pandas.Series.get "pandas.Series.get")(key[, default])
    | 获取给定键的对象中的项（例如：DataFrame 列）。 |'
- en: '| [`groupby`](pandas.Series.groupby.html#pandas.Series.groupby "pandas.Series.groupby")([by, axis, level, as_index, sort, ...])
    | Group Series using a mapper or by a Series of columns. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`groupby`](pandas.Series.groupby.html#pandas.Series.groupby "pandas.Series.groupby")([by, axis, level, as_index, sort, ...])
    | 使用映射器或列的 Series 进行分组。 |'
- en: '| [`gt`](pandas.Series.gt.html#pandas.Series.gt "pandas.Series.gt")(other[, level, fill_value, axis])
    | Return Greater than of series and other, element-wise (binary operator gt).
    |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`gt`](pandas.Series.gt.html#pandas.Series.gt "pandas.Series.gt")(other[, level, fill_value, axis])
    | 返回序列和其他的大于，逐元素（二进制运算符 gt）。 |'
- en: '| [`head`](pandas.Series.head.html#pandas.Series.head "pandas.Series.head")([n])
    | Return the first n rows. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`head`](pandas.Series.head.html#pandas.Series.head "pandas.Series.head")([n])
    | 返回前 n 行。 |'
- en: '| [`hist`](pandas.Series.hist.html#pandas.Series.hist "pandas.Series.hist")([by, ax, grid, xlabelsize, xrot, ...])
    | Draw histogram of the input series using matplotlib. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`hist`](pandas.Series.hist.html#pandas.Series.hist "pandas.Series.hist")([by, ax, grid, xlabelsize, xrot, ...])
    | 使用 matplotlib 绘制输入系列的直方图。 |'
- en: '| [`idxmax`](pandas.Series.idxmax.html#pandas.Series.idxmax "pandas.Series.idxmax")([axis, skipna])
    | Return the row label of the maximum value. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| [`idxmax`](pandas.Series.idxmax.html#pandas.Series.idxmax "pandas.Series.idxmax")([axis, skipna])
    | 返回最大值的行标签。 |'
- en: '| [`idxmin`](pandas.Series.idxmin.html#pandas.Series.idxmin "pandas.Series.idxmin")([axis, skipna])
    | Return the row label of the minimum value. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`idxmin`](pandas.Series.idxmin.html#pandas.Series.idxmin "pandas.Series.idxmin")([axis, skipna])
    | 返回最小值的行标签。 |'
- en: '| [`infer_objects`](pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")([copy]) | Attempt to infer better dtypes for object
    columns. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`infer_objects`](pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")([copy]) | 尝试推断对象列的更好的数据类型。 |'
- en: '| `info`([verbose, buf, max_cols, memory_usage, ...]) | Print a concise summary
    of a Series. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `info`([verbose, buf, max_cols, memory_usage, ...]) | 打印 Series 的简洁摘要。 |'
- en: '| [`interpolate`](pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate")([method, axis, limit, inplace, ...]) | Fill NaN values
    using an interpolation method. |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| [`interpolate`](pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate")([method, axis, limit, inplace, ...]) | 使用插值方法填充 NaN
    值。 |'
- en: '| [`isin`](pandas.Series.isin.html#pandas.Series.isin "pandas.Series.isin")(values)
    | Whether elements in Series are contained in values. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`isin`](pandas.Series.isin.html#pandas.Series.isin "pandas.Series.isin")(values)
    | Series 中的元素是否包含在 values 中。 |'
- en: '| [`isna`](pandas.Series.isna.html#pandas.Series.isna "pandas.Series.isna")()
    | Detect missing values. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`isna`](pandas.Series.isna.html#pandas.Series.isna "pandas.Series.isna")()
    | 检测缺失值。 |'
- en: '| [`isnull`](pandas.Series.isnull.html#pandas.Series.isnull "pandas.Series.isnull")()
    | Series.isnull is an alias for Series.isna. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`isnull`](pandas.Series.isnull.html#pandas.Series.isnull "pandas.Series.isnull")()
    | Series.isnull 是 Series.isna 的别名。 |'
- en: '| [`item`](pandas.Series.item.html#pandas.Series.item "pandas.Series.item")()
    | Return the first element of the underlying data as a Python scalar. |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`item`](pandas.Series.item.html#pandas.Series.item "pandas.Series.item")()
    | 将底层数据的第一个元素作为 Python 标量返回。 |'
- en: '| [`items`](pandas.Series.items.html#pandas.Series.items "pandas.Series.items")()
    | Lazily iterate over (index, value) tuples. |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`items`](pandas.Series.items.html#pandas.Series.items "pandas.Series.items")()
    | 惰性地遍历 (index, value) 元组。 |'
- en: '| [`keys`](pandas.Series.keys.html#pandas.Series.keys "pandas.Series.keys")()
    | Return alias for index. |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| [`keys`](pandas.Series.keys.html#pandas.Series.keys "pandas.Series.keys")()
    | 返回索引的别名。 |'
- en: '| [`kurt`](pandas.Series.kurt.html#pandas.Series.kurt "pandas.Series.kurt")([axis, skipna, numeric_only])
    | Return unbiased kurtosis over requested axis. |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`kurt`](pandas.Series.kurt.html#pandas.Series.kurt "pandas.Series.kurt")([axis, skipna, numeric_only])
    | 返回请求轴上的无偏峰度。 |'
- en: '| [`kurtosis`](pandas.Series.kurtosis.html#pandas.Series.kurtosis "pandas.Series.kurtosis")([axis, skipna, numeric_only])
    | Return unbiased kurtosis over requested axis. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`kurtosis`](pandas.Series.kurtosis.html#pandas.Series.kurtosis "pandas.Series.kurtosis")([axis, skipna, numeric_only])
    | 返回请求轴上的无偏峰度。 |'
- en: '| [`last`](pandas.Series.last.html#pandas.Series.last "pandas.Series.last")(offset)
    | (DEPRECATED) Select final periods of time series data based on a date offset.
    |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`last`](pandas.Series.last.html#pandas.Series.last "pandas.Series.last")(offset)
    | (已弃用) 根据日期偏移选择时间序列数据的最终周期。 |'
- en: '| [`last_valid_index`](pandas.Series.last_valid_index.html#pandas.Series.last_valid_index
    "pandas.Series.last_valid_index")() | Return index for last non-NA value or None,
    if no non-NA value is found. |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [`last_valid_index`](pandas.Series.last_valid_index.html#pandas.Series.last_valid_index
    "pandas.Series.last_valid_index")() | 返回最后一个非 NA 值的索引，如果找不到非 NA 值，则返回 None。 |'
- en: '| [`le`](pandas.Series.le.html#pandas.Series.le "pandas.Series.le")(other[, level, fill_value, axis])
    | Return Less than or equal to of series and other, element-wise (binary operator
    le). |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`le`](pandas.Series.le.html#pandas.Series.le "pandas.Series.le")(other[, level, fill_value, axis])
    | 返回 series 和 other 的小于或等于值，逐元素进行比较（二元运算符 le）。 |'
- en: '| [`lt`](pandas.Series.lt.html#pandas.Series.lt "pandas.Series.lt")(other[, level, fill_value, axis])
    | Return Less than of series and other, element-wise (binary operator lt). |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [`lt`](pandas.Series.lt.html#pandas.Series.lt "pandas.Series.lt")(other[, level, fill_value, axis])
    | 返回 series 和 other 的小于值，逐元素进行比较（二元运算符 lt）。 |'
- en: '| [`map`](pandas.Series.map.html#pandas.Series.map "pandas.Series.map")(arg[, na_action])
    | Map values of Series according to an input mapping or function. |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [`map`](pandas.Series.map.html#pandas.Series.map "pandas.Series.map")(arg[, na_action])
    | 根据输入映射或函数映射 Series 的值。 |'
- en: '| [`mask`](pandas.Series.mask.html#pandas.Series.mask "pandas.Series.mask")(cond[, other, inplace, axis, level])
    | Replace values where the condition is True. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`mask`](pandas.Series.mask.html#pandas.Series.mask "pandas.Series.mask")(cond[, other, inplace, axis, level])
    | 替换条件为 True 的值。 |'
- en: '| [`max`](pandas.Series.max.html#pandas.Series.max "pandas.Series.max")([axis, skipna, numeric_only])
    | Return the maximum of the values over the requested axis. |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| [`max`](pandas.Series.max.html#pandas.Series.max "pandas.Series.max")([axis, skipna, numeric_only])
    | 返回请求轴上的值的最大值。 |'
- en: '| [`mean`](pandas.Series.mean.html#pandas.Series.mean "pandas.Series.mean")([axis, skipna, numeric_only])
    | Return the mean of the values over the requested axis. |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [`mean`](pandas.Series.mean.html#pandas.Series.mean "pandas.Series.mean")([axis, skipna, numeric_only])
    | 返回请求轴上的值的平均值。 |'
- en: '| [`median`](pandas.Series.median.html#pandas.Series.median "pandas.Series.median")([axis, skipna, numeric_only])
    | Return the median of the values over the requested axis. |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| [`median`](pandas.Series.median.html#pandas.Series.median "pandas.Series.median")([axis, skipna, numeric_only])
    | 返回请求轴上的值的中位数。 |'
- en: '| [`memory_usage`](pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage")([index, deep]) | Return the memory usage of the
    Series. |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [`memory_usage`](pandas.Series.memory_usage.html#pandas.Series.memory_usage
    "pandas.Series.memory_usage")([index, deep]) | 返回 Series 的内存使用情况。 |'
- en: '| [`min`](pandas.Series.min.html#pandas.Series.min "pandas.Series.min")([axis, skipna, numeric_only])
    | Return the minimum of the values over the requested axis. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`min`](pandas.Series.min.html#pandas.Series.min "pandas.Series.min")([axis, skipna, numeric_only])
    | 返回请求轴上的值的最小值。 |'
- en: '| [`mod`](pandas.Series.mod.html#pandas.Series.mod "pandas.Series.mod")(other[, level, fill_value, axis])
    | Return Modulo of series and other, element-wise (binary operator mod). |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [`mod`](pandas.Series.mod.html#pandas.Series.mod "pandas.Series.mod")(other[, level, fill_value, axis])
    | 返回系列和其他的模数，逐元素计算（二元运算符 mod）。'
- en: '| [`mode`](pandas.Series.mode.html#pandas.Series.mode "pandas.Series.mode")([dropna])
    | Return the mode(s) of the Series. |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`mode`](pandas.Series.mode.html#pandas.Series.mode "pandas.Series.mode")([dropna])
    | 返回 Series 的众数（mode）。'
- en: '| [`mul`](pandas.Series.mul.html#pandas.Series.mul "pandas.Series.mul")(other[, level, fill_value, axis])
    | Return Multiplication of series and other, element-wise (binary operator mul).
    |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`mul`](pandas.Series.mul.html#pandas.Series.mul "pandas.Series.mul")(other[, level, fill_value, axis])
    | 返回系列和其他的乘法，逐元素计算（二元运算符 mul）。'
- en: '| `multiply`(other[, level, fill_value, axis]) | Return Multiplication of series
    and other, element-wise (binary operator mul). |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| `multiply`(other[, level, fill_value, axis]) | 返回系列和其他的乘法，逐元素计算（二元运算符 mul）。'
- en: '| [`ne`](pandas.Series.ne.html#pandas.Series.ne "pandas.Series.ne")(other[, level, fill_value, axis])
    | Return Not equal to of series and other, element-wise (binary operator ne).
    |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| [`ne`](pandas.Series.ne.html#pandas.Series.ne "pandas.Series.ne")(other[, level, fill_value, axis])
    | 返回系列和其他的不等于，逐元素计算���二元运算符 ne）。'
- en: '| [`nlargest`](pandas.Series.nlargest.html#pandas.Series.nlargest "pandas.Series.nlargest")([n, keep])
    | Return the largest n elements. |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| [`nlargest`](pandas.Series.nlargest.html#pandas.Series.nlargest "pandas.Series.nlargest")([n, keep])
    | 返回最大的 n 个元素。'
- en: '| [`notna`](pandas.Series.notna.html#pandas.Series.notna "pandas.Series.notna")()
    | Detect existing (non-missing) values. |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| [`notna`](pandas.Series.notna.html#pandas.Series.notna "pandas.Series.notna")()
    | 检测存在的（非缺失）值。'
- en: '| [`notnull`](pandas.Series.notnull.html#pandas.Series.notnull "pandas.Series.notnull")()
    | Series.notnull is an alias for Series.notna. |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| [`notnull`](pandas.Series.notnull.html#pandas.Series.notnull "pandas.Series.notnull")()
    | Series.notnull 是 Series.notna 的别名。'
- en: '| [`nsmallest`](pandas.Series.nsmallest.html#pandas.Series.nsmallest "pandas.Series.nsmallest")([n, keep])
    | Return the smallest n elements. |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| [`nsmallest`](pandas.Series.nsmallest.html#pandas.Series.nsmallest "pandas.Series.nsmallest")([n, keep])
    | 返回最小的 n 个元素。'
- en: '| [`nunique`](pandas.Series.nunique.html#pandas.Series.nunique "pandas.Series.nunique")([dropna])
    | Return number of unique elements in the object. |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| [`nunique`](pandas.Series.nunique.html#pandas.Series.nunique "pandas.Series.nunique")([dropna])
    | 返回对象中唯一元素的数量。'
- en: '| [`pad`](pandas.Series.pad.html#pandas.Series.pad "pandas.Series.pad")(*[, axis, inplace, limit, downcast])
    | (DEPRECATED) Fill NA/NaN values by propagating the last valid observation to
    next valid. |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| [`pad`](pandas.Series.pad.html#pandas.Series.pad "pandas.Series.pad")(*[, axis, inplace, limit, downcast])
    | （已弃用）通过将最后一个有效观察结果传播到下一个有效观察结果来填充 NA/NaN 值。'
- en: '| [`pct_change`](pandas.Series.pct_change.html#pandas.Series.pct_change "pandas.Series.pct_change")([periods, fill_method, limit, freq])
    | Fractional change between the current and a prior element. |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| [`pct_change`](pandas.Series.pct_change.html#pandas.Series.pct_change "pandas.Series.pct_change")([periods, fill_method, limit, freq])
    | 当前元素与先前元素之间的分数变化。'
- en: '| [`pipe`](pandas.Series.pipe.html#pandas.Series.pipe "pandas.Series.pipe")(func, *args, **kwargs)
    | Apply chainable functions that expect Series or DataFrames. |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| [`pipe`](pandas.Series.pipe.html#pandas.Series.pipe "pandas.Series.pipe")(func, *args, **kwargs)
    | 应用可链式调用的函数，期望 Series 或 DataFrame。'
- en: '| [`pop`](pandas.Series.pop.html#pandas.Series.pop "pandas.Series.pop")(item)
    | Return item and drops from series. |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| [`pop`](pandas.Series.pop.html#pandas.Series.pop "pandas.Series.pop")(item)
    | 返回项目并从系列中删除。'
- en: '| [`pow`](pandas.Series.pow.html#pandas.Series.pow "pandas.Series.pow")(other[, level, fill_value, axis])
    | Return Exponential power of series and other, element-wise (binary operator
    pow). |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| [`pow`](pandas.Series.pow.html#pandas.Series.pow "pandas.Series.pow")(other[, level, fill_value, axis])
    | 返回系列和其他的指数幂，逐元素计算（二元运算符 pow）。'
- en: '| [`prod`](pandas.Series.prod.html#pandas.Series.prod "pandas.Series.prod")([axis, skipna, numeric_only, min_count])
    | Return the product of the values over the requested axis. |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| [`prod`](pandas.Series.prod.html#pandas.Series.prod "pandas.Series.prod")([axis, skipna, numeric_only, min_count])
    | 返回沿请求轴的值的乘积。'
- en: '| [`product`](pandas.Series.product.html#pandas.Series.product "pandas.Series.product")([axis, skipna, numeric_only, min_count])
    | Return the product of the values over the requested axis. |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| [`product`](pandas.Series.product.html#pandas.Series.product "pandas.Series.product")([axis, skipna, numeric_only, min_count])
    | 返回沿请求轴的值的乘积。'
- en: '| [`quantile`](pandas.Series.quantile.html#pandas.Series.quantile "pandas.Series.quantile")([q, interpolation])
    | Return value at the given quantile. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| [`quantile`](pandas.Series.quantile.html#pandas.Series.quantile "pandas.Series.quantile")([q, interpolation])
    | 返回给定分位数处的值。'
- en: '| [`radd`](pandas.Series.radd.html#pandas.Series.radd "pandas.Series.radd")(other[, level, fill_value, axis])
    | Return Addition of series and other, element-wise (binary operator radd). |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| [`radd`](pandas.Series.radd.html#pandas.Series.radd "pandas.Series.radd")(other[, level, fill_value, axis])
    | 返回系列和其他元素的加法，逐元素进行（二进制运算符 radd）。 |'
- en: '| [`rank`](pandas.Series.rank.html#pandas.Series.rank "pandas.Series.rank")([axis, method, numeric_only, ...])
    | Compute numerical data ranks (1 through n) along axis. |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| [`rank`](pandas.Series.rank.html#pandas.Series.rank "pandas.Series.rank")([axis, method, numeric_only, ...])
    | 沿轴计算数值数据排名（1 到 n）。 |'
- en: '| [`ravel`](pandas.Series.ravel.html#pandas.Series.ravel "pandas.Series.ravel")([order])
    | (DEPRECATED) Return the flattened underlying data as an ndarray or ExtensionArray.
    |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| [`ravel`](pandas.Series.ravel.html#pandas.Series.ravel "pandas.Series.ravel")([order])
    | (已弃用) 将底层数据展平为 ndarray 或 ExtensionArray。 |'
- en: '| [`rdiv`](pandas.Series.rdiv.html#pandas.Series.rdiv "pandas.Series.rdiv")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    rtruediv). |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| [`rdiv`](pandas.Series.rdiv.html#pandas.Series.rdiv "pandas.Series.rdiv")(other[, level, fill_value, axis])
    | 返回系列和其他元素的浮点除法，逐元素进行（二进制运算符 rtruediv）。 |'
- en: '| `rdivmod`(other[, level, fill_value, axis]) | Return Integer division and
    modulo of series and other, element-wise (binary operator rdivmod). |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| `rdivmod`(other[, level, fill_value, axis]) | 返回系列和其他元素的整数除法和取模，逐元素进行（二进制运算符
    rdivmod）。 |'
- en: '| [`reindex`](pandas.Series.reindex.html#pandas.Series.reindex "pandas.Series.reindex")([index, axis, method, copy, level, ...])
    | Conform Series to new index with optional filling logic. |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| [`reindex`](pandas.Series.reindex.html#pandas.Series.reindex "pandas.Series.reindex")([index, axis, method, copy, level, ...])
    | 将 Series 调整为具有可选填充逻辑的新索引。 |'
- en: '| [`reindex_like`](pandas.Series.reindex_like.html#pandas.Series.reindex_like
    "pandas.Series.reindex_like")(other[, method, copy, limit, ...]) | Return an object
    with matching indices as other object. |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| [`reindex_like`](pandas.Series.reindex_like.html#pandas.Series.reindex_like
    "pandas.Series.reindex_like")(other[, method, copy, limit, ...]) | 返回具有与其他对象匹配索引的对象。
    |'
- en: '| [`rename`](pandas.Series.rename.html#pandas.Series.rename "pandas.Series.rename")([index, axis, copy, inplace, level, ...])
    | Alter Series index labels or name. |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| [`rename`](pandas.Series.rename.html#pandas.Series.rename "pandas.Series.rename")([index, axis, copy, inplace, level, ...])
    | 更改 Series 索引标签或名称。 |'
- en: '| [`rename_axis`](pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis")([mapper, index, axis, copy, inplace]) | Set the name
    of the axis for the index or columns. |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| [`rename_axis`](pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis")([mapper, index, axis, copy, inplace]) | 为索引或列设置轴的名称。
    |'
- en: '| [`reorder_levels`](pandas.Series.reorder_levels.html#pandas.Series.reorder_levels
    "pandas.Series.reorder_levels")(order) | Rearrange index levels using input order.
    |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| [`reorder_levels`](pandas.Series.reorder_levels.html#pandas.Series.reorder_levels
    "pandas.Series.reorder_levels")(order) | 使用输入顺序重新排列索引级别。 |'
- en: '| [`repeat`](pandas.Series.repeat.html#pandas.Series.repeat "pandas.Series.repeat")(repeats[, axis])
    | Repeat elements of a Series. |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| [`repeat`](pandas.Series.repeat.html#pandas.Series.repeat "pandas.Series.repeat")(repeats[, axis])
    | 重复 Series 的元素。 |'
- en: '| [`replace`](pandas.Series.replace.html#pandas.Series.replace "pandas.Series.replace")([to_replace, value, inplace, limit, ...])
    | Replace values given in to_replace with value. |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| [`replace`](pandas.Series.replace.html#pandas.Series.replace "pandas.Series.replace")([to_replace, value, inplace, limit, ...])
    | 用给定值替换 to_replace 中的值。 |'
- en: '| [`resample`](pandas.Series.resample.html#pandas.Series.resample "pandas.Series.resample")(rule[, axis, closed, label, ...])
    | Resample time-series data. |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| [`resample`](pandas.Series.resample.html#pandas.Series.resample "pandas.Series.resample")(rule[, axis, closed, label, ...])
    | 对时间序列数据进行重新采样。 |'
- en: '| [`reset_index`](pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")([level, drop, name, inplace, ...]) | Generate a new
    DataFrame or Series with the index reset. |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| [`reset_index`](pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index")([level, drop, name, inplace, ...]) | 生成具有重置索引的新 DataFrame
    或 Series。 |'
- en: '| [`rfloordiv`](pandas.Series.rfloordiv.html#pandas.Series.rfloordiv "pandas.Series.rfloordiv")(other[, level, fill_value, axis])
    | Return Integer division of series and other, element-wise (binary operator rfloordiv).
    |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| [`rfloordiv`](pandas.Series.rfloordiv.html#pandas.Series.rfloordiv "pandas.Series.rfloordiv")(other[, level, fill_value, axis])
    | 返回系列和其他元素的整数除法，逐元素进行（二进制运算符 rfloordiv）。 |'
- en: '| [`rmod`](pandas.Series.rmod.html#pandas.Series.rmod "pandas.Series.rmod")(other[, level, fill_value, axis])
    | Return Modulo of series and other, element-wise (binary operator rmod). |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| [`rmod`](pandas.Series.rmod.html#pandas.Series.rmod "pandas.Series.rmod")(other[, level, fill_value, axis])
    | 返回系列和其他元素的取模，逐元素进行（二进制运算符 rmod）。 |'
- en: '| [`rmul`](pandas.Series.rmul.html#pandas.Series.rmul "pandas.Series.rmul")(other[, level, fill_value, axis])
    | Return Multiplication of series and other, element-wise (binary operator rmul).
    |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| [`rmul`](pandas.Series.rmul.html#pandas.Series.rmul "pandas.Series.rmul")(other[, level, fill_value, axis])
    | 返回系列和其他元素的乘积，逐元素计算（二进制运算符 rmul）。 |'
- en: '| [`rolling`](pandas.Series.rolling.html#pandas.Series.rolling "pandas.Series.rolling")(window[, min_periods, center, ...])
    | Provide rolling window calculations. |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| [`rolling`](pandas.Series.rolling.html#pandas.Series.rolling "pandas.Series.rolling")(window[, min_periods, center, ...])
    | 提供滚动窗口计算。 |'
- en: '| [`round`](pandas.Series.round.html#pandas.Series.round "pandas.Series.round")([decimals])
    | Round each value in a Series to the given number of decimals. |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| [`round`](pandas.Series.round.html#pandas.Series.round "pandas.Series.round")([decimals])
    | 将系列中的每个值四舍五入到给定的小数位数。 |'
- en: '| [`rpow`](pandas.Series.rpow.html#pandas.Series.rpow "pandas.Series.rpow")(other[, level, fill_value, axis])
    | Return Exponential power of series and other, element-wise (binary operator
    rpow). |'
  id: totrans-183
  prefs: []
  type: TYPE_TB
  zh: '| [`rpow`](pandas.Series.rpow.html#pandas.Series.rpow "pandas.Series.rpow")(other[, level, fill_value, axis])
    | 返回序列和其他元素的指数幂，逐元素计算（二进制运算符 rpow）。 |'
- en: '| [`rsub`](pandas.Series.rsub.html#pandas.Series.rsub "pandas.Series.rsub")(other[, level, fill_value, axis])
    | Return Subtraction of series and other, element-wise (binary operator rsub).
    |'
  id: totrans-184
  prefs: []
  type: TYPE_TB
  zh: '| [`rsub`](pandas.Series.rsub.html#pandas.Series.rsub "pandas.Series.rsub")(other[, level, fill_value, axis])
    | 返回系列和其他元素的差异，逐元素计算（二进制运算符 rsub）。 |'
- en: '| [`rtruediv`](pandas.Series.rtruediv.html#pandas.Series.rtruediv "pandas.Series.rtruediv")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    rtruediv). |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| [`rtruediv`](pandas.Series.rtruediv.html#pandas.Series.rtruediv "pandas.Series.rtruediv")(other[, level, fill_value, axis])
    | 返回系列和其他元素的浮点除法，逐元素计算（二进制运算符 rtruediv）。 |'
- en: '| [`sample`](pandas.Series.sample.html#pandas.Series.sample "pandas.Series.sample")([n, frac, replace, weights, ...])
    | Return a random sample of items from an axis of object. |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| [`sample`](pandas.Series.sample.html#pandas.Series.sample "pandas.Series.sample")([n, frac, replace, weights, ...])
    | 从对象的轴中返回随机样本项目。 |'
- en: '| [`searchsorted`](pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted")(value[, side, sorter]) | Find indices where elements
    should be inserted to maintain order. |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| [`searchsorted`](pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted")(value[, side, sorter]) | 找到应插入元素以维护顺序的索引。 |'
- en: '| [`sem`](pandas.Series.sem.html#pandas.Series.sem "pandas.Series.sem")([axis, skipna, ddof, numeric_only])
    | Return unbiased standard error of the mean over requested axis. |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| [`sem`](pandas.Series.sem.html#pandas.Series.sem "pandas.Series.sem")([axis, skipna, ddof, numeric_only])
    | 返回请求轴上的无偏均值标准误差。 |'
- en: '| [`set_axis`](pandas.Series.set_axis.html#pandas.Series.set_axis "pandas.Series.set_axis")(labels, *[, axis, copy])
    | Assign desired index to given axis. |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| [`set_axis`](pandas.Series.set_axis.html#pandas.Series.set_axis "pandas.Series.set_axis")(labels, *[, axis, copy])
    | 将所需的索引分配给给定的轴。 |'
- en: '| [`set_flags`](pandas.Series.set_flags.html#pandas.Series.set_flags "pandas.Series.set_flags")(*[, copy, allows_duplicate_labels])
    | Return a new object with updated flags. |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| [`set_flags`](pandas.Series.set_flags.html#pandas.Series.set_flags "pandas.Series.set_flags")(*[, copy, allows_duplicate_labels])
    | 返回带有更新标志的新对象。 |'
- en: '| [`shift`](pandas.Series.shift.html#pandas.Series.shift "pandas.Series.shift")([periods, freq, axis, fill_value, suffix])
    | Shift index by desired number of periods with an optional time freq. |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| [`shift`](pandas.Series.shift.html#pandas.Series.shift "pandas.Series.shift")([periods, freq, axis, fill_value, suffix])
    | 将索引按所需的周期数移动，并可选择性地指定时间频率。 |'
- en: '| [`skew`](pandas.Series.skew.html#pandas.Series.skew "pandas.Series.skew")([axis, skipna, numeric_only])
    | Return unbiased skew over requested axis. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| [`skew`](pandas.Series.skew.html#pandas.Series.skew "pandas.Series.skew")([axis, skipna, numeric_only])
    | 返回请求轴上的无偏倾斜度。 |'
- en: '| [`sort_index`](pandas.Series.sort_index.html#pandas.Series.sort_index "pandas.Series.sort_index")(*[, axis, level, ascending, ...])
    | Sort Series by index labels. |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| [`sort_index`](pandas.Series.sort_index.html#pandas.Series.sort_index "pandas.Series.sort_index")(*[, axis, level, ascending, ...])
    | 按索引标签对系列进行排序。 |'
- en: '| [`sort_values`](pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")(*[, axis, ascending, inplace, ...]) | Sort by the
    values. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| [`sort_values`](pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values")(*[, axis, ascending, inplace, ...]) | 按值排序。 |'
- en: '| [`squeeze`](pandas.Series.squeeze.html#pandas.Series.squeeze "pandas.Series.squeeze")([axis])
    | Squeeze 1 dimensional axis objects into scalars. |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| [`squeeze`](pandas.Series.squeeze.html#pandas.Series.squeeze "pandas.Series.squeeze")([axis])
    | 将1维轴对象压缩为标量。 |'
- en: '| [`std`](pandas.Series.std.html#pandas.Series.std "pandas.Series.std")([axis, skipna, ddof, numeric_only])
    | Return sample standard deviation over requested axis. |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| [`std`](pandas.Series.std.html#pandas.Series.std "pandas.Series.std")([axis, skipna, ddof, numeric_only])
    | 返回请求轴上的样本标准差。'
- en: '| [`sub`](pandas.Series.sub.html#pandas.Series.sub "pandas.Series.sub")(other[, level, fill_value, axis])
    | Return Subtraction of series and other, element-wise (binary operator sub).
    |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| [`sub`](pandas.Series.sub.html#pandas.Series.sub "pandas.Series.sub")(other[, level, fill_value, axis])
    | 返回系列和其他元素的减法，逐元素进行（二进制运算符 sub）。'
- en: '| `subtract`(other[, level, fill_value, axis]) | Return Subtraction of series
    and other, element-wise (binary operator sub). |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| `subtract`(other[,��level, fill_value, axis]) | 返回系列和其他元素的减法，逐元素进行（二进制运算符
    sub）。'
- en: '| [`sum`](pandas.Series.sum.html#pandas.Series.sum "pandas.Series.sum")([axis, skipna, numeric_only, min_count])
    | Return the sum of the values over the requested axis. |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| [`sum`](pandas.Series.sum.html#pandas.Series.sum "pandas.Series.sum")([axis, skipna, numeric_only, min_count])
    | 返回请求轴上值的总和。'
- en: '| `swapaxes`(axis1, axis2[, copy]) | (DEPRECATED) Interchange axes and swap
    values axes appropriately. |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| `swapaxes`(axis1, axis2[, copy]) | （已弃用）交换轴并适当交换值轴。'
- en: '| [`swaplevel`](pandas.Series.swaplevel.html#pandas.Series.swaplevel "pandas.Series.swaplevel")([i, j, copy])
    | Swap levels i and j in a [`MultiIndex`](pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| [`swaplevel`](pandas.Series.swaplevel.html#pandas.Series.swaplevel "pandas.Series.swaplevel")([i, j, copy])
    | 在 [`MultiIndex`](pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    中交换级别 i 和 j。'
- en: '| [`tail`](pandas.Series.tail.html#pandas.Series.tail "pandas.Series.tail")([n])
    | Return the last n rows. |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| [`tail`](pandas.Series.tail.html#pandas.Series.tail "pandas.Series.tail")([n])
    | 返回最后 n 行。'
- en: '| [`take`](pandas.Series.take.html#pandas.Series.take "pandas.Series.take")(indices[, axis])
    | Return the elements in the given *positional* indices along an axis. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| [`take`](pandas.Series.take.html#pandas.Series.take "pandas.Series.take")(indices[, axis])
    | 返回沿轴的给定 *位置* 索引的元素。'
- en: '| [`to_clipboard`](pandas.Series.to_clipboard.html#pandas.Series.to_clipboard
    "pandas.Series.to_clipboard")(*[, excel, sep]) | Copy object to the system clipboard.
    |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| [`to_clipboard`](pandas.Series.to_clipboard.html#pandas.Series.to_clipboard
    "pandas.Series.to_clipboard")(*[, excel, sep]) | 将对象复制到系统剪贴板。'
- en: '| [`to_csv`](pandas.Series.to_csv.html#pandas.Series.to_csv "pandas.Series.to_csv")([path_or_buf, sep, na_rep, ...])
    | Write object to a comma-separated values (csv) file. |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| [`to_csv`](pandas.Series.to_csv.html#pandas.Series.to_csv "pandas.Series.to_csv")([path_or_buf, sep, na_rep, ...])
    | 将对象写入逗号分隔值（csv）文件。'
- en: '| [`to_dict`](pandas.Series.to_dict.html#pandas.Series.to_dict "pandas.Series.to_dict")(*[, into])
    | Convert Series to {label -> value} dict or dict-like object. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| [`to_dict`](pandas.Series.to_dict.html#pandas.Series.to_dict "pandas.Series.to_dict")(*[, into])
    | 将 Series 转换为 {label -> value} 字典或类似字典的对象。'
- en: '| [`to_excel`](pandas.Series.to_excel.html#pandas.Series.to_excel "pandas.Series.to_excel")(excel_writer, *[, sheet_name, ...])
    | Write object to an Excel sheet. |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| [`to_excel`](pandas.Series.to_excel.html#pandas.Series.to_excel "pandas.Series.to_excel")(excel_writer, *[, sheet_name, ...])
    | 将对象写入 Excel 表。'
- en: '| [`to_frame`](pandas.Series.to_frame.html#pandas.Series.to_frame "pandas.Series.to_frame")([name])
    | Convert Series to DataFrame. |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| [`to_frame`](pandas.Series.to_frame.html#pandas.Series.to_frame "pandas.Series.to_frame")([name])
    | 将 Series 转换为 DataFrame。'
- en: '| [`to_hdf`](pandas.Series.to_hdf.html#pandas.Series.to_hdf "pandas.Series.to_hdf")(path_or_buf, *, key[, mode, ...])
    | Write the contained data to an HDF5 file using HDFStore. |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| [`to_hdf`](pandas.Series.to_hdf.html#pandas.Series.to_hdf "pandas.Series.to_hdf")(path_or_buf, *, key[, mode, ...])
    | 使用 HDFStore 将包含的数据写入 HDF5 文件。'
- en: '| [`to_json`](pandas.Series.to_json.html#pandas.Series.to_json "pandas.Series.to_json")([path_or_buf, orient, date_format, ...])
    | Convert the object to a JSON string. |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| [`to_json`](pandas.Series.to_json.html#pandas.Series.to_json "pandas.Series.to_json")([path_or_buf, orient, date_format, ...])
    | 将对象转换为 JSON 字符串。'
- en: '| [`to_latex`](pandas.Series.to_latex.html#pandas.Series.to_latex "pandas.Series.to_latex")([buf, columns, header, index, ...])
    | Render object to a LaTeX tabular, longtable, or nested table. |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| [`to_latex`](pandas.Series.to_latex.html#pandas.Series.to_latex "pandas.Series.to_latex")([buf, columns, header, index, ...])
    | 将对象呈现为 LaTeX 表格、长表格或嵌套表格。'
- en: '| [`to_list`](pandas.Series.to_list.html#pandas.Series.to_list "pandas.Series.to_list")()
    | Return a list of the values. |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| [`to_list`](pandas.Series.to_list.html#pandas.Series.to_list "pandas.Series.to_list")()
    | 返回值的列表。'
- en: '| [`to_markdown`](pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown")([buf, mode, index, storage_options]) | Print Series
    in Markdown-friendly format. |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| [`to_markdown`](pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown")([buf, mode, index, storage_options]) | 以 Markdown
    友好的格式打印 Series。'
- en: '| [`to_numpy`](pandas.Series.to_numpy.html#pandas.Series.to_numpy "pandas.Series.to_numpy")([dtype, copy, na_value])
    | A NumPy ndarray representing the values in this Series or Index. |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| [`to_numpy`](pandas.Series.to_numpy.html#pandas.Series.to_numpy "pandas.Series.to_numpy")([dtype, copy, na_value])
    | 表示此 Series 或索引中的值的 NumPy ndarray。 |'
- en: '| [`to_period`](pandas.Series.to_period.html#pandas.Series.to_period "pandas.Series.to_period")([freq, copy])
    | Convert Series from DatetimeIndex to PeriodIndex. |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| [`to_period`](pandas.Series.to_period.html#pandas.Series.to_period "pandas.Series.to_period")([freq, copy])
    | 将 Series 从 DatetimeIndex 转换为 PeriodIndex。 |'
- en: '| [`to_pickle`](pandas.Series.to_pickle.html#pandas.Series.to_pickle "pandas.Series.to_pickle")(path, *[, compression, protocol, ...])
    | Pickle (serialize) object to file. |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| [`to_pickle`](pandas.Series.to_pickle.html#pandas.Series.to_pickle "pandas.Series.to_pickle")(path, *[, compression, protocol, ...])
    | 将对象保存为 pickle（序列化）文件。 |'
- en: '| [`to_sql`](pandas.Series.to_sql.html#pandas.Series.to_sql "pandas.Series.to_sql")(name, con, *[, schema, if_exists, ...])
    | Write records stored in a DataFrame to a SQL database. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| [`to_sql`](pandas.Series.to_sql.html#pandas.Series.to_sql "pandas.Series.to_sql")(name, con, *[, schema, if_exists, ...])
    | 将存储在 DataFrame 中的记录写入 SQL 数据库。 |'
- en: '| [`to_string`](pandas.Series.to_string.html#pandas.Series.to_string "pandas.Series.to_string")([buf, na_rep, float_format, ...])
    | Render a string representation of the Series. |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| [`to_string`](pandas.Series.to_string.html#pandas.Series.to_string "pandas.Series.to_string")([buf, na_rep, float_format, ...])
    | 渲染 Series 的字符串表示形式。 |'
- en: '| [`to_timestamp`](pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp")([freq, how, copy]) | Cast to DatetimeIndex of Timestamps,
    at *beginning* of period. |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| [`to_timestamp`](pandas.Series.to_timestamp.html#pandas.Series.to_timestamp
    "pandas.Series.to_timestamp")([freq, how, copy]) | 转换为 Timestamps 的 DatetimeIndex，位于周期的
    *开始* 处。 |'
- en: '| [`to_xarray`](pandas.Series.to_xarray.html#pandas.Series.to_xarray "pandas.Series.to_xarray")()
    | Return an xarray object from the pandas object. |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| [`to_xarray`](pandas.Series.to_xarray.html#pandas.Series.to_xarray "pandas.Series.to_xarray")()
    | 从 pandas 对象返回一个 xarray 对象。 |'
- en: '| `tolist`() | Return a list of the values. |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| `tolist`() | 返回值的列表形式。 |'
- en: '| [`transform`](pandas.Series.transform.html#pandas.Series.transform "pandas.Series.transform")(func[, axis])
    | Call `func` on self producing a Series with the same axis shape as self. |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| [`transform`](pandas.Series.transform.html#pandas.Series.transform "pandas.Series.transform")(func[, axis])
    | 对自身调用 `func`，产生一个与自身轴形状相同的 Series。 |'
- en: '| `transpose`(*args, **kwargs) | Return the transpose, which is by definition
    self. |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| `transpose`(*args, **kwargs) | 返回转置，其定义为自身。 |'
- en: '| [`truediv`](pandas.Series.truediv.html#pandas.Series.truediv "pandas.Series.truediv")(other[, level, fill_value, axis])
    | Return Floating division of series and other, element-wise (binary operator
    truediv). |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| [`truediv`](pandas.Series.truediv.html#pandas.Series.truediv "pandas.Series.truediv")(other[, level, fill_value, axis])
    | 返回系列和其他的浮点除法，逐元素进行（二元运算符 truediv）。 |'
- en: '| [`truncate`](pandas.Series.truncate.html#pandas.Series.truncate "pandas.Series.truncate")([before, after, axis, copy])
    | Truncate a Series or DataFrame before and after some index value. |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| [`truncate`](pandas.Series.truncate.html#pandas.Series.truncate "pandas.Series.truncate")([before, after, axis, copy])
    | 在某个索引值之前和之后截断 Series 或 DataFrame。 |'
- en: '| [`tz_convert`](pandas.Series.tz_convert.html#pandas.Series.tz_convert "pandas.Series.tz_convert")(tz[, axis, level, copy])
    | Convert tz-aware axis to target time zone. |'
  id: totrans-226
  prefs: []
  type: TYPE_TB
  zh: '| [`tz_convert`](pandas.Series.tz_convert.html#pandas.Series.tz_convert "pandas.Series.tz_convert")(tz[, axis, level, copy])
    | 将带有时区信息的轴转换为目标时区。 |'
- en: '| [`tz_localize`](pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize")(tz[, axis, level, copy, ...]) | Localize tz-naive
    index of a Series or DataFrame to target time zone. |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| [`tz_localize`](pandas.Series.tz_localize.html#pandas.Series.tz_localize
    "pandas.Series.tz_localize")(tz[, axis, level, copy, ...]) | 将 Series 或 DataFrame
    的时区无关索引本地化为目标时区。 |'
- en: '| [`unique`](pandas.Series.unique.html#pandas.Series.unique "pandas.Series.unique")()
    | Return unique values of Series object. |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| [`unique`](pandas.Series.unique.html#pandas.Series.unique "pandas.Series.unique")()
    | 返回 Series 对象的唯一值。 |'
- en: '| [`unstack`](pandas.Series.unstack.html#pandas.Series.unstack "pandas.Series.unstack")([level, fill_value, sort])
    | Unstack, also known as pivot, Series with MultiIndex to produce DataFrame. |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| [`unstack`](pandas.Series.unstack.html#pandas.Series.unstack "pandas.Series.unstack")([level, fill_value, sort])
    | 将具有 MultiIndex 的 Series 进行解压缩，也称为透视，以生成 DataFrame。 |'
- en: '| [`update`](pandas.Series.update.html#pandas.Series.update "pandas.Series.update")(other)
    | Modify Series in place using values from passed Series. |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| [`update`](pandas.Series.update.html#pandas.Series.update "pandas.Series.update")(other)
    | 使用传入的 Series 的值就地修改 Series。 |'
- en: '| [`value_counts`](pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts")([normalize, sort, ascending, ...]) | Return a Series
    containing counts of unique values. |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '[`value_counts`](pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts")([normalize, sort, ascending, ...]) | 返回包含唯一值计数的
    Series。'
- en: '| [`var`](pandas.Series.var.html#pandas.Series.var "pandas.Series.var")([axis, skipna, ddof, numeric_only])
    | Return unbiased variance over requested axis. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '[`var`](pandas.Series.var.html#pandas.Series.var "pandas.Series.var")([axis, skipna, ddof, numeric_only])
    | 返回所请求轴上的无偏方差。'
- en: '| [`view`](pandas.Series.view.html#pandas.Series.view "pandas.Series.view")([dtype])
    | (DEPRECATED) Create a new view of the Series. |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '[`view`](pandas.Series.view.html#pandas.Series.view "pandas.Series.view")([dtype])
    | (已弃用) 创建 Series 的新视图。'
- en: '| [`where`](pandas.Series.where.html#pandas.Series.where "pandas.Series.where")(cond[, other, inplace, axis, level])
    | Replace values where the condition is False. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '[`where`](pandas.Series.where.html#pandas.Series.where "pandas.Series.where")(cond[, other, inplace, axis, level])
    | 替换条件为假的值。'
- en: '| [`xs`](pandas.Series.xs.html#pandas.Series.xs "pandas.Series.xs")(key[, axis, level, drop_level])
    | Return cross-section from the Series/DataFrame. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '[`xs`](pandas.Series.xs.html#pandas.Series.xs "pandas.Series.xs")(key[, axis, level, drop_level])
    | 从 Series/DataFrame 返回横截面。'
