- en: numpy.invert
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.invert
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.invert.html](https://numpy.org/doc/1.26/reference/generated/numpy.invert.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.invert.html](https://numpy.org/doc/1.26/reference/generated/numpy.invert.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute bit-wise inversion, or bit-wise NOT, element-wise.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算按位取反，即按位“非”。
- en: Computes the bit-wise NOT of the underlying binary representation of the integers
    in the input arrays. This ufunc implements the C/Python operator `~`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 计算输入数组中整数的基础二进制表示的按位“非”。此 ufunc 实现了 C/Python 运算符 `~`。
- en: For signed integer inputs, the two’s complement is returned. In a two’s-complement
    system negative numbers are represented by the two’s complement of the absolute
    value. This is the most common method of representing signed integers on computers
    [[1]](#rde927b304c4f-1). A N-bit two’s-complement system can represent every integer
    in the range \(-2^{N-1}\) to \(+2^{N-1}-1\).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于有符号整数输入，返回补码。在二进制补码系统中，负数由绝对值的补码表示。这是计算机上表示有符号整数最常用的方法[[1]](#rde927b304c4f-1)。一个
    N 位的二进制补码系统可以表示范围在 \(-2^{N-1}\) 到 \(+2^{N-1}-1\) 的每一个整数。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: Only integer and boolean types are handled.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 只处理整数和布尔类型。
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray、None 或 ndarray 和 None 的元组，可选'
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 结果存储的位置。如果提供，它必须具有输入广播到的形状。如果未提供或为 None，则返回一个新分配的数组。元组（仅作为关键字参数）的长度必须等于输出数。
- en: '**where**array_like, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**array_like，可选'
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此条件广播到输入。在条件为 True 的位置，*out* 数组将被设置为 ufunc 的结果。在其他位置，*out* 数组将保留其原始值。请注意，如果通过默认的
    `out=None` 创建了一个未初始化的 *out* 数组，则在其中条件为 False 的位置将保持未初始化状态。
- en: '****kwargs**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他仅关键字参数，请参阅 [ufunc 文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'Returns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ndarray or scalar'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray 或标量'
- en: Result. This is a scalar if *x* is a scalar.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 结果。如果 *x* 是标量，则这是一个标量。
- en: See also
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`bitwise_and`](numpy.bitwise_and.html#numpy.bitwise_and "numpy.bitwise_and"),
    [`bitwise_or`](numpy.bitwise_or.html#numpy.bitwise_or "numpy.bitwise_or"), [`bitwise_xor`](numpy.bitwise_xor.html#numpy.bitwise_xor
    "numpy.bitwise_xor")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`位与`](numpy.bitwise_and.html#numpy.bitwise_and "numpy.bitwise_and")，[`位或`](numpy.bitwise_or.html#numpy.bitwise_or
    "numpy.bitwise_or")，[`位异或`](numpy.bitwise_xor.html#numpy.bitwise_xor "numpy.bitwise_xor")'
- en: '[`logical_not`](numpy.logical_not.html#numpy.logical_not "numpy.logical_not")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`logical_not`](numpy.logical_not.html#numpy.logical_not "numpy.logical_not")'
- en: '[`binary_repr`](numpy.binary_repr.html#numpy.binary_repr "numpy.binary_repr")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`binary_repr`](numpy.binary_repr.html#numpy.binary_repr "numpy.binary_repr")'
- en: Return the binary representation of the input number as a string.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 将输入数字的二进制表示作为字符串返回。
- en: Notes
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`bitwise_not` is an alias for [`invert`](#numpy.invert "numpy.invert"):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`bitwise_not` 是 [`invert`](#numpy.invert "numpy.invert") 的别名：'
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: References
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[[1](#id1)]'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1](#id1)]'
- en: Wikipedia, “Two’s complement”, [https://en.wikipedia.org/wiki/Two’s_complement](https://en.wikipedia.org/wiki/Two's_complement)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '维基百科中的“二进制补码”，[https://en.wikipedia.org/wiki/Two’s_complement](https://en.wikipedia.org/wiki/Two''s_complement) '
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'We’ve seen that 13 is represented by `00001101`. The invert or bit-wise NOT
    of 13 is then:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到 13 被表示为 `00001101`。13 的反码或按位“非”是：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result depends on the bit-width:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 结果取决于位宽：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When using signed integer types the result is the two’s complement of the result
    for the unsigned type:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用有符号整数类型时，结果是无符号类型结果的补码：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Booleans are accepted as well:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 也接受布尔值：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `~` operator can be used as a shorthand for `np.invert` on ndarrays.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`~` 运算符可以用作 ndarray 上 `np.invert` 的速记方式。'
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
