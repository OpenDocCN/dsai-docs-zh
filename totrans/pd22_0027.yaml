- en: PyArrow Functionality
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyArrow功能
- en: 原文：[https://pandas.pydata.org/docs/user_guide/pyarrow.html](https://pandas.pydata.org/docs/user_guide/pyarrow.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/user_guide/pyarrow.html](https://pandas.pydata.org/docs/user_guide/pyarrow.html)
- en: 'pandas can utilize [PyArrow](https://arrow.apache.org/docs/python/index.html)
    to extend functionality and improve the performance of various APIs. This includes:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: pandas可以利用[PyArrow](https://arrow.apache.org/docs/python/index.html)来扩展功能并改善各种API的性能。这包括：
- en: More extensive [data types](https://arrow.apache.org/docs/python/api/datatypes.html)
    compared to NumPy
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与NumPy相比，拥有更广泛的[数据类型](https://arrow.apache.org/docs/python/api/datatypes.html)
- en: Missing data support (NA) for all data types
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对所有数据类型支持缺失数据（NA）
- en: Performant IO reader integration
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高性能IO读取器集成
- en: Facilitate interoperability with other dataframe libraries based on the Apache
    Arrow specification (e.g. polars, cuDF)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 便于与基于Apache Arrow规范的其他数据框架库（例如polars、cuDF）进行互操作性
- en: To use this functionality, please ensure you have [installed the minimum supported
    PyArrow version.](../getting_started/install.html#install-optional-dependencies)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此功能，请确保您已经[安装了最低支持的PyArrow版本。](../getting_started/install.html#install-optional-dependencies)
- en: Data Structure Integration
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据结构集成
- en: A [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"), or
    the columns of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") can be directly backed by a [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)") which is similar to a NumPy array. To construct these
    from the main pandas data structures, you can pass in a string of the type followed
    by `[pyarrow]`, e.g. `"int64[pyarrow]""` into the `dtype` parameter
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")、[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的列可以直接由[`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(在Apache Arrow v15.0.2中)")支持，这类似于NumPy数组。要从主要的pandas数据结构构造这些，您可以在`dtype`参数中传入类型后跟`[pyarrow]`的字符串，例如`"int64[pyarrow]"`。
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The string alias `"string[pyarrow]"` maps to `pd.StringDtype("pyarrow")` which
    is not equivalent to specifying `dtype=pd.ArrowDtype(pa.string())`. Generally,
    operations on the data will behave similarly except `pd.StringDtype("pyarrow")`
    can return NumPy-backed nullable types while `pd.ArrowDtype(pa.string())` will
    return [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串别名`"string[pyarrow]"`映射到`pd.StringDtype("pyarrow")`，这与指定`dtype=pd.ArrowDtype(pa.string())`不等效。通常，对数据的操作行为会类似，除了`pd.StringDtype("pyarrow")`可以返回基于NumPy的可空类型，而`pd.ArrowDtype(pa.string())`将返回[`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype")。
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For PyArrow types that accept parameters, you can pass in a PyArrow type with
    those parameters into [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") to use in the `dtype` parameter.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对于接受参数的PyArrow类型，您可以将带有这些参数的PyArrow类型传入[`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype")以在`dtype`参数中使用。
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you already have an [`pyarrow.Array`](https://arrow.apache.org/docs/python/generated/pyarrow.Array.html#pyarrow.Array
    "(in Apache Arrow v15.0.2)") or [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)"), you can pass it into [`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") to construct the associated [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    object.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经有一个[`pyarrow.Array`](https://arrow.apache.org/docs/python/generated/pyarrow.Array.html#pyarrow.Array
    "(在Apache Arrow v15.0.2中)")或[`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(在Apache Arrow v15.0.2中)")，您可以将其传入[`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")以构造相关的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")、[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象。
- en: '[PRE5]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To retrieve a pyarrow [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)") from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), you can call the pyarrow array constructor on the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index").
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要从[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")或[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index")中检索一个 pyarrow [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(在 Apache Arrow v15.0.2 中)")，您可以在[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")上调用
    pyarrow 数组构造函数。
- en: '[PRE6]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: To convert a [`pyarrow.Table`](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table
    "(in Apache Arrow v15.0.2)") to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), you can call the [`pyarrow.Table.to_pandas()`](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table.to_pandas
    "(in Apache Arrow v15.0.2)") method with `types_mapper=pd.ArrowDtype`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 [`pyarrow.Table`](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table
    "(在 Apache Arrow v15.0.2 中)") 转换为 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，您可以使用 `types_mapper=pd.ArrowDtype` 调用 [`pyarrow.Table.to_pandas()`](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table.to_pandas
    "(在 Apache Arrow v15.0.2 中)") 方法。
- en: '[PRE7]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Operations
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作
- en: 'PyArrow data structure integration is implemented through pandas’ [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") [interface](../development/extending.html#extending-extension-types);
    therefore, supported functionality exists where this interface is integrated within
    the pandas API. Additionally, this functionality is accelerated with PyArrow [compute
    functions](https://arrow.apache.org/docs/python/api/compute.html) where available.
    This includes:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: PyArrow 数据结构集成是通过 pandas 的 [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") [接口](../development/extending.html#extending-extension-types)
    实现的；因此，在 pandas API 中集成了此接口的地方存在支持的功能。此外，当可用时，此功能通过 PyArrow [compute functions](https://arrow.apache.org/docs/python/api/compute.html)
    加速。这包括：
- en: Numeric aggregations
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值聚合
- en: Numeric arithmetic
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值运算
- en: Numeric rounding
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值舍入
- en: Logical and comparison functions
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑和比较函数
- en: String functionality
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串功能
- en: Datetime functionality
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期时间功能
- en: The following are just some examples of operations that are accelerated by native
    PyArrow compute functions.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下只是一些由本机 PyArrow 计算函数加速的操作示例。
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: I/O Reading
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: I/O 读取
- en: PyArrow also provides IO reading functionality that has been integrated into
    several pandas IO readers. The following functions provide an `engine` keyword
    that can dispatch to PyArrow to accelerate reading from an IO source.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: PyArrow 还提供了已集成到几个 pandas IO 读取器中的 IO 读取功能。以下函数提供了一个 `engine` 关键字，可以调度到 PyArrow
    以加速从 IO 源读取。
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
- en: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
- en: '[PRE11]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: By default, these functions and all other IO reader functions return NumPy-backed
    data. These readers can return PyArrow-backed data by specifying the parameter
    `dtype_backend="pyarrow"`. A reader does not need to set `engine="pyarrow"` to
    necessarily return PyArrow-backed data.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，这些函数和所有其他 IO 读取器函数返回 NumPy 支持的数据。这些读取器可以通过指定参数 `dtype_backend="pyarrow"`
    返回 PyArrow 支持的数据。读取器不需要设置 `engine="pyarrow"` 来必然返回 PyArrow 支持的数据。
- en: '[PRE12]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Several non-IO reader functions can also use the `dtype_backend` argument to
    return PyArrow-backed data including:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 还有几个非 IO 读取器函数也可以使用 `dtype_backend` 参数返回 PyArrow 支持的数据，包括：
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
- en: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
- en: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
- en: Data Structure Integration
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据结构集成
- en: A [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"), or
    the columns of a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") can be directly backed by a [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)") which is similar to a NumPy array. To construct these
    from the main pandas data structures, you can pass in a string of the type followed
    by `[pyarrow]`, e.g. `"int64[pyarrow]""` into the `dtype` parameter
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")、[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的列可以直接由一个类似于NumPy数组的[`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(在Apache Arrow v15.0.2版本)")支持，要从主要的pandas���据结构构造这些对象，您可以在类型后面加上`[pyarrow]`的字符串，例如`"int64[pyarrow]"`传递给`dtype`参数
- en: '[PRE13]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The string alias `"string[pyarrow]"` maps to `pd.StringDtype("pyarrow")` which
    is not equivalent to specifying `dtype=pd.ArrowDtype(pa.string())`. Generally,
    operations on the data will behave similarly except `pd.StringDtype("pyarrow")`
    can return NumPy-backed nullable types while `pd.ArrowDtype(pa.string())` will
    return [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype").
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 字符串别名`"string[pyarrow]"`映射到`pd.StringDtype("pyarrow")`，这与指定`dtype=pd.ArrowDtype(pa.string())`不等效。通常，对数据的操作行为类似，除了`pd.StringDtype("pyarrow")`可以返回基于NumPy的可空类型，而`pd.ArrowDtype(pa.string())`将返回[`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype")。
- en: '[PRE14]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: For PyArrow types that accept parameters, you can pass in a PyArrow type with
    those parameters into [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") to use in the `dtype` parameter.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对于接受参数的PyArrow类型，您可以将带有这些参数的PyArrow类型传递给[`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype")以在`dtype`参数中使用。
- en: '[PRE15]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: If you already have an [`pyarrow.Array`](https://arrow.apache.org/docs/python/generated/pyarrow.Array.html#pyarrow.Array
    "(in Apache Arrow v15.0.2)") or [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)"), you can pass it into [`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") to construct the associated [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    object.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经有一个[`pyarrow.Array`](https://arrow.apache.org/docs/python/generated/pyarrow.Array.html#pyarrow.Array
    "(在Apache Arrow v15.0.2版本)")或[`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(在Apache Arrow v15.0.2版本)")，您可以将其传递给[`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray")以构造相关的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")、[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")或[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")对象。
- en: '[PRE18]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: To retrieve a pyarrow [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(in Apache Arrow v15.0.2)") from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), you can call the pyarrow array constructor on the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index").
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要从[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")或[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index")中检索一个pyarrow [`pyarrow.ChunkedArray`](https://arrow.apache.org/docs/python/generated/pyarrow.ChunkedArray.html#pyarrow.ChunkedArray
    "(在Apache Arrow v15.0.2版本)")，您可以在[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")或[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")上调用pyarrow数组构造函数。
- en: '[PRE19]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: To convert a [`pyarrow.Table`](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table
    "(in Apache Arrow v15.0.2)") to a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), you can call the [`pyarrow.Table.to_pandas()`](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table.to_pandas
    "(in Apache Arrow v15.0.2)") method with `types_mapper=pd.ArrowDtype`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要将[`pyarrow.Table`](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table
    "(在Apache Arrow v15.0.2)")转换为[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，您可以使用`types_mapper=pd.ArrowDtype`调用[`pyarrow.Table.to_pandas()`](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html#pyarrow.Table.to_pandas
    "(在Apache Arrow v15.0.2)")方法。
- en: '[PRE20]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Operations
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作
- en: 'PyArrow data structure integration is implemented through pandas’ [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") [interface](../development/extending.html#extending-extension-types);
    therefore, supported functionality exists where this interface is integrated within
    the pandas API. Additionally, this functionality is accelerated with PyArrow [compute
    functions](https://arrow.apache.org/docs/python/api/compute.html) where available.
    This includes:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: PyArrow数据结构集成是通过pandas的[`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") [接口](../development/extending.html#extending-extension-types)实现的；因此，在pandas
    API中集成了此接口的地方存在支持的功能。此外，此功能在可用时通过PyArrow [compute functions](https://arrow.apache.org/docs/python/api/compute.html)加速。这包括：
- en: Numeric aggregations
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值聚合
- en: Numeric arithmetic
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值运算
- en: Numeric rounding
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值舍入
- en: Logical and comparison functions
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑和比较函数
- en: String functionality
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串功能
- en: Datetime functionality
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期时间功能
- en: The following are just some examples of operations that are accelerated by native
    PyArrow compute functions.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下只是一些由本机PyArrow计算函数加速的操作示例。
- en: '[PRE21]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: I/O Reading
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: I/O读取
- en: PyArrow also provides IO reading functionality that has been integrated into
    several pandas IO readers. The following functions provide an `engine` keyword
    that can dispatch to PyArrow to accelerate reading from an IO source.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: PyArrow还提供了已集成到几个pandas IO读取器中的IO读取功能。以下函数提供了一个`engine`关键字，可以调度到PyArrow以加速从IO源读取。
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
- en: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
- en: '[PRE24]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: By default, these functions and all other IO reader functions return NumPy-backed
    data. These readers can return PyArrow-backed data by specifying the parameter
    `dtype_backend="pyarrow"`. A reader does not need to set `engine="pyarrow"` to
    necessarily return PyArrow-backed data.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，这些函数和所有其他IO读取函数返回NumPy支持的数据。通过指定参数`dtype_backend="pyarrow"`，这些读取器可以返回PyArrow支持的数据。读取器不需要设置`engine="pyarrow"`来必然返回PyArrow支持的数据。
- en: '[PRE25]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Several non-IO reader functions can also use the `dtype_backend` argument to
    return PyArrow-backed data including:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些非IO读取函数也可以使用`dtype_backend`参数返回PyArrow支持的数据，包括：
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
- en: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
- en: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
