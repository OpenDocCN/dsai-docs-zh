- en: scipy.stats.wilcoxon
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.wilcoxon.html#scipy.stats.wilcoxon](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.wilcoxon.html#scipy.stats.wilcoxon)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the Wilcoxon signed-rank test.
  prefs: []
  type: TYPE_NORMAL
- en: The Wilcoxon signed-rank test tests the null hypothesis that two related paired
    samples come from the same distribution. In particular, it tests whether the distribution
    of the differences `x - y` is symmetric about zero. It is a non-parametric version
    of the paired T-test.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Either the first set of measurements (in which case `y` is the second set of
    measurements), or the differences between two sets of measurements (in which case
    `y` is not to be specified.) Must be one-dimensional.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Either the second set of measurements (if `x` is the first set of measurements),
    or not specified (if `x` is the differences between two sets of measurements.)
    Must be one-dimensional.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: When *y* is provided, [`wilcoxon`](#scipy.stats.wilcoxon "scipy.stats.wilcoxon")
    calculates the test statistic based on the ranks of the absolute values of `d
    = x - y`. Roundoff error in the subtraction can result in elements of `d` being
    assigned different ranks even when they would be tied with exact arithmetic. Rather
    than passing *x* and *y* separately, consider computing the difference `x - y`,
    rounding as needed to ensure that only truly unique elements are numerically distinct,
    and passing the result as *x*, leaving *y* at the default (None).
  prefs: []
  type: TYPE_NORMAL
- en: '**zero_method**{“wilcox”, “pratt”, “zsplit”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: There are different conventions for handling pairs of observations with equal
    values (“zero-differences”, or “zeros”).
  prefs: []
  type: TYPE_NORMAL
- en: '“wilcox”: Discards all zero-differences (default); see [[4]](#r996422d5c98f-4).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '“pratt”: Includes zero-differences in the ranking process, but drops the ranks
    of the zeros (more conservative); see [[3]](#r996422d5c98f-3). In this case, the
    normal approximation is adjusted as in [[5]](#r996422d5c98f-5).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '“zsplit”: Includes zero-differences in the ranking process and splits the zero
    rank between positive and negative ones.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**correction**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, apply continuity correction by adjusting the Wilcoxon rank statistic
    by 0.5 towards the mean value when computing the z-statistic if a normal approximation
    is used. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: '**alternative**{“two-sided”, “greater”, “less”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Defines the alternative hypothesis. Default is ‘two-sided’. In the following,
    let `d` represent the difference between the paired samples: `d = x - y` if both
    `x` and `y` are provided, or `d = x` otherwise.'
  prefs: []
  type: TYPE_NORMAL
- en: '‘two-sided’: the distribution underlying `d` is not symmetric about zero.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘less’: the distribution underlying `d` is stochastically less than a distribution
    symmetric about zero.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '‘greater’: the distribution underlying `d` is stochastically greater than a
    distribution symmetric about zero.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**method**{“auto”, “exact”, “approx”}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Method to calculate the p-value, see Notes. Default is “auto”.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int or None, default: 0'
  prefs: []
  type: TYPE_NORMAL
- en: If an int, the axis of the input along which to compute the statistic. The statistic
    of each axis-slice (e.g. row) of the input will appear in a corresponding element
    of the output. If `None`, the input will be raveled before computing the statistic.
  prefs: []
  type: TYPE_NORMAL
- en: '**nan_policy**{‘propagate’, ‘omit’, ‘raise’}'
  prefs: []
  type: TYPE_NORMAL
- en: Defines how to handle input NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: '`propagate`: if a NaN is present in the axis slice (e.g. row) along which the
    statistic is computed, the corresponding entry of the output will be NaN.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`omit`: NaNs will be omitted when performing the calculation. If insufficient
    data remains in the axis slice along which the statistic is computed, the corresponding
    entry of the output will be NaN.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`raise`: if a NaN is present, a `ValueError` will be raised.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**keepdims**bool, default: False'
  prefs: []
  type: TYPE_NORMAL
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the input array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: An object with the following attributes.
  prefs: []
  type: TYPE_NORMAL
- en: '**statistic**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: If *alternative* is “two-sided”, the sum of the ranks of the differences above
    or below zero, whichever is smaller. Otherwise the sum of the ranks of the differences
    above zero.
  prefs: []
  type: TYPE_NORMAL
- en: '**pvalue**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The p-value for the test depending on *alternative* and *method*.
  prefs: []
  type: TYPE_NORMAL
- en: '**zstatistic**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: 'When `method = ''approx''`, this is the normalized z-statistic:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: where `T` is *statistic* as defined above, `mn` is the mean of the distribution
    under the null hypothesis, `d` is a continuity correction, and `se` is the standard
    error. When `method != 'approx'`, this attribute is not available.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`kruskal`](scipy.stats.kruskal.html#scipy.stats.kruskal "scipy.stats.kruskal"),
    [`mannwhitneyu`](scipy.stats.mannwhitneyu.html#scipy.stats.mannwhitneyu "scipy.stats.mannwhitneyu")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following, let `d` represent the difference between the paired samples:
    `d = x - y` if both `x` and `y` are provided, or `d = x` otherwise. Assume that
    all elements of `d` are independent and identically distributed observations,
    and all are distinct and nonzero.'
  prefs: []
  type: TYPE_NORMAL
- en: When `len(d)` is sufficiently large, the null distribution of the normalized
    test statistic (*zstatistic* above) is approximately normal, and `method = 'approx'`
    can be used to compute the p-value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When `len(d)` is small, the normal approximation may not be accurate, and `method='exact'`
    is preferred (at the cost of additional execution time).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The default, `method=''auto''`, selects between the two: when `len(d) <= 50`,
    the exact method is used; otherwise, the approximate method is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The presence of “ties” (i.e. not all elements of `d` are unique) and “zeros”
    (i.e. elements of `d` are zero) changes the null distribution of the test statistic,
    and `method='exact'` no longer calculates the exact p-value. If `method='approx'`,
    the z-statistic is adjusted for more accurate comparison against the standard
    normal, but still, for finite sample sizes, the standard normal is only an approximation
    of the true null distribution of the z-statistic. There is no clear consensus
    among references on which method most accurately approximates the p-value for
    small samples in the presence of zeros and/or ties. In any case, this is the behavior
    of [`wilcoxon`](#scipy.stats.wilcoxon "scipy.stats.wilcoxon") when [PRE2] is used
    when `len(d) <= 50` *and there are no zeros*; otherwise, `method='approx'` is
    used.
  prefs: []
  type: TYPE_NORMAL
- en: Beginning in SciPy 1.9, `np.matrix` inputs (not recommended for new code) are
    converted to `np.ndarray` before the calculation is performed. In this case, the
    output will be a scalar or `np.ndarray` of appropriate shape rather than a 2D
    `np.matrix`. Similarly, while masked elements of masked arrays are ignored, the
    output will be a scalar or `np.ndarray` rather than a masked array with `mask=False`.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test](https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2]'
  prefs: []
  type: TYPE_NORMAL
- en: Conover, W.J., Practical Nonparametric Statistics, 1971.
  prefs: []
  type: TYPE_NORMAL
- en: '[[3](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: Pratt, J.W., Remarks on Zeros and Ties in the Wilcoxon Signed Rank Procedures,
    Journal of the American Statistical Association, Vol. 54, 1959, pp. 655-667\.
    [DOI:10.1080/01621459.1959.10501526](https://doi.org/10.1080/01621459.1959.10501526)
  prefs: []
  type: TYPE_NORMAL
- en: '[4] ([1](#id1),[2](#id9))'
  prefs: []
  type: TYPE_NORMAL
- en: Wilcoxon, F., Individual Comparisons by Ranking Methods, Biometrics Bulletin,
    Vol. 1, 1945, pp. 80-83\. [DOI:10.2307/3001968](https://doi.org/10.2307/3001968)
  prefs: []
  type: TYPE_NORMAL
- en: '[[5](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: Cureton, E.E., The Normal Approximation to the Signed-Rank Sampling Distribution
    When Zero Differences are Present, Journal of the American Statistical Association,
    Vol. 62, 1967, pp. 1068-1069\. [DOI:10.1080/01621459.1967.10500917](https://doi.org/10.1080/01621459.1967.10500917)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'In [[4]](#r996422d5c98f-4), the differences in height between cross- and self-fertilized
    corn plants is given as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Cross-fertilized plants appear to be higher. To test the null hypothesis that
    there is no height difference, we can apply the two-sided test:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Hence, we would reject the null hypothesis at a confidence level of 5%, concluding
    that there is a difference in height between the groups. To confirm that the median
    of the differences can be assumed to be positive, we use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'This shows that the null hypothesis that the median is negative can be rejected
    at a confidence level of 5% in favor of the alternative that the median is greater
    than zero. The p-values above are exact. Using the normal approximation gives
    very similar values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Note that the statistic changed to 96 in the one-sided case (the sum of ranks
    of positive differences) whereas it is 24 in the two-sided case (the minimum of
    sum of ranks above and below zero).
  prefs: []
  type: TYPE_NORMAL
- en: 'In the example above, the differences in height between paired plants are provided
    to [`wilcoxon`](#scipy.stats.wilcoxon "scipy.stats.wilcoxon") directly. Alternatively,
    [`wilcoxon`](#scipy.stats.wilcoxon "scipy.stats.wilcoxon") accepts two samples
    of equal length, calculates the differences between paired elements, then performs
    the test. Consider the samples `x` and `y`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that had we calculated the differences by hand, the test would have produced
    different results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The substantial difference is due to roundoff error in the results of `x-y`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Even though we expected all the elements of `(x-y)[1:]` to have the same magnitude
    `0.05`, they have slightly different magnitudes in practice, and therefore are
    assigned different ranks in the test. Before performing the test, consider calculating
    `d` and adjusting it as necessary to ensure that theoretically identically values
    are not numerically distinct. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
