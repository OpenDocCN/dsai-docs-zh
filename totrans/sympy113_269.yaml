- en: Polygons
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多边形
- en: Original text：[https://docs.sympy.org/latest/modules/geometry/polygons.html](https://docs.sympy.org/latest/modules/geometry/polygons.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.sympy.org/latest/modules/geometry/polygons.html](https://docs.sympy.org/latest/modules/geometry/polygons.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A two-dimensional polygon.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 二维多边形。
- en: A simple polygon in space. Can be constructed from a sequence of points or from
    a center, radius, number of sides and rotation angle.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一个空间中的简单多边形。可以从一系列点或从中心、半径、边数和旋转角度构造。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**vertices**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**顶点**'
- en: A sequence of points.
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一系列点。
- en: '**n** : int, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数，可选'
- en: If \(> 0\), an n-sided RegularPolygon is created. Default value is \(0\).
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果 \(> 0\)，则创建一个n边的正多边形。默认值为 \(0\)。
- en: 'Raises:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: '**GeometryError**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**几何错误**'
- en: If all parameters are not Points.
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果所有参数都不是点。
- en: Notes
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Polygons are treated as closed paths rather than 2D areas so some calculations
    can be be negative or positive (e.g., area) based on the orientation of the points.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形被视为封闭路径，而不是2D区域，因此一些计算可以基于点的方向是负数或正数（例如，面积）。
- en: Any consecutive identical points are reduced to a single point and any points
    collinear and between two points will be removed unless they are needed to define
    an explicit intersection (see examples).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 任何连续相同的点都会被减少为一个点，并且任何共线且位于两点之间的点都将被移除，除非它们需要定义显式交点（参见示例）。
- en: A Triangle, Segment or Point will be returned when there are 3 or fewer points
    provided.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当提供的点数为3个或更少时，将返回一个三角形、线段或点。
- en: Examples
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The area of a polygon is calculated as positive when vertices are traversed
    in a ccw direction. When the sides of a polygon cross the area will have positive
    and negative contributions. The following defines a Z shape where the bottom right
    connects back to the top left.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形的面积在顶点沿逆时针方向遍历时被计算为正数。当多边形的边相交时，面积将具有正数和负数的贡献。以下定义了一个 Z 形状，其中右下角连接回左上角。
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When the keyword \(n\) is used to define the number of sides of the Polygon
    then a RegularPolygon is created and the other arguments are interpreted as center,
    radius and rotation. The unrotated RegularPolygon will always have a vertex at
    Point(r, 0) where \(r\) is the radius of the circle that circumscribes the RegularPolygon.
    Its method \(spin\) can be used to increment that angle.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当关键词 \(n\) 用于定义多边形的边数时，将创建一个正多边形，并将其他参数解释为中心、半径和旋转。未旋转的正多边形始终在点\( (r, 0) \)处具有一个顶点，其中
    \(r\) 是围绕正多边形的圆的半径。其方法 \(spin\) 可用于增加该角度。
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: See also
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment "sympy.geometry.line.Segment"),
    [`Triangle`](#sympy.geometry.polygon.Triangle "sympy.geometry.polygon.Triangle")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")，[`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment
    "sympy.geometry.line.Segment")，[`Triangle`](#sympy.geometry.polygon.Triangle "sympy.geometry.polygon.Triangle")'
- en: Attributes
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| area |  |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 面积 |  |'
- en: '| angles |  |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 角度 |  |'
- en: '| perimeter |  |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 周长 |  |'
- en: '| vertices |  |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 顶点 |  |'
- en: '| centroid |  |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 重心 |  |'
- en: '| sides |  |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 边数 |  |'
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The internal angle at each vertex.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 每个顶点处的内角。
- en: 'Returns:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**angles** : dict'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**角度**：字典'
- en: A dictionary where each key is a vertex and each value is the internal angle
    at that vertex. The vertices are represented as Points.
  id: totrans-36
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个字典，其中每个键是一个顶点，每个值是该顶点处的内角。这些顶点表示为点。
- en: Examples
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: See also
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.LinearEntity.angle_between`](lines.html#sympy.geometry.line.LinearEntity.angle_between
    "sympy.geometry.line.LinearEntity.angle_between")'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")，[`sympy.geometry.line.LinearEntity.angle_between`](lines.html#sympy.geometry.line.LinearEntity.angle_between
    "sympy.geometry.line.LinearEntity.angle_between")'
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: A parameterized point on the polygon.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形上的参数化点。
- en: The parameter, varying from 0 to 1, assigns points to the position on the perimeter
    that is that fraction of the total perimeter. So the point evaluated at t=1/2
    would return the point from the first vertex that is 1/2 way around the polygon.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 参数，从0到1变化，将点分配到周长上的位置，即总周长的分数部分。因此，在 \(t=1/2\) 处评估的点将返回围绕多边形一半的第一个顶点的点。
- en: 'Parameters:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**parameter** : str, optional'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**参数**：字符串，可选'
- en: Default value is ‘t’.
  id: totrans-46
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 默认值为‘t’。
- en: 'Returns:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**arbitrary_point** : Point'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**任意点**：点'
- en: 'Raises:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出：
- en: '**ValueError**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值错误**'
- en: When \(parameter\) already appears in the Polygon’s definition.
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当多边形的定义中已经出现 \(parameter\) 时。
- en: Examples
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: See also
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
- en: '[PRE8]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The area of the polygon.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形的面积。
- en: Notes
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: The area calculation can be positive or negative based on the orientation of
    the points. If any side of the polygon crosses any other side, there will be areas
    having opposite signs.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 根据点的定位，区域计算可能为正或负。如果多边形的任一边穿过其他边，则将存在具有相反符号的区域。
- en: Examples
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the Z shaped polygon (with the lower right connecting back to the upper
    left) the areas cancel out:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Z 形多边形中（右下角连接回左上角），区域相互抵消：
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In the M shaped polygon, areas do not cancel because no side crosses any other
    (though there is a point of contact).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在 M 形多边形中，区域不会取消，因为没有一条边穿过其他边（尽管存在接触点）。
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: See also
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.ellipse.Ellipse.area`](ellipses.html#sympy.geometry.ellipse.Ellipse.area
    "sympy.geometry.ellipse.Ellipse.area")'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.ellipse.Ellipse.area`](ellipses.html#sympy.geometry.ellipse.Ellipse.area
    "sympy.geometry.ellipse.Ellipse.area")'
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Returns angle bisectors of a polygon. If prec is given then approximate the
    point defining the ray to that precision.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 返回多边形的角平分线。如果给定 prec，则将点定义为该精度的近似点。
- en: The distance between the points defining the bisector ray is 1.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 定义角分隔线段的点之间的距离为 1。
- en: Examples
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE13]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Return a tuple (xmin, ymin, xmax, ymax) representing the bounding rectangle
    for the geometric figure.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个元组 (xmin, ymin, xmax, ymax)，表示几何图形的边界矩形。
- en: '[PRE15]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The centroid of the polygon.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形的质心。
- en: 'Returns:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**centroid** : Point'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**质心** : 点'
- en: Examples
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE16]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: See also
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.util.centroid`](utils.html#sympy.geometry.util.centroid "sympy.geometry.util.centroid")'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.util.centroid`](utils.html#sympy.geometry.util.centroid "sympy.geometry.util.centroid")'
- en: '[PRE17]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Returns a tuple of two polygon segments that lie above and below the intersecting
    line respectively.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个包含与交叉线上方和下方的两个多边形段的元组。
- en: 'Parameters:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**line: Line object of geometry module**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**line: 几何模块中的线对象**'
- en: line which cuts the Polygon. The part of the Polygon that lies above and below
    this line is returned.
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 切割多边形的线。返回位于该线上方和下方的多边形的部分。
- en: 'Returns:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'upper_polygon, lower_polygon: Polygon objects or None'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: upper_polygon, lower_polygon：多边形对象或 None
- en: upper_polygon is the polygon that lies above the given line. lower_polygon is
    the polygon that lies below the given line. upper_polygon and lower polygon are
    `None` when no polygon exists above the line or below the line.
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 上多边形是位于给定线上方的多边形。下多边形是位于给定线下方的多边形。当线上方或线下方不存在多边形时，上多边形和下多边形均为 `None`。
- en: 'Raises:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出异常：
- en: '**ValueError: When the line does not intersect the polygon**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValueError: 当线段不与多边形相交时**'
- en: Examples
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE18]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: References
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R553](#id1)]'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R553](#id1)]'
- en: '[https://github.com/sympy/sympy/wiki/A-method-to-return-a-cut-section-of-any-polygon-geometry](https://github.com/sympy/sympy/wiki/A-method-to-return-a-cut-section-of-any-polygon-geometry)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[   [https://github.com/sympy/sympy/wiki/A-method-to-return-a-cut-section-of-any-polygon-geometry](https://github.com/sympy/sympy/wiki/A-method-to-return-a-cut-section-of-any-polygon-geometry)'
- en: '[PRE19]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Returns the shortest distance between self and o.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 返回自身与 o 之间的最短距离。
- en: If o is a point, then self does not need to be convex. If o is another polygon
    self and o must be convex.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 o 是一个点，则 self 不需要是凸的。如果 o 是另一个多边形，则 self 和 o 必须是凸的。
- en: Examples
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE20]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Return True if p is enclosed by (is inside of) self.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 p 被包含在 self 中（即在内部），则返回 True。
- en: 'Parameters:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**p** : Point'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**p** : 点'
- en: 'Returns:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**encloses_point** : True, False or None'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**encloses_point** : True, False 或 None'
- en: Notes
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Being on the border of self is considered False.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 被视为位于自身边界上为 False。
- en: Examples
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE22]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: See also
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.ellipse.Ellipse.encloses_point`](ellipses.html#sympy.geometry.ellipse.Ellipse.encloses_point
    "sympy.geometry.ellipse.Ellipse.encloses_point")'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.ellipse.Ellipse.encloses_point`](ellipses.html#sympy.geometry.ellipse.Ellipse.encloses_point
    "sympy.geometry.ellipse.Ellipse.encloses_point")'
- en: References
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[[R554](#id2)]'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R554](#id2)]'
- en: '[https://paulbourke.net/geometry/polygonmesh/#insidepoly](https://paulbourke.net/geometry/polygonmesh/#insidepoly)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://paulbourke.net/geometry/polygonmesh/#insidepoly](https://paulbourke.net/geometry/polygonmesh/#insidepoly)'
- en: '[PRE23]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Returns the first moment of area of a two-dimensional polygon with respect to
    a certain point of interest.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 返回关于特定兴趣点的二维多边形的第一矩。
- en: First moment of area is a measure of the distribution of the area of a polygon
    in relation to an axis. The first moment of area of the entire polygon about its
    own centroid is always zero. Therefore, here it is calculated for an area, above
    or below a certain point of interest, that makes up a smaller portion of the polygon.
    This area is bounded by the point of interest and the extreme end (top or bottom)
    of the polygon. The first moment for this area is is then determined about the
    centroidal axis of the initial polygon.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 面积的第一矩是多边形面积相对于轴的分布的度量。整个多边形关于其自身的质心的第一矩总是零。因此，这里计算了关于感兴趣点上方或下方构成多边形的一小部分的面积的第一矩。该区域由感兴趣点和多边形的极端端点（顶部或底部）界定。然后计算了该区域关于初始多边形的质心轴的第一矩。
- en: 'Parameters:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**point: Point, two-tuple of sympifyable objects, or None (default=None)**'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**point: Point, two-tuple of sympifyable objects, or None (default=None)**'
- en: point is the point above or below which the area of interest lies If `point=None`
    then the centroid acts as the point of interest.
  id: totrans-123
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 点是感兴趣区域上方或下方的点。如果`point=None`，则质心充当感兴趣点。
- en: 'Returns:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'Q_x, Q_y: number or SymPy expressions'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q_x, Q_y: 数字或 SymPy 表达式'
- en: Q_x is the first moment of area about the x-axis Q_y is the first moment of
    area about the y-axis A negative sign indicates that the section modulus is determined
    for a section below (or left of) the centroidal axis
  id: totrans-126
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Q_x 是关于 x 轴的面积的第一矩 Q_y 是关于 y 轴的面积的第一矩 负号表示截面模量是为负的（或在质心轴的左侧）。
- en: Examples
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE24]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: References
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R555](#id3)]'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R555](#id3)]'
- en: '[https://skyciv.com/docs/tutorials/section-tutorials/calculating-the-statical-or-first-moment-of-area-of-beam-sections/?cc=BMD](https://skyciv.com/docs/tutorials/section-tutorials/calculating-the-statical-or-first-moment-of-area-of-beam-sections/?cc=BMD)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://skyciv.com/docs/tutorials/section-tutorials/calculating-the-statical-or-first-moment-of-area-of-beam-sections/?cc=BMD](https://skyciv.com/docs/tutorials/section-tutorials/calculating-the-statical-or-first-moment-of-area-of-beam-sections/?cc=BMD)'
- en: '[[R556](#id4)]'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R556](#id4)]'
- en: '[https://mechanicalc.com/reference/cross-sections](https://mechanicalc.com/reference/cross-sections)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mechanicalc.com/reference/cross-sections](https://mechanicalc.com/reference/cross-sections)'
- en: '[PRE25]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The intersection of polygon and geometry entity.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形与几何实体的交点。
- en: The intersection may be empty and can contain individual Points and complete
    Line Segments.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 交点可能为空，可以包含单独的点和完整的线段。
- en: 'Parameters:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**other: GeometryEntity**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**other: GeometryEntity**'
- en: 'Returns:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**intersection** : list'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**intersection** : 列表'
- en: The list of Segments and Points
  id: totrans-141
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 线段和点的列表
- en: Examples
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE26]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: See also
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment "sympy.geometry.line.Segment")'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment "sympy.geometry.line.Segment")'
- en: '[PRE27]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Is the polygon convex?
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形是否是凸的？
- en: A polygon is convex if all its interior angles are less than 180 degrees and
    there are no intersections between sides.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形凸多边形的内角小于180度且边之间没有交叉。
- en: 'Returns:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**is_convex** : boolean'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**is_convex** : 布尔值'
- en: True if this polygon is convex, False otherwise.
  id: totrans-151
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果多边形是凸的则为 True，否则为 False。
- en: Examples
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE28]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: See also
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.geometry.util.convex_hull`](utils.html#sympy.geometry.util.convex_hull
    "sympy.geometry.util.convex_hull")'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.util.convex_hull`](utils.html#sympy.geometry.util.convex_hull
    "sympy.geometry.util.convex_hull")'
- en: '[PRE29]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The perimeter of the polygon.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形的周长。
- en: 'Returns:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**perimeter** : number or Basic instance'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**perimeter** : 数字或 Basic 实例'
- en: Examples
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE30]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: See also
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.geometry.line.Segment.length`](lines.html#sympy.geometry.line.Segment.length
    "sympy.geometry.line.Segment.length")'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.line.Segment.length`](lines.html#sympy.geometry.line.Segment.length
    "sympy.geometry.line.Segment.length")'
- en: '[PRE31]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The plot interval for the default geometric plot of the polygon.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 默认几何图形绘制多边形的绘图间隔。
- en: 'Parameters:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**parameter** : str, optional'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**parameter** : 字符串，可选'
- en: Default value is ‘t’.
  id: totrans-168
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 默认值是‘t’。
- en: 'Returns:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**plot_interval** : list (plot interval)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**plot_interval** : 列表（绘图间隔）'
- en: '[parameter, lower_bound, upper_bound]'
  id: totrans-171
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[parameter, lower_bound, upper_bound]'
- en: Examples
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE32]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Returns the polar modulus of a two-dimensional polygon
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 返回二维多边形的极坐标模量
- en: It is a constituent of the second moment of area, linked through the perpendicular
    axis theorem. While the planar second moment of area describes an object’s resistance
    to deflection (bending) when subjected to a force applied to a plane parallel
    to the central axis, the polar second moment of area describes an object’s resistance
    to deflection when subjected to a moment applied in a plane perpendicular to the
    object’s central axis (i.e. parallel to the cross-section)
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 它是截面惯性矩的组成部分，通过垂直轴定理相连。平面截面惯性矩描述了物体在受力作用于与中心轴平行的平面时的抗挠性（弯曲），而极点截面惯性矩描述了物体在受力作用于垂直于物体中心轴的平面（即与横截面平行）时的抗挠性。
- en: Examples
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE34]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: References
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R557](#id5)]'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R557](#id5)]'
- en: '[https://en.wikipedia.org/wiki/Polar_moment_of_inertia](https://en.wikipedia.org/wiki/Polar_moment_of_inertia)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Polar_moment_of_inertia](https://en.wikipedia.org/wiki/Polar_moment_of_inertia)'
- en: '[PRE35]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Returns the second moment and product moment of area of a two dimensional polygon.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 返回二维多边形的第二矩和产品矩。
- en: 'Parameters:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**point** : Point, two-tuple of sympifyable objects, or None(default=None)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '**point**：Point，两个可用 sympify 对象的元组，或 None（默认为 None）'
- en: point is the point about which second moment of area is to be found. If “point=None”
    it will be calculated about the axis passing through the centroid of the polygon.
  id: totrans-186
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: point 是需要找到截面惯性矩的点。如果“point=None”，则会计算通过多边形质心的轴的截面惯性矩。
- en: 'Returns:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**I_xx, I_yy, I_xy** : number or SymPy expression'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '**I_xx, I_yy, I_xy**：数字或 SymPy 表达式'
- en: I_xx, I_yy are second moment of area of a two dimensional polygon. I_xy is product
    moment of area of a two dimensional polygon.
  id: totrans-189
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: I_xx, I_yy 是二维多边形的截面惯性矩。I_xy 是二维多边形的产品惯性矩。
- en: Examples
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE36]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: References
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R558](#id6)]'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R558](#id6)]'
- en: '[https://en.wikipedia.org/wiki/Second_moment_of_area](https://en.wikipedia.org/wiki/Second_moment_of_area)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Second_moment_of_area](https://en.wikipedia.org/wiki/Second_moment_of_area)'
- en: '[PRE37]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Returns a tuple with the section modulus of a two-dimensional polygon.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个包含二维多边形截面模量的元组。
- en: Section modulus is a geometric property of a polygon defined as the ratio of
    second moment of area to the distance of the extreme end of the polygon from the
    centroidal axis.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 截面模量是多边形的几何特性，定义为截面惯性矩与多边形端点到质心轴距离的比值。
- en: 'Parameters:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**point** : Point, two-tuple of sympifyable objects, or None(default=None)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '**point**：Point，两个可用 sympify 对象的元组，或 None（默认为 None）'
- en: point is the point at which section modulus is to be found. If “point=None”
    it will be calculated for the point farthest from the centroidal axis of the polygon.
  id: totrans-200
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: point 是需要找到截面模量的点。如果“point=None”，则会计算距离多边形质心轴最远的点的截面模量。
- en: 'Returns:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'S_x, S_y: numbers or SymPy expressions'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: S_x, S_y：数字或 SymPy 表达式
- en: S_x is the section modulus with respect to the x-axis S_y is the section modulus
    with respect to the y-axis A negative sign indicates that the section modulus
    is determined for a point below the centroidal axis
  id: totrans-203
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: S_x 是相对于 x 轴的截面模量，S_y 是相对于 y 轴的截面模量。负号表示截面模量是针对质心轴下方一点确定的。
- en: Examples
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE38]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: References
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R559](#id7)]'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R559](#id7)]'
- en: '[https://en.wikipedia.org/wiki/Section_modulus](https://en.wikipedia.org/wiki/Section_modulus)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Section_modulus](https://en.wikipedia.org/wiki/Section_modulus)'
- en: '[PRE39]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The directed line segments that form the sides of the polygon.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 形成多边形边的有向线段。
- en: 'Returns:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**sides** : list of sides'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '**sides**：边的列表'
- en: Each side is a directed Segment.
  id: totrans-213
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 每条边都是一个有向线段。
- en: Examples
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE40]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: See also
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment "sympy.geometry.line.Segment")'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")，[`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment
    "sympy.geometry.line.Segment")'
- en: '[PRE41]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The vertices of the polygon.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形的顶点。
- en: 'Returns:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**vertices** : list of Points'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**vertices**：点的列表'
- en: Notes
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When iterating over the vertices, it is more efficient to index self rather
    than to request the vertices and index them. Only use the vertices when you want
    to process all of them at once. This is even more important with RegularPolygons
    that calculate each vertex.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在迭代顶点时，比起请求顶点并对其进行索引，直接使用self更有效率。只有在想一次性处理所有顶点时才使用顶点。这在计算每个顶点的RegularPolygons时尤为重要。
- en: Examples
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE42]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: See also
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
- en: '[PRE43]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: A regular polygon.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 一个正多边形。
- en: Such a polygon has all internal angles equal and all sides the same length.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的多边形所有内角相等，所有边相同长度。
- en: 'Parameters:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**center** : Point'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '**中心**：点'
- en: '**radius** : number or Basic instance'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**半径**：数字或基本实例'
- en: The distance from the center to a vertex
  id: totrans-234
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从中心到顶点的距离
- en: '**n** : int'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '**n**：整数'
- en: The number of sides
  id: totrans-236
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 边数
- en: 'Raises:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 异常
- en: '**GeometryError**'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '**几何错误**'
- en: If the \(center\) is not a Point, or the \(radius\) is not a number or Basic
    instance, or the number of sides, \(n\), is less than three.
  id: totrans-239
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果\(中心\)不是一个点，或\(半径\)不是数字或基本实例，或者边数\(n\)小于三。
- en: Notes
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: A RegularPolygon can be instantiated with Polygon with the kwarg n.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 用关键字参数n实例化多边形Polygon。
- en: Regular polygons are instantiated with a center, radius, number of sides and
    a rotation angle. Whereas the arguments of a Polygon are vertices, the vertices
    of the RegularPolygon must be obtained with the vertices method.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 常规多边形用中心、半径、边数和旋转角度实例化。与多边形的参数为顶点不同，常规多边形的顶点必须通过顶点方法获取。
- en: Examples
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE44]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: See also
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`Polygon`](#sympy.geometry.polygon.Polygon "sympy.geometry.polygon.Polygon")'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`多边形`](#sympy.geometry.polygon.Polygon "sympy.geometry.polygon.Polygon")'
- en: Attributes
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| vertices |  |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| 顶点 |  |'
- en: '| center |  |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| 中心 |  |'
- en: '| radius |  |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| 半径 |  |'
- en: '| rotation |  |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| 旋转 |  |'
- en: '| apothem |  |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| 缩径 |  |'
- en: '| interior_angle |  |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| 内角 |  |'
- en: '| exterior_angle |  |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| 外角 |  |'
- en: '| circumcircle |  |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| 外接圆 |  |'
- en: '| incircle |  |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| 内切圆 |  |'
- en: '| angles |  |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| 角度 |  |'
- en: '[PRE45]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Returns a dictionary with keys, the vertices of the Polygon, and values, the
    interior angle at each vertex.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 返回字典，键为多边形的顶点，值为每个顶点的内角。
- en: Examples
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE46]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The inradius of the RegularPolygon.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 常规多边形的内接圆半径。
- en: The apothem/inradius is the radius of the inscribed circle.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 顶点距离/内接圆半径为内接圆的半径。
- en: 'Returns:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**apothem** : number or instance of Basic'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '**缩径**：数字或基本实例'
- en: Examples
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE48]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: See also
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.geometry.line.Segment.length`](lines.html#sympy.geometry.line.Segment.length
    "sympy.geometry.line.Segment.length"), [`sympy.geometry.ellipse.Circle.radius`](ellipses.html#sympy.geometry.ellipse.Circle.radius
    "sympy.geometry.ellipse.Circle.radius")'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.line.Segment.length`](lines.html#sympy.geometry.line.Segment.length
    "sympy.geometry.line.Segment.length"), [`sympy.geometry.ellipse.Circle.radius`](ellipses.html#sympy.geometry.ellipse.Circle.radius
    "sympy.geometry.ellipse.Circle.radius")'
- en: '[PRE49]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Returns the area.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 返回面积。
- en: Examples
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE50]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Returns the center point, the radius, the number of sides, and the orientation
    angle.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 返回中心点、半径、边数和方向角。
- en: Examples
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE52]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: The center of the RegularPolygon
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 常规多边形的中心
- en: This is also the center of the circumscribing circle.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是外接圆的中心。
- en: 'Returns:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**center** : Point'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '**中心**：点'
- en: Examples
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE54]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: See also
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.ellipse.Ellipse.center`](ellipses.html#sympy.geometry.ellipse.Ellipse.center
    "sympy.geometry.ellipse.Ellipse.center")'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.ellipse.Ellipse.center`](ellipses.html#sympy.geometry.ellipse.Ellipse.center
    "sympy.geometry.ellipse.Ellipse.center")'
- en: '[PRE55]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: The center of the RegularPolygon
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 常规多边形的中心
- en: This is also the center of the circumscribing circle.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是外接圆的中心。
- en: 'Returns:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**center** : Point'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '**中心**：点'
- en: Examples
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE56]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: See also
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.ellipse.Ellipse.center`](ellipses.html#sympy.geometry.ellipse.Ellipse.center
    "sympy.geometry.ellipse.Ellipse.center")'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.ellipse.Ellipse.center`](ellipses.html#sympy.geometry.ellipse.Ellipse.center
    "sympy.geometry.ellipse.Ellipse.center")'
- en: '[PRE57]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Alias for center.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 别名为中心。
- en: Examples
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE58]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: The circumcircle of the RegularPolygon.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 常规多边形的外接圆。
- en: 'Returns:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**circumcircle** : Circle'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '**外接圆**：圆'
- en: Examples
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE60]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: See also
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`circumcenter`](#sympy.geometry.polygon.RegularPolygon.circumcenter "sympy.geometry.polygon.RegularPolygon.circumcenter"),
    [`sympy.geometry.ellipse.Circle`](ellipses.html#sympy.geometry.ellipse.Circle
    "sympy.geometry.ellipse.Circle")'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '[`外接圆心`](#sympy.geometry.polygon.RegularPolygon.circumcenter "sympy.geometry.polygon.RegularPolygon.circumcenter"),
    [`sympy.geometry.ellipse.Circle`](ellipses.html#sympy.geometry.ellipse.Circle
    "sympy.geometry.ellipse.Circle")'
- en: '[PRE61]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Alias for radius.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 别名为半径。
- en: Examples
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE62]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Return True if p is enclosed by (is inside of) self.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 如果p被包围（在内部）则返回True。
- en: 'Parameters:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**p** : Point'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '**p**：点'
- en: 'Returns:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**encloses_point** : True, False or None'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '**包含点**：是、否或无'
- en: Notes
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: Being on the border of self is considered False.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 被认为不在自身边界上是 False。
- en: The general Polygon.encloses_point method is called only if a point is not within
    or beyond the incircle or circumcircle, respectively.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 如果点不在内切圆或外接圆内，只有在一般的 Polygon.encloses_point 方法被调用时才返回。
- en: Examples
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE64]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: See also
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.ellipse.Ellipse.encloses_point`](ellipses.html#sympy.geometry.ellipse.Ellipse.encloses_point
    "sympy.geometry.ellipse.Ellipse.encloses_point")'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.ellipse.Ellipse.encloses_point`](ellipses.html#sympy.geometry.ellipse.Ellipse.encloses_point
    "sympy.geometry.ellipse.Ellipse.encloses_point")'
- en: '[PRE65]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Measure of the exterior angles.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 外角的测量。
- en: 'Returns:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**exterior_angle** : number'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '**外角**：数字'
- en: Examples
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE66]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: See also
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.line.LinearEntity.angle_between`](lines.html#sympy.geometry.line.LinearEntity.angle_between
    "sympy.geometry.line.LinearEntity.angle_between")'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.line.LinearEntity.angle_between`](lines.html#sympy.geometry.line.LinearEntity.angle_between
    "sympy.geometry.line.LinearEntity.angle_between")'
- en: '[PRE67]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: The incircle of the RegularPolygon.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: RegularPolygon 的内切圆。
- en: 'Returns:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**incircle** : Circle'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '**内切圆**：Circle'
- en: Examples
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE68]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: See also
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`inradius`](#sympy.geometry.polygon.RegularPolygon.inradius "sympy.geometry.polygon.RegularPolygon.inradius"),
    [`sympy.geometry.ellipse.Circle`](ellipses.html#sympy.geometry.ellipse.Circle
    "sympy.geometry.ellipse.Circle")'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '[`inradius`](#sympy.geometry.polygon.RegularPolygon.inradius "sympy.geometry.polygon.RegularPolygon.inradius"),
    [`sympy.geometry.ellipse.Circle`](ellipses.html#sympy.geometry.ellipse.Circle
    "sympy.geometry.ellipse.Circle")'
- en: '[PRE69]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Alias for apothem.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: apothem 的别名。
- en: Examples
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE70]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Measure of the interior angles.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 内角的测量。
- en: 'Returns:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**interior_angle** : number'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '**内角**：数字'
- en: Examples
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE72]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: See also
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.line.LinearEntity.angle_between`](lines.html#sympy.geometry.line.LinearEntity.angle_between
    "sympy.geometry.line.LinearEntity.angle_between")'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.line.LinearEntity.angle_between`](lines.html#sympy.geometry.line.LinearEntity.angle_between
    "sympy.geometry.line.LinearEntity.angle_between")'
- en: '[PRE73]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Returns the length of the sides.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 返回边长。
- en: The half-length of the side and the apothem form two legs of a right triangle
    whose hypotenuse is the radius of the regular polygon.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 边长的一半和辅角形成一个直角三角形，其斜边是正多边形的半径。
- en: Examples
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE74]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Radius of the RegularPolygon
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: RegularPolygon 的半径
- en: This is also the radius of the circumscribing circle.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是外接圆的半径。
- en: 'Returns:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**radius** : number or instance of Basic'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '**半径**：数字或 Basic 的实例'
- en: Examples
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE76]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: See also
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.line.Segment.length`](lines.html#sympy.geometry.line.Segment.length
    "sympy.geometry.line.Segment.length"), [`sympy.geometry.ellipse.Circle.radius`](ellipses.html#sympy.geometry.ellipse.Circle.radius
    "sympy.geometry.ellipse.Circle.radius")'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.line.Segment.length`](lines.html#sympy.geometry.line.Segment.length
    "sympy.geometry.line.Segment.length"), [`sympy.geometry.ellipse.Circle.radius`](ellipses.html#sympy.geometry.ellipse.Circle.radius
    "sympy.geometry.ellipse.Circle.radius")'
- en: '[PRE77]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Override GeometryEntity.reflect since this is not made of only points.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这不仅仅是点的集合，所以覆盖 GeometryEntity.reflect 方法。
- en: Examples
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE78]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Override GeometryEntity.rotate to first rotate the RegularPolygon about its
    center.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 覆盖 GeometryEntity.rotate 方法，首先围绕其中心旋转 RegularPolygon。
- en: '[PRE81]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: See also
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`rotation`](#sympy.geometry.polygon.RegularPolygon.rotation "sympy.geometry.polygon.RegularPolygon.rotation")'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rotation`](#sympy.geometry.polygon.RegularPolygon.rotation "sympy.geometry.polygon.RegularPolygon.rotation")'
- en: '[`spin`](#sympy.geometry.polygon.RegularPolygon.spin "sympy.geometry.polygon.RegularPolygon.spin")'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '[`spin`](#sympy.geometry.polygon.RegularPolygon.spin "sympy.geometry.polygon.RegularPolygon.spin")'
- en: Rotates a RegularPolygon in place
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 原地旋转 RegularPolygon
- en: '[PRE82]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: CCW angle by which the RegularPolygon is rotated
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: RegularPolygon 的逆时针角度。
- en: 'Returns:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**rotation** : number or instance of Basic'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '**旋转**：数字或 Basic 的实例'
- en: Examples
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE83]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Numerical rotation angles are made canonical:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 数值旋转角度变为规范角度：
- en: '[PRE84]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Override GeometryEntity.scale since it is the radius that must be scaled (if
    x == y) or else a new Polygon must be returned.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 由于必须缩放半径（如果 x == y），否则必须返回一个新的 Polygon，所以覆盖 GeometryEntity.scale 方法。
- en: '[PRE86]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'Symmetric scaling returns a RegularPolygon:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 对称缩放返回一个 RegularPolygon：
- en: '[PRE87]'
  id: totrans-392
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Asymmetric scaling returns a kite as a Polygon:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 不对称缩放将返回一个菱形作为 Polygon：
- en: '[PRE88]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Increment *in place* the virtual Polygon’s rotation by ccw angle.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 原地增量地逆时针旋转虚拟 Polygon 的旋转。
- en: 'See also: rotate method which moves the center.'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅：rotate 方法，移动中心。
- en: '[PRE90]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: See also
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`rotation`](#sympy.geometry.polygon.RegularPolygon.rotation "sympy.geometry.polygon.RegularPolygon.rotation")'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rotation`](#sympy.geometry.polygon.RegularPolygon.rotation "sympy.geometry.polygon.RegularPolygon.rotation")'
- en: '[`rotate`](#sympy.geometry.polygon.RegularPolygon.rotate "sympy.geometry.polygon.RegularPolygon.rotate")'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rotate`](#sympy.geometry.polygon.RegularPolygon.rotate "sympy.geometry.polygon.RegularPolygon.rotate")'
- en: Creates a copy of the RegularPolygon rotated about a Point
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 创建绕点旋转的 RegularPolygon 的副本
- en: '[PRE91]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: The vertices of the RegularPolygon.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: RegularPolygon 的顶点。
- en: 'Returns:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**vertices** : list'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '**顶点**：列表'
- en: Each vertex is a Point.
  id: totrans-407
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 每个顶点是一个点。
- en: Examples
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE92]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: See also
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
- en: '[PRE93]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: A polygon with three vertices and three sides.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 三个顶点和三条边的多边形。
- en: 'Parameters:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**points** : sequence of Points'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '**点**：点的序列'
- en: '**keyword: asa, sas, or sss to specify sides/angles of the triangle**'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '**关键字：asa、sas 或 sss 用于指定三角形的边/角**'
- en: 'Raises:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 异常：
- en: '**GeometryError**'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '**几何错误**'
- en: If the number of vertices is not equal to three, or one of the vertices is not
    a Point, or a valid keyword is not given.
  id: totrans-419
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果顶点数量不等于三，或其中一个顶点不是点，或未给出有效的关键字。
- en: Examples
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE94]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Keywords sss, sas, or asa can be used to give the desired side lengths (in
    order) and interior angles (in degrees) that define the triangle:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 可使用关键字 sss、sas 或 asa 指定所需的边长（按顺序）和内角（以度数）来定义三角形：
- en: '[PRE95]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: See also
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`Polygon`](#sympy.geometry.polygon.Polygon "sympy.geometry.polygon.Polygon")'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")，[`Polygon`](#sympy.geometry.polygon.Polygon
    "sympy.geometry.polygon.Polygon")'
- en: Attributes
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| vertices |  |'
  id: totrans-427
  prefs: []
  type: TYPE_TB
  zh: '| 顶点 |  |'
- en: '| altitudes |  |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| 高度 |  |'
- en: '| orthocenter |  |'
  id: totrans-429
  prefs: []
  type: TYPE_TB
  zh: '| 垂心 |  |'
- en: '| circumcenter |  |'
  id: totrans-430
  prefs: []
  type: TYPE_TB
  zh: '| 外心 |  |'
- en: '| circumradius |  |'
  id: totrans-431
  prefs: []
  type: TYPE_TB
  zh: '| 外心半径 |  |'
- en: '| circumcircle |  |'
  id: totrans-432
  prefs: []
  type: TYPE_TB
  zh: '| 外接圆 |  |'
- en: '| inradius |  |'
  id: totrans-433
  prefs: []
  type: TYPE_TB
  zh: '| 内切圆半径 |  |'
- en: '| incircle |  |'
  id: totrans-434
  prefs: []
  type: TYPE_TB
  zh: '| 外接圆半径 |  |'
- en: '| exradii |  |'
  id: totrans-435
  prefs: []
  type: TYPE_TB
  zh: '| 外接圆半径 |  |'
- en: '| medians |  |'
  id: totrans-436
  prefs: []
  type: TYPE_TB
  zh: '| 中位线 |  |'
- en: '| medial |  |'
  id: totrans-437
  prefs: []
  type: TYPE_TB
  zh: '| 中心 |  |'
- en: '| nine_point_circle |  |'
  id: totrans-438
  prefs: []
  type: TYPE_TB
  zh: '| 九点圆 |  |'
- en: '[PRE96]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: The altitudes of the triangle.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的高度。
- en: An altitude of a triangle is a segment through a vertex, perpendicular to the
    opposite side, with length being the height of the vertex measured from the line
    containing the side.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的一个高度是通过顶点的一条段，垂直于对边，长度是从包含边的直线到顶点的高度。
- en: 'Returns:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**altitudes** : dict'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '**高度**：字典'
- en: The dictionary consists of keys which are vertices and values which are Segments.
  id: totrans-444
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字典包含键为顶点，值为线段的键。
- en: Examples
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE97]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: See also
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.Segment.length`](lines.html#sympy.geometry.line.Segment.length
    "sympy.geometry.line.Segment.length")'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")，[`sympy.geometry.line.Segment.length`](lines.html#sympy.geometry.line.Segment.length
    "sympy.geometry.line.Segment.length")'
- en: '[PRE98]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: The angle bisectors of the triangle.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的角平分线。
- en: An angle bisector of a triangle is a straight line through a vertex which cuts
    the corresponding angle in half.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的角平分线是通过顶点的一条直线，将相应的角分为两等分。
- en: 'Returns:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**bisectors** : dict'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '**角平分线**：字典'
- en: Each key is a vertex (Point) and each value is the corresponding bisector (Segment).
  id: totrans-454
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 每个键是一个顶点（点），每个值是相应的角平分线（线段）。
- en: Examples
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE99]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: See also
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point"),
    [`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment "sympy.geometry.line.Segment")'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")，[`sympy.geometry.line.Segment`](lines.html#sympy.geometry.line.Segment
    "sympy.geometry.line.Segment")'
- en: '[PRE100]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: The circumcenter of the triangle
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的外心
- en: The circumcenter is the center of the circumcircle.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 外心是外接圆的中心。
- en: 'Returns:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**circumcenter** : Point'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '**外心**：点'
- en: Examples
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE101]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: See also
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
- en: '[PRE102]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: The circle which passes through the three vertices of the triangle.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 通过三角形的三个顶点的圆。
- en: 'Returns:'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**circumcircle** : Circle'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '**外接圆**：圆'
- en: Examples
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE103]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: See also
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.ellipse.Circle`](ellipses.html#sympy.geometry.ellipse.Circle
    "sympy.geometry.ellipse.Circle")'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.ellipse.Circle`](ellipses.html#sympy.geometry.ellipse.Circle
    "sympy.geometry.ellipse.Circle")'
- en: '[PRE104]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: The radius of the circumcircle of the triangle.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的外接圆的半径。
- en: 'Returns:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**circumradius** : number of Basic instance'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: '**外接圆半径**：基本实例的数量'
- en: Examples
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE105]'
  id: totrans-481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: See also
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.ellipse.Circle.radius`](ellipses.html#sympy.geometry.ellipse.Circle.radius
    "sympy.geometry.ellipse.Circle.radius")'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.ellipse.Circle.radius`](ellipses.html#sympy.geometry.ellipse.Circle.radius
    "sympy.geometry.ellipse.Circle.radius")'
- en: '[PRE106]'
  id: totrans-484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: The Euler line of the triangle.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的欧拉线。
- en: The line which passes through circumcenter, centroid and orthocenter.
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 通过外心、重心和垂心的直线。
- en: 'Returns:'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**eulerline** : Line (or Point for equilateral triangles in which case all'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '**欧拉线**：线（或者对于等边三角形，是一个点）'
- en: centers coincide)
  id: totrans-489
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 中心重合）
- en: Examples
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE107]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Excenters of the triangle.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的外心。
- en: An excenter is the center of a circle that is tangent to a side of the triangle
    and the extensions of the other two sides.
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 外心是一个圆的中心，它与三角形的一条边以及另外两条边的延长线相切。
- en: 'Returns:'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**excenters** : dict'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '**外心**：字典'
- en: Examples
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'The excenters are keyed to the side of the triangle to which their corresponding
    excircle is tangent: The center is keyed, e.g. the excenter of a circle touching
    side 0 is:'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 外心与三角形边的对应外切圆相切：中心是键入的，例如接触第0边的圆的外心是：
- en: '[PRE109]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: See also
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.geometry.polygon.Triangle.exradii`](#sympy.geometry.polygon.Triangle.exradii
    "sympy.geometry.polygon.Triangle.exradii")'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.polygon.Triangle.exradii`](#sympy.geometry.polygon.Triangle.exradii
    "sympy.geometry.polygon.Triangle.exradii")'
- en: References
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R560](#id8)]'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R560](#id8)]'
- en: '[https://mathworld.wolfram.com/Excircles.html](https://mathworld.wolfram.com/Excircles.html)'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/Excircles.html](https://mathworld.wolfram.com/Excircles.html)'
- en: '[PRE110]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: The radius of excircles of a triangle.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的外切圆的半径。
- en: An excircle of the triangle is a circle lying outside the triangle, tangent
    to one of its sides and tangent to the extensions of the other two.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的外接圆是位于三角形外部的圆，它与其一条边相切并与另外两条边的延长线相切。
- en: 'Returns:'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**exradii** : dict'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '**外切圆半径**：字典'
- en: Examples
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'The exradius touches the side of the triangle to which it is keyed, e.g. the
    exradius touching side 2 is:'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 外切圆接触到其键入的三角形边的边，例如接触到第2边的外切圆是：
- en: '[PRE111]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: See also
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.geometry.polygon.Triangle.inradius`](#sympy.geometry.polygon.Triangle.inradius
    "sympy.geometry.polygon.Triangle.inradius")'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.polygon.Triangle.inradius`](#sympy.geometry.polygon.Triangle.inradius
    "sympy.geometry.polygon.Triangle.inradius")'
- en: References
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[R561](#id9)]'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R561](#id9)]'
- en: '[https://mathworld.wolfram.com/Exradius.html](https://mathworld.wolfram.com/Exradius.html)'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/Exradius.html](https://mathworld.wolfram.com/Exradius.html)'
- en: '[[R562](#id10)]'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R562](#id10)]'
- en: '[https://mathworld.wolfram.com/Excircles.html](https://mathworld.wolfram.com/Excircles.html)'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://mathworld.wolfram.com/Excircles.html](https://mathworld.wolfram.com/Excircles.html)'
- en: '[PRE112]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: The center of the incircle.
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 内切圆的中心。
- en: The incircle is the circle which lies inside the triangle and touches all three
    sides.
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: 内切圆是位于三角形内部并接触所有三条边的圆。
- en: 'Returns:'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**incenter** : Point'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '**内心**：点'
- en: Examples
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE113]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: See also
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`incircle`](#sympy.geometry.polygon.Triangle.incircle "sympy.geometry.polygon.Triangle.incircle"),
    [`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '[`内切圆`](#sympy.geometry.polygon.Triangle.incircle "sympy.geometry.polygon.Triangle.incircle"),
    [`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
- en: '[PRE114]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: The incircle of the triangle.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的内切圆。
- en: The incircle is the circle which lies inside the triangle and touches all three
    sides.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 内切圆是位于三角形内部并接触所有三条边的圆。
- en: 'Returns:'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**incircle** : Circle'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '**外切圆**：圆'
- en: Examples
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE115]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: See also
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.geometry.ellipse.Circle`](ellipses.html#sympy.geometry.ellipse.Circle
    "sympy.geometry.ellipse.Circle")'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.ellipse.Circle`](ellipses.html#sympy.geometry.ellipse.Circle
    "sympy.geometry.ellipse.Circle")'
- en: '[PRE116]'
  id: totrans-538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: The radius of the incircle.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 内切圆的半径。
- en: 'Returns:'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**inradius** : number of Basic instance'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '**内切圆半径**：基础实例的数量'
- en: Examples
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE117]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: See also
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`incircle`](#sympy.geometry.polygon.Triangle.incircle "sympy.geometry.polygon.Triangle.incircle"),
    [`sympy.geometry.ellipse.Circle.radius`](ellipses.html#sympy.geometry.ellipse.Circle.radius
    "sympy.geometry.ellipse.Circle.radius")'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: '[`内切圆`](#sympy.geometry.polygon.Triangle.incircle "sympy.geometry.polygon.Triangle.incircle"),
    [`sympy.geometry.ellipse.Circle.radius`](ellipses.html#sympy.geometry.ellipse.Circle.radius
    "sympy.geometry.ellipse.Circle.radius")'
- en: '[PRE118]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Are all the sides the same length?
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 所有边的长度都相等吗？
- en: 'Returns:'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**is_equilateral** : boolean'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: '**是否等边**：布尔值'
- en: Examples
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE119]'
  id: totrans-551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: See also
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`sympy.geometry.entity.GeometryEntity.is_similar`](entities.html#sympy.geometry.entity.GeometryEntity.is_similar
    "sympy.geometry.entity.GeometryEntity.is_similar"), [`RegularPolygon`](#sympy.geometry.polygon.RegularPolygon
    "sympy.geometry.polygon.RegularPolygon"), [`is_isosceles`](#sympy.geometry.polygon.Triangle.is_isosceles
    "sympy.geometry.polygon.Triangle.is_isosceles"), [`is_right`](#sympy.geometry.polygon.Triangle.is_right
    "sympy.geometry.polygon.Triangle.is_right"), [`is_scalene`](#sympy.geometry.polygon.Triangle.is_scalene
    "sympy.geometry.polygon.Triangle.is_scalene")'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.entity.GeometryEntity.is_similar`](entities.html#sympy.geometry.entity.GeometryEntity.is_similar
    "sympy.geometry.entity.GeometryEntity.is_similar"), [`RegularPolygon`](#sympy.geometry.polygon.RegularPolygon
    "sympy.geometry.polygon.RegularPolygon"), [`is_isosceles`](#sympy.geometry.polygon.Triangle.is_isosceles
    "sympy.geometry.polygon.Triangle.is_isosceles"), [`is_right`](#sympy.geometry.polygon.Triangle.is_right
    "sympy.geometry.polygon.Triangle.is_right"), [`is_scalene`](#sympy.geometry.polygon.Triangle.is_scalene
    "sympy.geometry.polygon.Triangle.is_scalene")'
- en: '[PRE121]'
  id: totrans-555
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: Are two or more of the sides the same length?
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 两个或更多边是否相等？
- en: 'Returns:'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**is_isosceles** : boolean'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '**is_isosceles**：布尔值'
- en: Examples
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE122]'
  id: totrans-560
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: See also
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_equilateral`](#sympy.geometry.polygon.Triangle.is_equilateral "sympy.geometry.polygon.Triangle.is_equilateral"),
    [`is_right`](#sympy.geometry.polygon.Triangle.is_right "sympy.geometry.polygon.Triangle.is_right"),
    [`is_scalene`](#sympy.geometry.polygon.Triangle.is_scalene "sympy.geometry.polygon.Triangle.is_scalene")'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_equilateral`](#sympy.geometry.polygon.Triangle.is_equilateral "sympy.geometry.polygon.Triangle.is_equilateral")，[`is_right`](#sympy.geometry.polygon.Triangle.is_right
    "sympy.geometry.polygon.Triangle.is_right")，[`is_scalene`](#sympy.geometry.polygon.Triangle.is_scalene
    "sympy.geometry.polygon.Triangle.is_scalene")'
- en: '[PRE123]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Is the triangle right-angled.
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形是否直角？
- en: 'Returns:'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**is_right** : boolean'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: '**is_right**：布尔值'
- en: Examples
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE124]'
  id: totrans-568
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: See also
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.line.LinearEntity.is_perpendicular`](lines.html#sympy.geometry.line.LinearEntity.is_perpendicular
    "sympy.geometry.line.LinearEntity.is_perpendicular"), [`is_equilateral`](#sympy.geometry.polygon.Triangle.is_equilateral
    "sympy.geometry.polygon.Triangle.is_equilateral"), [`is_isosceles`](#sympy.geometry.polygon.Triangle.is_isosceles
    "sympy.geometry.polygon.Triangle.is_isosceles"), [`is_scalene`](#sympy.geometry.polygon.Triangle.is_scalene
    "sympy.geometry.polygon.Triangle.is_scalene")'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.line.LinearEntity.is_perpendicular`](lines.html#sympy.geometry.line.LinearEntity.is_perpendicular
    "sympy.geometry.line.LinearEntity.is_perpendicular")，[`is_equilateral`](#sympy.geometry.polygon.Triangle.is_equilateral
    "sympy.geometry.polygon.Triangle.is_equilateral")，[`is_isosceles`](#sympy.geometry.polygon.Triangle.is_isosceles
    "sympy.geometry.polygon.Triangle.is_isosceles")，[`is_scalene`](#sympy.geometry.polygon.Triangle.is_scalene
    "sympy.geometry.polygon.Triangle.is_scalene")'
- en: '[PRE125]'
  id: totrans-571
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Are all the sides of the triangle of different lengths?
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的各边长度是否都不同？
- en: 'Returns:'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**is_scalene** : boolean'
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: '**is_scalene**：布尔值'
- en: Examples
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE126]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: See also
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_equilateral`](#sympy.geometry.polygon.Triangle.is_equilateral "sympy.geometry.polygon.Triangle.is_equilateral"),
    [`is_isosceles`](#sympy.geometry.polygon.Triangle.is_isosceles "sympy.geometry.polygon.Triangle.is_isosceles"),
    [`is_right`](#sympy.geometry.polygon.Triangle.is_right "sympy.geometry.polygon.Triangle.is_right")'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_equilateral`](#sympy.geometry.polygon.Triangle.is_equilateral "sympy.geometry.polygon.Triangle.is_equilateral")，[`is_isosceles`](#sympy.geometry.polygon.Triangle.is_isosceles
    "sympy.geometry.polygon.Triangle.is_isosceles")，[`is_right`](#sympy.geometry.polygon.Triangle.is_right
    "sympy.geometry.polygon.Triangle.is_right")'
- en: '[PRE127]'
  id: totrans-579
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: Is another triangle similar to this one.
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个三角形是否与此相似。
- en: Two triangles are similar if one can be uniformly scaled to the other.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个三角形可以均匀缩放到另一个三角形，则它们相似。
- en: 'Parameters:'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**other: Triangle**'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: '**其他：三角形**'
- en: 'Returns:'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**is_similar** : boolean'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: '**is_similar**：布尔值'
- en: Examples
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE128]'
  id: totrans-587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '[PRE129]'
  id: totrans-588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: See also
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.entity.GeometryEntity.is_similar`](entities.html#sympy.geometry.entity.GeometryEntity.is_similar
    "sympy.geometry.entity.GeometryEntity.is_similar")'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.entity.GeometryEntity.is_similar`](entities.html#sympy.geometry.entity.GeometryEntity.is_similar
    "sympy.geometry.entity.GeometryEntity.is_similar")'
- en: '[PRE130]'
  id: totrans-591
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: The medial triangle of the triangle.
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的中位三角形。
- en: The triangle which is formed from the midpoints of the three sides.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 由三边的中点形成的三角形。
- en: 'Returns:'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**medial** : Triangle'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: '**medial**：三角形'
- en: Examples
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE131]'
  id: totrans-597
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: See also
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.line.Segment.midpoint`](lines.html#sympy.geometry.line.Segment.midpoint
    "sympy.geometry.line.Segment.midpoint")'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.line.Segment.midpoint`](lines.html#sympy.geometry.line.Segment.midpoint
    "sympy.geometry.line.Segment.midpoint")'
- en: '[PRE132]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: The medians of the triangle.
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的中位线。
- en: A median of a triangle is a straight line through a vertex and the midpoint
    of the opposite side, and divides the triangle into two equal areas.
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的中位线是通过一个顶点和对边中点的直线，将三角形分成两个相等的面积。
- en: 'Returns:'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**medians** : dict'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: '**medians**：字典'
- en: Each key is a vertex (Point) and each value is the median (Segment) at that
    point.
  id: totrans-605
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 每个键是一个顶点（点），每个值是通过该点的中位线（线段）。
- en: Examples
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE133]'
  id: totrans-607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: See also
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.point.Point.midpoint`](points.html#sympy.geometry.point.Point.midpoint
    "sympy.geometry.point.Point.midpoint"), [`sympy.geometry.line.Segment.midpoint`](lines.html#sympy.geometry.line.Segment.midpoint
    "sympy.geometry.line.Segment.midpoint")'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point.midpoint`](points.html#sympy.geometry.point.Point.midpoint
    "sympy.geometry.point.Point.midpoint")，[`sympy.geometry.line.Segment.midpoint`](lines.html#sympy.geometry.line.Segment.midpoint
    "sympy.geometry.line.Segment.midpoint")'
- en: '[PRE134]'
  id: totrans-610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: The nine-point circle of the triangle.
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的九点圆。
- en: Nine-point circle is the circumcircle of the medial triangle, which passes through
    the feet of altitudes and the middle points of segments connecting the vertices
    and the orthocenter.
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 九点圆是三角形中位三角形的外接圆，它经过高度的脚和连接顶点与正交中心的线段的中点。
- en: 'Returns:'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**nine_point_circle** : Circle'
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: '**nine_point_circle**：圆'
- en: Examples
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE135]'
  id: totrans-616
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: See also
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`sympy.geometry.line.Segment.midpoint`](lines.html#sympy.geometry.line.Segment.midpoint
    "sympy.geometry.line.Segment.midpoint"), [`sympy.geometry.polygon.Triangle.medial`](#sympy.geometry.polygon.Triangle.medial
    "sympy.geometry.polygon.Triangle.medial"), [`sympy.geometry.polygon.Triangle.orthocenter`](#sympy.geometry.polygon.Triangle.orthocenter
    "sympy.geometry.polygon.Triangle.orthocenter")'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.line.Segment.midpoint`](lines.html#sympy.geometry.line.Segment.midpoint
    "sympy.geometry.line.Segment.midpoint")，[`sympy.geometry.polygon.Triangle.medial`](#sympy.geometry.polygon.Triangle.medial
    "sympy.geometry.polygon.Triangle.medial")，[`sympy.geometry.polygon.Triangle.orthocenter`](#sympy.geometry.polygon.Triangle.orthocenter
    "sympy.geometry.polygon.Triangle.orthocenter")'
- en: '[PRE136]'
  id: totrans-619
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: The orthocenter of the triangle.
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的正交中心。
- en: The orthocenter is the intersection of the altitudes of a triangle. It may lie
    inside, outside or on the triangle.
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
  zh: 正交中心是三角形的高线的交点。它可能位于三角形的内部、外部或边上。
- en: 'Returns:'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**orthocenter** : Point'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: '**正交中心**：Point'
- en: Examples
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE137]'
  id: totrans-625
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: See also
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
- en: '[PRE138]'
  id: totrans-628
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: The triangle’s vertices
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的顶点
- en: 'Returns:'
  id: totrans-630
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**vertices** : tuple'
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: '**顶点**：元组'
- en: Each element in the tuple is a Point
  id: totrans-632
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 元组中的每个元素都是一个Point
- en: Examples
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE139]'
  id: totrans-634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: See also
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sympy.geometry.point.Point`](points.html#sympy.geometry.point.Point "sympy.geometry.point.Point")'
