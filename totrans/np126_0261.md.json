["```py\n>>> import numpy as np\n>>> import numpy.ma as ma\n>>> x = np.array([1, 2, 3, -1, 5]) \n```", "```py\n>>> mx = ma.masked_array(x, mask=[0, 0, 0, 1, 0]) \n```", "```py\n>>> mx.mean()\n2.75 \n```", "```py\n>>> import numpy as np\n>>> import numpy.ma as ma \n```", "```py\n>>> y = ma.array([1, 2, 3], mask = [0, 1, 0]) \n```", "```py\n>>> z = ma.masked_values([1.0, 1.e20, 3.0, 4.0], 1.e20) \n```", "```py\n>>> import numpy as np\n>>> import numpy.ma as ma\n>>> x = np.array([1, 2, 3, -1, 5]) \n```", "```py\n>>> mx = ma.masked_array(x, mask=[0, 0, 0, 1, 0]) \n```", "```py\n>>> mx.mean()\n2.75 \n```", "```py\n>>> import numpy as np\n>>> import numpy.ma as ma \n```", "```py\n>>> y = ma.array([1, 2, 3], mask = [0, 1, 0]) \n```", "```py\n>>> z = ma.masked_values([1.0, 1.e20, 3.0, 4.0], 1.e20) \n```", "```py\n    >>> x = np.array([1, 2, 3])\n    >>> x.view(ma.MaskedArray)\n    masked_array(data=[1, 2, 3],\n     mask=False,\n     fill_value=999999)\n    >>> x = np.array([(1, 1.), (2, 2.)], dtype=[('a',int), ('b', float)])\n    >>> x.view(ma.MaskedArray)\n    masked_array(data=[(1, 1.0), (2, 2.0)],\n     mask=[(False, False), (False, False)],\n     fill_value=(999999, 1.e+20),\n     dtype=[('a', '<i8'), ('b', '<f8')]) \n    ```", "```py\n>>> x = ma.array([[1, 2], [3, 4]], mask=[[0, 1], [1, 0]])\n>>> x[~x.mask]\nmasked_array(data=[1, 4],\n mask=[False, False],\n fill_value=999999) \n```", "```py\n>>> x.compressed()\narray([1, 4]) \n```", "```py\n>>> x = ma.array([1, 2, 3])\n>>> x[0] = ma.masked\n>>> x\nmasked_array(data=[--, 2, 3],\n mask=[ True, False, False],\n fill_value=999999)\n>>> y = ma.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n>>> y[(0, 1, 2), (1, 2, 0)] = ma.masked\n>>> y\nmasked_array(\n data=[[1, --, 3],\n [4, 5, --],\n [--, 8, 9]],\n mask=[[False,  True, False],\n [False, False,  True],\n [ True, False, False]],\n fill_value=999999)\n>>> z = ma.array([1, 2, 3, 4])\n>>> z[:-2] = ma.masked\n>>> z\nmasked_array(data=[--, --, 3, 4],\n mask=[ True,  True, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x.mask = True\n>>> x\nmasked_array(data=[--, --, --],\n mask=[ True,  True,  True],\n fill_value=999999,\n dtype=int64) \n```", "```py\n>>> x = ma.array([1, 2, 3])\n>>> x.mask = [0, 1, 0]\n>>> x\nmasked_array(data=[1, --, 3],\n mask=[False,  True, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1], hard_mask=True)\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x.soften_mask()\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999)\n>>> x.harden_mask()\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x.mask = ma.nomask\n>>> x\nmasked_array(data=[1, 2, 3],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x[0]\n1\n>>> x[-1]\nmasked\n>>> x[-1] is ma.masked\nTrue \n```", "```py\n>>> y = ma.masked_array([(1,2), (3, 4)],\n...                mask=[(0, 0), (0, 1)],\n...               dtype=[('a', int), ('b', int)])\n>>> y[0]\n(1, 2)\n>>> y[-1]\n(3, --) \n```", "```py\n>>> x = ma.array([1, 2, 3, 4, 5], mask=[0, 1, 0, 0, 1])\n>>> mx = x[:3]\n>>> mx\nmasked_array(data=[1, --, 3],\n mask=[False,  True, False],\n fill_value=999999)\n>>> mx[1] = -1\n>>> mx\nmasked_array(data=[1, -1, 3],\n mask=[False, False, False],\n fill_value=999999)\n>>> x.mask\narray([False, False, False, False,  True])\n>>> x.data\narray([ 1, -1,  3,  4,  5]) \n```", "```py\n>>> ma.log([-1, 0, 1, 2])\nmasked_array(data=[--, --, 0.0, 0.6931471805599453],\n mask=[ True,  True, False, False],\n fill_value=1e+20) \n```", "```py\n>>> x = ma.array([-1, 1, 0, 2, 3], mask=[0, 0, 0, 0, 1])\n>>> np.log(x)\nmasked_array(data=[--, 0.0, --, 0.6931471805599453, --],\n mask=[ True, False,  True, False,  True],\n fill_value=1e+20) \n```", "```py\n    >>> x = np.array([1, 2, 3])\n    >>> x.view(ma.MaskedArray)\n    masked_array(data=[1, 2, 3],\n     mask=False,\n     fill_value=999999)\n    >>> x = np.array([(1, 1.), (2, 2.)], dtype=[('a',int), ('b', float)])\n    >>> x.view(ma.MaskedArray)\n    masked_array(data=[(1, 1.0), (2, 2.0)],\n     mask=[(False, False), (False, False)],\n     fill_value=(999999, 1.e+20),\n     dtype=[('a', '<i8'), ('b', '<f8')]) \n    ```", "```py\n>>> x = ma.array([[1, 2], [3, 4]], mask=[[0, 1], [1, 0]])\n>>> x[~x.mask]\nmasked_array(data=[1, 4],\n mask=[False, False],\n fill_value=999999) \n```", "```py\n>>> x.compressed()\narray([1, 4]) \n```", "```py\n>>> x = ma.array([1, 2, 3])\n>>> x[0] = ma.masked\n>>> x\nmasked_array(data=[--, 2, 3],\n mask=[ True, False, False],\n fill_value=999999)\n>>> y = ma.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n>>> y[(0, 1, 2), (1, 2, 0)] = ma.masked\n>>> y\nmasked_array(\n data=[[1, --, 3],\n [4, 5, --],\n [--, 8, 9]],\n mask=[[False,  True, False],\n [False, False,  True],\n [ True, False, False]],\n fill_value=999999)\n>>> z = ma.array([1, 2, 3, 4])\n>>> z[:-2] = ma.masked\n>>> z\nmasked_array(data=[--, --, 3, 4],\n mask=[ True,  True, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x.mask = True\n>>> x\nmasked_array(data=[--, --, --],\n mask=[ True,  True,  True],\n fill_value=999999,\n dtype=int64) \n```", "```py\n>>> x = ma.array([1, 2, 3])\n>>> x.mask = [0, 1, 0]\n>>> x\nmasked_array(data=[1, --, 3],\n mask=[False,  True, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1], hard_mask=True)\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x.soften_mask()\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999)\n>>> x.harden_mask()\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x.mask = ma.nomask\n>>> x\nmasked_array(data=[1, 2, 3],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3])\n>>> x[0] = ma.masked\n>>> x\nmasked_array(data=[--, 2, 3],\n mask=[ True, False, False],\n fill_value=999999)\n>>> y = ma.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n>>> y[(0, 1, 2), (1, 2, 0)] = ma.masked\n>>> y\nmasked_array(\n data=[[1, --, 3],\n [4, 5, --],\n [--, 8, 9]],\n mask=[[False,  True, False],\n [False, False,  True],\n [ True, False, False]],\n fill_value=999999)\n>>> z = ma.array([1, 2, 3, 4])\n>>> z[:-2] = ma.masked\n>>> z\nmasked_array(data=[--, --, 3, 4],\n mask=[ True,  True, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x.mask = True\n>>> x\nmasked_array(data=[--, --, --],\n mask=[ True,  True,  True],\n fill_value=999999,\n dtype=int64) \n```", "```py\n>>> x = ma.array([1, 2, 3])\n>>> x.mask = [0, 1, 0]\n>>> x\nmasked_array(data=[1, --, 3],\n mask=[False,  True, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1], hard_mask=True)\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x.soften_mask()\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x[-1] = 5\n>>> x\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999)\n>>> x.harden_mask()\nmasked_array(data=[1, 2, 5],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x\nmasked_array(data=[1, 2, --],\n mask=[False, False,  True],\n fill_value=999999)\n>>> x.mask = ma.nomask\n>>> x\nmasked_array(data=[1, 2, 3],\n mask=[False, False, False],\n fill_value=999999) \n```", "```py\n>>> x = ma.array([1, 2, 3], mask=[0, 0, 1])\n>>> x[0]\n1\n>>> x[-1]\nmasked\n>>> x[-1] is ma.masked\nTrue \n```", "```py\n>>> y = ma.masked_array([(1,2), (3, 4)],\n...                mask=[(0, 0), (0, 1)],\n...               dtype=[('a', int), ('b', int)])\n>>> y[0]\n(1, 2)\n>>> y[-1]\n(3, --) \n```", "```py\n>>> x = ma.array([1, 2, 3, 4, 5], mask=[0, 1, 0, 0, 1])\n>>> mx = x[:3]\n>>> mx\nmasked_array(data=[1, --, 3],\n mask=[False,  True, False],\n fill_value=999999)\n>>> mx[1] = -1\n>>> mx\nmasked_array(data=[1, -1, 3],\n mask=[False, False, False],\n fill_value=999999)\n>>> x.mask\narray([False, False, False, False,  True])\n>>> x.data\narray([ 1, -1,  3,  4,  5]) \n```", "```py\n>>> ma.log([-1, 0, 1, 2])\nmasked_array(data=[--, --, 0.0, 0.6931471805599453],\n mask=[ True,  True, False, False],\n fill_value=1e+20) \n```", "```py\n>>> x = ma.array([-1, 1, 0, 2, 3], mask=[0, 0, 0, 0, 1])\n>>> np.log(x)\nmasked_array(data=[--, 0.0, --, 0.6931471805599453, --],\n mask=[ True, False,  True, False,  True],\n fill_value=1e+20) \n```", "```py\n>>> import numpy.ma as ma\n>>> x = [0.,1.,-9999.,3.,4.]\n>>> mx = ma.masked_values (x, -9999.)\n>>> print(mx.mean())\n2.0\n>>> print(mx - mx.mean())\n[-2.0 -1.0 -- 1.0 2.0]\n>>> print(mx.anom())\n[-2.0 -1.0 -- 1.0 2.0] \n```", "```py\n>>> print(mx.filled(mx.mean()))\n[0\\.  1\\.  2\\.  3\\.  4.] \n```", "```py\n>>> import numpy.ma as ma\n>>> x = ma.array([1., -1., 3., 4., 5., 6.], mask=[0,0,0,0,1,0])\n>>> y = ma.array([1., 2., 0., 4., 5., 6.], mask=[0,0,0,0,0,1])\n>>> print(ma.sqrt(x/y))\n[1.0 -- -- 1.0 -- --] \n```", "```py\n>>> d = np.linspace(0, 1, 20)\n>>> print(d.mean() - ma.masked_outside(d, 0.2, 0.9).mean())\n-0.05263157894736836 \n```", "```py\n>>> import numpy.ma as ma\n>>> x = [0.,1.,-9999.,3.,4.]\n>>> mx = ma.masked_values (x, -9999.)\n>>> print(mx.mean())\n2.0\n>>> print(mx - mx.mean())\n[-2.0 -1.0 -- 1.0 2.0]\n>>> print(mx.anom())\n[-2.0 -1.0 -- 1.0 2.0] \n```", "```py\n>>> print(mx.filled(mx.mean()))\n[0\\.  1\\.  2\\.  3\\.  4.] \n```", "```py\n>>> import numpy.ma as ma\n>>> x = ma.array([1., -1., 3., 4., 5., 6.], mask=[0,0,0,0,1,0])\n>>> y = ma.array([1., 2., 0., 4., 5., 6.], mask=[0,0,0,0,0,1])\n>>> print(ma.sqrt(x/y))\n[1.0 -- -- 1.0 -- --] \n```", "```py\n>>> d = np.linspace(0, 1, 20)\n>>> print(d.mean() - ma.masked_outside(d, 0.2, 0.9).mean())\n-0.05263157894736836 \n```"]