- en: scipy.stats.genhyperbolic
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.genhyperbolic.html#scipy.stats.genhyperbolic](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.genhyperbolic.html#scipy.stats.genhyperbolic)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A generalized hyperbolic continuous random variable.
  prefs: []
  type: TYPE_NORMAL
- en: As an instance of the [`rv_continuous`](scipy.stats.rv_continuous.html#scipy.stats.rv_continuous
    "scipy.stats.rv_continuous") class, [`genhyperbolic`](#scipy.stats.genhyperbolic
    "scipy.stats.genhyperbolic") object inherits from it a collection of generic methods
    (see below for the full list), and completes them with details specific for this
    particular distribution.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`t`](scipy.stats.t.html#scipy.stats.t "scipy.stats.t"), [`norminvgauss`](scipy.stats.norminvgauss.html#scipy.stats.norminvgauss
    "scipy.stats.norminvgauss"), [`geninvgauss`](scipy.stats.geninvgauss.html#scipy.stats.geninvgauss
    "scipy.stats.geninvgauss"), [`laplace`](scipy.stats.laplace.html#scipy.stats.laplace
    "scipy.stats.laplace"), [`cauchy`](scipy.stats.cauchy.html#scipy.stats.cauchy
    "scipy.stats.cauchy")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The probability density function for [`genhyperbolic`](#scipy.stats.genhyperbolic
    "scipy.stats.genhyperbolic") is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[f(x, p, a, b) = \frac{(a^2 - b^2)^{p/2}} {\sqrt{2\pi}a^{p-1/2} K_p\Big(\sqrt{a^2
    - b^2}\Big)} e^{bx} \times \frac{K_{p - 1/2} (a \sqrt{1 + x^2})} {(\sqrt{1 + x^2})^{1/2
    - p}}\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(x, p \in ( - \infty; \infty)\), \(|b| < a\) if \(p \ge 0\), \(|b| \le
    a\) if \(p < 0\). \(K_{p}(.)\) denotes the modified Bessel function of the second
    kind and order \(p\) ([`scipy.special.kv`](scipy.special.kv.html#scipy.special.kv
    "scipy.special.kv"))
  prefs: []
  type: TYPE_NORMAL
- en: '[`genhyperbolic`](#scipy.stats.genhyperbolic "scipy.stats.genhyperbolic") takes
    `p` as a tail parameter, `a` as a shape parameter, `b` as a skewness parameter.'
  prefs: []
  type: TYPE_NORMAL
- en: The probability density above is defined in the “standardized” form. To shift
    and/or scale the distribution use the `loc` and `scale` parameters. Specifically,
    `genhyperbolic.pdf(x, p, a, b, loc, scale)` is identically equivalent to `genhyperbolic.pdf(y,
    p, a, b) / scale` with `y = (x - loc) / scale`. Note that shifting the location
    of a distribution does not make it a “noncentral” distribution; noncentral generalizations
    of some distributions are available in separate classes.
  prefs: []
  type: TYPE_NORMAL
- en: The original parameterization of the Generalized Hyperbolic Distribution is
    found in [[1]](#rc28944e415b6-1) as follows
  prefs: []
  type: TYPE_NORMAL
- en: \[f(x, \lambda, \alpha, \beta, \delta, \mu) = \frac{(\gamma/\delta)^\lambda}{\sqrt{2\pi}K_\lambda(\delta
    \gamma)} e^{\beta (x - \mu)} \times \frac{K_{\lambda - 1/2} (\alpha \sqrt{\delta^2
    + (x - \mu)^2})} {(\sqrt{\delta^2 + (x - \mu)^2} / \alpha)^{1/2 - \lambda}}\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(x \in ( - \infty; \infty)\), \(\gamma := \sqrt{\alpha^2 - \beta^2}\),
    \(\lambda, \mu \in ( - \infty; \infty)\), \(\delta \ge 0, |\beta| < \alpha\) if
    \(\lambda \ge 0\), \(\delta > 0, |\beta| \le \alpha\) if \(\lambda < 0\).
  prefs: []
  type: TYPE_NORMAL
- en: The location-scale-based parameterization implemented in SciPy is based on [[2]](#rc28944e415b6-2),
    where \(a = \alpha\delta\), \(b = \beta\delta\), \(p = \lambda\), \(scale=\delta\)
    and \(loc=\mu\)
  prefs: []
  type: TYPE_NORMAL
- en: Moments are implemented based on [[3]](#rc28944e415b6-3) and [[4]](#rc28944e415b6-4).
  prefs: []
  type: TYPE_NORMAL
- en: For the distributions that are a special case such as Student’s t, it is not
    recommended to rely on the implementation of genhyperbolic. To avoid potential
    numerical problems and for performance reasons, the methods of the specific distributions
    should be used.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: O. Barndorff-Nielsen, “Hyperbolic Distributions and Distributions on Hyperbolae”,
    Scandinavian Journal of Statistics, Vol. 5(3), pp. 151-157, 1978\. [https://www.jstor.org/stable/4615705](https://www.jstor.org/stable/4615705)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Eberlein E., Prause K. (2002) The Generalized Hyperbolic Model: Financial Derivatives
    and Risk Measures. In: Geman H., Madan D., Pliska S.R., Vorst T. (eds) Mathematical
    Finance - Bachelier Congress 2000\. Springer Finance. Springer, Berlin, Heidelberg.
    [DOI:10.1007/978-3-662-12429-1_12](https://doi.org/10.1007/978-3-662-12429-1_12)'
  prefs: []
  type: TYPE_NORMAL
- en: '[[3](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: Scott, David J, Würtz, Diethelm, Dong, Christine and Tran, Thanh Tam, (2009),
    Moments of the generalized hyperbolic distribution, MPRA Paper, University Library
    of Munich, Germany, [https://EconPapers.repec.org/RePEc:pra:mprapa:19081](https://EconPapers.repec.org/RePEc:pra:mprapa:19081).
  prefs: []
  type: TYPE_NORMAL
- en: '[[4](#id4)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'E. Eberlein and E. A. von Hammerstein. Generalized hyperbolic and inverse Gaussian
    distributions: Limiting cases and approximation of processes. FDM Preprint 80,
    April 2003\. University of Freiburg. [https://freidok.uni-freiburg.de/fedora/objects/freidok:7974/datastreams/FILE1/content](https://freidok.uni-freiburg.de/fedora/objects/freidok:7974/datastreams/FILE1/content)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the first four moments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Display the probability density function (`pdf`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, the distribution object can be called (as a function) to fix
    the shape, location and scale parameters. This returns a “frozen” RV object holding
    the given parameters fixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Freeze the distribution and display the frozen `pdf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Check accuracy of `cdf` and `ppf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate random numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'And compare the histogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-genhyperbolic-1.png](../Images/6d5dcf50fbbf7c04b2e8e8760943f781.png)'
  prefs: []
  type: TYPE_IMG
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **rvs(p, a, b, loc=0, scale=1, size=1, random_state=None)** | Random variates.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **pdf(x, p, a, b, loc=0, scale=1)** | Probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(x, p, a, b, loc=0, scale=1)** | Log of the probability density function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **cdf(x, p, a, b, loc=0, scale=1)** | Cumulative distribution function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logcdf(x, p, a, b, loc=0, scale=1)** | Log of the cumulative distribution
    function. |'
  prefs: []
  type: TYPE_TB
- en: '| **sf(x, p, a, b, loc=0, scale=1)** | Survival function (also defined as `1
    - cdf`, but *sf* is sometimes more accurate). |'
  prefs: []
  type: TYPE_TB
- en: '| **logsf(x, p, a, b, loc=0, scale=1)** | Log of the survival function. |'
  prefs: []
  type: TYPE_TB
- en: '| **ppf(q, p, a, b, loc=0, scale=1)** | Percent point function (inverse of
    `cdf` — percentiles). |'
  prefs: []
  type: TYPE_TB
- en: '| **isf(q, p, a, b, loc=0, scale=1)** | Inverse survival function (inverse
    of `sf`). |'
  prefs: []
  type: TYPE_TB
- en: '| **moment(order, p, a, b, loc=0, scale=1)** | Non-central moment of the specified
    order. |'
  prefs: []
  type: TYPE_TB
- en: '| **stats(p, a, b, loc=0, scale=1, moments=’mv’)** | Mean(‘m’), variance(‘v’),
    skew(‘s’), and/or kurtosis(‘k’). |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(p, a, b, loc=0, scale=1)** | (Differential) entropy of the RV.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **fit(data)** | Parameter estimates for generic data. See [scipy.stats.rv_continuous.fit](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.fit.html#scipy.stats.rv_continuous.fit)
    for detailed documentation of the keyword arguments. |'
  prefs: []
  type: TYPE_TB
- en: '| **expect(func, args=(p, a, b), loc=0, scale=1, lb=None, ub=None, conditional=False,
    **kwds)** | Expected value of a function (of one argument) with respect to the
    distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **median(p, a, b, loc=0, scale=1)** | Median of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **mean(p, a, b, loc=0, scale=1)** | Mean of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **var(p, a, b, loc=0, scale=1)** | Variance of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **std(p, a, b, loc=0, scale=1)** | Standard deviation of the distribution.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **interval(confidence, p, a, b, loc=0, scale=1)** | Confidence interval with
    equal areas around the median. |'
  prefs: []
  type: TYPE_TB
