["```py\nscipy.stats.bernoulli = <scipy.stats._discrete_distns.bernoulli_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import bernoulli\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> p = 0.3\n>>> mean, var, skew, kurt = bernoulli.stats(p, moments='mvsk') \n```", "```py\n>>> x = np.arange(bernoulli.ppf(0.01, p),\n...               bernoulli.ppf(0.99, p))\n>>> ax.plot(x, bernoulli.pmf(x, p), 'bo', ms=8, label='bernoulli pmf')\n>>> ax.vlines(x, 0, bernoulli.pmf(x, p), colors='b', lw=5, alpha=0.5) \n```", "```py\n>>> rv = bernoulli(p)\n>>> ax.vlines(x, 0, rv.pmf(x), colors='k', linestyles='-', lw=1,\n...         label='frozen pmf')\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```", "```py\n>>> prob = bernoulli.cdf(x, p)\n>>> np.allclose(x, bernoulli.ppf(prob, p))\nTrue \n```", "```py\n>>> r = bernoulli.rvs(p, size=1000) \n```"]