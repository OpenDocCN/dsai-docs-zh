- en: Interactive
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/interactive.html](https://docs.sympy.org/latest/modules/interactive.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Helper module for setting up interactive SymPy sessions.
  prefs: []
  type: TYPE_NORMAL
- en: '## Session'
  prefs: []
  type: TYPE_NORMAL
- en: Tools for setting up interactive sessions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Allow IPython to automatically convert integer literals to Integer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Allow IPython to automatically create symbols (`isympy -a`).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Construct new IPython session.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Construct new Python session.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Initialize an embedded IPython or Python session. The IPython session is initiated
    with the –pylab option, without the numpy imports, so that matplotlib plotting
    can be interactive.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pretty_print: boolean**'
  prefs: []
  type: TYPE_NORMAL
- en: If True, use pretty_print to stringify; if False, use sstrrepr to stringify.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**order: string or None**'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a few different settings for this parameter: lex (default), which
    is lexographic order; grlex, which is graded lexographic order; grevlex, which
    is reversed graded lexographic order; old, which is used for compatibility reasons
    and for long expressions; None, which sets it to lex.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**use_unicode: boolean or None**'
  prefs: []
  type: TYPE_NORMAL
- en: If True, use unicode characters; if False, do not use unicode characters.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**use_latex: boolean or None**'
  prefs: []
  type: TYPE_NORMAL
- en: If True, use latex rendering if IPython GUI’s; if False, do not use latex rendering.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**quiet: boolean**'
  prefs: []
  type: TYPE_NORMAL
- en: If True, init_session will not print messages regarding its status; if False,
    init_session will print messages regarding its status.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**auto_symbols: boolean**'
  prefs: []
  type: TYPE_NORMAL
- en: If True, IPython will automatically create symbols for you. If False, it will
    not. The default is False.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**auto_int_to_Integer: boolean**'
  prefs: []
  type: TYPE_NORMAL
- en: If True, IPython will automatically wrap int literals with Integer, so that
    things like 1/2 give Rational(1, 2). If False, it will not. The default is False.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ipython: boolean or None**'
  prefs: []
  type: TYPE_NORMAL
- en: If True, printing will initialize for an IPython console; if False, printing
    will initialize for a normal console; The default is None, which automatically
    determines whether we are in an ipython instance or not.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**str_printer: function, optional, default=None**'
  prefs: []
  type: TYPE_NORMAL
- en: A custom string printer function. This should mimic sympy.printing.sstrrepr().
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**pretty_printer: function, optional, default=None**'
  prefs: []
  type: TYPE_NORMAL
- en: A custom pretty printer. This should mimic sympy.printing.pretty().
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**latex_printer: function, optional, default=None**'
  prefs: []
  type: TYPE_NORMAL
- en: A custom LaTeX printer. This should mimic sympy.printing.latex() This should
    mimic sympy.printing.latex().
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**argv: list of arguments for IPython**'
  prefs: []
  type: TYPE_NORMAL
- en: See sympy.bin.isympy for options that can be used to initialize IPython.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.interactive.printing.init_printing`](#sympy.interactive.printing.init_printing
    "sympy.interactive.printing.init_printing")'
  prefs: []
  type: TYPE_NORMAL
- en: for examples and the rest of the parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Wrap integer literals with Integer.
  prefs: []
  type: TYPE_NORMAL
- en: This is based on the decistmt example from [https://docs.python.org/3/library/tokenize.html](https://docs.python.org/3/library/tokenize.html).
  prefs: []
  type: TYPE_NORMAL
- en: Only integer literals are converted. Float literals are left alone.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]  ## Printing'
  prefs: []
  type: TYPE_NORMAL
- en: Tools for setting up printing in interactive sessions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Initializes pretty-printer depending on the environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pretty_print** : bool, default=True'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, use [`pretty_print()`](printing.html#sympy.printing.pretty.pretty.pretty_print
    "sympy.printing.pretty.pretty.pretty_print") to stringify or the provided pretty
    printer; if `False`, use [`sstrrepr()`](printing.html#sympy.printing.str.sstrrepr
    "sympy.printing.str.sstrrepr") to stringify or the provided string printer.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**order** : string or None, default=’lex’'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a few different settings for this parameter: `''lex''` (default),
    which is lexographic order; `''grlex''`, which is graded lexographic order; `''grevlex''`,
    which is reversed graded lexographic order; `''old''`, which is used for compatibility
    reasons and for long expressions; `None`, which sets it to lex.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**use_unicode** : bool or None, default=None'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, use unicode characters; if `False`, do not use unicode characters;
    if `None`, make a guess based on the environment.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**use_latex** : string, bool, or None, default=None'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, use default LaTeX rendering in GUI interfaces (png and mathjax);
    if `False`, do not use LaTeX rendering; if `None`, make a guess based on the environment;
    if `'png'`, enable LaTeX rendering with an external LaTeX compiler, falling back
    to matplotlib if external compilation fails; if `'matplotlib'`, enable LaTeX rendering
    with matplotlib; if `'mathjax'`, enable LaTeX text generation, for example MathJax
    rendering in IPython notebook or text rendering in LaTeX documents; if `'svg'`,
    enable LaTeX rendering with an external latex compiler, no fallback
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**wrap_line** : bool'
  prefs: []
  type: TYPE_NORMAL
- en: If True, lines will wrap at the end; if False, they will not wrap but continue
    as one line. This is only relevant if `pretty_print` is True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**num_columns** : int or None, default=None'
  prefs: []
  type: TYPE_NORMAL
- en: If `int`, number of columns before wrapping is set to num_columns; if `None`,
    number of columns before wrapping is set to terminal width. This is only relevant
    if `pretty_print` is `True`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**no_global** : bool, default=False'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the settings become system wide; if `False`, use just for this console/session.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ip** : An interactive console'
  prefs: []
  type: TYPE_NORMAL
- en: This can either be an instance of IPython, or a class that derives from code.InteractiveConsole.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**euler** : bool, optional, default=False'
  prefs: []
  type: TYPE_NORMAL
- en: Loads the euler package in the LaTeX preamble for handwritten style fonts ([https://www.ctan.org/pkg/euler](https://www.ctan.org/pkg/euler)).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**forecolor** : string or None, optional, default=None'
  prefs: []
  type: TYPE_NORMAL
- en: DVI setting for foreground color. `None` means that either `'Black'`, `'White'`,
    or `'Gray'` will be selected based on a guess of the IPython terminal color setting.
    See notes.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**backcolor** : string, optional, default=’Transparent’'
  prefs: []
  type: TYPE_NORMAL
- en: DVI setting for background color. See notes.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**fontsize** : string or int, optional, default=’10pt’'
  prefs: []
  type: TYPE_NORMAL
- en: A font size to pass to the LaTeX documentclass function in the preamble. Note
    that the options are limited by the documentclass. Consider using scale instead.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**latex_mode** : string, optional, default=’plain’'
  prefs: []
  type: TYPE_NORMAL
- en: 'The mode used in the LaTeX printer. Can be one of: `{''inline''|''plain''|''equation''|''equation*''}`.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**print_builtin** : boolean, optional, default=True'
  prefs: []
  type: TYPE_NORMAL
- en: If `True` then floats and integers will be printed. If `False` the printer will
    only print SymPy types.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**str_printer** : function, optional, default=None'
  prefs: []
  type: TYPE_NORMAL
- en: A custom string printer function. This should mimic [`sstrrepr()`](printing.html#sympy.printing.str.sstrrepr
    "sympy.printing.str.sstrrepr").
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**pretty_printer** : function, optional, default=None'
  prefs: []
  type: TYPE_NORMAL
- en: A custom pretty printer. This should mimic [`pretty()`](printing.html#sympy.printing.pretty.pretty.pretty
    "sympy.printing.pretty.pretty.pretty").
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**latex_printer** : function, optional, default=None'
  prefs: []
  type: TYPE_NORMAL
- en: A custom LaTeX printer. This should mimic [`latex()`](printing.html#sympy.printing.latex.latex
    "sympy.printing.latex.latex").
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**scale** : float, optional, default=1.0'
  prefs: []
  type: TYPE_NORMAL
- en: Scale the LaTeX output when using the `'png'` or `'svg'` backends. Useful for
    high dpi screens.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**settings :**'
  prefs: []
  type: TYPE_NORMAL
- en: Any additional settings for the `latex` and `pretty` commands can be used to
    fine-tune the output.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The foreground and background colors can be selected when using `'png'` or `'svg'`
    LaTeX rendering. Note that before the `init_printing` command is executed, the
    LaTeX rendering is handled by the IPython console and not SymPy.
  prefs: []
  type: TYPE_NORMAL
- en: The colors can be selected among the 68 standard colors known to `dvips`, for
    a list see [[R596]](#r596). In addition, the background color can be set to `'Transparent'`
    (which is the default value).
  prefs: []
  type: TYPE_NORMAL
- en: When using the `'Auto'` foreground color, the guess is based on the `colors`
    variable in the IPython console, see [[R597]](#r597). Hence, if that variable
    is set correctly in your IPython console, there is a high chance that the output
    will be readable, although manual settings may be needed.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.printing.latex`](printing.html#module-sympy.printing.latex "sympy.printing.latex"),
    [`sympy.printing.pretty`](printing.html#module-sympy.printing.pretty "sympy.printing.pretty")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[R596] ([1](#id1),[2](#id3))'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikibooks.org/wiki/LaTeX/Colors#The_68_standard_colors_known_to_dvips](https://en.wikibooks.org/wiki/LaTeX/Colors#The_68_standard_colors_known_to_dvips)'
  prefs: []
  type: TYPE_NORMAL
- en: '[R597] ([1](#id2),[2](#id4))'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://ipython.readthedocs.io/en/stable/config/details.html#terminal-colors](https://ipython.readthedocs.io/en/stable/config/details.html#terminal-colors)'
  prefs: []
  type: TYPE_NORMAL
