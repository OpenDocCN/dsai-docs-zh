["```py\nscipy.stats.pareto = <scipy.stats._continuous_distns.pareto_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import pareto\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> b = 2.62\n>>> mean, var, skew, kurt = pareto.stats(b, moments='mvsk') \n```", "```py\n>>> x = np.linspace(pareto.ppf(0.01, b),\n...                 pareto.ppf(0.99, b), 100)\n>>> ax.plot(x, pareto.pdf(x, b),\n...        'r-', lw=5, alpha=0.6, label='pareto pdf') \n```", "```py\n>>> rv = pareto(b)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = pareto.ppf([0.001, 0.5, 0.999], b)\n>>> np.allclose([0.001, 0.5, 0.999], pareto.cdf(vals, b))\nTrue \n```", "```py\n>>> r = pareto.rvs(b, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]