- en: numpy.core.records.fromstring
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.core.records.fromstring.html](https://numpy.org/doc/1.26/reference/generated/numpy.core.records.fromstring.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Create a record array from binary data
  prefs: []
  type: TYPE_NORMAL
- en: Note that despite the name of this function it does not accept *str* instances.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**datastring**bytes-like'
  prefs: []
  type: TYPE_NORMAL
- en: Buffer of binary data
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Valid dtype for all arrays
  prefs: []
  type: TYPE_NORMAL
- en: '**shape**int or tuple of ints, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Shape of each array.
  prefs: []
  type: TYPE_NORMAL
- en: '**offset**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Position in the buffer to start reading from.
  prefs: []
  type: TYPE_NORMAL
- en: '**formats, names, titles, aligned, byteorder**'
  prefs: []
  type: TYPE_NORMAL
- en: If [`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype") is `None`, these arguments
    are passed to [`numpy.format_parser`](numpy.format_parser.html#numpy.format_parser
    "numpy.format_parser") to construct a dtype. See that function for detailed documentation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: np.recarray
  prefs: []
  type: TYPE_NORMAL
- en: Record array view into the data in datastring. This will be readonly if *datastring*
    is readonly.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.frombuffer`](numpy.frombuffer.html#numpy.frombuffer "numpy.frombuffer")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
