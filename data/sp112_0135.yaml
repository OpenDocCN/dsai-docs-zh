- en: scipy.integrate.qmc_quad
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.integrate.qmc_quad
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.qmc_quad.html#scipy.integrate.qmc_quad](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.qmc_quad.html#scipy.integrate.qmc_quad)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.qmc_quad.html#scipy.integrate.qmc_quad](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.qmc_quad.html#scipy.integrate.qmc_quad)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute an integral in N-dimensions using Quasi-Monte Carlo quadrature.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用准蒙特卡洛积分计算N维积分。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**func**callable'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**func**可调用对象'
- en: The integrand. Must accept a single argument `x`, an array which specifies the
    point(s) at which to evaluate the scalar-valued integrand, and return the value(s)
    of the integrand. For efficiency, the function should be vectorized to accept
    an array of shape `(d, n_points)`, where `d` is the number of variables (i.e.
    the dimensionality of the function domain) and *n_points* is the number of quadrature
    points, and return an array of shape `(n_points,)`, the integrand at each quadrature
    point.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 积分被积函数。必须接受单个参数`x`，一个数组，指定要评估标量值积分被积函数的点，并返回被积函数的值。为了效率，该函数应该向量化，接受形状为`(d, n_points)`的数组，其中`d`是变量的数量（即函数域的维度），*n_points*是积分点的数量，返回形状为`(n_points,)`的数组，即每个积分点的被积函数值。
- en: '**a, b**array-like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**a, b**类数组'
- en: One-dimensional arrays specifying the lower and upper integration limits, respectively,
    of each of the `d` variables.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一维数组，分别指定`d`个变量的积分下限和上限。
- en: '**n_estimates, n_points**int, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**n_estimates, n_points**整数，可选'
- en: '*n_estimates* (default: 8) statistically independent QMC samples, each of *n_points*
    (default: 1024) points, will be generated by *qrng*. The total number of points
    at which the integrand *func* will be evaluated is `n_points * n_estimates`. See
    Notes for details.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*n_estimates*（默认值：8）统计独立的QMC样本，每个*n_points*（默认值：1024）点，将由*qrng*生成。函数*func*将在`n_points
    * n_estimates`个点上进行评估。详见注释。'
- en: '**qrng**[`QMCEngine`](scipy.stats.qmc.QMCEngine.html#scipy.stats.qmc.QMCEngine
    "scipy.stats.qmc.QMCEngine"), optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**qrng**[`QMCEngine`](scipy.stats.qmc.QMCEngine.html#scipy.stats.qmc.QMCEngine
    "scipy.stats.qmc.QMCEngine")，可选'
- en: An instance of the QMCEngine from which to sample QMC points. The QMCEngine
    must be initialized to a number of dimensions `d` corresponding with the number
    of variables `x1, ..., xd` passed to *func*. The provided QMCEngine is used to
    produce the first integral estimate. If *n_estimates* is greater than one, additional
    QMCEngines are spawned from the first (with scrambling enabled, if it is an option.)
    If a QMCEngine is not provided, the default [`scipy.stats.qmc.Halton`](scipy.stats.qmc.Halton.html#scipy.stats.qmc.Halton
    "scipy.stats.qmc.Halton") will be initialized with the number of dimensions determine
    from the length of *a*.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: QMCEngine的实例，用于抽样QMC点。QMCEngine必须初始化为与传递给*func*的变量`x1, ..., xd`对应的维数`d`。提供的QMCEngine用于生成第一个积分估计值。如果*n_estimates*大于1，则从第一个QMCEngine生成额外的QMCEngine（如果有选项则启用混淆）。如果未提供QMCEngine，则将使用默认的[`scipy.stats.qmc.Halton`](scipy.stats.qmc.Halton.html#scipy.stats.qmc.Halton
    "scipy.stats.qmc.Halton")，其维数由*a*的长度确定。
- en: '**log**boolean, default: False'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**log**布尔值，默认值：False'
- en: When set to True, *func* returns the log of the integrand, and the result object
    contains the log of the integral.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当设置为True时，*func*返回积分被积函数的对数，结果对象包含积分的对数。
- en: 'Returns:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**result**object'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**result**对象'
- en: 'A result object with attributes:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 具有以下属性的结果对象：
- en: integralfloat
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 积分值浮点数
- en: The estimate of the integral.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 积分估计值。
- en: 'standard_error :'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: standard_error：
- en: The error estimate. See Notes for interpretation.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 误差估计。详见注释以获取解释。
- en: Notes
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: Values of the integrand at each of the *n_points* points of a QMC sample are
    used to produce an estimate of the integral. This estimate is drawn from a population
    of possible estimates of the integral, the value of which we obtain depends on
    the particular points at which the integral was evaluated. We perform this process
    *n_estimates* times, each time evaluating the integrand at different scrambled
    QMC points, effectively drawing i.i.d. random samples from the population of integral
    estimates. The sample mean \(m\) of these integral estimates is an unbiased estimator
    of the true value of the integral, and the standard error of the mean \(s\) of
    these estimates may be used to generate confidence intervals using the t distribution
    with `n_estimates - 1` degrees of freedom. Perhaps counter-intuitively, increasing
    *n_points* while keeping the total number of function evaluation points `n_points
    * n_estimates` fixed tends to reduce the actual error, whereas increasing *n_estimates*
    tends to decrease the error estimate.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在 QMC 样本的 *n_points* 点中的积分值被用来产生对积分的估计。这个估计来自于可能的积分估计的一个群体，我们获得的值取决于评估积分的特定点。我们对此过程执行
    *n_estimates* 次，每次评估不同混乱的 QMC 点的积分值，有效地从积分估计的群体中抽取 i.i.d. 随机样本。这些积分估计的样本均值 \(m\)
    是真实积分值的无偏估计，而这些估计的样本均值 \(s\) 的标准误差可以使用自由度为 `n_estimates - 1` 的 t 分布生成置信区间。或许反直觉地，增加
    *n_points* 而保持总的函数评估点数 `n_points * n_estimates` 固定倾向于减少实际误差，而增加 *n_estimates*
    则倾向于减少误差估计。
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: QMC quadrature is particularly useful for computing integrals in higher dimensions.
    An example integrand is the probability density function of a multivariate normal
    distribution.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: QMC（低差异序列蒙特卡罗）求积法在计算高维积分时特别有用。一个例子积分被用作多元正态分布的概率密度函数。
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To compute the integral over the unit hypercube:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算单位超立方体上的积分：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'A two-sided, 99% confidence interval for the integral may be estimated as:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对积分的双边、99% 置信区间可以估计为：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Indeed, the value reported by [`scipy.stats.multivariate_normal`](scipy.stats.multivariate_normal.html#scipy.stats.multivariate_normal
    "scipy.stats.multivariate_normal") is within this range.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 确实，[`scipy.stats.multivariate_normal`](scipy.stats.multivariate_normal.html#scipy.stats.multivariate_normal
    "scipy.stats.multivariate_normal") 返回的数值在这个范围内。
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
