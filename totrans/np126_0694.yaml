- en: numpy.ma.flatnotmasked_edges
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.flatnotmasked_edges.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.flatnotmasked_edges.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Find the indices of the first and last unmasked values.
  prefs: []
  type: TYPE_NORMAL
- en: Expects a 1-D [`MaskedArray`](../maskedarray.baseclass.html#numpy.ma.MaskedArray
    "numpy.ma.MaskedArray"), returns None if all values are masked.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input 1-D [`MaskedArray`](../maskedarray.baseclass.html#numpy.ma.MaskedArray
    "numpy.ma.MaskedArray")
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**edges**ndarray or None'
  prefs: []
  type: TYPE_NORMAL
- en: The indices of first and last non-masked value in the array. Returns None if
    all values are masked.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`flatnotmasked_contiguous`](numpy.ma.flatnotmasked_contiguous.html#numpy.ma.flatnotmasked_contiguous
    "numpy.ma.flatnotmasked_contiguous"), [`notmasked_contiguous`](numpy.ma.notmasked_contiguous.html#numpy.ma.notmasked_contiguous
    "numpy.ma.notmasked_contiguous"), [`notmasked_edges`](numpy.ma.notmasked_edges.html#numpy.ma.notmasked_edges
    "numpy.ma.notmasked_edges")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`clump_masked`](numpy.ma.clump_masked.html#numpy.ma.clump_masked "numpy.ma.clump_masked"),
    [`clump_unmasked`](numpy.ma.clump_unmasked.html#numpy.ma.clump_unmasked "numpy.ma.clump_unmasked")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Only accepts 1-D arrays.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
