- en: numpy.ndarray.tobytes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.tobytes.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.tobytes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: method
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Construct Python bytes containing the raw data bytes in the array.
  prefs: []
  type: TYPE_NORMAL
- en: Constructs Python bytes showing a copy of the raw contents of data memory. The
    bytes object is produced in C-order by default. This behavior is controlled by
    the `order` parameter.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.9.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**order**{‘C’, ‘F’, ‘A’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Controls the memory layout of the bytes object. ‘C’ means C-order, ‘F’ means
    F-order, ‘A’ (short for *Any*) means ‘F’ if *a* is Fortran contiguous, ‘C’ otherwise.
    Default is ‘C’.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**s**bytes'
  prefs: []
  type: TYPE_NORMAL
- en: Python bytes exhibiting a copy of *a*’s raw data.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`frombuffer`](numpy.frombuffer.html#numpy.frombuffer "numpy.frombuffer")'
  prefs: []
  type: TYPE_NORMAL
- en: Inverse of this operation, construct a 1-dimensional array from Python bytes.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
