["```py\nscipy.stats.genexpon = <scipy.stats._continuous_distns.genexpon_gen object>\n```", "```py\n>>> import numpy as np\n>>> from scipy.stats import genexpon\n>>> import matplotlib.pyplot as plt\n>>> fig, ax = plt.subplots(1, 1) \n```", "```py\n>>> a, b, c = 9.13, 16.2, 3.28\n>>> mean, var, skew, kurt = genexpon.stats(a, b, c, moments='mvsk') \n```", "```py\n>>> x = np.linspace(genexpon.ppf(0.01, a, b, c),\n...                 genexpon.ppf(0.99, a, b, c), 100)\n>>> ax.plot(x, genexpon.pdf(x, a, b, c),\n...        'r-', lw=5, alpha=0.6, label='genexpon pdf') \n```", "```py\n>>> rv = genexpon(a, b, c)\n>>> ax.plot(x, rv.pdf(x), 'k-', lw=2, label='frozen pdf') \n```", "```py\n>>> vals = genexpon.ppf([0.001, 0.5, 0.999], a, b, c)\n>>> np.allclose([0.001, 0.5, 0.999], genexpon.cdf(vals, a, b, c))\nTrue \n```", "```py\n>>> r = genexpon.rvs(a, b, c, size=1000) \n```", "```py\n>>> ax.hist(r, density=True, bins='auto', histtype='stepfilled', alpha=0.2)\n>>> ax.set_xlim([x[0], x[-1]])\n>>> ax.legend(loc='best', frameon=False)\n>>> plt.show() \n```"]