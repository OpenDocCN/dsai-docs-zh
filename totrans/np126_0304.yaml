- en: numpy.fromfunction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fromfunction.html](https://numpy.org/doc/1.26/reference/generated/numpy.fromfunction.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Construct an array by executing a function over each coordinate.
  prefs: []
  type: TYPE_NORMAL
- en: The resulting array therefore has a value `fn(x, y, z)` at coordinate `(x, y,
    z)`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**function**callable'
  prefs: []
  type: TYPE_NORMAL
- en: The function is called with N parameters, where N is the rank of [`shape`](numpy.shape.html#numpy.shape
    "numpy.shape"). Each parameter represents the coordinates of the array varying
    along a specific axis. For example, if [`shape`](numpy.shape.html#numpy.shape
    "numpy.shape") were `(2, 2)`, then the parameters would be `array([[0, 0], [1,
    1]])` and `array([[0, 1], [0, 1]])`
  prefs: []
  type: TYPE_NORMAL
- en: '**shape**(N,) tuple of ints'
  prefs: []
  type: TYPE_NORMAL
- en: Shape of the output array, which also determines the shape of the coordinate
    arrays passed to *function*.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Data-type of the coordinate arrays passed to *function*. By default, [`dtype`](numpy.dtype.html#numpy.dtype
    "numpy.dtype") is float.
  prefs: []
  type: TYPE_NORMAL
- en: '**like**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Reference object to allow the creation of arrays which are not NumPy arrays.
    If an array-like passed in as `like` supports the `__array_function__` protocol,
    the result will be defined by it. In this case, it ensures the creation of an
    array object compatible with that passed in via this argument.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.20.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**fromfunction**any'
  prefs: []
  type: TYPE_NORMAL
- en: The result of the call to *function* is passed back directly. Therefore the
    shape of [`fromfunction`](#numpy.fromfunction "numpy.fromfunction") is completely
    determined by *function*. If *function* returns a scalar value, the shape of [`fromfunction`](#numpy.fromfunction
    "numpy.fromfunction") would not match the [`shape`](numpy.shape.html#numpy.shape
    "numpy.shape") parameter.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`indices`](numpy.indices.html#numpy.indices "numpy.indices"), [`meshgrid`](numpy.meshgrid.html#numpy.meshgrid
    "numpy.meshgrid")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Keywords other than [`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype") and
    *like* are passed to *function*.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
