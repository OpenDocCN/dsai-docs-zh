- en: What’s new in 2.0.0 (April 3, 2023)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v2.0.0.html](https://pandas.pydata.org/docs/whatsnew/v2.0.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 2.0.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '## Enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '### Installing optional dependencies with pip extras'
  prefs: []
  type: TYPE_NORMAL
- en: When installing pandas using pip, sets of optional dependencies can also be
    installed by specifying extras.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The available extras, found in the [installation guide](../getting_started/install.html#install-dependencies),
    are `[all, performance, computation, fss, aws, gcp, excel, parquet, feather, hdf5,
    spss, postgresql, mysql, sql-other, html, xml, plot, output_formatting, clipboard,
    compression, test]` ([GH 39164](https://github.com/pandas-dev/pandas/issues/39164)).  ###
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") can
    now hold numpy numeric dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to use any numpy numeric dtype in a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 42717](https://github.com/pandas-dev/pandas/issues/42717)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously it was only possible to use `int64`, `uint64` & `float64` dtypes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '`Int64Index`, `UInt64Index` & `Float64Index` were deprecated in pandas version
    1.4 and have now been removed. Instead [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") should be used directly, and can it now take all numpy numeric
    dtypes, i.e. `int8`/ `int16`/`int32`/`int64`/`uint8`/`uint16`/`uint32`/`uint64`/`float32`/`float64`
    dtypes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The ability for [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    to hold the numpy numeric dtypes has meant some changes in Pandas functionality.
    In particular, operations that previously were forced to create 64-bit indexes,
    can now create indexes with lower bit sizes, e.g. 32-bit indexes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below is a possibly non-exhaustive list of changes:'
  prefs: []
  type: TYPE_NORMAL
- en: Instantiating using a numpy numeric array now follows the dtype of the numpy
    array. Previously, all indexes created from numpy numeric arrays were forced to
    64-bit. Now, for example, `Index(np.array([1, 2, 3]))` will be `int32` on 32-bit
    systems, where it previously would have been `int64` even on 32-bit systems. Instantiating
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") using
    a list of numbers will still return 64bit dtypes, e.g. `Index([1, 2, 3])` will
    have a `int64` dtype, which is the same as previously.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The various numeric datetime attributes of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([`day`](../reference/api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day"), [`month`](../reference/api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month"), [`year`](../reference/api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") etc.) were previously in of dtype `int64`, while
    they were `int32` for [`arrays.DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"). They are now `int32` on [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") also:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Level dtypes on Indexes from [`Series.sparse.from_coo()`](../reference/api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo") are now of dtype `int32`, the same as they are
    on the `rows`/`cols` on a scipy sparse matrix. Previously they were of dtype `int64`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") cannot
    be instantiated using a float16 dtype. Previously instantiating an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") using dtype `float16` resulted in a `Float64Index` with a `float64`
    dtype. It now raises a `NotImplementedError`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]  ### Argument `dtype_backend`, to return pyarrow-backed or numpy-backed
    nullable dtypes'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The following functions gained a new keyword `dtype_backend` ([GH 36712](https://github.com/pandas-dev/pandas/issues/36712))
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When this option is set to `"numpy_nullable"` it will return a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that is backed by nullable dtypes.
  prefs: []
  type: TYPE_NORMAL
- en: 'When this keyword is set to `"pyarrow"`, then these functions will return pyarrow-backed
    nullable [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrames ([GH 48957](https://github.com/pandas-dev/pandas/issues/48957),
    [GH 49997](https://github.com/pandas-dev/pandas/issues/49997)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Copy-on-Write improvements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A new lazy copy mechanism that defers the copy until the object in question
    is modified was added to the methods listed in [Copy-on-Write optimizations](../user_guide/copy_on_write.html#copy-on-write-optimizations).
    These methods return views when Copy-on-Write is enabled, which provides a significant
    performance improvement compared to the regular execution ([GH 49473](https://github.com/pandas-dev/pandas/issues/49473)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing a single column of a DataFrame as a Series (e.g. `df["col"]`) now
    always returns a new object every time it is constructed when Copy-on-Write is
    enabled (not returning multiple times an identical, cached Series object). This
    ensures that those Series objects correctly follow the Copy-on-Write rules ([GH
    49450](https://github.com/pandas-dev/pandas/issues/49450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor will now create a lazy copy (deferring the copy until a modification
    to the data happens) when constructing a Series from an existing Series with the
    default of `copy=False` ([GH 50471](https://github.com/pandas-dev/pandas/issues/50471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor will now create a lazy copy (deferring the copy until a modification
    to the data happens) when constructing from an existing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the default of `copy=False` ([GH 51239](https://github.com/pandas-dev/pandas/issues/51239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a dictionary of Series objects
    and specifying `copy=False`, will now use a lazy copy of those Series objects
    for the columns of the DataFrame ([GH 50777](https://github.com/pandas-dev/pandas/issues/50777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and specifying `copy=False`, will now respect Copy-on-Write.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructors, when constructing from a NumPy array, will now copy the array by
    default to avoid mutating the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") / [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when mutating the array. Specify `copy=False` to get the old
    behavior. When setting `copy=False` pandas does not guarantee correct Copy-on-Write
    behavior when the NumPy array is modified after creation of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") / [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records") will now respect Copy-on-Write when called with
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trying to set values using chained assignment (for example, `df["a"][1:3] =
    0`) will now always raise a warning when Copy-on-Write is enabled. In this mode,
    chained assignment can never work because we are always setting into a temporary
    object that is the result of an indexing operation (getitem), which under Copy-on-Write
    always behaves as a copy. Thus, assigning through a chain can never update the
    original Series or DataFrame. Therefore, an informative warning is raised to the
    user to avoid silently doing nothing ([GH 49467](https://github.com/pandas-dev/pandas/issues/49467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") will now respect the Copy-on-Write mechanism when
    `inplace=True`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") will now respect the Copy-on-Write mechanism.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arithmetic operations that can be inplace, e.g. `ser *= 2` will now respect
    the Copy-on-Write mechanism.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.__getitem__()` will now respect the Copy-on-Write mechanism when
    the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    has [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    columns.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.__getitem__()` will now respect the Copy-on-Write mechanism when the'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    has a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex").'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view") will now respect the Copy-on-Write mechanism.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Copy-on-Write can be enabled through one of
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, copy on write can be enabled locally through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added support for `str` accessor methods when using [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.string` type ([GH 50325](https://github.com/pandas-dev/pandas/issues/50325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for `dt` accessor methods when using [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.timestamp` type ([GH 50954](https://github.com/pandas-dev/pandas/issues/50954))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now supports using `encoding=''infer''` to correctly read and use the encoding
    specified by the sas file. ([GH 48048](https://github.com/pandas-dev/pandas/issues/48048))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile"), [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") and [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std") now preserve nullable dtypes instead
    of casting to numpy dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std") now support datetime64, timedelta64,
    and [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtypes ([GH 48481](https://github.com/pandas-dev/pandas/issues/48481))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.add_suffix()`](../reference/api/pandas.Series.add_suffix.html#pandas.Series.add_suffix
    "pandas.Series.add_suffix"), [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix"), [`Series.add_prefix()`](../reference/api/pandas.Series.add_prefix.html#pandas.Series.add_prefix
    "pandas.Series.add_prefix") and [`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") support an `axis` argument. If `axis` is set, the
    default behaviour of which axis to consider can be overwritten ([GH 47819](https://github.com/pandas-dev/pandas/issues/47819))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") now shows the first element where the DataFrames
    differ, analogously to `pytest`’s output ([GH 47910](https://github.com/pandas-dev/pandas/issues/47910))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `index` parameter to [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") ([GH 46398](https://github.com/pandas-dev/pandas/issues/46398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for extension array dtypes in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") ([GH 44240](https://github.com/pandas-dev/pandas/issues/44240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added metadata propagation for binary operators on [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `cumsum`, `cumprod`, `cummin` and `cummax` to the `ExtensionArray` interface
    via `_accumulate` ([GH 28385](https://github.com/pandas-dev/pandas/issues/28385))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CategoricalConversionWarning`](../reference/api/pandas.errors.CategoricalConversionWarning.html#pandas.errors.CategoricalConversionWarning
    "pandas.errors.CategoricalConversionWarning"), [`InvalidComparison`](../reference/api/pandas.errors.InvalidComparison.html#pandas.errors.InvalidComparison
    "pandas.errors.InvalidComparison"), [`InvalidVersion`](../reference/api/pandas.errors.InvalidVersion.html#pandas.errors.InvalidVersion
    "pandas.errors.InvalidVersion"), [`LossySetitemError`](../reference/api/pandas.errors.LossySetitemError.html#pandas.errors.LossySetitemError
    "pandas.errors.LossySetitemError"), and [`NoBufferPresent`](../reference/api/pandas.errors.NoBufferPresent.html#pandas.errors.NoBufferPresent
    "pandas.errors.NoBufferPresent") are now exposed in `pandas.errors` ([GH 27656](https://github.com/pandas-dev/pandas/issues/27656))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix `test` optional_extra by adding missing test package `pytest-asyncio` ([GH
    48361](https://github.com/pandas-dev/pandas/issues/48361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") exception message thrown improved to include column
    name when type conversion is not possible. ([GH 47571](https://github.com/pandas-dev/pandas/issues/47571))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now supports a `unit` keyword (“s”, “ms”, “us”, or “ns”)
    to specify the desired resolution of the output index ([GH 49106](https://github.com/pandas-dev/pandas/issues/49106))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") now supports a `unit` keyword (“s”, “ms”, “us”, or “ns”)
    to specify the desired resolution of the output index ([GH 49824](https://github.com/pandas-dev/pandas/issues/49824))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now supports a `mode` keyword with supported inputs
    ‘w’ and ‘a’. Defaulting to ‘w’, ‘a’ can be used when lines=True and orient=’records’
    to append record oriented json lines to an existing json file. ([GH 35849](https://github.com/pandas-dev/pandas/issues/35849))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `name` parameter to [`IntervalIndex.from_breaks()`](../reference/api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks"), [`IntervalIndex.from_arrays()`](../reference/api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays") and [`IntervalIndex.from_tuples()`](../reference/api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples") ([GH 48911](https://github.com/pandas-dev/pandas/issues/48911))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve exception message when using [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to include the column that is compared ([GH 50323](https://github.com/pandas-dev/pandas/issues/50323))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when join-columns were duplicated ([GH 50102](https://github.com/pandas-dev/pandas/issues/50102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for extension array dtypes to [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") ([GH 32430](https://github.com/pandas-dev/pandas/issues/32430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `Index.infer_objects()` analogous to [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") ([GH 50034](https://github.com/pandas-dev/pandas/issues/50034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `copy` parameter to [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") and [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects"), passing `False` will avoid making copies for
    series or columns that are already non-object or where no better dtype can be
    inferred ([GH 50096](https://github.com/pandas-dev/pandas/issues/50096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") now recognizes `xlabel` and `ylabel` arguments ([GH
    49793](https://github.com/pandas-dev/pandas/issues/49793))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates") has gained `ignore_index` keyword to reset index
    ([GH 48304](https://github.com/pandas-dev/pandas/issues/48304))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") and [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") has gained `ignore_index` keyword to reset index ([GH
    31725](https://github.com/pandas-dev/pandas/issues/31725))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") for non-ISO8601 formats, informing users about the position
    of the first error ([GH 50361](https://github.com/pandas-dev/pandas/issues/50361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when trying to align [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects (for example, in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare")) to clarify that “identically labelled” refers to
    both index and columns ([GH 50083](https://github.com/pandas-dev/pandas/issues/50083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for [`Index.min()`](../reference/api/pandas.Index.min.html#pandas.Index.min
    "pandas.Index.min") and [`Index.max()`](../reference/api/pandas.Index.max.html#pandas.Index.max
    "pandas.Index.max") for pyarrow string dtypes ([GH 51397](https://github.com/pandas-dev/pandas/issues/51397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`DatetimeIndex.as_unit()`](../reference/api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit") and [`TimedeltaIndex.as_unit()`](../reference/api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit") to convert to different resolutions; supported
    resolutions are “s”, “ms”, “us”, and “ns” ([GH 50616](https://github.com/pandas-dev/pandas/issues/50616))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Series.dt.unit()`](../reference/api/pandas.Series.dt.unit.html#pandas.Series.dt.unit
    "pandas.Series.dt.unit") and [`Series.dt.as_unit()`](../reference/api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit") to convert to different resolutions; supported resolutions
    are “s”, “ms”, “us”, and “ns” ([GH 51223](https://github.com/pandas-dev/pandas/issues/51223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new argument `dtype` to [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql") to be consistent with [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") ([GH 50797](https://github.com/pandas-dev/pandas/issues/50797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"),
    [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table "pandas.read_table"),
    [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")
    and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accept `date_format` ([GH 50601](https://github.com/pandas-dev/pandas/issues/50601))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now accepts `"ISO8601"` as an argument to `format`, which
    will match any ISO8601 string (but possibly not identically-formatted) ([GH 50411](https://github.com/pandas-dev/pandas/issues/50411))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now accepts `"mixed"` as an argument to `format`, which
    will infer the format for each element individually ([GH 50972](https://github.com/pandas-dev/pandas/issues/50972))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new argument `engine` to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") to support parsing JSON with pyarrow by specifying `engine="pyarrow"`
    ([GH 48893](https://github.com/pandas-dev/pandas/issues/48893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for SQLAlchemy 2.0 ([GH 40686](https://github.com/pandas-dev/pandas/issues/40686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for `decimal` parameter when `engine="pyarrow"` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 51302](https://github.com/pandas-dev/pandas/issues/51302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") set
    operations [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union"), [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection"), [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference"), and [`Index.symmetric_difference()`](../reference/api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference") now support `sort=True`, which will always
    return a sorted result, unlike the default `sort=None` which does not sort in
    some cases ([GH 25151](https://github.com/pandas-dev/pandas/issues/25151))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Added new escape mode “latex-math” to avoid escaping “$” in formatter ([GH
    50040](https://github.com/pandas-dev/pandas/issues/50040))  ## Notable bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod") overflow instead of lossy casting
    to float'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions we cast to float when applying `cumsum` and `cumprod` which
    lead to incorrect results even if the result could be hold by `int64` dtype. Additionally,
    the aggregation overflows consistent with numpy and the regular [`DataFrame.cumprod()`](../reference/api/pandas.DataFrame.cumprod.html#pandas.DataFrame.cumprod
    "pandas.DataFrame.cumprod") and [`DataFrame.cumsum()`](../reference/api/pandas.DataFrame.cumsum.html#pandas.DataFrame.cumsum
    "pandas.DataFrame.cumsum") methods when the limit of `int64` is reached ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: We return incorrect results with the 6th value.
  prefs: []
  type: TYPE_NORMAL
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'We overflow with the 7th value, but the 6th value is still correct.  ### [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now behave as filtrations'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") acted as if they were aggregations. However,
    for most inputs `n`, they may return either zero or multiple rows per group. This
    means that they are filtrations, similar to e.g. [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"). pandas now treats them as filtrations
    ([GH 13666](https://github.com/pandas-dev/pandas/issues/13666)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: In particular, the index of the result is derived from the input by selecting
    the appropriate rows. Also, when `n` is larger than the group, no rows instead
    of `NaN` is returned.
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]  ## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Construction with datetime64 or timedelta64 dtype with unsupported resolution'
  prefs: []
  type: TYPE_NORMAL
- en: 'In past versions, when constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and passing a “datetime64” or “timedelta64” dtype with unsupported
    resolution (i.e. anything other than “ns”), pandas would silently replace the
    given dtype with its nanosecond analogue:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'In pandas 2.0 we support resolutions “s”, “ms”, “us”, and “ns”. When passing
    a supported dtype (e.g. “datetime64[s]”), the result now has exactly the requested
    dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'With an un-supported dtype, pandas now raises instead of silently swapping
    in a supported dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]  ### Value counts sets the resulting name to `count`'
  prefs: []
  type: TYPE_NORMAL
- en: In past versions, when running [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts"), the result would inherit the original object’s
    name, and the result index would be nameless. This would cause confusion when
    resetting the index, and the column names would not correspond with the column
    values. Now, the result name will be `'count'` (or `'proportion'` if `normalize=True`
    was passed), and the index will be named after the original object ([GH 49497](https://github.com/pandas-dev/pandas/issues/49497)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Likewise for other `value_counts` methods (for example, [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts")).  ### Disallow astype conversion to non-supported
    datetime64/timedelta64 dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: 'In previous versions, converting a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from `datetime64[ns]` to a different `datetime64[X]` dtype
    would return with `datetime64[ns]` dtype instead of the requested dtype. In pandas
    2.0, support is added for “datetime64[s]”, “datetime64[ms]”, and “datetime64[us]”
    dtypes, so converting to those dtypes gives exactly the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'With the new behavior, we get exactly the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'For non-supported resolutions e.g. “datetime64[D]”, we raise instead of silently
    ignoring the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: For conversion from `timedelta64[ns]` dtypes, the old behavior converted to
    a floating point format.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'The new behavior, as for datetime64, either gives exactly the requested dtype
    or raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]  ### UTC and fixed-offset timezones default to standard-library tzinfo
    objects'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, the default `tzinfo` object used to represent UTC was
    `pytz.UTC`. In pandas 2.0, we default to `datetime.timezone.utc` instead. Similarly,
    for timezones represent fixed UTC offsets, we use `datetime.timezone` objects
    instead of `pytz.FixedOffset` objects. See ([GH 34916](https://github.com/pandas-dev/pandas/issues/34916))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'For timezones that are neither UTC nor fixed offsets, e.g. “US/Pacific”, we
    continue to default to `pytz` objects.  ### Empty DataFrames/Series will now default
    to have a `RangeIndex`'
  prefs: []
  type: TYPE_NORMAL
- en: Before, constructing an empty (where `data` is `None` or an empty list-like
    argument) [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    without specifying the axes (`index=None`, `columns=None`) would return the axes
    as empty [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with object dtype.
  prefs: []
  type: TYPE_NORMAL
- en: Now, the axes return an empty [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 49572](https://github.com/pandas-dev/pandas/issues/49572)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]  ### DataFrame to LaTeX has a new render engine'
  prefs: []
  type: TYPE_NORMAL
- en: The existing [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") has been restructured to utilise the extended implementation
    previously available under [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex"). The arguments signature is similar,
    albeit `col_space` has been removed since it is ignored by LaTeX engines. This
    render engine also requires `jinja2` as a dependency which needs to be installed,
    since rendering is based upon jinja2 templates.
  prefs: []
  type: TYPE_NORMAL
- en: 'The pandas latex options below are no longer used and have been removed. The
    generic max rows and columns arguments remain but for this functionality should
    be replaced by the Styler equivalents. The alternative options giving similar
    functionality are indicated below:'
  prefs: []
  type: TYPE_NORMAL
- en: '`display.latex.escape`: replaced with `styler.format.escape`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.longtable`: replaced with `styler.latex.environment`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.multicolumn`, `display.latex.multicolumn_format` and `display.latex.multirow`:
    replaced with `styler.sparse.rows`, `styler.sparse.columns`, `styler.latex.multirow_align`
    and `styler.latex.multicol_align`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.repr`: replaced with `styler.render.repr`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.max_rows` and `display.max_columns`: replace with `styler.render.max_rows`,
    `styler.render.max_columns` and `styler.render.max_elements`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note that due to this change some defaults have also changed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`multirow` now defaults to *True*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multirow_align` defaults to *“r”* instead of *“l”*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multicol_align` defaults to *“r”* instead of *“l”*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`escape` now defaults to *False*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note that the behaviour of `_repr_latex_` is also changed. Previously setting
    `display.latex.repr` would generate LaTeX only when using nbconvert for a JupyterNotebook,
    and not when the user is running the notebook. Now the `styler.render.repr` option
    allows control of the specific output within JupyterNotebooks for operations (not
    just on nbconvert). See [GH 39911](https://github.com/pandas-dev/pandas/issues/39911).  ###
    Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 1.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 7.0.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest-xdist (dev) | 2.2.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis (dev) | 6.34.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.8.2 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 7.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.6.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.21.0 | X |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Datetimes are now parsed with a consistent format
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the past, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") guessed the format for each element independently. This
    was appropriate for some cases where elements had mixed date formats - however,
    it would regularly cause problems when users expected a consistent format but
    the function would switch formats between elements. As of version 2.0.0, parsing
    will use a consistent format, determined by the first non-NA value (unless the
    user specifies a format, in which case that is used).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Note that this affects [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") as well.
  prefs: []
  type: TYPE_NORMAL
- en: If you still need to parse dates with inconsistent formats, you can use `format='mixed'`
    (possibly alongside `dayfirst`)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: or, if your formats are all ISO8601 (but possibly not identically-formatted)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The `freq`, `tz`, `nanosecond`, and `unit` keywords in the [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor are now keyword-only ([GH 45307](https://github.com/pandas-dev/pandas/issues/45307),
    [GH 32526](https://github.com/pandas-dev/pandas/issues/32526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `nanoseconds` greater than 999 or less than 0 in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") now raises a `ValueError` ([GH 48538](https://github.com/pandas-dev/pandas/issues/48538),
    [GH 48255](https://github.com/pandas-dev/pandas/issues/48255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"):
    specifying an incorrect number of columns with `index_col` of now raises `ParserError`
    instead of `IndexError` when using the c parser.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Default value of `dtype` in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") is changed to `bool` from `uint8` ([GH 45848](https://github.com/pandas-dev/pandas/issues/45848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype"), [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and `DatetimeIndex.astype()` casting datetime64 data
    to any of “datetime64[s]”, “datetime64[ms]”, “datetime64[us]” will return an object
    with the given resolution instead of coercing back to “datetime64[ns]” ([GH 48928](https://github.com/pandas-dev/pandas/issues/48928))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype"), [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and `DatetimeIndex.astype()` casting timedelta64 data
    to any of “timedelta64[s]”, “timedelta64[ms]”, “timedelta64[us]” will return an
    object with the given resolution instead of coercing to “float64” dtype ([GH 48963](https://github.com/pandas-dev/pandas/issues/48963))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.astype()`, `TimedeltaIndex.astype()`, `PeriodIndex.astype()`
    [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with `datetime64`, `timedelta64` or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") dtypes no longer allow converting to integer dtypes other
    than “int64”, do `obj.astype(''int64'', copy=False).astype(dtype)` instead ([GH
    49715](https://github.com/pandas-dev/pandas/issues/49715))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") now allows casting from `float64` dtype to datetime-like
    dtypes, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 49660](https://github.com/pandas-dev/pandas/issues/49660))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing data with dtype of “timedelta64[s]”, “timedelta64[ms]”, or “timedelta64[us]”
    to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors will now retain that dtype instead of casting
    to “timedelta64[ns]”; timedelta64 data with lower resolution will be cast to the
    lowest supported resolution “timedelta64[s]” ([GH 49014](https://github.com/pandas-dev/pandas/issues/49014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `dtype` of “timedelta64[s]”, “timedelta64[ms]”, or “timedelta64[us]”
    to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors will now retain that dtype instead of casting
    to “timedelta64[ns]”; passing a dtype with lower resolution for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will be cast to the lowest supported resolution “timedelta64[s]”
    ([GH 49014](https://github.com/pandas-dev/pandas/issues/49014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a `np.datetime64` object with non-nanosecond resolution to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will retain the input resolution if it is “s”, “ms”, “us”,
    or “ns”; otherwise it will be cast to the closest supported resolution ([GH 49008](https://github.com/pandas-dev/pandas/issues/49008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `datetime64` values with resolution other than nanosecond to [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") will retain the input resolution if it is “s”, “ms”, “us”,
    or “ns”; otherwise it will be cast to the closest supported resolution ([GH 50369](https://github.com/pandas-dev/pandas/issues/50369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing integer values and a non-nanosecond datetime64 dtype (e.g. “datetime64[s]”)
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") will
    treat the values as multiples of the dtype’s unit, matching the behavior of e.g.
    `Series(np.array(values, dtype="M8[s]"))` ([GH 51092](https://github.com/pandas-dev/pandas/issues/51092))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a string in ISO-8601 format to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will retain the resolution of the parsed input if it is “s”,
    “ms”, “us”, or “ns”; otherwise it will be cast to the closest supported resolution
    ([GH 49737](https://github.com/pandas-dev/pandas/issues/49737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `other` argument in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") and [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") now defaults to `no_default` instead of `np.nan` consistent
    with [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"). Entries will be filled with the corresponding NULL value
    (`np.nan` for numpy dtypes, `pd.NA` for extension dtypes). ([GH 49111](https://github.com/pandas-dev/pandas/issues/49111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") to retain sparse dtype ([GH 49583](https://github.com/pandas-dev/pandas/issues/49583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") of datetime objects, pandas no longer silently converts the index
    to a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 39307](https://github.com/pandas-dev/pandas/issues/39307),
    [GH 23598](https://github.com/pandas-dev/pandas/issues/23598))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with parameter `exact="equiv"` now considers
    two indexes equal when both are either a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with an `int64` dtype. Previously it meant either a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") or a `Int64Index` ([GH 51098](https://github.com/pandas-dev/pandas/issues/51098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") with dtype “timedelta64[ns]” or “datetime64[ns]” now returns
    `TimedeltaArray` or `DatetimeArray` instead of `numpy.ndarray` ([GH 49176](https://github.com/pandas-dev/pandas/issues/49176))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") now allow sequences containing both `datetime` objects
    and numeric entries, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 49037](https://github.com/pandas-dev/pandas/issues/49037),
    [GH 50453](https://github.com/pandas-dev/pandas/issues/50453))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") now only returns `True` for array-likes with
    `dtype=object` when the elements are inferred to be strings ([GH 15585](https://github.com/pandas-dev/pandas/issues/15585))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a sequence containing `datetime` objects and `date` objects to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor will return with `object` dtype instead of `datetime64[ns]`
    dtype, consistent with [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") behavior ([GH 49341](https://github.com/pandas-dev/pandas/issues/49341))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing strings that cannot be parsed as datetimes to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `dtype="datetime64[ns]"` will raise instead of silently
    ignoring the keyword and returning `object` dtype ([GH 24435](https://github.com/pandas-dev/pandas/issues/24435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a sequence containing a type that cannot be converted to [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") to [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") or to the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor with `dtype="timedelta64[ns]"` or to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") now raises `TypeError` instead of `ValueError` ([GH 49525](https://github.com/pandas-dev/pandas/issues/49525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor with sequence containing at least one `NaT` and everything
    else either `None` or `NaN` to infer `datetime64[ns]` dtype instead of `object`,
    matching [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    behavior ([GH 49340](https://github.com/pandas-dev/pandas/issues/49340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") with parameter `index_col` set to `None` (the default) will
    now set the index on the returned [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of a `Int64Index` ([GH 49745](https://github.com/pandas-dev/pandas/issues/49745))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic methods when working with object-dtypes, the results
    no longer do type inference on the result of the array operations, use `result.infer_objects(copy=False)`
    to do type inference on the result ([GH 49999](https://github.com/pandas-dev/pandas/issues/49999),
    [GH 49714](https://github.com/pandas-dev/pandas/issues/49714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor with an object-dtype `numpy.ndarray` containing all-`bool`
    values or all-complex values, this will now retain object dtype, consistent with
    the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    behavior ([GH 49594](https://github.com/pandas-dev/pandas/issues/49594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") from object-dtype containing `bytes` objects to string
    dtypes; this now does `val.decode()` on bytes objects instead of `str(val)`, matching
    [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") behavior ([GH 45326](https://github.com/pandas-dev/pandas/issues/45326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `"None"` to default `na_values` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 50286](https://github.com/pandas-dev/pandas/issues/50286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors when given an integer dtype and floating-point
    data that is not round numbers, this now raises `ValueError` instead of silently
    retaining the float dtype; do `Series(data)` or `DataFrame(data)` to get the old
    behavior, and `Series(data).astype(dtype)` or `DataFrame(data).astype(dtype)`
    to get the specified dtype ([GH 49599](https://github.com/pandas-dev/pandas/issues/49599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1`, an integer `fill_value`, and homogeneous
    datetime-like dtype, this now fills new columns with integer dtypes instead of
    casting to datetimelike ([GH 49842](https://github.com/pandas-dev/pandas/issues/49842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Files are now closed when encountering an exception in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 49921](https://github.com/pandas-dev/pandas/issues/49921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") & [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), where the index will now always be a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex"), when no index is specified. Previously the index would be
    a [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") with
    dtype `object` if the new DataFrame/Series has length 0 ([GH 49572](https://github.com/pandas-dev/pandas/issues/49572))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.values()`](../reference/api/pandas.DataFrame.values.html#pandas.DataFrame.values
    "pandas.DataFrame.values"), [`DataFrame.to_numpy()`](../reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy
    "pandas.DataFrame.to_numpy"), [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") no longer silently consolidate the underlying arrays;
    do `df = df.copy()` to ensure consolidation ([GH 49356](https://github.com/pandas-dev/pandas/issues/49356))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a new DataFrame using a full slice on both axes with [`loc`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") or [`iloc`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") (thus, `df.loc[:, :]` or `df.iloc[:, :]`) now returns
    a new DataFrame (shallow copy) instead of the original DataFrame, consistent with
    other methods to get a full slice (for example `df.loc[:]` or `df[:]`) ([GH 49469](https://github.com/pandas-dev/pandas/issues/49469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructors will now return a shallow copy (i.e. share data, but not attributes)
    when passed a Series and DataFrame, respectively, and with the default of `copy=False`
    (and if no other keyword triggers a copy). Previously, the new Series or DataFrame
    would share the index attribute (e.g. `df.index = ...` would also update the index
    of the parent or child) ([GH 49523](https://github.com/pandas-dev/pandas/issues/49523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow computing `cumprod` for [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object; previously this returned incorrect values ([GH 50246](https://github.com/pandas-dev/pandas/issues/50246))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects read from a `HDFStore` file without an index now have a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of an `int64` index ([GH 51076](https://github.com/pandas-dev/pandas/issues/51076))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiating an [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with an numeric numpy dtype with data containing [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") and/or [`NaT`](../reference/api/pandas.NaT.html#pandas.NaT "pandas.NaT")
    now raises a `ValueError`. Previously a `TypeError` was raised ([GH 51050](https://github.com/pandas-dev/pandas/issues/51050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading a JSON file with duplicate columns using `read_json(orient='split')`
    renames columns to avoid duplicates, as [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and the other readers do ([GH 50370](https://github.com/pandas-dev/pandas/issues/50370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The levels of the index of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") returned from `Series.sparse.from_coo` now always have dtype
    `int32`. Previously they had dtype `int64` ([GH 50926](https://github.com/pandas-dev/pandas/issues/50926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `unit` of either “Y” or “M” will now raise if a sequence
    contains a non-round `float` value, matching the `Timestamp` behavior ([GH 50301](https://github.com/pandas-dev/pandas/issues/50301))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The methods [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round"), `DataFrame.__invert__()`, `Series.__invert__()`, [`DataFrame.swapaxes()`](../reference/api/pandas.DataFrame.swapaxes.html#pandas.DataFrame.swapaxes
    "pandas.DataFrame.swapaxes"), [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first"), [`DataFrame.last()`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last"), [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first"), [`Series.last()`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") will now always return new objects ([GH 51032](https://github.com/pandas-dev/pandas/issues/51032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and `DataFrameGroupBy` aggregations (e.g. “sum”) with object-dtype columns no
    longer infer non-object dtypes for their results, explicitly call `result.infer_objects(copy=False)`
    on the result to obtain the old behavior ([GH 51205](https://github.com/pandas-dev/pandas/issues/51205),
    [GH 49603](https://github.com/pandas-dev/pandas/issues/49603))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Division by zero with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") dtypes returns `-inf`, `nan`, or `inf` depending on the numerator,
    instead of raising ([GH 51541](https://github.com/pandas-dev/pandas/issues/51541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.api.types.is_any_real_numeric_dtype()`](../reference/api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype") to check for real numeric dtypes
    ([GH 51152](https://github.com/pandas-dev/pandas/issues/51152))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_counts()` now returns data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.int64` type instead of `"Int64"` type ([GH
    51462](https://github.com/pandas-dev/pandas/issues/51462))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize")
    and [`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")
    preserve the original dtype when passed numpy timedelta64 or datetime64 with non-nanosecond
    resolution ([GH 48670](https://github.com/pandas-dev/pandas/issues/48670))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'A current PDEP proposes the deprecation and removal of the keywords `inplace`
    and `copy` for all but a small subset of methods from the pandas API. The current
    discussion takes place at [here](https://github.com/pandas-dev/pandas/pull/51466).
    The keywords won’t be necessary anymore in the context of Copy-on-Write. If this
    proposal is accepted, both keywords would be deprecated in the next release of
    pandas and removed in pandas 3.0.  ## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated parsing datetime strings with system-local timezone to `tzlocal`,
    pass a `tz` keyword or explicitly call `tz_localize` instead ([GH 50791](https://github.com/pandas-dev/pandas/issues/50791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated argument `infer_datetime_format` in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), as a strict version of it is now the default ([GH 48621](https://github.com/pandas-dev/pandas/issues/48621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `unit` when parsing strings, in a future version these
    will be parsed as datetimes (matching unit-less behavior) instead of cast to floats.
    To retain the old behavior, cast strings to numeric types before calling [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 50735](https://github.com/pandas-dev/pandas/issues/50735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `pandas.io.sql.execute()` ([GH 50185](https://github.com/pandas-dev/pandas/issues/50185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_boolean()`](../reference/api/pandas.Index.is_boolean.html#pandas.Index.is_boolean
    "pandas.Index.is_boolean") has been deprecated. Use [`pandas.api.types.is_bool_dtype()`](../reference/api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_integer()`](../reference/api/pandas.Index.is_integer.html#pandas.Index.is_integer
    "pandas.Index.is_integer") has been deprecated. Use [`pandas.api.types.is_integer_dtype()`](../reference/api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_floating()`](../reference/api/pandas.Index.is_floating.html#pandas.Index.is_floating
    "pandas.Index.is_floating") has been deprecated. Use [`pandas.api.types.is_float_dtype()`](../reference/api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.holds_integer()` has been deprecated. Use [`pandas.api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") instead ([GH 50243](https://github.com/pandas-dev/pandas/issues/50243))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_numeric()`](../reference/api/pandas.Index.is_numeric.html#pandas.Index.is_numeric
    "pandas.Index.is_numeric") has been deprecated. Use [`pandas.api.types.is_any_real_numeric_dtype()`](../reference/api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042),:issue:51152)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_categorical()`](../reference/api/pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical") has been deprecated. Use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_object()`](../reference/api/pandas.Index.is_object.html#pandas.Index.is_object
    "pandas.Index.is_object") has been deprecated. Use [`pandas.api.types.is_object_dtype()`](../reference/api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_interval()`](../reference/api/pandas.Index.is_interval.html#pandas.Index.is_interval
    "pandas.Index.is_interval") has been deprecated. Use [`pandas.api.types.is_interval_dtype()`](../reference/api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated argument `date_parser` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") in favour of `date_format` ([GH 50601](https://github.com/pandas-dev/pandas/issues/50601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `all` and `any` reductions with `datetime64` and [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtypes, use e.g. `(obj != pd.Timestamp(0), tz=obj.tz).all()`
    instead ([GH 34479](https://github.com/pandas-dev/pandas/issues/34479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused arguments `*args` and `**kwargs` in `Resampler` ([GH 50977](https://github.com/pandas-dev/pandas/issues/50977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated calling `float` or `int` on a single element [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to return a `float` or `int` respectively. Extract the element
    before calling `float` or `int` instead ([GH 51101](https://github.com/pandas-dev/pandas/issues/51101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.groups()`, use `Groupby.groups()` instead ([GH 51182](https://github.com/pandas-dev/pandas/issues/51182))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.grouper()`, use `Groupby.grouper()` instead ([GH 51182](https://github.com/pandas-dev/pandas/issues/51182))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.obj()`, use `Groupby.obj()` instead ([GH 51206](https://github.com/pandas-dev/pandas/issues/51206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.indexer()`, use `Resampler.indexer()` instead ([GH 51206](https://github.com/pandas-dev/pandas/issues/51206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.ax()`, use `Resampler.ax()` instead ([GH 51206](https://github.com/pandas-dev/pandas/issues/51206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated keyword `use_nullable_dtypes` in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet"), use `dtype_backend` instead ([GH 51853](https://github.com/pandas-dev/pandas/issues/51853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.pad()`](../reference/api/pandas.Series.pad.html#pandas.Series.pad
    "pandas.Series.pad") in favor of [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill") ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.backfill()`](../reference/api/pandas.Series.backfill.html#pandas.Series.backfill
    "pandas.Series.backfill") in favor of [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill") ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.pad()`](../reference/api/pandas.DataFrame.pad.html#pandas.DataFrame.pad
    "pandas.DataFrame.pad") in favor of [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill") ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.backfill()`](../reference/api/pandas.DataFrame.backfill.html#pandas.DataFrame.backfill
    "pandas.DataFrame.backfill") in favor of [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `close()`. Use `StataReader` as a context manager instead ([GH 49228](https://github.com/pandas-dev/pandas/issues/49228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated producing a scalar when iterating over a `DataFrameGroupBy` or a
    `SeriesGroupBy` that has been grouped by a `level` parameter that is a list of
    length 1; a tuple of length one will be returned instead ([GH 51583](https://github.com/pandas-dev/pandas/issues/51583))  ##
    Removal of prior version deprecations/changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Int64Index`, `UInt64Index` and `Float64Index`. See also [here](#whatsnew-200-enhancements-index-can-hold-numpy-numeric-dtypes)
    for more information ([GH 42717](https://github.com/pandas-dev/pandas/issues/42717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Timestamp.freq`, `Timestamp.freqstr` and argument `freq`
    from the [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor and [`Timestamp.fromordinal()`](../reference/api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal") ([GH 14146](https://github.com/pandas-dev/pandas/issues/14146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `CategoricalBlock`, `Block.is_categorical()`, require datetime64
    and timedelta64 values to be wrapped in `DatetimeArray` or `TimedeltaArray` before
    passing to `Block.make_block_same_class()`, require `DatetimeTZBlock.values` to
    have the correct ndim when passing to the `BlockManager` constructor, and removed
    the “fastpath” keyword from the `SingleBlockManager` constructor ([GH 40226](https://github.com/pandas-dev/pandas/issues/40226),
    [GH 40571](https://github.com/pandas-dev/pandas/issues/40571))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated global option `use_inf_as_null` in favor of `use_inf_as_na`
    ([GH 17126](https://github.com/pandas-dev/pandas/issues/17126))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated module `pandas.core.index` ([GH 30193](https://github.com/pandas-dev/pandas/issues/30193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated alias `pandas.core.tools.datetimes.to_time`, import the function
    directly from `pandas.core.tools.times` instead ([GH 34145](https://github.com/pandas-dev/pandas/issues/34145))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated alias `pandas.io.json.json_normalize`, import the function
    directly from `pandas.json_normalize` instead ([GH 27615](https://github.com/pandas-dev/pandas/issues/27615))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.to_dense()`, use `np.asarray(cat)` instead ([GH
    32639](https://github.com/pandas-dev/pandas/issues/32639))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.take_nd()` ([GH 27745](https://github.com/pandas-dev/pandas/issues/27745))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.mode()`, use `Series(cat).mode()` instead ([GH
    45033](https://github.com/pandas-dev/pandas/issues/45033))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.is_dtype_equal()` and `CategoricalIndex.is_dtype_equal()`
    ([GH 37545](https://github.com/pandas-dev/pandas/issues/37545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `CategoricalIndex.take_nd()` ([GH 30702](https://github.com/pandas-dev/pandas/issues/30702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.is_type_compatible()` ([GH 42113](https://github.com/pandas-dev/pandas/issues/42113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.is_mixed()`, check `index.inferred_type` directly
    instead ([GH 32922](https://github.com/pandas-dev/pandas/issues/32922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `pandas.api.types.is_categorical()`; use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype") instead ([GH 33385](https://github.com/pandas-dev/pandas/issues/33385))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.asi8()` ([GH 37877](https://github.com/pandas-dev/pandas/issues/37877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation changing behavior when passing `datetime64[ns]` dtype data
    and timezone-aware dtype to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), interpreting the values as wall-times instead of UTC times,
    matching [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") behavior ([GH 41662](https://github.com/pandas-dev/pandas/issues/41662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation changing behavior when applying a numpy ufunc on multiple
    non-aligned (on the index or columns) [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that will now align the inputs first ([GH 39239](https://github.com/pandas-dev/pandas/issues/39239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `DataFrame._AXIS_NUMBERS()`, `DataFrame._AXIS_NAMES()`, `Series._AXIS_NUMBERS()`,
    `Series._AXIS_NAMES()` ([GH 33637](https://github.com/pandas-dev/pandas/issues/33637))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.to_native_types()`, use `obj.astype(str)` instead
    ([GH 36418](https://github.com/pandas-dev/pandas/issues/36418))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Series.iteritems()`, `DataFrame.iteritems()`, use `obj.items`
    instead ([GH 45321](https://github.com/pandas-dev/pandas/issues/45321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `DataFrame.lookup()` ([GH 35224](https://github.com/pandas-dev/pandas/issues/35224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Series.append()`, `DataFrame.append()`, use [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") instead ([GH 35407](https://github.com/pandas-dev/pandas/issues/35407))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Series.iteritems()`, `DataFrame.iteritems()` and `HDFStore.iteritems()`
    use `obj.items` instead ([GH 45321](https://github.com/pandas-dev/pandas/issues/45321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `DatetimeIndex.union_many()` ([GH 45018](https://github.com/pandas-dev/pandas/issues/45018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `weekofyear` and `week` attributes of `DatetimeArray`, [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and `dt` accessor in favor of `isocalendar().week` ([GH
    33595](https://github.com/pandas-dev/pandas/issues/33595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `RangeIndex._start()`, `RangeIndex._stop()`, `RangeIndex._step()`,
    use `start`, `stop`, `step` instead ([GH 30482](https://github.com/pandas-dev/pandas/issues/30482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `DatetimeIndex.to_perioddelta()`, Use `dtindex - dtindex.to_period(freq).to_timestamp()`
    instead ([GH 34853](https://github.com/pandas-dev/pandas/issues/34853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Styler.hide_index()` and `Styler.hide_columns()` ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Styler.set_na_rep()` and `Styler.set_precision()` ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Styler.where()` ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Styler.render()` ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated argument `col_space` in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") ([GH 47970](https://github.com/pandas-dev/pandas/issues/47970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated argument `null_color` in [`Styler.highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null") ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated argument `check_less_precise` in `testing.assert_frame_equal()`,
    `testing.assert_extension_array_equal()`, `testing.assert_series_equal()`, `testing.assert_index_equal()`
    ([GH 30562](https://github.com/pandas-dev/pandas/issues/30562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `null_counts` argument in [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info"). Use `show_counts` instead ([GH 37999](https://github.com/pandas-dev/pandas/issues/37999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.is_monotonic()`, and `Series.is_monotonic()`; use
    `obj.is_monotonic_increasing` instead ([GH 45422](https://github.com/pandas-dev/pandas/issues/45422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.is_all_dates()` ([GH 36697](https://github.com/pandas-dev/pandas/issues/36697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing passing a timezone-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and `dtype="datetime64[ns]"` to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors ([GH 41555](https://github.com/pandas-dev/pandas/issues/41555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing passing a sequence of timezone-aware values
    and `dtype="datetime64[ns]"` to to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors ([GH 41555](https://github.com/pandas-dev/pandas/issues/41555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Enforced deprecation disallowing `numpy.ma.mrecords.MaskedRecords` in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor; pass `"{name: data[name] for name in data.dtype.names}`
    instead ([GH 40363](https://github.com/pandas-dev/pandas/issues/40363))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing unit-less “datetime64” dtype in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") ([GH 47844](https://github.com/pandas-dev/pandas/issues/47844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing using `.astype` to convert a `datetime64[ns]`
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    or [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") to timezone-aware dtype, use `obj.tz_localize` or `ser.dt.tz_localize`
    instead ([GH 39258](https://github.com/pandas-dev/pandas/issues/39258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing using `.astype` to convert a timezone-aware
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    or [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") to timezone-naive `datetime64[ns]` dtype, use `obj.tz_localize(None)`
    or `obj.tz_convert("UTC").tz_localize(None)` instead ([GH 39258](https://github.com/pandas-dev/pandas/issues/39258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing passing non boolean argument to sort in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 44629](https://github.com/pandas-dev/pandas/issues/44629))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed Date parser functions `parse_date_time()`, `parse_date_fields()`, `parse_all_fields()`
    and `generic_parser()` ([GH 24518](https://github.com/pandas-dev/pandas/issues/24518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `index` from the `core.arrays.SparseArray` constructor ([GH
    43523](https://github.com/pandas-dev/pandas/issues/43523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove argument `squeeze` from [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") ([GH 32380](https://github.com/pandas-dev/pandas/issues/32380))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `apply`, `apply_index`, `__call__`, `onOffset`, and `isAnchored`
    attributes from `DateOffset` ([GH 34171](https://github.com/pandas-dev/pandas/issues/34171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `keep_tz` argument in [`DatetimeIndex.to_series()`](../reference/api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series") ([GH 29731](https://github.com/pandas-dev/pandas/issues/29731))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove arguments `names` and `dtype` from [`Index.copy()`](../reference/api/pandas.Index.copy.html#pandas.Index.copy
    "pandas.Index.copy") and `levels` and `codes` from [`MultiIndex.copy()`](../reference/api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy") ([GH 35853](https://github.com/pandas-dev/pandas/issues/35853),
    [GH 36685](https://github.com/pandas-dev/pandas/issues/36685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove argument `inplace` from [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") and [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") ([GH 35626](https://github.com/pandas-dev/pandas/issues/35626))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed arguments `verbose` and `encoding` from [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") and [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") ([GH 47912](https://github.com/pandas-dev/pandas/issues/47912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `line_terminator` from [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv"), use `lineterminator` instead ([GH 45302](https://github.com/pandas-dev/pandas/issues/45302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `inplace` from [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis"), use `obj = obj.set_axis(..., copy=False)` instead ([GH
    48130](https://github.com/pandas-dev/pandas/issues/48130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing positional arguments to [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") and [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow parsing to Timedelta strings with components with units “Y”, “y”, or
    “M”, as these do not represent unambiguous durations ([GH 36838](https://github.com/pandas-dev/pandas/issues/36838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `MultiIndex.is_lexsorted()` and `MultiIndex.lexsort_depth()` ([GH 38701](https://github.com/pandas-dev/pandas/issues/38701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `how` from `PeriodIndex.astype()`, use [`PeriodIndex.to_timestamp()`](../reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp") instead ([GH 37982](https://github.com/pandas-dev/pandas/issues/37982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `try_cast` from [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"), [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") ([GH 38836](https://github.com/pandas-dev/pandas/issues/38836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `tz` from [`Period.to_timestamp()`](../reference/api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp"), use `obj.to_timestamp(...).tz_localize(tz)` instead
    ([GH 34522](https://github.com/pandas-dev/pandas/issues/34522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `sort_columns` in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") ([GH 47563](https://github.com/pandas-dev/pandas/issues/47563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `is_copy` from [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") and [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") ([GH 30615](https://github.com/pandas-dev/pandas/issues/30615))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `kind` from [`Index.get_slice_bound()`](../reference/api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound"), [`Index.slice_indexer()`](../reference/api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer") and [`Index.slice_locs()`](../reference/api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs") ([GH 41378](https://github.com/pandas-dev/pandas/issues/41378))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed arguments `prefix`, `squeeze`, `error_bad_lines` and `warn_bad_lines`
    from [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    ([GH 40413](https://github.com/pandas-dev/pandas/issues/40413), [GH 43427](https://github.com/pandas-dev/pandas/issues/43427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed arguments `squeeze` from [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 43427](https://github.com/pandas-dev/pandas/issues/43427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `datetime_is_numeric` from [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") and [`Series.describe()`](../reference/api/pandas.Series.describe.html#pandas.Series.describe
    "pandas.Series.describe") as datetime data will always be summarized as numeric
    data ([GH 34798](https://github.com/pandas-dev/pandas/issues/34798))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing list `key` to [`Series.xs()`](../reference/api/pandas.Series.xs.html#pandas.Series.xs
    "pandas.Series.xs") and [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs"), pass a tuple instead ([GH 41789](https://github.com/pandas-dev/pandas/issues/41789))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow subclass-specific keywords (e.g. “freq”, “tz”, “names”, “closed”) in
    the [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor ([GH 38597](https://github.com/pandas-dev/pandas/issues/38597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `inplace` from `Categorical.remove_unused_categories()` ([GH
    37918](https://github.com/pandas-dev/pandas/issues/37918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-round floats to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with `unit="M"` or `unit="Y"` ([GH 47266](https://github.com/pandas-dev/pandas/issues/47266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove keywords `convert_float` and `mangle_dupe_cols` from [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 41176](https://github.com/pandas-dev/pandas/issues/41176))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove keyword `mangle_dupe_cols` from [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") ([GH 48137](https://github.com/pandas-dev/pandas/issues/48137))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `errors` keyword from [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") and [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") ([GH 47728](https://github.com/pandas-dev/pandas/issues/47728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") except `io` and `sheet_name` ([GH 34418](https://github.com/pandas-dev/pandas/issues/34418))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") and [`Series.drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop") except `labels` ([GH 41486](https://github.com/pandas-dev/pandas/issues/41486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") and [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") except `value` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to `StringMethods.split()` and `StringMethods.rsplit()`
    except for `pat` ([GH 47448](https://github.com/pandas-dev/pandas/issues/47448))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") except `keys` ([GH 41495](https://github.com/pandas-dev/pandas/issues/41495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to `Resampler.interpolate()` except `method`
    ([GH 41699](https://github.com/pandas-dev/pandas/issues/41699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") and [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") except `level` ([GH 41496](https://github.com/pandas-dev/pandas/issues/41496))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") and [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") ([GH 41504](https://github.com/pandas-dev/pandas/issues/41504))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to `ExtensionArray.argsort()` ([GH 46134](https://github.com/pandas-dev/pandas/issues/46134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to `Categorical.sort_values()` ([GH 47618](https://github.com/pandas-dev/pandas/issues/47618))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Index.drop_duplicates()`](../reference/api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates") and [`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates") ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") except for `subset` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index") ([GH 41506](https://github.com/pandas-dev/pandas/issues/41506))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") and [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") except for `method` ([GH 41510](https://github.com/pandas-dev/pandas/issues/41510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") ([GH 44896](https://github.com/pandas-dev/pandas/issues/44896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Index.set_names()`](../reference/api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") except for `names` ([GH 41551](https://github.com/pandas-dev/pandas/issues/41551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join") except for `other` ([GH 46518](https://github.com/pandas-dev/pandas/issues/46518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") except for `objs` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot") except for `data` ([GH 48301](https://github.com/pandas-dev/pandas/issues/48301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") ([GH 48301](https://github.com/pandas-dev/pandas/issues/48301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") except for `io` ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") except for `path_or_buf` ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") except for `filepath_or_buffer` ([GH 47154](https://github.com/pandas-dev/pandas/issues/47154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") except for `filepath_or_buffer` ([GH 48128](https://github.com/pandas-dev/pandas/issues/48128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") except `filepath_or_buffer` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") except `filepath_or_buffer` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") except `filepath_or_buffer` ([GH 44710](https://github.com/pandas-dev/pandas/issues/44710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") except for `path_or_buffer` ([GH 45133](https://github.com/pandas-dev/pandas/issues/45133))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") and [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") except `cond` and `other` ([GH 41580](https://github.com/pandas-dev/pandas/issues/41580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") except for `path` ([GH 48128](https://github.com/pandas-dev/pandas/issues/48128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") except for `cond` and `other` ([GH 41523](https://github.com/pandas-dev/pandas/issues/41523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") except for `labels` ([GH 41491](https://github.com/pandas-dev/pandas/issues/41491))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") and [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") except for `mapper` ([GH 47587](https://github.com/pandas-dev/pandas/issues/47587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") and [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") except `lower` and `upper` ([GH 41511](https://github.com/pandas-dev/pandas/issues/41511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") and [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill") ([GH 41508](https://github.com/pandas-dev/pandas/issues/41508))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace"), [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") except for `to_replace` and `value` ([GH 47587](https://github.com/pandas-dev/pandas/issues/47587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") except for `by` ([GH 41505](https://github.com/pandas-dev/pandas/issues/41505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") ([GH 41505](https://github.com/pandas-dev/pandas/issues/41505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") except for `labels` ([GH 17966](https://github.com/pandas-dev/pandas/issues/17966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex") with non-unique [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects ([GH 42568](https://github.com/pandas-dev/pandas/issues/42568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallowed constructing [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with scalar `data` ([GH 38433](https://github.com/pandas-dev/pandas/issues/38433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallowed constructing [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") without passing `data` ([GH 38944](https://github.com/pandas-dev/pandas/issues/38944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Rolling.validate()`, `Expanding.validate()`, and `ExponentialMovingWindow.validate()`
    ([GH 43665](https://github.com/pandas-dev/pandas/issues/43665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Rolling.win_type` returning `"freq"` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Rolling.is_datetimelike` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `level` keyword in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") aggregations; use `groupby` instead ([GH 39983](https://github.com/pandas-dev/pandas/issues/39983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Timedelta.delta()`, `Timedelta.is_populated()`, and `Timedelta.freq`
    ([GH 46430](https://github.com/pandas-dev/pandas/issues/46430), [GH 46476](https://github.com/pandas-dev/pandas/issues/46476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `NaT.freq` ([GH 45071](https://github.com/pandas-dev/pandas/issues/45071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.replace()`, use [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") instead ([GH 44929](https://github.com/pandas-dev/pandas/issues/44929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `numeric_only` keyword from `Categorical.min()` and `Categorical.max()`
    in favor of `skipna` ([GH 48821](https://github.com/pandas-dev/pandas/issues/48821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") and [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") with `numeric_only=None` to not exclude datetime-like
    columns THIS NOTE WILL BE IRRELEVANT ONCE `numeric_only=None` DEPRECATION IS ENFORCED
    ([GH 29941](https://github.com/pandas-dev/pandas/issues/29941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `is_extension_type()` in favor of `is_extension_array_dtype()` ([GH
    29457](https://github.com/pandas-dev/pandas/issues/29457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `.ExponentialMovingWindow.vol` ([GH 39220](https://github.com/pandas-dev/pandas/issues/39220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.get_value()` and `Index.set_value()` ([GH 33907](https://github.com/pandas-dev/pandas/issues/33907),
    [GH 28621](https://github.com/pandas-dev/pandas/issues/28621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.slice_shift()` and `DataFrame.slice_shift()` ([GH 37601](https://github.com/pandas-dev/pandas/issues/37601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `DataFrameGroupBy.pad()` and `DataFrameGroupBy.backfill()` ([GH 45076](https://github.com/pandas-dev/pandas/issues/45076))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `numpy` argument from [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 30636](https://github.com/pandas-dev/pandas/issues/30636))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing abbreviations for `orient` in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") ([GH 32516](https://github.com/pandas-dev/pandas/issues/32516))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow partial slicing on an non-monotonic [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with keys which are not in Index. This now raises a `KeyError`
    ([GH 18531](https://github.com/pandas-dev/pandas/issues/18531))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `get_offset` in favor of `to_offset()` ([GH 30340](https://github.com/pandas-dev/pandas/issues/30340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `warn` keyword in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") ([GH 45947](https://github.com/pandas-dev/pandas/issues/45947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `include_start` and `include_end` arguments in [`DataFrame.between_time()`](../reference/api/pandas.DataFrame.between_time.html#pandas.DataFrame.between_time
    "pandas.DataFrame.between_time") in favor of `inclusive` ([GH 43248](https://github.com/pandas-dev/pandas/issues/43248))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `closed` argument in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") and [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range") in favor of `inclusive` argument ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `center` keyword in [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") ([GH 20647](https://github.com/pandas-dev/pandas/issues/20647))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `truediv` keyword from [`eval()`](../reference/api/pandas.eval.html#pandas.eval
    "pandas.eval") ([GH 29812](https://github.com/pandas-dev/pandas/issues/29812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `method` and `tolerance` arguments in [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc"). Use `index.get_indexer([label], method=..., tolerance=...)`
    instead ([GH 42269](https://github.com/pandas-dev/pandas/issues/42269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `pandas.datetime` submodule ([GH 30489](https://github.com/pandas-dev/pandas/issues/30489))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `pandas.np` submodule ([GH 30296](https://github.com/pandas-dev/pandas/issues/30296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.util.testing` in favor of `pandas.testing` ([GH 30745](https://github.com/pandas-dev/pandas/issues/30745))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.str.__iter__()` ([GH 28277](https://github.com/pandas-dev/pandas/issues/28277))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.SparseArray` in favor of [`arrays.SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") ([GH 30642](https://github.com/pandas-dev/pandas/issues/30642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.SparseSeries` and `pandas.SparseDataFrame`, including pickle
    support. ([GH 30642](https://github.com/pandas-dev/pandas/issues/30642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing passing an integer `fill_value` to [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") and `Series.shift`()` with datetime64, timedelta64,
    or period dtypes ([GH 32591](https://github.com/pandas-dev/pandas/issues/32591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing a string column label into `times` in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") ([GH 43265](https://github.com/pandas-dev/pandas/issues/43265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing passing `True` and `False` into `inclusive` in [`Series.between()`](../reference/api/pandas.Series.between.html#pandas.Series.between
    "pandas.Series.between") in favor of `"both"` and `"neither"` respectively ([GH
    40628](https://github.com/pandas-dev/pandas/issues/40628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing using `usecols` with out of bounds indices for `read_csv`
    with `engine="c"` ([GH 25623](https://github.com/pandas-dev/pandas/issues/25623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing the use of `**kwargs` in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter"); use the keyword argument `engine_kwargs` instead ([GH 40430](https://github.com/pandas-dev/pandas/issues/40430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing a tuple of column labels into `DataFrameGroupBy.__getitem__()`
    ([GH 30546](https://github.com/pandas-dev/pandas/issues/30546))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing missing labels when indexing with a sequence of labels
    on a level of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). This now raises a `KeyError` ([GH 42351](https://github.com/pandas-dev/pandas/issues/42351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing setting values with `.loc` using a positional slice. Use
    `.loc` with labels or `.iloc` with positions instead ([GH 31840](https://github.com/pandas-dev/pandas/issues/31840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing positional indexing with a `float` key even if that key
    is a round number, manually cast to integer instead ([GH 34193](https://github.com/pandas-dev/pandas/issues/34193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing using a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") indexer with `.iloc`, use `.loc` instead for automatic alignment
    ([GH 39022](https://github.com/pandas-dev/pandas/issues/39022))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing `set` or `dict` indexers in `__getitem__` and `__setitem__`
    methods ([GH 42825](https://github.com/pandas-dev/pandas/issues/42825))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing indexing on a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") or positional indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") producing multi-dimensional objects e.g. `obj[:, None]`, convert
    to numpy before indexing instead ([GH 35141](https://github.com/pandas-dev/pandas/issues/35141))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing `dict` or `set` objects in `suffixes` in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") ([GH 34810](https://github.com/pandas-dev/pandas/issues/34810))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") to produce duplicated columns through the `suffixes` keyword and
    already existing columns ([GH 22818](https://github.com/pandas-dev/pandas/issues/22818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing using [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") or `join()` on a different number of levels ([GH 34862](https://github.com/pandas-dev/pandas/issues/34862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing `value_name` argument in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") to match an element in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") columns ([GH 35003](https://github.com/pandas-dev/pandas/issues/35003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing passing `showindex` into `**kwargs` in [`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") and [`Series.to_markdown()`](../reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown") in favor of `index` ([GH 33091](https://github.com/pandas-dev/pandas/issues/33091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed setting Categorical._codes directly ([GH 41429](https://github.com/pandas-dev/pandas/issues/41429))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed setting Categorical.categories directly ([GH 47834](https://github.com/pandas-dev/pandas/issues/47834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `inplace` from `Categorical.add_categories()`, `Categorical.remove_categories()`,
    `Categorical.set_categories()`, `Categorical.rename_categories()`, `Categorical.reorder_categories()`,
    `Categorical.set_ordered()`, `Categorical.as_ordered()`, `Categorical.as_unordered()`
    ([GH 37981](https://github.com/pandas-dev/pandas/issues/37981), [GH 41118](https://github.com/pandas-dev/pandas/issues/41118),
    [GH 41133](https://github.com/pandas-dev/pandas/issues/41133), [GH 47834](https://github.com/pandas-dev/pandas/issues/47834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced `Rolling.count()` with `min_periods=None` to default to the size of
    the window ([GH 31302](https://github.com/pandas-dev/pandas/issues/31302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Renamed `fname` to `path` in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet"), [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") and [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather") ([GH 30338](https://github.com/pandas-dev/pandas/issues/30338))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing indexing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a single item list with a slice (e.g. `ser[[slice(0, 2)]]`).
    Either convert the list to tuple, or pass the slice directly instead ([GH 31333](https://github.com/pandas-dev/pandas/issues/31333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior indexing on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") index using a string indexer, previously this operated
    as a slice on rows, now it operates like any other column key; use `frame.loc[key]`
    for the old behavior ([GH 36179](https://github.com/pandas-dev/pandas/issues/36179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced the `display.max_colwidth` option to not accept negative integers ([GH
    31569](https://github.com/pandas-dev/pandas/issues/31569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `display.column_space` option in favor of `df.to_string(col_space=...)`
    ([GH 47280](https://github.com/pandas-dev/pandas/issues/47280))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated method `mad` from pandas classes ([GH 11787](https://github.com/pandas-dev/pandas/issues/11787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated method `tshift` from pandas classes ([GH 11631](https://github.com/pandas-dev/pandas/issues/11631))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of empty data passed into [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"); the default dtype will be `object` instead of `float64` ([GH
    29405](https://github.com/pandas-dev/pandas/issues/29405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of `DatetimeIndex.union()`, `DatetimeIndex.intersection()`,
    and `DatetimeIndex.symmetric_difference()` with mismatched timezones to convert
    to UTC instead of casting to object dtype ([GH 39328](https://github.com/pandas-dev/pandas/issues/39328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with argument “now” with `utc=False` to match `Timestamp("now")`
    ([GH 18705](https://github.com/pandas-dev/pandas/issues/18705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of indexing on a timezone-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a timezone-naive `datetime` object or vice-versa;
    these now behave like any other non-comparable type by raising `KeyError` ([GH
    36148](https://github.com/pandas-dev/pandas/issues/36148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex"), [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), and [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with a `datetime64` dtype and a `datetime.date` object
    for `fill_value`; these are no longer considered equivalent to `datetime.datetime`
    objects so the reindex casts to object dtype ([GH 39767](https://github.com/pandas-dev/pandas/issues/39767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of `SparseArray.astype()` when given a dtype that is not explicitly
    `SparseDtype`, cast to the exact requested dtype rather than silently using a
    `SparseDtype` instead ([GH 34457](https://github.com/pandas-dev/pandas/issues/34457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index.ravel()`](../reference/api/pandas.Index.ravel.html#pandas.Index.ravel
    "pandas.Index.ravel") to return a view on the original [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") instead of a `np.ndarray` ([GH 36900](https://github.com/pandas-dev/pandas/issues/36900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.to_frame()`](../reference/api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame") and [`Index.to_frame()`](../reference/api/pandas.Index.to_frame.html#pandas.Index.to_frame
    "pandas.Index.to_frame") with explicit `name=None` to use `None` for the column
    name instead of the index’s name or default `0` ([GH 45523](https://github.com/pandas-dev/pandas/issues/45523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with one array of `bool`-dtype and another of integer dtype,
    this now returns `object` dtype instead of integer dtype; explicitly cast the
    bool object to integer before concatenating to get the old behavior ([GH 45101](https://github.com/pandas-dev/pandas/issues/45101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor given floating-point `data` and an integer `dtype`,
    when the data cannot be cast losslessly, the floating point dtype is retained,
    matching [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    behavior ([GH 41170](https://github.com/pandas-dev/pandas/issues/41170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor when given a `np.ndarray` with object-dtype containing
    numeric entries; this now retains object dtype rather than inferring a numeric
    dtype, consistent with [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 42870](https://github.com/pandas-dev/pandas/issues/42870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of `Index.__and__()`, `Index.__or__()` and `Index.__xor__()`
    to behave as logical operations (matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior) instead of aliases for set operations ([GH 37374](https://github.com/pandas-dev/pandas/issues/37374))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passed a list whose first element is a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical"), this now treats the elements as rows casting to `object`
    dtype, consistent with behavior for other types ([GH 38845](https://github.com/pandas-dev/pandas/issues/38845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passed a `dtype` (other than int) that the
    data cannot be cast to; it now raises instead of silently ignoring the dtype ([GH
    41733](https://github.com/pandas-dev/pandas/issues/41733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor, it will no longer infer a datetime64 or timedelta64
    dtype from string entries ([GH 41731](https://github.com/pandas-dev/pandas/issues/41731))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor with a `np.datetime64` object and a `tz` passed
    to interpret the input as a wall-time as opposed to a UTC time ([GH 42288](https://github.com/pandas-dev/pandas/issues/42288))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Timestamp.utcfromtimestamp()`](../reference/api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp") to return a timezone-aware object satisfying
    `Timestamp.utcfromtimestamp(val).timestamp() == val` ([GH 45083](https://github.com/pandas-dev/pandas/issues/45083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor when passed a `SparseArray` or `SparseDtype` to retain
    that dtype instead of casting to `numpy.ndarray` ([GH 43930](https://github.com/pandas-dev/pandas/issues/43930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of setitem-like operations (`__setitem__`, `fillna`, `where`,
    `mask`, `replace`, `insert`, fill_value for `shift`) on an object with [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") when using a value with a non-matching timezone, the
    value will be cast to the object’s timezone instead of casting both to object-dtype
    ([GH 44243](https://github.com/pandas-dev/pandas/issues/44243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors with floating-dtype data and a [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype"), the data are now interpreted as UTC-times instead of
    wall-times, consistent with how integer-dtype data are treated ([GH 45573](https://github.com/pandas-dev/pandas/issues/45573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors with integer dtype and floating-point data containing
    `NaN`, this now raises `IntCastingNaNError` ([GH 40110](https://github.com/pandas-dev/pandas/issues/40110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors with an integer `dtype` and values that are too
    large to losslessly cast to this dtype, this now raises `ValueError` ([GH 41734](https://github.com/pandas-dev/pandas/issues/41734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors with an integer `dtype` and values having either
    `datetime64` or `timedelta64` dtypes, this now raises `TypeError`, use `values.view("int64")`
    instead ([GH 41770](https://github.com/pandas-dev/pandas/issues/41770))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated `base` and `loffset` arguments from [`pandas.DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"), [`pandas.Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") and [`pandas.Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper"). Use `offset` or `origin` instead ([GH 31809](https://github.com/pandas-dev/pandas/issues/31809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `timedelta64[ns]` dtype and an incompatible `fill_value`;
    this now casts to `object` dtype instead of raising, consistent with the behavior
    with other dtypes ([GH 45746](https://github.com/pandas-dev/pandas/issues/45746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change the default argument of `regex` for [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") from `True` to `False`. Additionally, a single character
    `pat` with `regex=True` is now treated as a regular expression instead of a string
    literal. ([GH 36695](https://github.com/pandas-dev/pandas/issues/36695), [GH 24804](https://github.com/pandas-dev/pandas/issues/24804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") with `bool_only=True`; object-dtype columns with all-bool
    values will no longer be included, manually cast to `bool` dtype first ([GH 46188](https://github.com/pandas-dev/pandas/issues/46188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max"), [`DataFrame.min`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min"), [`DataFrame.mean`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean"), [`DataFrame.median`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median"), [`DataFrame.skew`](../reference/api/pandas.DataFrame.skew.html#pandas.DataFrame.skew
    "pandas.DataFrame.skew"), [`DataFrame.kurt`](../reference/api/pandas.DataFrame.kurt.html#pandas.DataFrame.kurt
    "pandas.DataFrame.kurt") with `axis=None` to return a scalar applying the aggregation
    across both axes ([GH 45072](https://github.com/pandas-dev/pandas/issues/45072))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of comparison of a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with a `datetime.date` object; these now compare as un-equal
    and raise on inequality comparisons, matching the `datetime.datetime` behavior
    ([GH 36131](https://github.com/pandas-dev/pandas/issues/36131))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of comparison of `NaT` with a `datetime.date` object; these
    now raise on inequality comparisons ([GH 39196](https://github.com/pandas-dev/pandas/issues/39196))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation of silently dropping columns that raised a `TypeError`
    in [`Series.transform`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") and [`DataFrame.transform`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") when used with a list or dictionary ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") with list-like so that any partial failure will raise
    an error ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behaviour of [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") to now use the Styler implementation via [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") ([GH 47970](https://github.com/pandas-dev/pandas/issues/47970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of `Series.__setitem__()` with an integer key and a `Float64Index`
    when the key is not present in the index; previously we treated the key as positional
    (behaving like `series.iloc[key] = val`), now we treat it is a label (behaving
    like `series.loc[key] = val`), consistent with `Series.__getitem__`()` behavior
    ([GH 33469](https://github.com/pandas-dev/pandas/issues/33469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `na_sentinel` argument from [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize"), [`Index.factorize()`](../reference/api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize"), and [`ExtensionArray.factorize()`](../reference/api/pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize") ([GH 47157](https://github.com/pandas-dev/pandas/issues/47157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.diff()`](../reference/api/pandas.Series.diff.html#pandas.Series.diff
    "pandas.Series.diff") and [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") with `ExtensionDtype` dtypes whose arrays do not implement
    `diff`, these now raise `TypeError` rather than casting to numpy ([GH 31025](https://github.com/pandas-dev/pandas/issues/31025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation of calling numpy “ufunc”s on [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `method="outer"`; this now raises `NotImplementedError`
    ([GH 36955](https://github.com/pandas-dev/pandas/issues/36955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing passing `numeric_only=True` to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") reductions (`rank`, `any`, `all`, …) with non-numeric dtype ([GH
    47500](https://github.com/pandas-dev/pandas/issues/47500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") so that `group_keys` is respected even
    if a transformer is detected ([GH 34998](https://github.com/pandas-dev/pandas/issues/34998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparisons between a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where the frame’s columns do not match the series’s index raise
    `ValueError` instead of automatically aligning, do `left, right = left.align(right,
    axis=1, copy=False)` before comparing ([GH 36795](https://github.com/pandas-dev/pandas/issues/36795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation `numeric_only=None` (the default) in DataFrame reductions
    that would silently drop columns that raised; `numeric_only` now defaults to `False`
    ([GH 41480](https://github.com/pandas-dev/pandas/issues/41480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed default of `numeric_only` to `False` in all DataFrame methods with that
    argument ([GH 46096](https://github.com/pandas-dev/pandas/issues/46096), [GH 46906](https://github.com/pandas-dev/pandas/issues/46906))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed default of `numeric_only` to `False` in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") ([GH 47561](https://github.com/pandas-dev/pandas/issues/47561))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation of silently dropping nuisance columns in groupby and resample
    operations when `numeric_only=False` ([GH 41475](https://github.com/pandas-dev/pandas/issues/41475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation of silently dropping nuisance columns in `Rolling`, `Expanding`,
    and `ExponentialMovingWindow` ops. This will now raise a [`errors.DataError`](../reference/api/pandas.errors.DataError.html#pandas.errors.DataError
    "pandas.errors.DataError") ([GH 42834](https://github.com/pandas-dev/pandas/issues/42834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior in setting values with `df.loc[:, foo] = bar` or `df.iloc[:,
    foo] = bar`, these now always attempt to set values inplace before falling back
    to casting ([GH 45333](https://github.com/pandas-dev/pandas/issues/45333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed default of `numeric_only` in various `DataFrameGroupBy` methods; all
    methods now default to `numeric_only=False` ([GH 46072](https://github.com/pandas-dev/pandas/issues/46072))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed default of `numeric_only` to `False` in `Resampler` methods ([GH 47177](https://github.com/pandas-dev/pandas/issues/47177))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the method [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") with a callable that returns
    DataFrames will align to the input’s index ([GH 47244](https://github.com/pandas-dev/pandas/issues/47244))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When providing a list of columns of length one to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"), the keys that are returned by iterating over the
    resulting `DataFrameGroupBy` object will now be tuples of length one ([GH 47761](https://github.com/pandas-dev/pandas/issues/47761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated methods `ExcelWriter.write_cells()`, `ExcelWriter.save()`,
    `ExcelWriter.cur_sheet()`, `ExcelWriter.handles()`, `ExcelWriter.path()` ([GH
    45795](https://github.com/pandas-dev/pandas/issues/45795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") attribute `book` can no longer be set; it is still available
    to be accessed and mutated ([GH 48943](https://github.com/pandas-dev/pandas/issues/48943))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed unused `*args` and `**kwargs` in `Rolling`, `Expanding`, and `ExponentialMovingWindow`
    ops ([GH 47851](https://github.com/pandas-dev/pandas/issues/47851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated argument `line_terminator` from [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") ([GH 45302](https://github.com/pandas-dev/pandas/issues/45302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated argument `label` from [`lreshape()`](../reference/api/pandas.lreshape.html#pandas.lreshape
    "pandas.lreshape") ([GH 30219](https://github.com/pandas-dev/pandas/issues/30219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arguments after `expr` in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") and [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") are keyword-only ([GH 47587](https://github.com/pandas-dev/pandas/issues/47587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index._get_attributes_dict()` ([GH 50648](https://github.com/pandas-dev/pandas/issues/50648))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.__array_wrap__()` ([GH 50648](https://github.com/pandas-dev/pandas/issues/50648))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Changed behavior of [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts") to return a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for any list-like(one element or not) but an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") for a single label ([GH 50829](https://github.com/pandas-dev/pandas/issues/50829))  ##
    Performance improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.median()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median") and [`SeriesGroupBy.median()`](../reference/api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median") and [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod") for nullable dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all"), and [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any") for object dtype ([GH 50623](https://github.com/pandas-dev/pandas/issues/50623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.argsort()` and `MultiIndex.sort_values()`
    ([GH 48406](https://github.com/pandas-dev/pandas/issues/48406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.size()` ([GH 48723](https://github.com/pandas-dev/pandas/issues/48723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.union()` without missing values and without
    duplicates ([GH 48505](https://github.com/pandas-dev/pandas/issues/48505), [GH
    48752](https://github.com/pandas-dev/pandas/issues/48752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.difference()` ([GH 48606](https://github.com/pandas-dev/pandas/issues/48606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") set operations with sort=None ([GH 49010](https://github.com/pandas-dev/pandas/issues/49010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var"), and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var") for extension array dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.isin()` when `level=None` ([GH 48622](https://github.com/pandas-dev/pandas/issues/48622),
    [GH 49577](https://github.com/pandas-dev/pandas/issues/49577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.putmask()` ([GH 49830](https://github.com/pandas-dev/pandas/issues/49830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") and `MultiIndex.union()` when index contains duplicates
    ([GH 48900](https://github.com/pandas-dev/pandas/issues/48900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") for pyarrow-backed dtypes ([GH 50264](https://github.com/pandas-dev/pandas/issues/50264))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") for pyarrow-backed dtypes ([GH 50447](https://github.com/pandas-dev/pandas/issues/50447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") for extension array dtypes ([GH 49722](https://github.com/pandas-dev/pandas/issues/49722),
    [GH 50078](https://github.com/pandas-dev/pandas/issues/50078))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join"), [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") and [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") for masked and arrow dtypes when [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is monotonic ([GH 50310](https://github.com/pandas-dev/pandas/issues/50310),
    [GH 51365](https://github.com/pandas-dev/pandas/issues/51365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") with nullable dtype ([GH 48338](https://github.com/pandas-dev/pandas/issues/48338))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor passing integer numpy array with nullable dtype ([GH
    48338](https://github.com/pandas-dev/pandas/issues/48338))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor passing a list ([GH 48609](https://github.com/pandas-dev/pandas/issues/48609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when joining on a sorted [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 48504](https://github.com/pandas-dev/pandas/issues/48504))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when parsing strings with timezone offsets ([GH 50107](https://github.com/pandas-dev/pandas/issues/50107))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") for tuple-based indexing of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 48384](https://github.com/pandas-dev/pandas/issues/48384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with categorical dtype ([GH 49404](https://github.com/pandas-dev/pandas/issues/49404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for `MultiIndex.unique()` ([GH 48335](https://github.com/pandas-dev/pandas/issues/48335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for indexing operations with nullable and arrow dtypes
    ([GH 49420](https://github.com/pandas-dev/pandas/issues/49420), [GH 51316](https://github.com/pandas-dev/pandas/issues/51316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with extension array backed indexes ([GH 49128](https://github.com/pandas-dev/pandas/issues/49128),
    [GH 49178](https://github.com/pandas-dev/pandas/issues/49178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") ([GH 51054](https://github.com/pandas-dev/pandas/issues/51054))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduce memory usage of [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")/[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") when using BZ2 or LZMA ([GH 49068](https://github.com/pandas-dev/pandas/issues/49068))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") constructor passing a numpy array with type `np.str_`
    ([GH 49109](https://github.com/pandas-dev/pandas/issues/49109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`from_tuples()`](../reference/api/pandas.arrays.IntervalArray.from_tuples.html#pandas.arrays.IntervalArray.from_tuples
    "pandas.arrays.IntervalArray.from_tuples") ([GH 50620](https://github.com/pandas-dev/pandas/issues/50620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `factorize()` ([GH 49177](https://github.com/pandas-dev/pandas/issues/49177))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `__setitem__()` ([GH 50248](https://github.com/pandas-dev/pandas/issues/50248),
    [GH 50632](https://github.com/pandas-dev/pandas/issues/50632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") comparison methods when array contains NA
    ([GH 50524](https://github.com/pandas-dev/pandas/issues/50524))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `to_numpy()` ([GH 49973](https://github.com/pandas-dev/pandas/issues/49973),
    [GH 51227](https://github.com/pandas-dev/pandas/issues/51227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when parsing strings to [`BooleanDtype`](../reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") ([GH 50613](https://github.com/pandas-dev/pandas/issues/50613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when joining on a subset of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 48611](https://github.com/pandas-dev/pandas/issues/48611))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for `MultiIndex.intersection()` ([GH 48604](https://github.com/pandas-dev/pandas/issues/48604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DataFrame.__setitem__()` ([GH 46267](https://github.com/pandas-dev/pandas/issues/46267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `var` and `std` for nullable dtypes ([GH 48379](https://github.com/pandas-dev/pandas/issues/48379)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when iterating over pyarrow and nullable dtypes ([GH
    49825](https://github.com/pandas-dev/pandas/issues/49825), [GH 49851](https://github.com/pandas-dev/pandas/issues/49851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements to [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") ([GH 47403](https://github.com/pandas-dev/pandas/issues/47403),
    [GH 47405](https://github.com/pandas-dev/pandas/issues/47405), [GH 47656](https://github.com/pandas-dev/pandas/issues/47656),
    [GH 48502](https://github.com/pandas-dev/pandas/issues/48502))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Memory improvement in `RangeIndex.sort_values()` ([GH 48801](https://github.com/pandas-dev/pandas/issues/48801))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") if `copy=True` by avoiding copying twice ([GH 24345](https://github.com/pandas-dev/pandas/issues/24345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 21055](https://github.com/pandas-dev/pandas/issues/21055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DataFrameGroupBy` and `SeriesGroupBy` when `by`
    is a categorical type and `sort=False` ([GH 48976](https://github.com/pandas-dev/pandas/issues/48976))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DataFrameGroupBy` and `SeriesGroupBy` when `by`
    is a categorical type and `observed=False` ([GH 49596](https://github.com/pandas-dev/pandas/issues/49596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") with parameter `index_col` set to `None` (the default). Now
    the index will be a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of `Int64Index` ([GH 49745](https://github.com/pandas-dev/pandas/issues/49745))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") when not merging on the index - the new index will now be [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of `Int64Index` ([GH 49478](https://github.com/pandas-dev/pandas/issues/49478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") and [`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") when using any non-object dtypes ([GH 46470](https://github.com/pandas-dev/pandas/issues/46470))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") when there are multiple tables ([GH 49929](https://github.com/pandas-dev/pandas/issues/49929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") constructor when constructing from a string or integer ([GH 38312](https://github.com/pandas-dev/pandas/issues/38312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when using `'%Y%m%d'` format ([GH 17410](https://github.com/pandas-dev/pandas/issues/17410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when format is given or can be inferred ([GH 50465](https://github.com/pandas-dev/pandas/issues/50465))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.median()`](../reference/api/pandas.Series.median.html#pandas.Series.median
    "pandas.Series.median") for nullable dtypes ([GH 50838](https://github.com/pandas-dev/pandas/issues/50838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when passing [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") lambda-function to `date_parser` and inputs have mixed timezone
    offsetes ([GH 35296](https://github.com/pandas-dev/pandas/issues/35296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`isna()`](../reference/api/pandas.isna.html#pandas.isna
    "pandas.isna") and [`isnull()`](../reference/api/pandas.isnull.html#pandas.isnull
    "pandas.isnull") ([GH 50658](https://github.com/pandas-dev/pandas/issues/50658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") with categorical dtype ([GH
    46202](https://github.com/pandas-dev/pandas/issues/46202))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a reference leak in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") ([GH 37441](https://github.com/pandas-dev/pandas/issues/37441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a memory leak in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") and [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") when serializing datetimes and timedeltas ([GH 40443](https://github.com/pandas-dev/pandas/issues/40443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decreased memory usage in many `DataFrameGroupBy` methods ([GH 51090](https://github.com/pandas-dev/pandas/issues/51090))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.round()`](../reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round
    "pandas.DataFrame.round") for an integer `decimal` parameter ([GH 17254](https://github.com/pandas-dev/pandas/issues/17254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") when using a large dict for `to_replace` ([GH 6697](https://github.com/pandas-dev/pandas/issues/6697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Memory improvement in `StataReader` when reading seekable files ([GH 48922](https://github.com/pandas-dev/pandas/issues/48922))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Categorical.set_categories()` losing dtype information ([GH 48812](https://github.com/pandas-dev/pandas/issues/48812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with categorical dtype when `to_replace` values overlap
    with new values ([GH 49404](https://github.com/pandas-dev/pandas/issues/49404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with categorical dtype losing nullable dtypes of underlying
    categories ([GH 49404](https://github.com/pandas-dev/pandas/issues/49404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") would reorder categories when used as a grouper ([GH
    48749](https://github.com/pandas-dev/pandas/issues/48749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor when constructing from a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") object and `dtype="category"` losing ordered-ness ([GH 49309](https://github.com/pandas-dev/pandas/issues/49309))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max"), [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), and [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") with unordered [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") with no groups failing to raise `TypeError` ([GH 51034](https://github.com/pandas-dev/pandas/issues/51034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq"), raising `TypeError` when inferred on [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 47084](https://github.com/pandas-dev/pandas/issues/47084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") incorrectly raising `OverflowError` with string arguments
    corresponding to large integers ([GH 50533](https://github.com/pandas-dev/pandas/issues/50533))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising on invalid offsets with `errors='coerce'` and
    `infer_datetime_format=True` ([GH 48633](https://github.com/pandas-dev/pandas/issues/48633))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor failing to raise when `tz=None` is explicitly
    specified in conjunction with timezone-aware `dtype` or data ([GH 48659](https://github.com/pandas-dev/pandas/issues/48659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting a `datetime` scalar from [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") failing to retain the original `freq` attribute ([GH 48818](https://github.com/pandas-dev/pandas/issues/48818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.tseries.holiday.Holiday` where a half-open date interval causes
    inconsistent return types from `USFederalHolidayCalendar.holidays()` ([GH 49075](https://github.com/pandas-dev/pandas/issues/49075))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with timezone-aware dtypes with `dateutil` or `zoneinfo` timezones
    near daylight-savings transitions ([GH 49684](https://github.com/pandas-dev/pandas/issues/49684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), `datetime.datetime`, `datetime.date`, or `np.datetime64`
    objects when non-ISO8601 `format` was passed ([GH 49298](https://github.com/pandas-dev/pandas/issues/49298),
    [GH 50036](https://github.com/pandas-dev/pandas/issues/50036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing empty string and non-ISO8601
    format was passed. Now, empty strings will be parsed as [`NaT`](../reference/api/pandas.NaT.html#pandas.NaT
    "pandas.NaT"), for compatibility with how is done for ISO8601 formats ([GH 50251](https://github.com/pandas-dev/pandas/issues/50251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") was showing `UserWarning`, which was not actionable by users,
    when parsing non-ISO8601 delimited date strings ([GH 50232](https://github.com/pandas-dev/pandas/issues/50232))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was showing misleading `ValueError` when parsing dates with
    format containing ISO week directive and ISO weekday directive ([GH 50308](https://github.com/pandas-dev/pandas/issues/50308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round") when the `freq` argument has zero-duration (e.g. “0ns”)
    returning incorrect results instead of raising ([GH 49737](https://github.com/pandas-dev/pandas/issues/49737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not raising `ValueError` when invalid format was passed
    and `errors` was `'ignore'` or `'coerce'` ([GH 50266](https://github.com/pandas-dev/pandas/issues/50266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` was throwing `TypeError` when constructing with milliseconds
    and another super-daily argument ([GH 49897](https://github.com/pandas-dev/pandas/issues/49897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not raising `ValueError` when parsing string with decimal
    date with format `'%Y%m%d'` ([GH 50051](https://github.com/pandas-dev/pandas/issues/50051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not converting `None` to `NaT` when parsing mixed-offset
    date strings with ISO8601 format ([GH 50071](https://github.com/pandas-dev/pandas/issues/50071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not returning input when parsing out-of-bounds date
    string with `errors='ignore'` and `format='%Y%m%d'` ([GH 14487](https://github.com/pandas-dev/pandas/issues/14487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was converting timezone-naive `datetime.datetime` to timezone-aware
    when parsing with timezone-aware strings, ISO8601 format, and `utc=False` ([GH
    50254](https://github.com/pandas-dev/pandas/issues/50254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was throwing `ValueError` when parsing dates with ISO8601
    format where some values were not zero-padded ([GH 21422](https://github.com/pandas-dev/pandas/issues/21422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was giving incorrect results when using `format='%Y%m%d'`
    and `errors='ignore'` ([GH 26493](https://github.com/pandas-dev/pandas/issues/26493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was failing to parse date strings `'today'` and `'now'`
    if `format` was not ISO8601 ([GH 50359](https://github.com/pandas-dev/pandas/issues/50359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.utctimetuple()`](../reference/api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple") raising a `TypeError` ([GH 32174](https://github.com/pandas-dev/pandas/issues/32174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing mixed-offset [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with `errors='ignore'` ([GH 50585](https://github.com/pandas-dev/pandas/issues/50585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was incorrectly handling floating-point inputs within 1
    `unit` of the overflow boundaries ([GH 50183](https://github.com/pandas-dev/pandas/issues/50183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with unit of “Y” or “M” giving incorrect results, not matching
    pointwise [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") results ([GH 50870](https://github.com/pandas-dev/pandas/issues/50870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with datetime or timedelta dtypes incorrectly
    raising `ValueError` ([GH 11312](https://github.com/pandas-dev/pandas/issues/11312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not returning input with `errors='ignore'` when input
    was out-of-bounds ([GH 50587](https://github.com/pandas-dev/pandas/issues/50587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records") when given a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") input with timezone-aware datetime64 columns incorrectly dropping
    the timezone-awareness ([GH 51162](https://github.com/pandas-dev/pandas/issues/51162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `decimal.InvalidOperation` when parsing date
    strings with `errors='coerce'` ([GH 51084](https://github.com/pandas-dev/pandas/issues/51084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with both `unit` and `origin` specified returning incorrect
    results ([GH 42624](https://github.com/pandas-dev/pandas/issues/42624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when converting an object-dtype object containing timezone-aware
    datetimes or strings to `datetime64[ns]` incorrectly localizing as UTC instead
    of raising `TypeError` ([GH 50140](https://github.com/pandas-dev/pandas/issues/50140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") with datetime or timedelta dtypes
    giving incorrect results for groups containing `NaT` ([GH 51373](https://github.com/pandas-dev/pandas/issues/51373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") incorrectly raising with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 51373](https://github.com/pandas-dev/pandas/issues/51373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") raising error when input has nullable dtype `Float64` ([GH
    48796](https://github.com/pandas-dev/pandas/issues/48796))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") constructor incorrectly raising instead of returning `NaT`
    when given a `np.timedelta64("nat")` ([GH 48898](https://github.com/pandas-dev/pandas/issues/48898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") constructor failing to raise when passed both a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object and keywords (e.g. days, seconds) ([GH 48898](https://github.com/pandas-dev/pandas/issues/48898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") comparisons with very large `datetime.timedelta` objects incorrect
    raising `OutOfBoundsTimedelta` ([GH 49021](https://github.com/pandas-dev/pandas/issues/49021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with object-dtype containing multiple timezone-aware
    `datetime` objects with heterogeneous timezones to a [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") incorrectly raising ([GH 32581](https://github.com/pandas-dev/pandas/issues/32581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was failing to parse date strings with timezone name when
    `format` was specified with `%Z` ([GH 49748](https://github.com/pandas-dev/pandas/issues/49748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better error message when passing invalid values to `ambiguous` parameter in
    [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") ([GH 49565](https://github.com/pandas-dev/pandas/issues/49565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in string parsing incorrectly allowing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to be constructed with an invalid timezone, which would raise
    when trying to print ([GH 50668](https://github.com/pandas-dev/pandas/issues/50668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corrected TypeError message in `objects_to_datetime64ns()` to inform that DatetimeIndex
    has mixed timezones ([GH 50974](https://github.com/pandas-dev/pandas/issues/50974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.add()`](../reference/api/pandas.DataFrame.add.html#pandas.DataFrame.add
    "pandas.DataFrame.add") cannot apply ufunc when inputs contain mixed DataFrame
    type and Series type ([GH 39853](https://github.com/pandas-dev/pandas/issues/39853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") not propagating mask when combining masked dtypes and numpy dtypes
    ([GH 45810](https://github.com/pandas-dev/pandas/issues/45810), [GH 42630](https://github.com/pandas-dev/pandas/issues/42630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sem()`](../reference/api/pandas.DataFrame.sem.html#pandas.DataFrame.sem
    "pandas.DataFrame.sem") and [`Series.sem()`](../reference/api/pandas.Series.sem.html#pandas.Series.sem
    "pandas.Series.sem") where an erroneous `TypeError` would always raise when using
    data backed by an [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") ([GH 49759](https://github.com/pandas-dev/pandas/issues/49759))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__add__()` casting to object for list and masked [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 22962](https://github.com/pandas-dev/pandas/issues/22962))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `mode()` where `dropna=False` was not respected when there was `NA` values
    ([GH 50982](https://github.com/pandas-dev/pandas/issues/50982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") with `engine="numexpr"` and column names are `min` or
    `max` would raise a `TypeError` ([GH 50937](https://github.com/pandas-dev/pandas/issues/50937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") with tz-aware data containing `pd.NaT` and `axis=1` would
    return incorrect results ([GH 51242](https://github.com/pandas-dev/pandas/issues/51242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `int64` dtype from a string list raising instead of casting
    ([GH 44923](https://github.com/pandas-dev/pandas/issues/44923))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with masked dtype and boolean values with `NA` raising ([GH 42137](https://github.com/pandas-dev/pandas/issues/42137))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") incorrectly raising an `AttributeError` when there are
    negative values in function call ([GH 46471](https://github.com/pandas-dev/pandas/issues/46471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") not converting dtype to nullable dtype when [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") contains `NA` and has dtype `object` ([GH 48791](https://github.com/pandas-dev/pandas/issues/48791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where any `ExtensionDtype` subclass with `kind="M"` would be interpreted
    as a timezone type ([GH 34986](https://github.com/pandas-dev/pandas/issues/34986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") that would raise `NotImplementedError` when
    passed a sequence of strings or binary ([GH 49172](https://github.com/pandas-dev/pandas/issues/49172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") raising `pyarrow.ArrowInvalid` when converting from a
    non-pyarrow string dtype to a pyarrow numeric type ([GH 50430](https://github.com/pandas-dev/pandas/issues/50430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") modifying input array inplace when converting to `string`
    and `copy=False` ([GH 51073](https://github.com/pandas-dev/pandas/issues/51073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") converting to NumPy array before applying `na_value`
    ([GH 48951](https://github.com/pandas-dev/pandas/issues/48951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not copying data when converting to pyarrow dtype ([GH
    50984](https://github.com/pandas-dev/pandas/issues/50984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not respecting `exact` argument when `format` was an
    ISO8601 format ([GH 12649](https://github.com/pandas-dev/pandas/issues/12649))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaArray.astype()` raising `TypeError` when converting to a pyarrow
    duration type ([GH 49795](https://github.com/pandas-dev/pandas/issues/49795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") and [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") raising for extension array dtypes ([GH 29618](https://github.com/pandas-dev/pandas/issues/29618),
    [GH 50261](https://github.com/pandas-dev/pandas/issues/50261), [GH 31913](https://github.com/pandas-dev/pandas/issues/31913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series()`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    not copying data when created from [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and `dtype` is equal to `dtype` from [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 52008](https://github.com/pandas-dev/pandas/issues/52008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") that would not return `True` for [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") or [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string()` ([GH 15585](https://github.com/pandas-dev/pandas/issues/15585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in converting string dtypes to “datetime64[ns]” or “timedelta64[ns]” incorrectly
    raising `TypeError` ([GH 36153](https://github.com/pandas-dev/pandas/issues/36153))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values in a string-dtype column with an array, mutating the array
    as side effect when it contains missing values ([GH 51299](https://github.com/pandas-dev/pandas/issues/51299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.is_overlapping()`](../reference/api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") incorrect output if interval has duplicate
    left boundaries ([GH 49581](https://github.com/pandas-dev/pandas/issues/49581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") failing to infer [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") for an object series of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects ([GH 50090](https://github.com/pandas-dev/pandas/issues/50090))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") and invalid null `fill_value` failing to raise `TypeError`
    ([GH 51258](https://github.com/pandas-dev/pandas/issues/51258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising when indexer is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `boolean` dtype ([GH 47125](https://github.com/pandas-dev/pandas/issues/47125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") filling with wrong values when indexing columns and
    index for `uint` dtypes ([GH 48184](https://github.com/pandas-dev/pandas/issues/48184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with different dtypes coercing values to single dtype ([GH
    50467](https://github.com/pandas-dev/pandas/issues/50467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") where `None` was not returned when `by` is empty
    list and `inplace=True` ([GH 50643](https://github.com/pandas-dev/pandas/issues/50643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") coercing dtypes when setting values with a list indexer
    ([GH 49159](https://github.com/pandas-dev/pandas/issues/49159))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising error for out of bounds end of slice indexer ([GH
    50161](https://github.com/pandas-dev/pandas/issues/50161))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `ValueError` with all `False` `bool` indexer and
    empty object ([GH 51450](https://github.com/pandas-dev/pandas/issues/51450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `ValueError` with `bool` indexer and [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47687](https://github.com/pandas-dev/pandas/issues/47687))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `IndexError` when setting values for a pyarrow-backed
    column with a non-scalar indexer ([GH 50085](https://github.com/pandas-dev/pandas/issues/50085))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()`, `Series.__getitem__()`, `DataFrame.__setitem__()`
    and `Series.__setitem__()` when indexing on indexes with extension float dtypes
    (`Float64` & `Float64`) or complex dtypes using integers ([GH 51053](https://github.com/pandas-dev/pandas/issues/51053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") modifying object when setting incompatible value with
    an empty indexer ([GH 45981](https://github.com/pandas-dev/pandas/issues/45981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising `ValueError` when right hand side is
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns ([GH 49121](https://github.com/pandas-dev/pandas/issues/49121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") casting dtype to `object` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has single extension array column when re-indexing `columns`
    and `index` ([GH 48190](https://github.com/pandas-dev/pandas/issues/48190))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") raising `IndexError` when indexer is a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with numeric extension array dtype ([GH 49521](https://github.com/pandas-dev/pandas/issues/49521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") when formatting percentiles in the resulting index
    showed more decimals than needed ([GH 46362](https://github.com/pandas-dev/pandas/issues/46362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") does not recognize differences when comparing `NA`
    with value in nullable dtypes ([GH 48939](https://github.com/pandas-dev/pandas/issues/48939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") losing extension array dtypes ([GH 21055](https://github.com/pandas-dev/pandas/issues/21055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.isetitem()` coercing extension array dtypes in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to object ([GH 49922](https://github.com/pandas-dev/pandas/issues/49922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` returning corrupt object when selecting from an
    empty pyarrow backed object ([GH 51734](https://github.com/pandas-dev/pandas/issues/51734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `BusinessHour` would cause creation of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") to fail when no opening hour was included in the index
    ([GH 49835](https://github.com/pandas-dev/pandas/issues/49835))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index.equals()`](../reference/api/pandas.Index.equals.html#pandas.Index.equals
    "pandas.Index.equals") raising `TypeError` when [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") consists of tuples that contain `NA` ([GH 48446](https://github.com/pandas-dev/pandas/issues/48446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") caused incorrect result when data has NaNs and defaultdict
    mapping was used ([GH 48813](https://github.com/pandas-dev/pandas/issues/48813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA") raising
    a `TypeError` instead of return [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") when performing a binary operation with a `bytes` object ([GH 49108](https://github.com/pandas-dev/pandas/issues/49108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") with `overwrite=False` raising `TypeError` when `self`
    has column with `NaT` values and column not present in `other` ([GH 16713](https://github.com/pandas-dev/pandas/issues/16713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `RecursionError` when replacing value in object-dtype
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    containing `NA` ([GH 47480](https://github.com/pandas-dev/pandas/issues/47480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `RecursionError` when replacing value in numeric
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `NA` ([GH 50758](https://github.com/pandas-dev/pandas/issues/50758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") not matching `NaN` values ([GH 29252](https://github.com/pandas-dev/pandas/issues/29252),
    [GH 37222](https://github.com/pandas-dev/pandas/issues/37222), [GH 38623](https://github.com/pandas-dev/pandas/issues/38623),
    [GH 42883](https://github.com/pandas-dev/pandas/issues/42883), [GH 43222](https://github.com/pandas-dev/pandas/issues/43222),
    [GH 46173](https://github.com/pandas-dev/pandas/issues/46173), [GH 48905](https://github.com/pandas-dev/pandas/issues/48905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.argsort()` raising `TypeError` when index contains [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") ([GH 48495](https://github.com/pandas-dev/pandas/issues/48495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.difference()` losing extension array dtype ([GH 48606](https://github.com/pandas-dev/pandas/issues/48606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.set_levels`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") raising `IndexError` when setting empty level
    ([GH 48636](https://github.com/pandas-dev/pandas/issues/48636))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` losing extension array dtype ([GH 48335](https://github.com/pandas-dev/pandas/issues/48335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` losing extension array ([GH 48604](https://github.com/pandas-dev/pandas/issues/48604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` losing extension array ([GH 48498](https://github.com/pandas-dev/pandas/issues/48498),
    [GH 48505](https://github.com/pandas-dev/pandas/issues/48505), [GH 48900](https://github.com/pandas-dev/pandas/issues/48900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` not sorting when sort=None and index contains missing
    values ([GH 49010](https://github.com/pandas-dev/pandas/issues/49010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.append()`](../reference/api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append") not checking names for equality ([GH 48288](https://github.com/pandas-dev/pandas/issues/48288))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.symmetric_difference()` losing extension array ([GH 48607](https://github.com/pandas-dev/pandas/issues/48607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.join()` losing dtypes when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") has duplicates ([GH 49830](https://github.com/pandas-dev/pandas/issues/49830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.putmask()` losing extension array ([GH 49830](https://github.com/pandas-dev/pandas/issues/49830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.value_counts()` returning a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") indexed by flat index of tuples instead of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 49558](https://github.com/pandas-dev/pandas/issues/49558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") caused fragmentation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and raised [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") ([GH 48595](https://github.com/pandas-dev/pandas/issues/48595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") by including the offending sheet name when an exception is
    raised while reading a file ([GH 48706](https://github.com/pandas-dev/pandas/issues/48706))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when a pickling a subset PyArrow-backed data that would serialize the entire
    data instead of the subset ([GH 42600](https://github.com/pandas-dev/pandas/issues/42600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") ignoring `dtype` argument when `chunksize` is specified
    and result is empty ([GH 50245](https://github.com/pandas-dev/pandas/issues/50245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") for a single-line csv with fewer columns than `names` raised
    [`errors.ParserError`](../reference/api/pandas.errors.ParserError.html#pandas.errors.ParserError
    "pandas.errors.ParserError") with `engine="c"` ([GH 47566](https://github.com/pandas-dev/pandas/issues/47566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") raising with `orient="table"` and `NA` value ([GH 40255](https://github.com/pandas-dev/pandas/issues/40255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in displaying `string` dtypes not showing storage option ([GH 50099](https://github.com/pandas-dev/pandas/issues/50099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") with `header=False` that printed the index name
    on the same line as the first row of the data ([GH 49230](https://github.com/pandas-dev/pandas/issues/49230))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") ignoring float formatter for extension arrays ([GH
    39336](https://github.com/pandas-dev/pandas/issues/39336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed memory leak which stemmed from the initialization of the internal JSON
    module ([GH 49222](https://github.com/pandas-dev/pandas/issues/49222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed issue where [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") would incorrectly remove leading characters from column
    names that matched the `sep` argument ([GH 49861](https://github.com/pandas-dev/pandas/issues/49861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") unnecessarily overflowing for extension array dtype when containing
    `NA` ([GH 32134](https://github.com/pandas-dev/pandas/issues/32134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") not converting `NA` to `None` ([GH 50795](https://github.com/pandas-dev/pandas/issues/50795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where it would segfault when failing to encode a string
    ([GH 50307](https://github.com/pandas-dev/pandas/issues/50307))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") with `na_rep` set when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") contains non-scalar data ([GH 47103](https://github.com/pandas-dev/pandas/issues/47103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") where file-like objects failed when iterparse is used ([GH
    50641](https://github.com/pandas-dev/pandas/issues/50641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `engine="pyarrow"` where `encoding` parameter was not
    handled correctly ([GH 51302](https://github.com/pandas-dev/pandas/issues/51302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") ignored repeated elements when iterparse is used ([GH 51183](https://github.com/pandas-dev/pandas/issues/51183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") leaving file handles open if an exception occurred during
    instantiation ([GH 51443](https://github.com/pandas-dev/pandas/issues/51443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where non-string index or columns were raising
    a `ValueError` when `engine="pyarrow"` ([GH 52036](https://github.com/pandas-dev/pandas/issues/52036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Period.strftime()`](../reference/api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime"), raising `UnicodeDecodeError` when a locale-specific
    directive was passed ([GH 46319](https://github.com/pandas-dev/pandas/issues/46319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") object to an array of `DateOffset` objects incorrectly raising
    `TypeError` ([GH 50162](https://github.com/pandas-dev/pandas/issues/50162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    where passing a string with finer resolution than nanosecond would result in a
    `KeyError` instead of dropping the extra precision ([GH 50417](https://github.com/pandas-dev/pandas/issues/50417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing strings representing Week-periods e.g. “2017-01-23/2017-01-29”
    as minute-frequency instead of week-frequency ([GH 50803](https://github.com/pandas-dev/pandas/issues/50803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), `DataFrameGroupByGroupBy.cumsum()`,
    `DataFrameGroupByGroupBy.prod()`, `DataFrameGroupByGroupBy.cumprod()` with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") failing to raise `TypeError` ([GH 51040](https://github.com/pandas-dev/pandas/issues/51040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing empty string with [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") incorrectly raising `ValueError` instead of returning `NaT` ([GH
    51349](https://github.com/pandas-dev/pandas/issues/51349))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist"), not dropping elements of `weights` corresponding
    to `NaN` values in `data` ([GH 48884](https://github.com/pandas-dev/pandas/issues/48884))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ax.set_xlim` was sometimes raising `UserWarning` which users couldn’t address
    due to `set_xlim` not accepting parsing arguments - the converter now uses [`Timestamp()`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") instead ([GH 49148](https://github.com/pandas-dev/pandas/issues/49148))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` with `online` not raising a `NotImplementedError`
    for unsupported operations ([GH 48834](https://github.com/pandas-dev/pandas/issues/48834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") raises `ValueError` when the object
    is empty ([GH 48459](https://github.com/pandas-dev/pandas/issues/48459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") raises `ValueError` when an entry of the index is equal
    to the name of the index ([GH 48567](https://github.com/pandas-dev/pandas/issues/48567))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") produces inconsistent results
    when passing empty DataFrame ([GH 47705](https://github.com/pandas-dev/pandas/issues/47705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` would not include unobserved categories
    in result when grouping by categorical indexes ([GH 49354](https://github.com/pandas-dev/pandas/issues/49354))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` would change result order depending
    on the input index when grouping by categoricals ([GH 49223](https://github.com/pandas-dev/pandas/issues/49223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` when grouping on categorical data
    would sort result values even when used with `sort=False` ([GH 42482](https://github.com/pandas-dev/pandas/issues/42482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and `SeriesGroupBy.apply` with `as_index=False`
    would not attempt the computation without using the grouping keys when using them
    failed with a `TypeError` ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") would describe the group keys
    ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.describe()`](../reference/api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe") with `as_index=False` would have
    the incorrect shape ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` with `dropna=False` would drop
    NA values when the grouper was categorical ([GH 36327](https://github.com/pandas-dev/pandas/issues/36327))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") would incorrectly raise when the
    grouper was an empty categorical and `observed=True` ([GH 21334](https://github.com/pandas-dev/pandas/issues/21334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") would raise when grouper contained NA
    values after subsetting from a `DataFrameGroupBy` ([GH 26454](https://github.com/pandas-dev/pandas/issues/26454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") would not include a [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") specified by `key` in the result when `as_index=False` ([GH
    50413](https://github.com/pandas-dev/pandas/issues/50413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") would raise when used with
    a `TimeGrouper` ([GH 50486](https://github.com/pandas-dev/pandas/issues/50486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.size()`](../reference/api/pandas.core.resample.Resampler.size.html#pandas.core.resample.Resampler.size
    "pandas.core.resample.Resampler.size") caused a wide [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to be returned instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46826](https://github.com/pandas-dev/pandas/issues/46826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") would raise incorrectly when grouper
    had `axis=1` for `"idxmin"` and `"idxmax"` arguments ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` would raise when used with an empty DataFrame, categorical
    grouper, and `dropna=False` ([GH 50634](https://github.com/pandas-dev/pandas/issues/50634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") did not respect `sort=False`
    ([GH 50482](https://github.com/pandas-dev/pandas/issues/50482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") raises `KeyError` when getting
    the result from a key list when resampling on time index ([GH 50840](https://github.com/pandas-dev/pandas/issues/50840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") would raise incorrectly when grouper
    had `axis=1` for `"ngroup"` argument ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") produced incorrect results when
    data had duplicate columns ([GH 50806](https://github.com/pandas-dev/pandas/issues/50806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with `engine="numba"` failing to respect
    `as_index=False` ([GH 51228](https://github.com/pandas-dev/pandas/issues/51228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg"), [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"), and `Resampler.agg()` would ignore arguments
    when passed a list of functions ([GH 50863](https://github.com/pandas-dev/pandas/issues/50863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.ohlc()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc") ignoring `as_index=False` ([GH 51413](https://github.com/pandas-dev/pandas/issues/51413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.agg()` after subsetting columns (e.g. `.groupby(...)[["a",
    "b"]]`) would not include groupings in the result ([GH 51186](https://github.com/pandas-dev/pandas/issues/51186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") raising `TypeError` for nullable dtype and `margins=True`
    ([GH 48681](https://github.com/pandas-dev/pandas/issues/48681))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") and [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") unstacking wrong level of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") has mixed names ([GH 48763](https://github.com/pandas-dev/pandas/issues/48763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") losing extension array dtype ([GH 41570](https://github.com/pandas-dev/pandas/issues/41570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") not respecting `None` as column name ([GH 48293](https://github.com/pandas-dev/pandas/issues/48293))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when `left_on` or `right_on` is or includes a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `AttributeError` ([GH 48464](https://github.com/pandas-dev/pandas/issues/48464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") raising `ValueError` with parameter `margins=True`
    when result is an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 49240](https://github.com/pandas-dev/pandas/issues/49240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified error message in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") when passing invalid `validate` option ([GH 49417](https://github.com/pandas-dev/pandas/issues/49417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") raising `ValueError` on multiple columns with `NaN`
    values or empty lists ([GH 46084](https://github.com/pandas-dev/pandas/issues/46084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") with `IntervalDtype` column with `timedelta64[ns]`
    endpoints ([GH 44917](https://github.com/pandas-dev/pandas/issues/44917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") would ignore arguments when passed a list of functions ([GH
    50863](https://github.com/pandas-dev/pandas/issues/50863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") when converting a `SparseDtype` with `datetime64[ns]`
    subtype to `int64` dtype raising, inconsistent with the non-sparse behavior ([GH
    49631](https://github.com/pandas-dev/pandas/issues/49631),:issue:50087)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") when converting a from `datetime64[ns]` to `Sparse[datetime64[ns]]`
    incorrectly raising ([GH 50082](https://github.com/pandas-dev/pandas/issues/50082))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sparse.to_coo()`](../reference/api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo") raising `SystemError` when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") contains a `ExtensionArray` ([GH 50996](https://github.com/pandas-dev/pandas/issues/50996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.mean()`](../reference/api/pandas.Series.mean.html#pandas.Series.mean
    "pandas.Series.mean") overflowing unnecessarily with nullable integers ([GH 48378](https://github.com/pandas-dev/pandas/issues/48378))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.tolist()` for nullable dtypes returning numpy scalars instead
    of python scalars ([GH 49890](https://github.com/pandas-dev/pandas/issues/49890))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") for pyarrow-backed dtypes raising `AttributeError` ([GH
    50437](https://github.com/pandas-dev/pandas/issues/50437))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when concatenating an empty DataFrame with an ExtensionDtype to another
    DataFrame with the same ExtensionDtype, the resulting dtype turned into object
    ([GH 48510](https://github.com/pandas-dev/pandas/issues/48510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `array.PandasArray.to_numpy()` raising with `NA` value when `na_value`
    is specified ([GH 40638](https://github.com/pandas-dev/pandas/issues/40638))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.types.is_numeric_dtype()`](../reference/api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype") where a custom `ExtensionDtype` would not
    return `True` if `_is_numeric` returned `True` ([GH 50563](https://github.com/pandas-dev/pandas/issues/50563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.types.is_integer_dtype()`](../reference/api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype"), [`api.types.is_unsigned_integer_dtype()`](../reference/api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype"), [`api.types.is_signed_integer_dtype()`](../reference/api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype"), [`api.types.is_float_dtype()`](../reference/api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype") where a custom `ExtensionDtype` would not return
    `True` if `kind` returned the corresponding NumPy type ([GH 50667](https://github.com/pandas-dev/pandas/issues/50667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor unnecessarily overflowing for nullable unsigned integer dtypes ([GH
    38798](https://github.com/pandas-dev/pandas/issues/38798), [GH 25880](https://github.com/pandas-dev/pandas/issues/25880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting non-string value into `StringArray` raising `ValueError` instead
    of `TypeError` ([GH 49632](https://github.com/pandas-dev/pandas/issues/49632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") not honoring the default `copy=True` keyword in case
    of columns with ExtensionDtype (and as a result also selecting multiple columns
    with getitem (`[]`) didn’t correctly result in a copy) ([GH 51197](https://github.com/pandas-dev/pandas/issues/51197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") logical operations `&` and `|` raising `KeyError`
    ([GH 51688](https://github.com/pandas-dev/pandas/issues/51688))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fix [`background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") for nullable dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `NA` values ([GH 50712](https://github.com/pandas-dev/pandas/issues/50712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in incorrectly accepting dtype strings containing “[pyarrow]” more than
    once ([GH 51548](https://github.com/pandas-dev/pandas/issues/51548))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") inconsistent behavior when accepting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") as parameter `value` ([GH 49620](https://github.com/pandas-dev/pandas/issues/49620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    failing to raise on [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") inputs ([GH 51167](https://github.com/pandas-dev/pandas/issues/51167))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 260 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 5j9 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ABCPAN-rank +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aarni Koskela +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aashish KC +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abubeker Mohammed +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Mróz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Ormondroyd +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aditya Anulekh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmed Ibrahim
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akshay Babbar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aleksa Radojicic +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Buzenet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Kirko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allison Kwan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amay Patel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ambuj Pawar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amotz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Schwab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anton Shevtsov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Ossa Guerra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Ossa-Guerra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anushka Bishnoi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arda Kosar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Armin Berres
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asadullah Naeem +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asish Mahapatra
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bailey Lissington +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BarkotBeyene
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Beasley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhavesh Rajendra Patil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bibek Jha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bill +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bishwas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CarlosGDCJ +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlotta Fabian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Roth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuck Cadman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corralien +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DG +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Hendry +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Isaac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Kleindienst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Poznik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Rudel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DavidKleindienst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dea María Léon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepak Sirohiwal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis Chukwunta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Douglas Lohmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dries Schaumont
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dustin K +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Edoardo Abati +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eduardo Chaves +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ege Özgüroğlu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ekaterina Borovikova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eli Schwartz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elvis Lim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emily Taylor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emma Carballal Haire +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erik Welch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Hofstetter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flynn Owen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fredrik Erlandsson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaurav Sheni
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Georeth Chow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: George Munyoro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Beltramini
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gulnur Baimukhambetova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: H L +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hatim Zahid +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HighYoda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hiki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Himanshu Wagh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hugo van Kemenade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Idil Ismiguzel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Chung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JMBurley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaime Di Cristina
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Koch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JanVHII +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janosh Riebesell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JasmandeepKaur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Tuloup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jessica M +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Haag
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: João Meirelles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julia Aoun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justus Magin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kang Su Min +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Khor Chean Wei
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kian Eliasi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kostya Farber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KotlinIsland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lakmal Pinnaduwage +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lakshya A Agrawal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lawrence Mitchell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Levi Ob +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loic Diridollou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lorenzo Vainigli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luca Pizzini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Damo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Madhuri Patil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maren Westermann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maria Stazherova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marie K +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marielle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Harfouche +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marko Pacak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Cerqueira +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Pedroni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matteo Raso +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mehdi Mohammadi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Harris +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Mior +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natalia Mokeeva +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Neal Muppidi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Crews
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nishu Choudhary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noa Tamir
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noritada Kobayashi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omkar Yadav +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: P. Talley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pablo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parfait Gasana
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pedro Nacht +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pooja Subramaniam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranav Saibhushan Ravuri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranav. P. A +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ralf Gommers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RaphSku +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robsdedude +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger Thomas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RogerThomas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SFuller4 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Salahuddin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Rao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sean Patrick Malloy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Roll +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shantanu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashwat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashwat Agrawal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shiko Wamwea +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shoham Debnath
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shubhankar Lohani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Siddhartha Gandhi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soumik Dutta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sowrov Talukder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Senger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stepfen Shawn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Rotondo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sudhansu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain MARIE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain Marié
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tabea Kossen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taylor Packard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thierry Moisan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas H +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tsvika S +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tsvika Shapira +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vamsi Verma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vinicius Akira +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Blum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wilson Xing +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xiao Yuan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xnot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yasin Tatar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yvan Cywan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zachary Moon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhengbo Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abonte +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adrienpacifico +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: amotzop +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: andyjessen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anonmouse1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bang128 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bishwas jha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: calhockemeyer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: carla-alves-24 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: carlotta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: casadipietra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: catmar22 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cfabian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: codamuse +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dataxerik
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: davidleon123 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dependabot[bot] +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fdrocha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: himanshu_wagh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iofall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jakirkham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jnclt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joelchen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joelsonoda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joshuabello2550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joycewamwea +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kathleenhang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: krasch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ltoniazzi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: luke396 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: milosz-martynow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: minat-hub +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mliu08 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: monosans +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nealxm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nikitaved +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paradox-lab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raisadz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ram vikram singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rebecca-palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sarvaSanjay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: seljaks +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: silviaovo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smij720 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: soumilbaldota +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stellalin7 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: strawberry beach sandals +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tmoschou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uzzell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yqyqyq-W +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ádám Lippai
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '김동현 (Daniel Donghyun Kim) +  ## Enhancements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Installing optional dependencies with pip extras'
  prefs: []
  type: TYPE_NORMAL
- en: When installing pandas using pip, sets of optional dependencies can also be
    installed by specifying extras.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'The available extras, found in the [installation guide](../getting_started/install.html#install-dependencies),
    are `[all, performance, computation, fss, aws, gcp, excel, parquet, feather, hdf5,
    spss, postgresql, mysql, sql-other, html, xml, plot, output_formatting, clipboard,
    compression, test]` ([GH 39164](https://github.com/pandas-dev/pandas/issues/39164)).  ###
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") can
    now hold numpy numeric dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to use any numpy numeric dtype in a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 42717](https://github.com/pandas-dev/pandas/issues/42717)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously it was only possible to use `int64`, `uint64` & `float64` dtypes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: '`Int64Index`, `UInt64Index` & `Float64Index` were deprecated in pandas version
    1.4 and have now been removed. Instead [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") should be used directly, and can it now take all numpy numeric
    dtypes, i.e. `int8`/ `int16`/`int32`/`int64`/`uint8`/`uint16`/`uint32`/`uint64`/`float32`/`float64`
    dtypes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: The ability for [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    to hold the numpy numeric dtypes has meant some changes in Pandas functionality.
    In particular, operations that previously were forced to create 64-bit indexes,
    can now create indexes with lower bit sizes, e.g. 32-bit indexes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below is a possibly non-exhaustive list of changes:'
  prefs: []
  type: TYPE_NORMAL
- en: Instantiating using a numpy numeric array now follows the dtype of the numpy
    array. Previously, all indexes created from numpy numeric arrays were forced to
    64-bit. Now, for example, `Index(np.array([1, 2, 3]))` will be `int32` on 32-bit
    systems, where it previously would have been `int64` even on 32-bit systems. Instantiating
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") using
    a list of numbers will still return 64bit dtypes, e.g. `Index([1, 2, 3])` will
    have a `int64` dtype, which is the same as previously.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The various numeric datetime attributes of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([`day`](../reference/api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day"), [`month`](../reference/api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month"), [`year`](../reference/api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") etc.) were previously in of dtype `int64`, while
    they were `int32` for [`arrays.DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"). They are now `int32` on [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") also:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Level dtypes on Indexes from [`Series.sparse.from_coo()`](../reference/api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo") are now of dtype `int32`, the same as they are
    on the `rows`/`cols` on a scipy sparse matrix. Previously they were of dtype `int64`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") cannot
    be instantiated using a float16 dtype. Previously instantiating an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") using dtype `float16` resulted in a `Float64Index` with a `float64`
    dtype. It now raises a `NotImplementedError`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]  ### Argument `dtype_backend`, to return pyarrow-backed or numpy-backed
    nullable dtypes'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The following functions gained a new keyword `dtype_backend` ([GH 36712](https://github.com/pandas-dev/pandas/issues/36712))
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When this option is set to `"numpy_nullable"` it will return a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that is backed by nullable dtypes.
  prefs: []
  type: TYPE_NORMAL
- en: 'When this keyword is set to `"pyarrow"`, then these functions will return pyarrow-backed
    nullable [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrames ([GH 48957](https://github.com/pandas-dev/pandas/issues/48957),
    [GH 49997](https://github.com/pandas-dev/pandas/issues/49997)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Copy-on-Write improvements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A new lazy copy mechanism that defers the copy until the object in question
    is modified was added to the methods listed in [Copy-on-Write optimizations](../user_guide/copy_on_write.html#copy-on-write-optimizations).
    These methods return views when Copy-on-Write is enabled, which provides a significant
    performance improvement compared to the regular execution ([GH 49473](https://github.com/pandas-dev/pandas/issues/49473)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing a single column of a DataFrame as a Series (e.g. `df["col"]`) now
    always returns a new object every time it is constructed when Copy-on-Write is
    enabled (not returning multiple times an identical, cached Series object). This
    ensures that those Series objects correctly follow the Copy-on-Write rules ([GH
    49450](https://github.com/pandas-dev/pandas/issues/49450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor will now create a lazy copy (deferring the copy until a modification
    to the data happens) when constructing a Series from an existing Series with the
    default of `copy=False` ([GH 50471](https://github.com/pandas-dev/pandas/issues/50471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor will now create a lazy copy (deferring the copy until a modification
    to the data happens) when constructing from an existing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the default of `copy=False` ([GH 51239](https://github.com/pandas-dev/pandas/issues/51239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a dictionary of Series objects
    and specifying `copy=False`, will now use a lazy copy of those Series objects
    for the columns of the DataFrame ([GH 50777](https://github.com/pandas-dev/pandas/issues/50777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and specifying `copy=False`, will now respect Copy-on-Write.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructors, when constructing from a NumPy array, will now copy the array by
    default to avoid mutating the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") / [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when mutating the array. Specify `copy=False` to get the old
    behavior. When setting `copy=False` pandas does not guarantee correct Copy-on-Write
    behavior when the NumPy array is modified after creation of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") / [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records") will now respect Copy-on-Write when called with
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trying to set values using chained assignment (for example, `df["a"][1:3] =
    0`) will now always raise a warning when Copy-on-Write is enabled. In this mode,
    chained assignment can never work because we are always setting into a temporary
    object that is the result of an indexing operation (getitem), which under Copy-on-Write
    always behaves as a copy. Thus, assigning through a chain can never update the
    original Series or DataFrame. Therefore, an informative warning is raised to the
    user to avoid silently doing nothing ([GH 49467](https://github.com/pandas-dev/pandas/issues/49467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") will now respect the Copy-on-Write mechanism when
    `inplace=True`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") will now respect the Copy-on-Write mechanism.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arithmetic operations that can be inplace, e.g. `ser *= 2` will now respect
    the Copy-on-Write mechanism.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.__getitem__()` will now respect the Copy-on-Write mechanism when
    the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    has [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    columns.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.__getitem__()` will now respect the Copy-on-Write mechanism when the'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    has a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex").'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view") will now respect the Copy-on-Write mechanism.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Copy-on-Write can be enabled through one of
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, copy on write can be enabled locally through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added support for `str` accessor methods when using [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.string` type ([GH 50325](https://github.com/pandas-dev/pandas/issues/50325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for `dt` accessor methods when using [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.timestamp` type ([GH 50954](https://github.com/pandas-dev/pandas/issues/50954))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now supports using `encoding=''infer''` to correctly read and use the encoding
    specified by the sas file. ([GH 48048](https://github.com/pandas-dev/pandas/issues/48048))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile"), [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") and [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std") now preserve nullable dtypes instead
    of casting to numpy dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std") now support datetime64, timedelta64,
    and [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtypes ([GH 48481](https://github.com/pandas-dev/pandas/issues/48481))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.add_suffix()`](../reference/api/pandas.Series.add_suffix.html#pandas.Series.add_suffix
    "pandas.Series.add_suffix"), [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix"), [`Series.add_prefix()`](../reference/api/pandas.Series.add_prefix.html#pandas.Series.add_prefix
    "pandas.Series.add_prefix") and [`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") support an `axis` argument. If `axis` is set, the
    default behaviour of which axis to consider can be overwritten ([GH 47819](https://github.com/pandas-dev/pandas/issues/47819))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") now shows the first element where the DataFrames
    differ, analogously to `pytest`’s output ([GH 47910](https://github.com/pandas-dev/pandas/issues/47910))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `index` parameter to [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") ([GH 46398](https://github.com/pandas-dev/pandas/issues/46398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for extension array dtypes in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") ([GH 44240](https://github.com/pandas-dev/pandas/issues/44240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added metadata propagation for binary operators on [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `cumsum`, `cumprod`, `cummin` and `cummax` to the `ExtensionArray` interface
    via `_accumulate` ([GH 28385](https://github.com/pandas-dev/pandas/issues/28385))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CategoricalConversionWarning`](../reference/api/pandas.errors.CategoricalConversionWarning.html#pandas.errors.CategoricalConversionWarning
    "pandas.errors.CategoricalConversionWarning"), [`InvalidComparison`](../reference/api/pandas.errors.InvalidComparison.html#pandas.errors.InvalidComparison
    "pandas.errors.InvalidComparison"), [`InvalidVersion`](../reference/api/pandas.errors.InvalidVersion.html#pandas.errors.InvalidVersion
    "pandas.errors.InvalidVersion"), [`LossySetitemError`](../reference/api/pandas.errors.LossySetitemError.html#pandas.errors.LossySetitemError
    "pandas.errors.LossySetitemError"), and [`NoBufferPresent`](../reference/api/pandas.errors.NoBufferPresent.html#pandas.errors.NoBufferPresent
    "pandas.errors.NoBufferPresent") are now exposed in `pandas.errors` ([GH 27656](https://github.com/pandas-dev/pandas/issues/27656))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix `test` optional_extra by adding missing test package `pytest-asyncio` ([GH
    48361](https://github.com/pandas-dev/pandas/issues/48361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") exception message thrown improved to include column
    name when type conversion is not possible. ([GH 47571](https://github.com/pandas-dev/pandas/issues/47571))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now supports a `unit` keyword (“s”, “ms”, “us”, or “ns”)
    to specify the desired resolution of the output index ([GH 49106](https://github.com/pandas-dev/pandas/issues/49106))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") now supports a `unit` keyword (“s”, “ms”, “us”, or “ns”)
    to specify the desired resolution of the output index ([GH 49824](https://github.com/pandas-dev/pandas/issues/49824))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now supports a `mode` keyword with supported inputs
    ‘w’ and ‘a’. Defaulting to ‘w’, ‘a’ can be used when lines=True and orient=’records’
    to append record oriented json lines to an existing json file. ([GH 35849](https://github.com/pandas-dev/pandas/issues/35849))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `name` parameter to [`IntervalIndex.from_breaks()`](../reference/api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks"), [`IntervalIndex.from_arrays()`](../reference/api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays") and [`IntervalIndex.from_tuples()`](../reference/api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples") ([GH 48911](https://github.com/pandas-dev/pandas/issues/48911))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve exception message when using [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to include the column that is compared ([GH 50323](https://github.com/pandas-dev/pandas/issues/50323))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when join-columns were duplicated ([GH 50102](https://github.com/pandas-dev/pandas/issues/50102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for extension array dtypes to [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") ([GH 32430](https://github.com/pandas-dev/pandas/issues/32430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `Index.infer_objects()` analogous to [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") ([GH 50034](https://github.com/pandas-dev/pandas/issues/50034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `copy` parameter to [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") and [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects"), passing `False` will avoid making copies for
    series or columns that are already non-object or where no better dtype can be
    inferred ([GH 50096](https://github.com/pandas-dev/pandas/issues/50096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") now recognizes `xlabel` and `ylabel` arguments ([GH
    49793](https://github.com/pandas-dev/pandas/issues/49793))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates") has gained `ignore_index` keyword to reset index
    ([GH 48304](https://github.com/pandas-dev/pandas/issues/48304))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") and [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") has gained `ignore_index` keyword to reset index ([GH
    31725](https://github.com/pandas-dev/pandas/issues/31725))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") for non-ISO8601 formats, informing users about the position
    of the first error ([GH 50361](https://github.com/pandas-dev/pandas/issues/50361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when trying to align [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects (for example, in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare")) to clarify that “identically labelled” refers to
    both index and columns ([GH 50083](https://github.com/pandas-dev/pandas/issues/50083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for [`Index.min()`](../reference/api/pandas.Index.min.html#pandas.Index.min
    "pandas.Index.min") and [`Index.max()`](../reference/api/pandas.Index.max.html#pandas.Index.max
    "pandas.Index.max") for pyarrow string dtypes ([GH 51397](https://github.com/pandas-dev/pandas/issues/51397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`DatetimeIndex.as_unit()`](../reference/api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit") and [`TimedeltaIndex.as_unit()`](../reference/api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit") to convert to different resolutions; supported
    resolutions are “s”, “ms”, “us”, and “ns” ([GH 50616](https://github.com/pandas-dev/pandas/issues/50616))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Series.dt.unit()`](../reference/api/pandas.Series.dt.unit.html#pandas.Series.dt.unit
    "pandas.Series.dt.unit") and [`Series.dt.as_unit()`](../reference/api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit") to convert to different resolutions; supported resolutions
    are “s”, “ms”, “us”, and “ns” ([GH 51223](https://github.com/pandas-dev/pandas/issues/51223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new argument `dtype` to [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql") to be consistent with [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") ([GH 50797](https://github.com/pandas-dev/pandas/issues/50797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"),
    [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table "pandas.read_table"),
    [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")
    and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accept `date_format` ([GH 50601](https://github.com/pandas-dev/pandas/issues/50601))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now accepts `"ISO8601"` as an argument to `format`, which
    will match any ISO8601 string (but possibly not identically-formatted) ([GH 50411](https://github.com/pandas-dev/pandas/issues/50411))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now accepts `"mixed"` as an argument to `format`, which
    will infer the format for each element individually ([GH 50972](https://github.com/pandas-dev/pandas/issues/50972))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new argument `engine` to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") to support parsing JSON with pyarrow by specifying `engine="pyarrow"`
    ([GH 48893](https://github.com/pandas-dev/pandas/issues/48893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for SQLAlchemy 2.0 ([GH 40686](https://github.com/pandas-dev/pandas/issues/40686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for `decimal` parameter when `engine="pyarrow"` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 51302](https://github.com/pandas-dev/pandas/issues/51302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") set
    operations [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union"), [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection"), [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference"), and [`Index.symmetric_difference()`](../reference/api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference") now support `sort=True`, which will always
    return a sorted result, unlike the default `sort=None` which does not sort in
    some cases ([GH 25151](https://github.com/pandas-dev/pandas/issues/25151))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Added new escape mode “latex-math” to avoid escaping “$” in formatter ([GH
    50040](https://github.com/pandas-dev/pandas/issues/50040))  ### Installing optional
    dependencies with pip extras'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When installing pandas using pip, sets of optional dependencies can also be
    installed by specifying extras.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: The available extras, found in the [installation guide](../getting_started/install.html#install-dependencies),
    are `[all, performance, computation, fss, aws, gcp, excel, parquet, feather, hdf5,
    spss, postgresql, mysql, sql-other, html, xml, plot, output_formatting, clipboard,
    compression, test]` ([GH 39164](https://github.com/pandas-dev/pandas/issues/39164)).
  prefs: []
  type: TYPE_NORMAL
- en: '### [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    can now hold numpy numeric dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: It is now possible to use any numpy numeric dtype in a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 42717](https://github.com/pandas-dev/pandas/issues/42717)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Previously it was only possible to use `int64`, `uint64` & `float64` dtypes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: '`Int64Index`, `UInt64Index` & `Float64Index` were deprecated in pandas version
    1.4 and have now been removed. Instead [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") should be used directly, and can it now take all numpy numeric
    dtypes, i.e. `int8`/ `int16`/`int32`/`int64`/`uint8`/`uint16`/`uint32`/`uint64`/`float32`/`float64`
    dtypes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: The ability for [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    to hold the numpy numeric dtypes has meant some changes in Pandas functionality.
    In particular, operations that previously were forced to create 64-bit indexes,
    can now create indexes with lower bit sizes, e.g. 32-bit indexes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below is a possibly non-exhaustive list of changes:'
  prefs: []
  type: TYPE_NORMAL
- en: Instantiating using a numpy numeric array now follows the dtype of the numpy
    array. Previously, all indexes created from numpy numeric arrays were forced to
    64-bit. Now, for example, `Index(np.array([1, 2, 3]))` will be `int32` on 32-bit
    systems, where it previously would have been `int64` even on 32-bit systems. Instantiating
    [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") using
    a list of numbers will still return 64bit dtypes, e.g. `Index([1, 2, 3])` will
    have a `int64` dtype, which is the same as previously.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The various numeric datetime attributes of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([`day`](../reference/api/pandas.DatetimeIndex.day.html#pandas.DatetimeIndex.day
    "pandas.DatetimeIndex.day"), [`month`](../reference/api/pandas.DatetimeIndex.month.html#pandas.DatetimeIndex.month
    "pandas.DatetimeIndex.month"), [`year`](../reference/api/pandas.DatetimeIndex.year.html#pandas.DatetimeIndex.year
    "pandas.DatetimeIndex.year") etc.) were previously in of dtype `int64`, while
    they were `int32` for [`arrays.DatetimeArray`](../reference/api/pandas.arrays.DatetimeArray.html#pandas.arrays.DatetimeArray
    "pandas.arrays.DatetimeArray"). They are now `int32` on [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") also:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Level dtypes on Indexes from [`Series.sparse.from_coo()`](../reference/api/pandas.Series.sparse.from_coo.html#pandas.Series.sparse.from_coo
    "pandas.Series.sparse.from_coo") are now of dtype `int32`, the same as they are
    on the `rows`/`cols` on a scipy sparse matrix. Previously they were of dtype `int64`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") cannot
    be instantiated using a float16 dtype. Previously instantiating an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") using dtype `float16` resulted in a `Float64Index` with a `float64`
    dtype. It now raises a `NotImplementedError`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '### Argument `dtype_backend`, to return pyarrow-backed or numpy-backed nullable
    dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: The following functions gained a new keyword `dtype_backend` ([GH 36712](https://github.com/pandas-dev/pandas/issues/36712))
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When this option is set to `"numpy_nullable"` it will return a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that is backed by nullable dtypes.
  prefs: []
  type: TYPE_NORMAL
- en: 'When this keyword is set to `"pyarrow"`, then these functions will return pyarrow-backed
    nullable [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrames ([GH 48957](https://github.com/pandas-dev/pandas/issues/48957),
    [GH 49997](https://github.com/pandas-dev/pandas/issues/49997)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_clipboard()`](../reference/api/pandas.read_clipboard.html#pandas.read_clipboard
    "pandas.read_clipboard")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html "pandas.read_html")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json "pandas.read_json")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql_table()`](../reference/api/pandas.read_sql_table.html#pandas.read_sql_table
    "pandas.read_sql_table")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_orc()`](../reference/api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_feather()`](../reference/api/pandas.read_feather.html#pandas.read_feather
    "pandas.read_feather")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.convert_dtypes()`](../reference/api/pandas.DataFrame.convert_dtypes.html#pandas.DataFrame.convert_dtypes
    "pandas.DataFrame.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: Copy-on-Write improvements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A new lazy copy mechanism that defers the copy until the object in question
    is modified was added to the methods listed in [Copy-on-Write optimizations](../user_guide/copy_on_write.html#copy-on-write-optimizations).
    These methods return views when Copy-on-Write is enabled, which provides a significant
    performance improvement compared to the regular execution ([GH 49473](https://github.com/pandas-dev/pandas/issues/49473)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing a single column of a DataFrame as a Series (e.g. `df["col"]`) now
    always returns a new object every time it is constructed when Copy-on-Write is
    enabled (not returning multiple times an identical, cached Series object). This
    ensures that those Series objects correctly follow the Copy-on-Write rules ([GH
    49450](https://github.com/pandas-dev/pandas/issues/49450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor will now create a lazy copy (deferring the copy until a modification
    to the data happens) when constructing a Series from an existing Series with the
    default of `copy=False` ([GH 50471](https://github.com/pandas-dev/pandas/issues/50471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor will now create a lazy copy (deferring the copy until a modification
    to the data happens) when constructing from an existing [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the default of `copy=False` ([GH 51239](https://github.com/pandas-dev/pandas/issues/51239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a dictionary of Series objects
    and specifying `copy=False`, will now use a lazy copy of those Series objects
    for the columns of the DataFrame ([GH 50777](https://github.com/pandas-dev/pandas/issues/50777))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructor, when constructing a DataFrame from a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and specifying `copy=False`, will now respect Copy-on-Write.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructors, when constructing from a NumPy array, will now copy the array by
    default to avoid mutating the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") / [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") when mutating the array. Specify `copy=False` to get the old
    behavior. When setting `copy=False` pandas does not guarantee correct Copy-on-Write
    behavior when the NumPy array is modified after creation of the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") / [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series").
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records") will now respect Copy-on-Write when called with
    a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Trying to set values using chained assignment (for example, `df["a"][1:3] =
    0`) will now always raise a warning when Copy-on-Write is enabled. In this mode,
    chained assignment can never work because we are always setting into a temporary
    object that is the result of an indexing operation (getitem), which under Copy-on-Write
    always behaves as a copy. Thus, assigning through a chain can never update the
    original Series or DataFrame. Therefore, an informative warning is raised to the
    user to avoid silently doing nothing ([GH 49467](https://github.com/pandas-dev/pandas/issues/49467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") will now respect the Copy-on-Write mechanism when
    `inplace=True`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") will now respect the Copy-on-Write mechanism.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arithmetic operations that can be inplace, e.g. `ser *= 2` will now respect
    the Copy-on-Write mechanism.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.__getitem__()` will now respect the Copy-on-Write mechanism when
    the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    has [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")
    columns.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.__getitem__()` will now respect the Copy-on-Write mechanism when the'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    has a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex").'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view") will now respect the Copy-on-Write mechanism.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Copy-on-Write can be enabled through one of
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, copy on write can be enabled locally through:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added support for `str` accessor methods when using [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.string` type ([GH 50325](https://github.com/pandas-dev/pandas/issues/50325))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for `dt` accessor methods when using [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with a `pyarrow.timestamp` type ([GH 50954](https://github.com/pandas-dev/pandas/issues/50954))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    now supports using `encoding=''infer''` to correctly read and use the encoding
    specified by the sas file. ([GH 48048](https://github.com/pandas-dev/pandas/issues/48048))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile"), [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") and [`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std") now preserve nullable dtypes instead
    of casting to numpy dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrameGroupBy.std()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.std.html#pandas.core.groupby.DataFrameGroupBy.std
    "pandas.core.groupby.DataFrameGroupBy.std"), [`SeriesGroupBy.std()`](../reference/api/pandas.core.groupby.SeriesGroupBy.std.html#pandas.core.groupby.SeriesGroupBy.std
    "pandas.core.groupby.SeriesGroupBy.std") now support datetime64, timedelta64,
    and [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtypes ([GH 48481](https://github.com/pandas-dev/pandas/issues/48481))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.add_suffix()`](../reference/api/pandas.Series.add_suffix.html#pandas.Series.add_suffix
    "pandas.Series.add_suffix"), [`DataFrame.add_suffix()`](../reference/api/pandas.DataFrame.add_suffix.html#pandas.DataFrame.add_suffix
    "pandas.DataFrame.add_suffix"), [`Series.add_prefix()`](../reference/api/pandas.Series.add_prefix.html#pandas.Series.add_prefix
    "pandas.Series.add_prefix") and [`DataFrame.add_prefix()`](../reference/api/pandas.DataFrame.add_prefix.html#pandas.DataFrame.add_prefix
    "pandas.DataFrame.add_prefix") support an `axis` argument. If `axis` is set, the
    default behaviour of which axis to consider can be overwritten ([GH 47819](https://github.com/pandas-dev/pandas/issues/47819))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") now shows the first element where the DataFrames
    differ, analogously to `pytest`’s output ([GH 47910](https://github.com/pandas-dev/pandas/issues/47910))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `index` parameter to [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") ([GH 46398](https://github.com/pandas-dev/pandas/issues/46398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for extension array dtypes in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") ([GH 44240](https://github.com/pandas-dev/pandas/issues/44240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added metadata propagation for binary operators on [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `cumsum`, `cumprod`, `cummin` and `cummax` to the `ExtensionArray` interface
    via `_accumulate` ([GH 28385](https://github.com/pandas-dev/pandas/issues/28385))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CategoricalConversionWarning`](../reference/api/pandas.errors.CategoricalConversionWarning.html#pandas.errors.CategoricalConversionWarning
    "pandas.errors.CategoricalConversionWarning"), [`InvalidComparison`](../reference/api/pandas.errors.InvalidComparison.html#pandas.errors.InvalidComparison
    "pandas.errors.InvalidComparison"), [`InvalidVersion`](../reference/api/pandas.errors.InvalidVersion.html#pandas.errors.InvalidVersion
    "pandas.errors.InvalidVersion"), [`LossySetitemError`](../reference/api/pandas.errors.LossySetitemError.html#pandas.errors.LossySetitemError
    "pandas.errors.LossySetitemError"), and [`NoBufferPresent`](../reference/api/pandas.errors.NoBufferPresent.html#pandas.errors.NoBufferPresent
    "pandas.errors.NoBufferPresent") are now exposed in `pandas.errors` ([GH 27656](https://github.com/pandas-dev/pandas/issues/27656))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fix `test` optional_extra by adding missing test package `pytest-asyncio` ([GH
    48361](https://github.com/pandas-dev/pandas/issues/48361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") exception message thrown improved to include column
    name when type conversion is not possible. ([GH 47571](https://github.com/pandas-dev/pandas/issues/47571))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") now supports a `unit` keyword (“s”, “ms”, “us”, or “ns”)
    to specify the desired resolution of the output index ([GH 49106](https://github.com/pandas-dev/pandas/issues/49106))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range") now supports a `unit` keyword (“s”, “ms”, “us”, or “ns”)
    to specify the desired resolution of the output index ([GH 49824](https://github.com/pandas-dev/pandas/issues/49824))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") now supports a `mode` keyword with supported inputs
    ‘w’ and ‘a’. Defaulting to ‘w’, ‘a’ can be used when lines=True and orient=’records’
    to append record oriented json lines to an existing json file. ([GH 35849](https://github.com/pandas-dev/pandas/issues/35849))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `name` parameter to [`IntervalIndex.from_breaks()`](../reference/api/pandas.IntervalIndex.from_breaks.html#pandas.IntervalIndex.from_breaks
    "pandas.IntervalIndex.from_breaks"), [`IntervalIndex.from_arrays()`](../reference/api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays") and [`IntervalIndex.from_tuples()`](../reference/api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples") ([GH 48911](https://github.com/pandas-dev/pandas/issues/48911))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve exception message when using [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to include the column that is compared ([GH 50323](https://github.com/pandas-dev/pandas/issues/50323))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message for [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when join-columns were duplicated ([GH 50102](https://github.com/pandas-dev/pandas/issues/50102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for extension array dtypes to [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") ([GH 32430](https://github.com/pandas-dev/pandas/issues/32430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `Index.infer_objects()` analogous to [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") ([GH 50034](https://github.com/pandas-dev/pandas/issues/50034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `copy` parameter to [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") and [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects"), passing `False` will avoid making copies for
    series or columns that are already non-object or where no better dtype can be
    inferred ([GH 50096](https://github.com/pandas-dev/pandas/issues/50096))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist") now recognizes `xlabel` and `ylabel` arguments ([GH
    49793](https://github.com/pandas-dev/pandas/issues/49793))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates") has gained `ignore_index` keyword to reset index
    ([GH 48304](https://github.com/pandas-dev/pandas/issues/48304))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") and [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") has gained `ignore_index` keyword to reset index ([GH
    31725](https://github.com/pandas-dev/pandas/issues/31725))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") for non-ISO8601 formats, informing users about the position
    of the first error ([GH 50361](https://github.com/pandas-dev/pandas/issues/50361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when trying to align [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects (for example, in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare")) to clarify that “identically labelled” refers to
    both index and columns ([GH 50083](https://github.com/pandas-dev/pandas/issues/50083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for [`Index.min()`](../reference/api/pandas.Index.min.html#pandas.Index.min
    "pandas.Index.min") and [`Index.max()`](../reference/api/pandas.Index.max.html#pandas.Index.max
    "pandas.Index.max") for pyarrow string dtypes ([GH 51397](https://github.com/pandas-dev/pandas/issues/51397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`DatetimeIndex.as_unit()`](../reference/api/pandas.DatetimeIndex.as_unit.html#pandas.DatetimeIndex.as_unit
    "pandas.DatetimeIndex.as_unit") and [`TimedeltaIndex.as_unit()`](../reference/api/pandas.TimedeltaIndex.as_unit.html#pandas.TimedeltaIndex.as_unit
    "pandas.TimedeltaIndex.as_unit") to convert to different resolutions; supported
    resolutions are “s”, “ms”, “us”, and “ns” ([GH 50616](https://github.com/pandas-dev/pandas/issues/50616))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`Series.dt.unit()`](../reference/api/pandas.Series.dt.unit.html#pandas.Series.dt.unit
    "pandas.Series.dt.unit") and [`Series.dt.as_unit()`](../reference/api/pandas.Series.dt.as_unit.html#pandas.Series.dt.as_unit
    "pandas.Series.dt.as_unit") to convert to different resolutions; supported resolutions
    are “s”, “ms”, “us”, and “ns” ([GH 51223](https://github.com/pandas-dev/pandas/issues/51223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new argument `dtype` to [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql") to be consistent with [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") ([GH 50797](https://github.com/pandas-dev/pandas/issues/50797))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"),
    [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table "pandas.read_table"),
    [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")
    and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") now accept `date_format` ([GH 50601](https://github.com/pandas-dev/pandas/issues/50601))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now accepts `"ISO8601"` as an argument to `format`, which
    will match any ISO8601 string (but possibly not identically-formatted) ([GH 50411](https://github.com/pandas-dev/pandas/issues/50411))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") now accepts `"mixed"` as an argument to `format`, which
    will infer the format for each element individually ([GH 50972](https://github.com/pandas-dev/pandas/issues/50972))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new argument `engine` to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") to support parsing JSON with pyarrow by specifying `engine="pyarrow"`
    ([GH 48893](https://github.com/pandas-dev/pandas/issues/48893))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for SQLAlchemy 2.0 ([GH 40686](https://github.com/pandas-dev/pandas/issues/40686))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added support for `decimal` parameter when `engine="pyarrow"` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 51302](https://github.com/pandas-dev/pandas/issues/51302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") set
    operations [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union"), [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection"), [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference"), and [`Index.symmetric_difference()`](../reference/api/pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference") now support `sort=True`, which will always
    return a sorted result, unlike the default `sort=None` which does not sort in
    some cases ([GH 25151](https://github.com/pandas-dev/pandas/issues/25151))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added new escape mode “latex-math” to avoid escaping “$” in formatter ([GH 50040](https://github.com/pandas-dev/pandas/issues/50040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Notable bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod") overflow instead of lossy casting
    to float'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions we cast to float when applying `cumsum` and `cumprod` which
    lead to incorrect results even if the result could be hold by `int64` dtype. Additionally,
    the aggregation overflows consistent with numpy and the regular [`DataFrame.cumprod()`](../reference/api/pandas.DataFrame.cumprod.html#pandas.DataFrame.cumprod
    "pandas.DataFrame.cumprod") and [`DataFrame.cumsum()`](../reference/api/pandas.DataFrame.cumsum.html#pandas.DataFrame.cumsum
    "pandas.DataFrame.cumsum") methods when the limit of `int64` is reached ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: We return incorrect results with the 6th value.
  prefs: []
  type: TYPE_NORMAL
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'We overflow with the 7th value, but the 6th value is still correct.  ### [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now behave as filtrations'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") acted as if they were aggregations. However,
    for most inputs `n`, they may return either zero or multiple rows per group. This
    means that they are filtrations, similar to e.g. [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"). pandas now treats them as filtrations
    ([GH 13666](https://github.com/pandas-dev/pandas/issues/13666)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: In particular, the index of the result is derived from the input by selecting
    the appropriate rows. Also, when `n` is larger than the group, no rows instead
    of `NaN` is returned.
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]  ### [`DataFrameGroupBy.cumsum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumsum.html#pandas.core.groupby.DataFrameGroupBy.cumsum
    "pandas.core.groupby.DataFrameGroupBy.cumsum") and [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod") overflow instead of lossy casting
    to float'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions we cast to float when applying `cumsum` and `cumprod` which
    lead to incorrect results even if the result could be hold by `int64` dtype. Additionally,
    the aggregation overflows consistent with numpy and the regular [`DataFrame.cumprod()`](../reference/api/pandas.DataFrame.cumprod.html#pandas.DataFrame.cumprod
    "pandas.DataFrame.cumprod") and [`DataFrame.cumsum()`](../reference/api/pandas.DataFrame.cumsum.html#pandas.DataFrame.cumsum
    "pandas.DataFrame.cumsum") methods when the limit of `int64` is reached ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: We return incorrect results with the 6th value.
  prefs: []
  type: TYPE_NORMAL
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: We overflow with the 7th value, but the 6th value is still correct.
  prefs: []
  type: TYPE_NORMAL
- en: '### [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") now behave as filtrations'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`DataFrameGroupBy.nth()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nth.html#pandas.core.groupby.DataFrameGroupBy.nth
    "pandas.core.groupby.DataFrameGroupBy.nth") and [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") acted as if they were aggregations. However,
    for most inputs `n`, they may return either zero or multiple rows per group. This
    means that they are filtrations, similar to e.g. [`DataFrameGroupBy.head()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.head.html#pandas.core.groupby.DataFrameGroupBy.head
    "pandas.core.groupby.DataFrameGroupBy.head"). pandas now treats them as filtrations
    ([GH 13666](https://github.com/pandas-dev/pandas/issues/13666)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: In particular, the index of the result is derived from the input by selecting
    the appropriate rows. Also, when `n` is larger than the group, no rows instead
    of `NaN` is returned.
  prefs: []
  type: TYPE_NORMAL
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Construction with datetime64 or timedelta64 dtype with unsupported resolution'
  prefs: []
  type: TYPE_NORMAL
- en: 'In past versions, when constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and passing a “datetime64” or “timedelta64” dtype with unsupported
    resolution (i.e. anything other than “ns”), pandas would silently replace the
    given dtype with its nanosecond analogue:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: 'In pandas 2.0 we support resolutions “s”, “ms”, “us”, and “ns”. When passing
    a supported dtype (e.g. “datetime64[s]”), the result now has exactly the requested
    dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'With an un-supported dtype, pandas now raises instead of silently swapping
    in a supported dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]  ### Value counts sets the resulting name to `count`'
  prefs: []
  type: TYPE_NORMAL
- en: In past versions, when running [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts"), the result would inherit the original object’s
    name, and the result index would be nameless. This would cause confusion when
    resetting the index, and the column names would not correspond with the column
    values. Now, the result name will be `'count'` (or `'proportion'` if `normalize=True`
    was passed), and the index will be named after the original object ([GH 49497](https://github.com/pandas-dev/pandas/issues/49497)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: 'Likewise for other `value_counts` methods (for example, [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts")).  ### Disallow astype conversion to non-supported
    datetime64/timedelta64 dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: 'In previous versions, converting a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from `datetime64[ns]` to a different `datetime64[X]` dtype
    would return with `datetime64[ns]` dtype instead of the requested dtype. In pandas
    2.0, support is added for “datetime64[s]”, “datetime64[ms]”, and “datetime64[us]”
    dtypes, so converting to those dtypes gives exactly the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'With the new behavior, we get exactly the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'For non-supported resolutions e.g. “datetime64[D]”, we raise instead of silently
    ignoring the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: For conversion from `timedelta64[ns]` dtypes, the old behavior converted to
    a floating point format.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: 'The new behavior, as for datetime64, either gives exactly the requested dtype
    or raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]  ### UTC and fixed-offset timezones default to standard-library tzinfo
    objects'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, the default `tzinfo` object used to represent UTC was
    `pytz.UTC`. In pandas 2.0, we default to `datetime.timezone.utc` instead. Similarly,
    for timezones represent fixed UTC offsets, we use `datetime.timezone` objects
    instead of `pytz.FixedOffset` objects. See ([GH 34916](https://github.com/pandas-dev/pandas/issues/34916))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'For timezones that are neither UTC nor fixed offsets, e.g. “US/Pacific”, we
    continue to default to `pytz` objects.  ### Empty DataFrames/Series will now default
    to have a `RangeIndex`'
  prefs: []
  type: TYPE_NORMAL
- en: Before, constructing an empty (where `data` is `None` or an empty list-like
    argument) [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    without specifying the axes (`index=None`, `columns=None`) would return the axes
    as empty [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with object dtype.
  prefs: []
  type: TYPE_NORMAL
- en: Now, the axes return an empty [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 49572](https://github.com/pandas-dev/pandas/issues/49572)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]  ### DataFrame to LaTeX has a new render engine'
  prefs: []
  type: TYPE_NORMAL
- en: The existing [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") has been restructured to utilise the extended implementation
    previously available under [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex"). The arguments signature is similar,
    albeit `col_space` has been removed since it is ignored by LaTeX engines. This
    render engine also requires `jinja2` as a dependency which needs to be installed,
    since rendering is based upon jinja2 templates.
  prefs: []
  type: TYPE_NORMAL
- en: 'The pandas latex options below are no longer used and have been removed. The
    generic max rows and columns arguments remain but for this functionality should
    be replaced by the Styler equivalents. The alternative options giving similar
    functionality are indicated below:'
  prefs: []
  type: TYPE_NORMAL
- en: '`display.latex.escape`: replaced with `styler.format.escape`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.longtable`: replaced with `styler.latex.environment`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.multicolumn`, `display.latex.multicolumn_format` and `display.latex.multirow`:
    replaced with `styler.sparse.rows`, `styler.sparse.columns`, `styler.latex.multirow_align`
    and `styler.latex.multicol_align`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.repr`: replaced with `styler.render.repr`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.max_rows` and `display.max_columns`: replace with `styler.render.max_rows`,
    `styler.render.max_columns` and `styler.render.max_elements`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note that due to this change some defaults have also changed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`multirow` now defaults to *True*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multirow_align` defaults to *“r”* instead of *“l”*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multicol_align` defaults to *“r”* instead of *“l”*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`escape` now defaults to *False*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note that the behaviour of `_repr_latex_` is also changed. Previously setting
    `display.latex.repr` would generate LaTeX only when using nbconvert for a JupyterNotebook,
    and not when the user is running the notebook. Now the `styler.render.repr` option
    allows control of the specific output within JupyterNotebooks for operations (not
    just on nbconvert). See [GH 39911](https://github.com/pandas-dev/pandas/issues/39911).  ###
    Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 1.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 7.0.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest-xdist (dev) | 2.2.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis (dev) | 6.34.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.8.2 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 7.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.6.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.21.0 | X |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Datetimes are now parsed with a consistent format
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the past, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") guessed the format for each element independently. This
    was appropriate for some cases where elements had mixed date formats - however,
    it would regularly cause problems when users expected a consistent format but
    the function would switch formats between elements. As of version 2.0.0, parsing
    will use a consistent format, determined by the first non-NA value (unless the
    user specifies a format, in which case that is used).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: Note that this affects [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") as well.
  prefs: []
  type: TYPE_NORMAL
- en: If you still need to parse dates with inconsistent formats, you can use `format='mixed'`
    (possibly alongside `dayfirst`)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: or, if your formats are all ISO8601 (but possibly not identically-formatted)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The `freq`, `tz`, `nanosecond`, and `unit` keywords in the [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor are now keyword-only ([GH 45307](https://github.com/pandas-dev/pandas/issues/45307),
    [GH 32526](https://github.com/pandas-dev/pandas/issues/32526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `nanoseconds` greater than 999 or less than 0 in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") now raises a `ValueError` ([GH 48538](https://github.com/pandas-dev/pandas/issues/48538),
    [GH 48255](https://github.com/pandas-dev/pandas/issues/48255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"):
    specifying an incorrect number of columns with `index_col` of now raises `ParserError`
    instead of `IndexError` when using the c parser.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Default value of `dtype` in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") is changed to `bool` from `uint8` ([GH 45848](https://github.com/pandas-dev/pandas/issues/45848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype"), [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and `DatetimeIndex.astype()` casting datetime64 data
    to any of “datetime64[s]”, “datetime64[ms]”, “datetime64[us]” will return an object
    with the given resolution instead of coercing back to “datetime64[ns]” ([GH 48928](https://github.com/pandas-dev/pandas/issues/48928))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype"), [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and `DatetimeIndex.astype()` casting timedelta64 data
    to any of “timedelta64[s]”, “timedelta64[ms]”, “timedelta64[us]” will return an
    object with the given resolution instead of coercing to “float64” dtype ([GH 48963](https://github.com/pandas-dev/pandas/issues/48963))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.astype()`, `TimedeltaIndex.astype()`, `PeriodIndex.astype()`
    [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with `datetime64`, `timedelta64` or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") dtypes no longer allow converting to integer dtypes other
    than “int64”, do `obj.astype(''int64'', copy=False).astype(dtype)` instead ([GH
    49715](https://github.com/pandas-dev/pandas/issues/49715))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") now allows casting from `float64` dtype to datetime-like
    dtypes, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 49660](https://github.com/pandas-dev/pandas/issues/49660))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing data with dtype of “timedelta64[s]”, “timedelta64[ms]”, or “timedelta64[us]”
    to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors will now retain that dtype instead of casting
    to “timedelta64[ns]”; timedelta64 data with lower resolution will be cast to the
    lowest supported resolution “timedelta64[s]” ([GH 49014](https://github.com/pandas-dev/pandas/issues/49014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `dtype` of “timedelta64[s]”, “timedelta64[ms]”, or “timedelta64[us]”
    to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors will now retain that dtype instead of casting
    to “timedelta64[ns]”; passing a dtype with lower resolution for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will be cast to the lowest supported resolution “timedelta64[s]”
    ([GH 49014](https://github.com/pandas-dev/pandas/issues/49014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a `np.datetime64` object with non-nanosecond resolution to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will retain the input resolution if it is “s”, “ms”, “us”,
    or “ns”; otherwise it will be cast to the closest supported resolution ([GH 49008](https://github.com/pandas-dev/pandas/issues/49008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `datetime64` values with resolution other than nanosecond to [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") will retain the input resolution if it is “s”, “ms”, “us”,
    or “ns”; otherwise it will be cast to the closest supported resolution ([GH 50369](https://github.com/pandas-dev/pandas/issues/50369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing integer values and a non-nanosecond datetime64 dtype (e.g. “datetime64[s]”)
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") will
    treat the values as multiples of the dtype’s unit, matching the behavior of e.g.
    `Series(np.array(values, dtype="M8[s]"))` ([GH 51092](https://github.com/pandas-dev/pandas/issues/51092))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a string in ISO-8601 format to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will retain the resolution of the parsed input if it is “s”,
    “ms”, “us”, or “ns”; otherwise it will be cast to the closest supported resolution
    ([GH 49737](https://github.com/pandas-dev/pandas/issues/49737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `other` argument in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") and [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") now defaults to `no_default` instead of `np.nan` consistent
    with [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"). Entries will be filled with the corresponding NULL value
    (`np.nan` for numpy dtypes, `pd.NA` for extension dtypes). ([GH 49111](https://github.com/pandas-dev/pandas/issues/49111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") to retain sparse dtype ([GH 49583](https://github.com/pandas-dev/pandas/issues/49583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") of datetime objects, pandas no longer silently converts the index
    to a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 39307](https://github.com/pandas-dev/pandas/issues/39307),
    [GH 23598](https://github.com/pandas-dev/pandas/issues/23598))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with parameter `exact="equiv"` now considers
    two indexes equal when both are either a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with an `int64` dtype. Previously it meant either a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") or a `Int64Index` ([GH 51098](https://github.com/pandas-dev/pandas/issues/51098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") with dtype “timedelta64[ns]” or “datetime64[ns]” now returns
    `TimedeltaArray` or `DatetimeArray` instead of `numpy.ndarray` ([GH 49176](https://github.com/pandas-dev/pandas/issues/49176))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") now allow sequences containing both `datetime` objects
    and numeric entries, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 49037](https://github.com/pandas-dev/pandas/issues/49037),
    [GH 50453](https://github.com/pandas-dev/pandas/issues/50453))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") now only returns `True` for array-likes with
    `dtype=object` when the elements are inferred to be strings ([GH 15585](https://github.com/pandas-dev/pandas/issues/15585))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a sequence containing `datetime` objects and `date` objects to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor will return with `object` dtype instead of `datetime64[ns]`
    dtype, consistent with [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") behavior ([GH 49341](https://github.com/pandas-dev/pandas/issues/49341))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing strings that cannot be parsed as datetimes to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `dtype="datetime64[ns]"` will raise instead of silently
    ignoring the keyword and returning `object` dtype ([GH 24435](https://github.com/pandas-dev/pandas/issues/24435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a sequence containing a type that cannot be converted to [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") to [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") or to the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor with `dtype="timedelta64[ns]"` or to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") now raises `TypeError` instead of `ValueError` ([GH 49525](https://github.com/pandas-dev/pandas/issues/49525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor with sequence containing at least one `NaT` and everything
    else either `None` or `NaN` to infer `datetime64[ns]` dtype instead of `object`,
    matching [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    behavior ([GH 49340](https://github.com/pandas-dev/pandas/issues/49340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") with parameter `index_col` set to `None` (the default) will
    now set the index on the returned [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of a `Int64Index` ([GH 49745](https://github.com/pandas-dev/pandas/issues/49745))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic methods when working with object-dtypes, the results
    no longer do type inference on the result of the array operations, use `result.infer_objects(copy=False)`
    to do type inference on the result ([GH 49999](https://github.com/pandas-dev/pandas/issues/49999),
    [GH 49714](https://github.com/pandas-dev/pandas/issues/49714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor with an object-dtype `numpy.ndarray` containing all-`bool`
    values or all-complex values, this will now retain object dtype, consistent with
    the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    behavior ([GH 49594](https://github.com/pandas-dev/pandas/issues/49594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") from object-dtype containing `bytes` objects to string
    dtypes; this now does `val.decode()` on bytes objects instead of `str(val)`, matching
    [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") behavior ([GH 45326](https://github.com/pandas-dev/pandas/issues/45326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `"None"` to default `na_values` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 50286](https://github.com/pandas-dev/pandas/issues/50286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors when given an integer dtype and floating-point
    data that is not round numbers, this now raises `ValueError` instead of silently
    retaining the float dtype; do `Series(data)` or `DataFrame(data)` to get the old
    behavior, and `Series(data).astype(dtype)` or `DataFrame(data).astype(dtype)`
    to get the specified dtype ([GH 49599](https://github.com/pandas-dev/pandas/issues/49599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1`, an integer `fill_value`, and homogeneous
    datetime-like dtype, this now fills new columns with integer dtypes instead of
    casting to datetimelike ([GH 49842](https://github.com/pandas-dev/pandas/issues/49842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Files are now closed when encountering an exception in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 49921](https://github.com/pandas-dev/pandas/issues/49921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") & [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), where the index will now always be a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex"), when no index is specified. Previously the index would be
    a [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") with
    dtype `object` if the new DataFrame/Series has length 0 ([GH 49572](https://github.com/pandas-dev/pandas/issues/49572))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.values()`](../reference/api/pandas.DataFrame.values.html#pandas.DataFrame.values
    "pandas.DataFrame.values"), [`DataFrame.to_numpy()`](../reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy
    "pandas.DataFrame.to_numpy"), [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") no longer silently consolidate the underlying arrays;
    do `df = df.copy()` to ensure consolidation ([GH 49356](https://github.com/pandas-dev/pandas/issues/49356))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a new DataFrame using a full slice on both axes with [`loc`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") or [`iloc`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") (thus, `df.loc[:, :]` or `df.iloc[:, :]`) now returns
    a new DataFrame (shallow copy) instead of the original DataFrame, consistent with
    other methods to get a full slice (for example `df.loc[:]` or `df[:]`) ([GH 49469](https://github.com/pandas-dev/pandas/issues/49469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructors will now return a shallow copy (i.e. share data, but not attributes)
    when passed a Series and DataFrame, respectively, and with the default of `copy=False`
    (and if no other keyword triggers a copy). Previously, the new Series or DataFrame
    would share the index attribute (e.g. `df.index = ...` would also update the index
    of the parent or child) ([GH 49523](https://github.com/pandas-dev/pandas/issues/49523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow computing `cumprod` for [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object; previously this returned incorrect values ([GH 50246](https://github.com/pandas-dev/pandas/issues/50246))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects read from a `HDFStore` file without an index now have a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of an `int64` index ([GH 51076](https://github.com/pandas-dev/pandas/issues/51076))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiating an [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with an numeric numpy dtype with data containing [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") and/or [`NaT`](../reference/api/pandas.NaT.html#pandas.NaT "pandas.NaT")
    now raises a `ValueError`. Previously a `TypeError` was raised ([GH 51050](https://github.com/pandas-dev/pandas/issues/51050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading a JSON file with duplicate columns using `read_json(orient='split')`
    renames columns to avoid duplicates, as [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and the other readers do ([GH 50370](https://github.com/pandas-dev/pandas/issues/50370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The levels of the index of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") returned from `Series.sparse.from_coo` now always have dtype
    `int32`. Previously they had dtype `int64` ([GH 50926](https://github.com/pandas-dev/pandas/issues/50926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `unit` of either “Y” or “M” will now raise if a sequence
    contains a non-round `float` value, matching the `Timestamp` behavior ([GH 50301](https://github.com/pandas-dev/pandas/issues/50301))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The methods [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round"), `DataFrame.__invert__()`, `Series.__invert__()`, [`DataFrame.swapaxes()`](../reference/api/pandas.DataFrame.swapaxes.html#pandas.DataFrame.swapaxes
    "pandas.DataFrame.swapaxes"), [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first"), [`DataFrame.last()`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last"), [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first"), [`Series.last()`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") will now always return new objects ([GH 51032](https://github.com/pandas-dev/pandas/issues/51032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and `DataFrameGroupBy` aggregations (e.g. “sum”) with object-dtype columns no
    longer infer non-object dtypes for their results, explicitly call `result.infer_objects(copy=False)`
    on the result to obtain the old behavior ([GH 51205](https://github.com/pandas-dev/pandas/issues/51205),
    [GH 49603](https://github.com/pandas-dev/pandas/issues/49603))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Division by zero with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") dtypes returns `-inf`, `nan`, or `inf` depending on the numerator,
    instead of raising ([GH 51541](https://github.com/pandas-dev/pandas/issues/51541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.api.types.is_any_real_numeric_dtype()`](../reference/api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype") to check for real numeric dtypes
    ([GH 51152](https://github.com/pandas-dev/pandas/issues/51152))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_counts()` now returns data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.int64` type instead of `"Int64"` type ([GH
    51462](https://github.com/pandas-dev/pandas/issues/51462))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize")
    and [`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")
    preserve the original dtype when passed numpy timedelta64 or datetime64 with non-nanosecond
    resolution ([GH 48670](https://github.com/pandas-dev/pandas/issues/48670))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'A current PDEP proposes the deprecation and removal of the keywords `inplace`
    and `copy` for all but a small subset of methods from the pandas API. The current
    discussion takes place at [here](https://github.com/pandas-dev/pandas/pull/51466).
    The keywords won’t be necessary anymore in the context of Copy-on-Write. If this
    proposal is accepted, both keywords would be deprecated in the next release of
    pandas and removed in pandas 3.0.  ### Construction with datetime64 or timedelta64
    dtype with unsupported resolution'
  prefs: []
  type: TYPE_NORMAL
- en: 'In past versions, when constructing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and passing a “datetime64” or “timedelta64” dtype with unsupported
    resolution (i.e. anything other than “ns”), pandas would silently replace the
    given dtype with its nanosecond analogue:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: 'In pandas 2.0 we support resolutions “s”, “ms”, “us”, and “ns”. When passing
    a supported dtype (e.g. “datetime64[s]”), the result now has exactly the requested
    dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: 'With an un-supported dtype, pandas now raises instead of silently swapping
    in a supported dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: '### Value counts sets the resulting name to `count`'
  prefs: []
  type: TYPE_NORMAL
- en: In past versions, when running [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts"), the result would inherit the original object’s
    name, and the result index would be nameless. This would cause confusion when
    resetting the index, and the column names would not correspond with the column
    values. Now, the result name will be `'count'` (or `'proportion'` if `normalize=True`
    was passed), and the index will be named after the original object ([GH 49497](https://github.com/pandas-dev/pandas/issues/49497)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: Likewise for other `value_counts` methods (for example, [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts")).
  prefs: []
  type: TYPE_NORMAL
- en: '### Disallow astype conversion to non-supported datetime64/timedelta64 dtypes'
  prefs: []
  type: TYPE_NORMAL
- en: 'In previous versions, converting a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") from `datetime64[ns]` to a different `datetime64[X]` dtype
    would return with `datetime64[ns]` dtype instead of the requested dtype. In pandas
    2.0, support is added for “datetime64[s]”, “datetime64[ms]”, and “datetime64[us]”
    dtypes, so converting to those dtypes gives exactly the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: 'With the new behavior, we get exactly the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: 'For non-supported resolutions e.g. “datetime64[D]”, we raise instead of silently
    ignoring the requested dtype:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: For conversion from `timedelta64[ns]` dtypes, the old behavior converted to
    a floating point format.
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: 'The new behavior, as for datetime64, either gives exactly the requested dtype
    or raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: '### UTC and fixed-offset timezones default to standard-library tzinfo objects'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions, the default `tzinfo` object used to represent UTC was
    `pytz.UTC`. In pandas 2.0, we default to `datetime.timezone.utc` instead. Similarly,
    for timezones represent fixed UTC offsets, we use `datetime.timezone` objects
    instead of `pytz.FixedOffset` objects. See ([GH 34916](https://github.com/pandas-dev/pandas/issues/34916))
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: For timezones that are neither UTC nor fixed offsets, e.g. “US/Pacific”, we
    continue to default to `pytz` objects.
  prefs: []
  type: TYPE_NORMAL
- en: '### Empty DataFrames/Series will now default to have a `RangeIndex`'
  prefs: []
  type: TYPE_NORMAL
- en: Before, constructing an empty (where `data` is `None` or an empty list-like
    argument) [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    without specifying the axes (`index=None`, `columns=None`) would return the axes
    as empty [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with object dtype.
  prefs: []
  type: TYPE_NORMAL
- en: Now, the axes return an empty [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 49572](https://github.com/pandas-dev/pandas/issues/49572)).
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: '### DataFrame to LaTeX has a new render engine'
  prefs: []
  type: TYPE_NORMAL
- en: The existing [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") has been restructured to utilise the extended implementation
    previously available under [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex"). The arguments signature is similar,
    albeit `col_space` has been removed since it is ignored by LaTeX engines. This
    render engine also requires `jinja2` as a dependency which needs to be installed,
    since rendering is based upon jinja2 templates.
  prefs: []
  type: TYPE_NORMAL
- en: 'The pandas latex options below are no longer used and have been removed. The
    generic max rows and columns arguments remain but for this functionality should
    be replaced by the Styler equivalents. The alternative options giving similar
    functionality are indicated below:'
  prefs: []
  type: TYPE_NORMAL
- en: '`display.latex.escape`: replaced with `styler.format.escape`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.longtable`: replaced with `styler.latex.environment`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.multicolumn`, `display.latex.multicolumn_format` and `display.latex.multirow`:
    replaced with `styler.sparse.rows`, `styler.sparse.columns`, `styler.latex.multirow_align`
    and `styler.latex.multicol_align`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.latex.repr`: replaced with `styler.render.repr`,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.max_rows` and `display.max_columns`: replace with `styler.render.max_rows`,
    `styler.render.max_columns` and `styler.render.max_elements`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Note that due to this change some defaults have also changed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`multirow` now defaults to *True*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multirow_align` defaults to *“r”* instead of *“l”*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`multicol_align` defaults to *“r”* instead of *“l”*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`escape` now defaults to *False*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that the behaviour of `_repr_latex_` is also changed. Previously setting
    `display.latex.repr` would generate LaTeX only when using nbconvert for a JupyterNotebook,
    and not when the user is running the notebook. Now the `styler.render.repr` option
    allows control of the specific output within JupyterNotebooks for operations (not
    just on nbconvert). See [GH 39911](https://github.com/pandas-dev/pandas/issues/39911).
  prefs: []
  type: TYPE_NORMAL
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some minimum supported versions of dependencies were updated. If installed,
    we now require:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Required | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| mypy (dev) | 1.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest (dev) | 7.0.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| pytest-xdist (dev) | 2.2.0 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| hypothesis (dev) | 6.34.2 |  | X |'
  prefs: []
  type: TYPE_TB
- en: '| python-dateutil | 2.8.2 | X | X |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022.1 | X | X |'
  prefs: []
  type: TYPE_TB
- en: For [optional libraries](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. The following table lists
    the lowest version per library that is currently being tested throughout the development
    of pandas. Optional libraries below the lowest tested version may still work,
    but are not considered supported.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | Minimum Version | Changed |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| pyarrow | 7.0.0 | X |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.6.1 | X |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 0.6.3 | X |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 0.21.0 | X |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Datetimes are now parsed with a consistent format
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the past, [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") guessed the format for each element independently. This
    was appropriate for some cases where elements had mixed date formats - however,
    it would regularly cause problems when users expected a consistent format but
    the function would switch formats between elements. As of version 2.0.0, parsing
    will use a consistent format, determined by the first non-NA value (unless the
    user specifies a format, in which case that is used).
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: Note that this affects [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") as well.
  prefs: []
  type: TYPE_NORMAL
- en: If you still need to parse dates with inconsistent formats, you can use `format='mixed'`
    (possibly alongside `dayfirst`)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: or, if your formats are all ISO8601 (but possibly not identically-formatted)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The `freq`, `tz`, `nanosecond`, and `unit` keywords in the [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor are now keyword-only ([GH 45307](https://github.com/pandas-dev/pandas/issues/45307),
    [GH 32526](https://github.com/pandas-dev/pandas/issues/32526))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `nanoseconds` greater than 999 or less than 0 in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") now raises a `ValueError` ([GH 48538](https://github.com/pandas-dev/pandas/issues/48538),
    [GH 48255](https://github.com/pandas-dev/pandas/issues/48255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv"):
    specifying an incorrect number of columns with `index_col` of now raises `ParserError`
    instead of `IndexError` when using the c parser.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Default value of `dtype` in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") is changed to `bool` from `uint8` ([GH 45848](https://github.com/pandas-dev/pandas/issues/45848))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype"), [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and `DatetimeIndex.astype()` casting datetime64 data
    to any of “datetime64[s]”, “datetime64[ms]”, “datetime64[us]” will return an object
    with the given resolution instead of coercing back to “datetime64[ns]” ([GH 48928](https://github.com/pandas-dev/pandas/issues/48928))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype"), [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), and `DatetimeIndex.astype()` casting timedelta64 data
    to any of “timedelta64[s]”, “timedelta64[ms]”, “timedelta64[us]” will return an
    object with the given resolution instead of coercing to “float64” dtype ([GH 48963](https://github.com/pandas-dev/pandas/issues/48963))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.astype()`, `TimedeltaIndex.astype()`, `PeriodIndex.astype()`
    [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype"), [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with `datetime64`, `timedelta64` or [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") dtypes no longer allow converting to integer dtypes other
    than “int64”, do `obj.astype(''int64'', copy=False).astype(dtype)` instead ([GH
    49715](https://github.com/pandas-dev/pandas/issues/49715))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") now allows casting from `float64` dtype to datetime-like
    dtypes, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 49660](https://github.com/pandas-dev/pandas/issues/49660))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing data with dtype of “timedelta64[s]”, “timedelta64[ms]”, or “timedelta64[us]”
    to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors will now retain that dtype instead of casting
    to “timedelta64[ns]”; timedelta64 data with lower resolution will be cast to the
    lowest supported resolution “timedelta64[s]” ([GH 49014](https://github.com/pandas-dev/pandas/issues/49014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `dtype` of “timedelta64[s]”, “timedelta64[ms]”, or “timedelta64[us]”
    to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors will now retain that dtype instead of casting
    to “timedelta64[ns]”; passing a dtype with lower resolution for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will be cast to the lowest supported resolution “timedelta64[s]”
    ([GH 49014](https://github.com/pandas-dev/pandas/issues/49014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a `np.datetime64` object with non-nanosecond resolution to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will retain the input resolution if it is “s”, “ms”, “us”,
    or “ns”; otherwise it will be cast to the closest supported resolution ([GH 49008](https://github.com/pandas-dev/pandas/issues/49008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing `datetime64` values with resolution other than nanosecond to [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") will retain the input resolution if it is “s”, “ms”, “us”,
    or “ns”; otherwise it will be cast to the closest supported resolution ([GH 50369](https://github.com/pandas-dev/pandas/issues/50369))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing integer values and a non-nanosecond datetime64 dtype (e.g. “datetime64[s]”)
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") will
    treat the values as multiples of the dtype’s unit, matching the behavior of e.g.
    `Series(np.array(values, dtype="M8[s]"))` ([GH 51092](https://github.com/pandas-dev/pandas/issues/51092))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a string in ISO-8601 format to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") will retain the resolution of the parsed input if it is “s”,
    “ms”, “us”, or “ns”; otherwise it will be cast to the closest supported resolution
    ([GH 49737](https://github.com/pandas-dev/pandas/issues/49737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `other` argument in [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") and [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") now defaults to `no_default` instead of `np.nan` consistent
    with [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"). Entries will be filled with the corresponding NULL value
    (`np.nan` for numpy dtypes, `pd.NA` for extension dtypes). ([GH 49111](https://github.com/pandas-dev/pandas/issues/49111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.quantile()`](../reference/api/pandas.Series.quantile.html#pandas.Series.quantile
    "pandas.Series.quantile") and [`DataFrame.quantile()`](../reference/api/pandas.DataFrame.quantile.html#pandas.DataFrame.quantile
    "pandas.DataFrame.quantile") with [`SparseDtype`](../reference/api/pandas.SparseDtype.html#pandas.SparseDtype
    "pandas.SparseDtype") to retain sparse dtype ([GH 49583](https://github.com/pandas-dev/pandas/issues/49583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When creating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a object-dtype [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") of datetime objects, pandas no longer silently converts the index
    to a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") ([GH 39307](https://github.com/pandas-dev/pandas/issues/39307),
    [GH 23598](https://github.com/pandas-dev/pandas/issues/23598))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.testing.assert_index_equal()`](../reference/api/pandas.testing.assert_index_equal.html#pandas.testing.assert_index_equal
    "pandas.testing.assert_index_equal") with parameter `exact="equiv"` now considers
    two indexes equal when both are either a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") or [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with an `int64` dtype. Previously it meant either a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") or a `Int64Index` ([GH 51098](https://github.com/pandas-dev/pandas/issues/51098))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.unique()`](../reference/api/pandas.Series.unique.html#pandas.Series.unique
    "pandas.Series.unique") with dtype “timedelta64[ns]” or “datetime64[ns]” now returns
    `TimedeltaArray` or `DatetimeArray` instead of `numpy.ndarray` ([GH 49176](https://github.com/pandas-dev/pandas/issues/49176))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") now allow sequences containing both `datetime` objects
    and numeric entries, matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 49037](https://github.com/pandas-dev/pandas/issues/49037),
    [GH 50453](https://github.com/pandas-dev/pandas/issues/50453))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") now only returns `True` for array-likes with
    `dtype=object` when the elements are inferred to be strings ([GH 15585](https://github.com/pandas-dev/pandas/issues/15585))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a sequence containing `datetime` objects and `date` objects to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor will return with `object` dtype instead of `datetime64[ns]`
    dtype, consistent with [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") behavior ([GH 49341](https://github.com/pandas-dev/pandas/issues/49341))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing strings that cannot be parsed as datetimes to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `dtype="datetime64[ns]"` will raise instead of silently
    ignoring the keyword and returning `object` dtype ([GH 24435](https://github.com/pandas-dev/pandas/issues/24435))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing a sequence containing a type that cannot be converted to [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") to [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") or to the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor with `dtype="timedelta64[ns]"` or to [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") now raises `TypeError` instead of `ValueError` ([GH 49525](https://github.com/pandas-dev/pandas/issues/49525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor with sequence containing at least one `NaT` and everything
    else either `None` or `NaN` to infer `datetime64[ns]` dtype instead of `object`,
    matching [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    behavior ([GH 49340](https://github.com/pandas-dev/pandas/issues/49340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") with parameter `index_col` set to `None` (the default) will
    now set the index on the returned [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of a `Int64Index` ([GH 49745](https://github.com/pandas-dev/pandas/issues/49745))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") arithmetic methods when working with object-dtypes, the results
    no longer do type inference on the result of the array operations, use `result.infer_objects(copy=False)`
    to do type inference on the result ([GH 49999](https://github.com/pandas-dev/pandas/issues/49999),
    [GH 49714](https://github.com/pandas-dev/pandas/issues/49714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor with an object-dtype `numpy.ndarray` containing all-`bool`
    values or all-complex values, this will now retain object dtype, consistent with
    the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    behavior ([GH 49594](https://github.com/pandas-dev/pandas/issues/49594))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") from object-dtype containing `bytes` objects to string
    dtypes; this now does `val.decode()` on bytes objects instead of `str(val)`, matching
    [`Index.astype()`](../reference/api/pandas.Index.astype.html#pandas.Index.astype
    "pandas.Index.astype") behavior ([GH 45326](https://github.com/pandas-dev/pandas/issues/45326))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `"None"` to default `na_values` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") ([GH 50286](https://github.com/pandas-dev/pandas/issues/50286))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors when given an integer dtype and floating-point
    data that is not round numbers, this now raises `ValueError` instead of silently
    retaining the float dtype; do `Series(data)` or `DataFrame(data)` to get the old
    behavior, and `Series(data).astype(dtype)` or `DataFrame(data).astype(dtype)`
    to get the specified dtype ([GH 49599](https://github.com/pandas-dev/pandas/issues/49599))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") with `axis=1`, an integer `fill_value`, and homogeneous
    datetime-like dtype, this now fills new columns with integer dtypes instead of
    casting to datetimelike ([GH 49842](https://github.com/pandas-dev/pandas/issues/49842))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Files are now closed when encountering an exception in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 49921](https://github.com/pandas-dev/pandas/issues/49921))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") & [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), where the index will now always be a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex"), when no index is specified. Previously the index would be
    a [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index") with
    dtype `object` if the new DataFrame/Series has length 0 ([GH 49572](https://github.com/pandas-dev/pandas/issues/49572))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.values()`](../reference/api/pandas.DataFrame.values.html#pandas.DataFrame.values
    "pandas.DataFrame.values"), [`DataFrame.to_numpy()`](../reference/api/pandas.DataFrame.to_numpy.html#pandas.DataFrame.to_numpy
    "pandas.DataFrame.to_numpy"), [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs"), [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex"), [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") no longer silently consolidate the underlying arrays;
    do `df = df.copy()` to ensure consolidation ([GH 49356](https://github.com/pandas-dev/pandas/issues/49356))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a new DataFrame using a full slice on both axes with [`loc`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") or [`iloc`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") (thus, `df.loc[:, :]` or `df.iloc[:, :]`) now returns
    a new DataFrame (shallow copy) instead of the original DataFrame, consistent with
    other methods to get a full slice (for example `df.loc[:]` or `df[:]`) ([GH 49469](https://github.com/pandas-dev/pandas/issues/49469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    constructors will now return a shallow copy (i.e. share data, but not attributes)
    when passed a Series and DataFrame, respectively, and with the default of `copy=False`
    (and if no other keyword triggers a copy). Previously, the new Series or DataFrame
    would share the index attribute (e.g. `df.index = ...` would also update the index
    of the parent or child) ([GH 49523](https://github.com/pandas-dev/pandas/issues/49523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow computing `cumprod` for [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object; previously this returned incorrect values ([GH 50246](https://github.com/pandas-dev/pandas/issues/50246))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    objects read from a `HDFStore` file without an index now have a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of an `int64` index ([GH 51076](https://github.com/pandas-dev/pandas/issues/51076))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instantiating an [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    with an numeric numpy dtype with data containing [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") and/or [`NaT`](../reference/api/pandas.NaT.html#pandas.NaT "pandas.NaT")
    now raises a `ValueError`. Previously a `TypeError` was raised ([GH 51050](https://github.com/pandas-dev/pandas/issues/51050))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading a JSON file with duplicate columns using `read_json(orient='split')`
    renames columns to avoid duplicates, as [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and the other readers do ([GH 50370](https://github.com/pandas-dev/pandas/issues/50370))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The levels of the index of the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") returned from `Series.sparse.from_coo` now always have dtype
    `int32`. Previously they had dtype `int64` ([GH 50926](https://github.com/pandas-dev/pandas/issues/50926))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `unit` of either “Y” or “M” will now raise if a sequence
    contains a non-round `float` value, matching the `Timestamp` behavior ([GH 50301](https://github.com/pandas-dev/pandas/issues/50301))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The methods [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round"), `DataFrame.__invert__()`, `Series.__invert__()`, [`DataFrame.swapaxes()`](../reference/api/pandas.DataFrame.swapaxes.html#pandas.DataFrame.swapaxes
    "pandas.DataFrame.swapaxes"), [`DataFrame.first()`](../reference/api/pandas.DataFrame.first.html#pandas.DataFrame.first
    "pandas.DataFrame.first"), [`DataFrame.last()`](../reference/api/pandas.DataFrame.last.html#pandas.DataFrame.last
    "pandas.DataFrame.last"), [`Series.first()`](../reference/api/pandas.Series.first.html#pandas.Series.first
    "pandas.Series.first"), [`Series.last()`](../reference/api/pandas.Series.last.html#pandas.Series.last
    "pandas.Series.last") and [`DataFrame.align()`](../reference/api/pandas.DataFrame.align.html#pandas.DataFrame.align
    "pandas.DataFrame.align") will now always return new objects ([GH 51032](https://github.com/pandas-dev/pandas/issues/51032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    and `DataFrameGroupBy` aggregations (e.g. “sum”) with object-dtype columns no
    longer infer non-object dtypes for their results, explicitly call `result.infer_objects(copy=False)`
    on the result to obtain the old behavior ([GH 51205](https://github.com/pandas-dev/pandas/issues/51205),
    [GH 49603](https://github.com/pandas-dev/pandas/issues/49603))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Division by zero with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") dtypes returns `-inf`, `nan`, or `inf` depending on the numerator,
    instead of raising ([GH 51541](https://github.com/pandas-dev/pandas/issues/51541))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added [`pandas.api.types.is_any_real_numeric_dtype()`](../reference/api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype") to check for real numeric dtypes
    ([GH 51152](https://github.com/pandas-dev/pandas/issues/51152))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_counts()` now returns data with [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.int64` type instead of `"Int64"` type ([GH
    51462](https://github.com/pandas-dev/pandas/issues/51462))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize")
    and [`unique()`](../reference/api/pandas.unique.html#pandas.unique "pandas.unique")
    preserve the original dtype when passed numpy timedelta64 or datetime64 with non-nanosecond
    resolution ([GH 48670](https://github.com/pandas-dev/pandas/issues/48670))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: A current PDEP proposes the deprecation and removal of the keywords `inplace`
    and `copy` for all but a small subset of methods from the pandas API. The current
    discussion takes place at [here](https://github.com/pandas-dev/pandas/pull/51466).
    The keywords won’t be necessary anymore in the context of Copy-on-Write. If this
    proposal is accepted, both keywords would be deprecated in the next release of
    pandas and removed in pandas 3.0.
  prefs: []
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated parsing datetime strings with system-local timezone to `tzlocal`,
    pass a `tz` keyword or explicitly call `tz_localize` instead ([GH 50791](https://github.com/pandas-dev/pandas/issues/50791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated argument `infer_datetime_format` in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), as a strict version of it is now the default ([GH 48621](https://github.com/pandas-dev/pandas/issues/48621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with `unit` when parsing strings, in a future version these
    will be parsed as datetimes (matching unit-less behavior) instead of cast to floats.
    To retain the old behavior, cast strings to numeric types before calling [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") ([GH 50735](https://github.com/pandas-dev/pandas/issues/50735))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `pandas.io.sql.execute()` ([GH 50185](https://github.com/pandas-dev/pandas/issues/50185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_boolean()`](../reference/api/pandas.Index.is_boolean.html#pandas.Index.is_boolean
    "pandas.Index.is_boolean") has been deprecated. Use [`pandas.api.types.is_bool_dtype()`](../reference/api/pandas.api.types.is_bool_dtype.html#pandas.api.types.is_bool_dtype
    "pandas.api.types.is_bool_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_integer()`](../reference/api/pandas.Index.is_integer.html#pandas.Index.is_integer
    "pandas.Index.is_integer") has been deprecated. Use [`pandas.api.types.is_integer_dtype()`](../reference/api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_floating()`](../reference/api/pandas.Index.is_floating.html#pandas.Index.is_floating
    "pandas.Index.is_floating") has been deprecated. Use [`pandas.api.types.is_float_dtype()`](../reference/api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Index.holds_integer()` has been deprecated. Use [`pandas.api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") instead ([GH 50243](https://github.com/pandas-dev/pandas/issues/50243))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_numeric()`](../reference/api/pandas.Index.is_numeric.html#pandas.Index.is_numeric
    "pandas.Index.is_numeric") has been deprecated. Use [`pandas.api.types.is_any_real_numeric_dtype()`](../reference/api/pandas.api.types.is_any_real_numeric_dtype.html#pandas.api.types.is_any_real_numeric_dtype
    "pandas.api.types.is_any_real_numeric_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042),:issue:51152)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_categorical()`](../reference/api/pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical") has been deprecated. Use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_object()`](../reference/api/pandas.Index.is_object.html#pandas.Index.is_object
    "pandas.Index.is_object") has been deprecated. Use [`pandas.api.types.is_object_dtype()`](../reference/api/pandas.api.types.is_object_dtype.html#pandas.api.types.is_object_dtype
    "pandas.api.types.is_object_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Index.is_interval()`](../reference/api/pandas.Index.is_interval.html#pandas.Index.is_interval
    "pandas.Index.is_interval") has been deprecated. Use [`pandas.api.types.is_interval_dtype()`](../reference/api/pandas.api.types.is_interval_dtype.html#pandas.api.types.is_interval_dtype
    "pandas.api.types.is_interval_dtype") instead ([GH 50042](https://github.com/pandas-dev/pandas/issues/50042))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated argument `date_parser` in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf"), and [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") in favour of `date_format` ([GH 50601](https://github.com/pandas-dev/pandas/issues/50601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `all` and `any` reductions with `datetime64` and [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtypes, use e.g. `(obj != pd.Timestamp(0), tz=obj.tz).all()`
    instead ([GH 34479](https://github.com/pandas-dev/pandas/issues/34479))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated unused arguments `*args` and `**kwargs` in `Resampler` ([GH 50977](https://github.com/pandas-dev/pandas/issues/50977))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated calling `float` or `int` on a single element [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") to return a `float` or `int` respectively. Extract the element
    before calling `float` or `int` instead ([GH 51101](https://github.com/pandas-dev/pandas/issues/51101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.groups()`, use `Groupby.groups()` instead ([GH 51182](https://github.com/pandas-dev/pandas/issues/51182))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.grouper()`, use `Groupby.grouper()` instead ([GH 51182](https://github.com/pandas-dev/pandas/issues/51182))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.obj()`, use `Groupby.obj()` instead ([GH 51206](https://github.com/pandas-dev/pandas/issues/51206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.indexer()`, use `Resampler.indexer()` instead ([GH 51206](https://github.com/pandas-dev/pandas/issues/51206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Grouper.ax()`, use `Resampler.ax()` instead ([GH 51206](https://github.com/pandas-dev/pandas/issues/51206))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated keyword `use_nullable_dtypes` in [`read_parquet()`](../reference/api/pandas.read_parquet.html#pandas.read_parquet
    "pandas.read_parquet"), use `dtype_backend` instead ([GH 51853](https://github.com/pandas-dev/pandas/issues/51853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.pad()`](../reference/api/pandas.Series.pad.html#pandas.Series.pad
    "pandas.Series.pad") in favor of [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill") ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.backfill()`](../reference/api/pandas.Series.backfill.html#pandas.Series.backfill
    "pandas.Series.backfill") in favor of [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill") ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.pad()`](../reference/api/pandas.DataFrame.pad.html#pandas.DataFrame.pad
    "pandas.DataFrame.pad") in favor of [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill") ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrame.backfill()`](../reference/api/pandas.DataFrame.backfill.html#pandas.DataFrame.backfill
    "pandas.DataFrame.backfill") in favor of [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") ([GH 33396](https://github.com/pandas-dev/pandas/issues/33396))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `close()`. Use `StataReader` as a context manager instead ([GH 49228](https://github.com/pandas-dev/pandas/issues/49228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated producing a scalar when iterating over a `DataFrameGroupBy` or a
    `SeriesGroupBy` that has been grouped by a `level` parameter that is a list of
    length 1; a tuple of length one will be returned instead ([GH 51583](https://github.com/pandas-dev/pandas/issues/51583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Removal of prior version deprecations/changes'
  prefs: []
  type: TYPE_NORMAL
- en: Removed `Int64Index`, `UInt64Index` and `Float64Index`. See also [here](#whatsnew-200-enhancements-index-can-hold-numpy-numeric-dtypes)
    for more information ([GH 42717](https://github.com/pandas-dev/pandas/issues/42717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Timestamp.freq`, `Timestamp.freqstr` and argument `freq`
    from the [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor and [`Timestamp.fromordinal()`](../reference/api/pandas.Timestamp.fromordinal.html#pandas.Timestamp.fromordinal
    "pandas.Timestamp.fromordinal") ([GH 14146](https://github.com/pandas-dev/pandas/issues/14146))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `CategoricalBlock`, `Block.is_categorical()`, require datetime64
    and timedelta64 values to be wrapped in `DatetimeArray` or `TimedeltaArray` before
    passing to `Block.make_block_same_class()`, require `DatetimeTZBlock.values` to
    have the correct ndim when passing to the `BlockManager` constructor, and removed
    the “fastpath” keyword from the `SingleBlockManager` constructor ([GH 40226](https://github.com/pandas-dev/pandas/issues/40226),
    [GH 40571](https://github.com/pandas-dev/pandas/issues/40571))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated global option `use_inf_as_null` in favor of `use_inf_as_na`
    ([GH 17126](https://github.com/pandas-dev/pandas/issues/17126))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated module `pandas.core.index` ([GH 30193](https://github.com/pandas-dev/pandas/issues/30193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated alias `pandas.core.tools.datetimes.to_time`, import the function
    directly from `pandas.core.tools.times` instead ([GH 34145](https://github.com/pandas-dev/pandas/issues/34145))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated alias `pandas.io.json.json_normalize`, import the function
    directly from `pandas.json_normalize` instead ([GH 27615](https://github.com/pandas-dev/pandas/issues/27615))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.to_dense()`, use `np.asarray(cat)` instead ([GH
    32639](https://github.com/pandas-dev/pandas/issues/32639))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.take_nd()` ([GH 27745](https://github.com/pandas-dev/pandas/issues/27745))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.mode()`, use `Series(cat).mode()` instead ([GH
    45033](https://github.com/pandas-dev/pandas/issues/45033))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.is_dtype_equal()` and `CategoricalIndex.is_dtype_equal()`
    ([GH 37545](https://github.com/pandas-dev/pandas/issues/37545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `CategoricalIndex.take_nd()` ([GH 30702](https://github.com/pandas-dev/pandas/issues/30702))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.is_type_compatible()` ([GH 42113](https://github.com/pandas-dev/pandas/issues/42113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.is_mixed()`, check `index.inferred_type` directly
    instead ([GH 32922](https://github.com/pandas-dev/pandas/issues/32922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `pandas.api.types.is_categorical()`; use [`pandas.api.types.is_categorical_dtype()`](../reference/api/pandas.api.types.is_categorical_dtype.html#pandas.api.types.is_categorical_dtype
    "pandas.api.types.is_categorical_dtype") instead ([GH 33385](https://github.com/pandas-dev/pandas/issues/33385))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.asi8()` ([GH 37877](https://github.com/pandas-dev/pandas/issues/37877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation changing behavior when passing `datetime64[ns]` dtype data
    and timezone-aware dtype to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), interpreting the values as wall-times instead of UTC times,
    matching [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") behavior ([GH 41662](https://github.com/pandas-dev/pandas/issues/41662))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation changing behavior when applying a numpy ufunc on multiple
    non-aligned (on the index or columns) [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that will now align the inputs first ([GH 39239](https://github.com/pandas-dev/pandas/issues/39239))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `DataFrame._AXIS_NUMBERS()`, `DataFrame._AXIS_NAMES()`, `Series._AXIS_NUMBERS()`,
    `Series._AXIS_NAMES()` ([GH 33637](https://github.com/pandas-dev/pandas/issues/33637))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.to_native_types()`, use `obj.astype(str)` instead
    ([GH 36418](https://github.com/pandas-dev/pandas/issues/36418))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Series.iteritems()`, `DataFrame.iteritems()`, use `obj.items`
    instead ([GH 45321](https://github.com/pandas-dev/pandas/issues/45321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `DataFrame.lookup()` ([GH 35224](https://github.com/pandas-dev/pandas/issues/35224))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Series.append()`, `DataFrame.append()`, use [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") instead ([GH 35407](https://github.com/pandas-dev/pandas/issues/35407))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Series.iteritems()`, `DataFrame.iteritems()` and `HDFStore.iteritems()`
    use `obj.items` instead ([GH 45321](https://github.com/pandas-dev/pandas/issues/45321))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `DatetimeIndex.union_many()` ([GH 45018](https://github.com/pandas-dev/pandas/issues/45018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `weekofyear` and `week` attributes of `DatetimeArray`, [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and `dt` accessor in favor of `isocalendar().week` ([GH
    33595](https://github.com/pandas-dev/pandas/issues/33595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `RangeIndex._start()`, `RangeIndex._stop()`, `RangeIndex._step()`,
    use `start`, `stop`, `step` instead ([GH 30482](https://github.com/pandas-dev/pandas/issues/30482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `DatetimeIndex.to_perioddelta()`, Use `dtindex - dtindex.to_period(freq).to_timestamp()`
    instead ([GH 34853](https://github.com/pandas-dev/pandas/issues/34853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Styler.hide_index()` and `Styler.hide_columns()` ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Styler.set_na_rep()` and `Styler.set_precision()` ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Styler.where()` ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Styler.render()` ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated argument `col_space` in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") ([GH 47970](https://github.com/pandas-dev/pandas/issues/47970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated argument `null_color` in [`Styler.highlight_null()`](../reference/api/pandas.io.formats.style.Styler.highlight_null.html#pandas.io.formats.style.Styler.highlight_null
    "pandas.io.formats.style.Styler.highlight_null") ([GH 49397](https://github.com/pandas-dev/pandas/issues/49397))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated argument `check_less_precise` in `testing.assert_frame_equal()`,
    `testing.assert_extension_array_equal()`, `testing.assert_series_equal()`, `testing.assert_index_equal()`
    ([GH 30562](https://github.com/pandas-dev/pandas/issues/30562))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `null_counts` argument in [`DataFrame.info()`](../reference/api/pandas.DataFrame.info.html#pandas.DataFrame.info
    "pandas.DataFrame.info"). Use `show_counts` instead ([GH 37999](https://github.com/pandas-dev/pandas/issues/37999))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.is_monotonic()`, and `Series.is_monotonic()`; use
    `obj.is_monotonic_increasing` instead ([GH 45422](https://github.com/pandas-dev/pandas/issues/45422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Index.is_all_dates()` ([GH 36697](https://github.com/pandas-dev/pandas/issues/36697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing passing a timezone-aware [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") and `dtype="datetime64[ns]"` to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors ([GH 41555](https://github.com/pandas-dev/pandas/issues/41555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing passing a sequence of timezone-aware values
    and `dtype="datetime64[ns]"` to to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors ([GH 41555](https://github.com/pandas-dev/pandas/issues/41555))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Enforced deprecation disallowing `numpy.ma.mrecords.MaskedRecords` in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor; pass `"{name: data[name] for name in data.dtype.names}`
    instead ([GH 40363](https://github.com/pandas-dev/pandas/issues/40363))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing unit-less “datetime64” dtype in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") ([GH 47844](https://github.com/pandas-dev/pandas/issues/47844))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing using `.astype` to convert a `datetime64[ns]`
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    or [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") to timezone-aware dtype, use `obj.tz_localize` or `ser.dt.tz_localize`
    instead ([GH 39258](https://github.com/pandas-dev/pandas/issues/39258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing using `.astype` to convert a timezone-aware
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    or [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") to timezone-naive `datetime64[ns]` dtype, use `obj.tz_localize(None)`
    or `obj.tz_convert("UTC").tz_localize(None)` instead ([GH 39258](https://github.com/pandas-dev/pandas/issues/39258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing passing non boolean argument to sort in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") ([GH 44629](https://github.com/pandas-dev/pandas/issues/44629))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed Date parser functions `parse_date_time()`, `parse_date_fields()`, `parse_all_fields()`
    and `generic_parser()` ([GH 24518](https://github.com/pandas-dev/pandas/issues/24518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `index` from the `core.arrays.SparseArray` constructor ([GH
    43523](https://github.com/pandas-dev/pandas/issues/43523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove argument `squeeze` from [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") ([GH 32380](https://github.com/pandas-dev/pandas/issues/32380))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `apply`, `apply_index`, `__call__`, `onOffset`, and `isAnchored`
    attributes from `DateOffset` ([GH 34171](https://github.com/pandas-dev/pandas/issues/34171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `keep_tz` argument in [`DatetimeIndex.to_series()`](../reference/api/pandas.DatetimeIndex.to_series.html#pandas.DatetimeIndex.to_series
    "pandas.DatetimeIndex.to_series") ([GH 29731](https://github.com/pandas-dev/pandas/issues/29731))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove arguments `names` and `dtype` from [`Index.copy()`](../reference/api/pandas.Index.copy.html#pandas.Index.copy
    "pandas.Index.copy") and `levels` and `codes` from [`MultiIndex.copy()`](../reference/api/pandas.MultiIndex.copy.html#pandas.MultiIndex.copy
    "pandas.MultiIndex.copy") ([GH 35853](https://github.com/pandas-dev/pandas/issues/35853),
    [GH 36685](https://github.com/pandas-dev/pandas/issues/36685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove argument `inplace` from [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") and [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") ([GH 35626](https://github.com/pandas-dev/pandas/issues/35626))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed arguments `verbose` and `encoding` from [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") and [`Series.to_excel()`](../reference/api/pandas.Series.to_excel.html#pandas.Series.to_excel
    "pandas.Series.to_excel") ([GH 47912](https://github.com/pandas-dev/pandas/issues/47912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `line_terminator` from [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") and [`Series.to_csv()`](../reference/api/pandas.Series.to_csv.html#pandas.Series.to_csv
    "pandas.Series.to_csv"), use `lineterminator` instead ([GH 45302](https://github.com/pandas-dev/pandas/issues/45302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `inplace` from [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") and [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis"), use `obj = obj.set_axis(..., copy=False)` instead ([GH
    48130](https://github.com/pandas-dev/pandas/issues/48130))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing positional arguments to [`MultiIndex.set_levels()`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") and [`MultiIndex.set_codes()`](../reference/api/pandas.MultiIndex.set_codes.html#pandas.MultiIndex.set_codes
    "pandas.MultiIndex.set_codes") ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow parsing to Timedelta strings with components with units “Y”, “y”, or
    “M”, as these do not represent unambiguous durations ([GH 36838](https://github.com/pandas-dev/pandas/issues/36838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `MultiIndex.is_lexsorted()` and `MultiIndex.lexsort_depth()` ([GH 38701](https://github.com/pandas-dev/pandas/issues/38701))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `how` from `PeriodIndex.astype()`, use [`PeriodIndex.to_timestamp()`](../reference/api/pandas.PeriodIndex.to_timestamp.html#pandas.PeriodIndex.to_timestamp
    "pandas.PeriodIndex.to_timestamp") instead ([GH 37982](https://github.com/pandas-dev/pandas/issues/37982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `try_cast` from [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"), [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") ([GH 38836](https://github.com/pandas-dev/pandas/issues/38836))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `tz` from [`Period.to_timestamp()`](../reference/api/pandas.Period.to_timestamp.html#pandas.Period.to_timestamp
    "pandas.Period.to_timestamp"), use `obj.to_timestamp(...).tz_localize(tz)` instead
    ([GH 34522](https://github.com/pandas-dev/pandas/issues/34522))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `sort_columns` in [`DataFrame.plot()`](../reference/api/pandas.DataFrame.plot.html#pandas.DataFrame.plot
    "pandas.DataFrame.plot") and [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") ([GH 47563](https://github.com/pandas-dev/pandas/issues/47563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `is_copy` from [`DataFrame.take()`](../reference/api/pandas.DataFrame.take.html#pandas.DataFrame.take
    "pandas.DataFrame.take") and [`Series.take()`](../reference/api/pandas.Series.take.html#pandas.Series.take
    "pandas.Series.take") ([GH 30615](https://github.com/pandas-dev/pandas/issues/30615))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `kind` from [`Index.get_slice_bound()`](../reference/api/pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound"), [`Index.slice_indexer()`](../reference/api/pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer") and [`Index.slice_locs()`](../reference/api/pandas.Index.slice_locs.html#pandas.Index.slice_locs
    "pandas.Index.slice_locs") ([GH 41378](https://github.com/pandas-dev/pandas/issues/41378))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed arguments `prefix`, `squeeze`, `error_bad_lines` and `warn_bad_lines`
    from [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    ([GH 40413](https://github.com/pandas-dev/pandas/issues/40413), [GH 43427](https://github.com/pandas-dev/pandas/issues/43427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed arguments `squeeze` from [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 43427](https://github.com/pandas-dev/pandas/issues/43427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `datetime_is_numeric` from [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") and [`Series.describe()`](../reference/api/pandas.Series.describe.html#pandas.Series.describe
    "pandas.Series.describe") as datetime data will always be summarized as numeric
    data ([GH 34798](https://github.com/pandas-dev/pandas/issues/34798))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing list `key` to [`Series.xs()`](../reference/api/pandas.Series.xs.html#pandas.Series.xs
    "pandas.Series.xs") and [`DataFrame.xs()`](../reference/api/pandas.DataFrame.xs.html#pandas.DataFrame.xs
    "pandas.DataFrame.xs"), pass a tuple instead ([GH 41789](https://github.com/pandas-dev/pandas/issues/41789))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow subclass-specific keywords (e.g. “freq”, “tz”, “names”, “closed”) in
    the [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    constructor ([GH 38597](https://github.com/pandas-dev/pandas/issues/38597))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `inplace` from `Categorical.remove_unused_categories()` ([GH
    37918](https://github.com/pandas-dev/pandas/issues/37918))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-round floats to [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with `unit="M"` or `unit="Y"` ([GH 47266](https://github.com/pandas-dev/pandas/issues/47266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove keywords `convert_float` and `mangle_dupe_cols` from [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 41176](https://github.com/pandas-dev/pandas/issues/41176))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove keyword `mangle_dupe_cols` from [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") ([GH 48137](https://github.com/pandas-dev/pandas/issues/48137))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `errors` keyword from [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where"), [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") and [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") ([GH 47728](https://github.com/pandas-dev/pandas/issues/47728))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") except `io` and `sheet_name` ([GH 34418](https://github.com/pandas-dev/pandas/issues/34418))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.drop()`](../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") and [`Series.drop()`](../reference/api/pandas.Series.drop.html#pandas.Series.drop
    "pandas.Series.drop") except `labels` ([GH 41486](https://github.com/pandas-dev/pandas/issues/41486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") and [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") except `value` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to `StringMethods.split()` and `StringMethods.rsplit()`
    except for `pat` ([GH 47448](https://github.com/pandas-dev/pandas/issues/47448))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.set_index()`](../reference/api/pandas.DataFrame.set_index.html#pandas.DataFrame.set_index
    "pandas.DataFrame.set_index") except `keys` ([GH 41495](https://github.com/pandas-dev/pandas/issues/41495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to `Resampler.interpolate()` except `method`
    ([GH 41699](https://github.com/pandas-dev/pandas/issues/41699))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.reset_index()`](../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index") and [`Series.reset_index()`](../reference/api/pandas.Series.reset_index.html#pandas.Series.reset_index
    "pandas.Series.reset_index") except `level` ([GH 41496](https://github.com/pandas-dev/pandas/issues/41496))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.dropna()`](../reference/api/pandas.DataFrame.dropna.html#pandas.DataFrame.dropna
    "pandas.DataFrame.dropna") and [`Series.dropna()`](../reference/api/pandas.Series.dropna.html#pandas.Series.dropna
    "pandas.Series.dropna") ([GH 41504](https://github.com/pandas-dev/pandas/issues/41504))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to `ExtensionArray.argsort()` ([GH 46134](https://github.com/pandas-dev/pandas/issues/46134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to `Categorical.sort_values()` ([GH 47618](https://github.com/pandas-dev/pandas/issues/47618))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Index.drop_duplicates()`](../reference/api/pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates") and [`Series.drop_duplicates()`](../reference/api/pandas.Series.drop_duplicates.html#pandas.Series.drop_duplicates
    "pandas.Series.drop_duplicates") ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.drop_duplicates()`](../reference/api/pandas.DataFrame.drop_duplicates.html#pandas.DataFrame.drop_duplicates
    "pandas.DataFrame.drop_duplicates") except for `subset` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index") ([GH 41506](https://github.com/pandas-dev/pandas/issues/41506))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") and [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") except for `method` ([GH 41510](https://github.com/pandas-dev/pandas/issues/41510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`Series.any()`](../reference/api/pandas.Series.any.html#pandas.Series.any
    "pandas.Series.any") ([GH 44896](https://github.com/pandas-dev/pandas/issues/44896))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Index.set_names()`](../reference/api/pandas.Index.set_names.html#pandas.Index.set_names
    "pandas.Index.set_names") except for `names` ([GH 41551](https://github.com/pandas-dev/pandas/issues/41551))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join") except for `other` ([GH 46518](https://github.com/pandas-dev/pandas/issues/46518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") except for `objs` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot") except for `data` ([GH 48301](https://github.com/pandas-dev/pandas/issues/48301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") ([GH 48301](https://github.com/pandas-dev/pandas/issues/48301))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") except for `io` ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") except for `path_or_buf` ([GH 27573](https://github.com/pandas-dev/pandas/issues/27573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") except for `filepath_or_buffer` ([GH 47154](https://github.com/pandas-dev/pandas/issues/47154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") except for `filepath_or_buffer` ([GH 48128](https://github.com/pandas-dev/pandas/issues/48128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") except `filepath_or_buffer` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") except `filepath_or_buffer` ([GH 41485](https://github.com/pandas-dev/pandas/issues/41485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_fwf()`](../reference/api/pandas.read_fwf.html#pandas.read_fwf
    "pandas.read_fwf") except `filepath_or_buffer` ([GH 44710](https://github.com/pandas-dev/pandas/issues/44710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") except for `path_or_buffer` ([GH 45133](https://github.com/pandas-dev/pandas/issues/45133))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask") and [`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask") except `cond` and `other` ([GH 41580](https://github.com/pandas-dev/pandas/issues/41580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") except for `path` ([GH 48128](https://github.com/pandas-dev/pandas/issues/48128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where") and [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where") except for `cond` and `other` ([GH 41523](https://github.com/pandas-dev/pandas/issues/41523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.set_axis()`](../reference/api/pandas.Series.set_axis.html#pandas.Series.set_axis
    "pandas.Series.set_axis") and [`DataFrame.set_axis()`](../reference/api/pandas.DataFrame.set_axis.html#pandas.DataFrame.set_axis
    "pandas.DataFrame.set_axis") except for `labels` ([GH 41491](https://github.com/pandas-dev/pandas/issues/41491))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.rename_axis()`](../reference/api/pandas.Series.rename_axis.html#pandas.Series.rename_axis
    "pandas.Series.rename_axis") and [`DataFrame.rename_axis()`](../reference/api/pandas.DataFrame.rename_axis.html#pandas.DataFrame.rename_axis
    "pandas.DataFrame.rename_axis") except for `mapper` ([GH 47587](https://github.com/pandas-dev/pandas/issues/47587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip") and [`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip") except `lower` and `upper` ([GH 41511](https://github.com/pandas-dev/pandas/issues/41511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") and [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill") ([GH 41508](https://github.com/pandas-dev/pandas/issues/41508))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace"), [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") except for `to_replace` and `value` ([GH 47587](https://github.com/pandas-dev/pandas/issues/47587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") except for `by` ([GH 41505](https://github.com/pandas-dev/pandas/issues/41505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`Series.sort_values()`](../reference/api/pandas.Series.sort_values.html#pandas.Series.sort_values
    "pandas.Series.sort_values") ([GH 41505](https://github.com/pandas-dev/pandas/issues/41505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing non-keyword arguments to [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") except for `labels` ([GH 17966](https://github.com/pandas-dev/pandas/issues/17966))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex") with non-unique [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") objects ([GH 42568](https://github.com/pandas-dev/pandas/issues/42568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallowed constructing [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") with scalar `data` ([GH 38433](https://github.com/pandas-dev/pandas/issues/38433))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallowed constructing [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") without passing `data` ([GH 38944](https://github.com/pandas-dev/pandas/issues/38944))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Rolling.validate()`, `Expanding.validate()`, and `ExponentialMovingWindow.validate()`
    ([GH 43665](https://github.com/pandas-dev/pandas/issues/43665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Rolling.win_type` returning `"freq"` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Rolling.is_datetimelike` ([GH 38963](https://github.com/pandas-dev/pandas/issues/38963))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `level` keyword in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") aggregations; use `groupby` instead ([GH 39983](https://github.com/pandas-dev/pandas/issues/39983))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Timedelta.delta()`, `Timedelta.is_populated()`, and `Timedelta.freq`
    ([GH 46430](https://github.com/pandas-dev/pandas/issues/46430), [GH 46476](https://github.com/pandas-dev/pandas/issues/46476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `NaT.freq` ([GH 45071](https://github.com/pandas-dev/pandas/issues/45071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated `Categorical.replace()`, use [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") instead ([GH 44929](https://github.com/pandas-dev/pandas/issues/44929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `numeric_only` keyword from `Categorical.min()` and `Categorical.max()`
    in favor of `skipna` ([GH 48821](https://github.com/pandas-dev/pandas/issues/48821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.median()`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median") and [`DataFrame.mean()`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean") with `numeric_only=None` to not exclude datetime-like
    columns THIS NOTE WILL BE IRRELEVANT ONCE `numeric_only=None` DEPRECATION IS ENFORCED
    ([GH 29941](https://github.com/pandas-dev/pandas/issues/29941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `is_extension_type()` in favor of `is_extension_array_dtype()` ([GH
    29457](https://github.com/pandas-dev/pandas/issues/29457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `.ExponentialMovingWindow.vol` ([GH 39220](https://github.com/pandas-dev/pandas/issues/39220))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index.get_value()` and `Index.set_value()` ([GH 33907](https://github.com/pandas-dev/pandas/issues/33907),
    [GH 28621](https://github.com/pandas-dev/pandas/issues/28621))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.slice_shift()` and `DataFrame.slice_shift()` ([GH 37601](https://github.com/pandas-dev/pandas/issues/37601))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `DataFrameGroupBy.pad()` and `DataFrameGroupBy.backfill()` ([GH 45076](https://github.com/pandas-dev/pandas/issues/45076))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `numpy` argument from [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") ([GH 30636](https://github.com/pandas-dev/pandas/issues/30636))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow passing abbreviations for `orient` in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") ([GH 32516](https://github.com/pandas-dev/pandas/issues/32516))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disallow partial slicing on an non-monotonic [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with keys which are not in Index. This now raises a `KeyError`
    ([GH 18531](https://github.com/pandas-dev/pandas/issues/18531))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `get_offset` in favor of `to_offset()` ([GH 30340](https://github.com/pandas-dev/pandas/issues/30340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `warn` keyword in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") ([GH 45947](https://github.com/pandas-dev/pandas/issues/45947))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `include_start` and `include_end` arguments in [`DataFrame.between_time()`](../reference/api/pandas.DataFrame.between_time.html#pandas.DataFrame.between_time
    "pandas.DataFrame.between_time") in favor of `inclusive` ([GH 43248](https://github.com/pandas-dev/pandas/issues/43248))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `closed` argument in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range") and [`bdate_range()`](../reference/api/pandas.bdate_range.html#pandas.bdate_range
    "pandas.bdate_range") in favor of `inclusive` argument ([GH 40245](https://github.com/pandas-dev/pandas/issues/40245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `center` keyword in [`DataFrame.expanding()`](../reference/api/pandas.DataFrame.expanding.html#pandas.DataFrame.expanding
    "pandas.DataFrame.expanding") ([GH 20647](https://github.com/pandas-dev/pandas/issues/20647))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `truediv` keyword from [`eval()`](../reference/api/pandas.eval.html#pandas.eval
    "pandas.eval") ([GH 29812](https://github.com/pandas-dev/pandas/issues/29812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `method` and `tolerance` arguments in [`Index.get_loc()`](../reference/api/pandas.Index.get_loc.html#pandas.Index.get_loc
    "pandas.Index.get_loc"). Use `index.get_indexer([label], method=..., tolerance=...)`
    instead ([GH 42269](https://github.com/pandas-dev/pandas/issues/42269))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `pandas.datetime` submodule ([GH 30489](https://github.com/pandas-dev/pandas/issues/30489))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `pandas.np` submodule ([GH 30296](https://github.com/pandas-dev/pandas/issues/30296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.util.testing` in favor of `pandas.testing` ([GH 30745](https://github.com/pandas-dev/pandas/issues/30745))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.str.__iter__()` ([GH 28277](https://github.com/pandas-dev/pandas/issues/28277))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.SparseArray` in favor of [`arrays.SparseArray`](../reference/api/pandas.arrays.SparseArray.html#pandas.arrays.SparseArray
    "pandas.arrays.SparseArray") ([GH 30642](https://github.com/pandas-dev/pandas/issues/30642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `pandas.SparseSeries` and `pandas.SparseDataFrame`, including pickle
    support. ([GH 30642](https://github.com/pandas-dev/pandas/issues/30642))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing passing an integer `fill_value` to [`DataFrame.shift()`](../reference/api/pandas.DataFrame.shift.html#pandas.DataFrame.shift
    "pandas.DataFrame.shift") and `Series.shift`()` with datetime64, timedelta64,
    or period dtypes ([GH 32591](https://github.com/pandas-dev/pandas/issues/32591))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing a string column label into `times` in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") ([GH 43265](https://github.com/pandas-dev/pandas/issues/43265))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing passing `True` and `False` into `inclusive` in [`Series.between()`](../reference/api/pandas.Series.between.html#pandas.Series.between
    "pandas.Series.between") in favor of `"both"` and `"neither"` respectively ([GH
    40628](https://github.com/pandas-dev/pandas/issues/40628))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing using `usecols` with out of bounds indices for `read_csv`
    with `engine="c"` ([GH 25623](https://github.com/pandas-dev/pandas/issues/25623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing the use of `**kwargs` in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter"); use the keyword argument `engine_kwargs` instead ([GH 40430](https://github.com/pandas-dev/pandas/issues/40430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing a tuple of column labels into `DataFrameGroupBy.__getitem__()`
    ([GH 30546](https://github.com/pandas-dev/pandas/issues/30546))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing missing labels when indexing with a sequence of labels
    on a level of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"). This now raises a `KeyError` ([GH 42351](https://github.com/pandas-dev/pandas/issues/42351))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing setting values with `.loc` using a positional slice. Use
    `.loc` with labels or `.iloc` with positions instead ([GH 31840](https://github.com/pandas-dev/pandas/issues/31840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing positional indexing with a `float` key even if that key
    is a round number, manually cast to integer instead ([GH 34193](https://github.com/pandas-dev/pandas/issues/34193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing using a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") indexer with `.iloc`, use `.loc` instead for automatic alignment
    ([GH 39022](https://github.com/pandas-dev/pandas/issues/39022))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing `set` or `dict` indexers in `__getitem__` and `__setitem__`
    methods ([GH 42825](https://github.com/pandas-dev/pandas/issues/42825))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing indexing on a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") or positional indexing on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") producing multi-dimensional objects e.g. `obj[:, None]`, convert
    to numpy before indexing instead ([GH 35141](https://github.com/pandas-dev/pandas/issues/35141))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing `dict` or `set` objects in `suffixes` in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") ([GH 34810](https://github.com/pandas-dev/pandas/issues/34810))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") to produce duplicated columns through the `suffixes` keyword and
    already existing columns ([GH 22818](https://github.com/pandas-dev/pandas/issues/22818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing using [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") or `join()` on a different number of levels ([GH 34862](https://github.com/pandas-dev/pandas/issues/34862))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing `value_name` argument in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") to match an element in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") columns ([GH 35003](https://github.com/pandas-dev/pandas/issues/35003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing passing `showindex` into `**kwargs` in [`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") and [`Series.to_markdown()`](../reference/api/pandas.Series.to_markdown.html#pandas.Series.to_markdown
    "pandas.Series.to_markdown") in favor of `index` ([GH 33091](https://github.com/pandas-dev/pandas/issues/33091))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed setting Categorical._codes directly ([GH 41429](https://github.com/pandas-dev/pandas/issues/41429))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed setting Categorical.categories directly ([GH 47834](https://github.com/pandas-dev/pandas/issues/47834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed argument `inplace` from `Categorical.add_categories()`, `Categorical.remove_categories()`,
    `Categorical.set_categories()`, `Categorical.rename_categories()`, `Categorical.reorder_categories()`,
    `Categorical.set_ordered()`, `Categorical.as_ordered()`, `Categorical.as_unordered()`
    ([GH 37981](https://github.com/pandas-dev/pandas/issues/37981), [GH 41118](https://github.com/pandas-dev/pandas/issues/41118),
    [GH 41133](https://github.com/pandas-dev/pandas/issues/41133), [GH 47834](https://github.com/pandas-dev/pandas/issues/47834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced `Rolling.count()` with `min_periods=None` to default to the size of
    the window ([GH 31302](https://github.com/pandas-dev/pandas/issues/31302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Renamed `fname` to `path` in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet"), [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") and [`DataFrame.to_feather()`](../reference/api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather") ([GH 30338](https://github.com/pandas-dev/pandas/issues/30338))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced disallowing indexing a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a single item list with a slice (e.g. `ser[[slice(0, 2)]]`).
    Either convert the list to tuple, or pass the slice directly instead ([GH 31333](https://github.com/pandas-dev/pandas/issues/31333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior indexing on a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") index using a string indexer, previously this operated
    as a slice on rows, now it operates like any other column key; use `frame.loc[key]`
    for the old behavior ([GH 36179](https://github.com/pandas-dev/pandas/issues/36179))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced the `display.max_colwidth` option to not accept negative integers ([GH
    31569](https://github.com/pandas-dev/pandas/issues/31569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the `display.column_space` option in favor of `df.to_string(col_space=...)`
    ([GH 47280](https://github.com/pandas-dev/pandas/issues/47280))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated method `mad` from pandas classes ([GH 11787](https://github.com/pandas-dev/pandas/issues/11787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated method `tshift` from pandas classes ([GH 11631](https://github.com/pandas-dev/pandas/issues/11631))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of empty data passed into [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"); the default dtype will be `object` instead of `float64` ([GH
    29405](https://github.com/pandas-dev/pandas/issues/29405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of `DatetimeIndex.union()`, `DatetimeIndex.intersection()`,
    and `DatetimeIndex.symmetric_difference()` with mismatched timezones to convert
    to UTC instead of casting to object dtype ([GH 39328](https://github.com/pandas-dev/pandas/issues/39328))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with argument “now” with `utc=False` to match `Timestamp("now")`
    ([GH 18705](https://github.com/pandas-dev/pandas/issues/18705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of indexing on a timezone-aware [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with a timezone-naive `datetime` object or vice-versa;
    these now behave like any other non-comparable type by raising `KeyError` ([GH
    36148](https://github.com/pandas-dev/pandas/issues/36148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of [`Index.reindex()`](../reference/api/pandas.Index.reindex.html#pandas.Index.reindex
    "pandas.Index.reindex"), [`Series.reindex()`](../reference/api/pandas.Series.reindex.html#pandas.Series.reindex
    "pandas.Series.reindex"), and [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") with a `datetime64` dtype and a `datetime.date` object
    for `fill_value`; these are no longer considered equivalent to `datetime.datetime`
    objects so the reindex casts to object dtype ([GH 39767](https://github.com/pandas-dev/pandas/issues/39767))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of `SparseArray.astype()` when given a dtype that is not explicitly
    `SparseDtype`, cast to the exact requested dtype rather than silently using a
    `SparseDtype` instead ([GH 34457](https://github.com/pandas-dev/pandas/issues/34457))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index.ravel()`](../reference/api/pandas.Index.ravel.html#pandas.Index.ravel
    "pandas.Index.ravel") to return a view on the original [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") instead of a `np.ndarray` ([GH 36900](https://github.com/pandas-dev/pandas/issues/36900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.to_frame()`](../reference/api/pandas.Series.to_frame.html#pandas.Series.to_frame
    "pandas.Series.to_frame") and [`Index.to_frame()`](../reference/api/pandas.Index.to_frame.html#pandas.Index.to_frame
    "pandas.Index.to_frame") with explicit `name=None` to use `None` for the column
    name instead of the index’s name or default `0` ([GH 45523](https://github.com/pandas-dev/pandas/issues/45523))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with one array of `bool`-dtype and another of integer dtype,
    this now returns `object` dtype instead of integer dtype; explicitly cast the
    bool object to integer before concatenating to get the old behavior ([GH 45101](https://github.com/pandas-dev/pandas/issues/45101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor given floating-point `data` and an integer `dtype`,
    when the data cannot be cast losslessly, the floating point dtype is retained,
    matching [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    behavior ([GH 41170](https://github.com/pandas-dev/pandas/issues/41170))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor when given a `np.ndarray` with object-dtype containing
    numeric entries; this now retains object dtype rather than inferring a numeric
    dtype, consistent with [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior ([GH 42870](https://github.com/pandas-dev/pandas/issues/42870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of `Index.__and__()`, `Index.__or__()` and `Index.__xor__()`
    to behave as logical operations (matching [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") behavior) instead of aliases for set operations ([GH 37374](https://github.com/pandas-dev/pandas/issues/37374))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passed a list whose first element is a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical"), this now treats the elements as rows casting to `object`
    dtype, consistent with behavior for other types ([GH 38845](https://github.com/pandas-dev/pandas/issues/38845))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructor when passed a `dtype` (other than int) that the
    data cannot be cast to; it now raises instead of silently ignoring the dtype ([GH
    41733](https://github.com/pandas-dev/pandas/issues/41733))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed the behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor, it will no longer infer a datetime64 or timedelta64
    dtype from string entries ([GH 41731](https://github.com/pandas-dev/pandas/issues/41731))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") constructor with a `np.datetime64` object and a `tz` passed
    to interpret the input as a wall-time as opposed to a UTC time ([GH 42288](https://github.com/pandas-dev/pandas/issues/42288))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Timestamp.utcfromtimestamp()`](../reference/api/pandas.Timestamp.utcfromtimestamp.html#pandas.Timestamp.utcfromtimestamp
    "pandas.Timestamp.utcfromtimestamp") to return a timezone-aware object satisfying
    `Timestamp.utcfromtimestamp(val).timestamp() == val` ([GH 45083](https://github.com/pandas-dev/pandas/issues/45083))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") constructor when passed a `SparseArray` or `SparseDtype` to retain
    that dtype instead of casting to `numpy.ndarray` ([GH 43930](https://github.com/pandas-dev/pandas/issues/43930))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of setitem-like operations (`__setitem__`, `fillna`, `where`,
    `mask`, `replace`, `insert`, fill_value for `shift`) on an object with [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") when using a value with a non-matching timezone, the
    value will be cast to the object’s timezone instead of casting both to object-dtype
    ([GH 44243](https://github.com/pandas-dev/pandas/issues/44243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors with floating-dtype data and a [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype"), the data are now interpreted as UTC-times instead of
    wall-times, consistent with how integer-dtype data are treated ([GH 45573](https://github.com/pandas-dev/pandas/issues/45573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors with integer dtype and floating-point data containing
    `NaN`, this now raises `IntCastingNaNError` ([GH 40110](https://github.com/pandas-dev/pandas/issues/40110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors with an integer `dtype` and values that are too
    large to losslessly cast to this dtype, this now raises `ValueError` ([GH 41734](https://github.com/pandas-dev/pandas/issues/41734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors with an integer `dtype` and values having either
    `datetime64` or `timedelta64` dtypes, this now raises `TypeError`, use `values.view("int64")`
    instead ([GH 41770](https://github.com/pandas-dev/pandas/issues/41770))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated `base` and `loffset` arguments from [`pandas.DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"), [`pandas.Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") and [`pandas.Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper"). Use `offset` or `origin` instead ([GH 31809](https://github.com/pandas-dev/pandas/issues/31809))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") and [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") with `timedelta64[ns]` dtype and an incompatible `fill_value`;
    this now casts to `object` dtype instead of raising, consistent with the behavior
    with other dtypes ([GH 45746](https://github.com/pandas-dev/pandas/issues/45746))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change the default argument of `regex` for [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") from `True` to `False`. Additionally, a single character
    `pat` with `regex=True` is now treated as a regular expression instead of a string
    literal. ([GH 36695](https://github.com/pandas-dev/pandas/issues/36695), [GH 24804](https://github.com/pandas-dev/pandas/issues/24804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.any()`](../reference/api/pandas.DataFrame.any.html#pandas.DataFrame.any
    "pandas.DataFrame.any") and [`DataFrame.all()`](../reference/api/pandas.DataFrame.all.html#pandas.DataFrame.all
    "pandas.DataFrame.all") with `bool_only=True`; object-dtype columns with all-bool
    values will no longer be included, manually cast to `bool` dtype first ([GH 46188](https://github.com/pandas-dev/pandas/issues/46188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max"), [`DataFrame.min`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min"), [`DataFrame.mean`](../reference/api/pandas.DataFrame.mean.html#pandas.DataFrame.mean
    "pandas.DataFrame.mean"), [`DataFrame.median`](../reference/api/pandas.DataFrame.median.html#pandas.DataFrame.median
    "pandas.DataFrame.median"), [`DataFrame.skew`](../reference/api/pandas.DataFrame.skew.html#pandas.DataFrame.skew
    "pandas.DataFrame.skew"), [`DataFrame.kurt`](../reference/api/pandas.DataFrame.kurt.html#pandas.DataFrame.kurt
    "pandas.DataFrame.kurt") with `axis=None` to return a scalar applying the aggregation
    across both axes ([GH 45072](https://github.com/pandas-dev/pandas/issues/45072))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of comparison of a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with a `datetime.date` object; these now compare as un-equal
    and raise on inequality comparisons, matching the `datetime.datetime` behavior
    ([GH 36131](https://github.com/pandas-dev/pandas/issues/36131))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of comparison of `NaT` with a `datetime.date` object; these
    now raise on inequality comparisons ([GH 39196](https://github.com/pandas-dev/pandas/issues/39196))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation of silently dropping columns that raised a `TypeError`
    in [`Series.transform`](../reference/api/pandas.Series.transform.html#pandas.Series.transform
    "pandas.Series.transform") and [`DataFrame.transform`](../reference/api/pandas.DataFrame.transform.html#pandas.DataFrame.transform
    "pandas.DataFrame.transform") when used with a list or dictionary ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") with list-like so that any partial failure will raise
    an error ([GH 43740](https://github.com/pandas-dev/pandas/issues/43740))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behaviour of [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") to now use the Styler implementation via [`Styler.to_latex()`](../reference/api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex") ([GH 47970](https://github.com/pandas-dev/pandas/issues/47970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of `Series.__setitem__()` with an integer key and a `Float64Index`
    when the key is not present in the index; previously we treated the key as positional
    (behaving like `series.iloc[key] = val`), now we treat it is a label (behaving
    like `series.loc[key] = val`), consistent with `Series.__getitem__`()` behavior
    ([GH 33469](https://github.com/pandas-dev/pandas/issues/33469))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `na_sentinel` argument from [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize"), [`Index.factorize()`](../reference/api/pandas.Index.factorize.html#pandas.Index.factorize
    "pandas.Index.factorize"), and [`ExtensionArray.factorize()`](../reference/api/pandas.api.extensions.ExtensionArray.factorize.html#pandas.api.extensions.ExtensionArray.factorize
    "pandas.api.extensions.ExtensionArray.factorize") ([GH 47157](https://github.com/pandas-dev/pandas/issues/47157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`Series.diff()`](../reference/api/pandas.Series.diff.html#pandas.Series.diff
    "pandas.Series.diff") and [`DataFrame.diff()`](../reference/api/pandas.DataFrame.diff.html#pandas.DataFrame.diff
    "pandas.DataFrame.diff") with `ExtensionDtype` dtypes whose arrays do not implement
    `diff`, these now raise `TypeError` rather than casting to numpy ([GH 31025](https://github.com/pandas-dev/pandas/issues/31025))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation of calling numpy “ufunc”s on [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `method="outer"`; this now raises `NotImplementedError`
    ([GH 36955](https://github.com/pandas-dev/pandas/issues/36955))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation disallowing passing `numeric_only=True` to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") reductions (`rank`, `any`, `all`, …) with non-numeric dtype ([GH
    47500](https://github.com/pandas-dev/pandas/issues/47500))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`SeriesGroupBy.apply()`](../reference/api/pandas.core.groupby.SeriesGroupBy.apply.html#pandas.core.groupby.SeriesGroupBy.apply
    "pandas.core.groupby.SeriesGroupBy.apply") so that `group_keys` is respected even
    if a transformer is detected ([GH 34998](https://github.com/pandas-dev/pandas/issues/34998))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comparisons between a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") where the frame’s columns do not match the series’s index raise
    `ValueError` instead of automatically aligning, do `left, right = left.align(right,
    axis=1, copy=False)` before comparing ([GH 36795](https://github.com/pandas-dev/pandas/issues/36795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation `numeric_only=None` (the default) in DataFrame reductions
    that would silently drop columns that raised; `numeric_only` now defaults to `False`
    ([GH 41480](https://github.com/pandas-dev/pandas/issues/41480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed default of `numeric_only` to `False` in all DataFrame methods with that
    argument ([GH 46096](https://github.com/pandas-dev/pandas/issues/46096), [GH 46906](https://github.com/pandas-dev/pandas/issues/46906))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed default of `numeric_only` to `False` in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") ([GH 47561](https://github.com/pandas-dev/pandas/issues/47561))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation of silently dropping nuisance columns in groupby and resample
    operations when `numeric_only=False` ([GH 41475](https://github.com/pandas-dev/pandas/issues/41475))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforced deprecation of silently dropping nuisance columns in `Rolling`, `Expanding`,
    and `ExponentialMovingWindow` ops. This will now raise a [`errors.DataError`](../reference/api/pandas.errors.DataError.html#pandas.errors.DataError
    "pandas.errors.DataError") ([GH 42834](https://github.com/pandas-dev/pandas/issues/42834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior in setting values with `df.loc[:, foo] = bar` or `df.iloc[:,
    foo] = bar`, these now always attempt to set values inplace before falling back
    to casting ([GH 45333](https://github.com/pandas-dev/pandas/issues/45333))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed default of `numeric_only` in various `DataFrameGroupBy` methods; all
    methods now default to `numeric_only=False` ([GH 46072](https://github.com/pandas-dev/pandas/issues/46072))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed default of `numeric_only` to `False` in `Resampler` methods ([GH 47177](https://github.com/pandas-dev/pandas/issues/47177))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the method [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") with a callable that returns
    DataFrames will align to the input’s index ([GH 47244](https://github.com/pandas-dev/pandas/issues/47244))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When providing a list of columns of length one to [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"), the keys that are returned by iterating over the
    resulting `DataFrameGroupBy` object will now be tuples of length one ([GH 47761](https://github.com/pandas-dev/pandas/issues/47761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed deprecated methods `ExcelWriter.write_cells()`, `ExcelWriter.save()`,
    `ExcelWriter.cur_sheet()`, `ExcelWriter.handles()`, `ExcelWriter.path()` ([GH
    45795](https://github.com/pandas-dev/pandas/issues/45795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") attribute `book` can no longer be set; it is still available
    to be accessed and mutated ([GH 48943](https://github.com/pandas-dev/pandas/issues/48943))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed unused `*args` and `**kwargs` in `Rolling`, `Expanding`, and `ExponentialMovingWindow`
    ops ([GH 47851](https://github.com/pandas-dev/pandas/issues/47851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated argument `line_terminator` from [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") ([GH 45302](https://github.com/pandas-dev/pandas/issues/45302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed the deprecated argument `label` from [`lreshape()`](../reference/api/pandas.lreshape.html#pandas.lreshape
    "pandas.lreshape") ([GH 30219](https://github.com/pandas-dev/pandas/issues/30219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arguments after `expr` in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") and [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") are keyword-only ([GH 47587](https://github.com/pandas-dev/pandas/issues/47587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Index._get_attributes_dict()` ([GH 50648](https://github.com/pandas-dev/pandas/issues/50648))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removed `Series.__array_wrap__()` ([GH 50648](https://github.com/pandas-dev/pandas/issues/50648))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changed behavior of [`DataFrame.value_counts()`](../reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts
    "pandas.DataFrame.value_counts") to return a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") for any list-like(one element or not) but an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") for a single label ([GH 50829](https://github.com/pandas-dev/pandas/issues/50829))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.median()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.median.html#pandas.core.groupby.DataFrameGroupBy.median
    "pandas.core.groupby.DataFrameGroupBy.median") and [`SeriesGroupBy.median()`](../reference/api/pandas.core.groupby.SeriesGroupBy.median.html#pandas.core.groupby.SeriesGroupBy.median
    "pandas.core.groupby.SeriesGroupBy.median") and [`DataFrameGroupBy.cumprod()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.cumprod.html#pandas.core.groupby.DataFrameGroupBy.cumprod
    "pandas.core.groupby.DataFrameGroupBy.cumprod") for nullable dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.all()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.all.html#pandas.core.groupby.DataFrameGroupBy.all
    "pandas.core.groupby.DataFrameGroupBy.all"), [`DataFrameGroupBy.any()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.any.html#pandas.core.groupby.DataFrameGroupBy.any
    "pandas.core.groupby.DataFrameGroupBy.any"), [`SeriesGroupBy.all()`](../reference/api/pandas.core.groupby.SeriesGroupBy.all.html#pandas.core.groupby.SeriesGroupBy.all
    "pandas.core.groupby.SeriesGroupBy.all"), and [`SeriesGroupBy.any()`](../reference/api/pandas.core.groupby.SeriesGroupBy.any.html#pandas.core.groupby.SeriesGroupBy.any
    "pandas.core.groupby.SeriesGroupBy.any") for object dtype ([GH 50623](https://github.com/pandas-dev/pandas/issues/50623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.argsort()` and `MultiIndex.sort_values()`
    ([GH 48406](https://github.com/pandas-dev/pandas/issues/48406))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.size()` ([GH 48723](https://github.com/pandas-dev/pandas/issues/48723))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.union()` without missing values and without
    duplicates ([GH 48505](https://github.com/pandas-dev/pandas/issues/48505), [GH
    48752](https://github.com/pandas-dev/pandas/issues/48752))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.difference()` ([GH 48606](https://github.com/pandas-dev/pandas/issues/48606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") set operations with sort=None ([GH 49010](https://github.com/pandas-dev/pandas/issues/49010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.mean()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.mean.html#pandas.core.groupby.DataFrameGroupBy.mean
    "pandas.core.groupby.DataFrameGroupBy.mean"), [`SeriesGroupBy.mean()`](../reference/api/pandas.core.groupby.SeriesGroupBy.mean.html#pandas.core.groupby.SeriesGroupBy.mean
    "pandas.core.groupby.SeriesGroupBy.mean"), [`DataFrameGroupBy.var()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.var.html#pandas.core.groupby.DataFrameGroupBy.var
    "pandas.core.groupby.DataFrameGroupBy.var"), and [`SeriesGroupBy.var()`](../reference/api/pandas.core.groupby.SeriesGroupBy.var.html#pandas.core.groupby.SeriesGroupBy.var
    "pandas.core.groupby.SeriesGroupBy.var") for extension array dtypes ([GH 37493](https://github.com/pandas-dev/pandas/issues/37493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.isin()` when `level=None` ([GH 48622](https://github.com/pandas-dev/pandas/issues/48622),
    [GH 49577](https://github.com/pandas-dev/pandas/issues/49577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `MultiIndex.putmask()` ([GH 49830](https://github.com/pandas-dev/pandas/issues/49830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") and `MultiIndex.union()` when index contains duplicates
    ([GH 48900](https://github.com/pandas-dev/pandas/issues/48900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.rank()`](../reference/api/pandas.Series.rank.html#pandas.Series.rank
    "pandas.Series.rank") for pyarrow-backed dtypes ([GH 50264](https://github.com/pandas-dev/pandas/issues/50264))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") for pyarrow-backed dtypes ([GH 50447](https://github.com/pandas-dev/pandas/issues/50447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") for extension array dtypes ([GH 49722](https://github.com/pandas-dev/pandas/issues/49722),
    [GH 50078](https://github.com/pandas-dev/pandas/issues/50078))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.join()`](../reference/api/pandas.Index.join.html#pandas.Index.join
    "pandas.Index.join"), [`Index.intersection()`](../reference/api/pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection") and [`Index.union()`](../reference/api/pandas.Index.union.html#pandas.Index.union
    "pandas.Index.union") for masked and arrow dtypes when [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") is monotonic ([GH 50310](https://github.com/pandas-dev/pandas/issues/50310),
    [GH 51365](https://github.com/pandas-dev/pandas/issues/51365))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") with nullable dtype ([GH 48338](https://github.com/pandas-dev/pandas/issues/48338))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor passing integer numpy array with nullable dtype ([GH
    48338](https://github.com/pandas-dev/pandas/issues/48338))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor passing a list ([GH 48609](https://github.com/pandas-dev/pandas/issues/48609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when joining on a sorted [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 48504](https://github.com/pandas-dev/pandas/issues/48504))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when parsing strings with timezone offsets ([GH 50107](https://github.com/pandas-dev/pandas/issues/50107))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") for tuple-based indexing of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 48384](https://github.com/pandas-dev/pandas/issues/48384))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with categorical dtype ([GH 49404](https://github.com/pandas-dev/pandas/issues/49404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for `MultiIndex.unique()` ([GH 48335](https://github.com/pandas-dev/pandas/issues/48335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for indexing operations with nullable and arrow dtypes
    ([GH 49420](https://github.com/pandas-dev/pandas/issues/49420), [GH 51316](https://github.com/pandas-dev/pandas/issues/51316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with extension array backed indexes ([GH 49128](https://github.com/pandas-dev/pandas/issues/49128),
    [GH 49178](https://github.com/pandas-dev/pandas/issues/49178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`api.types.infer_dtype()`](../reference/api/pandas.api.types.infer_dtype.html#pandas.api.types.infer_dtype
    "pandas.api.types.infer_dtype") ([GH 51054](https://github.com/pandas-dev/pandas/issues/51054))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduce memory usage of [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")/[`Series.to_pickle()`](../reference/api/pandas.Series.to_pickle.html#pandas.Series.to_pickle
    "pandas.Series.to_pickle") when using BZ2 or LZMA ([GH 49068](https://github.com/pandas-dev/pandas/issues/49068))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for [`StringArray`](../reference/api/pandas.arrays.StringArray.html#pandas.arrays.StringArray
    "pandas.arrays.StringArray") constructor passing a numpy array with type `np.str_`
    ([GH 49109](https://github.com/pandas-dev/pandas/issues/49109))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`from_tuples()`](../reference/api/pandas.arrays.IntervalArray.from_tuples.html#pandas.arrays.IntervalArray.from_tuples
    "pandas.arrays.IntervalArray.from_tuples") ([GH 50620](https://github.com/pandas-dev/pandas/issues/50620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `factorize()` ([GH 49177](https://github.com/pandas-dev/pandas/issues/49177))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `__setitem__()` ([GH 50248](https://github.com/pandas-dev/pandas/issues/50248),
    [GH 50632](https://github.com/pandas-dev/pandas/issues/50632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") comparison methods when array contains NA
    ([GH 50524](https://github.com/pandas-dev/pandas/issues/50524))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `to_numpy()` ([GH 49973](https://github.com/pandas-dev/pandas/issues/49973),
    [GH 51227](https://github.com/pandas-dev/pandas/issues/51227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when parsing strings to [`BooleanDtype`](../reference/api/pandas.BooleanDtype.html#pandas.BooleanDtype
    "pandas.BooleanDtype") ([GH 50613](https://github.com/pandas-dev/pandas/issues/50613))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when joining on a subset of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 48611](https://github.com/pandas-dev/pandas/issues/48611))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement for `MultiIndex.intersection()` ([GH 48604](https://github.com/pandas-dev/pandas/issues/48604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DataFrame.__setitem__()` ([GH 46267](https://github.com/pandas-dev/pandas/issues/46267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `var` and `std` for nullable dtypes ([GH 48379](https://github.com/pandas-dev/pandas/issues/48379)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when iterating over pyarrow and nullable dtypes ([GH
    49825](https://github.com/pandas-dev/pandas/issues/49825), [GH 49851](https://github.com/pandas-dev/pandas/issues/49851))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements to [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") ([GH 47403](https://github.com/pandas-dev/pandas/issues/47403),
    [GH 47405](https://github.com/pandas-dev/pandas/issues/47405), [GH 47656](https://github.com/pandas-dev/pandas/issues/47656),
    [GH 48502](https://github.com/pandas-dev/pandas/issues/48502))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Memory improvement in `RangeIndex.sort_values()` ([GH 48801](https://github.com/pandas-dev/pandas/issues/48801))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") if `copy=True` by avoiding copying twice ([GH 24345](https://github.com/pandas-dev/pandas/issues/24345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 21055](https://github.com/pandas-dev/pandas/issues/21055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DataFrameGroupBy` and `SeriesGroupBy` when `by`
    is a categorical type and `sort=False` ([GH 48976](https://github.com/pandas-dev/pandas/issues/48976))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in `DataFrameGroupBy` and `SeriesGroupBy` when `by`
    is a categorical type and `observed=False` ([GH 49596](https://github.com/pandas-dev/pandas/issues/49596))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") with parameter `index_col` set to `None` (the default). Now
    the index will be a [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of `Int64Index` ([GH 49745](https://github.com/pandas-dev/pandas/issues/49745))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") when not merging on the index - the new index will now be [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") instead of `Int64Index` ([GH 49478](https://github.com/pandas-dev/pandas/issues/49478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") and [`Series.to_dict()`](../reference/api/pandas.Series.to_dict.html#pandas.Series.to_dict
    "pandas.Series.to_dict") when using any non-object dtypes ([GH 46470](https://github.com/pandas-dev/pandas/issues/46470))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_html()`](../reference/api/pandas.read_html.html#pandas.read_html
    "pandas.read_html") when there are multiple tables ([GH 49929](https://github.com/pandas-dev/pandas/issues/49929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") constructor when constructing from a string or integer ([GH 38312](https://github.com/pandas-dev/pandas/issues/38312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when using `'%Y%m%d'` format ([GH 17410](https://github.com/pandas-dev/pandas/issues/17410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") when format is given or can be inferred ([GH 50465](https://github.com/pandas-dev/pandas/issues/50465))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.median()`](../reference/api/pandas.Series.median.html#pandas.Series.median
    "pandas.Series.median") for nullable dtypes ([GH 50838](https://github.com/pandas-dev/pandas/issues/50838))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when passing [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") lambda-function to `date_parser` and inputs have mixed timezone
    offsetes ([GH 35296](https://github.com/pandas-dev/pandas/issues/35296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`isna()`](../reference/api/pandas.isna.html#pandas.isna
    "pandas.isna") and [`isnull()`](../reference/api/pandas.isnull.html#pandas.isnull
    "pandas.isnull") ([GH 50658](https://github.com/pandas-dev/pandas/issues/50658))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") with categorical dtype ([GH
    46202](https://github.com/pandas-dev/pandas/issues/46202))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a reference leak in [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") ([GH 37441](https://github.com/pandas-dev/pandas/issues/37441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a memory leak in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") and [`Series.to_json()`](../reference/api/pandas.Series.to_json.html#pandas.Series.to_json
    "pandas.Series.to_json") when serializing datetimes and timedeltas ([GH 40443](https://github.com/pandas-dev/pandas/issues/40443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decreased memory usage in many `DataFrameGroupBy` methods ([GH 51090](https://github.com/pandas-dev/pandas/issues/51090))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.round()`](../reference/api/pandas.DataFrame.round.html#pandas.DataFrame.round
    "pandas.DataFrame.round") for an integer `decimal` parameter ([GH 17254](https://github.com/pandas-dev/pandas/issues/17254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") when using a large dict for `to_replace` ([GH 6697](https://github.com/pandas-dev/pandas/issues/6697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Memory improvement in `StataReader` when reading seekable files ([GH 48922](https://github.com/pandas-dev/pandas/issues/48922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Categorical.set_categories()` losing dtype information ([GH 48812](https://github.com/pandas-dev/pandas/issues/48812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with categorical dtype when `to_replace` values overlap
    with new values ([GH 49404](https://github.com/pandas-dev/pandas/issues/49404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with categorical dtype losing nullable dtypes of underlying
    categories ([GH 49404](https://github.com/pandas-dev/pandas/issues/49404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") would reorder categories when used as a grouper ([GH
    48749](https://github.com/pandas-dev/pandas/issues/48749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor when constructing from a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") object and `dtype="category"` losing ordered-ness ([GH 49309](https://github.com/pandas-dev/pandas/issues/49309))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max"), [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), and [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") with unordered [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") with no groups failing to raise `TypeError` ([GH 51034](https://github.com/pandas-dev/pandas/issues/51034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq"), raising `TypeError` when inferred on [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 47084](https://github.com/pandas-dev/pandas/issues/47084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") incorrectly raising `OverflowError` with string arguments
    corresponding to large integers ([GH 50533](https://github.com/pandas-dev/pandas/issues/50533))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising on invalid offsets with `errors='coerce'` and
    `infer_datetime_format=True` ([GH 48633](https://github.com/pandas-dev/pandas/issues/48633))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor failing to raise when `tz=None` is explicitly
    specified in conjunction with timezone-aware `dtype` or data ([GH 48659](https://github.com/pandas-dev/pandas/issues/48659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting a `datetime` scalar from [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") failing to retain the original `freq` attribute ([GH 48818](https://github.com/pandas-dev/pandas/issues/48818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.tseries.holiday.Holiday` where a half-open date interval causes
    inconsistent return types from `USFederalHolidayCalendar.holidays()` ([GH 49075](https://github.com/pandas-dev/pandas/issues/49075))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with timezone-aware dtypes with `dateutil` or `zoneinfo` timezones
    near daylight-savings transitions ([GH 49684](https://github.com/pandas-dev/pandas/issues/49684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), `datetime.datetime`, `datetime.date`, or `np.datetime64`
    objects when non-ISO8601 `format` was passed ([GH 49298](https://github.com/pandas-dev/pandas/issues/49298),
    [GH 50036](https://github.com/pandas-dev/pandas/issues/50036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing empty string and non-ISO8601
    format was passed. Now, empty strings will be parsed as [`NaT`](../reference/api/pandas.NaT.html#pandas.NaT
    "pandas.NaT"), for compatibility with how is done for ISO8601 formats ([GH 50251](https://github.com/pandas-dev/pandas/issues/50251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") was showing `UserWarning`, which was not actionable by users,
    when parsing non-ISO8601 delimited date strings ([GH 50232](https://github.com/pandas-dev/pandas/issues/50232))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was showing misleading `ValueError` when parsing dates with
    format containing ISO week directive and ISO weekday directive ([GH 50308](https://github.com/pandas-dev/pandas/issues/50308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round") when the `freq` argument has zero-duration (e.g. “0ns”)
    returning incorrect results instead of raising ([GH 49737](https://github.com/pandas-dev/pandas/issues/49737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not raising `ValueError` when invalid format was passed
    and `errors` was `'ignore'` or `'coerce'` ([GH 50266](https://github.com/pandas-dev/pandas/issues/50266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` was throwing `TypeError` when constructing with milliseconds
    and another super-daily argument ([GH 49897](https://github.com/pandas-dev/pandas/issues/49897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not raising `ValueError` when parsing string with decimal
    date with format `'%Y%m%d'` ([GH 50051](https://github.com/pandas-dev/pandas/issues/50051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not converting `None` to `NaT` when parsing mixed-offset
    date strings with ISO8601 format ([GH 50071](https://github.com/pandas-dev/pandas/issues/50071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not returning input when parsing out-of-bounds date
    string with `errors='ignore'` and `format='%Y%m%d'` ([GH 14487](https://github.com/pandas-dev/pandas/issues/14487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was converting timezone-naive `datetime.datetime` to timezone-aware
    when parsing with timezone-aware strings, ISO8601 format, and `utc=False` ([GH
    50254](https://github.com/pandas-dev/pandas/issues/50254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was throwing `ValueError` when parsing dates with ISO8601
    format where some values were not zero-padded ([GH 21422](https://github.com/pandas-dev/pandas/issues/21422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was giving incorrect results when using `format='%Y%m%d'`
    and `errors='ignore'` ([GH 26493](https://github.com/pandas-dev/pandas/issues/26493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was failing to parse date strings `'today'` and `'now'`
    if `format` was not ISO8601 ([GH 50359](https://github.com/pandas-dev/pandas/issues/50359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.utctimetuple()`](../reference/api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple") raising a `TypeError` ([GH 32174](https://github.com/pandas-dev/pandas/issues/32174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing mixed-offset [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with `errors='ignore'` ([GH 50585](https://github.com/pandas-dev/pandas/issues/50585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was incorrectly handling floating-point inputs within 1
    `unit` of the overflow boundaries ([GH 50183](https://github.com/pandas-dev/pandas/issues/50183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with unit of “Y” or “M” giving incorrect results, not matching
    pointwise [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") results ([GH 50870](https://github.com/pandas-dev/pandas/issues/50870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with datetime or timedelta dtypes incorrectly
    raising `ValueError` ([GH 11312](https://github.com/pandas-dev/pandas/issues/11312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not returning input with `errors='ignore'` when input
    was out-of-bounds ([GH 50587](https://github.com/pandas-dev/pandas/issues/50587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records") when given a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") input with timezone-aware datetime64 columns incorrectly dropping
    the timezone-awareness ([GH 51162](https://github.com/pandas-dev/pandas/issues/51162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `decimal.InvalidOperation` when parsing date
    strings with `errors='coerce'` ([GH 51084](https://github.com/pandas-dev/pandas/issues/51084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with both `unit` and `origin` specified returning incorrect
    results ([GH 42624](https://github.com/pandas-dev/pandas/issues/42624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when converting an object-dtype object containing timezone-aware
    datetimes or strings to `datetime64[ns]` incorrectly localizing as UTC instead
    of raising `TypeError` ([GH 50140](https://github.com/pandas-dev/pandas/issues/50140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") with datetime or timedelta dtypes
    giving incorrect results for groups containing `NaT` ([GH 51373](https://github.com/pandas-dev/pandas/issues/51373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") incorrectly raising with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 51373](https://github.com/pandas-dev/pandas/issues/51373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") raising error when input has nullable dtype `Float64` ([GH
    48796](https://github.com/pandas-dev/pandas/issues/48796))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") constructor incorrectly raising instead of returning `NaT`
    when given a `np.timedelta64("nat")` ([GH 48898](https://github.com/pandas-dev/pandas/issues/48898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") constructor failing to raise when passed both a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object and keywords (e.g. days, seconds) ([GH 48898](https://github.com/pandas-dev/pandas/issues/48898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") comparisons with very large `datetime.timedelta` objects incorrect
    raising `OutOfBoundsTimedelta` ([GH 49021](https://github.com/pandas-dev/pandas/issues/49021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with object-dtype containing multiple timezone-aware
    `datetime` objects with heterogeneous timezones to a [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") incorrectly raising ([GH 32581](https://github.com/pandas-dev/pandas/issues/32581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was failing to parse date strings with timezone name when
    `format` was specified with `%Z` ([GH 49748](https://github.com/pandas-dev/pandas/issues/49748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better error message when passing invalid values to `ambiguous` parameter in
    [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") ([GH 49565](https://github.com/pandas-dev/pandas/issues/49565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in string parsing incorrectly allowing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to be constructed with an invalid timezone, which would raise
    when trying to print ([GH 50668](https://github.com/pandas-dev/pandas/issues/50668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corrected TypeError message in `objects_to_datetime64ns()` to inform that DatetimeIndex
    has mixed timezones ([GH 50974](https://github.com/pandas-dev/pandas/issues/50974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.add()`](../reference/api/pandas.DataFrame.add.html#pandas.DataFrame.add
    "pandas.DataFrame.add") cannot apply ufunc when inputs contain mixed DataFrame
    type and Series type ([GH 39853](https://github.com/pandas-dev/pandas/issues/39853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") not propagating mask when combining masked dtypes and numpy dtypes
    ([GH 45810](https://github.com/pandas-dev/pandas/issues/45810), [GH 42630](https://github.com/pandas-dev/pandas/issues/42630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sem()`](../reference/api/pandas.DataFrame.sem.html#pandas.DataFrame.sem
    "pandas.DataFrame.sem") and [`Series.sem()`](../reference/api/pandas.Series.sem.html#pandas.Series.sem
    "pandas.Series.sem") where an erroneous `TypeError` would always raise when using
    data backed by an [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") ([GH 49759](https://github.com/pandas-dev/pandas/issues/49759))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__add__()` casting to object for list and masked [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 22962](https://github.com/pandas-dev/pandas/issues/22962))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `mode()` where `dropna=False` was not respected when there was `NA` values
    ([GH 50982](https://github.com/pandas-dev/pandas/issues/50982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") with `engine="numexpr"` and column names are `min` or
    `max` would raise a `TypeError` ([GH 50937](https://github.com/pandas-dev/pandas/issues/50937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") with tz-aware data containing `pd.NaT` and `axis=1` would
    return incorrect results ([GH 51242](https://github.com/pandas-dev/pandas/issues/51242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `int64` dtype from a string list raising instead of casting
    ([GH 44923](https://github.com/pandas-dev/pandas/issues/44923))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with masked dtype and boolean values with `NA` raising ([GH 42137](https://github.com/pandas-dev/pandas/issues/42137))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") incorrectly raising an `AttributeError` when there are
    negative values in function call ([GH 46471](https://github.com/pandas-dev/pandas/issues/46471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") not converting dtype to nullable dtype when [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") contains `NA` and has dtype `object` ([GH 48791](https://github.com/pandas-dev/pandas/issues/48791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where any `ExtensionDtype` subclass with `kind="M"` would be interpreted
    as a timezone type ([GH 34986](https://github.com/pandas-dev/pandas/issues/34986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") that would raise `NotImplementedError` when
    passed a sequence of strings or binary ([GH 49172](https://github.com/pandas-dev/pandas/issues/49172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") raising `pyarrow.ArrowInvalid` when converting from a
    non-pyarrow string dtype to a pyarrow numeric type ([GH 50430](https://github.com/pandas-dev/pandas/issues/50430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") modifying input array inplace when converting to `string`
    and `copy=False` ([GH 51073](https://github.com/pandas-dev/pandas/issues/51073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") converting to NumPy array before applying `na_value`
    ([GH 48951](https://github.com/pandas-dev/pandas/issues/48951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not copying data when converting to pyarrow dtype ([GH
    50984](https://github.com/pandas-dev/pandas/issues/50984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not respecting `exact` argument when `format` was an
    ISO8601 format ([GH 12649](https://github.com/pandas-dev/pandas/issues/12649))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaArray.astype()` raising `TypeError` when converting to a pyarrow
    duration type ([GH 49795](https://github.com/pandas-dev/pandas/issues/49795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") and [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") raising for extension array dtypes ([GH 29618](https://github.com/pandas-dev/pandas/issues/29618),
    [GH 50261](https://github.com/pandas-dev/pandas/issues/50261), [GH 31913](https://github.com/pandas-dev/pandas/issues/31913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series()`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    not copying data when created from [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and `dtype` is equal to `dtype` from [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 52008](https://github.com/pandas-dev/pandas/issues/52008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") that would not return `True` for [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") or [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string()` ([GH 15585](https://github.com/pandas-dev/pandas/issues/15585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in converting string dtypes to “datetime64[ns]” or “timedelta64[ns]” incorrectly
    raising `TypeError` ([GH 36153](https://github.com/pandas-dev/pandas/issues/36153))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values in a string-dtype column with an array, mutating the array
    as side effect when it contains missing values ([GH 51299](https://github.com/pandas-dev/pandas/issues/51299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.is_overlapping()`](../reference/api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") incorrect output if interval has duplicate
    left boundaries ([GH 49581](https://github.com/pandas-dev/pandas/issues/49581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") failing to infer [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") for an object series of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects ([GH 50090](https://github.com/pandas-dev/pandas/issues/50090))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") and invalid null `fill_value` failing to raise `TypeError`
    ([GH 51258](https://github.com/pandas-dev/pandas/issues/51258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising when indexer is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `boolean` dtype ([GH 47125](https://github.com/pandas-dev/pandas/issues/47125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") filling with wrong values when indexing columns and
    index for `uint` dtypes ([GH 48184](https://github.com/pandas-dev/pandas/issues/48184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with different dtypes coercing values to single dtype ([GH
    50467](https://github.com/pandas-dev/pandas/issues/50467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") where `None` was not returned when `by` is empty
    list and `inplace=True` ([GH 50643](https://github.com/pandas-dev/pandas/issues/50643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") coercing dtypes when setting values with a list indexer
    ([GH 49159](https://github.com/pandas-dev/pandas/issues/49159))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising error for out of bounds end of slice indexer ([GH
    50161](https://github.com/pandas-dev/pandas/issues/50161))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `ValueError` with all `False` `bool` indexer and
    empty object ([GH 51450](https://github.com/pandas-dev/pandas/issues/51450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `ValueError` with `bool` indexer and [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47687](https://github.com/pandas-dev/pandas/issues/47687))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `IndexError` when setting values for a pyarrow-backed
    column with a non-scalar indexer ([GH 50085](https://github.com/pandas-dev/pandas/issues/50085))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()`, `Series.__getitem__()`, `DataFrame.__setitem__()`
    and `Series.__setitem__()` when indexing on indexes with extension float dtypes
    (`Float64` & `Float64`) or complex dtypes using integers ([GH 51053](https://github.com/pandas-dev/pandas/issues/51053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") modifying object when setting incompatible value with
    an empty indexer ([GH 45981](https://github.com/pandas-dev/pandas/issues/45981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising `ValueError` when right hand side is
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns ([GH 49121](https://github.com/pandas-dev/pandas/issues/49121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") casting dtype to `object` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has single extension array column when re-indexing `columns`
    and `index` ([GH 48190](https://github.com/pandas-dev/pandas/issues/48190))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") raising `IndexError` when indexer is a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with numeric extension array dtype ([GH 49521](https://github.com/pandas-dev/pandas/issues/49521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") when formatting percentiles in the resulting index
    showed more decimals than needed ([GH 46362](https://github.com/pandas-dev/pandas/issues/46362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") does not recognize differences when comparing `NA`
    with value in nullable dtypes ([GH 48939](https://github.com/pandas-dev/pandas/issues/48939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") losing extension array dtypes ([GH 21055](https://github.com/pandas-dev/pandas/issues/21055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.isetitem()` coercing extension array dtypes in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to object ([GH 49922](https://github.com/pandas-dev/pandas/issues/49922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` returning corrupt object when selecting from an
    empty pyarrow backed object ([GH 51734](https://github.com/pandas-dev/pandas/issues/51734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `BusinessHour` would cause creation of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") to fail when no opening hour was included in the index
    ([GH 49835](https://github.com/pandas-dev/pandas/issues/49835))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index.equals()`](../reference/api/pandas.Index.equals.html#pandas.Index.equals
    "pandas.Index.equals") raising `TypeError` when [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") consists of tuples that contain `NA` ([GH 48446](https://github.com/pandas-dev/pandas/issues/48446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") caused incorrect result when data has NaNs and defaultdict
    mapping was used ([GH 48813](https://github.com/pandas-dev/pandas/issues/48813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA") raising
    a `TypeError` instead of return [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") when performing a binary operation with a `bytes` object ([GH 49108](https://github.com/pandas-dev/pandas/issues/49108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") with `overwrite=False` raising `TypeError` when `self`
    has column with `NaT` values and column not present in `other` ([GH 16713](https://github.com/pandas-dev/pandas/issues/16713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `RecursionError` when replacing value in object-dtype
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    containing `NA` ([GH 47480](https://github.com/pandas-dev/pandas/issues/47480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `RecursionError` when replacing value in numeric
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `NA` ([GH 50758](https://github.com/pandas-dev/pandas/issues/50758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") not matching `NaN` values ([GH 29252](https://github.com/pandas-dev/pandas/issues/29252),
    [GH 37222](https://github.com/pandas-dev/pandas/issues/37222), [GH 38623](https://github.com/pandas-dev/pandas/issues/38623),
    [GH 42883](https://github.com/pandas-dev/pandas/issues/42883), [GH 43222](https://github.com/pandas-dev/pandas/issues/43222),
    [GH 46173](https://github.com/pandas-dev/pandas/issues/46173), [GH 48905](https://github.com/pandas-dev/pandas/issues/48905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.argsort()` raising `TypeError` when index contains [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") ([GH 48495](https://github.com/pandas-dev/pandas/issues/48495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.difference()` losing extension array dtype ([GH 48606](https://github.com/pandas-dev/pandas/issues/48606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.set_levels`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") raising `IndexError` when setting empty level
    ([GH 48636](https://github.com/pandas-dev/pandas/issues/48636))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` losing extension array dtype ([GH 48335](https://github.com/pandas-dev/pandas/issues/48335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` losing extension array ([GH 48604](https://github.com/pandas-dev/pandas/issues/48604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` losing extension array ([GH 48498](https://github.com/pandas-dev/pandas/issues/48498),
    [GH 48505](https://github.com/pandas-dev/pandas/issues/48505), [GH 48900](https://github.com/pandas-dev/pandas/issues/48900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` not sorting when sort=None and index contains missing
    values ([GH 49010](https://github.com/pandas-dev/pandas/issues/49010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.append()`](../reference/api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append") not checking names for equality ([GH 48288](https://github.com/pandas-dev/pandas/issues/48288))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.symmetric_difference()` losing extension array ([GH 48607](https://github.com/pandas-dev/pandas/issues/48607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.join()` losing dtypes when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") has duplicates ([GH 49830](https://github.com/pandas-dev/pandas/issues/49830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.putmask()` losing extension array ([GH 49830](https://github.com/pandas-dev/pandas/issues/49830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.value_counts()` returning a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") indexed by flat index of tuples instead of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 49558](https://github.com/pandas-dev/pandas/issues/49558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") caused fragmentation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and raised [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") ([GH 48595](https://github.com/pandas-dev/pandas/issues/48595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") by including the offending sheet name when an exception is
    raised while reading a file ([GH 48706](https://github.com/pandas-dev/pandas/issues/48706))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when a pickling a subset PyArrow-backed data that would serialize the entire
    data instead of the subset ([GH 42600](https://github.com/pandas-dev/pandas/issues/42600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") ignoring `dtype` argument when `chunksize` is specified
    and result is empty ([GH 50245](https://github.com/pandas-dev/pandas/issues/50245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") for a single-line csv with fewer columns than `names` raised
    [`errors.ParserError`](../reference/api/pandas.errors.ParserError.html#pandas.errors.ParserError
    "pandas.errors.ParserError") with `engine="c"` ([GH 47566](https://github.com/pandas-dev/pandas/issues/47566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") raising with `orient="table"` and `NA` value ([GH 40255](https://github.com/pandas-dev/pandas/issues/40255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in displaying `string` dtypes not showing storage option ([GH 50099](https://github.com/pandas-dev/pandas/issues/50099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") with `header=False` that printed the index name
    on the same line as the first row of the data ([GH 49230](https://github.com/pandas-dev/pandas/issues/49230))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") ignoring float formatter for extension arrays ([GH
    39336](https://github.com/pandas-dev/pandas/issues/39336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed memory leak which stemmed from the initialization of the internal JSON
    module ([GH 49222](https://github.com/pandas-dev/pandas/issues/49222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed issue where [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") would incorrectly remove leading characters from column
    names that matched the `sep` argument ([GH 49861](https://github.com/pandas-dev/pandas/issues/49861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") unnecessarily overflowing for extension array dtype when containing
    `NA` ([GH 32134](https://github.com/pandas-dev/pandas/issues/32134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") not converting `NA` to `None` ([GH 50795](https://github.com/pandas-dev/pandas/issues/50795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where it would segfault when failing to encode a string
    ([GH 50307](https://github.com/pandas-dev/pandas/issues/50307))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") with `na_rep` set when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") contains non-scalar data ([GH 47103](https://github.com/pandas-dev/pandas/issues/47103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") where file-like objects failed when iterparse is used ([GH
    50641](https://github.com/pandas-dev/pandas/issues/50641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `engine="pyarrow"` where `encoding` parameter was not
    handled correctly ([GH 51302](https://github.com/pandas-dev/pandas/issues/51302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") ignored repeated elements when iterparse is used ([GH 51183](https://github.com/pandas-dev/pandas/issues/51183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") leaving file handles open if an exception occurred during
    instantiation ([GH 51443](https://github.com/pandas-dev/pandas/issues/51443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where non-string index or columns were raising
    a `ValueError` when `engine="pyarrow"` ([GH 52036](https://github.com/pandas-dev/pandas/issues/52036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Period.strftime()`](../reference/api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime"), raising `UnicodeDecodeError` when a locale-specific
    directive was passed ([GH 46319](https://github.com/pandas-dev/pandas/issues/46319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") object to an array of `DateOffset` objects incorrectly raising
    `TypeError` ([GH 50162](https://github.com/pandas-dev/pandas/issues/50162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    where passing a string with finer resolution than nanosecond would result in a
    `KeyError` instead of dropping the extra precision ([GH 50417](https://github.com/pandas-dev/pandas/issues/50417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing strings representing Week-periods e.g. “2017-01-23/2017-01-29”
    as minute-frequency instead of week-frequency ([GH 50803](https://github.com/pandas-dev/pandas/issues/50803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), `DataFrameGroupByGroupBy.cumsum()`,
    `DataFrameGroupByGroupBy.prod()`, `DataFrameGroupByGroupBy.cumprod()` with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") failing to raise `TypeError` ([GH 51040](https://github.com/pandas-dev/pandas/issues/51040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing empty string with [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") incorrectly raising `ValueError` instead of returning `NaT` ([GH
    51349](https://github.com/pandas-dev/pandas/issues/51349))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist"), not dropping elements of `weights` corresponding
    to `NaN` values in `data` ([GH 48884](https://github.com/pandas-dev/pandas/issues/48884))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ax.set_xlim` was sometimes raising `UserWarning` which users couldn’t address
    due to `set_xlim` not accepting parsing arguments - the converter now uses [`Timestamp()`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") instead ([GH 49148](https://github.com/pandas-dev/pandas/issues/49148))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` with `online` not raising a `NotImplementedError`
    for unsupported operations ([GH 48834](https://github.com/pandas-dev/pandas/issues/48834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") raises `ValueError` when the object
    is empty ([GH 48459](https://github.com/pandas-dev/pandas/issues/48459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") raises `ValueError` when an entry of the index is equal
    to the name of the index ([GH 48567](https://github.com/pandas-dev/pandas/issues/48567))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") produces inconsistent results
    when passing empty DataFrame ([GH 47705](https://github.com/pandas-dev/pandas/issues/47705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` would not include unobserved categories
    in result when grouping by categorical indexes ([GH 49354](https://github.com/pandas-dev/pandas/issues/49354))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` would change result order depending
    on the input index when grouping by categoricals ([GH 49223](https://github.com/pandas-dev/pandas/issues/49223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` when grouping on categorical data
    would sort result values even when used with `sort=False` ([GH 42482](https://github.com/pandas-dev/pandas/issues/42482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and `SeriesGroupBy.apply` with `as_index=False`
    would not attempt the computation without using the grouping keys when using them
    failed with a `TypeError` ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") would describe the group keys
    ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.describe()`](../reference/api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe") with `as_index=False` would have
    the incorrect shape ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` with `dropna=False` would drop
    NA values when the grouper was categorical ([GH 36327](https://github.com/pandas-dev/pandas/issues/36327))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") would incorrectly raise when the
    grouper was an empty categorical and `observed=True` ([GH 21334](https://github.com/pandas-dev/pandas/issues/21334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") would raise when grouper contained NA
    values after subsetting from a `DataFrameGroupBy` ([GH 26454](https://github.com/pandas-dev/pandas/issues/26454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") would not include a [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") specified by `key` in the result when `as_index=False` ([GH
    50413](https://github.com/pandas-dev/pandas/issues/50413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") would raise when used with
    a `TimeGrouper` ([GH 50486](https://github.com/pandas-dev/pandas/issues/50486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.size()`](../reference/api/pandas.core.resample.Resampler.size.html#pandas.core.resample.Resampler.size
    "pandas.core.resample.Resampler.size") caused a wide [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to be returned instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46826](https://github.com/pandas-dev/pandas/issues/46826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") would raise incorrectly when grouper
    had `axis=1` for `"idxmin"` and `"idxmax"` arguments ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` would raise when used with an empty DataFrame, categorical
    grouper, and `dropna=False` ([GH 50634](https://github.com/pandas-dev/pandas/issues/50634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") did not respect `sort=False`
    ([GH 50482](https://github.com/pandas-dev/pandas/issues/50482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") raises `KeyError` when getting
    the result from a key list when resampling on time index ([GH 50840](https://github.com/pandas-dev/pandas/issues/50840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") would raise incorrectly when grouper
    had `axis=1` for `"ngroup"` argument ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") produced incorrect results when
    data had duplicate columns ([GH 50806](https://github.com/pandas-dev/pandas/issues/50806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with `engine="numba"` failing to respect
    `as_index=False` ([GH 51228](https://github.com/pandas-dev/pandas/issues/51228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg"), [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"), and `Resampler.agg()` would ignore arguments
    when passed a list of functions ([GH 50863](https://github.com/pandas-dev/pandas/issues/50863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.ohlc()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc") ignoring `as_index=False` ([GH 51413](https://github.com/pandas-dev/pandas/issues/51413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.agg()` after subsetting columns (e.g. `.groupby(...)[["a",
    "b"]]`) would not include groupings in the result ([GH 51186](https://github.com/pandas-dev/pandas/issues/51186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") raising `TypeError` for nullable dtype and `margins=True`
    ([GH 48681](https://github.com/pandas-dev/pandas/issues/48681))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") and [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") unstacking wrong level of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") has mixed names ([GH 48763](https://github.com/pandas-dev/pandas/issues/48763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") losing extension array dtype ([GH 41570](https://github.com/pandas-dev/pandas/issues/41570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") not respecting `None` as column name ([GH 48293](https://github.com/pandas-dev/pandas/issues/48293))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when `left_on` or `right_on` is or includes a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `AttributeError` ([GH 48464](https://github.com/pandas-dev/pandas/issues/48464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") raising `ValueError` with parameter `margins=True`
    when result is an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 49240](https://github.com/pandas-dev/pandas/issues/49240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified error message in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") when passing invalid `validate` option ([GH 49417](https://github.com/pandas-dev/pandas/issues/49417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") raising `ValueError` on multiple columns with `NaN`
    values or empty lists ([GH 46084](https://github.com/pandas-dev/pandas/issues/46084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") with `IntervalDtype` column with `timedelta64[ns]`
    endpoints ([GH 44917](https://github.com/pandas-dev/pandas/issues/44917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") would ignore arguments when passed a list of functions ([GH
    50863](https://github.com/pandas-dev/pandas/issues/50863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") when converting a `SparseDtype` with `datetime64[ns]`
    subtype to `int64` dtype raising, inconsistent with the non-sparse behavior ([GH
    49631](https://github.com/pandas-dev/pandas/issues/49631),:issue:50087)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") when converting a from `datetime64[ns]` to `Sparse[datetime64[ns]]`
    incorrectly raising ([GH 50082](https://github.com/pandas-dev/pandas/issues/50082))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sparse.to_coo()`](../reference/api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo") raising `SystemError` when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") contains a `ExtensionArray` ([GH 50996](https://github.com/pandas-dev/pandas/issues/50996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.mean()`](../reference/api/pandas.Series.mean.html#pandas.Series.mean
    "pandas.Series.mean") overflowing unnecessarily with nullable integers ([GH 48378](https://github.com/pandas-dev/pandas/issues/48378))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.tolist()` for nullable dtypes returning numpy scalars instead
    of python scalars ([GH 49890](https://github.com/pandas-dev/pandas/issues/49890))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") for pyarrow-backed dtypes raising `AttributeError` ([GH
    50437](https://github.com/pandas-dev/pandas/issues/50437))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when concatenating an empty DataFrame with an ExtensionDtype to another
    DataFrame with the same ExtensionDtype, the resulting dtype turned into object
    ([GH 48510](https://github.com/pandas-dev/pandas/issues/48510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `array.PandasArray.to_numpy()` raising with `NA` value when `na_value`
    is specified ([GH 40638](https://github.com/pandas-dev/pandas/issues/40638))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.types.is_numeric_dtype()`](../reference/api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype") where a custom `ExtensionDtype` would not
    return `True` if `_is_numeric` returned `True` ([GH 50563](https://github.com/pandas-dev/pandas/issues/50563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.types.is_integer_dtype()`](../reference/api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype"), [`api.types.is_unsigned_integer_dtype()`](../reference/api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype"), [`api.types.is_signed_integer_dtype()`](../reference/api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype"), [`api.types.is_float_dtype()`](../reference/api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype") where a custom `ExtensionDtype` would not return
    `True` if `kind` returned the corresponding NumPy type ([GH 50667](https://github.com/pandas-dev/pandas/issues/50667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor unnecessarily overflowing for nullable unsigned integer dtypes ([GH
    38798](https://github.com/pandas-dev/pandas/issues/38798), [GH 25880](https://github.com/pandas-dev/pandas/issues/25880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting non-string value into `StringArray` raising `ValueError` instead
    of `TypeError` ([GH 49632](https://github.com/pandas-dev/pandas/issues/49632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") not honoring the default `copy=True` keyword in case
    of columns with ExtensionDtype (and as a result also selecting multiple columns
    with getitem (`[]`) didn’t correctly result in a copy) ([GH 51197](https://github.com/pandas-dev/pandas/issues/51197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") logical operations `&` and `|` raising `KeyError`
    ([GH 51688](https://github.com/pandas-dev/pandas/issues/51688))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fix [`background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") for nullable dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `NA` values ([GH 50712](https://github.com/pandas-dev/pandas/issues/50712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in incorrectly accepting dtype strings containing “[pyarrow]” more than
    once ([GH 51548](https://github.com/pandas-dev/pandas/issues/51548))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") inconsistent behavior when accepting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") as parameter `value` ([GH 49620](https://github.com/pandas-dev/pandas/issues/49620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    failing to raise on [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") inputs ([GH 51167](https://github.com/pandas-dev/pandas/issues/51167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `Categorical.set_categories()` losing dtype information ([GH 48812](https://github.com/pandas-dev/pandas/issues/48812))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with categorical dtype when `to_replace` values overlap
    with new values ([GH 49404](https://github.com/pandas-dev/pandas/issues/49404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with categorical dtype losing nullable dtypes of underlying
    categories ([GH 49404](https://github.com/pandas-dev/pandas/issues/49404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") would reorder categories when used as a grouper ([GH
    48749](https://github.com/pandas-dev/pandas/issues/48749))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") constructor when constructing from a [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") object and `dtype="category"` losing ordered-ness ([GH 49309](https://github.com/pandas-dev/pandas/issues/49309))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.min()`](../reference/api/pandas.core.groupby.SeriesGroupBy.min.html#pandas.core.groupby.SeriesGroupBy.min
    "pandas.core.groupby.SeriesGroupBy.min"), [`SeriesGroupBy.max()`](../reference/api/pandas.core.groupby.SeriesGroupBy.max.html#pandas.core.groupby.SeriesGroupBy.max
    "pandas.core.groupby.SeriesGroupBy.max"), [`DataFrameGroupBy.min()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.min.html#pandas.core.groupby.DataFrameGroupBy.min
    "pandas.core.groupby.DataFrameGroupBy.min"), and [`DataFrameGroupBy.max()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.max.html#pandas.core.groupby.DataFrameGroupBy.max
    "pandas.core.groupby.DataFrameGroupBy.max") with unordered [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") with no groups failing to raise `TypeError` ([GH 51034](https://github.com/pandas-dev/pandas/issues/51034))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq"), raising `TypeError` when inferred on [`RangeIndex`](../reference/api/pandas.RangeIndex.html#pandas.RangeIndex
    "pandas.RangeIndex") ([GH 47084](https://github.com/pandas-dev/pandas/issues/47084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") incorrectly raising `OverflowError` with string arguments
    corresponding to large integers ([GH 50533](https://github.com/pandas-dev/pandas/issues/50533))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising on invalid offsets with `errors='coerce'` and
    `infer_datetime_format=True` ([GH 48633](https://github.com/pandas-dev/pandas/issues/48633))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") constructor failing to raise when `tz=None` is explicitly
    specified in conjunction with timezone-aware `dtype` or data ([GH 48659](https://github.com/pandas-dev/pandas/issues/48659))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in subtracting a `datetime` scalar from [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") failing to retain the original `freq` attribute ([GH 48818](https://github.com/pandas-dev/pandas/issues/48818))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pandas.tseries.holiday.Holiday` where a half-open date interval causes
    inconsistent return types from `USFederalHolidayCalendar.holidays()` ([GH 49075](https://github.com/pandas-dev/pandas/issues/49075))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with timezone-aware dtypes with `dateutil` or `zoneinfo` timezones
    near daylight-savings transitions ([GH 49684](https://github.com/pandas-dev/pandas/issues/49684))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp"), `datetime.datetime`, `datetime.date`, or `np.datetime64`
    objects when non-ISO8601 `format` was passed ([GH 49298](https://github.com/pandas-dev/pandas/issues/49298),
    [GH 50036](https://github.com/pandas-dev/pandas/issues/50036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing empty string and non-ISO8601
    format was passed. Now, empty strings will be parsed as [`NaT`](../reference/api/pandas.NaT.html#pandas.NaT
    "pandas.NaT"), for compatibility with how is done for ISO8601 formats ([GH 50251](https://github.com/pandas-dev/pandas/issues/50251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") was showing `UserWarning`, which was not actionable by users,
    when parsing non-ISO8601 delimited date strings ([GH 50232](https://github.com/pandas-dev/pandas/issues/50232))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was showing misleading `ValueError` when parsing dates with
    format containing ISO week directive and ISO weekday directive ([GH 50308](https://github.com/pandas-dev/pandas/issues/50308))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.round()`](../reference/api/pandas.Timestamp.round.html#pandas.Timestamp.round
    "pandas.Timestamp.round") when the `freq` argument has zero-duration (e.g. “0ns”)
    returning incorrect results instead of raising ([GH 49737](https://github.com/pandas-dev/pandas/issues/49737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not raising `ValueError` when invalid format was passed
    and `errors` was `'ignore'` or `'coerce'` ([GH 50266](https://github.com/pandas-dev/pandas/issues/50266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DateOffset` was throwing `TypeError` when constructing with milliseconds
    and another super-daily argument ([GH 49897](https://github.com/pandas-dev/pandas/issues/49897))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not raising `ValueError` when parsing string with decimal
    date with format `'%Y%m%d'` ([GH 50051](https://github.com/pandas-dev/pandas/issues/50051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not converting `None` to `NaT` when parsing mixed-offset
    date strings with ISO8601 format ([GH 50071](https://github.com/pandas-dev/pandas/issues/50071))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not returning input when parsing out-of-bounds date
    string with `errors='ignore'` and `format='%Y%m%d'` ([GH 14487](https://github.com/pandas-dev/pandas/issues/14487))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was converting timezone-naive `datetime.datetime` to timezone-aware
    when parsing with timezone-aware strings, ISO8601 format, and `utc=False` ([GH
    50254](https://github.com/pandas-dev/pandas/issues/50254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was throwing `ValueError` when parsing dates with ISO8601
    format where some values were not zero-padded ([GH 21422](https://github.com/pandas-dev/pandas/issues/21422))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was giving incorrect results when using `format='%Y%m%d'`
    and `errors='ignore'` ([GH 26493](https://github.com/pandas-dev/pandas/issues/26493))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was failing to parse date strings `'today'` and `'now'`
    if `format` was not ISO8601 ([GH 50359](https://github.com/pandas-dev/pandas/issues/50359))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.utctimetuple()`](../reference/api/pandas.Timestamp.utctimetuple.html#pandas.Timestamp.utctimetuple
    "pandas.Timestamp.utctimetuple") raising a `TypeError` ([GH 32174](https://github.com/pandas-dev/pandas/issues/32174))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `ValueError` when parsing mixed-offset [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") with `errors='ignore'` ([GH 50585](https://github.com/pandas-dev/pandas/issues/50585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was incorrectly handling floating-point inputs within 1
    `unit` of the overflow boundaries ([GH 50183](https://github.com/pandas-dev/pandas/issues/50183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with unit of “Y” or “M” giving incorrect results, not matching
    pointwise [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") results ([GH 50870](https://github.com/pandas-dev/pandas/issues/50870))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") with datetime or timedelta dtypes incorrectly
    raising `ValueError` ([GH 11312](https://github.com/pandas-dev/pandas/issues/11312))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not returning input with `errors='ignore'` when input
    was out-of-bounds ([GH 50587](https://github.com/pandas-dev/pandas/issues/50587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.from_records()`](../reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records
    "pandas.DataFrame.from_records") when given a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") input with timezone-aware datetime64 columns incorrectly dropping
    the timezone-awareness ([GH 51162](https://github.com/pandas-dev/pandas/issues/51162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was raising `decimal.InvalidOperation` when parsing date
    strings with `errors='coerce'` ([GH 51084](https://github.com/pandas-dev/pandas/issues/51084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with both `unit` and `origin` specified returning incorrect
    results ([GH 42624](https://github.com/pandas-dev/pandas/issues/42624))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when converting an object-dtype object containing timezone-aware
    datetimes or strings to `datetime64[ns]` incorrectly localizing as UTC instead
    of raising `TypeError` ([GH 50140](https://github.com/pandas-dev/pandas/issues/50140))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") with datetime or timedelta dtypes
    giving incorrect results for groups containing `NaT` ([GH 51373](https://github.com/pandas-dev/pandas/issues/51373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.quantile()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.quantile.html#pandas.core.groupby.DataFrameGroupBy.quantile
    "pandas.core.groupby.DataFrameGroupBy.quantile") and [`SeriesGroupBy.quantile()`](../reference/api/pandas.core.groupby.SeriesGroupBy.quantile.html#pandas.core.groupby.SeriesGroupBy.quantile
    "pandas.core.groupby.SeriesGroupBy.quantile") incorrectly raising with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") ([GH 51373](https://github.com/pandas-dev/pandas/issues/51373))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") raising error when input has nullable dtype `Float64` ([GH
    48796](https://github.com/pandas-dev/pandas/issues/48796))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") constructor incorrectly raising instead of returning `NaT`
    when given a `np.timedelta64("nat")` ([GH 48898](https://github.com/pandas-dev/pandas/issues/48898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") constructor failing to raise when passed both a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") object and keywords (e.g. days, seconds) ([GH 48898](https://github.com/pandas-dev/pandas/issues/48898))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") comparisons with very large `datetime.timedelta` objects incorrect
    raising `OutOfBoundsTimedelta` ([GH 49021](https://github.com/pandas-dev/pandas/issues/49021))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") and [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") with object-dtype containing multiple timezone-aware
    `datetime` objects with heterogeneous timezones to a [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") incorrectly raising ([GH 32581](https://github.com/pandas-dev/pandas/issues/32581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was failing to parse date strings with timezone name when
    `format` was specified with `%Z` ([GH 49748](https://github.com/pandas-dev/pandas/issues/49748))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better error message when passing invalid values to `ambiguous` parameter in
    [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") ([GH 49565](https://github.com/pandas-dev/pandas/issues/49565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in string parsing incorrectly allowing a [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") to be constructed with an invalid timezone, which would raise
    when trying to print ([GH 50668](https://github.com/pandas-dev/pandas/issues/50668))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corrected TypeError message in `objects_to_datetime64ns()` to inform that DatetimeIndex
    has mixed timezones ([GH 50974](https://github.com/pandas-dev/pandas/issues/50974))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.add()`](../reference/api/pandas.DataFrame.add.html#pandas.DataFrame.add
    "pandas.DataFrame.add") cannot apply ufunc when inputs contain mixed DataFrame
    type and Series type ([GH 39853](https://github.com/pandas-dev/pandas/issues/39853))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in arithmetic operations on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") not propagating mask when combining masked dtypes and numpy dtypes
    ([GH 45810](https://github.com/pandas-dev/pandas/issues/45810), [GH 42630](https://github.com/pandas-dev/pandas/issues/42630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sem()`](../reference/api/pandas.DataFrame.sem.html#pandas.DataFrame.sem
    "pandas.DataFrame.sem") and [`Series.sem()`](../reference/api/pandas.Series.sem.html#pandas.Series.sem
    "pandas.Series.sem") where an erroneous `TypeError` would always raise when using
    data backed by an [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") ([GH 49759](https://github.com/pandas-dev/pandas/issues/49759))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__add__()` casting to object for list and masked [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 22962](https://github.com/pandas-dev/pandas/issues/22962))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `mode()` where `dropna=False` was not respected when there was `NA` values
    ([GH 50982](https://github.com/pandas-dev/pandas/issues/50982))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") with `engine="numexpr"` and column names are `min` or
    `max` would raise a `TypeError` ([GH 50937](https://github.com/pandas-dev/pandas/issues/50937))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.min()`](../reference/api/pandas.DataFrame.min.html#pandas.DataFrame.min
    "pandas.DataFrame.min") and [`DataFrame.max()`](../reference/api/pandas.DataFrame.max.html#pandas.DataFrame.max
    "pandas.DataFrame.max") with tz-aware data containing `pd.NaT` and `axis=1` would
    return incorrect results ([GH 51242](https://github.com/pandas-dev/pandas/issues/51242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `int64` dtype from a string list raising instead of casting
    ([GH 44923](https://github.com/pandas-dev/pandas/issues/44923))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in constructing [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with masked dtype and boolean values with `NA` raising ([GH 42137](https://github.com/pandas-dev/pandas/issues/42137))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") incorrectly raising an `AttributeError` when there are
    negative values in function call ([GH 46471](https://github.com/pandas-dev/pandas/issues/46471))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") not converting dtype to nullable dtype when [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") contains `NA` and has dtype `object` ([GH 48791](https://github.com/pandas-dev/pandas/issues/48791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where any `ExtensionDtype` subclass with `kind="M"` would be interpreted
    as a timezone type ([GH 34986](https://github.com/pandas-dev/pandas/issues/34986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`arrays.ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") that would raise `NotImplementedError` when
    passed a sequence of strings or binary ([GH 49172](https://github.com/pandas-dev/pandas/issues/49172))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") raising `pyarrow.ArrowInvalid` when converting from a
    non-pyarrow string dtype to a pyarrow numeric type ([GH 50430](https://github.com/pandas-dev/pandas/issues/50430))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") modifying input array inplace when converting to `string`
    and `copy=False` ([GH 51073](https://github.com/pandas-dev/pandas/issues/51073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.to_numpy()`](../reference/api/pandas.Series.to_numpy.html#pandas.Series.to_numpy
    "pandas.Series.to_numpy") converting to NumPy array before applying `na_value`
    ([GH 48951](https://github.com/pandas-dev/pandas/issues/48951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") not copying data when converting to pyarrow dtype ([GH
    50984](https://github.com/pandas-dev/pandas/issues/50984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") was not respecting `exact` argument when `format` was an
    ISO8601 format ([GH 12649](https://github.com/pandas-dev/pandas/issues/12649))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaArray.astype()` raising `TypeError` when converting to a pyarrow
    duration type ([GH 49795](https://github.com/pandas-dev/pandas/issues/49795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.eval()`](../reference/api/pandas.DataFrame.eval.html#pandas.DataFrame.eval
    "pandas.DataFrame.eval") and [`DataFrame.query()`](../reference/api/pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") raising for extension array dtypes ([GH 29618](https://github.com/pandas-dev/pandas/issues/29618),
    [GH 50261](https://github.com/pandas-dev/pandas/issues/50261), [GH 31913](https://github.com/pandas-dev/pandas/issues/31913))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series()`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    not copying data when created from [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") and `dtype` is equal to `dtype` from [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") ([GH 52008](https://github.com/pandas-dev/pandas/issues/52008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") that would not return `True` for [`StringDtype`](../reference/api/pandas.StringDtype.html#pandas.StringDtype
    "pandas.StringDtype") or [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string()` ([GH 15585](https://github.com/pandas-dev/pandas/issues/15585))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in converting string dtypes to “datetime64[ns]” or “timedelta64[ns]” incorrectly
    raising `TypeError` ([GH 36153](https://github.com/pandas-dev/pandas/issues/36153))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values in a string-dtype column with an array, mutating the array
    as side effect when it contains missing values ([GH 51299](https://github.com/pandas-dev/pandas/issues/51299))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.is_overlapping()`](../reference/api/pandas.IntervalIndex.is_overlapping.html#pandas.IntervalIndex.is_overlapping
    "pandas.IntervalIndex.is_overlapping") incorrect output if interval has duplicate
    left boundaries ([GH 49581](https://github.com/pandas-dev/pandas/issues/49581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.infer_objects()`](../reference/api/pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects") failing to infer [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") for an object series of [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") objects ([GH 50090](https://github.com/pandas-dev/pandas/issues/50090))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.shift()`](../reference/api/pandas.Series.shift.html#pandas.Series.shift
    "pandas.Series.shift") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") and invalid null `fill_value` failing to raise `TypeError`
    ([GH 51258](https://github.com/pandas-dev/pandas/issues/51258))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising when indexer is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with `boolean` dtype ([GH 47125](https://github.com/pandas-dev/pandas/issues/47125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") filling with wrong values when indexing columns and
    index for `uint` dtypes ([GH 48184](https://github.com/pandas-dev/pandas/issues/48184))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with different dtypes coercing values to single dtype ([GH
    50467](https://github.com/pandas-dev/pandas/issues/50467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") where `None` was not returned when `by` is empty
    list and `inplace=True` ([GH 50643](https://github.com/pandas-dev/pandas/issues/50643))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") coercing dtypes when setting values with a list indexer
    ([GH 49159](https://github.com/pandas-dev/pandas/issues/49159))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") raising error for out of bounds end of slice indexer ([GH
    50161](https://github.com/pandas-dev/pandas/issues/50161))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `ValueError` with all `False` `bool` indexer and
    empty object ([GH 51450](https://github.com/pandas-dev/pandas/issues/51450))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `ValueError` with `bool` indexer and [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 47687](https://github.com/pandas-dev/pandas/issues/47687))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") raising `IndexError` when setting values for a pyarrow-backed
    column with a non-scalar indexer ([GH 50085](https://github.com/pandas-dev/pandas/issues/50085))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__getitem__()`, `Series.__getitem__()`, `DataFrame.__setitem__()`
    and `Series.__setitem__()` when indexing on indexes with extension float dtypes
    (`Float64` & `Float64`) or complex dtypes using integers ([GH 51053](https://github.com/pandas-dev/pandas/issues/51053))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") modifying object when setting incompatible value with
    an empty indexer ([GH 45981](https://github.com/pandas-dev/pandas/issues/45981))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.__setitem__()` raising `ValueError` when right hand side is
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") columns ([GH 49121](https://github.com/pandas-dev/pandas/issues/49121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") casting dtype to `object` when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has single extension array column when re-indexing `columns`
    and `index` ([GH 48190](https://github.com/pandas-dev/pandas/issues/48190))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.iloc()`](../reference/api/pandas.DataFrame.iloc.html#pandas.DataFrame.iloc
    "pandas.DataFrame.iloc") raising `IndexError` when indexer is a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with numeric extension array dtype ([GH 49521](https://github.com/pandas-dev/pandas/issues/49521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") when formatting percentiles in the resulting index
    showed more decimals than needed ([GH 46362](https://github.com/pandas-dev/pandas/issues/46362))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.compare()`](../reference/api/pandas.DataFrame.compare.html#pandas.DataFrame.compare
    "pandas.DataFrame.compare") does not recognize differences when comparing `NA`
    with value in nullable dtypes ([GH 48939](https://github.com/pandas-dev/pandas/issues/48939))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.rename()`](../reference/api/pandas.Series.rename.html#pandas.Series.rename
    "pandas.Series.rename") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") losing extension array dtypes ([GH 21055](https://github.com/pandas-dev/pandas/issues/21055))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.isetitem()` coercing extension array dtypes in [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to object ([GH 49922](https://github.com/pandas-dev/pandas/issues/49922))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__getitem__()` returning corrupt object when selecting from an
    empty pyarrow backed object ([GH 51734](https://github.com/pandas-dev/pandas/issues/51734))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `BusinessHour` would cause creation of [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") to fail when no opening hour was included in the index
    ([GH 49835](https://github.com/pandas-dev/pandas/issues/49835))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Index.equals()`](../reference/api/pandas.Index.equals.html#pandas.Index.equals
    "pandas.Index.equals") raising `TypeError` when [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") consists of tuples that contain `NA` ([GH 48446](https://github.com/pandas-dev/pandas/issues/48446))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.map()`](../reference/api/pandas.Series.map.html#pandas.Series.map
    "pandas.Series.map") caused incorrect result when data has NaNs and defaultdict
    mapping was used ([GH 48813](https://github.com/pandas-dev/pandas/issues/48813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`NA`](../reference/api/pandas.NA.html#pandas.NA "pandas.NA") raising
    a `TypeError` instead of return [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") when performing a binary operation with a `bytes` object ([GH 49108](https://github.com/pandas-dev/pandas/issues/49108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") with `overwrite=False` raising `TypeError` when `self`
    has column with `NaT` values and column not present in `other` ([GH 16713](https://github.com/pandas-dev/pandas/issues/16713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `RecursionError` when replacing value in object-dtype
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    containing `NA` ([GH 47480](https://github.com/pandas-dev/pandas/issues/47480))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") raising `RecursionError` when replacing value in numeric
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    with `NA` ([GH 50758](https://github.com/pandas-dev/pandas/issues/50758))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") not matching `NaN` values ([GH 29252](https://github.com/pandas-dev/pandas/issues/29252),
    [GH 37222](https://github.com/pandas-dev/pandas/issues/37222), [GH 38623](https://github.com/pandas-dev/pandas/issues/38623),
    [GH 42883](https://github.com/pandas-dev/pandas/issues/42883), [GH 43222](https://github.com/pandas-dev/pandas/issues/43222),
    [GH 46173](https://github.com/pandas-dev/pandas/issues/46173), [GH 48905](https://github.com/pandas-dev/pandas/issues/48905))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.argsort()` raising `TypeError` when index contains [`NA`](../reference/api/pandas.NA.html#pandas.NA
    "pandas.NA") ([GH 48495](https://github.com/pandas-dev/pandas/issues/48495))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.difference()` losing extension array dtype ([GH 48606](https://github.com/pandas-dev/pandas/issues/48606))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.set_levels`](../reference/api/pandas.MultiIndex.set_levels.html#pandas.MultiIndex.set_levels
    "pandas.MultiIndex.set_levels") raising `IndexError` when setting empty level
    ([GH 48636](https://github.com/pandas-dev/pandas/issues/48636))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.unique()` losing extension array dtype ([GH 48335](https://github.com/pandas-dev/pandas/issues/48335))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.intersection()` losing extension array ([GH 48604](https://github.com/pandas-dev/pandas/issues/48604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` losing extension array ([GH 48498](https://github.com/pandas-dev/pandas/issues/48498),
    [GH 48505](https://github.com/pandas-dev/pandas/issues/48505), [GH 48900](https://github.com/pandas-dev/pandas/issues/48900))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.union()` not sorting when sort=None and index contains missing
    values ([GH 49010](https://github.com/pandas-dev/pandas/issues/49010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.append()`](../reference/api/pandas.MultiIndex.append.html#pandas.MultiIndex.append
    "pandas.MultiIndex.append") not checking names for equality ([GH 48288](https://github.com/pandas-dev/pandas/issues/48288))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.symmetric_difference()` losing extension array ([GH 48607](https://github.com/pandas-dev/pandas/issues/48607))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.join()` losing dtypes when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") has duplicates ([GH 49830](https://github.com/pandas-dev/pandas/issues/49830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.putmask()` losing extension array ([GH 49830](https://github.com/pandas-dev/pandas/issues/49830))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.value_counts()` returning a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") indexed by flat index of tuples instead of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 49558](https://github.com/pandas-dev/pandas/issues/49558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") caused fragmentation of [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") and raised [`errors.PerformanceWarning`](../reference/api/pandas.errors.PerformanceWarning.html#pandas.errors.PerformanceWarning
    "pandas.errors.PerformanceWarning") ([GH 48595](https://github.com/pandas-dev/pandas/issues/48595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") by including the offending sheet name when an exception is
    raised while reading a file ([GH 48706](https://github.com/pandas-dev/pandas/issues/48706))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when a pickling a subset PyArrow-backed data that would serialize the entire
    data instead of the subset ([GH 42600](https://github.com/pandas-dev/pandas/issues/42600))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_sql_query()`](../reference/api/pandas.read_sql_query.html#pandas.read_sql_query
    "pandas.read_sql_query") ignoring `dtype` argument when `chunksize` is specified
    and result is empty ([GH 50245](https://github.com/pandas-dev/pandas/issues/50245))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") for a single-line csv with fewer columns than `names` raised
    [`errors.ParserError`](../reference/api/pandas.errors.ParserError.html#pandas.errors.ParserError
    "pandas.errors.ParserError") with `engine="c"` ([GH 47566](https://github.com/pandas-dev/pandas/issues/47566))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") raising with `orient="table"` and `NA` value ([GH 40255](https://github.com/pandas-dev/pandas/issues/40255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in displaying `string` dtypes not showing storage option ([GH 50099](https://github.com/pandas-dev/pandas/issues/50099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") with `header=False` that printed the index name
    on the same line as the first row of the data ([GH 49230](https://github.com/pandas-dev/pandas/issues/49230))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") ignoring float formatter for extension arrays ([GH
    39336](https://github.com/pandas-dev/pandas/issues/39336))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed memory leak which stemmed from the initialization of the internal JSON
    module ([GH 49222](https://github.com/pandas-dev/pandas/issues/49222))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed issue where [`json_normalize()`](../reference/api/pandas.json_normalize.html#pandas.json_normalize
    "pandas.json_normalize") would incorrectly remove leading characters from column
    names that matched the `sep` argument ([GH 49861](https://github.com/pandas-dev/pandas/issues/49861))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") unnecessarily overflowing for extension array dtype when containing
    `NA` ([GH 32134](https://github.com/pandas-dev/pandas/issues/32134))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") not converting `NA` to `None` ([GH 50795](https://github.com/pandas-dev/pandas/issues/50795))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") where it would segfault when failing to encode a string
    ([GH 50307](https://github.com/pandas-dev/pandas/issues/50307))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") with `na_rep` set when the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") contains non-scalar data ([GH 47103](https://github.com/pandas-dev/pandas/issues/47103))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") where file-like objects failed when iterparse is used ([GH
    50641](https://github.com/pandas-dev/pandas/issues/50641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") when `engine="pyarrow"` where `encoding` parameter was not
    handled correctly ([GH 51302](https://github.com/pandas-dev/pandas/issues/51302))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_xml()`](../reference/api/pandas.read_xml.html#pandas.read_xml
    "pandas.read_xml") ignored repeated elements when iterparse is used ([GH 51183](https://github.com/pandas-dev/pandas/issues/51183))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ExcelWriter`](../reference/api/pandas.ExcelWriter.html#pandas.ExcelWriter
    "pandas.ExcelWriter") leaving file handles open if an exception occurred during
    instantiation ([GH 51443](https://github.com/pandas-dev/pandas/issues/51443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") where non-string index or columns were raising
    a `ValueError` when `engine="pyarrow"` ([GH 52036](https://github.com/pandas-dev/pandas/issues/52036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Period.strftime()`](../reference/api/pandas.Period.strftime.html#pandas.Period.strftime
    "pandas.Period.strftime") and [`PeriodIndex.strftime()`](../reference/api/pandas.PeriodIndex.strftime.html#pandas.PeriodIndex.strftime
    "pandas.PeriodIndex.strftime"), raising `UnicodeDecodeError` when a locale-specific
    directive was passed ([GH 46319](https://github.com/pandas-dev/pandas/issues/46319))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding a [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") object to an array of `DateOffset` objects incorrectly raising
    `TypeError` ([GH 50162](https://github.com/pandas-dev/pandas/issues/50162))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    where passing a string with finer resolution than nanosecond would result in a
    `KeyError` instead of dropping the extra precision ([GH 50417](https://github.com/pandas-dev/pandas/issues/50417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing strings representing Week-periods e.g. “2017-01-23/2017-01-29”
    as minute-frequency instead of week-frequency ([GH 50803](https://github.com/pandas-dev/pandas/issues/50803))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sum()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sum.html#pandas.core.groupby.DataFrameGroupBy.sum
    "pandas.core.groupby.DataFrameGroupBy.sum"), `DataFrameGroupByGroupBy.cumsum()`,
    `DataFrameGroupByGroupBy.prod()`, `DataFrameGroupByGroupBy.cumprod()` with [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") failing to raise `TypeError` ([GH 51040](https://github.com/pandas-dev/pandas/issues/51040))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing empty string with [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") incorrectly raising `ValueError` instead of returning `NaT` ([GH
    51349](https://github.com/pandas-dev/pandas/issues/51349))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.hist()`](../reference/api/pandas.DataFrame.plot.hist.html#pandas.DataFrame.plot.hist
    "pandas.DataFrame.plot.hist"), not dropping elements of `weights` corresponding
    to `NaN` values in `data` ([GH 48884](https://github.com/pandas-dev/pandas/issues/48884))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ax.set_xlim` was sometimes raising `UserWarning` which users couldn’t address
    due to `set_xlim` not accepting parsing arguments - the converter now uses [`Timestamp()`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") instead ([GH 49148](https://github.com/pandas-dev/pandas/issues/49148))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `ExponentialMovingWindow` with `online` not raising a `NotImplementedError`
    for unsupported operations ([GH 48834](https://github.com/pandas-dev/pandas/issues/48834))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.sample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.sample.html#pandas.core.groupby.DataFrameGroupBy.sample
    "pandas.core.groupby.DataFrameGroupBy.sample") raises `ValueError` when the object
    is empty ([GH 48459](https://github.com/pandas-dev/pandas/issues/48459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") raises `ValueError` when an entry of the index is equal
    to the name of the index ([GH 48567](https://github.com/pandas-dev/pandas/issues/48567))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") produces inconsistent results
    when passing empty DataFrame ([GH 47705](https://github.com/pandas-dev/pandas/issues/47705))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` would not include unobserved categories
    in result when grouping by categorical indexes ([GH 49354](https://github.com/pandas-dev/pandas/issues/49354))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` would change result order depending
    on the input index when grouping by categoricals ([GH 49223](https://github.com/pandas-dev/pandas/issues/49223))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` when grouping on categorical data
    would sort result values even when used with `sort=False` ([GH 42482](https://github.com/pandas-dev/pandas/issues/42482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and `SeriesGroupBy.apply` with `as_index=False`
    would not attempt the computation without using the grouping keys when using them
    failed with a `TypeError` ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") would describe the group keys
    ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.describe()`](../reference/api/pandas.core.groupby.SeriesGroupBy.describe.html#pandas.core.groupby.SeriesGroupBy.describe
    "pandas.core.groupby.SeriesGroupBy.describe") with `as_index=False` would have
    the incorrect shape ([GH 49256](https://github.com/pandas-dev/pandas/issues/49256))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` and `SeriesGroupBy` with `dropna=False` would drop
    NA values when the grouper was categorical ([GH 36327](https://github.com/pandas-dev/pandas/issues/36327))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") would incorrectly raise when the
    grouper was an empty categorical and `observed=True` ([GH 21334](https://github.com/pandas-dev/pandas/issues/21334))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.nth()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nth.html#pandas.core.groupby.SeriesGroupBy.nth
    "pandas.core.groupby.SeriesGroupBy.nth") would raise when grouper contained NA
    values after subsetting from a `DataFrameGroupBy` ([GH 26454](https://github.com/pandas-dev/pandas/issues/26454))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") would not include a [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") specified by `key` in the result when `as_index=False` ([GH
    50413](https://github.com/pandas-dev/pandas/issues/50413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") would raise when used with
    a `TimeGrouper` ([GH 50486](https://github.com/pandas-dev/pandas/issues/50486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Resampler.size()`](../reference/api/pandas.core.resample.Resampler.size.html#pandas.core.resample.Resampler.size
    "pandas.core.resample.Resampler.size") caused a wide [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to be returned instead of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 46826](https://github.com/pandas-dev/pandas/issues/46826))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") would raise incorrectly when grouper
    had `axis=1` for `"idxmin"` and `"idxmax"` arguments ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy` would raise when used with an empty DataFrame, categorical
    grouper, and `dropna=False` ([GH 50634](https://github.com/pandas-dev/pandas/issues/50634))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") did not respect `sort=False`
    ([GH 50482](https://github.com/pandas-dev/pandas/issues/50482))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample") raises `KeyError` when getting
    the result from a key list when resampling on time index ([GH 50840](https://github.com/pandas-dev/pandas/issues/50840))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") would raise incorrectly when grouper
    had `axis=1` for `"ngroup"` argument ([GH 45986](https://github.com/pandas-dev/pandas/issues/45986))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.describe()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.describe.html#pandas.core.groupby.DataFrameGroupBy.describe
    "pandas.core.groupby.DataFrameGroupBy.describe") produced incorrect results when
    data had duplicate columns ([GH 50806](https://github.com/pandas-dev/pandas/issues/50806))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg") with `engine="numba"` failing to respect
    `as_index=False` ([GH 51228](https://github.com/pandas-dev/pandas/issues/51228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.agg()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html#pandas.core.groupby.DataFrameGroupBy.agg
    "pandas.core.groupby.DataFrameGroupBy.agg"), [`SeriesGroupBy.agg()`](../reference/api/pandas.core.groupby.SeriesGroupBy.agg.html#pandas.core.groupby.SeriesGroupBy.agg
    "pandas.core.groupby.SeriesGroupBy.agg"), and `Resampler.agg()` would ignore arguments
    when passed a list of functions ([GH 50863](https://github.com/pandas-dev/pandas/issues/50863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.ohlc()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ohlc.html#pandas.core.groupby.DataFrameGroupBy.ohlc
    "pandas.core.groupby.DataFrameGroupBy.ohlc") ignoring `as_index=False` ([GH 51413](https://github.com/pandas-dev/pandas/issues/51413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrameGroupBy.agg()` after subsetting columns (e.g. `.groupby(...)[["a",
    "b"]]`) would not include groupings in the result ([GH 51186](https://github.com/pandas-dev/pandas/issues/51186))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") raising `TypeError` for nullable dtype and `margins=True`
    ([GH 48681](https://github.com/pandas-dev/pandas/issues/48681))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") and [`Series.unstack()`](../reference/api/pandas.Series.unstack.html#pandas.Series.unstack
    "pandas.Series.unstack") unstacking wrong level of [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") has mixed names ([GH 48763](https://github.com/pandas-dev/pandas/issues/48763))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") losing extension array dtype ([GH 41570](https://github.com/pandas-dev/pandas/issues/41570))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") not respecting `None` as column name ([GH 48293](https://github.com/pandas-dev/pandas/issues/48293))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when `left_on` or `right_on` is or includes a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") incorrectly raising `AttributeError` ([GH 48464](https://github.com/pandas-dev/pandas/issues/48464))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") raising `ValueError` with parameter `margins=True`
    when result is an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") ([GH 49240](https://github.com/pandas-dev/pandas/issues/49240))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clarified error message in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") when passing invalid `validate` option ([GH 49417](https://github.com/pandas-dev/pandas/issues/49417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.explode()`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") raising `ValueError` on multiple columns with `NaN`
    values or empty lists ([GH 46084](https://github.com/pandas-dev/pandas/issues/46084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.transpose()`](../reference/api/pandas.DataFrame.transpose.html#pandas.DataFrame.transpose
    "pandas.DataFrame.transpose") with `IntervalDtype` column with `timedelta64[ns]`
    endpoints ([GH 44917](https://github.com/pandas-dev/pandas/issues/44917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.agg()`](../reference/api/pandas.DataFrame.agg.html#pandas.DataFrame.agg
    "pandas.DataFrame.agg") and [`Series.agg()`](../reference/api/pandas.Series.agg.html#pandas.Series.agg
    "pandas.Series.agg") would ignore arguments when passed a list of functions ([GH
    50863](https://github.com/pandas-dev/pandas/issues/50863))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") when converting a `SparseDtype` with `datetime64[ns]`
    subtype to `int64` dtype raising, inconsistent with the non-sparse behavior ([GH
    49631](https://github.com/pandas-dev/pandas/issues/49631),:issue:50087)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") when converting a from `datetime64[ns]` to `Sparse[datetime64[ns]]`
    incorrectly raising ([GH 50082](https://github.com/pandas-dev/pandas/issues/50082))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.sparse.to_coo()`](../reference/api/pandas.Series.sparse.to_coo.html#pandas.Series.sparse.to_coo
    "pandas.Series.sparse.to_coo") raising `SystemError` when [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") contains a `ExtensionArray` ([GH 50996](https://github.com/pandas-dev/pandas/issues/50996))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ExtensionArray
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Series.mean()`](../reference/api/pandas.Series.mean.html#pandas.Series.mean
    "pandas.Series.mean") overflowing unnecessarily with nullable integers ([GH 48378](https://github.com/pandas-dev/pandas/issues/48378))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.tolist()` for nullable dtypes returning numpy scalars instead
    of python scalars ([GH 49890](https://github.com/pandas-dev/pandas/issues/49890))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") for pyarrow-backed dtypes raising `AttributeError` ([GH
    50437](https://github.com/pandas-dev/pandas/issues/50437))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when concatenating an empty DataFrame with an ExtensionDtype to another
    DataFrame with the same ExtensionDtype, the resulting dtype turned into object
    ([GH 48510](https://github.com/pandas-dev/pandas/issues/48510))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `array.PandasArray.to_numpy()` raising with `NA` value when `na_value`
    is specified ([GH 40638](https://github.com/pandas-dev/pandas/issues/40638))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.types.is_numeric_dtype()`](../reference/api/pandas.api.types.is_numeric_dtype.html#pandas.api.types.is_numeric_dtype
    "pandas.api.types.is_numeric_dtype") where a custom `ExtensionDtype` would not
    return `True` if `_is_numeric` returned `True` ([GH 50563](https://github.com/pandas-dev/pandas/issues/50563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.types.is_integer_dtype()`](../reference/api/pandas.api.types.is_integer_dtype.html#pandas.api.types.is_integer_dtype
    "pandas.api.types.is_integer_dtype"), [`api.types.is_unsigned_integer_dtype()`](../reference/api/pandas.api.types.is_unsigned_integer_dtype.html#pandas.api.types.is_unsigned_integer_dtype
    "pandas.api.types.is_unsigned_integer_dtype"), [`api.types.is_signed_integer_dtype()`](../reference/api/pandas.api.types.is_signed_integer_dtype.html#pandas.api.types.is_signed_integer_dtype
    "pandas.api.types.is_signed_integer_dtype"), [`api.types.is_float_dtype()`](../reference/api/pandas.api.types.is_float_dtype.html#pandas.api.types.is_float_dtype
    "pandas.api.types.is_float_dtype") where a custom `ExtensionDtype` would not return
    `True` if `kind` returned the corresponding NumPy type ([GH 50667](https://github.com/pandas-dev/pandas/issues/50667))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    constructor unnecessarily overflowing for nullable unsigned integer dtypes ([GH
    38798](https://github.com/pandas-dev/pandas/issues/38798), [GH 25880](https://github.com/pandas-dev/pandas/issues/25880))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting non-string value into `StringArray` raising `ValueError` instead
    of `TypeError` ([GH 49632](https://github.com/pandas-dev/pandas/issues/49632))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") not honoring the default `copy=True` keyword in case
    of columns with ExtensionDtype (and as a result also selecting multiple columns
    with getitem (`[]`) didn’t correctly result in a copy) ([GH 51197](https://github.com/pandas-dev/pandas/issues/51197))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`ArrowExtensionArray`](../reference/api/pandas.arrays.ArrowExtensionArray.html#pandas.arrays.ArrowExtensionArray
    "pandas.arrays.ArrowExtensionArray") logical operations `&` and `|` raising `KeyError`
    ([GH 51688](https://github.com/pandas-dev/pandas/issues/51688))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Styler
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fix [`background_gradient()`](../reference/api/pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient") for nullable dtype [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with `NA` values ([GH 50712](https://github.com/pandas-dev/pandas/issues/50712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metadata
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fixed metadata propagation in [`DataFrame.corr()`](../reference/api/pandas.DataFrame.corr.html#pandas.DataFrame.corr
    "pandas.DataFrame.corr") and [`DataFrame.cov()`](../reference/api/pandas.DataFrame.cov.html#pandas.DataFrame.cov
    "pandas.DataFrame.cov") ([GH 28283](https://github.com/pandas-dev/pandas/issues/28283))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in incorrectly accepting dtype strings containing “[pyarrow]” more than
    once ([GH 51548](https://github.com/pandas-dev/pandas/issues/51548))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.searchsorted()`](../reference/api/pandas.Series.searchsorted.html#pandas.Series.searchsorted
    "pandas.Series.searchsorted") inconsistent behavior when accepting [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") as parameter `value` ([GH 49620](https://github.com/pandas-dev/pandas/issues/49620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`array()`](../reference/api/pandas.array.html#pandas.array "pandas.array")
    failing to raise on [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") inputs ([GH 51167](https://github.com/pandas-dev/pandas/issues/51167))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 260 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: 5j9 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ABCPAN-rank +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aarni Koskela +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aashish KC +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abubeker Mohammed +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Mróz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Ormondroyd +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aditya Anulekh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmed Ibrahim
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Akshay Babbar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aleksa Radojicic +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Buzenet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alex Kirko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allison Kwan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amay Patel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ambuj Pawar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amotz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Schwab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Chen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anton Shevtsov
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Ossa Guerra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Ossa-Guerra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anushka Bishnoi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arda Kosar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Armin Berres
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asadullah Naeem +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Asish Mahapatra
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bailey Lissington +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BarkotBeyene
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Beasley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bhavesh Rajendra Patil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bibek Jha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bill +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bishwas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CarlosGDCJ +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Carlotta Fabian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Roth +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chuck Cadman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corralien +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DG +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Hendry +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Isaac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Kleindienst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Poznik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Rudel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DavidKleindienst +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dea María Léon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepak Sirohiwal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dennis Chukwunta
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Douglas Lohmann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dries Schaumont
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dustin K +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Edoardo Abati +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eduardo Chaves +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ege Özgüroğlu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ekaterina Borovikova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eli Schwartz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elvis Lim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emily Taylor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emma Carballal Haire +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Erik Welch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Florian Hofstetter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flynn Owen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fredrik Erlandsson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaurav Sheni
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Georeth Chow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: George Munyoro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guilherme Beltramini
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gulnur Baimukhambetova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: H L +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hatim Zahid +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HighYoda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hiki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Himanshu Wagh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hugo van Kemenade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Idil Ismiguzel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Irv Lustig
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Chung
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JHM Darbyshire (iMac)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JMBurley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaime Di Cristina
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Koch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JanVHII +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Janosh Riebesell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JasmandeepKaur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeremy Tuloup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jessica M +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Haag
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: João Meirelles +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julia Aoun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Justus Magin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kang Su Min +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Khor Chean Wei
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kian Eliasi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kostya Farber +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KotlinIsland +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lakmal Pinnaduwage +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lakshya A Agrawal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lawrence Mitchell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Levi Ob +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loic Diridollou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lorenzo Vainigli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luca Pizzini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lucas Damo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Madhuri Patil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maren Westermann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maria Stazherova +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marie K +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marielle +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Harfouche +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marko Pacak +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Cerqueira +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Pedroni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matteo Raso +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MeeseeksMachine +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mehdi Mohammadi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Harris +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Mior +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natalia Mokeeva +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Neal Muppidi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Crews
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nishu Choudhary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noa Tamir
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Noritada Kobayashi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omkar Yadav +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: P. Talley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pablo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parfait Gasana
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pedro Nacht +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pietro Battiston
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pooja Subramaniam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranav Saibhushan Ravuri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pranav. P. A +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ralf Gommers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RaphSku +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robsdedude +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roger Thomas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RogerThomas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SFuller4 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Salahuddin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sam Rao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sean Patrick Malloy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Roll +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shantanu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashwat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shashwat Agrawal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shiko Wamwea +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shoham Debnath
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shubhankar Lohani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Siddhartha Gandhi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simon Hawkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Soumik Dutta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sowrov Talukder +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Senger +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stepfen Shawn +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Steven Rotondo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn Van Hoey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sudhansu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sven
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain MARIE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sylvain Marié
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tabea Kossen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taylor Packard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terji Petersen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thierry Moisan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas H +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tsvika S +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tsvika Shapira +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vamsi Verma +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vinicius Akira +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Blum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wilson Xing +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xiao Yuan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xnot +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yasin Tatar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuanhao Geng
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yvan Cywan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zachary Moon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zhengbo Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: abonte +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: adrienpacifico +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: alm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: amotzop +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: andyjessen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: anonmouse1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bang128 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: bishwas jha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: calhockemeyer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: carla-alves-24 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: carlotta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: casadipietra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: catmar22 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cfabian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: codamuse +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dataxerik
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: davidleon123 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dependabot[bot] +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fdrocha +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: github-actions[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: himanshu_wagh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iofall +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jakirkham +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jnclt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joelchen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joelsonoda +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joshuabello2550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: joycewamwea +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kathleenhang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: krasch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ltoniazzi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: luke396 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: milosz-martynow +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: minat-hub +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mliu08 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: monosans +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nealxm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: nikitaved +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paradox-lab +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: partev
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raisadz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ram vikram singh +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rebecca-palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sarvaSanjay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: seljaks +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: silviaovo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smij720 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: soumilbaldota +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: stellalin7 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: strawberry beach sandals +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tmoschou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: uzzell +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yqyqyq-W +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yun +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ádám Lippai
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 김동현 (Daniel Donghyun Kim) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
