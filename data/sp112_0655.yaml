- en: scipy.signal.find_peaks_cwt
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.find_peaks_cwt
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.find_peaks_cwt.html#scipy.signal.find_peaks_cwt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.find_peaks_cwt.html#scipy.signal.find_peaks_cwt)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.find_peaks_cwt.html#scipy.signal.find_peaks_cwt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.find_peaks_cwt.html#scipy.signal.find_peaks_cwt)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Find peaks in a 1-D array with wavelet transformation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用小波变换在一维数组中找到峰值。
- en: The general approach is to smooth *vector* by convolving it with *wavelet(width)*
    for each width in *widths*. Relative maxima which appear at enough length scales,
    and with sufficiently high SNR, are accepted.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一般方法是通过将*向量*与每个*宽度*中的*小波（width）*卷积来平滑*向量*。足够长的多尺度上出现的相对最大值，并且具有足够高的信噪比，将被接受。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**vector**ndarray'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**向量** ndarray'
- en: 1-D array in which to find the peaks.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要在其中找到峰值的一维数组。
- en: '**widths**float or sequence'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**宽度**浮点数或序列'
- en: Single width or 1-D array-like of widths to use for calculating the CWT matrix.
    In general, this range should cover the expected width of peaks of interest.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 单个宽度或用于计算CWT矩阵的一维类似宽度数组。一般来说，这个范围应该覆盖感兴趣峰值的预期宽度。
- en: '**wavelet**callable, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**小波**可调用函数，可选项'
- en: Should take two parameters and return a 1-D array to convolve with *vector*.
    The first parameter determines the number of points of the returned wavelet array,
    the second parameter is the scale (*width*) of the wavelet. Should be normalized
    and symmetric. Default is the ricker wavelet.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 应接受两个参数并返回与*向量*卷积的一维数组。第一个参数确定返回的小波数组的点数，第二个参数是小波的尺度（*宽度*）。应该是归一化和对称的。默认为里克小波。
- en: '**max_distances**ndarray, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**最大距离** ndarray，可选项'
- en: At each row, a ridge line is only connected if the relative max at row[n] is
    within `max_distances[n]` from the relative max at `row[n+1]`. Default value is
    `widths/4`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在每一行，只有当在`row[n]`处的相对最大值与`row[n+1]`处的相对最大值在`max_distances[n]`内时，才连接一条脊线。默认值为`widths/4`。
- en: '**gap_thresh**float, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**间隙阈值**浮点数，可选项'
- en: If a relative maximum is not found within *max_distances*, there will be a gap.
    A ridge line is discontinued if there are more than *gap_thresh* points without
    connecting a new relative maximum. Default is the first value of the widths array
    i.e. widths[0].
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在*max_distances*内找不到相对最大值，则会有一个间隙。如果有超过*gap_thresh*个点而不连接新的相对最大值，则脊线被中断。默认值是宽度数组的第一个值，即widths[0]。
- en: '**min_length**int, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**最小长度**整数，可选项'
- en: Minimum length a ridge line needs to be acceptable. Default is `cwt.shape[0]
    / 4`, ie 1/4-th the number of widths.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 脊线需要接受的最小长度。默认为`cwt.shape[0] / 4`，即宽度的四分之一。
- en: '**min_snr**float, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**最小信噪比**浮点数，可选项'
- en: Minimum SNR ratio. Default 1\. The signal is the maximum CWT coefficient on
    the largest ridge line. The noise is *noise_perc* th percentile of datapoints
    contained within the same ridge line.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 最小信噪比。默认值为1。信号是最大的CWT系数在最大脊线上。噪声是*noise_perc*百分位数的数据点，这些数据点包含在同一脊线内。
- en: '**noise_perc**float, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**噪声百分比**浮点数，可选项'
- en: When calculating the noise floor, percentile of data points examined below which
    to consider noise. Calculated using *stats.scoreatpercentile*. Default is 10.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算噪声底线时，百分位数的数据点低于这个值被认为是噪声。使用*stats.scoreatpercentile*计算。默认值为10。
- en: '**window_size**int, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**窗口大小**整数，可选项'
- en: Size of window to use to calculate noise floor. Default is `cwt.shape[1] / 20`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 用于计算噪声底线的窗口大小。默认值为`cwt.shape[1] / 20`。
- en: 'Returns:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**peaks_indices**ndarray'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**峰值索引** ndarray'
- en: Indices of the locations in the *vector* where peaks were found. The list is
    sorted.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 找到峰值的*向量*中的位置的索引。列表已排序。
- en: See also
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`cwt`](scipy.signal.cwt.html#scipy.signal.cwt "scipy.signal.cwt")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`cwt`](scipy.signal.cwt.html#scipy.signal.cwt "scipy.signal.cwt")'
- en: Continuous wavelet transform.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 连续小波变换。
- en: '[`find_peaks`](scipy.signal.find_peaks.html#scipy.signal.find_peaks "scipy.signal.find_peaks")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`find_peaks`](scipy.signal.find_peaks.html#scipy.signal.find_peaks "scipy.signal.find_peaks")'
- en: Find peaks inside a signal based on peak properties.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 根据峰值属性在信号内部找到峰值。
- en: Notes
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记
- en: This approach was designed for finding sharp peaks among noisy data, however
    with proper parameter selection it should function well for different peak shapes.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法旨在从嘈杂数据中找出尖峰，但通过适当的参数选择，它应该能够很好地适应不同的峰形状。
- en: 'The algorithm is as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 算法如下：
- en: Perform a continuous wavelet transform on *vector*, for the supplied *widths*.
    This is a convolution of *vector* with *wavelet(width)* for each width in *widths*.
    See [`cwt`](scipy.signal.cwt.html#scipy.signal.cwt "scipy.signal.cwt").
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对 *vector* 执行连续小波变换，使用提供的 *widths*。这是 *vector* 与每个 *widths* 中的 *wavelet(width)*
    的卷积。参见 [`cwt`](scipy.signal.cwt.html#scipy.signal.cwt "scipy.signal.cwt")。
- en: Identify “ridge lines” in the cwt matrix. These are relative maxima at each
    row, connected across adjacent rows. See identify_ridge_lines
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 cwt 矩阵中识别“脊线”。这些是每行的相对最大值，在相邻行之间连接。参见 identify_ridge_lines
- en: Filter the ridge_lines using filter_ridge_lines.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `filter_ridge_lines` 过滤脊线。
- en: New in version 0.11.0.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 新功能在版本 0.11.0 中引入。
- en: References
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 参考
- en: '[1]'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: 'Bioinformatics (2006) 22 (17): 2059-2065. [DOI:10.1093/bioinformatics/btl355](https://doi.org/10.1093/bioinformatics/btl355)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 生物信息学（2006）22（17）：2059-2065。[DOI:10.1093/bioinformatics/btl355](https://doi.org/10.1093/bioinformatics/btl355)
- en: Examples
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
