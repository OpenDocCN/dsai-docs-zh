- en: pandas.arrays.IntervalArray
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.arrays.IntervalArray.html](https://pandas.pydata.org/docs/reference/api/pandas.arrays.IntervalArray.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Pandas array for interval data that are closed on the same side.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**data**array-like (1-dimensional)'
  prefs: []
  type: TYPE_NORMAL
- en: Array-like (ndarray, `DateTimeArray`, `TimeDeltaArray`) containing Interval
    objects from which to build the IntervalArray.
  prefs: []
  type: TYPE_NORMAL
- en: '**closed**{‘left’, ‘right’, ‘both’, ‘neither’}, default ‘right’'
  prefs: []
  type: TYPE_NORMAL
- en: Whether the intervals are closed on the left-side, right-side, both or neither.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**dtype or None, default None'
  prefs: []
  type: TYPE_NORMAL
- en: If None, dtype will be inferred.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Copy the input data.
  prefs: []
  type: TYPE_NORMAL
- en: '**verify_integrity**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Verify that the IntervalArray is valid.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '`Index`'
  prefs: []
  type: TYPE_NORMAL
- en: The base pandas Index type.
  prefs: []
  type: TYPE_NORMAL
- en: '`Interval`'
  prefs: []
  type: TYPE_NORMAL
- en: A bounded slice-like interval; the elements of an IntervalArray.
  prefs: []
  type: TYPE_NORMAL
- en: '`interval_range`'
  prefs: []
  type: TYPE_NORMAL
- en: Function to create a fixed frequency IntervalIndex.
  prefs: []
  type: TYPE_NORMAL
- en: '`cut`'
  prefs: []
  type: TYPE_NORMAL
- en: Bin values into discrete Intervals.
  prefs: []
  type: TYPE_NORMAL
- en: '`qcut`'
  prefs: []
  type: TYPE_NORMAL
- en: Bin values into equal-sized Intervals based on rank or sample quantiles.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: See the [user guide](https://pandas.pydata.org/pandas-docs/stable/user_guide/advanced.html#intervalindex)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'A new `IntervalArray` can be constructed directly from an array-like of `Interval`
    objects:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'It may also be constructed using one of the constructor methods: [`IntervalArray.from_arrays()`](pandas.arrays.IntervalArray.from_arrays.html#pandas.arrays.IntervalArray.from_arrays
    "pandas.arrays.IntervalArray.from_arrays"), [`IntervalArray.from_breaks()`](pandas.arrays.IntervalArray.from_breaks.html#pandas.arrays.IntervalArray.from_breaks
    "pandas.arrays.IntervalArray.from_breaks"), and [`IntervalArray.from_tuples()`](pandas.arrays.IntervalArray.from_tuples.html#pandas.arrays.IntervalArray.from_tuples
    "pandas.arrays.IntervalArray.from_tuples").'
  prefs: []
  type: TYPE_NORMAL
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| [`left`](pandas.arrays.IntervalArray.left.html#pandas.arrays.IntervalArray.left
    "pandas.arrays.IntervalArray.left") | Return the left endpoints of each Interval
    in the IntervalArray as an Index. |'
  prefs: []
  type: TYPE_TB
- en: '| [`right`](pandas.arrays.IntervalArray.right.html#pandas.arrays.IntervalArray.right
    "pandas.arrays.IntervalArray.right") | Return the right endpoints of each Interval
    in the IntervalArray as an Index. |'
  prefs: []
  type: TYPE_TB
- en: '| [`closed`](pandas.arrays.IntervalArray.closed.html#pandas.arrays.IntervalArray.closed
    "pandas.arrays.IntervalArray.closed") | String describing the inclusive side the
    intervals. |'
  prefs: []
  type: TYPE_TB
- en: '| [`mid`](pandas.arrays.IntervalArray.mid.html#pandas.arrays.IntervalArray.mid
    "pandas.arrays.IntervalArray.mid") | Return the midpoint of each Interval in the
    IntervalArray as an Index. |'
  prefs: []
  type: TYPE_TB
- en: '| [`length`](pandas.arrays.IntervalArray.length.html#pandas.arrays.IntervalArray.length
    "pandas.arrays.IntervalArray.length") | Return an Index with entries denoting
    the length of each Interval. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_empty`](pandas.arrays.IntervalArray.is_empty.html#pandas.arrays.IntervalArray.is_empty
    "pandas.arrays.IntervalArray.is_empty") | Indicates if an interval is empty, meaning
    it contains no points. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_non_overlapping_monotonic`](pandas.arrays.IntervalArray.is_non_overlapping_monotonic.html#pandas.arrays.IntervalArray.is_non_overlapping_monotonic
    "pandas.arrays.IntervalArray.is_non_overlapping_monotonic") | Return a boolean
    whether the IntervalArray is non-overlapping and monotonic. |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`from_arrays`](pandas.arrays.IntervalArray.from_arrays.html#pandas.arrays.IntervalArray.from_arrays
    "pandas.arrays.IntervalArray.from_arrays")(left, right[, closed, copy, dtype])
    | Construct from two arrays defining the left and right bounds. |'
  prefs: []
  type: TYPE_TB
- en: '| [`from_tuples`](pandas.arrays.IntervalArray.from_tuples.html#pandas.arrays.IntervalArray.from_tuples
    "pandas.arrays.IntervalArray.from_tuples")(data[, closed, copy, dtype]) | Construct
    an IntervalArray from an array-like of tuples. |'
  prefs: []
  type: TYPE_TB
- en: '| [`from_breaks`](pandas.arrays.IntervalArray.from_breaks.html#pandas.arrays.IntervalArray.from_breaks
    "pandas.arrays.IntervalArray.from_breaks")(breaks[, closed, copy, dtype]) | Construct
    an IntervalArray from an array of splits. |'
  prefs: []
  type: TYPE_TB
- en: '| [`contains`](pandas.arrays.IntervalArray.contains.html#pandas.arrays.IntervalArray.contains
    "pandas.arrays.IntervalArray.contains")(other) | Check elementwise if the Intervals
    contain the value. |'
  prefs: []
  type: TYPE_TB
- en: '| [`overlaps`](pandas.arrays.IntervalArray.overlaps.html#pandas.arrays.IntervalArray.overlaps
    "pandas.arrays.IntervalArray.overlaps")(other) | Check elementwise if an Interval
    overlaps the values in the IntervalArray. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_closed`](pandas.arrays.IntervalArray.set_closed.html#pandas.arrays.IntervalArray.set_closed
    "pandas.arrays.IntervalArray.set_closed")(closed) | Return an identical IntervalArray
    closed on the specified side. |'
  prefs: []
  type: TYPE_TB
- en: '| [`to_tuples`](pandas.arrays.IntervalArray.to_tuples.html#pandas.arrays.IntervalArray.to_tuples
    "pandas.arrays.IntervalArray.to_tuples")([na_tuple]) | Return an ndarray (if self
    is IntervalArray) or Index (if self is IntervalIndex) of tuples of the form (left,
    right). |'
  prefs: []
  type: TYPE_TB
