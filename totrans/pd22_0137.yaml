- en: pandas.interval_range
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.interval_range.html](https://pandas.pydata.org/docs/reference/api/pandas.interval_range.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return a fixed frequency IntervalIndex.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**start**numeric or datetime-like, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Left bound for generating intervals.
  prefs: []
  type: TYPE_NORMAL
- en: '**end**numeric or datetime-like, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Right bound for generating intervals.
  prefs: []
  type: TYPE_NORMAL
- en: '**periods**int, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Number of periods to generate.
  prefs: []
  type: TYPE_NORMAL
- en: '**freq**numeric, str, Timedelta, datetime.timedelta, or DateOffset, default
    None'
  prefs: []
  type: TYPE_NORMAL
- en: The length of each interval. Must be consistent with the type of start and end,
    e.g. 2 for numeric, or ‘5H’ for datetime-like. Default is 1 for numeric and ‘D’
    for datetime-like.
  prefs: []
  type: TYPE_NORMAL
- en: '**name**str, default None'
  prefs: []
  type: TYPE_NORMAL
- en: Name of the resulting IntervalIndex.
  prefs: []
  type: TYPE_NORMAL
- en: '**closed**{‘left’, ‘right’, ‘both’, ‘neither’}, default ‘right’'
  prefs: []
  type: TYPE_NORMAL
- en: Whether the intervals are closed on the left-side, right-side, both or neither.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: IntervalIndex
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`IntervalIndex`](pandas.IntervalIndex.html#pandas.IntervalIndex "pandas.IntervalIndex")'
  prefs: []
  type: TYPE_NORMAL
- en: An Index of intervals that are all closed on the same side.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Of the four parameters `start`, `end`, `periods`, and `freq`, exactly three
    must be specified. If `freq` is omitted, the resulting `IntervalIndex` will have
    `periods` linearly spaced elements between `start` and `end`, inclusively.
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about datetime-like frequency strings, please see [this link](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Numeric `start` and `end` is supported.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Additionally, datetime-like input is also supported.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The `freq` parameter specifies the frequency between the left and right. endpoints
    of the individual intervals within the `IntervalIndex`. For numeric `start` and
    `end`, the frequency must also be numeric.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Similarly, for datetime-like `start` and `end`, the frequency must be convertible
    to a DateOffset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Specify `start`, `end`, and `periods`; the frequency is generated automatically
    (linearly spaced).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The `closed` parameter specifies which endpoints of the individual intervals
    within the `IntervalIndex` are closed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
