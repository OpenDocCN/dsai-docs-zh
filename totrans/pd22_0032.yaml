- en: Reshaping and pivot tables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重塑和透视表
- en: 原文：[https://pandas.pydata.org/docs/user_guide/reshaping.html](https://pandas.pydata.org/docs/user_guide/reshaping.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/user_guide/reshaping.html](https://pandas.pydata.org/docs/user_guide/reshaping.html)
- en: pandas provides methods for manipulating a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to alter the representation of the data for further data processing
    or data summarization.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了用于操作[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")的方法，以改变数据的表示形式，以便进行进一步的数据处理或数据汇总。
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    and [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table"): Group unique values within one or more discrete categories.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    和 [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")：在一个或多个离散类别中对唯一值进行分组。'
- en: '[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"): Pivot a column or row level to the opposite axis
    respectively.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 和 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")：分别将列或行级别的数据透视到相反的轴上。'
- en: '[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt") and
    [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long"): Unpivot a wide [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to a long format.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt") 和 [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long")：将宽格式的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")转换为长格式。'
- en: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") and [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies"): Conversions with indicator variables.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") 和 [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies")：使用指示变量进行转换。'
- en: '[`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode"): Convert a column of list-like values to individual rows.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode")：将类似列表的值的列转换为单独的行。'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab"):
    Calculate a cross-tabulation of multiple 1 dimensional factor arrays.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")：计算多个一维因子数组的交叉制表。'
- en: '[`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut"): Transform
    continuous variables to discrete, categorical values'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")：将连续变量转换为离散的分类值。'
- en: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize"):
    Encode 1 dimensional variables into integer labels.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize")：将一维变量编码为整数标签。'
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    and [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    和 [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
- en: '![../_images/reshaping_pivot.png](../Images/f46f351ea478cf18dfa2dcdaeb8d6845.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_pivot.png](../Images/f46f351ea478cf18dfa2dcdaeb8d6845.png)'
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")'
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")'
- en: Data is often stored in so-called “stacked” or “record” format. In a “record”
    or “wide” format, typically there is one row for each subject. In the “stacked”
    or “long” format there are multiple rows for each subject where applicable.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 数据通常以所谓的“堆叠”或“记录”格式存储。在“记录”或“宽”格式中，通常每个主题都有一行。在“堆叠”或“长”格式中，每个主题（适用时）可能有多行。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To perform time series operations with each unique variable, a better representation
    would be where the `columns` are the unique variables and an `index` of dates
    identifies individual observations. To reshape the data into this form, we use
    the [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") method (also implemented as a top level function [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot")):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要对每个唯一变量执行时间序列操作，更好的表示形式是`columns`是唯一变量，`index`是日期标识个别观察。为了将数据重塑为这种形式，我们使用[`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot")方法（也实现为顶级函数[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot")）：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If the `values` argument is omitted, and the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has more than one column of values which are not used as column
    or index inputs to [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), then the resulting “pivoted” [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will have [hierarchical columns](advanced.html#advanced-hierarchical)
    whose topmost level indicates the respective value column:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略了`values`参数，并且输入的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")具有多个未用作列或索引输入的值列，则生成的“透视”[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")将具有[分层列](advanced.html#advanced-hierarchical)，其最顶层指示相应的值列：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can then select subsets from the pivoted [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从透视后的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中选择子集：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that this returns a view on the underlying data in the case where the data
    are homogeneously-typed.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这将返回基础数据的视图，如果数据是同质类型的。
- en: Note
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    can only handle unique rows specified by `index` and `columns`. If you data contains
    duplicates, use [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table").'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")只能处理由`index`和`columns`指定的唯一行。如果您的数据包含重复项，请使用[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")。'
- en: '### [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '### [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
- en: While [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") provides general purpose pivoting with various data
    types, pandas also provides [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") or [`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") for pivoting with aggregation of numeric data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然[`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot")提供了各种数据类型的通用透视功能，但pandas还提供了用于对数值数据进行聚合的[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")或[`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table")。
- en: The function [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") can be used to create spreadsheet-style pivot tables. See
    the [cookbook](cookbook.html#cookbook-pivot) for some advanced strategies.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 函数[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")可用于创建类似电子表格的透视表。查看[食谱](cookbook.html#cookbook-pivot)以获取一些高级策略。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The result is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") potentially having a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") on the index or column. If the `values` column name is not
    given, the pivot table will include all of the data in an additional level of
    hierarchy in the columns:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个可能在索引或列上具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。如果未提供`values`列名，则透视表将在列中包含所有数据的额外层次结构：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Also, you can use [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") for `index` and `columns` keywords. For detail of [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper"), see [Grouping with a Grouper specification](groupby.html#groupby-specify).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，您可以在`index`和`columns`关键字中使用[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper")。有关[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper")的详细信息，请参见[使用Grouper规范进行分组](groupby.html#groupby-specify)。
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '#### Adding margins'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 添加边距'
- en: 'Passing `margins=True` to [`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") will add a row and column with an `All` label
    with partial group aggregates across the categories on the rows and columns:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 将`margins=True`传递给[`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table")将在行和列上添加一个带有`All`标签的行和列，其中包含跨行和列���别的部分组聚合：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Additionally, you can call [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") to display a pivoted DataFrame as having a multi-level
    index:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以调用[`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")来显示一个透视的DataFrame，具有多级索引：
- en: '[PRE8]  ## [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8]  ## [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 和 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")'
- en: '![../_images/reshaping_stack.png](../Images/ea980142626bfa8107bf2b032d05059a.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_stack.png](../Images/ea980142626bfa8107bf2b032d05059a.png)'
- en: Closely related to the [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") method are the related [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") methods available on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). These methods are designed to work together with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") objects (see the section on [hierarchical indexing](advanced.html#advanced-hierarchical)).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 与[`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot")方法密切相关的是[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")和[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")上可用的相关[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")和[`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")方法。这些方法旨在与[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")对象一起使用（请参阅[分层索引](advanced.html#advanced-hierarchical)部分）。
- en: '[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"): “pivot” a level of the (possibly hierarchical) column
    labels, returning a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with an index with a new inner-most level of row labels.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")：将（可能是分层的）列标签的一个级别“枢轴”，返回一个带有新的最内层行标签的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。'
- en: '[`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"): (inverse operation of [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")) “pivot” a level of the (possibly hierarchical) row
    index to the column axis, producing a reshaped [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a new inner-most level of column labels.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"):（[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")的逆操作）将（可能是分层的）行索引的一个级别“枢轴”到列轴，生成一个重新塑造的带有新的最内层列标签的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。'
- en: '![../_images/reshaping_unstack.png](../Images/f048ad4727a0d692aa9d7098c96598df.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_unstack.png](../Images/f048ad4727a0d692aa9d7098c96598df.png)'
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") function “compresses” a level in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") columns to produce either:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 函数将 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中的一个级别“压缩”为以下之一：'
- en: A [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    in the case of a [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    in the columns.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列中具有[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")的情况下的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")。
- en: A [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    in the case of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") in the columns.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列中具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的情况下的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。
- en: 'If the columns have a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), you can choose which level to stack. The stacked level becomes
    the new lowest level in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") on the columns:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果列具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")，您可以选择堆叠哪个级别。堆叠的级别将成为列中[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的新最低级别：
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'With a “stacked” [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") (having a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") as the `index`), the inverse operation of [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") is [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), which by default unstacks the **last level**:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“堆叠”[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 或 [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")（具有 [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") 作为 `index`）的逆操作是 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")，默认情况下取消堆叠**最后一个级别**：
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![../_images/reshaping_unstack_1.png](../Images/43ae13ceeddfa7f1a32215db035a2fe5.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_unstack_1.png](../Images/43ae13ceeddfa7f1a32215db035a2fe5.png)'
- en: 'If the indexes have names, you can use the level names instead of specifying
    the level numbers:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果索引有名称，则可以使用级别名称而不是指定级别编号：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![../_images/reshaping_unstack_0.png](../Images/775e920743dcc74fa70c9f6d57b04f82.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_unstack_0.png](../Images/775e920743dcc74fa70c9f6d57b04f82.png)'
- en: 'Notice that the [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") methods implicitly sort the index levels involved.
    Hence a call to [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and then [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), or vice versa, will result in a **sorted** copy of
    the original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 和 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") 方法隐式地对涉及的索引级别进行排序。因此，对 [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 和然后 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") 或反之的调用，将导致原始 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 或 [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") 的**排序**副本：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '### Multiple levels'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '### 多个级别'
- en: You may also stack or unstack more than one level at a time by passing a list
    of levels, in which case the end result is as if each level in the list were processed
    individually.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过传递级别列表一次堆叠或取消堆叠多个级别，此时最终结果就像列表中的每个级别都单独处理一样。
- en: '[PRE14]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The list of levels can contain either level names or level numbers but not a
    mixture of the two.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 级别列表可以包含级别名称或级别编号，但不能混合使用两者。
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Missing data
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺失数据
- en: Unstacking can result in missing values if subgroups do not have the same set
    of labels. By default, missing values will be replaced with the default fill value
    for that data type.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果子组没有相同的标签集，则取消堆叠可能会导致缺失值。 默认情况下，缺失值将替换为该数据类型的默认填充值。
- en: '[PRE16]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The missing value can be filled with a specific value with the `fill_value`
    argument.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`fill_value`参数将缺失值填充为特定值。
- en: '[PRE17]  ## [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    and [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long")'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE17]  ## [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    和 [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long")'
- en: '![../_images/reshaping_melt.png](../Images/a140c066f549eb4ce484503ce7fd7f13.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_melt.png](../Images/a140c066f549eb4ce484503ce7fd7f13.png)'
- en: The top-level [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    function and the corresponding [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") are useful to massage a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") into a format where one or more columns are *identifier variables*,
    while all other columns, considered *measured variables*, are “unpivoted” to the
    row axis, leaving just two non-identifier columns, “variable” and “value”. The
    names of those columns can be customized by supplying the `var_name` and `value_name`
    parameters.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 顶级[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")函数及其对应的[`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt")对于将[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")整理成一种格式非常有用，其中一个或多个列是*标识符变量*，而所有其他列，被视为*测量变量*，被“解开”到行轴上，仅留下两个非标识符列，“变量”和“值”。
    这些列的名称可以通过提供`var_name`和`value_name`参数进行自定义。
- en: '[PRE18]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: When transforming a DataFrame using [`melt()`](../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt"), the index will be ignored. The original index values can be kept
    by setting the `ignore_index=False` parameter to `False` (default is `True`).
    `ignore_index=False` will however duplicate index values.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")转换DataFrame时，索引将被忽略。
    可以通过将`ignore_index=False`参数设置为`False`（默认为`True`）来保留原始索引值。 `ignore_index=False`会导致索引值重复。
- en: '[PRE19]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") is similar to [`melt()`](../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt") with more customization for column matching.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long")类似于[`melt()`](../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt")，但具有更多的列匹配自定义功能。'
- en: '[PRE20]  ## [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") and [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies")'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE20]  ## [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") 和 [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies")'
- en: To convert categorical variables of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") into a “dummy” or “indicator”, [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") creates a new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with columns of the unique variables and the values representing
    the presence of those variables per row.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要将[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")的分类变量转换为“虚拟”或“指示符”，[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies")会创建一个新的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，其中包含唯一变量的列和表示每行中变量存在的值。
- en: '[PRE21]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '`prefix` adds a prefix to the the column names which is useful for merging
    the result with the original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"):'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`prefix`将前缀添加到列名中，这对将结果与原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")合并很有用：'
- en: '[PRE22]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This function is often used along with discretization functions like [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut"):'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数通常与像[`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")这样的离散化函数一起使用：
- en: '[PRE23]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") also accepts a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). By default, `object`, `string`, or `categorical` type columns
    are encoded as dummy variables with other columns unaltered.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") 也接受一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。默认情况下，`object`、`string`或`categorical`类型的列将被编码为虚拟变量，而其他列保持不变。'
- en: '[PRE24]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Specifying the `columns` keyword will encode a column of any type.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 指定`columns`关键字将对任何类型的列进行编码。
- en: '[PRE25]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'As with the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    version, you can pass values for the `prefix` and `prefix_sep`. By default the
    column name is used as the prefix and `_` as the prefix separator. You can specify
    `prefix` and `prefix_sep` in 3 ways:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 与[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")版本一样，您可以为`prefix`和`prefix_sep`传递值。默认情况下，列名用作前缀，`_`用作前缀分隔符。您可以以3种方式指定`prefix`���`prefix_sep`：
- en: 'string: Use the same value for `prefix` or `prefix_sep` for each column to
    be encoded.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'string: 对于要编码的每一列，使用相同的值作为`prefix`或`prefix_sep`。'
- en: 'list: Must be the same length as the number of columns being encoded.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'list: 必须与要编码的列数相同长度。'
- en: 'dict: Mapping column name to prefix.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'dict: 将列名映射到前缀。'
- en: '[PRE26]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: To avoid collinearity when feeding the result to statistical models, specify
    `drop_first=True`.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免在将结果输入统计模型时出现共线性问题，请指定`drop_first=True`。
- en: '[PRE27]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: When a column contains only one level, it will be omitted in the result.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当一列只包含一个级别时，它将在结果中被省略。
- en: '[PRE28]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The values can be cast to a different type using the `dtype` argument.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`dtype`参数将值转换为不同类型。
- en: '[PRE29]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: New in version 1.5.0.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.5.0 中新增。
- en: '[`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") converts the output of [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") back into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of categorical values from indicator values.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") 将[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") 的输出转换回指示值的[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")。'
- en: '[PRE30]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Dummy coded data only requires `k - 1` categories to be included, in this case
    the last category is the default category. The default category can be modified
    with `default_category`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟编码数据只需要包含`k - 1`个类别，此时最后一个类别是默认类别。默认类别可以使用`default_category`进行修改。
- en: '[PRE31]  ## [`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode")'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE31]  ## [`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode")'
- en: 'For a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column with nested, list-like values, [`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") will transform each list-like value to a separate row.
    The resulting [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    will be duplicated corresponding to the index label from the original row:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 对于具有嵌套、类似列表的值的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")列，[`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") 将每个类似列表的值转换为单独的行。生成的[`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") 将与原始行的索引标签对应重复：
- en: '[PRE32]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[`DataFrame.explode`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") can also explode the column in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.explode`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") 也可以将[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中的列展开。'
- en: '[PRE33]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") will replace empty lists with a missing value indicator
    and preserve scalar entries.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") 将空列表替换为缺失值指示符并保留标量条目。'
- en: '[PRE34]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: A comma-separated string value can be split into individual values in a list
    and then exploded to a new row.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 逗号分隔的字符串值可以拆分为列表中的单个值，然后展开为新行。
- en: '[PRE35]  ## [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab")'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE35]  ## [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab")'
- en: Use [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    to compute a cross-tabulation of two (or more) factors. By default [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") computes a frequency table of the factors unless an array of
    values and an aggregation function are passed.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")计算两个（或更多）因子的交叉制表。默认情况下，[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab")计算因子的频率表，除非传递了值数组和聚合函数。
- en: Any [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    passed will have their name attributes used unless row or column names for the
    cross-tabulation are specified
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 传递的任何[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")都将使用其名称属性，除非为交叉制表指定了行或列名称
- en: '[PRE36]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: If [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    receives only two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), it will provide a frequency table.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")只接收两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")，它将提供一个频率表。
- en: '[PRE37]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    can also summarize to [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") data.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")还可以总结[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")数据。'
- en: '[PRE38]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: For [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") data, to include **all** of data categories even if the
    actual data does not contain any instances of a particular category, use `dropna=False`.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")数据，如果要包含**所有**数据类别，即使实际数据不包含特定类别的任何实例，请使用`dropna=False`。
- en: '[PRE39]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Normalization
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 归一化
- en: 'Frequency tables can also be normalized to show percentages rather than counts
    using the `normalize` argument:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 频率表也可以通过`normalize`参数进行归一化，以显示百分比而不是计数：
- en: '[PRE40]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '`normalize` can also normalize values within each row or within each column:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`normalize`还可以在每行或每列内归一化值：'
- en: '[PRE41]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    can also accept a third [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and an aggregation function (`aggfunc`) that will be applied
    to the values of the third [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") within each group defined by the first two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"):'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")还可以接受第三个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")和一个聚合函数(`aggfunc`)，该函数将应用于第三个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")的值，这些值在由前两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")定义的每个组内：'
- en: '[PRE42]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Adding margins
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加边际
- en: '`margins=True` will add a row and column with an `All` label with partial group
    aggregates across the categories on the rows and columns:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`margins=True`将添加一个带有`All`标签的行和列，该标签在行和列上的类别上具有部分组聚合：'
- en: '[PRE43]  ## [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE43]  ## [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")'
- en: 'The [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") function
    computes groupings for the values of the input array and is often used to transform
    continuous variables to discrete or categorical variables:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")函数计算输入数组的值的分组，并经常用于将连续变量转换为离散或分类变量：'
- en: An integer `bins` will form equal-width bins.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 整数`bins`将形成等宽箱。
- en: '[PRE44]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: A list of ordered bin edges will assign an interval for each variable.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有序的箱边列表将为每个变量分配一个区间。
- en: '[PRE45]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: If the `bins` keyword is an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), then these will be used to bin the passed data.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`bins`关键字是一个[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex")，那么这些将用于对传递的数据进行分箱。
- en: '[PRE46]  ## [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize")'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE46]  ## [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize")'
- en: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize")
    encodes 1 dimensional values into integer labels. Missing values are encoded as
    `-1`.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize")将一维值编码为整数标签。缺失值被编码为`-1`。'
- en: '[PRE47]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") will similarly encode 1 dimensional values for further categorical
    operations'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") 将类似地对 1 维值进行编码以进行进一步的分类操作'
- en: '[PRE48]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    and [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    和 [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
- en: '![../_images/reshaping_pivot.png](../Images/f46f351ea478cf18dfa2dcdaeb8d6845.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_pivot.png](../Images/f46f351ea478cf18dfa2dcdaeb8d6845.png)'
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")'
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")'
- en: Data is often stored in so-called “stacked” or “record” format. In a “record”
    or “wide” format, typically there is one row for each subject. In the “stacked”
    or “long” format there are multiple rows for each subject where applicable.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 数据通常以所谓的“堆叠”或“记录”格式存储。在“记录”或“宽”格式中，通常每个主题都有一行。在“堆叠”或“长”格式中，每个主题（适用时）可能有多行。
- en: '[PRE49]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'To perform time series operations with each unique variable, a better representation
    would be where the `columns` are the unique variables and an `index` of dates
    identifies individual observations. To reshape the data into this form, we use
    the [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") method (also implemented as a top level function [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot")):'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 要对每个唯一变量执行时间序列操作，更好的表示形式是 `columns` 是唯一变量，日期的 `index` 标识个别观察结果。为了将数据重塑为这种形式，我们使用
    [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") 方法（也实现为顶级函数 [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot")）：
- en: '[PRE50]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'If the `values` argument is omitted, and the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has more than one column of values which are not used as column
    or index inputs to [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), then the resulting “pivoted” [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will have [hierarchical columns](advanced.html#advanced-hierarchical)
    whose topmost level indicates the respective value column:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略 `values` 参数，并且输入的 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 有多列值，这些值不用作 [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") 的列或索引输入，则生成的“透视” [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 将具有[分层列](advanced.html#advanced-hierarchical)，其最顶层指示相应的值列：
- en: '[PRE51]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'You can then select subsets from the pivoted [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"):'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您可以从透视的 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中选择子集：
- en: '[PRE52]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Note that this returns a view on the underlying data in the case where the data
    are homogeneously-typed.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在数据是同质类型的情况下，这将返回对底层数据的视图。
- en: Note
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    can only handle unique rows specified by `index` and `columns`. If you data contains
    duplicates, use [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table").'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    只能处理由 `index` 和 `columns` 指定的唯一行。如果您的数据包含重复项，请使用 [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")。'
- en: '### [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '### [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
- en: While [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") provides general purpose pivoting with various data
    types, pandas also provides [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") or [`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") for pivoting with aggregation of numeric data.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") 提供了各种数据类型的通用数据透视，但 pandas 还提供了 [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") 或 [`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") 用于对数值数据进行聚合的数据透视。
- en: The function [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") can be used to create spreadsheet-style pivot tables. See
    the [cookbook](cookbook.html#cookbook-pivot) for some advanced strategies.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 函数[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") 可以用来创建类似电子表格的透视表。查看[示例](cookbook.html#cookbook-pivot)以获取一些高级策略。
- en: '[PRE53]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The result is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") potentially having a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") on the index or column. If the `values` column name is not
    given, the pivot table will include all of the data in an additional level of
    hierarchy in the columns:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个可能具有索引或列上的[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。如果未提供`values`列名称，则透视表将在列中包含所有数据的另一层次的层次结构：
- en: '[PRE54]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Also, you can use [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") for `index` and `columns` keywords. For detail of [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper"), see [Grouping with a Grouper specification](groupby.html#groupby-specify).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以将[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")用于`index`和`columns`关键字。有关[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper")的详细信息，请参阅[使用Grouper规范进行分组](groupby.html#groupby-specify)。
- en: '[PRE55]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '#### Adding margins'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 添加边距'
- en: 'Passing `margins=True` to [`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") will add a row and column with an `All` label
    with partial group aggregates across the categories on the rows and columns:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 将`margins=True`传递给[`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table")将在行和列上添加具有部分组聚合的`All`标签的行和列：
- en: '[PRE56]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Additionally, you can call [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") to display a pivoted DataFrame as having a multi-level
    index:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以调用[`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")将透视的DataFrame显示为具有多级索引：
- en: '[PRE57]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")'
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")'
- en: Data is often stored in so-called “stacked” or “record” format. In a “record”
    or “wide” format, typically there is one row for each subject. In the “stacked”
    or “long” format there are multiple rows for each subject where applicable.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 数据通常以所谓的“堆叠”或“记录”格式存储。在“记录”或“宽”格式中，通常每个主题都有一行。在“堆叠”或“长”格式中，每个主题（适用时）通常有多行。
- en: '[PRE58]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'To perform time series operations with each unique variable, a better representation
    would be where the `columns` are the unique variables and an `index` of dates
    identifies individual observations. To reshape the data into this form, we use
    the [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") method (also implemented as a top level function [`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot")):'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用每个唯一变量执行时间序列操作，更好的表示形式是`columns`是唯一变量，`index`是日期，标识单个观察。要将数据重塑为这种形式，我们使用[`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot")方法（也实现为顶级函数[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot
    "pandas.pivot")）：
- en: '[PRE59]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'If the `values` argument is omitted, and the input [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has more than one column of values which are not used as column
    or index inputs to [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), then the resulting “pivoted” [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") will have [hierarchical columns](advanced.html#advanced-hierarchical)
    whose topmost level indicates the respective value column:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略了`values`参数，并且输入的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")具有多列值，这些值未用作列或索引输入到[`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot")，则生成的“透视”[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")将具有层次化的列，其最顶层指示相应的值列：
- en: '[PRE60]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'You can then select subsets from the pivoted [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"):'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以从透视的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")中选择子集：
- en: '[PRE61]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Note that this returns a view on the underlying data in the case where the data
    are homogeneously-typed.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在数据类型均为同质类型的情况下，这将返回基础数据的视图。
- en: Note
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    can only handle unique rows specified by `index` and `columns`. If you data contains
    duplicates, use [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table").'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[`pivot()`](../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")只能处理由`index`和`columns`指定的唯一行。如果您的数据包含重复项，请使用[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")。'
- en: '### [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '### [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")'
- en: While [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") provides general purpose pivoting with various data
    types, pandas also provides [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") or [`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") for pivoting with aggregation of numeric data.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然[`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot")提供了各种数据类型的通用数据透视功能，但pandas还提供了[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")或[`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table")用于对数值数据进行聚合的数据透视。
- en: The function [`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table") can be used to create spreadsheet-style pivot tables. See
    the [cookbook](cookbook.html#cookbook-pivot) for some advanced strategies.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 函数[`pivot_table()`](../reference/api/pandas.pivot_table.html#pandas.pivot_table
    "pandas.pivot_table")可用于创建类似电子表格的数据透视表。有关一些高级策略，请参阅[食谱](cookbook.html#cookbook-pivot)。
- en: '[PRE62]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The result is a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") potentially having a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") on the index or column. If the `values` column name is not
    given, the pivot table will include all of the data in an additional level of
    hierarchy in the columns:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")，可能在索引或列上具有[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")。如果未提供`values`列名，则数据透视表将在列中包含所有数据的额外层次结构：
- en: '[PRE63]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Also, you can use [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper") for `index` and `columns` keywords. For detail of [`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper"), see [Grouping with a Grouper specification](groupby.html#groupby-specify).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以使用[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper "pandas.Grouper")作为`index`和`columns`关键字。有关[`Grouper`](../reference/api/pandas.Grouper.html#pandas.Grouper
    "pandas.Grouper")的详细信���，请参阅[使用Grouper规范进行分组](groupby.html#groupby-specify)。
- en: '[PRE64]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '#### Adding margins'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '#### 添加边距'
- en: 'Passing `margins=True` to [`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") will add a row and column with an `All` label
    with partial group aggregates across the categories on the rows and columns:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 将`margins=True`传递给[`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table")将在行和列上添加一个带有部分组聚合的`All`标签的行和列：
- en: '[PRE65]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Additionally, you can call [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") to display a pivoted DataFrame as having a multi-level
    index:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以调用[`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")将一个数据透视的DataFrame显示为具有多级索引：
- en: '[PRE66]  #### Adding margins'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE66]  #### 添加边距'
- en: 'Passing `margins=True` to [`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") will add a row and column with an `All` label
    with partial group aggregates across the categories on the rows and columns:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 将`margins=True`传递给[`pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table")将在行和列上添加一个带有部分组聚合的`All`标签的行和列：
- en: '[PRE67]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Additionally, you can call [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") to display a pivoted DataFrame as having a multi-level
    index:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以调用[`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")将一个数据透视的DataFrame显示为具有多级索引：
- en: '[PRE68]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '## [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '## [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 和 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")'
- en: '![../_images/reshaping_stack.png](../Images/ea980142626bfa8107bf2b032d05059a.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_stack.png](../Images/ea980142626bfa8107bf2b032d05059a.png)'
- en: Closely related to the [`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") method are the related [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") methods available on [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). These methods are designed to work together with [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") objects (see the section on [hierarchical indexing](advanced.html#advanced-hierarchical)).
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 与[`pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") 方法密切相关的是在[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") 和 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 上可用的[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 和 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") 方法。 这些方法被设计为与 [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") 对象一起工作（参见 [层次化索引](advanced.html#advanced-hierarchical) 部分）。
- en: '[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"): “pivot” a level of the (possibly hierarchical) column
    labels, returning a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with an index with a new inner-most level of row labels.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"): “旋转”（pivot）可能是分层的列标签的一级，返回一个带有新的最内层行标签的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。'
- en: '[`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"): (inverse operation of [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")) “pivot” a level of the (possibly hierarchical) row
    index to the column axis, producing a reshaped [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a new inner-most level of column labels.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"):（与[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")的反向操作）将可能是分层的行索引的一级“旋转”到列轴，产生一个带有新的最内层列标签的重塑[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。'
- en: '![../_images/reshaping_unstack.png](../Images/f048ad4727a0d692aa9d7098c96598df.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_unstack.png](../Images/f048ad4727a0d692aa9d7098c96598df.png)'
- en: '[PRE69]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'The [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") function “compresses” a level in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") columns to produce either:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 函数将[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中的一级列“压缩”为：'
- en: A [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    in the case of a [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    in the columns.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列方向上是[`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")的情况下，一个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")。
- en: A [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame"),
    in the case of a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") in the columns.
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列方向上是 [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") 的情况下，一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。
- en: 'If the columns have a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"), you can choose which level to stack. The stacked level becomes
    the new lowest level in a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") on the columns:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '如果列有一个[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")，您可以选择堆叠哪个级别。堆叠的级别变为列的新最低级别的[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex"):'
- en: '[PRE70]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'With a “stacked” [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") (having a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") as the `index`), the inverse operation of [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") is [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), which by default unstacks the **last level**:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“堆叠”[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")（将[`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex")作为`index`）时，[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack")的逆操作是[`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")，默认情况下会展开**最后一级**：
- en: '[PRE71]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '![../_images/reshaping_unstack_1.png](../Images/43ae13ceeddfa7f1a32215db035a2fe5.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_unstack_1.png](../Images/43ae13ceeddfa7f1a32215db035a2fe5.png)'
- en: 'If the indexes have names, you can use the level names instead of specifying
    the level numbers:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 如果索引有名称，可以使用级别名称而不是指定级别编号：
- en: '[PRE72]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '![../_images/reshaping_unstack_0.png](../Images/775e920743dcc74fa70c9f6d57b04f82.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_unstack_0.png](../Images/775e920743dcc74fa70c9f6d57b04f82.png)'
- en: 'Notice that the [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") methods implicitly sort the index levels involved.
    Hence a call to [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") and then [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack"), or vice versa, will result in a **sorted** copy of
    the original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"):'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，[`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 和 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack") 方法会隐式对涉及的索引级别进行排序。因此，调用 [`stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") 然后 [`unstack()`](../reference/api/pandas.DataFrame.unstack.html#pandas.DataFrame.unstack
    "pandas.DataFrame.unstack")，或反之亦然，将导致原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")或[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")的**排序**副本：
- en: '[PRE73]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '### Multiple levels'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '### 多级别'
- en: You may also stack or unstack more than one level at a time by passing a list
    of levels, in which case the end result is as if each level in the list were processed
    individually.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以一次堆叠或展开多个级别，通过传递级别列表，此时的最终结果就好像列表中的每个级别都被单独处理一样。
- en: '[PRE74]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: The list of levels can contain either level names or level numbers but not a
    mixture of the two.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 级别列表可以包含级别名称或级别编号，但不能混合使用。
- en: '[PRE75]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Missing data
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺失数据
- en: Unstacking can result in missing values if subgroups do not have the same set
    of labels. By default, missing values will be replaced with the default fill value
    for that data type.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 如果子组没有相同的标签集，展开可能导致缺失值。默认情况下，缺失值将被替换为该数据类型的默认填充值。
- en: '[PRE76]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: The missing value can be filled with a specific value with the `fill_value`
    argument.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`fill_value`参数将缺失值填充为特定值。
- en: '[PRE77]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '### Multiple levels'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '### 多级别'
- en: You may also stack or unstack more than one level at a time by passing a list
    of levels, in which case the end result is as if each level in the list were processed
    individually.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以一次堆叠或展开多个级别，通过传递级别列表，此时的最终结果就好像列表中的每个级别都被单独处理一样。
- en: '[PRE78]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: The list of levels can contain either level names or level numbers but not a
    mixture of the two.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 级别列表可以包含级别名称或级别编号，但不能混合使用。
- en: '[PRE79]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Missing data
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺失数据
- en: Unstacking can result in missing values if subgroups do not have the same set
    of labels. By default, missing values will be replaced with the default fill value
    for that data type.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 如果子组没有相同的标签集，展开可能导致缺失值。默认情况下，缺失值将被替换为该数据类型的默认填充值。
- en: '[PRE80]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: The missing value can be filled with a specific value with the `fill_value`
    argument.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`fill_value`参数将缺失值填充为特定值。
- en: '[PRE81]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '## [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    and [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long")'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '## [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    和 [`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long")'
- en: '![../_images/reshaping_melt.png](../Images/a140c066f549eb4ce484503ce7fd7f13.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![../_images/reshaping_melt.png](../Images/a140c066f549eb4ce484503ce7fd7f13.png)'
- en: The top-level [`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    function and the corresponding [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") are useful to massage a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") into a format where one or more columns are *identifier variables*,
    while all other columns, considered *measured variables*, are “unpivoted” to the
    row axis, leaving just two non-identifier columns, “variable” and “value”. The
    names of those columns can be customized by supplying the `var_name` and `value_name`
    parameters.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 顶级[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")函数及其对应的[`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt")对于将[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")整理成一个格式很有用，其中一个或多个列是*标识变量*，而所有其他列，被认为是*测量变量*，都被“展开”到行轴上，仅留下两个非标识列，“变量”和“值”。这些列的名称可以通过提供
    `var_name` 和 `value_name` 参数进行自定义。
- en: '[PRE82]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: When transforming a DataFrame using [`melt()`](../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt"), the index will be ignored. The original index values can be kept
    by setting the `ignore_index=False` parameter to `False` (default is `True`).
    `ignore_index=False` will however duplicate index values.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`melt()`](../reference/api/pandas.melt.html#pandas.melt "pandas.melt")转换DataFrame时，索引会被忽略。通过将
    `ignore_index=False` 参数设置为 `False`（默认为 `True`），可以保留原始索引值。`ignore_index=False`
    会导致索引值重复。
- en: '[PRE83]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") is similar to [`melt()`](../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt") with more customization for column matching.'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '[`wide_to_long()`](../reference/api/pandas.wide_to_long.html#pandas.wide_to_long
    "pandas.wide_to_long") 类似于 [`melt()`](../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt") ，但具有更多的列匹配自定义选项。'
- en: '[PRE84]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '## [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") and [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies")'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '## [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") 和 [`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies")'
- en: To convert categorical variables of a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") into a “dummy” or “indicator”, [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") creates a new [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with columns of the unique variables and the values representing
    the presence of those variables per row.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 将[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")的分类变量转换为“虚拟”或“指示符”时，[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies")会创建一个新的[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")，其中包含唯一变量的列，值表示每行中这些变量的存在情况。
- en: '[PRE85]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '`prefix` adds a prefix to the the column names which is useful for merging
    the result with the original [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"):'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`prefix` 为列名添加一个前缀，这对于将结果与原始[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")合并很有用：'
- en: '[PRE86]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'This function is often used along with discretization functions like [`cut()`](../reference/api/pandas.cut.html#pandas.cut
    "pandas.cut"):'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数经常与诸如 [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")
    这样的离散化函数一起使用：
- en: '[PRE87]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") also accepts a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"). By default, `object`, `string`, or `categorical` type columns
    are encoded as dummy variables with other columns unaltered.'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") 也接受一个[`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame")。默认情况下，`object`、`string`或`categorical`类型的列会被编码为虚拟变量，其他列不变。'
- en: '[PRE88]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Specifying the `columns` keyword will encode a column of any type.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 指定 `columns` 关键字会编码任何类型的列。
- en: '[PRE89]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'As with the [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    version, you can pass values for the `prefix` and `prefix_sep`. By default the
    column name is used as the prefix and `_` as the prefix separator. You can specify
    `prefix` and `prefix_sep` in 3 ways:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 与[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")版本一样，可以为
    `prefix` 和 `prefix_sep` 传递值。默认情况下，列名用作前缀，`_` 用作前缀分隔符。可以以3种方式指定 `prefix` 和 `prefix_sep`：
- en: 'string: Use the same value for `prefix` or `prefix_sep` for each column to
    be encoded.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符串：对于要编码的每列，使用相同的值作为 `prefix` 或 `prefix_sep`。
- en: 'list: Must be the same length as the number of columns being encoded.'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表：必须与被编码的列数相同。
- en: 'dict: Mapping column name to prefix.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字典：将列名映射到前缀。
- en: '[PRE90]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: To avoid collinearity when feeding the result to statistical models, specify
    `drop_first=True`.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在将结果提供给统计模型时，为避免共线性，请指定 `drop_first=True`。
- en: '[PRE91]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: When a column contains only one level, it will be omitted in the result.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 当列只包含一个级别时，结果中将省略该列。
- en: '[PRE92]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: The values can be cast to a different type using the `dtype` argument.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `dtype` 参数将值转换为不同类型。
- en: '[PRE93]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: New in version 1.5.0.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 1.5.0 中的新功能。
- en: '[`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") converts the output of [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") back into a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") of categorical values from indicator values.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[`from_dummies()`](../reference/api/pandas.from_dummies.html#pandas.from_dummies
    "pandas.from_dummies") 将 [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") 的输出转换回指示值的分类值 [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")。'
- en: '[PRE94]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Dummy coded data only requires `k - 1` categories to be included, in this case
    the last category is the default category. The default category can be modified
    with `default_category`.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟编码数据只需要包含 `k - 1` 个类别，此时最后一个类别是默认类别。默认类别可以使用 `default_category` 修改。
- en: '[PRE95]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '## [`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode")'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '## [`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode")'
- en: 'For a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") column with nested, list-like values, [`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") will transform each list-like value to a separate row.
    The resulting [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index")
    will be duplicated corresponding to the index label from the original row:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对于具有嵌套、类似列表的值的 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 列，[`explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") 将每个类似列表的值转换为单独的行。生成的 [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") 将根据原始行的索引标签重复：
- en: '[PRE96]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[`DataFrame.explode`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") can also explode the column in the [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame").'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.explode`](../reference/api/pandas.DataFrame.explode.html#pandas.DataFrame.explode
    "pandas.DataFrame.explode") 也可以将 [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") 中的列扩展。'
- en: '[PRE97]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") will replace empty lists with a missing value indicator
    and preserve scalar entries.'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Series.explode()`](../reference/api/pandas.Series.explode.html#pandas.Series.explode
    "pandas.Series.explode") 将空列表替换为缺失值指示符，并保留标量条目。'
- en: '[PRE98]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: A comma-separated string value can be split into individual values in a list
    and then exploded to a new row.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 逗号分隔的字符串值可以拆分为列表中的单个值，然后扩展到新行。
- en: '[PRE99]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '## [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '## [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")'
- en: Use [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    to compute a cross-tabulation of two (or more) factors. By default [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") computes a frequency table of the factors unless an array of
    values and an aggregation function are passed.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    计算两个（或更多）因子的交叉制表。默认情况下，[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab
    "pandas.crosstab") 计算因子的频率表，除非传递了值数组和聚合函数。
- en: Any [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    passed will have their name attributes used unless row or column names for the
    cross-tabulation are specified
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 任何传递的 [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    将使用其名称属性，除非为交叉制表指定了行或列名称
- en: '[PRE100]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: If [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    receives only two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), it will provide a frequency table.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 [`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    只接收两个 [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")，它将提供一个频率表。
- en: '[PRE101]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    can also summarize to [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") data.'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    还可以总结为[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")数据。'
- en: '[PRE102]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: For [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") data, to include **all** of data categories even if the
    actual data does not contain any instances of a particular category, use `dropna=False`.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 对于[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical")数据，要包含**所有**数据类别，即使实际数据不包含特定类别的任何实例，使用`dropna=False`。
- en: '[PRE103]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: Normalization
  id: totrans-288
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标准化
- en: 'Frequency tables can also be normalized to show percentages rather than counts
    using the `normalize` argument:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 频率表也可以通过`normalize`参数显示百分比而不是计数：
- en: '[PRE104]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '`normalize` can also normalize values within each row or within each column:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`normalize`还可以在每行或每列内规范化值：'
- en: '[PRE105]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    can also accept a third [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and an aggregation function (`aggfunc`) that will be applied
    to the values of the third [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") within each group defined by the first two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"):'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    还可以接受第三个[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和一个聚合函数(`aggfunc`)，该函数将应用于第三个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")的值，这些值在由前两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")定义的每个组内：'
- en: '[PRE106]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Adding margins
  id: totrans-295
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加边际
- en: '`margins=True` will add a row and column with an `All` label with partial group
    aggregates across the categories on the rows and columns:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '`margins=True` 将添加一个带有`All`标签的行和列，该标签在行和列上的类别中部分组聚合：'
- en: '[PRE107]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Normalization
  id: totrans-298
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标准化
- en: 'Frequency tables can also be normalized to show percentages rather than counts
    using the `normalize` argument:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 频率表也可以通过`normalize`参数显示百分比而不是计数：
- en: '[PRE108]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '`normalize` can also normalize values within each row or within each column:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`normalize`还可以在每行或每列内规范化值：'
- en: '[PRE109]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    can also accept a third [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and an aggregation function (`aggfunc`) that will be applied
    to the values of the third [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") within each group defined by the first two [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"):'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '[`crosstab()`](../reference/api/pandas.crosstab.html#pandas.crosstab "pandas.crosstab")
    还可以接受第三个[`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")和一个聚合函数(`aggfunc`)，该函数将应用于第三个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")的值，这些值在由前两个[`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series")定义的每个组内：'
- en: '[PRE110]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Adding margins
  id: totrans-305
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加边际
- en: '`margins=True` will add a row and column with an `All` label with partial group
    aggregates across the categories on the rows and columns:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '`margins=True` 将添加一个带有`All`标签的行和列，该标签在行和列上的类别中部分组聚合：'
- en: '[PRE111]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '## [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '## [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut")'
- en: 'The [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") function
    computes groupings for the values of the input array and is often used to transform
    continuous variables to discrete or categorical variables:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '[`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") 函数计算输入数组的值的分组，并经常用于将连续变量转换为离散或分类变量：'
- en: An integer `bins` will form equal-width bins.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 整数`bins`将形成等宽箱。
- en: '[PRE112]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: A list of ordered bin edges will assign an interval for each variable.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有序的箱边列表将为每个变量分配一个区间。
- en: '[PRE113]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: If the `bins` keyword is an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex"), then these will be used to bin the passed data.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`bins`关键字是一个[`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex")，那么这些将用于对传递的数据进行分箱。
- en: '[PRE114]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '## [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize")'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '## [`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize
    "pandas.factorize")'
- en: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize")
    encodes 1 dimensional values into integer labels. Missing values are encoded as
    `-1`.'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '[`factorize()`](../reference/api/pandas.factorize.html#pandas.factorize "pandas.factorize")
    将一维数值编码为整数标签。缺失值被编码为`-1`。'
- en: '[PRE115]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") will similarly encode 1 dimensional values for further categorical
    operations'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") 会类似地对一维值进行编码，以进行更多的分类操作。'
- en: '[PRE116]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
