- en: scipy.io.whosmat
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.whosmat.html#scipy.io.whosmat](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.io.whosmat.html#scipy.io.whosmat)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: List variables inside a MATLAB file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**file_name**str'
  prefs: []
  type: TYPE_NORMAL
- en: Name of the mat file (do not need .mat extension if appendmat==True) Can also
    pass open file-like object.
  prefs: []
  type: TYPE_NORMAL
- en: '**appendmat**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: True to append the .mat extension to the end of the given filename, if not already
    present. Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**byte_order**str or None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: None by default, implying byte order guessed from mat file. Otherwise can be
    one of (‘native’, ‘=’, ‘little’, ‘<’, ‘BIG’, ‘>’).
  prefs: []
  type: TYPE_NORMAL
- en: '**mat_dtype**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, return arrays in same dtype as would be loaded into MATLAB (instead
    of the dtype with which they are saved).
  prefs: []
  type: TYPE_NORMAL
- en: '**squeeze_me**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to squeeze unit matrix dimensions or not.
  prefs: []
  type: TYPE_NORMAL
- en: '**chars_as_strings**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to convert char arrays to string arrays.
  prefs: []
  type: TYPE_NORMAL
- en: '**matlab_compatible**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Returns matrices as would be loaded by MATLAB (implies squeeze_me=False, chars_as_strings=False,
    mat_dtype=True, struct_as_record=True).
  prefs: []
  type: TYPE_NORMAL
- en: '**struct_as_record**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to load MATLAB structs as NumPy record arrays, or as old-style NumPy
    arrays with dtype=object. Setting this flag to False replicates the behavior of
    SciPy version 0.7.x (returning numpy object arrays). The default setting is True,
    because it allows easier round-trip load and save of MATLAB files.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**variables**list of tuples'
  prefs: []
  type: TYPE_NORMAL
- en: 'A list of tuples, where each tuple holds the matrix name (a string), its shape
    (tuple of ints), and its data class (a string). Possible data classes are: int8,
    uint8, int16, uint16, int32, uint32, int64, uint64, single, double, cell, struct,
    object, char, sparse, function, opaque, logical, unknown.'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: v4 (Level 1.0), v6 and v7 to 7.2 matfiles are supported.
  prefs: []
  type: TYPE_NORMAL
- en: You will need an HDF5 python library to read matlab 7.3 format mat files (e.g.
    h5py). Because SciPy does not supply one, we do not implement the HDF5 / 7.3 interface
    here.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.12.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Create some arrays, and use [`savemat`](scipy.io.savemat.html#scipy.io.savemat
    "scipy.io.savemat") to write them to a `BytesIO` instance.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Use [`whosmat`](#scipy.io.whosmat "scipy.io.whosmat") to inspect `f`. Each tuple
    in the output list gives the name, shape and data type of the array in `f`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
