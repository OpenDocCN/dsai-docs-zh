- en: Contributing to pandas
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 贡献给pandas
- en: 原文：[https://pandas.pydata.org/docs/development/contributing.html](https://pandas.pydata.org/docs/development/contributing.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/development/contributing.html](https://pandas.pydata.org/docs/development/contributing.html)
- en: 'Table of contents:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 目录：
- en: '[Bug reports and enhancement requests](#bug-reports-and-enhancement-requests)'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[错误报告和增强请求](#bug-reports-and-enhancement-requests)'
- en: '[Finding an issue to contribute to](#finding-an-issue-to-contribute-to)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[找到要贡献的问题](#finding-an-issue-to-contribute-to)'
- en: '[Submitting a pull request](#submitting-a-pull-request)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[提交拉取请求](#submitting-a-pull-request)'
- en: '[Version control, Git, and GitHub](#version-control-git-and-github)'
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[版本控制，Git和GitHub](#version-control-git-and-github)'
- en: '[Getting started with Git](#getting-started-with-git)'
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[开始使用Git](#getting-started-with-git)'
- en: '[Create a fork of pandas](#create-a-fork-of-pandas)'
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建一个pandas分支](#create-a-fork-of-pandas)'
- en: '[Creating a feature branch](#creating-a-feature-branch)'
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建一个功能分支](#creating-a-feature-branch)'
- en: '[Making code changes](#making-code-changes)'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[进行代码更改](#making-code-changes)'
- en: '[Pushing your changes](#pushing-your-changes)'
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[推送您的更改](#pushing-your-changes)'
- en: '[Making a pull request](#making-a-pull-request)'
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[创建拉取请求](#making-a-pull-request)'
- en: '[Updating your pull request](#updating-your-pull-request)'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[更新您的拉取请求](#updating-your-pull-request)'
- en: '[Updating the development environment](#updating-the-development-environment)'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[更新开发环境](#updating-the-development-environment)'
- en: '[Tips for a successful pull request](#tips-for-a-successful-pull-request)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[成功提交拉取请求的提示](#tips-for-a-successful-pull-request)'
- en: All contributions, bug reports, bug fixes, documentation improvements, enhancements,
    and ideas are welcome.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎所有贡献，错误报告，错误修复，文档改进，增强和想法。
- en: '## [Bug reports and enhancement requests](#id1)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '## [错误报告和增强请求](#id1)'
- en: Bug reports and enhancement requests are an important part of making pandas
    more stable and are curated though Github issues. When reporting and issue or
    request, please select the [appropriate category and fill out the issue form fully](https://github.com/pandas-dev/pandas/issues/new/choose)
    to ensure others and the core development team can fully understand the scope
    of the issue.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 错误报告和增强请求是使pandas更加稳定的重要部分，并且通过Github问题进行策划。在报告问题或请求时，请选择[适当的类别并完整填写问题表单](https://github.com/pandas-dev/pandas/issues/new/choose)，以确保其他人和核心开发团队能够充分理解问题的范围。
- en: The issue will then show up to the pandas community and be open to comments/ideas
    from others.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 问题将会显示给pandas社区，并对其他人的评论/想法开放。
- en: '[Finding an issue to contribute to](#id2)'
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[找到要贡献的问题](#id2)'
- en: If you are brand new to pandas or open-source development, we recommend searching
    the [GitHub “issues” tab](https://github.com/pandas-dev/pandas/issues) to find
    issues that interest you. Unassigned issues labeled [Docs](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3ADocs+no%3Aassignee)
    and [good first issue](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22+no%3Aassignee)
    are typically good for newer contributors.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是pandas或开源开发的新手，我们建议搜索[GitHub“问题”选项卡](https://github.com/pandas-dev/pandas/issues)以找到您感兴趣的问题。未分配的问题标记为[文档](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3ADocs+no%3Aassignee)和[好的第一个问题](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22+no%3Aassignee)通常适合新贡献者。
- en: Once you’ve found an interesting issue, it’s a good idea to assign the issue
    to yourself, so nobody else duplicates the work on it. On the Github issue, a
    comment with the exact text `take` to automatically assign you the issue (this
    will take seconds and may require refreshing the page to see it).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您找到一个有趣的问题，最好将问题分配给自己，这样其他人就不会重复处理它。在Github问题上，使用确切文本`take`的评论将自动将问题分配给您（这将花费几秒钟，并可能需要刷新页面才能看到它）。
- en: If for whatever reason you are not able to continue working with the issue,
    please unassign it, so other people know it’s available again. You can check the
    list of assigned issues, since people may not be working in them anymore. If you
    want to work on one that is assigned, feel free to kindly ask the current assignee
    if you can take it (please allow at least a week of inactivity before considering
    work in the issue discontinued).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于任何原因您无法继续处理该问题，请取消分配，以便其他人知道它再次可用。您可以查看已分配问题的列表，因为可能没有人再处理它们了。如果您想处理已分配的问题，请随时友好地询问当前受让人是否可以接手（请至少允许一周的不活动时间，然后再考虑问题中止）。
- en: We have several [contributor community](community.html#community) communication
    channels, which you are welcome to join, and ask questions as you figure things
    out. Among them are regular meetings for new contributors, dev meetings, a dev
    mailing list, and a Slack for the contributor community. All pandas contributors
    are welcome to these spaces, where they can connect with each other. Even maintainers
    who have been with us for a long time felt just like you when they started out,
    and are happy to welcome you and support you as you get to know how we work, and
    where things are. Take a look at the next sections to learn more.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有几个[贡献者社区](community.html#community)交流渠道，欢迎你加入，并在弄清楚事情的过程中提问。其中包括新贡献者的定期会议、开发者会议、开发者邮件列表和一个
    Slack 贡献者社区。所有 pandas 贡献者都欢迎加入这些空间，在这里他们可以相互联系。即使是已经与我们在一起很长时间的维护者，在开始时也像你一样，对我们的工作方式和事物所在位置一无所知，他们很乐意欢迎你并支持你了解我们的工作方式以及事物所在位置。请查看接下来的章节以了解更多。
- en: '## [Submitting a pull request](#id3)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '## [提交拉取请求](#id3)'
- en: '### [Version control, Git, and GitHub](#id4)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '### [版本控制、Git 和 GitHub](#id4)'
- en: pandas is hosted on [GitHub](https://www.github.com/pandas-dev/pandas), and
    to contribute, you will need to sign up for a [free GitHub account](https://github.com/signup/free).
    We use [Git](https://git-scm.com/) for version control to allow many people to
    work together on the project.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 托管在 [GitHub](https://www.github.com/pandas-dev/pandas)，为了贡献，你需要注册一个[免费的
    GitHub 账户](https://github.com/signup/free)。我们使用[Git](https://git-scm.com/) 进行版本控制，以允许许多人共同在项目上工作。
- en: 'If you are new to Git, you can reference some of these resources for learning
    Git. Feel free to reach out to the [contributor community](community.html#community)
    for help if needed:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Git 的新手，可以参考以下资源学习 Git。如果需要帮助，随时可以联系[贡献者社区](community.html#community)：
- en: '[Git documentation](https://git-scm.com/doc).'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Git 文档](https://git-scm.com/doc)。'
- en: '[Numpy’s Git resources](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)
    tutorial.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Numpy 的 Git 资源](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)
    教程。'
- en: Also, the project follows a forking workflow further described on this page
    whereby contributors fork the repository, make changes and then create a pull
    request. So please be sure to read and follow all the instructions in this guide.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，该项目遵循的是在此页面进一步描述的分支工作流程，贡献者分叉存储库，进行更改，然后创建拉取请求。因此，请务必阅读并遵循本指南中的所有说明。
- en: If you are new to contributing to projects through forking on GitHub, take a
    look at the [GitHub documentation for contributing to projects](https://docs.github.com/en/get-started/quickstart/contributing-to-projects).
    GitHub provides a quick tutorial using a test repository that may help you become
    more familiar with forking a repository, cloning a fork, creating a feature branch,
    pushing changes and making pull requests.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是通过 GitHub 上的分叉贡献项目的新手，请查看[GitHub 关于贡献项目的文档](https://docs.github.com/en/get-started/quickstart/contributing-to-projects)。GitHub
    提供了一个使用测试存储库的快速教程，可以帮助你更熟悉分叉存储库、克隆分叉、创建特性分支、推送更改和创建拉取请求。
- en: 'Below are some useful resources for learning more about forking and pull requests
    on GitHub:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些关于在 GitHub 上了解分叉和拉取请求的有用资源：
- en: the [GitHub documentation for forking a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo).
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 关于分叉存储库的文档](https://docs.github.com/en/get-started/quickstart/fork-a-repo)。'
- en: the [GitHub documentation for collaborating with pull requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests).
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 关于合作与拉取请求的文档](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests)。'
- en: the [GitHub documentation for working with forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks).
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 关于使用分支的文档](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks)。'
- en: '[Getting started with Git](#id5)'
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[开始使用 Git](#id5)'
- en: '[GitHub has instructions](https://docs.github.com/en/get-started/quickstart/set-up-git)
    for installing git, setting up your SSH key, and configuring git. All these steps
    need to be completed before you can work seamlessly between your local repository
    and GitHub.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub 提供了](https://docs.github.com/en/get-started/quickstart/set-up-git)
    安装 git、设置 SSH 密钥和配置 git 的指导。在你能够无缝地在本地仓库和 GitHub 之间工作之前，所有这些步骤都需要完成。'
- en: '### [Create a fork of pandas](#id6)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '### [创建 pandas 的分支](#id6)'
- en: You will need your own copy of pandas (aka fork) to work on the code. Go to
    the [pandas project page](https://github.com/pandas-dev/pandas) and hit the `Fork`
    button. Please uncheck the box to copy only the main branch before selecting `Create
    Fork`. You will want to clone your fork to your machine
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要自己的 pandas 副本（即分支）来处理代码。转到 [pandas 项目页面](https://github.com/pandas-dev/pandas)
    并单击 `Fork` 按钮。请在选择 `Create Fork` 之前取消选中仅复制主分支的框。您将想要将您的分叉克隆到您的机器上
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This creates the directory `pandas-yourname` and connects your repository to
    the upstream (main project) *pandas* repository.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建目录 `pandas-yourname` 并将您的存储库连接到上游（主要项目）*pandas* 存储库。
- en: Note
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Performing a shallow clone (with `--depth==N`, for some `N` greater or equal
    to 1) might break some tests and features as `pd.show_versions()` as the version
    number cannot be computed anymore.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 执行浅克隆（使用 `--depth==N`，其中 `N` 大于或等于 1）可能会破坏一些测试和功能，比如 `pd.show_versions()`，因为无法再计算版本号了。
- en: '[Creating a feature branch](#id7)'
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[创建功能分支](#id7)'
- en: Your local `main` branch should always reflect the current state of pandas repository.
    First ensure it’s up-to-date with the main pandas repository.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您的本地 `main` 分支应始终反映 pandas 存储库的当前状态。首先确保它与主要 pandas 存储库保持最新状态。
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, create a feature branch for making your changes. For example
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建一个用于进行更改的功能分支。例如
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This changes your working branch from `main` to the `shiny-new-feature` branch.
    Keep any changes in this branch specific to one bug or feature so it is clear
    what the branch brings to pandas. You can have many feature branches and switch
    in between them using the `git checkout` command.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这会将您的工作分支从 `main` 更改为 `shiny-new-feature` 分支。保持此分支中的任何更改都特定于一个错误或功能，以便清楚地了解该分支为
    pandas 带来了什么。您可以拥有许多功能分支，并使用 `git checkout` 命令在它们之间切换。
- en: When you want to update the feature branch with changes in main after you created
    the branch, check the section on [updating a PR](#contributing-update-pr).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当您希望更新特性分支以反映主分支中的更改时，请查看有关[更新 PR](#contributing-update-pr)的部分。
- en: '### [Making code changes](#id8)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '### [进行代码更改](#id8)'
- en: Before modifying any code, ensure you follow the [contributing environment](contributing_environment.html#contributing-environment)
    guidelines to set up an appropriate development environment.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在修改任何代码之前，请确保遵循[贡献环境](contributing_environment.html#contributing-environment)指南，设置适当的开发环境。
- en: Then once you have made code changes, you can see all the changes you’ve currently
    made by running.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，一旦您进行了代码更改，可以通过运行来查看您当前所做的所有更改。
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For files you intended to modify or add, run.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于您打算修改或添加的文件，请运行。
- en: '[PRE4]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Running `git status` again should display
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行 `git status` 应显示
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Finally, commit your changes to your local repository with an explanatory commit
    message
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用解释性的提交消息将更改提交到本地存储库。
- en: '[PRE6]  ### [Pushing your changes](#id9)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE6]  ### [推送您的更改](#id9)'
- en: When you want your changes to appear publicly on your GitHub page, push your
    forked feature branch’s commits
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当您希望您的更改在您的 GitHub 页面上公开显示时，请推送您派生的功能分支的提交
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here `origin` is the default name given to your remote repository on GitHub.
    You can see the remote repositories
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 `origin` 是 GitHub 上给您的远程存储库的默认名称。您可以查看远程存储库
- en: '[PRE8]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you added the upstream repository as described above you will see something
    like
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果按上述描述添加了上游存储库，则会看到类似于
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now your code is on GitHub, but it is not yet a part of the pandas project.
    For that to happen, a pull request needs to be submitted on GitHub.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的代码已经在 GitHub 上了，但它还不是 pandas 项目的一部分。为了发生这种情况，需要在 GitHub 上提交拉取请求。
- en: '[Making a pull request](#id10)'
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[提交拉取请求](#id10)'
- en: One you have finished your code changes, your code change will need to follow
    the [pandas contribution guidelines](contributing_codebase.html#contributing-codebase)
    to be successfully accepted.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成了代码更改，您的代码更改将需要遵循[pandas 贡献指南](contributing_codebase.html#contributing-codebase)才能成功接受。
- en: 'If everything looks good, you are ready to make a pull request. A pull request
    is how code from your local repository becomes available to the GitHub community
    to review and merged into project to appear the in the next release. To submit
    a pull request:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切都看起来很好，您就可以准备提交拉取请求。拉取请求是您的本地存储库中的代码变为 GitHub 社区可审查并合并到项目中以出现在下一个发布版中的方式。要提交拉取请求：
- en: Navigate to your repository on GitHub
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 GitHub 上的您的存储库
- en: Click on the `Compare & pull request` button
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`Compare & pull request`按钮
- en: You can then click on `Commits` and `Files Changed` to make sure everything
    looks okay one last time
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您可以单击`Commits`和`Files Changed`以确保一切看起来都没问题。
- en: 'Write a descriptive title that includes prefixes. pandas uses a convention
    for title prefixes. Here are some common ones along with general guidelines for
    when to use them:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个包含前缀的描述性标题。pandas 使用标题前缀的约定。以下是一些常见的前缀以及何时使用它们的一般准则：
- en: 'ENH: Enhancement, new functionality'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ENH: 增强功能，新功能'
- en: ''
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BUG: Bug fix'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'BUG: 错误修复'
- en: ''
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'DOC: Additions/updates to documentation'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DOC: 文档的添加/更新'
- en: ''
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TST: Additions/updates to tests'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TST: 测试的添加/更新'
- en: ''
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BLD: Updates to the build process/scripts'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'BLD: 构建过程/脚本的更新'
- en: ''
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'PERF: Performance improvement'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'PERF: 性能优化'
- en: ''
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TYP: Type annotations'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TYP: 类型注释'
- en: ''
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'CLN: Code cleanup'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CLN: 代码清理'
- en: Write a description of your changes in the `Preview Discussion` tab
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Preview Discussion`标签中写下您的更改描述
- en: Click `Send Pull Request`.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`发送 Pull Request`。
- en: This request then goes to the repository maintainers, and they will review the
    code.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 此请求然后发送给存储库维护者，他们将审查代码。
- en: '### [Updating your pull request](#id11)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '### [更新您的 Pull Request](#id11)'
- en: Based on the review you get on your pull request, you will probably need to
    make some changes to the code. You can follow the [code committing steps](#contributing-commit-code)
    again to address any feedback and update your pull request.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您在 Pull Request 上收到的审查，您可能需要对代码进行一些更改。您可以再次遵循[提交代码的步骤](#contributing-commit-code)来解决任何反馈并更新您的
    Pull Request。
- en: 'It is also important that updates in the pandas `main` branch are reflected
    in your pull request. To update your feature branch with changes in the pandas
    `main` branch, run:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: pandas`main`分支中的更新也很重要，应在您的 Pull Request 中反映出来。要将您的特性分支与 pandas`main`分支中的更改同步，运行：
- en: '[PRE10]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If there are no conflicts (or they could be fixed automatically), a file with
    a default commit message will open, and you can simply save and quit this file.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有冲突（或者可以自动修复），将会打开一个带有默认提交消息的文件，您只需保存并退出该文件。
- en: If there are merge conflicts, you need to solve those conflicts. See for example
    at [https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)
    for an explanation on how to do this.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有合并冲突，则需要解决这些冲突。例如，可以参考[https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)来了解如何解决这些冲突。
- en: 'Once the conflicts are resolved, run:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦冲突解决完毕，运行：
- en: '`git add -u` to stage any files you’ve updated;'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`git add -u`来暂存您更新的任何文件；
- en: '`git commit` to finish the merge.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`git commit`完成合并。
- en: Note
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you have uncommitted changes at the moment you want to update the branch
    with `main`, you will need to `stash` them prior to updating (see the [stash docs](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)).
    This will effectively store your changes and they can be reapplied after updating.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在想要将分支更新到`main`时有未提交的更改，则需要在更新之前`stash`它们（参见[stash 文档](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)）。这将有效地存储您的更改，可以在更新后重新应用它们。
- en: 'After the feature branch has been update locally, you can now update your pull
    request by pushing to the branch on GitHub:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 特性分支在本地更新后，现在您可以通过将分支推送到 GitHub 上的分支来更新您的 Pull Request：
- en: '[PRE11]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Any `git push` will automatically update your pull request with your branch’s
    changes and restart the [Continuous Integration](contributing_codebase.html#contributing-ci)
    checks.  ### [Updating the development environment](#id12)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '任何`git push`都将自动使用您分支的更改更新您的 Pull Request 并重新启动[持续集成](contributing_codebase.html#contributing-ci)检查。  ###
    [更新开发环境](#id12)'
- en: It is important to periodically update your local `main` branch with updates
    from the pandas `main` branch and update your development environment to reflect
    any changes to the various packages that are used during development.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 定期将您的本地`main`分支与 pandas`main`分支的更新同步，并更新您的开发环境以反映在开发过程中使用的各种包的任何更改都是很重要的。
- en: 'If using [mamba](contributing_environment.html#contributing-mamba), run:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用[mamba](contributing_environment.html#contributing-mamba)，运行：
- en: '[PRE12]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If using [pip](contributing_environment.html#contributing-pip) , do:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用[pip](contributing_environment.html#contributing-pip)，执行：
- en: '[PRE13]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[Tips for a successful pull request](#id13)'
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[成功发起 Pull Request 的技巧](#id13)'
- en: If you have made it to the [Making a pull request](#making-a-pull-request) phase,
    one of the core contributors may take a look. Please note however that a handful
    of people are responsible for reviewing all of the contributions, which can often
    lead to bottlenecks.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经进入了[发起 Pull Request](#making-a-pull-request)阶段，核心贡献者之一可能会查看。然而，请注意，少数人负责审查所有的贡献，这通常会导致瓶颈。
- en: 'To improve the chances of your pull request being reviewed, you should:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高拉取请求被审查的机会，你应该：
- en: '**Reference an open issue** for non-trivial changes to clarify the PR’s purpose'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**引用一个开放问题**以澄清PR的目的'
- en: '**Ensure you have appropriate tests**. These should be the first part of any
    PR'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确保你有适当的测试**。这些应该是任何PR的第一部分'
- en: '**Keep your pull requests as simple as possible**. Larger PRs take longer to
    review'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**尽量保持你的拉取请求简单**。较大的PR需要更长时间来审查'
- en: '**Ensure that CI is in a green state**. Reviewers may not even look otherwise'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确保CI处于绿色状态**。否则，审阅者可能根本不会看'
- en: '**Keep** [Updating your pull request](#updating-your-pull-request), either
    by request or every few days'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保持**[更新你的拉取请求](#updating-your-pull-request)，不论是要求还是每隔几天'
- en: '## [Bug reports and enhancement requests](#id1)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '## [错误报告和改进请求](#id1)'
- en: Bug reports and enhancement requests are an important part of making pandas
    more stable and are curated though Github issues. When reporting and issue or
    request, please select the [appropriate category and fill out the issue form fully](https://github.com/pandas-dev/pandas/issues/new/choose)
    to ensure others and the core development team can fully understand the scope
    of the issue.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 错误报告和改进请求是使pandas更加稳定的重要组成部分，并通过Github问题进行策划。在报告问题或请求时，请选择[适当的类别并完整填写问题表单](https://github.com/pandas-dev/pandas/issues/new/choose)，以确保其他人和核心开发团队能够充分理解问题的范围。
- en: The issue will then show up to the pandas community and be open to comments/ideas
    from others.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 该问题将会显示给pandas社区，并对其他人的评论/想法开放。
- en: '[Finding an issue to contribute to](#id2)'
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[寻找要贡献的问题](#id2)'
- en: If you are brand new to pandas or open-source development, we recommend searching
    the [GitHub “issues” tab](https://github.com/pandas-dev/pandas/issues) to find
    issues that interest you. Unassigned issues labeled [Docs](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3ADocs+no%3Aassignee)
    and [good first issue](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22+no%3Aassignee)
    are typically good for newer contributors.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是pandas或开源开发的新手，我们建议在[GitHub的“issues”标签页](https://github.com/pandas-dev/pandas/issues)上搜索你感兴趣的问题。未分配的标记为[Docs](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3ADocs+no%3Aassignee)和[good
    first issue](https://github.com/pandas-dev/pandas/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22+no%3Aassignee)的问题通常适合新贡献者。
- en: Once you’ve found an interesting issue, it’s a good idea to assign the issue
    to yourself, so nobody else duplicates the work on it. On the Github issue, a
    comment with the exact text `take` to automatically assign you the issue (this
    will take seconds and may require refreshing the page to see it).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你找到一个有趣的问题，最好把它分配给自己，这样其他人就不会重复进行工作。在Github问题中，发表一条包含确切文本`take`的评论，以自动将问题分配给你（这将花费几秒钟，并可能需要刷新页面才能看到它）。
- en: If for whatever reason you are not able to continue working with the issue,
    please unassign it, so other people know it’s available again. You can check the
    list of assigned issues, since people may not be working in them anymore. If you
    want to work on one that is assigned, feel free to kindly ask the current assignee
    if you can take it (please allow at least a week of inactivity before considering
    work in the issue discontinued).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '如果由于任何原因你无法继续处理问题，请取消分配它，这样其他人就知道它又可用了。你可以检查已分配问题的列表，因为可能没有人在处理它们。如果你想处理一个已分配的问题，请友好地询问当前受让人是否可以接手它（请至少允许一周的不活动时间，然后再考虑中断问题的工作）。 '
- en: We have several [contributor community](community.html#community) communication
    channels, which you are welcome to join, and ask questions as you figure things
    out. Among them are regular meetings for new contributors, dev meetings, a dev
    mailing list, and a Slack for the contributor community. All pandas contributors
    are welcome to these spaces, where they can connect with each other. Even maintainers
    who have been with us for a long time felt just like you when they started out,
    and are happy to welcome you and support you as you get to know how we work, and
    where things are. Take a look at the next sections to learn more.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有几个[贡献者社区](community.html#community)交流渠道，欢迎你加入，并在你摸清楚情况时提问。其中包括新贡献者的定期会议、开发会议、开发邮件列表和贡献者社区的Slack。所有pandas贡献者都可以加入这些空间，在这里他们可以互相联系。即使是已经和我们在一起很长时间的维护者，在开始时也和你一样感到不知所措，他们很乐意欢迎你，并在你了解我们的工作方式和事物所在的过程中支持你。请看下一节了解更多信息。
- en: '## [Submitting a pull request](#id3)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '## [提交拉取请求](#id3)'
- en: '### [Version control, Git, and GitHub](#id4)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '### [版本控制、Git 和 GitHub](#id4)'
- en: pandas is hosted on [GitHub](https://www.github.com/pandas-dev/pandas), and
    to contribute, you will need to sign up for a [free GitHub account](https://github.com/signup/free).
    We use [Git](https://git-scm.com/) for version control to allow many people to
    work together on the project.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 托管在[GitHub](https://www.github.com/pandas-dev/pandas)，为了贡献，你需要注册一个[免费的
    GitHub 帐户](https://github.com/signup/free)。我们使用[Git](https://git-scm.com/)进行版本控制，以允许多人共同在项目上工作。
- en: 'If you are new to Git, you can reference some of these resources for learning
    Git. Feel free to reach out to the [contributor community](community.html#community)
    for help if needed:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对 Git 是新手，你可以参考这些资源学习 Git。如果需要帮助，可以随时联系[贡献者社区](community.html#community)：
- en: '[Git documentation](https://git-scm.com/doc).'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Git 文档](https://git-scm.com/doc)。'
- en: '[Numpy’s Git resources](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)
    tutorial.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Numpy 的 Git 资源](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)教程。'
- en: Also, the project follows a forking workflow further described on this page
    whereby contributors fork the repository, make changes and then create a pull
    request. So please be sure to read and follow all the instructions in this guide.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，该项目遵循本页面进一步描述的分叉工作流程，贡献者分叉仓库，进行更改，然后创建拉取请求。因此，请务必阅读并遵循本指南中的所有说明。
- en: If you are new to contributing to projects through forking on GitHub, take a
    look at the [GitHub documentation for contributing to projects](https://docs.github.com/en/get-started/quickstart/contributing-to-projects).
    GitHub provides a quick tutorial using a test repository that may help you become
    more familiar with forking a repository, cloning a fork, creating a feature branch,
    pushing changes and making pull requests.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是通过在 GitHub 上分叉项目来贡献的新手，请查看[GitHub 贡献项目的文档](https://docs.github.com/en/get-started/quickstart/contributing-to-projects)。GitHub
    提供了一个快速教程，使用一个测试仓库，可能会帮助你更熟悉如何分叉仓库、克隆分叉、创建功能分支、推送更改和发起拉取请求。
- en: 'Below are some useful resources for learning more about forking and pull requests
    on GitHub:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些关于在 GitHub 上了解分叉和拉取请求的有用资源：
- en: the [GitHub documentation for forking a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo).
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 有关分叉仓库的文档](https://docs.github.com/en/get-started/quickstart/fork-a-repo)。'
- en: the [GitHub documentation for collaborating with pull requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests).
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 有关与拉取请求协作的文档](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests)。'
- en: the [GitHub documentation for working with forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks).
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GitHub 有关使用分叉的文档](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks)。'
- en: '[Getting started with Git](#id5)'
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[开始使用 Git](#id5)'
- en: '[GitHub has instructions](https://docs.github.com/en/get-started/quickstart/set-up-git)
    for installing git, setting up your SSH key, and configuring git. All these steps
    need to be completed before you can work seamlessly between your local repository
    and GitHub.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub 有关安装 git、设置 SSH 密钥和配置 git 的说明](https://docs.github.com/en/get-started/quickstart/set-up-git)。在你的本地仓库和
    GitHub 之间无缝工作之前，所有这些步骤都需要完成。'
- en: '### [Create a fork of pandas](#id6)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '### [创建 pandas 的分叉](#id6)'
- en: You will need your own copy of pandas (aka fork) to work on the code. Go to
    the [pandas project page](https://github.com/pandas-dev/pandas) and hit the `Fork`
    button. Please uncheck the box to copy only the main branch before selecting `Create
    Fork`. You will want to clone your fork to your machine
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要你自己的 pandas 的副本（也称为分叉）来处理代码。转到[pandas 项目页面](https://github.com/pandas-dev/pandas)并点击`Fork`按钮。在选择`Create
    Fork`之前，请取消选中仅复制主分支的框。你将想要克隆你的分叉到你的机器上
- en: '[PRE14]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This creates the directory `pandas-yourname` and connects your repository to
    the upstream (main project) *pandas* repository.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建目录`pandas-yourname`并将你的仓库连接到上游（主项目）*pandas*仓库。
- en: Note
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Performing a shallow clone (with `--depth==N`, for some `N` greater or equal
    to 1) might break some tests and features as `pd.show_versions()` as the version
    number cannot be computed anymore.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 执行浅克隆（使用`--depth==N`，其中`N`大于或等于 1）可能会导致一些测试和功能（例如`pd.show_versions()`）失败，因为版本号无法再计算了。
- en: '[Creating a feature branch](#id7)'
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[创建功能分支](#id7)'
- en: Your local `main` branch should always reflect the current state of pandas repository.
    First ensure it’s up-to-date with the main pandas repository.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 你的本地`main`分支应始终反映出 pandas 仓库的当前状态。首先确保它与主要 pandas 仓库保持最新。
- en: '[PRE15]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Then, create a feature branch for making your changes. For example
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，为进行更改创建一个功能分支。例如
- en: '[PRE16]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This changes your working branch from `main` to the `shiny-new-feature` branch.
    Keep any changes in this branch specific to one bug or feature so it is clear
    what the branch brings to pandas. You can have many feature branches and switch
    in between them using the `git checkout` command.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把您的工作分支从`main`切换到`shiny-new-feature`分支。保持此分支中的任何更改专注于一个错误或功能，以便清楚地了解该分支为 pandas
    带来了什么。您可以拥有许多功能分支，并使用`git checkout`命令在它们之间切换。
- en: When you want to update the feature branch with changes in main after you created
    the branch, check the section on [updating a PR](#contributing-update-pr).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要在创建分支后将主分支中的更改更新到功能分支时，请查看[更新 PR](#contributing-update-pr)部分。
- en: '### [Making code changes](#id8)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '### [进行代码更改](#id8)'
- en: Before modifying any code, ensure you follow the [contributing environment](contributing_environment.html#contributing-environment)
    guidelines to set up an appropriate development environment.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在修改任何代码之前，请确保遵循[贡献环境](contributing_environment.html#contributing-environment)指南，设置适当的开发环境。
- en: Then once you have made code changes, you can see all the changes you’ve currently
    made by running.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 然后一旦您进行了代码更改，您可以通过运行查看您当前所做的所有更改。
- en: '[PRE17]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: For files you intended to modify or add, run.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 对于您打算修改或添加的文件，请运行。
- en: '[PRE18]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Running `git status` again should display
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行`git status`应该显示
- en: '[PRE19]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Finally, commit your changes to your local repository with an explanatory commit
    message
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用解释性的提交消息将更改提交到您的本地存储库
- en: '[PRE20]  ### [Pushing your changes](#id9)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE20]  ### [推送您的更改](#id9)'
- en: When you want your changes to appear publicly on your GitHub page, push your
    forked feature branch’s commits
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 当您希望您的更改在您的 GitHub 页面上公开显示时，请推送您派生的功能分支的提交
- en: '[PRE21]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Here `origin` is the default name given to your remote repository on GitHub.
    You can see the remote repositories
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这里`origin`是 GitHub 上给定给您的远程存储库的默认名称。您可以查看远程存储库
- en: '[PRE22]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: If you added the upstream repository as described above you will see something
    like
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 如果按照上述描述添加了上游存储库，您将看到类似以下内容
- en: '[PRE23]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now your code is on GitHub, but it is not yet a part of the pandas project.
    For that to happen, a pull request needs to be submitted on GitHub.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的代码已经在 GitHub 上，但尚未成为 pandas 项目的一部分。为了实现这一点，需要在 GitHub 上提交一个拉取请求。
- en: '[Making a pull request](#id10)'
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[创建拉取请求](#id10)'
- en: One you have finished your code changes, your code change will need to follow
    the [pandas contribution guidelines](contributing_codebase.html#contributing-codebase)
    to be successfully accepted.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成代码更改，您的代码更改将需要遵循[pandas 贡献指南](contributing_codebase.html#contributing-codebase)才能成功被接受。
- en: 'If everything looks good, you are ready to make a pull request. A pull request
    is how code from your local repository becomes available to the GitHub community
    to review and merged into project to appear the in the next release. To submit
    a pull request:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切看起来正常，您就可以准备创建一个拉取请求。拉取请求是您的本地存储库中的代码如何变为 GitHub 社区可审查并合并到项目中以出现在下一个发布中的方式。要提交拉取请求：
- en: Navigate to your repository on GitHub
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到您在 GitHub 上的存储库
- en: Click on the `Compare & pull request` button
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`比较和拉取请求`按钮
- en: You can then click on `Commits` and `Files Changed` to make sure everything
    looks okay one last time
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您随后可以单击`Commits`和`Files Changed`，以确保最后一次一切看起来都正常
- en: 'Write a descriptive title that includes prefixes. pandas uses a convention
    for title prefixes. Here are some common ones along with general guidelines for
    when to use them:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个包含前缀的描述性标题。pandas 使用标题前缀的约定。以下是一些常见的前缀以及何时使用它们的一般准则：
- en: 'ENH: Enhancement, new functionality'
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ENH: 增强功能，新功能'
- en: ''
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BUG: Bug fix'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'BUG: 修复错误'
- en: ''
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'DOC: Additions/updates to documentation'
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DOC: 添加/更新文档'
- en: ''
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TST: Additions/updates to tests'
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TST: 添加/更新测试'
- en: ''
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BLD: Updates to the build process/scripts'
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'BLD: 更新构建过程/脚本'
- en: ''
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'PERF: Performance improvement'
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'PERF: 性能改进'
- en: ''
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TYP: Type annotations'
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TYP: 类型注解'
- en: ''
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'CLN: Code cleanup'
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CLN: 代码清理'
- en: Write a description of your changes in the `Preview Discussion` tab
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`预览讨论`选项卡中编写更改描述
- en: Click `Send Pull Request`.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`发送拉取请求`。
- en: This request then goes to the repository maintainers, and they will review the
    code.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 然后此请求将发送给存储库维护者，他们将审查代码。
- en: '### [Updating your pull request](#id11)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '### [更新您的拉取请求](#id11)'
- en: Based on the review you get on your pull request, you will probably need to
    make some changes to the code. You can follow the [code committing steps](#contributing-commit-code)
    again to address any feedback and update your pull request.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 根据拉取请求收到的审查，你可能需要对代码进行一些更改。你可以再次遵循 [代码提交步骤](#contributing-commit-code) 来解决任何反馈并更新你的拉取请求。
- en: 'It is also important that updates in the pandas `main` branch are reflected
    in your pull request. To update your feature branch with changes in the pandas
    `main` branch, run:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要确保 pandas `main` 分支的更新反映在你的拉取请求中。要将你的特性分支与 pandas `main` 分支中的更改同步，运行：
- en: '[PRE24]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: If there are no conflicts (or they could be fixed automatically), a file with
    a default commit message will open, and you can simply save and quit this file.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有冲突（或者它们可以自动修复），将打开一个带有默认提交消息的文件，你只需保存并退出该文件即可。
- en: If there are merge conflicts, you need to solve those conflicts. See for example
    at [https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)
    for an explanation on how to do this.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在合并冲突，你需要解决这些冲突。例如，可以查看[https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)，了解如何操作。
- en: 'Once the conflicts are resolved, run:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦冲突解决完毕，运行：
- en: '`git add -u` to stage any files you’ve updated;'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`git add -u` 将更新过的文件加入到暂存区；'
- en: '`git commit` to finish the merge.'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`git commit` 完成合并。'
- en: Note
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you have uncommitted changes at the moment you want to update the branch
    with `main`, you will need to `stash` them prior to updating (see the [stash docs](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)).
    This will effectively store your changes and they can be reapplied after updating.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在你想要用 `main` 更新分支时有未提交的更改，你需要在更新之前将它们 `stash` 起来（参见[stash 文档](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)）。这将有效地存储你的更改，并在更新后重新应用它们。
- en: 'After the feature branch has been update locally, you can now update your pull
    request by pushing to the branch on GitHub:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 特性分支在本地更新后，现在可以通过将分支推送到 GitHub 上的分支来更新你的拉取请求：
- en: '[PRE25]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Any `git push` will automatically update your pull request with your branch’s
    changes and restart the [Continuous Integration](contributing_codebase.html#contributing-ci)
    checks.  ### [Updating the development environment](#id12)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 `git push` 将自动更新你的拉取请求，以反映你的分支的更改，并重新启动[持续集成](contributing_codebase.html#contributing-ci)检查。###
    [更新开发环境](#id12)
- en: It is important to periodically update your local `main` branch with updates
    from the pandas `main` branch and update your development environment to reflect
    any changes to the various packages that are used during development.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 定期更新你的本地 `main` 分支以反映 pandas `main` 分支的更新，并更新你的开发环境以反映在开发过程中使用的各种包的任何更改是重要的。
- en: 'If using [mamba](contributing_environment.html#contributing-mamba), run:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用 [mamba](contributing_environment.html#contributing-mamba)，运行：
- en: '[PRE26]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'If using [pip](contributing_environment.html#contributing-pip) , do:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用 [pip](contributing_environment.html#contributing-pip)，执行：
- en: '[PRE27]  ### [Version control, Git, and GitHub](#id4)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE27] ### [版本控制，Git 和 GitHub](#id4)'
- en: pandas is hosted on [GitHub](https://www.github.com/pandas-dev/pandas), and
    to contribute, you will need to sign up for a [free GitHub account](https://github.com/signup/free).
    We use [Git](https://git-scm.com/) for version control to allow many people to
    work together on the project.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 托管在 [GitHub](https://www.github.com/pandas-dev/pandas)，要做出贡献，你需要注册一个[免费的
    GitHub 账户](https://github.com/signup/free)。我们使用 [Git](https://git-scm.com/) 进行版本控制，以便许多人可以共同在项目上工作。
- en: 'If you are new to Git, you can reference some of these resources for learning
    Git. Feel free to reach out to the [contributor community](community.html#community)
    for help if needed:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Git 的新手，你可以参考一些资源来学习 Git。如有需要，可以随时向[贡献者社区](community.html#community)寻求帮助：
- en: '[Git documentation](https://git-scm.com/doc).'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Git 文档](https://git-scm.com/doc)。'
- en: '[Numpy’s Git resources](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)
    tutorial.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Numpy 的 Git 资源](https://numpy.org/doc/stable/dev/gitwash/git_resources.html)
    教程。'
- en: Also, the project follows a forking workflow further described on this page
    whereby contributors fork the repository, make changes and then create a pull
    request. So please be sure to read and follow all the instructions in this guide.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，项目遵循进一步在本页描述的分支工作流程，其中贡献者分叉存储库，进行更改，然后创建拉取请求。因此，请确保阅读并遵循本指南中的所有说明。
- en: If you are new to contributing to projects through forking on GitHub, take a
    look at the [GitHub documentation for contributing to projects](https://docs.github.com/en/get-started/quickstart/contributing-to-projects).
    GitHub provides a quick tutorial using a test repository that may help you become
    more familiar with forking a repository, cloning a fork, creating a feature branch,
    pushing changes and making pull requests.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是通过在GitHub上进行分叉来为项目做贡献的新手，请查看[GitHub为项目做贡献的文档](https://docs.github.com/en/get-started/quickstart/contributing-to-projects)。GitHub提供了一个快速教程，使用一个测试存储库可能会帮助您更熟悉分叉存储库、克隆分叉、创建功能分支、推送更改和发起拉取请求。
- en: 'Below are some useful resources for learning more about forking and pull requests
    on GitHub:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些关于在GitHub上了解更多关于分叉和拉取请求的有用资源：
- en: the [GitHub documentation for forking a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo).
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[分叉存储库的GitHub文档](https://docs.github.com/en/get-started/quickstart/fork-a-repo)。'
- en: the [GitHub documentation for collaborating with pull requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests).
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[与拉取请求协作的GitHub文档](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests)。'
- en: the [GitHub documentation for working with forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks).
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[与分支协作的GitHub文档](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks)。'
- en: '[Getting started with Git](#id5)'
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[开始使用Git](#id5)'
- en: '[GitHub has instructions](https://docs.github.com/en/get-started/quickstart/set-up-git)
    for installing git, setting up your SSH key, and configuring git. All these steps
    need to be completed before you can work seamlessly between your local repository
    and GitHub.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub有说明](https://docs.github.com/en/get-started/quickstart/set-up-git)用于安装git、设置您的SSH密钥和配置git。在您可以在本地存储库和GitHub之间无缝工作之前，所有这些步骤都需要完成。'
- en: '### [Create a fork of pandas](#id6)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '### [创建pandas的分支](#id6)'
- en: You will need your own copy of pandas (aka fork) to work on the code. Go to
    the [pandas project page](https://github.com/pandas-dev/pandas) and hit the `Fork`
    button. Please uncheck the box to copy only the main branch before selecting `Create
    Fork`. You will want to clone your fork to your machine
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要您自己的pandas副本（也称为分支）来处理代码。转到[pandas项目页面](https://github.com/pandas-dev/pandas)并点击`Fork`按钮。在选择`Create
    Fork`之前，请取消选中仅复制主分支的框。您将需要将您的分支克隆到您的计算机上
- en: '[PRE28]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This creates the directory `pandas-yourname` and connects your repository to
    the upstream (main project) *pandas* repository.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建目录`pandas-yourname`并将您的存储库连接到上游（主项目）*pandas*存储库。
- en: Note
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Performing a shallow clone (with `--depth==N`, for some `N` greater or equal
    to 1) might break some tests and features as `pd.show_versions()` as the version
    number cannot be computed anymore.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 执行浅克隆（使用`--depth==N`，其中`N`大于或等于1）可能会破坏一些测试和功能，因为`pd.show_versions()`无法再计算版本号。
- en: '[Creating a feature branch](#id7)'
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[创建一个功能分支](#id7)'
- en: Your local `main` branch should always reflect the current state of pandas repository.
    First ensure it’s up-to-date with the main pandas repository.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 您本地的`main`分支应始终反映pandas存储库的当前状态。首先确保它与主pandas存储库保持最新。
- en: '[PRE29]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Then, create a feature branch for making your changes. For example
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建一个用于进行更改的功能分支。例如
- en: '[PRE30]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This changes your working branch from `main` to the `shiny-new-feature` branch.
    Keep any changes in this branch specific to one bug or feature so it is clear
    what the branch brings to pandas. You can have many feature branches and switch
    in between them using the `git checkout` command.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把你的工作分支从`main`切换到`shiny-new-feature`分支。保持此分支中的任何更改专注于一个bug或功能，以便清楚地了解该分支为pandas带来了什么。您可以拥有许多功能分支，并使用`git
    checkout`命令在它们之间切换。
- en: When you want to update the feature branch with changes in main after you created
    the branch, check the section on [updating a PR](#contributing-update-pr).
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要在创建分支后使用主分支中的更改更新功能分支时，请查看[更新PR](#contributing-update-pr)部分。
- en: '### [Making code changes](#id8)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '### [进行代码更改](#id8)'
- en: Before modifying any code, ensure you follow the [contributing environment](contributing_environment.html#contributing-environment)
    guidelines to set up an appropriate development environment.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在修改任何代码之前，请确保遵循[贡献环境](contributing_environment.html#contributing-environment)指南来设置适当的开发环境。
- en: Then once you have made code changes, you can see all the changes you’ve currently
    made by running.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，一旦您进行了代码更改，您可以通过运行查看您当前所做的所有更改。
- en: '[PRE31]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: For files you intended to modify or add, run.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 对于您打算修改或添加的文件，请运行。
- en: '[PRE32]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Running `git status` again should display
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行`git status`应显示
- en: '[PRE33]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Finally, commit your changes to your local repository with an explanatory commit
    message
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用解释性的提交消息将您的更改提交到本地存储库
- en: '[PRE34]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '### [Pushing your changes](#id9)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '### [推送您的更改](#id9)'
- en: When you want your changes to appear publicly on your GitHub page, push your
    forked feature branch’s commits
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 当您希望您的更改公开显示在您的 GitHub 页面上时，请推送您的分支的提交
- en: '[PRE35]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Here `origin` is the default name given to your remote repository on GitHub.
    You can see the remote repositories
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 这里 `origin` 是 GitHub 上给您的远程存储库的默认名称。您可以看到远程存储库
- en: '[PRE36]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: If you added the upstream repository as described above you will see something
    like
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 如果像上面描述的那样添加了上游存储库，您将看到类似以下的内容
- en: '[PRE37]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Now your code is on GitHub, but it is not yet a part of the pandas project.
    For that to happen, a pull request needs to be submitted on GitHub.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的代码已经在 GitHub 上了，但它还不是 pandas 项目的一部分。为了实现这一点，需要在 GitHub 上提交一个拉取请求。
- en: '[Making a pull request](#id10)'
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[创建拉取请求](#id10)'
- en: One you have finished your code changes, your code change will need to follow
    the [pandas contribution guidelines](contributing_codebase.html#contributing-codebase)
    to be successfully accepted.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成了代码更改，您的代码更改将需要遵循 [pandas 贡献指南](contributing_codebase.html#contributing-codebase)
    才能成功被接受。
- en: 'If everything looks good, you are ready to make a pull request. A pull request
    is how code from your local repository becomes available to the GitHub community
    to review and merged into project to appear the in the next release. To submit
    a pull request:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切看起来都很好，您就可以准备发起拉取请求。拉取请求是您的本地存储库中的代码如何变为 GitHub 社区可审查并合并到项目中以出现在下一个版本中的方式。提交拉取请求：
- en: Navigate to your repository on GitHub
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到您在 GitHub 上的存储库
- en: Click on the `Compare & pull request` button
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 `Compare & pull request` 按钮
- en: You can then click on `Commits` and `Files Changed` to make sure everything
    looks okay one last time
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，单击 `Commits` 和 `Files Changed`，确保最后一次一切正常。
- en: 'Write a descriptive title that includes prefixes. pandas uses a convention
    for title prefixes. Here are some common ones along with general guidelines for
    when to use them:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 写一个包含前缀的描述性标题。pandas 使用标题前缀约定。以下是一些常见的前缀以及何时使用它们的一般指南：
- en: 'ENH: Enhancement, new functionality'
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'ENH: 增强，新功能'
- en: ''
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BUG: Bug fix'
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'BUG: 修复 bug'
- en: ''
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'DOC: Additions/updates to documentation'
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DOC: 文档添加/更新'
- en: ''
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-289
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TST: Additions/updates to tests'
  id: totrans-290
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TST: 测试添加/更新'
- en: ''
  id: totrans-291
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'BLD: Updates to the build process/scripts'
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'BLD: 构建过程/脚本的更新'
- en: ''
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'PERF: Performance improvement'
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'PERF: 性能改进'
- en: ''
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-298
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'TYP: Type annotations'
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'TYP: 类型注释'
- en: ''
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-301
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'CLN: Code cleanup'
  id: totrans-302
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CLN: 代码清理'
- en: Write a description of your changes in the `Preview Discussion` tab
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Preview Discussion` 标签中写下您的更改描述
- en: Click `Send Pull Request`.
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `Send Pull Request`。
- en: This request then goes to the repository maintainers, and they will review the
    code.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，此请求将发送给存储库维护者，他们将审查代码。
- en: '### [Updating your pull request](#id11)'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '### [更新您的拉取请求](#id11)'
- en: Based on the review you get on your pull request, you will probably need to
    make some changes to the code. You can follow the [code committing steps](#contributing-commit-code)
    again to address any feedback and update your pull request.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您在拉取请求上收到的审查，您可能需要对代码进行一些更改。您可以再次遵循 [提交代码的步骤](#contributing-commit-code) 来处理任何反馈并更新您的拉取请求。
- en: 'It is also important that updates in the pandas `main` branch are reflected
    in your pull request. To update your feature branch with changes in the pandas
    `main` branch, run:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 的 `main` 分支中的更新也很重要，它们应该反映在您的拉取请求中。要使用 pandas 的 `main` 分支中的更改更新您的特性分支，请运行：
- en: '[PRE38]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: If there are no conflicts (or they could be fixed automatically), a file with
    a default commit message will open, and you can simply save and quit this file.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有冲突（或者它们可以自动修复），将打开一个带有默认提交消息的文件，您只需保存并退出此文件即可。
- en: If there are merge conflicts, you need to solve those conflicts. See for example
    at [https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)
    for an explanation on how to do this.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在合并冲突，您需要解决这些冲突。请参阅例如 [https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/](https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/)
    了解如何做到这一点的解释。
- en: 'Once the conflicts are resolved, run:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦冲突解决完成，运行：
- en: '`git add -u` to stage any files you’ve updated;'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`git add -u` 将更新的任何文件加入到暂存区；'
- en: '`git commit` to finish the merge.'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`git commit` 完成合并。'
- en: Note
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you have uncommitted changes at the moment you want to update the branch
    with `main`, you will need to `stash` them prior to updating (see the [stash docs](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)).
    This will effectively store your changes and they can be reapplied after updating.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在想要将分支更新到`main`时有未提交的更改，您需要先`stash`这些更改（参见[stash文档](https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning)）。这将有效地存储您的更改，并且它们可以在更新后重新应用。
- en: 'After the feature branch has been update locally, you can now update your pull
    request by pushing to the branch on GitHub:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地更新特性分支后，现在可以通过在GitHub上推送到分支来更新您的拉取请求：
- en: '[PRE39]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Any `git push` will automatically update your pull request with your branch’s
    changes and restart the [Continuous Integration](contributing_codebase.html#contributing-ci)
    checks.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 任何`git push`都会自动使用您的分支更改更新您的拉取请求，并重新启动[持续集成](contributing_codebase.html#contributing-ci)检查。
- en: '### [Updating the development environment](#id12)'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '### [更新开发环境](#id12)'
- en: It is important to periodically update your local `main` branch with updates
    from the pandas `main` branch and update your development environment to reflect
    any changes to the various packages that are used during development.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 定期将本地`main`分支与pandas的`main`分支的更新同步，并更新开发环境以反映在开发过程中使用的各种包的任何更改，这一点非常重要。
- en: 'If using [mamba](contributing_environment.html#contributing-mamba), run:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用[mamba](contributing_environment.html#contributing-mamba)，请运行：
- en: '[PRE40]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'If using [pip](contributing_environment.html#contributing-pip) , do:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用[pip](contributing_environment.html#contributing-pip)，请执行：
- en: '[PRE41]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[Tips for a successful pull request](#id13)'
  id: totrans-326
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[成功拉取请求的提示](#id13)'
- en: If you have made it to the [Making a pull request](#making-a-pull-request) phase,
    one of the core contributors may take a look. Please note however that a handful
    of people are responsible for reviewing all of the contributions, which can often
    lead to bottlenecks.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经到达[发起拉取请求](#making-a-pull-request)阶段，其中一个核心贡献者可能会查看。但请注意，负责审查所有贡献的人可能只有少数几个，这往往会导致瓶颈。
- en: 'To improve the chances of your pull request being reviewed, you should:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 提高您的拉取请求被审查的机会，您应该：
- en: '**Reference an open issue** for non-trivial changes to clarify the PR’s purpose'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**引用一个开放的问题**来澄清PR的目的，以进行重要的更改'
- en: '**Ensure you have appropriate tests**. These should be the first part of any
    PR'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确保您有适当的测试**。这些应该是任何PR的第一部分'
- en: '**Keep your pull requests as simple as possible**. Larger PRs take longer to
    review'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**尽可能简化您的拉取请求**。较大的PR需要更长时间进行审查'
- en: '**Ensure that CI is in a green state**. Reviewers may not even look otherwise'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确保CI处于绿色状态**。否则，审阅者可能根本不会查看'
- en: '**Keep** [Updating your pull request](#updating-your-pull-request), either
    by request or every few days'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保持**[更新您的拉取请求](#updating-your-pull-request)，无论是按照要求还是每隔几天'
