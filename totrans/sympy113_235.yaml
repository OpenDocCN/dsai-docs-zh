- en: Control System Plots
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/control/control_plots.html](https://docs.sympy.org/latest/modules/physics/control/control_plots.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This module contains plotting functions for some of the common plots used in
    control system. Matplotlib will be required as an external dependency if the user
    wants the plots. To get only the numerical data of the plots, NumPy will be required
    as external dependency.
  prefs: []
  type: TYPE_NORMAL
- en: Pole-Zero Plot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Returns the Pole-Zero plot (also known as PZ Plot or PZ Map) of a system.
  prefs: []
  type: TYPE_NORMAL
- en: A Pole-Zero plot is a graphical representation of a system’s poles and zeros.
    It is plotted on a complex plane, with circular markers representing the system’s
    zeros and ‘x’ shaped markers representing the system’s poles.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant type systems'
  prefs: []
  type: TYPE_NORMAL
- en: The system for which the pole-zero plot is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**pole_color** : str, tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The color of the pole points on the plot. Default color is blue. The color can
    be provided as a matplotlib color string, or a 3-tuple of floats each in the 0-1
    range.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**pole_markersize** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The size of the markers used to mark the poles in the plot. Default pole markersize
    is 10.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**zero_color** : str, tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The color of the zero points on the plot. Default color is orange. The color
    can be provided as a matplotlib color string, or a 3-tuple of floats each in the
    0-1 range.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**zero_markersize** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The size of the markers used to mark the zeros in the plot. Default zero markersize
    is 7.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**grid** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will have a grid. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show_axes** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the coordinate axes will be shown. Defaults to False.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will be displayed otherwise the equivalent matplotlib `plot`
    object will be returned. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: ([`png`](../../../_downloads/5ca0513f61b118d95d28622106e6b1e4/control_plots-1.png),
    [`hires.png`](../../../_downloads/00cfad472d21b08066e8aefba3ad5603/control_plots-1.hires.png),
    [`pdf`](../../../_downloads/33391c644ccb248b4c17deb758dc2301/control_plots-1.pdf))
  prefs: []
  type: TYPE_NORMAL
- en: '![../../../_images/control_plots-1.png](../Images/07338a6ffb209cc2bbda49b3c5448004.png)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`pole_zero_numerical_data`](#sympy.physics.control.control_plots.pole_zero_numerical_data
    "sympy.physics.control.control_plots.pole_zero_numerical_data")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R730](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Pole%E2%80%93zero_plot](https://en.wikipedia.org/wiki/Pole%E2%80%93zero_plot)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Returns the numerical data of poles and zeros of the system. It is internally
    used by `pole_zero_plot` to get the data for plotting poles and zeros. Users can
    use this data to further analyse the dynamics of the system or plot using a different
    backend/plotting-module.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant'
  prefs: []
  type: TYPE_NORMAL
- en: The system for which the pole-zero data is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tuple** : (zeros, poles)'
  prefs: []
  type: TYPE_NORMAL
- en: zeros = Zeros of the system. NumPy array of complex numbers. poles = Poles of
    the system. NumPy array of complex numbers.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: When a SISO LTI system is not passed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When time delay terms are present in the system.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ValueError**'
  prefs: []
  type: TYPE_NORMAL
- en: When more than one free symbol is present in the system. The only variable in
    the transfer function should be the variable of the Laplace transform.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`pole_zero_plot`](#sympy.physics.control.control_plots.pole_zero_plot "sympy.physics.control.control_plots.pole_zero_plot")'
  prefs: []
  type: TYPE_NORMAL
- en: Bode Plot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Returns the Bode phase and magnitude plots of a continuous-time system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant type'
  prefs: []
  type: TYPE_NORMAL
- en: The LTI SISO system for which the Bode Plot is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**initial_exp** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The initial exponent of 10 of the semilog plot. Defaults to -5.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**final_exp** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The final exponent of 10 of the semilog plot. Defaults to 5.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will be displayed otherwise the equivalent matplotlib `plot`
    object will be returned. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**prec** : int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The decimal point precision for the point coordinate values. Defaults to 8.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**grid** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will have a grid. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show_axes** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the coordinate axes will be shown. Defaults to False.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**freq_unit** : string, optional'
  prefs: []
  type: TYPE_NORMAL
- en: User can choose between `'rad/sec'` (radians/second) and `'Hz'` (Hertz) as frequency
    units.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**phase_unit** : string, optional'
  prefs: []
  type: TYPE_NORMAL
- en: User can choose between `'rad'` (radians) and `'deg'` (degree) as phase units.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: ([`png`](../../../_downloads/4c8b27b48dbc47e8146b0488bb9e737d/control_plots-2.png),
    [`hires.png`](../../../_downloads/e1bd93fdfd06ae257de93cb69a31e691/control_plots-2.hires.png),
    [`pdf`](../../../_downloads/3319e145d33fb7c15b85dd93189e26e2/control_plots-2.pdf))
  prefs: []
  type: TYPE_NORMAL
- en: '![../../../_images/control_plots-2.png](../Images/acc3d59eb24f5df915dddaea86101a95.png)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`bode_magnitude_plot`](#sympy.physics.control.control_plots.bode_magnitude_plot
    "sympy.physics.control.control_plots.bode_magnitude_plot"), [`bode_phase_plot`](#sympy.physics.control.control_plots.bode_phase_plot
    "sympy.physics.control.control_plots.bode_phase_plot")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Returns the Bode magnitude plot of a continuous-time system.
  prefs: []
  type: TYPE_NORMAL
- en: See `bode_plot` for all the parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Returns the Bode phase plot of a continuous-time system.
  prefs: []
  type: TYPE_NORMAL
- en: See `bode_plot` for all the parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Returns the numerical data of the Bode magnitude plot of the system. It is internally
    used by `bode_magnitude_plot` to get the data for plotting Bode magnitude plot.
    Users can use this data to further analyse the dynamics of the system or plot
    using a different backend/plotting-module.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant'
  prefs: []
  type: TYPE_NORMAL
- en: The system for which the data is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**initial_exp** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The initial exponent of 10 of the semilog plot. Defaults to -5.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**final_exp** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The final exponent of 10 of the semilog plot. Defaults to 5.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**freq_unit** : string, optional'
  prefs: []
  type: TYPE_NORMAL
- en: User can choose between `'rad/sec'` (radians/second) and `'Hz'` (Hertz) as frequency
    units.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tuple** : (x, y)'
  prefs: []
  type: TYPE_NORMAL
- en: x = x-axis values of the Bode magnitude plot. y = y-axis values of the Bode
    magnitude plot.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: When a SISO LTI system is not passed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When time delay terms are present in the system.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ValueError**'
  prefs: []
  type: TYPE_NORMAL
- en: When more than one free symbol is present in the system. The only variable in
    the transfer function should be the variable of the Laplace transform.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When incorrect frequency units are given as input.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`bode_magnitude_plot`](#sympy.physics.control.control_plots.bode_magnitude_plot
    "sympy.physics.control.control_plots.bode_magnitude_plot"), [`bode_phase_numerical_data`](#sympy.physics.control.control_plots.bode_phase_numerical_data
    "sympy.physics.control.control_plots.bode_phase_numerical_data")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Returns the numerical data of the Bode phase plot of the system. It is internally
    used by `bode_phase_plot` to get the data for plotting Bode phase plot. Users
    can use this data to further analyse the dynamics of the system or plot using
    a different backend/plotting-module.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant'
  prefs: []
  type: TYPE_NORMAL
- en: The system for which the Bode phase plot data is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**initial_exp** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The initial exponent of 10 of the semilog plot. Defaults to -5.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**final_exp** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The final exponent of 10 of the semilog plot. Defaults to 5.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**freq_unit** : string, optional'
  prefs: []
  type: TYPE_NORMAL
- en: User can choose between `'rad/sec'` (radians/second) and ‘``’Hz’`` (Hertz) as
    frequency units.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**phase_unit** : string, optional'
  prefs: []
  type: TYPE_NORMAL
- en: User can choose between `'rad'` (radians) and `'deg'` (degree) as phase units.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**phase_unwrap** : bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Set to `True` by default.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tuple** : (x, y)'
  prefs: []
  type: TYPE_NORMAL
- en: x = x-axis values of the Bode phase plot. y = y-axis values of the Bode phase
    plot.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: When a SISO LTI system is not passed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When time delay terms are present in the system.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ValueError**'
  prefs: []
  type: TYPE_NORMAL
- en: When more than one free symbol is present in the system. The only variable in
    the transfer function should be the variable of the Laplace transform.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When incorrect frequency or phase units are given as input.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`bode_magnitude_plot`](#sympy.physics.control.control_plots.bode_magnitude_plot
    "sympy.physics.control.control_plots.bode_magnitude_plot"), [`bode_phase_numerical_data`](#sympy.physics.control.control_plots.bode_phase_numerical_data
    "sympy.physics.control.control_plots.bode_phase_numerical_data")'
  prefs: []
  type: TYPE_NORMAL
- en: Impulse-Response Plot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Returns the unit impulse response (Input is the Dirac-Delta Function) of a continuous-time
    system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant type'
  prefs: []
  type: TYPE_NORMAL
- en: The LTI SISO system for which the Impulse Response is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**color** : str, tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The color of the line. Default is Blue.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will be displayed otherwise the equivalent matplotlib `plot`
    object will be returned. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**lower_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The lower limit of the plot range. Defaults to 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**upper_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The upper limit of the plot range. Defaults to 10.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**prec** : int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The decimal point precision for the point coordinate values. Defaults to 8.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show_axes** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the coordinate axes will be shown. Defaults to False.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**grid** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will have a grid. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: ([`png`](../../../_downloads/1d71b5a40cba933a8895da0ac6775981/control_plots-3.png),
    [`hires.png`](../../../_downloads/f2590ff19c2f7b828737c6a9391934e9/control_plots-3.hires.png),
    [`pdf`](../../../_downloads/c1423271668bdc35a9c394131066e255/control_plots-3.pdf))
  prefs: []
  type: TYPE_NORMAL
- en: '![../../../_images/control_plots-3.png](../Images/89bc4932f6ec7191a31eeb146dd90395.png)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`step_response_plot`](#sympy.physics.control.control_plots.step_response_plot
    "sympy.physics.control.control_plots.step_response_plot"), [`ramp_response_plot`](#sympy.physics.control.control_plots.ramp_response_plot
    "sympy.physics.control.control_plots.ramp_response_plot")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R731](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.mathworks.com/help/control/ref/dynamicsystem.impulse.html](https://www.mathworks.com/help/control/ref/dynamicsystem.impulse.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Returns the numerical values of the points in the impulse response plot of a
    SISO continuous-time system. By default, adaptive sampling is used. If the user
    wants to instead get an uniformly sampled response, then `adaptive` kwarg should
    be passed `False` and `n` must be passed as additional kwargs. Refer to the parameters
    of class [`sympy.plotting.series.LineOver1DRangeSeries`](../../plotting.html#sympy.plotting.series.LineOver1DRangeSeries
    "sympy.plotting.series.LineOver1DRangeSeries") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant'
  prefs: []
  type: TYPE_NORMAL
- en: The system for which the impulse response data is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**prec** : int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The decimal point precision for the point coordinate values. Defaults to 8.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**lower_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The lower limit of the plot range. Defaults to 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**upper_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The upper limit of the plot range. Defaults to 10.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**kwargs :**'
  prefs: []
  type: TYPE_NORMAL
- en: Additional keyword arguments are passed to the underlying [`sympy.plotting.series.LineOver1DRangeSeries`](../../plotting.html#sympy.plotting.series.LineOver1DRangeSeries
    "sympy.plotting.series.LineOver1DRangeSeries") class.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tuple** : (x, y)'
  prefs: []
  type: TYPE_NORMAL
- en: x = Time-axis values of the points in the impulse response. NumPy array. y =
    Amplitude-axis values of the points in the impulse response. NumPy array.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: When a SISO LTI system is not passed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When time delay terms are present in the system.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ValueError**'
  prefs: []
  type: TYPE_NORMAL
- en: When more than one free symbol is present in the system. The only variable in
    the transfer function should be the variable of the Laplace transform.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When `lower_limit` parameter is less than 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`impulse_response_plot`](#sympy.physics.control.control_plots.impulse_response_plot
    "sympy.physics.control.control_plots.impulse_response_plot")'
  prefs: []
  type: TYPE_NORMAL
- en: Step-Response Plot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Returns the unit step response of a continuous-time system. It is the response
    of the system when the input signal is a step function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant type'
  prefs: []
  type: TYPE_NORMAL
- en: The LTI SISO system for which the Step Response is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**color** : str, tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The color of the line. Default is Blue.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will be displayed otherwise the equivalent matplotlib `plot`
    object will be returned. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**lower_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The lower limit of the plot range. Defaults to 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**upper_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The upper limit of the plot range. Defaults to 10.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**prec** : int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The decimal point precision for the point coordinate values. Defaults to 8.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show_axes** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the coordinate axes will be shown. Defaults to False.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**grid** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will have a grid. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: ([`png`](../../../_downloads/81aa95b80b51d0d7c7a84b33208170c1/control_plots-4.png),
    [`hires.png`](../../../_downloads/1467030e631e04d4bd9fe9607fe9278c/control_plots-4.hires.png),
    [`pdf`](../../../_downloads/0680199b4e61bc189fceb4418aa72812/control_plots-4.pdf))
  prefs: []
  type: TYPE_NORMAL
- en: '![../../../_images/control_plots-4.png](../Images/f0acdfc917c7db6d4d33a043533ff690.png)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`impulse_response_plot`](#sympy.physics.control.control_plots.impulse_response_plot
    "sympy.physics.control.control_plots.impulse_response_plot"), [`ramp_response_plot`](#sympy.physics.control.control_plots.ramp_response_plot
    "sympy.physics.control.control_plots.ramp_response_plot")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R732](#id3)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.mathworks.com/help/control/ref/lti.step.html](https://www.mathworks.com/help/control/ref/lti.step.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Returns the numerical values of the points in the step response plot of a SISO
    continuous-time system. By default, adaptive sampling is used. If the user wants
    to instead get an uniformly sampled response, then `adaptive` kwarg should be
    passed `False` and `n` must be passed as additional kwargs. Refer to the parameters
    of class [`sympy.plotting.series.LineOver1DRangeSeries`](../../plotting.html#sympy.plotting.series.LineOver1DRangeSeries
    "sympy.plotting.series.LineOver1DRangeSeries") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant'
  prefs: []
  type: TYPE_NORMAL
- en: The system for which the unit step response data is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**prec** : int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The decimal point precision for the point coordinate values. Defaults to 8.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**lower_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The lower limit of the plot range. Defaults to 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**upper_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The upper limit of the plot range. Defaults to 10.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**kwargs :**'
  prefs: []
  type: TYPE_NORMAL
- en: Additional keyword arguments are passed to the underlying [`sympy.plotting.series.LineOver1DRangeSeries`](../../plotting.html#sympy.plotting.series.LineOver1DRangeSeries
    "sympy.plotting.series.LineOver1DRangeSeries") class.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tuple** : (x, y)'
  prefs: []
  type: TYPE_NORMAL
- en: x = Time-axis values of the points in the step response. NumPy array. y = Amplitude-axis
    values of the points in the step response. NumPy array.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: When a SISO LTI system is not passed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When time delay terms are present in the system.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ValueError**'
  prefs: []
  type: TYPE_NORMAL
- en: When more than one free symbol is present in the system. The only variable in
    the transfer function should be the variable of the Laplace transform.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When `lower_limit` parameter is less than 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`step_response_plot`](#sympy.physics.control.control_plots.step_response_plot
    "sympy.physics.control.control_plots.step_response_plot")'
  prefs: []
  type: TYPE_NORMAL
- en: Ramp-Response Plot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Returns the ramp response of a continuous-time system.
  prefs: []
  type: TYPE_NORMAL
- en: Ramp function is defined as the straight line passing through origin (\(f(x)
    = mx\)). The slope of the ramp function can be varied by the user and the default
    value is 1.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant type'
  prefs: []
  type: TYPE_NORMAL
- en: The LTI SISO system for which the Ramp Response is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**slope** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The slope of the input ramp function. Defaults to 1.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**color** : str, tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The color of the line. Default is Blue.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will be displayed otherwise the equivalent matplotlib `plot`
    object will be returned. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**lower_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The lower limit of the plot range. Defaults to 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**upper_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The upper limit of the plot range. Defaults to 10.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**prec** : int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The decimal point precision for the point coordinate values. Defaults to 8.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**show_axes** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the coordinate axes will be shown. Defaults to False.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**grid** : boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If `True`, the plot will have a grid. Defaults to True.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: ([`png`](../../../_downloads/add4678d57309007b933f9eb38ef73d3/control_plots-5.png),
    [`hires.png`](../../../_downloads/1ccce7c39e8b86b1fb50cfbe2e07eb86/control_plots-5.hires.png),
    [`pdf`](../../../_downloads/14bd882358332276f28c2e3ace8343d5/control_plots-5.pdf))
  prefs: []
  type: TYPE_NORMAL
- en: '![../../../_images/control_plots-5.png](../Images/7f02ddca68b2c8c091274a0bfa846136.png)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`step_response_plot`](#sympy.physics.control.control_plots.step_response_plot
    "sympy.physics.control.control_plots.step_response_plot"), [`impulse_response_plot`](#sympy.physics.control.control_plots.impulse_response_plot
    "sympy.physics.control.control_plots.impulse_response_plot")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R733](#id4)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Ramp_function](https://en.wikipedia.org/wiki/Ramp_function)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Returns the numerical values of the points in the ramp response plot of a SISO
    continuous-time system. By default, adaptive sampling is used. If the user wants
    to instead get an uniformly sampled response, then `adaptive` kwarg should be
    passed `False` and `n` must be passed as additional kwargs. Refer to the parameters
    of class [`sympy.plotting.series.LineOver1DRangeSeries`](../../plotting.html#sympy.plotting.series.LineOver1DRangeSeries
    "sympy.plotting.series.LineOver1DRangeSeries") for more details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : SISOLinearTimeInvariant'
  prefs: []
  type: TYPE_NORMAL
- en: The system for which the ramp response data is to be computed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**slope** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The slope of the input ramp function. Defaults to 1.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**prec** : int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The decimal point precision for the point coordinate values. Defaults to 8.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**lower_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The lower limit of the plot range. Defaults to 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**upper_limit** : Number, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The upper limit of the plot range. Defaults to 10.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**kwargs :**'
  prefs: []
  type: TYPE_NORMAL
- en: Additional keyword arguments are passed to the underlying [`sympy.plotting.series.LineOver1DRangeSeries`](../../plotting.html#sympy.plotting.series.LineOver1DRangeSeries
    "sympy.plotting.series.LineOver1DRangeSeries") class.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tuple** : (x, y)'
  prefs: []
  type: TYPE_NORMAL
- en: x = Time-axis values of the points in the ramp response plot. NumPy array. y
    = Amplitude-axis values of the points in the ramp response plot. NumPy array.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: '**NotImplementedError**'
  prefs: []
  type: TYPE_NORMAL
- en: When a SISO LTI system is not passed.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When time delay terms are present in the system.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ValueError**'
  prefs: []
  type: TYPE_NORMAL
- en: When more than one free symbol is present in the system. The only variable in
    the transfer function should be the variable of the Laplace transform.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When `lower_limit` parameter is less than 0.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When `slope` is negative.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ramp_response_plot`](#sympy.physics.control.control_plots.ramp_response_plot
    "sympy.physics.control.control_plots.ramp_response_plot")'
  prefs: []
  type: TYPE_NORMAL
