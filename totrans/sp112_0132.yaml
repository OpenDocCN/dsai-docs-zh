- en: scipy.integrate.quadrature
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.quadrature.html#scipy.integrate.quadrature](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.integrate.quadrature.html#scipy.integrate.quadrature)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute a definite integral using fixed-tolerance Gaussian quadrature.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.12.0: This function is deprecated as of SciPy 1.12.0
    and will be removed in SciPy 1.15.0\. Please use [`scipy.integrate.quad`](scipy.integrate.quad.html#scipy.integrate.quad
    "scipy.integrate.quad") instead.'
  prefs: []
  type: TYPE_NORMAL
- en: Integrate *func* from *a* to *b* using Gaussian quadrature with absolute tolerance
    *tol*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**func**function'
  prefs: []
  type: TYPE_NORMAL
- en: A Python function or method to integrate.
  prefs: []
  type: TYPE_NORMAL
- en: '**a**float'
  prefs: []
  type: TYPE_NORMAL
- en: Lower limit of integration.
  prefs: []
  type: TYPE_NORMAL
- en: '**b**float'
  prefs: []
  type: TYPE_NORMAL
- en: Upper limit of integration.
  prefs: []
  type: TYPE_NORMAL
- en: '**args**tuple, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Extra arguments to pass to function.
  prefs: []
  type: TYPE_NORMAL
- en: '**tol, rtol**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Iteration stops when error between last two iterates is less than *tol* OR the
    relative change is less than *rtol*.
  prefs: []
  type: TYPE_NORMAL
- en: '**maxiter**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum order of Gaussian quadrature.
  prefs: []
  type: TYPE_NORMAL
- en: '**vec_func**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: True or False if func handles arrays as arguments (is a “vector” function).
    Default is True.
  prefs: []
  type: TYPE_NORMAL
- en: '**miniter**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Minimum order of Gaussian quadrature.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**val**float'
  prefs: []
  type: TYPE_NORMAL
- en: Gaussian quadrature approximation (within tolerance) to integral.
  prefs: []
  type: TYPE_NORMAL
- en: '**err**float'
  prefs: []
  type: TYPE_NORMAL
- en: Difference between last two estimates of the integral.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`romberg`](scipy.integrate.romberg.html#scipy.integrate.romberg "scipy.integrate.romberg")'
  prefs: []
  type: TYPE_NORMAL
- en: adaptive Romberg quadrature
  prefs: []
  type: TYPE_NORMAL
- en: '[`fixed_quad`](scipy.integrate.fixed_quad.html#scipy.integrate.fixed_quad "scipy.integrate.fixed_quad")'
  prefs: []
  type: TYPE_NORMAL
- en: fixed-order Gaussian quadrature
  prefs: []
  type: TYPE_NORMAL
- en: '[`quad`](scipy.integrate.quad.html#scipy.integrate.quad "scipy.integrate.quad")'
  prefs: []
  type: TYPE_NORMAL
- en: adaptive quadrature using QUADPACK
  prefs: []
  type: TYPE_NORMAL
- en: '[`dblquad`](scipy.integrate.dblquad.html#scipy.integrate.dblquad "scipy.integrate.dblquad")'
  prefs: []
  type: TYPE_NORMAL
- en: double integrals
  prefs: []
  type: TYPE_NORMAL
- en: '[`tplquad`](scipy.integrate.tplquad.html#scipy.integrate.tplquad "scipy.integrate.tplquad")'
  prefs: []
  type: TYPE_NORMAL
- en: triple integrals
  prefs: []
  type: TYPE_NORMAL
- en: '[`romb`](scipy.integrate.romb.html#scipy.integrate.romb "scipy.integrate.romb")'
  prefs: []
  type: TYPE_NORMAL
- en: integrator for sampled data
  prefs: []
  type: TYPE_NORMAL
- en: '[`simpson`](scipy.integrate.simpson.html#scipy.integrate.simpson "scipy.integrate.simpson")'
  prefs: []
  type: TYPE_NORMAL
- en: integrator for sampled data
  prefs: []
  type: TYPE_NORMAL
- en: '[`cumulative_trapezoid`](scipy.integrate.cumulative_trapezoid.html#scipy.integrate.cumulative_trapezoid
    "scipy.integrate.cumulative_trapezoid")'
  prefs: []
  type: TYPE_NORMAL
- en: cumulative integration for sampled data
  prefs: []
  type: TYPE_NORMAL
- en: '[`ode`](scipy.integrate.ode.html#scipy.integrate.ode "scipy.integrate.ode")'
  prefs: []
  type: TYPE_NORMAL
- en: ODE integrator
  prefs: []
  type: TYPE_NORMAL
- en: '[`odeint`](scipy.integrate.odeint.html#scipy.integrate.odeint "scipy.integrate.odeint")'
  prefs: []
  type: TYPE_NORMAL
- en: ODE integrator
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
