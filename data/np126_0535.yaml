- en: numpy.array2string
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.array2string
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.array2string.html](https://numpy.org/doc/1.26/reference/generated/numpy.array2string.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.array2string.html](https://numpy.org/doc/1.26/reference/generated/numpy.array2string.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return a string representation of an array.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回数组的字符串表示。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**ndarray'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**ndarray'
- en: Input array.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**max_line_width**int, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**max_line_width**int，可选'
- en: Inserts newlines if text is longer than *max_line_width*. Defaults to `numpy.get_printoptions()['linewidth']`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文本超过*max_line_width*就插入换行符。默认为`numpy.get_printoptions()['linewidth']`。
- en: '**precision**int or None, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**precision**int或None，可选'
- en: Floating point precision. Defaults to `numpy.get_printoptions()['precision']`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点精度。默认为`numpy.get_printoptions()['precision']`。
- en: '**suppress_small**bool, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**suppress_small**bool，可选'
- en: 'Represent numbers “very close” to zero as zero; default is False. Very close
    is defined by precision: if the precision is 8, e.g., numbers smaller (in absolute
    value) than 5e-9 are represented as zero. Defaults to `numpy.get_printoptions()[''suppress'']`.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 将接近零的数字表示为零；默认为False。接近的定义取决于精度：例如，如果精度为8，小于5e-9（绝对值）的数字将表示为零。默认为`numpy.get_printoptions()['suppress']`。
- en: '**separator**str, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**separator**str，可选'
- en: Inserted between elements.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在元素之间插入。
- en: '**prefix**str, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**prefix**str，可选'
- en: '**suffix**str, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**suffix**str，可选'
- en: 'The length of the prefix and suffix strings are used to respectively align
    and wrap the output. An array is typically printed as:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 前缀和后缀字符串的长度分别用于对齐和换行输出。数组通常打印为：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The output is left-padded by the length of the prefix string, and wrapping is
    forced at the column `max_line_width - len(suffix)`. It should be noted that the
    content of prefix and suffix strings are not included in the output.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 输出左边填充了前缀字符串的长度，并且在列`max_line_width - len(suffix)`处强制换行。应注意前缀和后缀字符串的内容不包括在输出中。
- en: '**style**_NoValue, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**style**_NoValue，可选'
- en: Has no effect, do not use.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 没有效果，不要使用。
- en: Deprecated since version 1.14.0.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本1.14.0起废弃。
- en: '**formatter**dict of callables, optional'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**formatter**可调用的字典，可选'
- en: 'If not None, the keys should indicate the type(s) that the respective formatting
    function applies to. Callables should return a string. Types that are not specified
    (by their corresponding keys) are handled by the default formatters. Individual
    types for which a formatter can be set are:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不是None，则键应指示相应格式化函数适用于哪些类型。可调用函数应返回字符串。通过默认格式化程序处理未指定（通过相应键）的类型。可以设置格式化程序的独立类型包括：
- en: ‘bool’
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘bool’
- en: ‘int’
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘int’
- en: '‘timedelta’ : a [`numpy.timedelta64`](../arrays.scalars.html#numpy.timedelta64
    "numpy.timedelta64")'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘timedelta’：一个[`numpy.timedelta64`](../arrays.scalars.html#numpy.timedelta64
    "numpy.timedelta64")
- en: '‘datetime’ : a [`numpy.datetime64`](../arrays.scalars.html#numpy.datetime64
    "numpy.datetime64")'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘datetime’：一个[`numpy.datetime64`](../arrays.scalars.html#numpy.datetime64 "numpy.datetime64")
- en: ‘float’
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘float’
- en: '‘longfloat’ : 128-bit floats'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘longfloat’：128位浮点数
- en: ‘complexfloat’
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘complexfloat’
- en: '‘longcomplexfloat’ : composed of two 128-bit floats'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘longcomplexfloat’：由两个128位浮点数组成
- en: '‘void’ : type [`numpy.void`](../arrays.scalars.html#numpy.void "numpy.void")'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘void’：类型[`numpy.void`](../arrays.scalars.html#numpy.void "numpy.void")
- en: '‘numpystr’ : types [`numpy.bytes_`](../arrays.scalars.html#numpy.bytes_ "numpy.bytes_")
    and [`numpy.str_`](../arrays.scalars.html#numpy.str_ "numpy.str_")'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘numpystr’：类型[`numpy.bytes_`](../arrays.scalars.html#numpy.bytes_ "numpy.bytes_")和[`numpy.str_`](../arrays.scalars.html#numpy.str_
    "numpy.str_")
- en: 'Other keys that can be used to set a group of types at once are:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 可以用来一次设置一组类型的其他键有：
- en: '‘all’ : sets all types'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘all’：设置所有类型
- en: '‘int_kind’ : sets ‘int’'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘int_kind’：设置为‘int’
- en: '‘float_kind’ : sets ‘float’ and ‘longfloat’'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘float_kind’：设置为‘float’和‘longfloat’
- en: '‘complex_kind’ : sets ‘complexfloat’ and ‘longcomplexfloat’'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘complex_kind’：设置为‘complexfloat’和‘longcomplexfloat’
- en: '‘str_kind’ : sets ‘numpystr’'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘str_kind’：设置为‘numpystr’
- en: '**threshold**int, optional'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**threshold**int，可选'
- en: Total number of array elements which trigger summarization rather than full
    repr. Defaults to `numpy.get_printoptions()['threshold']`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 数组元素的总数，触发摘要而不是完整repr。默认为`numpy.get_printoptions()['threshold']`。
- en: '**edgeitems**int, optional'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**edgeitems**int，可选'
- en: Number of array items in summary at beginning and end of each dimension. Defaults
    to `numpy.get_printoptions()['edgeitems']`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 每个维度初始和结尾的摘要中的数组项数。默认为`numpy.get_printoptions()['edgeitems']`。
- en: '**sign**string, either ‘-’, ‘+’, or ‘ ‘, optional'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**sign**string，可以是‘-’，‘+’或‘ ’，可选'
- en: Controls printing of the sign of floating-point types. If ‘+’, always print
    the sign of positive values. If ‘ ‘, always prints a space (whitespace character)
    in the sign position of positive values. If ‘-’, omit the sign character of positive
    values. Defaults to `numpy.get_printoptions()['sign']`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 控制浮点类型的符号打印。如果为‘+’，则始终打印正值的符号。如果为‘ ’，则始终在正值的符号位置打印一个空格（空白字符）。如果为‘-’，则省略正值的符号字符。默认为`numpy.get_printoptions()['sign']`。
- en: '**floatmode**str, optional'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**floatmode**字符串，可选'
- en: 'Controls the interpretation of the *precision* option for floating-point types.
    Defaults to `numpy.get_printoptions()[''floatmode'']`. Can take the following
    values:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 控制浮点类型的*precision*选项的解释。默认为`numpy.get_printoptions()['floatmode']`。可以采用以下值：
- en: '‘fixed’: Always print exactly *precision* fractional digits, even if this would
    print more or fewer digits than necessary to specify the value uniquely.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘fixed’: 总是精确打印*precision*个小数位数，即使这将打印多或少位数比唯一指定值所需的位数。'
- en: '‘unique’: Print the minimum number of fractional digits necessary to represent
    each value uniquely. Different elements may have a different number of digits.
    The value of the *precision* option is ignored.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘unique’: 打印表示每个值独特性所需的最小小数位数。不同元素可能具有不同数量的数字。*precision*选项的值被忽略。'
- en: '‘maxprec’: Print at most *precision* fractional digits, but if an element can
    be uniquely represented with fewer digits only print it with that many.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘maxprec’: 最多打印*precision*个小数位数，但是如果元素可以用更少的位数唯一表示，则只对其使用少量位数。'
- en: '‘maxprec_equal’: Print at most *precision* fractional digits, but if every
    element in the array can be uniquely represented with an equal number of fewer
    digits, use that many digits for all elements.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '‘maxprec_equal’: 最多打印*precision*个小数位数，但是如果数组中的每个元素可以用更少的位数唯一表示，则对所有元素都使用该数量的位数。'
- en: '**legacy**string or *False*, optional'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**legacy**字符串或*False*，可选'
- en: If set to the string *‘1.13’* enables 1.13 legacy printing mode. This approximates
    numpy 1.13 print output by including a space in the sign position of floats and
    different behavior for 0d arrays. If set to *False*, disables legacy mode. Unrecognized
    strings will be ignored with a warning for forward compatibility.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设置为字符串*‘1.13’*，则启用1.13版遗留打印模式。通过在浮点数的符号位置包括一个空格以及处理0d数组的不同行为，来近似numpy 1.13版的打印输出。如果设置为*False*，则禁用遗留模式。无法识别的字符串将因前向兼容性而受到警告而被忽略。
- en: New in version 1.14.0.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.14.0版中新增。
- en: 'Returns:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**array_str**str'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**array_str**str'
- en: String representation of the array.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 数组的字符串表示。
- en: 'Raises:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: TypeError
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: TypeError
- en: if a callable in *formatter* does not return a string.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*formatter*中的可调用对象不返回字符串。
- en: See also
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`array_str`](numpy.array_str.html#numpy.array_str "numpy.array_str"), [`array_repr`](numpy.array_repr.html#numpy.array_repr
    "numpy.array_repr"), [`set_printoptions`](numpy.set_printoptions.html#numpy.set_printoptions
    "numpy.set_printoptions"), [`get_printoptions`](numpy.get_printoptions.html#numpy.get_printoptions
    "numpy.get_printoptions")'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[`array_str`](numpy.array_str.html#numpy.array_str "numpy.array_str"), [`array_repr`](numpy.array_repr.html#numpy.array_repr
    "numpy.array_repr"), [`set_printoptions`](numpy.set_printoptions.html#numpy.set_printoptions
    "numpy.set_printoptions"), [`get_printoptions`](numpy.get_printoptions.html#numpy.get_printoptions
    "numpy.get_printoptions")'
- en: Notes
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If a formatter is specified for a certain type, the *precision* keyword is ignored
    for that type.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为某种类型指定了格式化程序，则该类型的*precision*关键字将被忽略。
- en: This is a very flexible function; [`array_repr`](numpy.array_repr.html#numpy.array_repr
    "numpy.array_repr") and [`array_str`](numpy.array_str.html#numpy.array_str "numpy.array_str")
    are using [`array2string`](#numpy.array2string "numpy.array2string") internally
    so keywords with the same name should work identically in all three functions.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常灵活的函数；[`array_repr`](numpy.array_repr.html#numpy.array_repr "numpy.array_repr")
    和 [`array_str`](numpy.array_str.html#numpy.array_str "numpy.array_str") 在内部使用
    [`array2string`](#numpy.array2string "numpy.array2string")，因此具有相同名称的关键字在这三个函数中应该以相同的方式工作。
- en: Examples
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
