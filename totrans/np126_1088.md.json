["```py\n$ conda env create -f environment.yml  # `mamba` works too for this command\n$ conda activate numpy-dev \n```", "```py\n$ virtualenv numpy-dev \n```", "```py\n$ python -m pip install -r test_requirements.txt\n$ python -m pip install asv # only for running benchmarks \n```", "```py\n$ spin test -v\n$ spin test numpy/random  # to run the tests in a specific module\n$ spin test -v -t numpy/core/tests/test_nditer.py::test_iter_c_order \n```", "```py\n$ spin test -t numpy/tests/test_scripts.py::test_f2py -- --pdb \n```", "```py\n$ spin test -v -t numpy/core/tests/test_multiarray.py -- -k \"MatMul and not vector\" \n```", "```py\n>>> np.test()  \n>>> np.test('full')   # Also run tests marked as slow\n>>> np.test('full', verbose=2)   # Additionally print test name/file\n\nAn example of a successful test :\n``4686 passed, 362 skipped, 9 xfailed, 5 warnings in 213.99 seconds`` \n```", "```py\n$ python -c \"import numpy as np; np.test()\" \n```", "```py\n$ python path_to_testfile/test_file.py \n```", "```py\n$ tox -e py39 \n```", "```py\n$ python -m pip install -r linter_requirements.txt \n```", "```py\n$ python tools/linter.py \n```", "```py\n$ python tools/linter.py --branch main \n```", "```py\n$ python tools/linter.py --branch main\n./numpy/core/tests/test_scalarmath.py:34:5: E303 too many blank lines (3)\n1       E303 too many blank lines (3) \n```", "```py\n$ git clean -xdf \n```", "```py\n$ git checkout .\n$ git reset --hard \n```", "```py\n(gdb) python\n>import sys\n>print(sys.version_info)\n>end\nsys.version_info(major=3, minor=7, micro=0, releaselevel='final', serial=0) \n```", "```py\nimport numpy as np\nx = np.arange(5)\nnp.empty_like(x) \n```", "```py\n$ spin gdb mytest.py \n```", "```py\n(gdb) break array_empty_like\n(gdb) run \n```", "```py\nadd-auto-load-safe-path ~/.pyenv \n```", "```py\n$ conda env create -f environment.yml  # `mamba` works too for this command\n$ conda activate numpy-dev \n```", "```py\n$ virtualenv numpy-dev \n```", "```py\n$ python -m pip install -r test_requirements.txt\n$ python -m pip install asv # only for running benchmarks \n```", "```py\n$ spin test -v\n$ spin test numpy/random  # to run the tests in a specific module\n$ spin test -v -t numpy/core/tests/test_nditer.py::test_iter_c_order \n```", "```py\n$ spin test -t numpy/tests/test_scripts.py::test_f2py -- --pdb \n```", "```py\n$ spin test -v -t numpy/core/tests/test_multiarray.py -- -k \"MatMul and not vector\" \n```", "```py\n>>> np.test()  \n>>> np.test('full')   # Also run tests marked as slow\n>>> np.test('full', verbose=2)   # Additionally print test name/file\n\nAn example of a successful test :\n``4686 passed, 362 skipped, 9 xfailed, 5 warnings in 213.99 seconds`` \n```", "```py\n$ python -c \"import numpy as np; np.test()\" \n```", "```py\n$ python path_to_testfile/test_file.py \n```", "```py\n$ tox -e py39 \n```", "```py\n$ python -m pip install -r linter_requirements.txt \n```", "```py\n$ python tools/linter.py \n```", "```py\n$ python tools/linter.py --branch main \n```", "```py\n$ python tools/linter.py --branch main\n./numpy/core/tests/test_scalarmath.py:34:5: E303 too many blank lines (3)\n1       E303 too many blank lines (3) \n```", "```py\n$ git clean -xdf \n```", "```py\n$ git checkout .\n$ git reset --hard \n```", "```py\n(gdb) python\n>import sys\n>print(sys.version_info)\n>end\nsys.version_info(major=3, minor=7, micro=0, releaselevel='final', serial=0) \n```", "```py\nimport numpy as np\nx = np.arange(5)\nnp.empty_like(x) \n```", "```py\n$ spin gdb mytest.py \n```", "```py\n(gdb) break array_empty_like\n(gdb) run \n```", "```py\nadd-auto-load-safe-path ~/.pyenv \n```"]