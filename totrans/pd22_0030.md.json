["```py\nIn [1]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [2]: subset = df[\"foo\"]\n\nIn [3]: subset.iloc[0] = 100\n\nIn [4]: df\nOut[4]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [5]: pd.options.mode.copy_on_write = True\n\nIn [6]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [7]: subset = df[\"foo\"]\n\nIn [8]: subset.iloc[0] = 100\n\nIn [9]: df\nOut[9]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6 \n```", "```py\npd.options.mode.copy_on_write = \"warn\" \n```", "```py\nIn [10]: ser = pd.Series([1, 2, 3])\n\nIn [11]: ser.to_numpy()\nOut[11]: array([1, 2, 3]) \n```", "```py\nIn [12]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [13]: subset = df[\"foo\"]\n\nIn [14]: subset.iloc[0] = 100\n\nIn [15]: df\nOut[15]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6 \n```", "```py\nIn [16]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [17]: df[\"foo\"].replace(1, 5, inplace=True)\n\nIn [18]: df\nOut[18]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6 \n```", "```py\nIn [19]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [20]: df.replace({\"foo\": {1: 5}}, inplace=True)\n\nIn [21]: df\nOut[21]: \n foo  bar\n0    5    4\n1    2    5\n2    3    6 \n```", "```py\nIn [22]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [23]: df[\"foo\"] = df[\"foo\"].replace(1, 5)\n\nIn [24]: df\nOut[24]: \n foo  bar\n0    5    4\n1    2    5\n2    3    6 \n```", "```py\nIn [25]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [26]: df.iloc[0, 0] = 100\n\nIn [27]: df\nOut[27]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [28]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [29]: df2 = df.reset_index(drop=True)\n\nIn [30]: df2.iloc[0, 0] = 100\n\nIn [31]: df\nOut[31]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6\n\nIn [32]: df2\nOut[32]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [33]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [34]: df = df.reset_index(drop=True)\n\nIn [35]: df.iloc[0, 0] = 100\n\nIn [36]: df\nOut[36]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [37]: with pd.option_context(\"mode.copy_on_write\", False):\n ....:    df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n ....:    view = df[:]\n ....:    df.iloc[0, 0] = 100\n ....: \n\nIn [38]: df\nOut[38]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6\n\nIn [39]: view\nOut[39]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [40]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [41]: view = df[:]\n\nIn [42]: df.iloc[0, 0] = 100\n\nIn [43]: df\nOut[43]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6\n\nIn [44]: view\nOut[44]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6 \n```", "```py\nIn [45]: with pd.option_context(\"mode.copy_on_write\", False):\n ....:    df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n ....:    df[\"foo\"][df[\"bar\"] > 5] = 100\n ....:    df\n ....: \n```", "```py\nIn [46]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [47]: df[\"foo\"][df[\"bar\"] > 5] = 100 \n```", "```py\nIn [48]: df.loc[df[\"bar\"] > 5, \"foo\"] = 100 \n```", "```py\nIn [49]: df = pd.DataFrame({\"a\": [1, 2], \"b\": [1.5, 2.5]})\n\nIn [50]: df.to_numpy()\nOut[50]: \narray([[1\\. , 1.5],\n [2\\. , 2.5]]) \n```", "```py\nIn [51]: df = pd.DataFrame({\"a\": [1, 2], \"b\": [3, 4]})\n\nIn [52]: df.to_numpy()\nOut[52]: \narray([[1, 3],\n [2, 4]]) \n```", "```py\nIn [53]: arr = df.to_numpy()\n\nIn [54]: arr[0, 0] = 100\n---------------------------------------------------------------------------\nValueError  Traceback (most recent call last)\nCell In[54], line 1\n----> 1 arr[0, 0] = 100\n\nValueError: assignment destination is read-only \n```", "```py\nIn [55]: arr = df.to_numpy()\n\nIn [56]: arr.flags.writeable = True\n\nIn [57]: arr[0, 0] = 100\n\nIn [58]: arr\nOut[58]: \narray([[100,   3],\n [  2,   4]]) \n```", "```py\nIn [59]: df = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n\nIn [60]: df2 = df.reset_index(drop=True)\n\nIn [61]: df2.iloc[0, 0] = 100 \n```", "```py\nIn [62]: df = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n\nIn [63]: df = df.reset_index(drop=True)\n\nIn [64]: df.iloc[0, 0] = 100 \n```", "```py\nIn [65]: pd.set_option(\"mode.copy_on_write\", True)\n\nIn [66]: pd.options.mode.copy_on_write = True \n```", "```py\nIn [1]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [2]: subset = df[\"foo\"]\n\nIn [3]: subset.iloc[0] = 100\n\nIn [4]: df\nOut[4]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [5]: pd.options.mode.copy_on_write = True\n\nIn [6]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [7]: subset = df[\"foo\"]\n\nIn [8]: subset.iloc[0] = 100\n\nIn [9]: df\nOut[9]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6 \n```", "```py\npd.options.mode.copy_on_write = \"warn\" \n```", "```py\nIn [10]: ser = pd.Series([1, 2, 3])\n\nIn [11]: ser.to_numpy()\nOut[11]: array([1, 2, 3]) \n```", "```py\nIn [12]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [13]: subset = df[\"foo\"]\n\nIn [14]: subset.iloc[0] = 100\n\nIn [15]: df\nOut[15]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6 \n```", "```py\nIn [16]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [17]: df[\"foo\"].replace(1, 5, inplace=True)\n\nIn [18]: df\nOut[18]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6 \n```", "```py\nIn [19]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [20]: df.replace({\"foo\": {1: 5}}, inplace=True)\n\nIn [21]: df\nOut[21]: \n foo  bar\n0    5    4\n1    2    5\n2    3    6 \n```", "```py\nIn [22]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [23]: df[\"foo\"] = df[\"foo\"].replace(1, 5)\n\nIn [24]: df\nOut[24]: \n foo  bar\n0    5    4\n1    2    5\n2    3    6 \n```", "```py\nIn [25]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [26]: df.iloc[0, 0] = 100\n\nIn [27]: df\nOut[27]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [28]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [29]: df2 = df.reset_index(drop=True)\n\nIn [30]: df2.iloc[0, 0] = 100\n\nIn [31]: df\nOut[31]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6\n\nIn [32]: df2\nOut[32]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [33]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [34]: df = df.reset_index(drop=True)\n\nIn [35]: df.iloc[0, 0] = 100\n\nIn [36]: df\nOut[36]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [37]: with pd.option_context(\"mode.copy_on_write\", False):\n ....:    df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n ....:    view = df[:]\n ....:    df.iloc[0, 0] = 100\n ....: \n\nIn [38]: df\nOut[38]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6\n\nIn [39]: view\nOut[39]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6 \n```", "```py\nIn [40]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [41]: view = df[:]\n\nIn [42]: df.iloc[0, 0] = 100\n\nIn [43]: df\nOut[43]: \n foo  bar\n0  100    4\n1    2    5\n2    3    6\n\nIn [44]: view\nOut[44]: \n foo  bar\n0    1    4\n1    2    5\n2    3    6 \n```", "```py\nIn [45]: with pd.option_context(\"mode.copy_on_write\", False):\n ....:    df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n ....:    df[\"foo\"][df[\"bar\"] > 5] = 100\n ....:    df\n ....: \n```", "```py\nIn [46]: df = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [4, 5, 6]})\n\nIn [47]: df[\"foo\"][df[\"bar\"] > 5] = 100 \n```", "```py\nIn [48]: df.loc[df[\"bar\"] > 5, \"foo\"] = 100 \n```", "```py\nIn [49]: df = pd.DataFrame({\"a\": [1, 2], \"b\": [1.5, 2.5]})\n\nIn [50]: df.to_numpy()\nOut[50]: \narray([[1\\. , 1.5],\n [2\\. , 2.5]]) \n```", "```py\nIn [51]: df = pd.DataFrame({\"a\": [1, 2], \"b\": [3, 4]})\n\nIn [52]: df.to_numpy()\nOut[52]: \narray([[1, 3],\n [2, 4]]) \n```", "```py\nIn [53]: arr = df.to_numpy()\n\nIn [54]: arr[0, 0] = 100\n---------------------------------------------------------------------------\nValueError  Traceback (most recent call last)\nCell In[54], line 1\n----> 1 arr[0, 0] = 100\n\nValueError: assignment destination is read-only \n```", "```py\nIn [55]: arr = df.to_numpy()\n\nIn [56]: arr.flags.writeable = True\n\nIn [57]: arr[0, 0] = 100\n\nIn [58]: arr\nOut[58]: \narray([[100,   3],\n [  2,   4]]) \n```", "```py\nIn [59]: df = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n\nIn [60]: df2 = df.reset_index(drop=True)\n\nIn [61]: df2.iloc[0, 0] = 100 \n```", "```py\nIn [62]: df = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n\nIn [63]: df = df.reset_index(drop=True)\n\nIn [64]: df.iloc[0, 0] = 100 \n```", "```py\nIn [65]: pd.set_option(\"mode.copy_on_write\", True)\n\nIn [66]: pd.options.mode.copy_on_write = True \n```"]