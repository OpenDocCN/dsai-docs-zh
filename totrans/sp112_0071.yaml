- en: scipy.fft.fht
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fht.html#scipy.fft.fht](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fft.fht.html#scipy.fft.fht)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the fast Hankel transform.
  prefs: []
  type: TYPE_NORMAL
- en: Computes the discrete Hankel transform of a logarithmically spaced periodic
    sequence using the FFTLog algorithm [[1]](#r25ba8b4d7f66-1), [[2]](#r25ba8b4d7f66-2).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like (…, n)'
  prefs: []
  type: TYPE_NORMAL
- en: Real periodic input array, uniformly logarithmically spaced. For multidimensional
    input, the transform is performed over the last axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**dln**float'
  prefs: []
  type: TYPE_NORMAL
- en: Uniform logarithmic spacing of the input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**mu**float'
  prefs: []
  type: TYPE_NORMAL
- en: Order of the Hankel transform, any positive or negative real number.
  prefs: []
  type: TYPE_NORMAL
- en: '**offset**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Offset of the uniform logarithmic spacing of the output array.
  prefs: []
  type: TYPE_NORMAL
- en: '**bias**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Exponent of power law bias, any positive or negative real number.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**array_like (…, n)'
  prefs: []
  type: TYPE_NORMAL
- en: The transformed output array, which is real, periodic, uniformly logarithmically
    spaced, and of the same shape as the input array.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`ifht`](scipy.fft.ifht.html#scipy.fft.ifht "scipy.fft.ifht")'
  prefs: []
  type: TYPE_NORMAL
- en: The inverse of [`fht`](#scipy.fft.fht "scipy.fft.fht").
  prefs: []
  type: TYPE_NORMAL
- en: '[`fhtoffset`](scipy.fft.fhtoffset.html#scipy.fft.fhtoffset "scipy.fft.fhtoffset")'
  prefs: []
  type: TYPE_NORMAL
- en: Return an optimal offset for [`fht`](#scipy.fft.fht "scipy.fft.fht").
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This function computes a discrete version of the Hankel transform
  prefs: []
  type: TYPE_NORMAL
- en: \[A(k) = \int_{0}^{\infty} \! a(r) \, J_\mu(kr) \, k \, dr \;,\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(J_\mu\) is the Bessel function of order \(\mu\). The index \(\mu\) may
    be any real number, positive or negative.
  prefs: []
  type: TYPE_NORMAL
- en: The input array *a* is a periodic sequence of length \(n\), uniformly logarithmically
    spaced with spacing *dln*,
  prefs: []
  type: TYPE_NORMAL
- en: \[a_j = a(r_j) \;, \quad r_j = r_c \exp[(j-j_c) \, \mathtt{dln}]\]
  prefs: []
  type: TYPE_NORMAL
- en: centred about the point \(r_c\). Note that the central index \(j_c = (n-1)/2\)
    is half-integral if \(n\) is even, so that \(r_c\) falls between two input elements.
    Similarly, the output array *A* is a periodic sequence of length \(n\), also uniformly
    logarithmically spaced with spacing *dln*
  prefs: []
  type: TYPE_NORMAL
- en: \[A_j = A(k_j) \;, \quad k_j = k_c \exp[(j-j_c) \, \mathtt{dln}]\]
  prefs: []
  type: TYPE_NORMAL
- en: centred about the point \(k_c\).
  prefs: []
  type: TYPE_NORMAL
- en: The centre points \(r_c\) and \(k_c\) of the periodic intervals may be chosen
    arbitrarily, but it would be usual to choose the product \(k_c r_c = k_j r_{n-1-j}
    = k_{n-1-j} r_j\) to be unity. This can be changed using the *offset* parameter,
    which controls the logarithmic offset \(\log(k_c) = \mathtt{offset} - \log(r_c)\)
    of the output array. Choosing an optimal value for *offset* may reduce ringing
    of the discrete Hankel transform.
  prefs: []
  type: TYPE_NORMAL
- en: If the *bias* parameter is nonzero, this function computes a discrete version
    of the biased Hankel transform
  prefs: []
  type: TYPE_NORMAL
- en: \[A(k) = \int_{0}^{\infty} \! a_q(r) \, (kr)^q \, J_\mu(kr) \, k \, dr\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(q\) is the value of *bias*, and a power law bias \(a_q(r) = a(r) \,
    (kr)^{-q}\) is applied to the input sequence. Biasing the transform can help approximate
    the continuous transform of \(a(r)\) if there is a value \(q\) such that \(a_q(r)\)
    is close to a periodic sequence, in which case the resulting \(A(k)\) will be
    close to the continuous transform.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Talman J. D., 1978, J. Comp. Phys., 29, 35
  prefs: []
  type: TYPE_NORMAL
- en: '[2] ([1](#id2),[2](#id5))'
  prefs: []
  type: TYPE_NORMAL
- en: Hamilton A. J. S., 2000, MNRAS, 312, 257 (astro-ph/9905191)
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: This example is the adapted version of `fftlogtest.f` which is provided in [[2]](#r25ba8b4d7f66-2).
    It evaluates the integral
  prefs: []
  type: TYPE_NORMAL
- en: \[\int^\infty_0 r^{\mu+1} \exp(-r^2/2) J_\mu(k, r) k dr = k^{\mu+1} \exp(-k^2/2)
    .\]
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Parameters for the transform.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Define the analytical function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the function at `r` and compute the corresponding values at `k` using
    FFTLog.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: For this example we can actually compute the analytical response (which in this
    case is the same as the input function) for comparison and compute the relative
    error.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Plot the result.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-fft-fht-1.png](../Images/da99745165fbfd9cca1ab173627cd139.png)'
  prefs: []
  type: TYPE_IMG
