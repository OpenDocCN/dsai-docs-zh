["```py\nobject.__array_interface__\n```", "```py\nobject.__array_struct__\n```", "```py\ntypedef struct {\n  int two;              /* contains the integer 2 -- simple sanity check */\n  int nd;               /* number of dimensions */\n  char typekind;        /* kind in array --- character code of typestr */\n  int itemsize;         /* size of each element */\n  int flags;            /* flags indicating how the data should be interpreted */\n                        /*   must set ARR_HAS_DESCR bit to validate descr */\n  Py_intptr_t *shape;   /* A length-nd array of shape information */\n  Py_intptr_t *strides; /* A length-nd array of stride information */\n  void *data;           /* A pointer to the first element of the array */\n  PyObject *descr;      /* NULL or data-description (same as descr key\n                                of __array_interface__) -- must set ARR_HAS_DESCR\n                                flag or this will be ignored. */\n} PyArrayInterface; \n```", "```py\n> NPY_ARR_HAS_DESCR\n> ```", "```py\n* Float data\n    typestr == '>f4'\n    descr == [('','>f4')]\n\n* Complex double\n    typestr == '>c8'\n    descr == [('real','>f4'), ('imag','>f4')]\n\n* RGB Pixel data\n    typestr == '|V3'\n    descr == [('r','|u1'), ('g','|u1'), ('b','|u1')]\n\n* Mixed endian (weird but could happen).\n    typestr == '|V8' (or '>u8')\n    descr == [('big','>i4'), ('little','<i4')]\n\n* Nested structure\n    struct {\n        int ival;\n        struct {\n            unsigned short sval;\n            unsigned char bval;\n            unsigned char cval;\n        } sub;\n    }\n    typestr == '|V8' (or '<u8' if you want)\n    descr == [('ival','<i4'), ('sub', [('sval','<u2'), ('bval','|u1'), ('cval','|u1') ]) ]\n\n* Nested array\n    struct {\n        int ival;\n        double data[16*4];\n    }\n    typestr == '|V516'\n    descr == [('ival','>i4'), ('data','>f8',(16,4))]\n\n* Padded structure\n    struct {\n        int ival;\n        double dval;\n    }\n    typestr == '|V16'\n    descr == [('ival','>i4'),('','|V4'),('dval','>f8')] \n```", "```py\nobject.__array_interface__\n```", "```py\nobject.__array_struct__\n```", "```py\ntypedef struct {\n  int two;              /* contains the integer 2 -- simple sanity check */\n  int nd;               /* number of dimensions */\n  char typekind;        /* kind in array --- character code of typestr */\n  int itemsize;         /* size of each element */\n  int flags;            /* flags indicating how the data should be interpreted */\n                        /*   must set ARR_HAS_DESCR bit to validate descr */\n  Py_intptr_t *shape;   /* A length-nd array of shape information */\n  Py_intptr_t *strides; /* A length-nd array of stride information */\n  void *data;           /* A pointer to the first element of the array */\n  PyObject *descr;      /* NULL or data-description (same as descr key\n                                of __array_interface__) -- must set ARR_HAS_DESCR\n                                flag or this will be ignored. */\n} PyArrayInterface; \n```", "```py\n> NPY_ARR_HAS_DESCR\n> ```", "```py\n* Float data\n    typestr == '>f4'\n    descr == [('','>f4')]\n\n* Complex double\n    typestr == '>c8'\n    descr == [('real','>f4'), ('imag','>f4')]\n\n* RGB Pixel data\n    typestr == '|V3'\n    descr == [('r','|u1'), ('g','|u1'), ('b','|u1')]\n\n* Mixed endian (weird but could happen).\n    typestr == '|V8' (or '>u8')\n    descr == [('big','>i4'), ('little','<i4')]\n\n* Nested structure\n    struct {\n        int ival;\n        struct {\n            unsigned short sval;\n            unsigned char bval;\n            unsigned char cval;\n        } sub;\n    }\n    typestr == '|V8' (or '<u8' if you want)\n    descr == [('ival','<i4'), ('sub', [('sval','<u2'), ('bval','|u1'), ('cval','|u1') ]) ]\n\n* Nested array\n    struct {\n        int ival;\n        double data[16*4];\n    }\n    typestr == '|V516'\n    descr == [('ival','>i4'), ('data','>f8',(16,4))]\n\n* Padded structure\n    struct {\n        int ival;\n        double dval;\n    }\n    typestr == '|V16'\n    descr == [('ival','>i4'),('','|V4'),('dval','>f8')] \n```"]