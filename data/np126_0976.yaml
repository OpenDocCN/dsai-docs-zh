- en: Sorting, searching, and counting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sorting, searching, and counting
- en: 原文：[https://numpy.org/doc/1.26/reference/routines.sort.html](https://numpy.org/doc/1.26/reference/routines.sort.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/routines.sort.html](https://numpy.org/doc/1.26/reference/routines.sort.html)
- en: Sorting
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sorting
- en: '| [`sort`](generated/numpy.sort.html#numpy.sort "numpy.sort")(a[, axis, kind, order])
    | Return a sorted copy of an array. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| [`sort`](generated/numpy.sort.html#numpy.sort "numpy.sort")(a[, axis, kind, order])
    | 返回数组的排序副本。 |'
- en: '| [`lexsort`](generated/numpy.lexsort.html#numpy.lexsort "numpy.lexsort")(keys[, axis])
    | Perform an indirect stable sort using a sequence of keys. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`lexsort`](generated/numpy.lexsort.html#numpy.lexsort "numpy.lexsort")(keys[, axis])
    | 使用一系列键执行间接稳定排序。 |'
- en: '| [`argsort`](generated/numpy.argsort.html#numpy.argsort "numpy.argsort")(a[, axis, kind, order])
    | Returns the indices that would sort an array. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`argsort`](generated/numpy.argsort.html#numpy.argsort "numpy.argsort")(a[, axis, kind, order])
    | 返回对数组进行排序的索引。 |'
- en: '| [`ndarray.sort`](generated/numpy.ndarray.sort.html#numpy.ndarray.sort "numpy.ndarray.sort")([axis, kind, order])
    | Sort an array in-place. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`ndarray.sort`](generated/numpy.ndarray.sort.html#numpy.ndarray.sort "numpy.ndarray.sort")([axis, kind, order])
    | 原地对数组进行排序。 |'
- en: '| [`sort_complex`](generated/numpy.sort_complex.html#numpy.sort_complex "numpy.sort_complex")(a)
    | Sort a complex array using the real part first, then the imaginary part. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`sort_complex`](generated/numpy.sort_complex.html#numpy.sort_complex "numpy.sort_complex")(a)
    | 使用实部优先，然后虚部对复数数组进行排序。 |'
- en: '| [`partition`](generated/numpy.partition.html#numpy.partition "numpy.partition")(a, kth[, axis, kind, order])
    | Return a partitioned copy of an array. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`partition`](generated/numpy.partition.html#numpy.partition "numpy.partition")(a, kth[, axis, kind, order])
    | 返回数组的分区副本。 |'
- en: '| [`argpartition`](generated/numpy.argpartition.html#numpy.argpartition "numpy.argpartition")(a, kth[, axis, kind, order])
    | Perform an indirect partition along the given axis using the algorithm specified
    by the *kind* keyword. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`argpartition`](generated/numpy.argpartition.html#numpy.argpartition "numpy.argpartition")(a, kth[, axis, kind, order])
    | 使用 *kind* 关键字指定的算法沿给定轴执行间接分区。 |'
- en: Searching
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Searching
- en: '| [`argmax`](generated/numpy.argmax.html#numpy.argmax "numpy.argmax")(a[, axis, out, keepdims])
    | Returns the indices of the maximum values along an axis. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`argmax`](generated/numpy.argmax.html#numpy.argmax "numpy.argmax")(a[, axis, out, keepdims])
    | 返回沿轴的最大值的索引。 |'
- en: '| [`nanargmax`](generated/numpy.nanargmax.html#numpy.nanargmax "numpy.nanargmax")(a[, axis, out, keepdims])
    | Return the indices of the maximum values in the specified axis ignoring NaNs.
    |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`nanargmax`](generated/numpy.nanargmax.html#numpy.nanargmax "numpy.nanargmax")(a[, axis, out, keepdims])
    | 返回指定轴上最大值的索引，忽略 NaN 值。 |'
- en: '| [`argmin`](generated/numpy.argmin.html#numpy.argmin "numpy.argmin")(a[, axis, out, keepdims])
    | Returns the indices of the minimum values along an axis. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`argmin`](generated/numpy.argmin.html#numpy.argmin "numpy.argmin")(a[, axis, out, keepdims])
    | 返回沿轴的最小值的索引。 |'
- en: '| [`nanargmin`](generated/numpy.nanargmin.html#numpy.nanargmin "numpy.nanargmin")(a[, axis, out, keepdims])
    | Return the indices of the minimum values in the specified axis ignoring NaNs.
    |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`nanargmin`](generated/numpy.nanargmin.html#numpy.nanargmin "numpy.nanargmin")(a[, axis, out, keepdims])
    | 返回指定轴上最小值的索引，忽略 NaN 值。 |'
- en: '| [`argwhere`](generated/numpy.argwhere.html#numpy.argwhere "numpy.argwhere")(a)
    | Find the indices of array elements that are non-zero, grouped by element. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`argwhere`](generated/numpy.argwhere.html#numpy.argwhere "numpy.argwhere")(a)
    | 找到非零数组元素的索引，按元素分组。 |'
- en: '| [`nonzero`](generated/numpy.nonzero.html#numpy.nonzero "numpy.nonzero")(a)
    | Return the indices of the elements that are non-zero. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`nonzero`](generated/numpy.nonzero.html#numpy.nonzero "numpy.nonzero")(a)
    | 返回非零元素的索引。 |'
- en: '| [`flatnonzero`](generated/numpy.flatnonzero.html#numpy.flatnonzero "numpy.flatnonzero")(a)
    | Return indices that are non-zero in the flattened version of a. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`flatnonzero`](generated/numpy.flatnonzero.html#numpy.flatnonzero "numpy.flatnonzero")(a)
    | 返回扁平化版本中非零的索引。 |'
- en: '| [`where`](generated/numpy.where.html#numpy.where "numpy.where")(condition, [x, y], /)
    | Return elements chosen from *x* or *y* depending on *condition*. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`where`](generated/numpy.where.html#numpy.where "numpy.where")(condition, [x, y], /)
    | 根据条件从 *x* 或 *y* 中返回元素。 |'
- en: '| [`searchsorted`](generated/numpy.searchsorted.html#numpy.searchsorted "numpy.searchsorted")(a, v[, side, sorter])
    | Find indices where elements should be inserted to maintain order. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`searchsorted`](generated/numpy.searchsorted.html#numpy.searchsorted "numpy.searchsorted")(a, v[, side, sorter])
    | 查找应插入元素以保持顺序的索引。 |'
- en: '| [`extract`](generated/numpy.extract.html#numpy.extract "numpy.extract")(condition, arr)
    | Return the elements of an array that satisfy some condition. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`extract`](generated/numpy.extract.html#numpy.extract "numpy.extract")(condition, arr)
    | 返回满足某些条件的数组元素。 |'
- en: Counting
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Counting
- en: '| [`count_nonzero`](generated/numpy.count_nonzero.html#numpy.count_nonzero
    "numpy.count_nonzero")(a[, axis, keepdims]) | Counts the number of non-zero values
    in the array `a`. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`count_nonzero`](generated/numpy.count_nonzero.html#numpy.count_nonzero
    "numpy.count_nonzero")(a[, axis, keepdims]) | 计算数组`a`中非零值的数量。 |'
- en: Sorting
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Sorting
- en: '| [`sort`](generated/numpy.sort.html#numpy.sort "numpy.sort")(a[, axis, kind, order])
    | Return a sorted copy of an array. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`sort`](generated/numpy.sort.html#numpy.sort "numpy.sort")(a[, axis, kind, order])
    | 返回数组的排序副本。 |'
- en: '| [`lexsort`](generated/numpy.lexsort.html#numpy.lexsort "numpy.lexsort")(keys[, axis])
    | Perform an indirect stable sort using a sequence of keys. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`lexsort`](generated/numpy.lexsort.html#numpy.lexsort "numpy.lexsort")(keys[, axis])
    | 使用一系列键执行间接稳定排序。 |'
- en: '| [`argsort`](generated/numpy.argsort.html#numpy.argsort "numpy.argsort")(a[, axis, kind, order])
    | Returns the indices that would sort an array. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`argsort`](generated/numpy.argsort.html#numpy.argsort "numpy.argsort")(a[, axis, kind, order])
    | 返回对数组进行排序的索引。 |'
- en: '| [`ndarray.sort`](generated/numpy.ndarray.sort.html#numpy.ndarray.sort "numpy.ndarray.sort")([axis, kind, order])
    | Sort an array in-place. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`ndarray.sort`](generated/numpy.ndarray.sort.html#numpy.ndarray.sort "numpy.ndarray.sort")([axis, kind, order])
    | 在原地对数组进行排序。 |'
- en: '| [`sort_complex`](generated/numpy.sort_complex.html#numpy.sort_complex "numpy.sort_complex")(a)
    | Sort a complex array using the real part first, then the imaginary part. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`sort_complex`](generated/numpy.sort_complex.html#numpy.sort_complex "numpy.sort_complex")(a)
    | 首先使用实部，然后使用虚部对复数数组进行排序。 |'
- en: '| [`partition`](generated/numpy.partition.html#numpy.partition "numpy.partition")(a, kth[, axis, kind, order])
    | Return a partitioned copy of an array. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`partition`](generated/numpy.partition.html#numpy.partition "numpy.partition")(a, kth[, axis, kind, order])
    | 返回数组的分区副本。 |'
- en: '| [`argpartition`](generated/numpy.argpartition.html#numpy.argpartition "numpy.argpartition")(a, kth[, axis, kind, order])
    | Perform an indirect partition along the given axis using the algorithm specified
    by the *kind* keyword. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`argpartition`](generated/numpy.argpartition.html#numpy.argpartition "numpy.argpartition")(a, kth[, axis, kind, order])
    | 使用由*kind*关键字指定的算法沿着给定轴执行间接分区。 |'
- en: Searching
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Searching
- en: '| [`argmax`](generated/numpy.argmax.html#numpy.argmax "numpy.argmax")(a[, axis, out, keepdims])
    | Returns the indices of the maximum values along an axis. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`argmax`](generated/numpy.argmax.html#numpy.argmax "numpy.argmax")(a[, axis, out, keepdims])
    | 返回沿着轴的最大值的索引。 |'
- en: '| [`nanargmax`](generated/numpy.nanargmax.html#numpy.nanargmax "numpy.nanargmax")(a[, axis, out, keepdims])
    | Return the indices of the maximum values in the specified axis ignoring NaNs.
    |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`nanargmax`](generated/numpy.nanargmax.html#numpy.nanargmax "numpy.nanargmax")(a[, axis, out, keepdims])
    | 返回指定轴中最大值的索引，忽略NaN。 |'
- en: '| [`argmin`](generated/numpy.argmin.html#numpy.argmin "numpy.argmin")(a[, axis, out, keepdims])
    | Returns the indices of the minimum values along an axis. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`argmin`](generated/numpy.argmin.html#numpy.argmin "numpy.argmin")(a[, axis, out, keepdims])
    | 返回沿轴的最小值的索引。 |'
- en: '| [`nanargmin`](generated/numpy.nanargmin.html#numpy.nanargmin "numpy.nanargmin")(a[, axis, out, keepdims])
    | Return the indices of the minimum values in the specified axis ignoring NaNs.
    |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`nanargmin`](generated/numpy.nanargmin.html#numpy.nanargmin "numpy.nanargmin")(a[, axis, out, keepdims])
    | 返回指定轴中最小值的索引，忽略NaN。 |'
- en: '| [`argwhere`](generated/numpy.argwhere.html#numpy.argwhere "numpy.argwhere")(a)
    | Find the indices of array elements that are non-zero, grouped by element. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`argwhere`](generated/numpy.argwhere.html#numpy.argwhere "numpy.argwhere")(a)
    | 找到非零的数组元素的索引，按元素分组。 |'
- en: '| [`nonzero`](generated/numpy.nonzero.html#numpy.nonzero "numpy.nonzero")(a)
    | Return the indices of the elements that are non-zero. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`nonzero`](generated/numpy.nonzero.html#numpy.nonzero "numpy.nonzero")(a)
    | 返回非零元素的索引。 |'
- en: '| [`flatnonzero`](generated/numpy.flatnonzero.html#numpy.flatnonzero "numpy.flatnonzero")(a)
    | Return indices that are non-zero in the flattened version of a. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`flatnonzero`](generated/numpy.flatnonzero.html#numpy.flatnonzero "numpy.flatnonzero")(a)
    | 返回在数组的扁平版本中为非零的索引。 |'
- en: '| [`where`](generated/numpy.where.html#numpy.where "numpy.where")(condition, [x, y], /)
    | Return elements chosen from *x* or *y* depending on *condition*. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`where`](generated/numpy.where.html#numpy.where "numpy.where")(condition, [x, y], /)
    | 根据*condition*返回从*x*或*y*中选择的元素。 |'
- en: '| [`searchsorted`](generated/numpy.searchsorted.html#numpy.searchsorted "numpy.searchsorted")(a, v[, side, sorter])
    | Find indices where elements should be inserted to maintain order. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`searchsorted`](generated/numpy.searchsorted.html#numpy.searchsorted "numpy.searchsorted")(a, v[, side, sorter])
    | 查找元素应插入以保持顺序的索引。 |'
- en: '| [`extract`](generated/numpy.extract.html#numpy.extract "numpy.extract")(condition, arr)
    | Return the elements of an array that satisfy some condition. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`extract`](generated/numpy.extract.html#numpy.extract "numpy.extract")(condition, arr)
    | 返回满足某些条件的数组元素。 |'
- en: Counting
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Counting
- en: '| [`count_nonzero`](generated/numpy.count_nonzero.html#numpy.count_nonzero
    "numpy.count_nonzero")(a[, axis, keepdims]) | Counts the number of non-zero values
    in the array `a`. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`count_nonzero`](generated/numpy.count_nonzero.html#numpy.count_nonzero
    "numpy.count_nonzero")(a[, axis, keepdims]) | 统计数组 `a` 中非零值的数量。 |'
