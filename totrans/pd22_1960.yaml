- en: Version 0.17.0 (October 9, 2015)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.17.0.html](https://pandas.pydata.org/docs/whatsnew/v0.17.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is a major release from 0.16.2 and includes a small number of API changes,
    several new features, enhancements, and performance improvements along with a
    large number of bug fixes. We recommend that all users upgrade to this version.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: pandas >= 0.17.0 will no longer support compatibility with Python version 3.2
    ([GH 9118](https://github.com/pandas-dev/pandas/issues/9118))
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: The `pandas.io.data` package is deprecated and will be replaced by the [pandas-datareader
    package](https://github.com/pydata/pandas-datareader). This will allow the data
    modules to be independently updated to your pandas installation. The API for `pandas-datareader
    v0.1.1` is exactly the same as in `pandas v0.17.0` ([GH 8961](https://github.com/pandas-dev/pandas/issues/8961),
    [GH 10861](https://github.com/pandas-dev/pandas/issues/10861)).
  prefs: []
  type: TYPE_NORMAL
- en: 'After installing pandas-datareader, you can easily change your imports:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: becomes
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Highlights include:'
  prefs: []
  type: TYPE_NORMAL
- en: Release the Global Interpreter Lock (GIL) on some cython operations, see [here](#whatsnew-0170-gil)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting methods are now available as attributes of the `.plot` accessor, see
    [here](#whatsnew-0170-plot)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The sorting API has been revamped to remove some long-time inconsistencies,
    see [here](#whatsnew-0170-api-breaking-sorting)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for a `datetime64[ns]` with timezones as a first-class dtype, see [here](#whatsnew-0170-tz)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default for `to_datetime` will now be to `raise` when presented with unparsable
    formats, previously this would return the original input. Also, date parse functions
    now return consistent results. See [here](#whatsnew-0170-api-breaking-to-datetime)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The default for `dropna` in `HDFStore` has changed to `False`, to store by default
    all rows even if they are all `NaN`, see [here](#whatsnew-0170-api-breaking-hdf-dropna)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetime accessor (`dt`) now supports `Series.dt.strftime` to generate formatted
    strings for datetime-likes, and `Series.dt.total_seconds` to generate each duration
    of the timedelta in seconds. See [here](#whatsnew-0170-strftime)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Period` and `PeriodIndex` can handle multiplied freq like `3D`, which corresponding
    to 3 days span. See [here](#whatsnew-0170-periodfreq)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Development installed versions of pandas will now have `PEP440` compliant version
    strings ([GH 9518](https://github.com/pandas-dev/pandas/issues/9518))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Development support for benchmarking with the [Air Speed Velocity library](https://github.com/spacetelescope/asv/)
    ([GH 8361](https://github.com/pandas-dev/pandas/issues/8361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for reading SAS xport files, see [here](#whatsnew-0170-enhancements-sas-xport)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Documentation comparing SAS to *pandas*, see [here](../getting_started/comparison/comparison_with_sas.html#compare-with-sas)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of the automatic TimeSeries broadcasting, deprecated since 0.8.0, see
    [here](#whatsnew-0170-prior-deprecations)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Display format with plain text can optionally align with Unicode East Asian
    Width, see [here](#whatsnew-0170-east-asian-width)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compatibility with Python 3.5 ([GH 11097](https://github.com/pandas-dev/pandas/issues/11097))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compatibility with matplotlib 1.5.0 ([GH 11111](https://github.com/pandas-dev/pandas/issues/11111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check the [API Changes](#whatsnew-0170-api) and [deprecations](#whatsnew-0170-deprecations)
    before updating.
  prefs: []
  type: TYPE_NORMAL
- en: What’s new in v0.17.0
  prefs: []
  type: TYPE_NORMAL
- en: '[New features](#new-features)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Datetime with TZ](#datetime-with-tz)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Releasing the GIL](#releasing-the-gil)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Plot submethods](#plot-submethods)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Additional methods for `dt` accessor](#additional-methods-for-dt-accessor)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Series.dt.strftime](#series-dt-strftime)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Series.dt.total_seconds](#series-dt-total-seconds)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Period frequency enhancement](#period-frequency-enhancement)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Support for SAS XPORT files](#support-for-sas-xport-files)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Support for math functions in .eval()](#support-for-math-functions-in-eval)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to Excel with `MultiIndex`](#changes-to-excel-with-multiindex)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Google BigQuery enhancements](#google-bigquery-enhancements)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Display alignment with Unicode East Asian width](#display-alignment-with-unicode-east-asian-width)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other enhancements](#other-enhancements)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Backwards incompatible API changes](#backwards-incompatible-api-changes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to sorting API](#changes-to-sorting-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to to_datetime and to_timedelta](#changes-to-to-datetime-and-to-timedelta)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Error handling](#error-handling)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Consistent parsing](#consistent-parsing)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to Index comparisons](#changes-to-index-comparisons)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to boolean comparisons vs. None](#changes-to-boolean-comparisons-vs-none)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[HDFStore dropna behavior](#hdfstore-dropna-behavior)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to `display.precision` option](#changes-to-display-precision-option)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to `Categorical.unique`](#changes-to-categorical-unique)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changes to `bool` passed as `header` in parsers](#changes-to-bool-passed-as-header-in-parsers)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other API changes](#other-api-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecations](#deprecations)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removal of prior version deprecations/changes](#removal-of-prior-version-deprecations-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Performance improvements](#performance-improvements)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bug fixes](#bug-fixes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Contributors](#contributors)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## New features'
  prefs: []
  type: TYPE_NORMAL
- en: '### Datetime with TZ'
  prefs: []
  type: TYPE_NORMAL
- en: We are adding an implementation that natively supports datetime with timezones.
    A `Series` or a `DataFrame` column previously *could* be assigned a datetime with
    timezones, and would work as an `object` dtype. This had performance issues with
    a large number rows. See the [docs](../user_guide/timeseries.html#timeseries-timezone-series)
    for more details. ([GH 8260](https://github.com/pandas-dev/pandas/issues/8260),
    [GH 10763](https://github.com/pandas-dev/pandas/issues/10763), [GH 11034](https://github.com/pandas-dev/pandas/issues/11034)).
  prefs: []
  type: TYPE_NORMAL
- en: The new implementation allows for having a single-timezone across all rows,
    with operations in a performant manner.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This uses a new-dtype representation as well, that is very similar in look-and-feel
    to its numpy cousin `datetime64[ns]`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: There is a slightly different string repr for the underlying `DatetimeIndex`
    as a result of the dtype changes, but functionally these are the same.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]  ### Releasing the GIL'
  prefs: []
  type: TYPE_NORMAL
- en: We are releasing the global-interpreter-lock (GIL) on some cython operations.
    This will allow other threads to run simultaneously during computation, potentially
    allowing performance improvements from multi-threading. Notably `groupby`, `nsmallest`,
    `value_counts` and some indexing operations benefit from this. ([GH 8882](https://github.com/pandas-dev/pandas/issues/8882))
  prefs: []
  type: TYPE_NORMAL
- en: For example the groupby expression in the following code will have the GIL released
    during the factorization step, e.g. `df.groupby('key')` as well as the `.sum()`
    operation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Releasing of the GIL could benefit an application that uses threads for user
    interactions (e.g. [QT](https://wiki.python.org/moin/PyQt)), or performing multi-threaded
    computations. A nice example of a library that can handle these types of computation-in-parallel
    is the [dask](https://dask.readthedocs.io/en/latest/) library.  ### Plot submethods'
  prefs: []
  type: TYPE_NORMAL
- en: The Series and DataFrame `.plot()` method allows for customizing [plot types](../user_guide/visualization.html#visualization-other)
    by supplying the `kind` keyword arguments. Unfortunately, many of these kinds
    of plots use different required and optional keyword arguments, which makes it
    difficult to discover what any given plot kind uses out of the dozens of possible
    arguments.
  prefs: []
  type: TYPE_NORMAL
- en: 'To alleviate this issue, we have added a new, optional plotting interface,
    which exposes each kind of plot as a method of the `.plot` attribute. Instead
    of writing `series.plot(kind=<kind>, ...)`, you can now also use `series.plot.<kind>(...)`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![../_images/whatsnew_plot_submethods.png](../Images/a24da7baedb7d89b10b8e6e05912eb42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As a result of this change, these methods are now all discoverable via tab-completion:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Each method signature only includes relevant arguments. Currently, these are
    limited to required arguments, but in the future these will include optional arguments,
    as well. For an overview, see the new [Plotting](../reference/frame.html#api-dataframe-plotting)
    API documentation.  ### Additional methods for `dt` accessor'
  prefs: []
  type: TYPE_NORMAL
- en: Series.dt.strftime
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We are now supporting a `Series.dt.strftime` method for datetime-likes to generate
    a formatted string ([GH 10110](https://github.com/pandas-dev/pandas/issues/10110)).
    Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: The string format is as the python standard library and details can be found
    [here](https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior)
  prefs: []
  type: TYPE_NORMAL
- en: Series.dt.total_seconds
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`pd.Series` of type `timedelta64` has new method `.dt.total_seconds()` returning
    the duration of the timedelta in seconds ([GH 10817](https://github.com/pandas-dev/pandas/issues/10817))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]  ### Period frequency enhancement'
  prefs: []
  type: TYPE_NORMAL
- en: '`Period`, `PeriodIndex` and `period_range` can now accept multiplied freq.
    Also, `Period.freq` and `PeriodIndex.freq` are now stored as a `DateOffset` instance
    like `DatetimeIndex`, and not as `str` ([GH 7811](https://github.com/pandas-dev/pandas/issues/7811))'
  prefs: []
  type: TYPE_NORMAL
- en: A multiplied freq represents a span of corresponding length. The example below
    creates a period of 3 days. Addition and subtraction will shift the period by
    its span.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: You can use the multiplied freq in `PeriodIndex` and `period_range`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]  ### Support for SAS XPORT files'
  prefs: []
  type: TYPE_NORMAL
- en: '`read_sas()` provides support for reading *SAS XPORT* format files. ([GH 4052](https://github.com/pandas-dev/pandas/issues/4052)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: It is also possible to obtain an iterator and read an XPORT file incrementally.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'See the [docs](../user_guide/io.html#io-sas) for more details.  ### Support
    for math functions in .eval()'
  prefs: []
  type: TYPE_NORMAL
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") now
    supports calling math functions ([GH 4893](https://github.com/pandas-dev/pandas/issues/4893))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: The support math functions are `sin`, `cos`, `exp`, `log`, `expm1`, `log1p`,
    `sqrt`, `sinh`, `cosh`, `tanh`, `arcsin`, `arccos`, `arctan`, `arccosh`, `arcsinh`,
    `arctanh`, `abs` and `arctan2`.
  prefs: []
  type: TYPE_NORMAL
- en: These functions map to the intrinsics for the `NumExpr` engine. For the Python
    engine, they are mapped to `NumPy` calls.
  prefs: []
  type: TYPE_NORMAL
- en: Changes to Excel with `MultiIndex`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In version 0.16.2 a `DataFrame` with `MultiIndex` columns could not be written
    to Excel via `to_excel`. That functionality has been added ([GH 10564](https://github.com/pandas-dev/pandas/issues/10564)),
    along with updating `read_excel` so that the data can be read back with, no loss
    of information, by specifying which columns/rows make up the `MultiIndex` in the
    `header` and `index_col` parameters ([GH 4679](https://github.com/pandas-dev/pandas/issues/4679))
  prefs: []
  type: TYPE_NORMAL
- en: See the [documentation](../user_guide/io.html#io-excel) for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Previously, it was necessary to specify the `has_index_names` argument in `read_excel`,
    if the serialized data had index names. For version 0.17.0 the output format of
    `to_excel` has been changed to make this keyword unnecessary - the change is shown
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '**Old**'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/old-excel-index.png](../Images/24fc3cf72dcb9ab17e7d499a0c8be954.png)'
  prefs: []
  type: TYPE_IMG
- en: '**New**'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/new-excel-index.png](../Images/a628af99312aec6b62837d7d84324a39.png)'
  prefs: []
  type: TYPE_IMG
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Excel files saved in version 0.16.2 or prior that had index names will still
    able to be read in, but the `has_index_names` argument must specified to `True`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Google BigQuery enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added ability to automatically create a table/dataset using the `pandas.io.gbq.to_gbq()`
    function if the destination table/dataset does not exist. ([GH 8325](https://github.com/pandas-dev/pandas/issues/8325),
    [GH 11121](https://github.com/pandas-dev/pandas/issues/11121)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added ability to replace an existing table and schema when calling the `pandas.io.gbq.to_gbq()`
    function via the `if_exists` argument. See the [docs](https://pandas-gbq.readthedocs.io/en/latest/writing.html)
    for more details ([GH 8325](https://github.com/pandas-dev/pandas/issues/8325)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`InvalidColumnOrder` and `InvalidPageToken` in the gbq module will raise `ValueError`
    instead of `IOError`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `generate_bq_schema()` function is now deprecated and will be removed in
    a future version ([GH 11121](https://github.com/pandas-dev/pandas/issues/11121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The gbq module will now support Python 3 ([GH 11094](https://github.com/pandas-dev/pandas/issues/11094)).  ###
    Display alignment with Unicode East Asian width'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Enabling this option will affect the performance for printing of `DataFrame`
    and `Series` (about 2 times slower). Use only when it is actually required.
  prefs: []
  type: TYPE_NORMAL
- en: Some East Asian countries use Unicode characters its width is corresponding
    to 2 alphabets. If a `DataFrame` or `Series` contains these characters, the default
    output cannot be aligned properly. The following options are added to enable precise
    handling for these characters.
  prefs: []
  type: TYPE_NORMAL
- en: '`display.unicode.east_asian_width`: Whether to use the Unicode East Asian Width
    to calculate the display text width. ([GH 2612](https://github.com/pandas-dev/pandas/issues/2612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.unicode.ambiguous_as_wide`: Whether to handle Unicode characters belong
    to Ambiguous as Wide. ([GH 11102](https://github.com/pandas-dev/pandas/issues/11102))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'For further details, see [here](../user_guide/options.html#options-east-asian-width)  ###
    Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Support for `openpyxl` >= 2.2\. The API for style support is now stable ([GH
    10125](https://github.com/pandas-dev/pandas/issues/10125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`merge` now accepts the argument `indicator` which adds a Categorical-type
    column (by default called `_merge`) to the output object that takes on the values
    ([GH 8790](https://github.com/pandas-dev/pandas/issues/8790))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Observation Origin | `_merge` value |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key only in `''left''` frame | `left_only` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key only in `''right''` frame | `right_only` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key in both frames | `both` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: For more, see the [updated docs](../user_guide/merging.html#merging-indicator)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd.to_numeric` is a new function to coerce strings to numbers (possibly with
    coercion) ([GH 11133](https://github.com/pandas-dev/pandas/issues/11133))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.merge` will now allow duplicate column names if they are not merged upon
    ([GH 10639](https://github.com/pandas-dev/pandas/issues/10639)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.pivot` will now allow passing index as `None` ([GH 3962](https://github.com/pandas-dev/pandas/issues/3962)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.concat` will now use existing Series names if provided ([GH 10698](https://github.com/pandas-dev/pandas/issues/10698)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`DataFrame` has gained the `nlargest` and `nsmallest` methods ([GH 10393](https://github.com/pandas-dev/pandas/issues/10393))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a `limit_direction` keyword argument that works with `limit` to enable `interpolate`
    to fill `NaN` values forward, backward, or both ([GH 9218](https://github.com/pandas-dev/pandas/issues/9218),
    [GH 10420](https://github.com/pandas-dev/pandas/issues/10420), [GH 11115](https://github.com/pandas-dev/pandas/issues/11115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Added a `DataFrame.round` method to round the values to a variable number of
    decimal places ([GH 10568](https://github.com/pandas-dev/pandas/issues/10568)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`drop_duplicates` and `duplicated` now accept a `keep` keyword to target first,
    last, and all duplicates. The `take_last` keyword is deprecated, see [here](#whatsnew-0170-deprecations)
    ([GH 6511](https://github.com/pandas-dev/pandas/issues/6511), [GH 8505](https://github.com/pandas-dev/pandas/issues/8505))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Reindex now has a `tolerance` argument that allows for finer control of [Limits
    on filling while reindexing](../user_guide/basics.html#basics-limits-on-reindex-fill)
    ([GH 10411](https://github.com/pandas-dev/pandas/issues/10411)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'When used on a `DatetimeIndex`, `TimedeltaIndex` or `PeriodIndex`, `tolerance`
    will coerced into a `Timedelta` if possible. This allows you to specify tolerance
    with a string:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`tolerance` is also exposed by the lower level `Index.get_indexer` and `Index.get_loc`
    methods.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Added functionality to use the `base` argument when resampling a `TimeDeltaIndex`
    ([GH 10530](https://github.com/pandas-dev/pandas/issues/10530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex` can be instantiated using strings contains `NaT` ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_datetime` can now accept the `yearfirst` keyword ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.offsets` larger than the `Day` offset can now be used with
    a `Series` for addition/subtraction ([GH 10699](https://github.com/pandas-dev/pandas/issues/10699)).
    See the [docs](../user_guide/timeseries.html#timeseries-offsetseries) for more
    details.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Timedelta.total_seconds()` now returns Timedelta duration to ns precision
    (previously microsecond precision) ([GH 10939](https://github.com/pandas-dev/pandas/issues/10939))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PeriodIndex` now supports arithmetic with `np.ndarray` ([GH 10638](https://github.com/pandas-dev/pandas/issues/10638))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support pickling of `Period` objects ([GH 10439](https://github.com/pandas-dev/pandas/issues/10439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.as_blocks` will now take a `copy` optional argument to return a copy of the
    data, default is to copy (no change in behavior from prior versions), ([GH 9607](https://github.com/pandas-dev/pandas/issues/9607))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`regex` argument to `DataFrame.filter` now handles numeric column names instead
    of raising `ValueError` ([GH 10384](https://github.com/pandas-dev/pandas/issues/10384)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable reading gzip compressed files via URL, either by explicitly setting the
    compression parameter or by inferring from the presence of the HTTP Content-Encoding
    header in the response ([GH 8685](https://github.com/pandas-dev/pandas/issues/8685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable writing Excel files in [memory](../user_guide/io.html#io-excel-writing-buffer)
    using StringIO/BytesIO ([GH 7074](https://github.com/pandas-dev/pandas/issues/7074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable serialization of lists and dicts to strings in `ExcelWriter` ([GH 8188](https://github.com/pandas-dev/pandas/issues/8188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SQL io functions now accept a SQLAlchemy connectable. ([GH 7877](https://github.com/pandas-dev/pandas/issues/7877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_sql` and `to_sql` can accept database URI as `con` parameter ([GH
    10214](https://github.com/pandas-dev/pandas/issues/10214))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`read_sql_table` will now allow reading from views ([GH 10750](https://github.com/pandas-dev/pandas/issues/10750)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable writing complex values to `HDFStores` when using the `table` format ([GH
    10447](https://github.com/pandas-dev/pandas/issues/10447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable `pd.read_hdf` to be used without specifying a key when the HDF file contains
    a single dataset ([GH 10443](https://github.com/pandas-dev/pandas/issues/10443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_stata` will now read Stata 118 type files. ([GH 9882](https://github.com/pandas-dev/pandas/issues/9882))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`msgpack` submodule has been updated to 0.4.6 with backward compatibility ([GH
    10581](https://github.com/pandas-dev/pandas/issues/10581))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_dict` now accepts `orient=''index''` keyword argument ([GH 10844](https://github.com/pandas-dev/pandas/issues/10844)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.apply` will return a Series of dicts if the passed function returns
    a dict and `reduce=True` ([GH 8735](https://github.com/pandas-dev/pandas/issues/8735)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow passing `kwargs` to the interpolation methods ([GH 10378](https://github.com/pandas-dev/pandas/issues/10378)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when concatenating an empty iterable of `Dataframe` objects
    ([GH 9157](https://github.com/pandas-dev/pandas/issues/9157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv` can now read bz2-compressed files incrementally, and the C parser
    can read bz2-compressed files from AWS S3 ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070),
    [GH 11072](https://github.com/pandas-dev/pandas/issues/11072)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In `pd.read_csv`, recognize `s3n://` and `s3a://` URLs as designating S3 file
    storage ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070), [GH 11071](https://github.com/pandas-dev/pandas/issues/11071)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Read CSV files from AWS S3 incrementally, instead of first downloading the entire
    file. (Full file download still required for compressed files in Python 2.) ([GH
    11070](https://github.com/pandas-dev/pandas/issues/11070), [GH 11073](https://github.com/pandas-dev/pandas/issues/11073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv` is now able to infer compression type for files read from AWS
    S3 storage ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070), [GH
    11074](https://github.com/pandas-dev/pandas/issues/11074)).  ## Backwards incompatible
    API changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Changes to sorting API'
  prefs: []
  type: TYPE_NORMAL
- en: The sorting API has had some longtime inconsistencies. ([GH 9816](https://github.com/pandas-dev/pandas/issues/9816),
    [GH 8239](https://github.com/pandas-dev/pandas/issues/8239)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a summary of the API **PRIOR** to 0.17.0:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Series.sort` is **INPLACE** while `DataFrame.sort` returns a new object.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.order` returns a new object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It was possible to use `Series/DataFrame.sort_index` to sort by **values** by
    passing the `by` keyword.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.sortlevel` worked only on a `MultiIndex` for sorting by index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To address these issues, we have revamped the API:'
  prefs: []
  type: TYPE_NORMAL
- en: We have introduced a new method, [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), which is the merger of `DataFrame.sort()`, `Series.sort()`,
    and `Series.order()`, to handle sorting of **values**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The existing methods `Series.sort()`, `Series.order()`, and `DataFrame.sort()`
    have been deprecated and will be removed in a future version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `by` argument of `DataFrame.sort_index()` has been deprecated and will be
    removed in a future version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The existing method `.sort_index()` will gain the `level` keyword to enable
    level sorting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We now have two distinct and non-overlapping methods of sorting. A `*` marks
    items that will show a `FutureWarning`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To sort by the **values**:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| * `Series.order()` | `Series.sort_values()` |'
  prefs: []
  type: TYPE_TB
- en: '| * `Series.sort()` | `Series.sort_values(inplace=True)` |'
  prefs: []
  type: TYPE_TB
- en: '| * `DataFrame.sort(columns=...)` | `DataFrame.sort_values(by=...)` |'
  prefs: []
  type: TYPE_TB
- en: 'To sort by the **index**:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.sort_index()` | `Series.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.sortlevel(level=...)` | `Series.sort_index(level=...`) |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.sort_index()` | `DataFrame.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.sortlevel(level=...)` | `DataFrame.sort_index(level=...)` |'
  prefs: []
  type: TYPE_TB
- en: '| * `DataFrame.sort()` | `DataFrame.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: We have also deprecated and changed similar methods in two Series-like classes,
    `Index` and `Categorical`.
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| * `Index.order()` | `Index.sort_values()` |'
  prefs: []
  type: TYPE_TB
- en: '| * `Categorical.order()` | `Categorical.sort_values()` |  ### Changes to to_datetime
    and to_timedelta'
  prefs: []
  type: TYPE_NORMAL
- en: Error handling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The default for `pd.to_datetime` error handling has changed to `errors='raise'`.
    In prior versions it was `errors='ignore'`. Furthermore, the `coerce` argument
    has been deprecated in favor of `errors='coerce'`. This means that invalid parsing
    will raise rather that return the original input as in previous versions. ([GH
    10636](https://github.com/pandas-dev/pandas/issues/10636))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Of course you can coerce this as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'To keep the previous behavior, you can use `errors=''ignore''`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, `pd.to_timedelta` has gained a similar API, of `errors='raise'|'ignore'|'coerce'`,
    and the `coerce` keyword has been deprecated in favor of `errors='coerce'`.
  prefs: []
  type: TYPE_NORMAL
- en: Consistent parsing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The string parsing of `to_datetime`, `Timestamp` and `DatetimeIndex` has been
    made consistent. ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))
  prefs: []
  type: TYPE_NORMAL
- en: Prior to v0.17.0, `Timestamp` and `to_datetime` may parse year-only datetime-string
    incorrectly using today’s date, otherwise `DatetimeIndex` uses the beginning of
    the year. `Timestamp` and `to_datetime` may raise `ValueError` in some types of
    datetime-string which `DatetimeIndex` can parse, such as a quarterly string.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: v0.17.0 can parse them as below. It works on `DatetimeIndex` also.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you want to perform calculations based on today’s date, use `Timestamp.now()`
    and `pandas.tseries.offsets`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Changes to Index comparisons
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Operator equal on `Index` should behavior similarly to `Series` ([GH 9947](https://github.com/pandas-dev/pandas/issues/9947),
    [GH 10637](https://github.com/pandas-dev/pandas/issues/10637))
  prefs: []
  type: TYPE_NORMAL
- en: Starting in v0.17.0, comparing `Index` objects of different lengths will raise
    a `ValueError`. This is to be consistent with the behavior of `Series`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that this is different from the `numpy` behavior where a comparison can
    be broadcast:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'or it can return False if broadcasting can not be done:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Changes to boolean comparisons vs. None
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Boolean comparisons of a `Series` vs `None` will now be equivalent to comparing
    with `np.nan`, rather than raise `TypeError`. ([GH 1079](https://github.com/pandas-dev/pandas/issues/1079)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Usually you simply want to know which values are null.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: You generally will want to use `isnull/notnull` for these types of comparisons,
    as `isnull/notnull` tells you which elements are null. One has to be mindful that
    `nan's` don’t compare equal, but `None's` do. Note that pandas/numpy uses the
    fact that `np.nan != np.nan`, and treats `None` like `np.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: '### HDFStore dropna behavior'
  prefs: []
  type: TYPE_NORMAL
- en: The default behavior for HDFStore write functions with `format='table'` is now
    to keep rows that are all missing. Previously, the behavior was to drop rows that
    were all missing save the index. The previous behavior can be replicated using
    the `dropna=True` option. ([GH 9382](https://github.com/pandas-dev/pandas/issues/9382))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'See the [docs](../user_guide/io.html#io-hdf5) for more details.  ### Changes
    to `display.precision` option'
  prefs: []
  type: TYPE_NORMAL
- en: The `display.precision` option has been clarified to refer to decimal places
    ([GH 10451](https://github.com/pandas-dev/pandas/issues/10451)).
  prefs: []
  type: TYPE_NORMAL
- en: Earlier versions of pandas would format floating point numbers to have one less
    decimal place than the value in `display.precision`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: If interpreting precision as “significant figures” this did work for scientific
    notation but that same interpretation did not work for values with standard formatting.
    It was also out of step with how numpy handles formatting.
  prefs: []
  type: TYPE_NORMAL
- en: Going forward the value of `display.precision` will directly control the number
    of places after the decimal, for regular formatting as well as scientific notation,
    similar to how numpy’s `precision` print option works.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'To preserve output behavior with prior versions the default value of `display.precision`
    has been reduced to `6` from `7`.  ### Changes to `Categorical.unique`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Categorical.unique` now returns new `Categoricals` with `categories` and `codes`
    that are unique, rather than returning `np.array` ([GH 10508](https://github.com/pandas-dev/pandas/issues/10508))'
  prefs: []
  type: TYPE_NORMAL
- en: 'unordered category: values and categories are sorted by appearance order.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ordered category: values are sorted by appearance order, categories keep existing
    order.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Changes to `bool` passed as `header` in parsers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In earlier versions of pandas, if a bool was passed the `header` argument of
    `read_csv`, `read_excel`, or `read_html` it was implicitly converted to an integer,
    resulting in `header=0` for `False` and `header=1` for `True` ([GH 6113](https://github.com/pandas-dev/pandas/issues/6113))
  prefs: []
  type: TYPE_NORMAL
- en: A `bool` input to `header` will now raise a `TypeError`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Line and kde plot with `subplots=True` now uses default colors, not all black.
    Specify `color='k'` to draw all lines in black ([GH 9894](https://github.com/pandas-dev/pandas/issues/9894))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling the `.value_counts()` method on a Series with a `categorical` dtype
    now returns a Series with a `CategoricalIndex` ([GH 10704](https://github.com/pandas-dev/pandas/issues/10704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The metadata properties of subclasses of pandas objects will now be serialized
    ([GH 10553](https://github.com/pandas-dev/pandas/issues/10553)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`groupby` using `Categorical` follows the same rule as `Categorical.unique`
    described above ([GH 10508](https://github.com/pandas-dev/pandas/issues/10508))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When constructing `DataFrame` with an array of `complex64` dtype previously
    meant the corresponding column was automatically promoted to the `complex128`
    dtype. pandas will now preserve the itemsize of the input for complex data ([GH
    10952](https://github.com/pandas-dev/pandas/issues/10952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: some numeric reduction operators would return `ValueError`, rather than `TypeError`
    on object types that includes strings and numbers ([GH 11131](https://github.com/pandas-dev/pandas/issues/11131))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing currently unsupported `chunksize` argument to `read_excel` or `ExcelFile.parse`
    will now raise `NotImplementedError` ([GH 8011](https://github.com/pandas-dev/pandas/issues/8011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow an `ExcelFile` object to be passed into `read_excel` ([GH 11198](https://github.com/pandas-dev/pandas/issues/11198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.union` does not infer `freq` if `self` and the input have `None`
    as `freq` ([GH 11086](https://github.com/pandas-dev/pandas/issues/11086))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT`’s methods now either raise `ValueError`, or return `np.nan` or `NaT`
    ([GH 9513](https://github.com/pandas-dev/pandas/issues/9513))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Behavior | Methods |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `np.nan` | `weekday`, `isoweekday` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `NaT` | `date`, `now`, `replace`, `to_datetime`, `today` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `np.datetime64(''NaT'')` | `to_datetime64` (unchanged) |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| raise `ValueError` | All other public methods (names not beginning with underscores)
    |  ### Deprecations'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For `Series` the following indexing functions are deprecated ([GH 10177](https://github.com/pandas-dev/pandas/issues/10177)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Deprecated Function | Replacement |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.irow(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget_value(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: For `DataFrame` the following indexing functions are deprecated ([GH 10177](https://github.com/pandas-dev/pandas/issues/10177)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Deprecated Function | Replacement |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.irow(i)` | `.iloc[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget_value(i, j)` | `.iloc[i, j]` or `.iat[i, j]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.icol(j)` | `.iloc[:, j]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: These indexing function have been deprecated in the documentation since 0.11.0.
  prefs: []
  type: TYPE_NORMAL
- en: '`Categorical.name` was deprecated to make `Categorical` more `numpy.ndarray`
    like. Use `Series(cat, name="whatever")` instead ([GH 10482](https://github.com/pandas-dev/pandas/issues/10482)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting missing values (NaN) in a `Categorical`’s `categories` will issue a
    warning ([GH 10748](https://github.com/pandas-dev/pandas/issues/10748)). You can
    still have missing values in the `values`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`drop_duplicates` and `duplicated`’s `take_last` keyword was deprecated in
    favor of `keep`. ([GH 6511](https://github.com/pandas-dev/pandas/issues/6511),
    [GH 8505](https://github.com/pandas-dev/pandas/issues/8505))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.nsmallest` and `nlargest`’s `take_last` keyword was deprecated in favor
    of `keep`. ([GH 10792](https://github.com/pandas-dev/pandas/issues/10792))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.combineAdd` and `DataFrame.combineMult` are deprecated. They can
    easily be replaced by using the `add` and `mul` methods: `DataFrame.add(other,
    fill_value=0)` and `DataFrame.mul(other, fill_value=1.)` ([GH 10735](https://github.com/pandas-dev/pandas/issues/10735)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimeSeries` deprecated in favor of `Series` (note that this has been an alias
    since 0.13.0), ([GH 10890](https://github.com/pandas-dev/pandas/issues/10890))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparsePanel` deprecated and will be removed in a future version ([GH 11157](https://github.com/pandas-dev/pandas/issues/11157)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.is_time_series` deprecated in favor of `Series.index.is_all_dates`
    ([GH 11135](https://github.com/pandas-dev/pandas/issues/11135))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Legacy offsets (like `'A@JAN'`) are deprecated (note that this has been alias
    since 0.8.0) ([GH 10878](https://github.com/pandas-dev/pandas/issues/10878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`WidePanel` deprecated in favor of `Panel`, `LongPanel` in favor of `DataFrame`
    (note these have been aliases since < 0.11.0), ([GH 10892](https://github.com/pandas-dev/pandas/issues/10892))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.convert_objects` has been deprecated in favor of type-specific functions
    `pd.to_datetime`, `pd.to_timestamp` and `pd.to_numeric` (new in 0.17.0) ([GH 11133](https://github.com/pandas-dev/pandas/issues/11133)).  ###
    Removal of prior version deprecations/changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of `na_last` parameters from `Series.order()` and `Series.sort()`, in
    favor of `na_position`. ([GH 5231](https://github.com/pandas-dev/pandas/issues/5231))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove of `percentile_width` from `.describe()`, in favor of `percentiles`.
    ([GH 7088](https://github.com/pandas-dev/pandas/issues/7088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of `colSpace` parameter from `DataFrame.to_string()`, in favor of `col_space`,
    circa 0.8.0 version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of automatic time-series broadcasting ([GH 2304](https://github.com/pandas-dev/pandas/issues/2304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Previously
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Current
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Remove `table` keyword in `HDFStore.put/append`, in favor of using `format=`
    ([GH 4645](https://github.com/pandas-dev/pandas/issues/4645))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `kind` in `read_excel/ExcelFile` as its unused ([GH 4712](https://github.com/pandas-dev/pandas/issues/4712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `infer_type` keyword from `pd.read_html` as its unused ([GH 4770](https://github.com/pandas-dev/pandas/issues/4770),
    [GH 7032](https://github.com/pandas-dev/pandas/issues/7032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `offset` and `timeRule` keywords from `Series.tshift/shift`, in favor
    of `freq` ([GH 4853](https://github.com/pandas-dev/pandas/issues/4853), [GH 4864](https://github.com/pandas-dev/pandas/issues/4864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Remove `pd.load/pd.save` aliases in favor of `pd.to_pickle/pd.read_pickle`
    ([GH 3787](https://github.com/pandas-dev/pandas/issues/3787))  ## Performance
    improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Development support for benchmarking with the [Air Speed Velocity library](https://github.com/spacetelescope/asv/)
    ([GH 8361](https://github.com/pandas-dev/pandas/issues/8361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added vbench benchmarks for alternative ExcelWriter engines and reading Excel
    files ([GH 7171](https://github.com/pandas-dev/pandas/issues/7171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in `Categorical.value_counts` ([GH 10804](https://github.com/pandas-dev/pandas/issues/10804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in `SeriesGroupBy.nunique` and `SeriesGroupBy.value_counts`
    and `SeriesGroupby.transform` ([GH 10820](https://github.com/pandas-dev/pandas/issues/10820),
    [GH 11077](https://github.com/pandas-dev/pandas/issues/11077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in `DataFrame.drop_duplicates` with integer dtypes
    ([GH 10917](https://github.com/pandas-dev/pandas/issues/10917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in `DataFrame.duplicated` with wide frames. ([GH 10161](https://github.com/pandas-dev/pandas/issues/10161),
    [GH 11180](https://github.com/pandas-dev/pandas/issues/11180))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4x improvement in `timedelta` string parsing ([GH 6755](https://github.com/pandas-dev/pandas/issues/6755),
    [GH 10426](https://github.com/pandas-dev/pandas/issues/10426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8x improvement in `timedelta64` and `datetime64` ops ([GH 6755](https://github.com/pandas-dev/pandas/issues/6755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significantly improved performance of indexing `MultiIndex` with slicers ([GH
    10287](https://github.com/pandas-dev/pandas/issues/10287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8x improvement in `iloc` using list-like input ([GH 10791](https://github.com/pandas-dev/pandas/issues/10791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `Series.isin` for datetimelike/integer Series ([GH 10287](https://github.com/pandas-dev/pandas/issues/10287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 20x improvement in `concat` of Categoricals when categories are identical ([GH
    10587](https://github.com/pandas-dev/pandas/issues/10587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `to_datetime` when specified format string is ISO8601
    ([GH 10178](https://github.com/pandas-dev/pandas/issues/10178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2x improvement of `Series.value_counts` for float dtype ([GH 10821](https://github.com/pandas-dev/pandas/issues/10821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable `infer_datetime_format` in `to_datetime` when date components do not
    have 0 padding ([GH 11142](https://github.com/pandas-dev/pandas/issues/11142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regression from 0.16.1 in constructing `DataFrame` from nested dictionary ([GH
    11084](https://github.com/pandas-dev/pandas/issues/11084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Performance improvements in addition/subtraction operations for `DateOffset`
    with `Series` or `DatetimeIndex` ([GH 10744](https://github.com/pandas-dev/pandas/issues/10744),
    [GH 11205](https://github.com/pandas-dev/pandas/issues/11205))  ## Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in incorrect computation of `.mean()` on `timedelta64[ns]` because of overflow
    ([GH 9442](https://github.com/pandas-dev/pandas/issues/9442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.isin` on older numpies ([GH 11232](https://github.com/pandas-dev/pandas/issues/11232))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_html(index=False)` renders unnecessary `name` row ([GH
    10344](https://github.com/pandas-dev/pandas/issues/10344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_latex()` the `column_format` argument could not be passed
    ([GH 9402](https://github.com/pandas-dev/pandas/issues/9402))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex` when localizing with `NaT` ([GH 10477](https://github.com/pandas-dev/pandas/issues/10477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.dt` ops in preserving meta-data ([GH 10477](https://github.com/pandas-dev/pandas/issues/10477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in preserving `NaT` when passed in an otherwise invalid `to_datetime` construction
    ([GH 10477](https://github.com/pandas-dev/pandas/issues/10477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.apply` when function returns categorical series. ([GH 9573](https://github.com/pandas-dev/pandas/issues/9573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_datetime` with invalid dates and formats supplied ([GH 10154](https://github.com/pandas-dev/pandas/issues/10154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.drop_duplicates` dropping name(s) ([GH 10115](https://github.com/pandas-dev/pandas/issues/10115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.quantile` dropping name ([GH 10881](https://github.com/pandas-dev/pandas/issues/10881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.Series` when setting a value on an empty `Series` whose index has
    a frequency. ([GH 10193](https://github.com/pandas-dev/pandas/issues/10193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.Series.interpolate` with invalid `order` keyword values. ([GH 10633](https://github.com/pandas-dev/pandas/issues/10633))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.plot` raises `ValueError` when color name is specified by
    multiple characters ([GH 10387](https://github.com/pandas-dev/pandas/issues/10387))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` construction with a mixed list of tuples ([GH 10697](https://github.com/pandas-dev/pandas/issues/10697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.reset_index` when index contains `NaT`. ([GH 10388](https://github.com/pandas-dev/pandas/issues/10388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExcelReader` when worksheet is empty ([GH 6403](https://github.com/pandas-dev/pandas/issues/6403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `BinGrouper.group_info` where returned values are not compatible with
    base class ([GH 10914](https://github.com/pandas-dev/pandas/issues/10914))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in clearing the cache on `DataFrame.pop` and a subsequent inplace op ([GH
    10912](https://github.com/pandas-dev/pandas/issues/10912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a mixed-integer `Index` causing an `ImportError` ([GH 10610](https://github.com/pandas-dev/pandas/issues/10610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.count` when index has nulls ([GH 10946](https://github.com/pandas-dev/pandas/issues/10946))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in pickling of a non-regular freq `DatetimeIndex` ([GH 11002](https://github.com/pandas-dev/pandas/issues/11002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug causing `DataFrame.where` to not respect the `axis` parameter when the frame
    has a symmetric shape. ([GH 9736](https://github.com/pandas-dev/pandas/issues/9736))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Table.select_column` where name is not preserved ([GH 10392](https://github.com/pandas-dev/pandas/issues/10392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `offsets.generate_range` where `start` and `end` have finer precision
    than `offset` ([GH 9907](https://github.com/pandas-dev/pandas/issues/9907))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.rolling_*` where `Series.name` would be lost in the output ([GH 10565](https://github.com/pandas-dev/pandas/issues/10565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `stack` when index or columns are not unique. ([GH 10417](https://github.com/pandas-dev/pandas/issues/10417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a `Panel` when an axis has a MultiIndex ([GH 10360](https://github.com/pandas-dev/pandas/issues/10360))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `USFederalHolidayCalendar` where `USMemorialDay` and `USMartinLutherKingJr`
    were incorrect ([GH 10278](https://github.com/pandas-dev/pandas/issues/10278)
    and [GH 9760](https://github.com/pandas-dev/pandas/issues/9760) )
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.sample()` where returned object, if set, gives unnecessary `SettingWithCopyWarning`
    ([GH 10738](https://github.com/pandas-dev/pandas/issues/10738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.sample()` where weights passed as `Series` were not aligned along axis
    before being treated positionally, potentially causing problems if weight indices
    were not aligned with sampled object. ([GH 10738](https://github.com/pandas-dev/pandas/issues/10738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regression fixed in ([GH 9311](https://github.com/pandas-dev/pandas/issues/9311),
    [GH 6620](https://github.com/pandas-dev/pandas/issues/6620), [GH 9345](https://github.com/pandas-dev/pandas/issues/9345)),
    where groupby with a datetime-like converting to float with certain aggregators
    ([GH 10979](https://github.com/pandas-dev/pandas/issues/10979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.interpolate` with `axis=1` and `inplace=True` ([GH 10395](https://github.com/pandas-dev/pandas/issues/10395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `io.sql.get_schema` when specifying multiple columns as primary key ([GH
    10385](https://github.com/pandas-dev/pandas/issues/10385)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby(sort=False)` with datetime-like `Categorical` raises `ValueError`
    ([GH 10505](https://github.com/pandas-dev/pandas/issues/10505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby(axis=1)` with `filter()` throws `IndexError` ([GH 11041](https://github.com/pandas-dev/pandas/issues/11041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `test_categorical` on big-endian builds ([GH 10425](https://github.com/pandas-dev/pandas/issues/10425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.shift` and `DataFrame.shift` not supporting categorical data
    ([GH 9416](https://github.com/pandas-dev/pandas/issues/9416))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.map` using categorical `Series` raises `AttributeError` ([GH
    10324](https://github.com/pandas-dev/pandas/issues/10324))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.get_level_values` including `Categorical` raises `AttributeError`
    ([GH 10460](https://github.com/pandas-dev/pandas/issues/10460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.get_dummies` with `sparse=True` not returning `SparseDataFrame` ([GH
    10531](https://github.com/pandas-dev/pandas/issues/10531))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` subtypes (such as `PeriodIndex`) not returning their own type
    for `.drop` and `.insert` methods ([GH 10620](https://github.com/pandas-dev/pandas/issues/10620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `algos.outer_join_indexer` when `right` array is empty ([GH 10618](https://github.com/pandas-dev/pandas/issues/10618))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `filter` (regression from 0.16.0) and `transform` when grouping on multiple
    keys, one of which is datetime-like ([GH 10114](https://github.com/pandas-dev/pandas/issues/10114))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_datetime` and `to_timedelta` causing `Index` name to be lost ([GH
    10875](https://github.com/pandas-dev/pandas/issues/10875))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `len(DataFrame.groupby)` causing `IndexError` when there’s a column containing
    only NaNs ([GH 11016](https://github.com/pandas-dev/pandas/issues/11016))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug that caused segfault when resampling an empty Series ([GH 10228](https://github.com/pandas-dev/pandas/issues/10228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex` and `PeriodIndex.value_counts` resets name from its result,
    but retains in result’s `Index`. ([GH 10150](https://github.com/pandas-dev/pandas/issues/10150))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.eval` using `numexpr` engine coerces 1 element numpy array to scalar
    ([GH 10546](https://github.com/pandas-dev/pandas/issues/10546))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat` with `axis=0` when column is of dtype `category` ([GH 10177](https://github.com/pandas-dev/pandas/issues/10177))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack` where input type is not always checked ([GH 10369](https://github.com/pandas-dev/pandas/issues/10369),
    [GH 10630](https://github.com/pandas-dev/pandas/issues/10630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv` with kwargs `index_col=False`, `index_col=['a', 'b']` or
    `dtype` ([GH 10413](https://github.com/pandas-dev/pandas/issues/10413), [GH 10467](https://github.com/pandas-dev/pandas/issues/10467),
    [GH 10577](https://github.com/pandas-dev/pandas/issues/10577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.from_csv` with `header` kwarg not setting the `Series.name` or
    the `Series.index.name` ([GH 10483](https://github.com/pandas-dev/pandas/issues/10483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.var` which caused variance to be inaccurate for small float
    values ([GH 10448](https://github.com/pandas-dev/pandas/issues/10448))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.plot(kind='hist')` Y Label not informative ([GH 10485](https://github.com/pandas-dev/pandas/issues/10485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_csv` when using a converter which generates a `uint8` type ([GH
    9266](https://github.com/pandas-dev/pandas/issues/9266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug causes memory leak in time-series line and area plot ([GH 9003](https://github.com/pandas-dev/pandas/issues/9003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when setting a `Panel` sliced along the major or minor axes when the right-hand
    side is a `DataFrame` ([GH 11014](https://github.com/pandas-dev/pandas/issues/11014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug that returns `None` and does not raise `NotImplementedError` when operator
    functions (e.g. `.add`) of `Panel` are not implemented ([GH 7692](https://github.com/pandas-dev/pandas/issues/7692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in line and kde plot cannot accept multiple colors when `subplots=True`
    ([GH 9894](https://github.com/pandas-dev/pandas/issues/9894))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.plot` raises `ValueError` when color name is specified by
    multiple characters ([GH 10387](https://github.com/pandas-dev/pandas/issues/10387))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in left and right `align` of `Series` with `MultiIndex` may be inverted
    ([GH 10665](https://github.com/pandas-dev/pandas/issues/10665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in left and right `join` of with `MultiIndex` may be inverted ([GH 10741](https://github.com/pandas-dev/pandas/issues/10741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_stata` when reading a file with a different order set in `columns`
    ([GH 10757](https://github.com/pandas-dev/pandas/issues/10757))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical` may not representing properly when category contains `tz`
    or `Period` ([GH 10713](https://github.com/pandas-dev/pandas/issues/10713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.__iter__` may not returning correct `datetime` and `Period`
    ([GH 10713](https://github.com/pandas-dev/pandas/issues/10713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a `PeriodIndex` on an object with a `PeriodIndex` ([GH
    4125](https://github.com/pandas-dev/pandas/issues/4125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `read_csv` with `engine=''c''`: EOF preceded by a comment, blank line,
    etc. was not handled correctly ([GH 10728](https://github.com/pandas-dev/pandas/issues/10728),
    [GH 10548](https://github.com/pandas-dev/pandas/issues/10548))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading “famafrench” data via `DataReader` results in HTTP 404 error because
    of the website url is changed ([GH 10591](https://github.com/pandas-dev/pandas/issues/10591)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack` where DataFrame to decode has duplicate column names ([GH
    9618](https://github.com/pandas-dev/pandas/issues/9618))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `io.common.get_filepath_or_buffer` which caused reading of valid S3 files
    to fail if the bucket also contained keys for which the user does not have read
    permission ([GH 10604](https://github.com/pandas-dev/pandas/issues/10604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in vectorised setting of timestamp columns with python `datetime.date` and
    numpy `datetime64` ([GH 10408](https://github.com/pandas-dev/pandas/issues/10408),
    [GH 10412](https://github.com/pandas-dev/pandas/issues/10412))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.take` may add unnecessary `freq` attribute ([GH 10791](https://github.com/pandas-dev/pandas/issues/10791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `merge` with empty `DataFrame` may raise `IndexError` ([GH 10824](https://github.com/pandas-dev/pandas/issues/10824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_latex` where unexpected keyword argument for some documented arguments
    ([GH 10888](https://github.com/pandas-dev/pandas/issues/10888))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing of large `DataFrame` where `IndexError` is uncaught ([GH 10645](https://github.com/pandas-dev/pandas/issues/10645)
    and [GH 10692](https://github.com/pandas-dev/pandas/issues/10692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_csv` when using the `nrows` or `chunksize` parameters if file contains
    only a header line ([GH 9535](https://github.com/pandas-dev/pandas/issues/9535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in serialization of `category` types in HDF5 in presence of alternate encodings.
    ([GH 10366](https://github.com/pandas-dev/pandas/issues/10366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.DataFrame` when constructing an empty DataFrame with a string dtype
    ([GH 9428](https://github.com/pandas-dev/pandas/issues/9428))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.DataFrame.diff` when DataFrame is not consolidated ([GH 10907](https://github.com/pandas-dev/pandas/issues/10907))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.unique` for arrays with the `datetime64` or `timedelta64` dtype that
    meant an array with object dtype was returned instead the original dtype ([GH
    9431](https://github.com/pandas-dev/pandas/issues/9431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta` raising error when slicing from 0s ([GH 10583](https://github.com/pandas-dev/pandas/issues/10583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.take` and `TimedeltaIndex.take` may not raise `IndexError`
    against invalid index ([GH 10295](https://github.com/pandas-dev/pandas/issues/10295))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series([np.nan]).astype('M8[ms]')`, which now returns `Series([pd.NaT])`
    ([GH 10747](https://github.com/pandas-dev/pandas/issues/10747))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.order` reset freq ([GH 10295](https://github.com/pandas-dev/pandas/issues/10295))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `date_range` when `freq` divides `end` as nanos ([GH 10885](https://github.com/pandas-dev/pandas/issues/10885))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `iloc` allowing memory outside bounds of a Series to be accessed with
    negative integers ([GH 10779](https://github.com/pandas-dev/pandas/issues/10779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack` where encoding is not respected ([GH 10581](https://github.com/pandas-dev/pandas/issues/10581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug preventing access to the first index when using `iloc` with a list containing
    the appropriate negative integer ([GH 10547](https://github.com/pandas-dev/pandas/issues/10547),
    [GH 10779](https://github.com/pandas-dev/pandas/issues/10779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex` formatter causing error while trying to save `DataFrame`
    with `TimedeltaIndex` using `to_csv` ([GH 10833](https://github.com/pandas-dev/pandas/issues/10833))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.where` when handling Series slicing ([GH 10218](https://github.com/pandas-dev/pandas/issues/10218),
    [GH 9558](https://github.com/pandas-dev/pandas/issues/9558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `pd.read_gbq` throws `ValueError` when Bigquery returns zero rows
    ([GH 10273](https://github.com/pandas-dev/pandas/issues/10273))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_json` which was causing segmentation fault when serializing 0-rank
    ndarray ([GH 9576](https://github.com/pandas-dev/pandas/issues/9576))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in plotting functions may raise `IndexError` when plotted on `GridSpec`
    ([GH 10819](https://github.com/pandas-dev/pandas/issues/10819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in plot result may show unnecessary minor ticklabels ([GH 10657](https://github.com/pandas-dev/pandas/issues/10657))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby` incorrect computation for aggregation on `DataFrame` with `NaT`
    (E.g `first`, `last`, `min`). ([GH 10590](https://github.com/pandas-dev/pandas/issues/10590),
    [GH 11010](https://github.com/pandas-dev/pandas/issues/11010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when constructing `DataFrame` where passing a dictionary with only scalar
    values and specifying columns did not raise an error ([GH 10856](https://github.com/pandas-dev/pandas/issues/10856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.var()` causing roundoff errors for highly similar values ([GH 10242](https://github.com/pandas-dev/pandas/issues/10242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.plot(subplots=True)` with duplicated columns outputs incorrect
    result ([GH 10962](https://github.com/pandas-dev/pandas/issues/10962))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` arithmetic may result in incorrect class ([GH 10638](https://github.com/pandas-dev/pandas/issues/10638))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `date_range` results in empty if freq is negative annually, quarterly
    and monthly ([GH 11018](https://github.com/pandas-dev/pandas/issues/11018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex` cannot infer negative freq ([GH 11018](https://github.com/pandas-dev/pandas/issues/11018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove use of some deprecated numpy comparison operations, mainly in tests.
    ([GH 10569](https://github.com/pandas-dev/pandas/issues/10569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` dtype may not applied properly ([GH 11017](https://github.com/pandas-dev/pandas/issues/11017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `io.gbq` when testing for minimum google api client version ([GH 10652](https://github.com/pandas-dev/pandas/issues/10652))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame` construction from nested `dict` with `timedelta` keys ([GH
    11129](https://github.com/pandas-dev/pandas/issues/11129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.fillna` against may raise `TypeError` when data contains datetime dtype
    ([GH 7095](https://github.com/pandas-dev/pandas/issues/7095), [GH 11153](https://github.com/pandas-dev/pandas/issues/11153))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.groupby` when number of keys to group by is same as length of index
    ([GH 11185](https://github.com/pandas-dev/pandas/issues/11185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `convert_objects` where converted values might not be returned if all
    null and `coerce` ([GH 9589](https://github.com/pandas-dev/pandas/issues/9589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `convert_objects` where `copy` keyword was not respected ([GH 9589](https://github.com/pandas-dev/pandas/issues/9589))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 112 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Alex Rothberg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrea Bedini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Rosenfeld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Hayden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthonios Partheniou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artemy Kolchinsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bernard Willers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Charlie Clark +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Gohlke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clark Fitzgerald
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clearfield Christopher +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Ringwalt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Ni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data & Code Expert Experimenting with Code on Data +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Cottrell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David John Gagne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Kelly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ETF +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eduardo Schettino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Egor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Egor Panfilov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan Wright
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frank Pinter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Araujo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Garrett-R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gianluca Rossi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Gay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Poulin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harsh Nisar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Henriksen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Hoegen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaidev Deshpande +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Rudolph +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Schulz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jason Swails +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Buyl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Vankerschaver +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Levy-Kramer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julien Danjou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ka Wo Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karrie Kehoe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kelsey Jordahl
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kerby Shedden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lars Buitinck
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leif Johnson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Ortiz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mac +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Gambogi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Savoie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Gilbert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximilian Roos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michelangelo D’Agostino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mortada Mehyar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Eubank
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nipun Batra
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ondřej Čertík
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phillip Cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pratap Vardhan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rafal Skolasinski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Lewis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rinoc Johnson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rob Levy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Gieseke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Safia Abdalla +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Denny +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saumitra Shahapure +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Pölsterl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Rubbert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sheppard, Kevin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sinhrks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Siu Kwan Lam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skipper Seabold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spencer Carrucciu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephan Hoyer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Hoover +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Pascoe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terry Santegoeds +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Grainger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tjerk Santegoeds +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vincent Davis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Winterflower +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuan Tang (Terry) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: agijsberts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ajcr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: behzad nouri
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cel4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cyrusmaher +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: davidovitch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ganego +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jreback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: juricast +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: larvian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximilianr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: msund +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rekcahpassyla
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: robertzk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scls19fr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: seth-p
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sinhrks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: springcoil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: terrytangyuan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'tzinckgraf +  ## New features'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Datetime with TZ'
  prefs: []
  type: TYPE_NORMAL
- en: We are adding an implementation that natively supports datetime with timezones.
    A `Series` or a `DataFrame` column previously *could* be assigned a datetime with
    timezones, and would work as an `object` dtype. This had performance issues with
    a large number rows. See the [docs](../user_guide/timeseries.html#timeseries-timezone-series)
    for more details. ([GH 8260](https://github.com/pandas-dev/pandas/issues/8260),
    [GH 10763](https://github.com/pandas-dev/pandas/issues/10763), [GH 11034](https://github.com/pandas-dev/pandas/issues/11034)).
  prefs: []
  type: TYPE_NORMAL
- en: The new implementation allows for having a single-timezone across all rows,
    with operations in a performant manner.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: This uses a new-dtype representation as well, that is very similar in look-and-feel
    to its numpy cousin `datetime64[ns]`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: There is a slightly different string repr for the underlying `DatetimeIndex`
    as a result of the dtype changes, but functionally these are the same.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]  ### Releasing the GIL'
  prefs: []
  type: TYPE_NORMAL
- en: We are releasing the global-interpreter-lock (GIL) on some cython operations.
    This will allow other threads to run simultaneously during computation, potentially
    allowing performance improvements from multi-threading. Notably `groupby`, `nsmallest`,
    `value_counts` and some indexing operations benefit from this. ([GH 8882](https://github.com/pandas-dev/pandas/issues/8882))
  prefs: []
  type: TYPE_NORMAL
- en: For example the groupby expression in the following code will have the GIL released
    during the factorization step, e.g. `df.groupby('key')` as well as the `.sum()`
    operation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'Releasing of the GIL could benefit an application that uses threads for user
    interactions (e.g. [QT](https://wiki.python.org/moin/PyQt)), or performing multi-threaded
    computations. A nice example of a library that can handle these types of computation-in-parallel
    is the [dask](https://dask.readthedocs.io/en/latest/) library.  ### Plot submethods'
  prefs: []
  type: TYPE_NORMAL
- en: The Series and DataFrame `.plot()` method allows for customizing [plot types](../user_guide/visualization.html#visualization-other)
    by supplying the `kind` keyword arguments. Unfortunately, many of these kinds
    of plots use different required and optional keyword arguments, which makes it
    difficult to discover what any given plot kind uses out of the dozens of possible
    arguments.
  prefs: []
  type: TYPE_NORMAL
- en: 'To alleviate this issue, we have added a new, optional plotting interface,
    which exposes each kind of plot as a method of the `.plot` attribute. Instead
    of writing `series.plot(kind=<kind>, ...)`, you can now also use `series.plot.<kind>(...)`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '![../_images/whatsnew_plot_submethods.png](../Images/a24da7baedb7d89b10b8e6e05912eb42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As a result of this change, these methods are now all discoverable via tab-completion:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 'Each method signature only includes relevant arguments. Currently, these are
    limited to required arguments, but in the future these will include optional arguments,
    as well. For an overview, see the new [Plotting](../reference/frame.html#api-dataframe-plotting)
    API documentation.  ### Additional methods for `dt` accessor'
  prefs: []
  type: TYPE_NORMAL
- en: Series.dt.strftime
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We are now supporting a `Series.dt.strftime` method for datetime-likes to generate
    a formatted string ([GH 10110](https://github.com/pandas-dev/pandas/issues/10110)).
    Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: The string format is as the python standard library and details can be found
    [here](https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior)
  prefs: []
  type: TYPE_NORMAL
- en: Series.dt.total_seconds
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`pd.Series` of type `timedelta64` has new method `.dt.total_seconds()` returning
    the duration of the timedelta in seconds ([GH 10817](https://github.com/pandas-dev/pandas/issues/10817))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]  ### Period frequency enhancement'
  prefs: []
  type: TYPE_NORMAL
- en: '`Period`, `PeriodIndex` and `period_range` can now accept multiplied freq.
    Also, `Period.freq` and `PeriodIndex.freq` are now stored as a `DateOffset` instance
    like `DatetimeIndex`, and not as `str` ([GH 7811](https://github.com/pandas-dev/pandas/issues/7811))'
  prefs: []
  type: TYPE_NORMAL
- en: A multiplied freq represents a span of corresponding length. The example below
    creates a period of 3 days. Addition and subtraction will shift the period by
    its span.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: You can use the multiplied freq in `PeriodIndex` and `period_range`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]  ### Support for SAS XPORT files'
  prefs: []
  type: TYPE_NORMAL
- en: '`read_sas()` provides support for reading *SAS XPORT* format files. ([GH 4052](https://github.com/pandas-dev/pandas/issues/4052)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: It is also possible to obtain an iterator and read an XPORT file incrementally.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'See the [docs](../user_guide/io.html#io-sas) for more details.  ### Support
    for math functions in .eval()'
  prefs: []
  type: TYPE_NORMAL
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") now
    supports calling math functions ([GH 4893](https://github.com/pandas-dev/pandas/issues/4893))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: The support math functions are `sin`, `cos`, `exp`, `log`, `expm1`, `log1p`,
    `sqrt`, `sinh`, `cosh`, `tanh`, `arcsin`, `arccos`, `arctan`, `arccosh`, `arcsinh`,
    `arctanh`, `abs` and `arctan2`.
  prefs: []
  type: TYPE_NORMAL
- en: These functions map to the intrinsics for the `NumExpr` engine. For the Python
    engine, they are mapped to `NumPy` calls.
  prefs: []
  type: TYPE_NORMAL
- en: Changes to Excel with `MultiIndex`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In version 0.16.2 a `DataFrame` with `MultiIndex` columns could not be written
    to Excel via `to_excel`. That functionality has been added ([GH 10564](https://github.com/pandas-dev/pandas/issues/10564)),
    along with updating `read_excel` so that the data can be read back with, no loss
    of information, by specifying which columns/rows make up the `MultiIndex` in the
    `header` and `index_col` parameters ([GH 4679](https://github.com/pandas-dev/pandas/issues/4679))
  prefs: []
  type: TYPE_NORMAL
- en: See the [documentation](../user_guide/io.html#io-excel) for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: Previously, it was necessary to specify the `has_index_names` argument in `read_excel`,
    if the serialized data had index names. For version 0.17.0 the output format of
    `to_excel` has been changed to make this keyword unnecessary - the change is shown
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '**Old**'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/old-excel-index.png](../Images/24fc3cf72dcb9ab17e7d499a0c8be954.png)'
  prefs: []
  type: TYPE_IMG
- en: '**New**'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/new-excel-index.png](../Images/a628af99312aec6b62837d7d84324a39.png)'
  prefs: []
  type: TYPE_IMG
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Excel files saved in version 0.16.2 or prior that had index names will still
    able to be read in, but the `has_index_names` argument must specified to `True`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Google BigQuery enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added ability to automatically create a table/dataset using the `pandas.io.gbq.to_gbq()`
    function if the destination table/dataset does not exist. ([GH 8325](https://github.com/pandas-dev/pandas/issues/8325),
    [GH 11121](https://github.com/pandas-dev/pandas/issues/11121)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added ability to replace an existing table and schema when calling the `pandas.io.gbq.to_gbq()`
    function via the `if_exists` argument. See the [docs](https://pandas-gbq.readthedocs.io/en/latest/writing.html)
    for more details ([GH 8325](https://github.com/pandas-dev/pandas/issues/8325)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`InvalidColumnOrder` and `InvalidPageToken` in the gbq module will raise `ValueError`
    instead of `IOError`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `generate_bq_schema()` function is now deprecated and will be removed in
    a future version ([GH 11121](https://github.com/pandas-dev/pandas/issues/11121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The gbq module will now support Python 3 ([GH 11094](https://github.com/pandas-dev/pandas/issues/11094)).  ###
    Display alignment with Unicode East Asian width'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Enabling this option will affect the performance for printing of `DataFrame`
    and `Series` (about 2 times slower). Use only when it is actually required.
  prefs: []
  type: TYPE_NORMAL
- en: Some East Asian countries use Unicode characters its width is corresponding
    to 2 alphabets. If a `DataFrame` or `Series` contains these characters, the default
    output cannot be aligned properly. The following options are added to enable precise
    handling for these characters.
  prefs: []
  type: TYPE_NORMAL
- en: '`display.unicode.east_asian_width`: Whether to use the Unicode East Asian Width
    to calculate the display text width. ([GH 2612](https://github.com/pandas-dev/pandas/issues/2612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.unicode.ambiguous_as_wide`: Whether to handle Unicode characters belong
    to Ambiguous as Wide. ([GH 11102](https://github.com/pandas-dev/pandas/issues/11102))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: 'For further details, see [here](../user_guide/options.html#options-east-asian-width)  ###
    Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Support for `openpyxl` >= 2.2\. The API for style support is now stable ([GH
    10125](https://github.com/pandas-dev/pandas/issues/10125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`merge` now accepts the argument `indicator` which adds a Categorical-type
    column (by default called `_merge`) to the output object that takes on the values
    ([GH 8790](https://github.com/pandas-dev/pandas/issues/8790))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Observation Origin | `_merge` value |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key only in `''left''` frame | `left_only` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key only in `''right''` frame | `right_only` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key in both frames | `both` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '[PRE75]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: For more, see the [updated docs](../user_guide/merging.html#merging-indicator)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd.to_numeric` is a new function to coerce strings to numbers (possibly with
    coercion) ([GH 11133](https://github.com/pandas-dev/pandas/issues/11133))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.merge` will now allow duplicate column names if they are not merged upon
    ([GH 10639](https://github.com/pandas-dev/pandas/issues/10639)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.pivot` will now allow passing index as `None` ([GH 3962](https://github.com/pandas-dev/pandas/issues/3962)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.concat` will now use existing Series names if provided ([GH 10698](https://github.com/pandas-dev/pandas/issues/10698)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`DataFrame` has gained the `nlargest` and `nsmallest` methods ([GH 10393](https://github.com/pandas-dev/pandas/issues/10393))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a `limit_direction` keyword argument that works with `limit` to enable `interpolate`
    to fill `NaN` values forward, backward, or both ([GH 9218](https://github.com/pandas-dev/pandas/issues/9218),
    [GH 10420](https://github.com/pandas-dev/pandas/issues/10420), [GH 11115](https://github.com/pandas-dev/pandas/issues/11115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Added a `DataFrame.round` method to round the values to a variable number of
    decimal places ([GH 10568](https://github.com/pandas-dev/pandas/issues/10568)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`drop_duplicates` and `duplicated` now accept a `keep` keyword to target first,
    last, and all duplicates. The `take_last` keyword is deprecated, see [here](#whatsnew-0170-deprecations)
    ([GH 6511](https://github.com/pandas-dev/pandas/issues/6511), [GH 8505](https://github.com/pandas-dev/pandas/issues/8505))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Reindex now has a `tolerance` argument that allows for finer control of [Limits
    on filling while reindexing](../user_guide/basics.html#basics-limits-on-reindex-fill)
    ([GH 10411](https://github.com/pandas-dev/pandas/issues/10411)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'When used on a `DatetimeIndex`, `TimedeltaIndex` or `PeriodIndex`, `tolerance`
    will coerced into a `Timedelta` if possible. This allows you to specify tolerance
    with a string:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`tolerance` is also exposed by the lower level `Index.get_indexer` and `Index.get_loc`
    methods.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Added functionality to use the `base` argument when resampling a `TimeDeltaIndex`
    ([GH 10530](https://github.com/pandas-dev/pandas/issues/10530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex` can be instantiated using strings contains `NaT` ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_datetime` can now accept the `yearfirst` keyword ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.offsets` larger than the `Day` offset can now be used with
    a `Series` for addition/subtraction ([GH 10699](https://github.com/pandas-dev/pandas/issues/10699)).
    See the [docs](../user_guide/timeseries.html#timeseries-offsetseries) for more
    details.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Timedelta.total_seconds()` now returns Timedelta duration to ns precision
    (previously microsecond precision) ([GH 10939](https://github.com/pandas-dev/pandas/issues/10939))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PeriodIndex` now supports arithmetic with `np.ndarray` ([GH 10638](https://github.com/pandas-dev/pandas/issues/10638))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support pickling of `Period` objects ([GH 10439](https://github.com/pandas-dev/pandas/issues/10439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.as_blocks` will now take a `copy` optional argument to return a copy of the
    data, default is to copy (no change in behavior from prior versions), ([GH 9607](https://github.com/pandas-dev/pandas/issues/9607))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`regex` argument to `DataFrame.filter` now handles numeric column names instead
    of raising `ValueError` ([GH 10384](https://github.com/pandas-dev/pandas/issues/10384)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable reading gzip compressed files via URL, either by explicitly setting the
    compression parameter or by inferring from the presence of the HTTP Content-Encoding
    header in the response ([GH 8685](https://github.com/pandas-dev/pandas/issues/8685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable writing Excel files in [memory](../user_guide/io.html#io-excel-writing-buffer)
    using StringIO/BytesIO ([GH 7074](https://github.com/pandas-dev/pandas/issues/7074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable serialization of lists and dicts to strings in `ExcelWriter` ([GH 8188](https://github.com/pandas-dev/pandas/issues/8188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SQL io functions now accept a SQLAlchemy connectable. ([GH 7877](https://github.com/pandas-dev/pandas/issues/7877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_sql` and `to_sql` can accept database URI as `con` parameter ([GH
    10214](https://github.com/pandas-dev/pandas/issues/10214))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`read_sql_table` will now allow reading from views ([GH 10750](https://github.com/pandas-dev/pandas/issues/10750)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable writing complex values to `HDFStores` when using the `table` format ([GH
    10447](https://github.com/pandas-dev/pandas/issues/10447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable `pd.read_hdf` to be used without specifying a key when the HDF file contains
    a single dataset ([GH 10443](https://github.com/pandas-dev/pandas/issues/10443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_stata` will now read Stata 118 type files. ([GH 9882](https://github.com/pandas-dev/pandas/issues/9882))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`msgpack` submodule has been updated to 0.4.6 with backward compatibility ([GH
    10581](https://github.com/pandas-dev/pandas/issues/10581))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_dict` now accepts `orient=''index''` keyword argument ([GH 10844](https://github.com/pandas-dev/pandas/issues/10844)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.apply` will return a Series of dicts if the passed function returns
    a dict and `reduce=True` ([GH 8735](https://github.com/pandas-dev/pandas/issues/8735)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow passing `kwargs` to the interpolation methods ([GH 10378](https://github.com/pandas-dev/pandas/issues/10378)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when concatenating an empty iterable of `Dataframe` objects
    ([GH 9157](https://github.com/pandas-dev/pandas/issues/9157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv` can now read bz2-compressed files incrementally, and the C parser
    can read bz2-compressed files from AWS S3 ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070),
    [GH 11072](https://github.com/pandas-dev/pandas/issues/11072)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In `pd.read_csv`, recognize `s3n://` and `s3a://` URLs as designating S3 file
    storage ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070), [GH 11071](https://github.com/pandas-dev/pandas/issues/11071)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Read CSV files from AWS S3 incrementally, instead of first downloading the entire
    file. (Full file download still required for compressed files in Python 2.) ([GH
    11070](https://github.com/pandas-dev/pandas/issues/11070), [GH 11073](https://github.com/pandas-dev/pandas/issues/11073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv` is now able to infer compression type for files read from AWS
    S3 storage ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070), [GH
    11074](https://github.com/pandas-dev/pandas/issues/11074)).  ### Datetime with
    TZ'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are adding an implementation that natively supports datetime with timezones.
    A `Series` or a `DataFrame` column previously *could* be assigned a datetime with
    timezones, and would work as an `object` dtype. This had performance issues with
    a large number rows. See the [docs](../user_guide/timeseries.html#timeseries-timezone-series)
    for more details. ([GH 8260](https://github.com/pandas-dev/pandas/issues/8260),
    [GH 10763](https://github.com/pandas-dev/pandas/issues/10763), [GH 11034](https://github.com/pandas-dev/pandas/issues/11034)).
  prefs: []
  type: TYPE_NORMAL
- en: The new implementation allows for having a single-timezone across all rows,
    with operations in a performant manner.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: This uses a new-dtype representation as well, that is very similar in look-and-feel
    to its numpy cousin `datetime64[ns]`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: There is a slightly different string repr for the underlying `DatetimeIndex`
    as a result of the dtype changes, but functionally these are the same.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '### Releasing the GIL'
  prefs: []
  type: TYPE_NORMAL
- en: We are releasing the global-interpreter-lock (GIL) on some cython operations.
    This will allow other threads to run simultaneously during computation, potentially
    allowing performance improvements from multi-threading. Notably `groupby`, `nsmallest`,
    `value_counts` and some indexing operations benefit from this. ([GH 8882](https://github.com/pandas-dev/pandas/issues/8882))
  prefs: []
  type: TYPE_NORMAL
- en: For example the groupby expression in the following code will have the GIL released
    during the factorization step, e.g. `df.groupby('key')` as well as the `.sum()`
    operation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: Releasing of the GIL could benefit an application that uses threads for user
    interactions (e.g. [QT](https://wiki.python.org/moin/PyQt)), or performing multi-threaded
    computations. A nice example of a library that can handle these types of computation-in-parallel
    is the [dask](https://dask.readthedocs.io/en/latest/) library.
  prefs: []
  type: TYPE_NORMAL
- en: '### Plot submethods'
  prefs: []
  type: TYPE_NORMAL
- en: The Series and DataFrame `.plot()` method allows for customizing [plot types](../user_guide/visualization.html#visualization-other)
    by supplying the `kind` keyword arguments. Unfortunately, many of these kinds
    of plots use different required and optional keyword arguments, which makes it
    difficult to discover what any given plot kind uses out of the dozens of possible
    arguments.
  prefs: []
  type: TYPE_NORMAL
- en: 'To alleviate this issue, we have added a new, optional plotting interface,
    which exposes each kind of plot as a method of the `.plot` attribute. Instead
    of writing `series.plot(kind=<kind>, ...)`, you can now also use `series.plot.<kind>(...)`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: '![../_images/whatsnew_plot_submethods.png](../Images/a24da7baedb7d89b10b8e6e05912eb42.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As a result of this change, these methods are now all discoverable via tab-completion:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: Each method signature only includes relevant arguments. Currently, these are
    limited to required arguments, but in the future these will include optional arguments,
    as well. For an overview, see the new [Plotting](../reference/frame.html#api-dataframe-plotting)
    API documentation.
  prefs: []
  type: TYPE_NORMAL
- en: '### Additional methods for `dt` accessor'
  prefs: []
  type: TYPE_NORMAL
- en: Series.dt.strftime
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We are now supporting a `Series.dt.strftime` method for datetime-likes to generate
    a formatted string ([GH 10110](https://github.com/pandas-dev/pandas/issues/10110)).
    Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: The string format is as the python standard library and details can be found
    [here](https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior)
  prefs: []
  type: TYPE_NORMAL
- en: Series.dt.total_seconds
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`pd.Series` of type `timedelta64` has new method `.dt.total_seconds()` returning
    the duration of the timedelta in seconds ([GH 10817](https://github.com/pandas-dev/pandas/issues/10817))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: Series.dt.strftime
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We are now supporting a `Series.dt.strftime` method for datetime-likes to generate
    a formatted string ([GH 10110](https://github.com/pandas-dev/pandas/issues/10110)).
    Examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: The string format is as the python standard library and details can be found
    [here](https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior)
  prefs: []
  type: TYPE_NORMAL
- en: Series.dt.total_seconds
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '`pd.Series` of type `timedelta64` has new method `.dt.total_seconds()` returning
    the duration of the timedelta in seconds ([GH 10817](https://github.com/pandas-dev/pandas/issues/10817))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: '### Period frequency enhancement'
  prefs: []
  type: TYPE_NORMAL
- en: '`Period`, `PeriodIndex` and `period_range` can now accept multiplied freq.
    Also, `Period.freq` and `PeriodIndex.freq` are now stored as a `DateOffset` instance
    like `DatetimeIndex`, and not as `str` ([GH 7811](https://github.com/pandas-dev/pandas/issues/7811))'
  prefs: []
  type: TYPE_NORMAL
- en: A multiplied freq represents a span of corresponding length. The example below
    creates a period of 3 days. Addition and subtraction will shift the period by
    its span.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: You can use the multiplied freq in `PeriodIndex` and `period_range`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: '### Support for SAS XPORT files'
  prefs: []
  type: TYPE_NORMAL
- en: '`read_sas()` provides support for reading *SAS XPORT* format files. ([GH 4052](https://github.com/pandas-dev/pandas/issues/4052)).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: It is also possible to obtain an iterator and read an XPORT file incrementally.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: See the [docs](../user_guide/io.html#io-sas) for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '### Support for math functions in .eval()'
  prefs: []
  type: TYPE_NORMAL
- en: '[`eval()`](../reference/api/pandas.eval.html#pandas.eval "pandas.eval") now
    supports calling math functions ([GH 4893](https://github.com/pandas-dev/pandas/issues/4893))'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: The support math functions are `sin`, `cos`, `exp`, `log`, `expm1`, `log1p`,
    `sqrt`, `sinh`, `cosh`, `tanh`, `arcsin`, `arccos`, `arctan`, `arccosh`, `arcsinh`,
    `arctanh`, `abs` and `arctan2`.
  prefs: []
  type: TYPE_NORMAL
- en: These functions map to the intrinsics for the `NumExpr` engine. For the Python
    engine, they are mapped to `NumPy` calls.
  prefs: []
  type: TYPE_NORMAL
- en: Changes to Excel with `MultiIndex`
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In version 0.16.2 a `DataFrame` with `MultiIndex` columns could not be written
    to Excel via `to_excel`. That functionality has been added ([GH 10564](https://github.com/pandas-dev/pandas/issues/10564)),
    along with updating `read_excel` so that the data can be read back with, no loss
    of information, by specifying which columns/rows make up the `MultiIndex` in the
    `header` and `index_col` parameters ([GH 4679](https://github.com/pandas-dev/pandas/issues/4679))
  prefs: []
  type: TYPE_NORMAL
- en: See the [documentation](../user_guide/io.html#io-excel) for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: Previously, it was necessary to specify the `has_index_names` argument in `read_excel`,
    if the serialized data had index names. For version 0.17.0 the output format of
    `to_excel` has been changed to make this keyword unnecessary - the change is shown
    below.
  prefs: []
  type: TYPE_NORMAL
- en: '**Old**'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/old-excel-index.png](../Images/24fc3cf72dcb9ab17e7d499a0c8be954.png)'
  prefs: []
  type: TYPE_IMG
- en: '**New**'
  prefs: []
  type: TYPE_NORMAL
- en: '![../_images/new-excel-index.png](../Images/a628af99312aec6b62837d7d84324a39.png)'
  prefs: []
  type: TYPE_IMG
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Excel files saved in version 0.16.2 or prior that had index names will still
    able to be read in, but the `has_index_names` argument must specified to `True`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Google BigQuery enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Added ability to automatically create a table/dataset using the `pandas.io.gbq.to_gbq()`
    function if the destination table/dataset does not exist. ([GH 8325](https://github.com/pandas-dev/pandas/issues/8325),
    [GH 11121](https://github.com/pandas-dev/pandas/issues/11121)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added ability to replace an existing table and schema when calling the `pandas.io.gbq.to_gbq()`
    function via the `if_exists` argument. See the [docs](https://pandas-gbq.readthedocs.io/en/latest/writing.html)
    for more details ([GH 8325](https://github.com/pandas-dev/pandas/issues/8325)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`InvalidColumnOrder` and `InvalidPageToken` in the gbq module will raise `ValueError`
    instead of `IOError`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `generate_bq_schema()` function is now deprecated and will be removed in
    a future version ([GH 11121](https://github.com/pandas-dev/pandas/issues/11121))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The gbq module will now support Python 3 ([GH 11094](https://github.com/pandas-dev/pandas/issues/11094)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Display alignment with Unicode East Asian width'
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: Enabling this option will affect the performance for printing of `DataFrame`
    and `Series` (about 2 times slower). Use only when it is actually required.
  prefs: []
  type: TYPE_NORMAL
- en: Some East Asian countries use Unicode characters its width is corresponding
    to 2 alphabets. If a `DataFrame` or `Series` contains these characters, the default
    output cannot be aligned properly. The following options are added to enable precise
    handling for these characters.
  prefs: []
  type: TYPE_NORMAL
- en: '`display.unicode.east_asian_width`: Whether to use the Unicode East Asian Width
    to calculate the display text width. ([GH 2612](https://github.com/pandas-dev/pandas/issues/2612))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`display.unicode.ambiguous_as_wide`: Whether to handle Unicode characters belong
    to Ambiguous as Wide. ([GH 11102](https://github.com/pandas-dev/pandas/issues/11102))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: For further details, see [here](../user_guide/options.html#options-east-asian-width)
  prefs: []
  type: TYPE_NORMAL
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: Support for `openpyxl` >= 2.2\. The API for style support is now stable ([GH
    10125](https://github.com/pandas-dev/pandas/issues/10125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`merge` now accepts the argument `indicator` which adds a Categorical-type
    column (by default called `_merge`) to the output object that takes on the values
    ([GH 8790](https://github.com/pandas-dev/pandas/issues/8790))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Observation Origin | `_merge` value |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key only in `''left''` frame | `left_only` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key only in `''right''` frame | `right_only` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| Merge key in both frames | `both` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '[PRE106]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: For more, see the [updated docs](../user_guide/merging.html#merging-indicator)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd.to_numeric` is a new function to coerce strings to numbers (possibly with
    coercion) ([GH 11133](https://github.com/pandas-dev/pandas/issues/11133))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.merge` will now allow duplicate column names if they are not merged upon
    ([GH 10639](https://github.com/pandas-dev/pandas/issues/10639)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.pivot` will now allow passing index as `None` ([GH 3962](https://github.com/pandas-dev/pandas/issues/3962)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.concat` will now use existing Series names if provided ([GH 10698](https://github.com/pandas-dev/pandas/issues/10698)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'New behavior:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`DataFrame` has gained the `nlargest` and `nsmallest` methods ([GH 10393](https://github.com/pandas-dev/pandas/issues/10393))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a `limit_direction` keyword argument that works with `limit` to enable `interpolate`
    to fill `NaN` values forward, backward, or both ([GH 9218](https://github.com/pandas-dev/pandas/issues/9218),
    [GH 10420](https://github.com/pandas-dev/pandas/issues/10420), [GH 11115](https://github.com/pandas-dev/pandas/issues/11115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Added a `DataFrame.round` method to round the values to a variable number of
    decimal places ([GH 10568](https://github.com/pandas-dev/pandas/issues/10568)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`drop_duplicates` and `duplicated` now accept a `keep` keyword to target first,
    last, and all duplicates. The `take_last` keyword is deprecated, see [here](#whatsnew-0170-deprecations)
    ([GH 6511](https://github.com/pandas-dev/pandas/issues/6511), [GH 8505](https://github.com/pandas-dev/pandas/issues/8505))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Reindex now has a `tolerance` argument that allows for finer control of [Limits
    on filling while reindexing](../user_guide/basics.html#basics-limits-on-reindex-fill)
    ([GH 10411](https://github.com/pandas-dev/pandas/issues/10411)):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'When used on a `DatetimeIndex`, `TimedeltaIndex` or `PeriodIndex`, `tolerance`
    will coerced into a `Timedelta` if possible. This allows you to specify tolerance
    with a string:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`tolerance` is also exposed by the lower level `Index.get_indexer` and `Index.get_loc`
    methods.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Added functionality to use the `base` argument when resampling a `TimeDeltaIndex`
    ([GH 10530](https://github.com/pandas-dev/pandas/issues/10530))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex` can be instantiated using strings contains `NaT` ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`to_datetime` can now accept the `yearfirst` keyword ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pandas.tseries.offsets` larger than the `Day` offset can now be used with
    a `Series` for addition/subtraction ([GH 10699](https://github.com/pandas-dev/pandas/issues/10699)).
    See the [docs](../user_guide/timeseries.html#timeseries-offsetseries) for more
    details.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.Timedelta.total_seconds()` now returns Timedelta duration to ns precision
    (previously microsecond precision) ([GH 10939](https://github.com/pandas-dev/pandas/issues/10939))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PeriodIndex` now supports arithmetic with `np.ndarray` ([GH 10638](https://github.com/pandas-dev/pandas/issues/10638))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support pickling of `Period` objects ([GH 10439](https://github.com/pandas-dev/pandas/issues/10439))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.as_blocks` will now take a `copy` optional argument to return a copy of the
    data, default is to copy (no change in behavior from prior versions), ([GH 9607](https://github.com/pandas-dev/pandas/issues/9607))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`regex` argument to `DataFrame.filter` now handles numeric column names instead
    of raising `ValueError` ([GH 10384](https://github.com/pandas-dev/pandas/issues/10384)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable reading gzip compressed files via URL, either by explicitly setting the
    compression parameter or by inferring from the presence of the HTTP Content-Encoding
    header in the response ([GH 8685](https://github.com/pandas-dev/pandas/issues/8685))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable writing Excel files in [memory](../user_guide/io.html#io-excel-writing-buffer)
    using StringIO/BytesIO ([GH 7074](https://github.com/pandas-dev/pandas/issues/7074))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable serialization of lists and dicts to strings in `ExcelWriter` ([GH 8188](https://github.com/pandas-dev/pandas/issues/8188))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SQL io functions now accept a SQLAlchemy connectable. ([GH 7877](https://github.com/pandas-dev/pandas/issues/7877))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_sql` and `to_sql` can accept database URI as `con` parameter ([GH
    10214](https://github.com/pandas-dev/pandas/issues/10214))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`read_sql_table` will now allow reading from views ([GH 10750](https://github.com/pandas-dev/pandas/issues/10750)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable writing complex values to `HDFStores` when using the `table` format ([GH
    10447](https://github.com/pandas-dev/pandas/issues/10447))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable `pd.read_hdf` to be used without specifying a key when the HDF file contains
    a single dataset ([GH 10443](https://github.com/pandas-dev/pandas/issues/10443))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_stata` will now read Stata 118 type files. ([GH 9882](https://github.com/pandas-dev/pandas/issues/9882))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`msgpack` submodule has been updated to 0.4.6 with backward compatibility ([GH
    10581](https://github.com/pandas-dev/pandas/issues/10581))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.to_dict` now accepts `orient=''index''` keyword argument ([GH 10844](https://github.com/pandas-dev/pandas/issues/10844)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.apply` will return a Series of dicts if the passed function returns
    a dict and `reduce=True` ([GH 8735](https://github.com/pandas-dev/pandas/issues/8735)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow passing `kwargs` to the interpolation methods ([GH 10378](https://github.com/pandas-dev/pandas/issues/10378)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when concatenating an empty iterable of `Dataframe` objects
    ([GH 9157](https://github.com/pandas-dev/pandas/issues/9157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv` can now read bz2-compressed files incrementally, and the C parser
    can read bz2-compressed files from AWS S3 ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070),
    [GH 11072](https://github.com/pandas-dev/pandas/issues/11072)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In `pd.read_csv`, recognize `s3n://` and `s3a://` URLs as designating S3 file
    storage ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070), [GH 11071](https://github.com/pandas-dev/pandas/issues/11071)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Read CSV files from AWS S3 incrementally, instead of first downloading the entire
    file. (Full file download still required for compressed files in Python 2.) ([GH
    11070](https://github.com/pandas-dev/pandas/issues/11070), [GH 11073](https://github.com/pandas-dev/pandas/issues/11073))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd.read_csv` is now able to infer compression type for files read from AWS
    S3 storage ([GH 11070](https://github.com/pandas-dev/pandas/issues/11070), [GH
    11074](https://github.com/pandas-dev/pandas/issues/11074)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Backwards incompatible API changes'
  prefs: []
  type: TYPE_NORMAL
- en: '### Changes to sorting API'
  prefs: []
  type: TYPE_NORMAL
- en: The sorting API has had some longtime inconsistencies. ([GH 9816](https://github.com/pandas-dev/pandas/issues/9816),
    [GH 8239](https://github.com/pandas-dev/pandas/issues/8239)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a summary of the API **PRIOR** to 0.17.0:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Series.sort` is **INPLACE** while `DataFrame.sort` returns a new object.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.order` returns a new object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It was possible to use `Series/DataFrame.sort_index` to sort by **values** by
    passing the `by` keyword.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.sortlevel` worked only on a `MultiIndex` for sorting by index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To address these issues, we have revamped the API:'
  prefs: []
  type: TYPE_NORMAL
- en: We have introduced a new method, [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), which is the merger of `DataFrame.sort()`, `Series.sort()`,
    and `Series.order()`, to handle sorting of **values**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The existing methods `Series.sort()`, `Series.order()`, and `DataFrame.sort()`
    have been deprecated and will be removed in a future version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `by` argument of `DataFrame.sort_index()` has been deprecated and will be
    removed in a future version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The existing method `.sort_index()` will gain the `level` keyword to enable
    level sorting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We now have two distinct and non-overlapping methods of sorting. A `*` marks
    items that will show a `FutureWarning`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To sort by the **values**:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| * `Series.order()` | `Series.sort_values()` |'
  prefs: []
  type: TYPE_TB
- en: '| * `Series.sort()` | `Series.sort_values(inplace=True)` |'
  prefs: []
  type: TYPE_TB
- en: '| * `DataFrame.sort(columns=...)` | `DataFrame.sort_values(by=...)` |'
  prefs: []
  type: TYPE_TB
- en: 'To sort by the **index**:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.sort_index()` | `Series.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.sortlevel(level=...)` | `Series.sort_index(level=...`) |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.sort_index()` | `DataFrame.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.sortlevel(level=...)` | `DataFrame.sort_index(level=...)` |'
  prefs: []
  type: TYPE_TB
- en: '| * `DataFrame.sort()` | `DataFrame.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: We have also deprecated and changed similar methods in two Series-like classes,
    `Index` and `Categorical`.
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| * `Index.order()` | `Index.sort_values()` |'
  prefs: []
  type: TYPE_TB
- en: '| * `Categorical.order()` | `Categorical.sort_values()` |  ### Changes to to_datetime
    and to_timedelta'
  prefs: []
  type: TYPE_NORMAL
- en: Error handling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The default for `pd.to_datetime` error handling has changed to `errors='raise'`.
    In prior versions it was `errors='ignore'`. Furthermore, the `coerce` argument
    has been deprecated in favor of `errors='coerce'`. This means that invalid parsing
    will raise rather that return the original input as in previous versions. ([GH
    10636](https://github.com/pandas-dev/pandas/issues/10636))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE115]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE116]'
  prefs: []
  type: TYPE_PRE
- en: Of course you can coerce this as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE117]'
  prefs: []
  type: TYPE_PRE
- en: 'To keep the previous behavior, you can use `errors=''ignore''`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE118]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, `pd.to_timedelta` has gained a similar API, of `errors='raise'|'ignore'|'coerce'`,
    and the `coerce` keyword has been deprecated in favor of `errors='coerce'`.
  prefs: []
  type: TYPE_NORMAL
- en: Consistent parsing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The string parsing of `to_datetime`, `Timestamp` and `DatetimeIndex` has been
    made consistent. ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))
  prefs: []
  type: TYPE_NORMAL
- en: Prior to v0.17.0, `Timestamp` and `to_datetime` may parse year-only datetime-string
    incorrectly using today’s date, otherwise `DatetimeIndex` uses the beginning of
    the year. `Timestamp` and `to_datetime` may raise `ValueError` in some types of
    datetime-string which `DatetimeIndex` can parse, such as a quarterly string.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  prefs: []
  type: TYPE_PRE
- en: v0.17.0 can parse them as below. It works on `DatetimeIndex` also.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE120]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you want to perform calculations based on today’s date, use `Timestamp.now()`
    and `pandas.tseries.offsets`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE121]'
  prefs: []
  type: TYPE_PRE
- en: Changes to Index comparisons
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Operator equal on `Index` should behavior similarly to `Series` ([GH 9947](https://github.com/pandas-dev/pandas/issues/9947),
    [GH 10637](https://github.com/pandas-dev/pandas/issues/10637))
  prefs: []
  type: TYPE_NORMAL
- en: Starting in v0.17.0, comparing `Index` objects of different lengths will raise
    a `ValueError`. This is to be consistent with the behavior of `Series`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE122]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE123]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that this is different from the `numpy` behavior where a comparison can
    be broadcast:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE124]'
  prefs: []
  type: TYPE_PRE
- en: 'or it can return False if broadcasting can not be done:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE125]'
  prefs: []
  type: TYPE_PRE
- en: Changes to boolean comparisons vs. None
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Boolean comparisons of a `Series` vs `None` will now be equivalent to comparing
    with `np.nan`, rather than raise `TypeError`. ([GH 1079](https://github.com/pandas-dev/pandas/issues/1079)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE126]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE127]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE128]'
  prefs: []
  type: TYPE_PRE
- en: Usually you simply want to know which values are null.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: You generally will want to use `isnull/notnull` for these types of comparisons,
    as `isnull/notnull` tells you which elements are null. One has to be mindful that
    `nan's` don’t compare equal, but `None's` do. Note that pandas/numpy uses the
    fact that `np.nan != np.nan`, and treats `None` like `np.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  prefs: []
  type: TYPE_PRE
- en: '### HDFStore dropna behavior'
  prefs: []
  type: TYPE_NORMAL
- en: The default behavior for HDFStore write functions with `format='table'` is now
    to keep rows that are all missing. Previously, the behavior was to drop rows that
    were all missing save the index. The previous behavior can be replicated using
    the `dropna=True` option. ([GH 9382](https://github.com/pandas-dev/pandas/issues/9382))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE132]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  prefs: []
  type: TYPE_PRE
- en: 'See the [docs](../user_guide/io.html#io-hdf5) for more details.  ### Changes
    to `display.precision` option'
  prefs: []
  type: TYPE_NORMAL
- en: The `display.precision` option has been clarified to refer to decimal places
    ([GH 10451](https://github.com/pandas-dev/pandas/issues/10451)).
  prefs: []
  type: TYPE_NORMAL
- en: Earlier versions of pandas would format floating point numbers to have one less
    decimal place than the value in `display.precision`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  prefs: []
  type: TYPE_PRE
- en: If interpreting precision as “significant figures” this did work for scientific
    notation but that same interpretation did not work for values with standard formatting.
    It was also out of step with how numpy handles formatting.
  prefs: []
  type: TYPE_NORMAL
- en: Going forward the value of `display.precision` will directly control the number
    of places after the decimal, for regular formatting as well as scientific notation,
    similar to how numpy’s `precision` print option works.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  prefs: []
  type: TYPE_PRE
- en: 'To preserve output behavior with prior versions the default value of `display.precision`
    has been reduced to `6` from `7`.  ### Changes to `Categorical.unique`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Categorical.unique` now returns new `Categoricals` with `categories` and `codes`
    that are unique, rather than returning `np.array` ([GH 10508](https://github.com/pandas-dev/pandas/issues/10508))'
  prefs: []
  type: TYPE_NORMAL
- en: 'unordered category: values and categories are sorted by appearance order.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ordered category: values are sorted by appearance order, categories keep existing
    order.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE136]'
  prefs: []
  type: TYPE_PRE
- en: Changes to `bool` passed as `header` in parsers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In earlier versions of pandas, if a bool was passed the `header` argument of
    `read_csv`, `read_excel`, or `read_html` it was implicitly converted to an integer,
    resulting in `header=0` for `False` and `header=1` for `True` ([GH 6113](https://github.com/pandas-dev/pandas/issues/6113))
  prefs: []
  type: TYPE_NORMAL
- en: A `bool` input to `header` will now raise a `TypeError`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  prefs: []
  type: TYPE_PRE
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Line and kde plot with `subplots=True` now uses default colors, not all black.
    Specify `color='k'` to draw all lines in black ([GH 9894](https://github.com/pandas-dev/pandas/issues/9894))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling the `.value_counts()` method on a Series with a `categorical` dtype
    now returns a Series with a `CategoricalIndex` ([GH 10704](https://github.com/pandas-dev/pandas/issues/10704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The metadata properties of subclasses of pandas objects will now be serialized
    ([GH 10553](https://github.com/pandas-dev/pandas/issues/10553)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`groupby` using `Categorical` follows the same rule as `Categorical.unique`
    described above ([GH 10508](https://github.com/pandas-dev/pandas/issues/10508))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When constructing `DataFrame` with an array of `complex64` dtype previously
    meant the corresponding column was automatically promoted to the `complex128`
    dtype. pandas will now preserve the itemsize of the input for complex data ([GH
    10952](https://github.com/pandas-dev/pandas/issues/10952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: some numeric reduction operators would return `ValueError`, rather than `TypeError`
    on object types that includes strings and numbers ([GH 11131](https://github.com/pandas-dev/pandas/issues/11131))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing currently unsupported `chunksize` argument to `read_excel` or `ExcelFile.parse`
    will now raise `NotImplementedError` ([GH 8011](https://github.com/pandas-dev/pandas/issues/8011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow an `ExcelFile` object to be passed into `read_excel` ([GH 11198](https://github.com/pandas-dev/pandas/issues/11198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.union` does not infer `freq` if `self` and the input have `None`
    as `freq` ([GH 11086](https://github.com/pandas-dev/pandas/issues/11086))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT`’s methods now either raise `ValueError`, or return `np.nan` or `NaT`
    ([GH 9513](https://github.com/pandas-dev/pandas/issues/9513))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Behavior | Methods |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `np.nan` | `weekday`, `isoweekday` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `NaT` | `date`, `now`, `replace`, `to_datetime`, `today` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `np.datetime64(''NaT'')` | `to_datetime64` (unchanged) |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| raise `ValueError` | All other public methods (names not beginning with underscores)
    |  ### Deprecations'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For `Series` the following indexing functions are deprecated ([GH 10177](https://github.com/pandas-dev/pandas/issues/10177)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Deprecated Function | Replacement |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.irow(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget_value(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: For `DataFrame` the following indexing functions are deprecated ([GH 10177](https://github.com/pandas-dev/pandas/issues/10177)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Deprecated Function | Replacement |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.irow(i)` | `.iloc[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget_value(i, j)` | `.iloc[i, j]` or `.iat[i, j]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.icol(j)` | `.iloc[:, j]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: These indexing function have been deprecated in the documentation since 0.11.0.
  prefs: []
  type: TYPE_NORMAL
- en: '`Categorical.name` was deprecated to make `Categorical` more `numpy.ndarray`
    like. Use `Series(cat, name="whatever")` instead ([GH 10482](https://github.com/pandas-dev/pandas/issues/10482)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting missing values (NaN) in a `Categorical`’s `categories` will issue a
    warning ([GH 10748](https://github.com/pandas-dev/pandas/issues/10748)). You can
    still have missing values in the `values`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`drop_duplicates` and `duplicated`’s `take_last` keyword was deprecated in
    favor of `keep`. ([GH 6511](https://github.com/pandas-dev/pandas/issues/6511),
    [GH 8505](https://github.com/pandas-dev/pandas/issues/8505))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.nsmallest` and `nlargest`’s `take_last` keyword was deprecated in favor
    of `keep`. ([GH 10792](https://github.com/pandas-dev/pandas/issues/10792))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.combineAdd` and `DataFrame.combineMult` are deprecated. They can
    easily be replaced by using the `add` and `mul` methods: `DataFrame.add(other,
    fill_value=0)` and `DataFrame.mul(other, fill_value=1.)` ([GH 10735](https://github.com/pandas-dev/pandas/issues/10735)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimeSeries` deprecated in favor of `Series` (note that this has been an alias
    since 0.13.0), ([GH 10890](https://github.com/pandas-dev/pandas/issues/10890))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparsePanel` deprecated and will be removed in a future version ([GH 11157](https://github.com/pandas-dev/pandas/issues/11157)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.is_time_series` deprecated in favor of `Series.index.is_all_dates`
    ([GH 11135](https://github.com/pandas-dev/pandas/issues/11135))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Legacy offsets (like `'A@JAN'`) are deprecated (note that this has been alias
    since 0.8.0) ([GH 10878](https://github.com/pandas-dev/pandas/issues/10878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`WidePanel` deprecated in favor of `Panel`, `LongPanel` in favor of `DataFrame`
    (note these have been aliases since < 0.11.0), ([GH 10892](https://github.com/pandas-dev/pandas/issues/10892))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.convert_objects` has been deprecated in favor of type-specific functions
    `pd.to_datetime`, `pd.to_timestamp` and `pd.to_numeric` (new in 0.17.0) ([GH 11133](https://github.com/pandas-dev/pandas/issues/11133)).  ###
    Removal of prior version deprecations/changes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of `na_last` parameters from `Series.order()` and `Series.sort()`, in
    favor of `na_position`. ([GH 5231](https://github.com/pandas-dev/pandas/issues/5231))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove of `percentile_width` from `.describe()`, in favor of `percentiles`.
    ([GH 7088](https://github.com/pandas-dev/pandas/issues/7088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of `colSpace` parameter from `DataFrame.to_string()`, in favor of `col_space`,
    circa 0.8.0 version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of automatic time-series broadcasting ([GH 2304](https://github.com/pandas-dev/pandas/issues/2304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE138]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Previously
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE139]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Current
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE140]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Remove `table` keyword in `HDFStore.put/append`, in favor of using `format=`
    ([GH 4645](https://github.com/pandas-dev/pandas/issues/4645))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `kind` in `read_excel/ExcelFile` as its unused ([GH 4712](https://github.com/pandas-dev/pandas/issues/4712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `infer_type` keyword from `pd.read_html` as its unused ([GH 4770](https://github.com/pandas-dev/pandas/issues/4770),
    [GH 7032](https://github.com/pandas-dev/pandas/issues/7032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `offset` and `timeRule` keywords from `Series.tshift/shift`, in favor
    of `freq` ([GH 4853](https://github.com/pandas-dev/pandas/issues/4853), [GH 4864](https://github.com/pandas-dev/pandas/issues/4864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Remove `pd.load/pd.save` aliases in favor of `pd.to_pickle/pd.read_pickle`
    ([GH 3787](https://github.com/pandas-dev/pandas/issues/3787))  ### Changes to
    sorting API'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The sorting API has had some longtime inconsistencies. ([GH 9816](https://github.com/pandas-dev/pandas/issues/9816),
    [GH 8239](https://github.com/pandas-dev/pandas/issues/8239)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a summary of the API **PRIOR** to 0.17.0:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Series.sort` is **INPLACE** while `DataFrame.sort` returns a new object.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.order` returns a new object'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It was possible to use `Series/DataFrame.sort_index` to sort by **values** by
    passing the `by` keyword.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series/DataFrame.sortlevel` worked only on a `MultiIndex` for sorting by index.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To address these issues, we have revamped the API:'
  prefs: []
  type: TYPE_NORMAL
- en: We have introduced a new method, [`DataFrame.sort_values()`](../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), which is the merger of `DataFrame.sort()`, `Series.sort()`,
    and `Series.order()`, to handle sorting of **values**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The existing methods `Series.sort()`, `Series.order()`, and `DataFrame.sort()`
    have been deprecated and will be removed in a future version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `by` argument of `DataFrame.sort_index()` has been deprecated and will be
    removed in a future version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The existing method `.sort_index()` will gain the `level` keyword to enable
    level sorting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We now have two distinct and non-overlapping methods of sorting. A `*` marks
    items that will show a `FutureWarning`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To sort by the **values**:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| * `Series.order()` | `Series.sort_values()` |'
  prefs: []
  type: TYPE_TB
- en: '| * `Series.sort()` | `Series.sort_values(inplace=True)` |'
  prefs: []
  type: TYPE_TB
- en: '| * `DataFrame.sort(columns=...)` | `DataFrame.sort_values(by=...)` |'
  prefs: []
  type: TYPE_TB
- en: 'To sort by the **index**:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.sort_index()` | `Series.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.sortlevel(level=...)` | `Series.sort_index(level=...`) |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.sort_index()` | `DataFrame.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.sortlevel(level=...)` | `DataFrame.sort_index(level=...)` |'
  prefs: []
  type: TYPE_TB
- en: '| * `DataFrame.sort()` | `DataFrame.sort_index()` |'
  prefs: []
  type: TYPE_TB
- en: We have also deprecated and changed similar methods in two Series-like classes,
    `Index` and `Categorical`.
  prefs: []
  type: TYPE_NORMAL
- en: '| Previous | Replacement |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| * `Index.order()` | `Index.sort_values()` |'
  prefs: []
  type: TYPE_TB
- en: '| * `Categorical.order()` | `Categorical.sort_values()` |'
  prefs: []
  type: TYPE_TB
- en: '### Changes to to_datetime and to_timedelta'
  prefs: []
  type: TYPE_NORMAL
- en: Error handling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The default for `pd.to_datetime` error handling has changed to `errors='raise'`.
    In prior versions it was `errors='ignore'`. Furthermore, the `coerce` argument
    has been deprecated in favor of `errors='coerce'`. This means that invalid parsing
    will raise rather that return the original input as in previous versions. ([GH
    10636](https://github.com/pandas-dev/pandas/issues/10636))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE141]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  prefs: []
  type: TYPE_PRE
- en: Of course you can coerce this as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  prefs: []
  type: TYPE_PRE
- en: 'To keep the previous behavior, you can use `errors=''ignore''`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, `pd.to_timedelta` has gained a similar API, of `errors='raise'|'ignore'|'coerce'`,
    and the `coerce` keyword has been deprecated in favor of `errors='coerce'`.
  prefs: []
  type: TYPE_NORMAL
- en: Consistent parsing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The string parsing of `to_datetime`, `Timestamp` and `DatetimeIndex` has been
    made consistent. ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))
  prefs: []
  type: TYPE_NORMAL
- en: Prior to v0.17.0, `Timestamp` and `to_datetime` may parse year-only datetime-string
    incorrectly using today’s date, otherwise `DatetimeIndex` uses the beginning of
    the year. `Timestamp` and `to_datetime` may raise `ValueError` in some types of
    datetime-string which `DatetimeIndex` can parse, such as a quarterly string.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  prefs: []
  type: TYPE_PRE
- en: v0.17.0 can parse them as below. It works on `DatetimeIndex` also.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE146]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you want to perform calculations based on today’s date, use `Timestamp.now()`
    and `pandas.tseries.offsets`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  prefs: []
  type: TYPE_PRE
- en: Error handling
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The default for `pd.to_datetime` error handling has changed to `errors='raise'`.
    In prior versions it was `errors='ignore'`. Furthermore, the `coerce` argument
    has been deprecated in favor of `errors='coerce'`. This means that invalid parsing
    will raise rather that return the original input as in previous versions. ([GH
    10636](https://github.com/pandas-dev/pandas/issues/10636))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE149]'
  prefs: []
  type: TYPE_PRE
- en: Of course you can coerce this as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  prefs: []
  type: TYPE_PRE
- en: 'To keep the previous behavior, you can use `errors=''ignore''`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE151]'
  prefs: []
  type: TYPE_PRE
- en: Furthermore, `pd.to_timedelta` has gained a similar API, of `errors='raise'|'ignore'|'coerce'`,
    and the `coerce` keyword has been deprecated in favor of `errors='coerce'`.
  prefs: []
  type: TYPE_NORMAL
- en: Consistent parsing
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The string parsing of `to_datetime`, `Timestamp` and `DatetimeIndex` has been
    made consistent. ([GH 7599](https://github.com/pandas-dev/pandas/issues/7599))
  prefs: []
  type: TYPE_NORMAL
- en: Prior to v0.17.0, `Timestamp` and `to_datetime` may parse year-only datetime-string
    incorrectly using today’s date, otherwise `DatetimeIndex` uses the beginning of
    the year. `Timestamp` and `to_datetime` may raise `ValueError` in some types of
    datetime-string which `DatetimeIndex` can parse, such as a quarterly string.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE152]'
  prefs: []
  type: TYPE_PRE
- en: v0.17.0 can parse them as below. It works on `DatetimeIndex` also.
  prefs: []
  type: TYPE_NORMAL
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you want to perform calculations based on today’s date, use `Timestamp.now()`
    and `pandas.tseries.offsets`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE154]'
  prefs: []
  type: TYPE_PRE
- en: Changes to Index comparisons
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Operator equal on `Index` should behavior similarly to `Series` ([GH 9947](https://github.com/pandas-dev/pandas/issues/9947),
    [GH 10637](https://github.com/pandas-dev/pandas/issues/10637))
  prefs: []
  type: TYPE_NORMAL
- en: Starting in v0.17.0, comparing `Index` objects of different lengths will raise
    a `ValueError`. This is to be consistent with the behavior of `Series`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE155]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE156]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that this is different from the `numpy` behavior where a comparison can
    be broadcast:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE157]'
  prefs: []
  type: TYPE_PRE
- en: 'or it can return False if broadcasting can not be done:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE158]'
  prefs: []
  type: TYPE_PRE
- en: Changes to boolean comparisons vs. None
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Boolean comparisons of a `Series` vs `None` will now be equivalent to comparing
    with `np.nan`, rather than raise `TypeError`. ([GH 1079](https://github.com/pandas-dev/pandas/issues/1079)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE159]'
  prefs: []
  type: TYPE_PRE
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE160]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  prefs: []
  type: TYPE_PRE
- en: Usually you simply want to know which values are null.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE162]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: You generally will want to use `isnull/notnull` for these types of comparisons,
    as `isnull/notnull` tells you which elements are null. One has to be mindful that
    `nan's` don’t compare equal, but `None's` do. Note that pandas/numpy uses the
    fact that `np.nan != np.nan`, and treats `None` like `np.nan`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE163]'
  prefs: []
  type: TYPE_PRE
- en: '### HDFStore dropna behavior'
  prefs: []
  type: TYPE_NORMAL
- en: The default behavior for HDFStore write functions with `format='table'` is now
    to keep rows that are all missing. Previously, the behavior was to drop rows that
    were all missing save the index. The previous behavior can be replicated using
    the `dropna=True` option. ([GH 9382](https://github.com/pandas-dev/pandas/issues/9382))
  prefs: []
  type: TYPE_NORMAL
- en: 'Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE164]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE165]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE166]'
  prefs: []
  type: TYPE_PRE
- en: See the [docs](../user_guide/io.html#io-hdf5) for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '### Changes to `display.precision` option'
  prefs: []
  type: TYPE_NORMAL
- en: The `display.precision` option has been clarified to refer to decimal places
    ([GH 10451](https://github.com/pandas-dev/pandas/issues/10451)).
  prefs: []
  type: TYPE_NORMAL
- en: Earlier versions of pandas would format floating point numbers to have one less
    decimal place than the value in `display.precision`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE167]'
  prefs: []
  type: TYPE_PRE
- en: If interpreting precision as “significant figures” this did work for scientific
    notation but that same interpretation did not work for values with standard formatting.
    It was also out of step with how numpy handles formatting.
  prefs: []
  type: TYPE_NORMAL
- en: Going forward the value of `display.precision` will directly control the number
    of places after the decimal, for regular formatting as well as scientific notation,
    similar to how numpy’s `precision` print option works.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE168]'
  prefs: []
  type: TYPE_PRE
- en: To preserve output behavior with prior versions the default value of `display.precision`
    has been reduced to `6` from `7`.
  prefs: []
  type: TYPE_NORMAL
- en: '### Changes to `Categorical.unique`'
  prefs: []
  type: TYPE_NORMAL
- en: '`Categorical.unique` now returns new `Categoricals` with `categories` and `codes`
    that are unique, rather than returning `np.array` ([GH 10508](https://github.com/pandas-dev/pandas/issues/10508))'
  prefs: []
  type: TYPE_NORMAL
- en: 'unordered category: values and categories are sorted by appearance order.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ordered category: values are sorted by appearance order, categories keep existing
    order.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE169]'
  prefs: []
  type: TYPE_PRE
- en: Changes to `bool` passed as `header` in parsers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In earlier versions of pandas, if a bool was passed the `header` argument of
    `read_csv`, `read_excel`, or `read_html` it was implicitly converted to an integer,
    resulting in `header=0` for `False` and `header=1` for `True` ([GH 6113](https://github.com/pandas-dev/pandas/issues/6113))
  prefs: []
  type: TYPE_NORMAL
- en: A `bool` input to `header` will now raise a `TypeError`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE170]'
  prefs: []
  type: TYPE_PRE
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: Line and kde plot with `subplots=True` now uses default colors, not all black.
    Specify `color='k'` to draw all lines in black ([GH 9894](https://github.com/pandas-dev/pandas/issues/9894))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling the `.value_counts()` method on a Series with a `categorical` dtype
    now returns a Series with a `CategoricalIndex` ([GH 10704](https://github.com/pandas-dev/pandas/issues/10704))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The metadata properties of subclasses of pandas objects will now be serialized
    ([GH 10553](https://github.com/pandas-dev/pandas/issues/10553)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`groupby` using `Categorical` follows the same rule as `Categorical.unique`
    described above ([GH 10508](https://github.com/pandas-dev/pandas/issues/10508))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When constructing `DataFrame` with an array of `complex64` dtype previously
    meant the corresponding column was automatically promoted to the `complex128`
    dtype. pandas will now preserve the itemsize of the input for complex data ([GH
    10952](https://github.com/pandas-dev/pandas/issues/10952))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: some numeric reduction operators would return `ValueError`, rather than `TypeError`
    on object types that includes strings and numbers ([GH 11131](https://github.com/pandas-dev/pandas/issues/11131))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passing currently unsupported `chunksize` argument to `read_excel` or `ExcelFile.parse`
    will now raise `NotImplementedError` ([GH 8011](https://github.com/pandas-dev/pandas/issues/8011))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow an `ExcelFile` object to be passed into `read_excel` ([GH 11198](https://github.com/pandas-dev/pandas/issues/11198))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DatetimeIndex.union` does not infer `freq` if `self` and the input have `None`
    as `freq` ([GH 11086](https://github.com/pandas-dev/pandas/issues/11086))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NaT`’s methods now either raise `ValueError`, or return `np.nan` or `NaT`
    ([GH 9513](https://github.com/pandas-dev/pandas/issues/9513))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Behavior | Methods |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `np.nan` | `weekday`, `isoweekday` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `NaT` | `date`, `now`, `replace`, `to_datetime`, `today` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| return `np.datetime64(''NaT'')` | `to_datetime64` (unchanged) |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| raise `ValueError` | All other public methods (names not beginning with underscores)
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '### Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: For `Series` the following indexing functions are deprecated ([GH 10177](https://github.com/pandas-dev/pandas/issues/10177)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Deprecated Function | Replacement |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.irow(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget_value(i)` | `.iloc[i]` or `.iat[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: For `DataFrame` the following indexing functions are deprecated ([GH 10177](https://github.com/pandas-dev/pandas/issues/10177)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Deprecated Function | Replacement |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.irow(i)` | `.iloc[i]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.iget_value(i, j)` | `.iloc[i, j]` or `.iat[i, j]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| `.icol(j)` | `.iloc[:, j]` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: These indexing function have been deprecated in the documentation since 0.11.0.
  prefs: []
  type: TYPE_NORMAL
- en: '`Categorical.name` was deprecated to make `Categorical` more `numpy.ndarray`
    like. Use `Series(cat, name="whatever")` instead ([GH 10482](https://github.com/pandas-dev/pandas/issues/10482)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting missing values (NaN) in a `Categorical`’s `categories` will issue a
    warning ([GH 10748](https://github.com/pandas-dev/pandas/issues/10748)). You can
    still have missing values in the `values`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`drop_duplicates` and `duplicated`’s `take_last` keyword was deprecated in
    favor of `keep`. ([GH 6511](https://github.com/pandas-dev/pandas/issues/6511),
    [GH 8505](https://github.com/pandas-dev/pandas/issues/8505))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.nsmallest` and `nlargest`’s `take_last` keyword was deprecated in favor
    of `keep`. ([GH 10792](https://github.com/pandas-dev/pandas/issues/10792))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.combineAdd` and `DataFrame.combineMult` are deprecated. They can
    easily be replaced by using the `add` and `mul` methods: `DataFrame.add(other,
    fill_value=0)` and `DataFrame.mul(other, fill_value=1.)` ([GH 10735](https://github.com/pandas-dev/pandas/issues/10735)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TimeSeries` deprecated in favor of `Series` (note that this has been an alias
    since 0.13.0), ([GH 10890](https://github.com/pandas-dev/pandas/issues/10890))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SparsePanel` deprecated and will be removed in a future version ([GH 11157](https://github.com/pandas-dev/pandas/issues/11157)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Series.is_time_series` deprecated in favor of `Series.index.is_all_dates`
    ([GH 11135](https://github.com/pandas-dev/pandas/issues/11135))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Legacy offsets (like `'A@JAN'`) are deprecated (note that this has been alias
    since 0.8.0) ([GH 10878](https://github.com/pandas-dev/pandas/issues/10878))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`WidePanel` deprecated in favor of `Panel`, `LongPanel` in favor of `DataFrame`
    (note these have been aliases since < 0.11.0), ([GH 10892](https://github.com/pandas-dev/pandas/issues/10892))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DataFrame.convert_objects` has been deprecated in favor of type-specific functions
    `pd.to_datetime`, `pd.to_timestamp` and `pd.to_numeric` (new in 0.17.0) ([GH 11133](https://github.com/pandas-dev/pandas/issues/11133)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Removal of prior version deprecations/changes'
  prefs: []
  type: TYPE_NORMAL
- en: Removal of `na_last` parameters from `Series.order()` and `Series.sort()`, in
    favor of `na_position`. ([GH 5231](https://github.com/pandas-dev/pandas/issues/5231))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove of `percentile_width` from `.describe()`, in favor of `percentiles`.
    ([GH 7088](https://github.com/pandas-dev/pandas/issues/7088))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of `colSpace` parameter from `DataFrame.to_string()`, in favor of `col_space`,
    circa 0.8.0 version.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removal of automatic time-series broadcasting ([GH 2304](https://github.com/pandas-dev/pandas/issues/2304))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE171]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Previously
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE172]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Current
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE173]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Remove `table` keyword in `HDFStore.put/append`, in favor of using `format=`
    ([GH 4645](https://github.com/pandas-dev/pandas/issues/4645))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `kind` in `read_excel/ExcelFile` as its unused ([GH 4712](https://github.com/pandas-dev/pandas/issues/4712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `infer_type` keyword from `pd.read_html` as its unused ([GH 4770](https://github.com/pandas-dev/pandas/issues/4770),
    [GH 7032](https://github.com/pandas-dev/pandas/issues/7032))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `offset` and `timeRule` keywords from `Series.tshift/shift`, in favor
    of `freq` ([GH 4853](https://github.com/pandas-dev/pandas/issues/4853), [GH 4864](https://github.com/pandas-dev/pandas/issues/4864))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove `pd.load/pd.save` aliases in favor of `pd.to_pickle/pd.read_pickle` ([GH
    3787](https://github.com/pandas-dev/pandas/issues/3787))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Development support for benchmarking with the [Air Speed Velocity library](https://github.com/spacetelescope/asv/)
    ([GH 8361](https://github.com/pandas-dev/pandas/issues/8361))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added vbench benchmarks for alternative ExcelWriter engines and reading Excel
    files ([GH 7171](https://github.com/pandas-dev/pandas/issues/7171))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in `Categorical.value_counts` ([GH 10804](https://github.com/pandas-dev/pandas/issues/10804))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in `SeriesGroupBy.nunique` and `SeriesGroupBy.value_counts`
    and `SeriesGroupby.transform` ([GH 10820](https://github.com/pandas-dev/pandas/issues/10820),
    [GH 11077](https://github.com/pandas-dev/pandas/issues/11077))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in `DataFrame.drop_duplicates` with integer dtypes
    ([GH 10917](https://github.com/pandas-dev/pandas/issues/10917))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in `DataFrame.duplicated` with wide frames. ([GH 10161](https://github.com/pandas-dev/pandas/issues/10161),
    [GH 11180](https://github.com/pandas-dev/pandas/issues/11180))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 4x improvement in `timedelta` string parsing ([GH 6755](https://github.com/pandas-dev/pandas/issues/6755),
    [GH 10426](https://github.com/pandas-dev/pandas/issues/10426))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8x improvement in `timedelta64` and `datetime64` ops ([GH 6755](https://github.com/pandas-dev/pandas/issues/6755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significantly improved performance of indexing `MultiIndex` with slicers ([GH
    10287](https://github.com/pandas-dev/pandas/issues/10287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 8x improvement in `iloc` using list-like input ([GH 10791](https://github.com/pandas-dev/pandas/issues/10791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `Series.isin` for datetimelike/integer Series ([GH 10287](https://github.com/pandas-dev/pandas/issues/10287))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 20x improvement in `concat` of Categoricals when categories are identical ([GH
    10587](https://github.com/pandas-dev/pandas/issues/10587))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved performance of `to_datetime` when specified format string is ISO8601
    ([GH 10178](https://github.com/pandas-dev/pandas/issues/10178))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2x improvement of `Series.value_counts` for float dtype ([GH 10821](https://github.com/pandas-dev/pandas/issues/10821))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable `infer_datetime_format` in `to_datetime` when date components do not
    have 0 padding ([GH 11142](https://github.com/pandas-dev/pandas/issues/11142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regression from 0.16.1 in constructing `DataFrame` from nested dictionary ([GH
    11084](https://github.com/pandas-dev/pandas/issues/11084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements in addition/subtraction operations for `DateOffset`
    with `Series` or `DatetimeIndex` ([GH 10744](https://github.com/pandas-dev/pandas/issues/10744),
    [GH 11205](https://github.com/pandas-dev/pandas/issues/11205))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Bug in incorrect computation of `.mean()` on `timedelta64[ns]` because of overflow
    ([GH 9442](https://github.com/pandas-dev/pandas/issues/9442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.isin` on older numpies ([GH 11232](https://github.com/pandas-dev/pandas/issues/11232))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_html(index=False)` renders unnecessary `name` row ([GH
    10344](https://github.com/pandas-dev/pandas/issues/10344))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.to_latex()` the `column_format` argument could not be passed
    ([GH 9402](https://github.com/pandas-dev/pandas/issues/9402))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex` when localizing with `NaT` ([GH 10477](https://github.com/pandas-dev/pandas/issues/10477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.dt` ops in preserving meta-data ([GH 10477](https://github.com/pandas-dev/pandas/issues/10477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in preserving `NaT` when passed in an otherwise invalid `to_datetime` construction
    ([GH 10477](https://github.com/pandas-dev/pandas/issues/10477))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.apply` when function returns categorical series. ([GH 9573](https://github.com/pandas-dev/pandas/issues/9573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_datetime` with invalid dates and formats supplied ([GH 10154](https://github.com/pandas-dev/pandas/issues/10154))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.drop_duplicates` dropping name(s) ([GH 10115](https://github.com/pandas-dev/pandas/issues/10115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.quantile` dropping name ([GH 10881](https://github.com/pandas-dev/pandas/issues/10881))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.Series` when setting a value on an empty `Series` whose index has
    a frequency. ([GH 10193](https://github.com/pandas-dev/pandas/issues/10193))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.Series.interpolate` with invalid `order` keyword values. ([GH 10633](https://github.com/pandas-dev/pandas/issues/10633))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.plot` raises `ValueError` when color name is specified by
    multiple characters ([GH 10387](https://github.com/pandas-dev/pandas/issues/10387))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` construction with a mixed list of tuples ([GH 10697](https://github.com/pandas-dev/pandas/issues/10697))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.reset_index` when index contains `NaT`. ([GH 10388](https://github.com/pandas-dev/pandas/issues/10388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `ExcelReader` when worksheet is empty ([GH 6403](https://github.com/pandas-dev/pandas/issues/6403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `BinGrouper.group_info` where returned values are not compatible with
    base class ([GH 10914](https://github.com/pandas-dev/pandas/issues/10914))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in clearing the cache on `DataFrame.pop` and a subsequent inplace op ([GH
    10912](https://github.com/pandas-dev/pandas/issues/10912))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a mixed-integer `Index` causing an `ImportError` ([GH 10610](https://github.com/pandas-dev/pandas/issues/10610))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.count` when index has nulls ([GH 10946](https://github.com/pandas-dev/pandas/issues/10946))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in pickling of a non-regular freq `DatetimeIndex` ([GH 11002](https://github.com/pandas-dev/pandas/issues/11002))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug causing `DataFrame.where` to not respect the `axis` parameter when the frame
    has a symmetric shape. ([GH 9736](https://github.com/pandas-dev/pandas/issues/9736))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Table.select_column` where name is not preserved ([GH 10392](https://github.com/pandas-dev/pandas/issues/10392))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `offsets.generate_range` where `start` and `end` have finer precision
    than `offset` ([GH 9907](https://github.com/pandas-dev/pandas/issues/9907))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.rolling_*` where `Series.name` would be lost in the output ([GH 10565](https://github.com/pandas-dev/pandas/issues/10565))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `stack` when index or columns are not unique. ([GH 10417](https://github.com/pandas-dev/pandas/issues/10417))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting a `Panel` when an axis has a MultiIndex ([GH 10360](https://github.com/pandas-dev/pandas/issues/10360))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `USFederalHolidayCalendar` where `USMemorialDay` and `USMartinLutherKingJr`
    were incorrect ([GH 10278](https://github.com/pandas-dev/pandas/issues/10278)
    and [GH 9760](https://github.com/pandas-dev/pandas/issues/9760) )
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.sample()` where returned object, if set, gives unnecessary `SettingWithCopyWarning`
    ([GH 10738](https://github.com/pandas-dev/pandas/issues/10738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.sample()` where weights passed as `Series` were not aligned along axis
    before being treated positionally, potentially causing problems if weight indices
    were not aligned with sampled object. ([GH 10738](https://github.com/pandas-dev/pandas/issues/10738))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regression fixed in ([GH 9311](https://github.com/pandas-dev/pandas/issues/9311),
    [GH 6620](https://github.com/pandas-dev/pandas/issues/6620), [GH 9345](https://github.com/pandas-dev/pandas/issues/9345)),
    where groupby with a datetime-like converting to float with certain aggregators
    ([GH 10979](https://github.com/pandas-dev/pandas/issues/10979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.interpolate` with `axis=1` and `inplace=True` ([GH 10395](https://github.com/pandas-dev/pandas/issues/10395))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `io.sql.get_schema` when specifying multiple columns as primary key ([GH
    10385](https://github.com/pandas-dev/pandas/issues/10385)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby(sort=False)` with datetime-like `Categorical` raises `ValueError`
    ([GH 10505](https://github.com/pandas-dev/pandas/issues/10505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby(axis=1)` with `filter()` throws `IndexError` ([GH 11041](https://github.com/pandas-dev/pandas/issues/11041))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `test_categorical` on big-endian builds ([GH 10425](https://github.com/pandas-dev/pandas/issues/10425))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.shift` and `DataFrame.shift` not supporting categorical data
    ([GH 9416](https://github.com/pandas-dev/pandas/issues/9416))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.map` using categorical `Series` raises `AttributeError` ([GH
    10324](https://github.com/pandas-dev/pandas/issues/10324))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `MultiIndex.get_level_values` including `Categorical` raises `AttributeError`
    ([GH 10460](https://github.com/pandas-dev/pandas/issues/10460))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.get_dummies` with `sparse=True` not returning `SparseDataFrame` ([GH
    10531](https://github.com/pandas-dev/pandas/issues/10531))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` subtypes (such as `PeriodIndex`) not returning their own type
    for `.drop` and `.insert` methods ([GH 10620](https://github.com/pandas-dev/pandas/issues/10620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `algos.outer_join_indexer` when `right` array is empty ([GH 10618](https://github.com/pandas-dev/pandas/issues/10618))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `filter` (regression from 0.16.0) and `transform` when grouping on multiple
    keys, one of which is datetime-like ([GH 10114](https://github.com/pandas-dev/pandas/issues/10114))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_datetime` and `to_timedelta` causing `Index` name to be lost ([GH
    10875](https://github.com/pandas-dev/pandas/issues/10875))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `len(DataFrame.groupby)` causing `IndexError` when there’s a column containing
    only NaNs ([GH 11016](https://github.com/pandas-dev/pandas/issues/11016))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug that caused segfault when resampling an empty Series ([GH 10228](https://github.com/pandas-dev/pandas/issues/10228))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex` and `PeriodIndex.value_counts` resets name from its result,
    but retains in result’s `Index`. ([GH 10150](https://github.com/pandas-dev/pandas/issues/10150))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.eval` using `numexpr` engine coerces 1 element numpy array to scalar
    ([GH 10546](https://github.com/pandas-dev/pandas/issues/10546))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.concat` with `axis=0` when column is of dtype `category` ([GH 10177](https://github.com/pandas-dev/pandas/issues/10177))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack` where input type is not always checked ([GH 10369](https://github.com/pandas-dev/pandas/issues/10369),
    [GH 10630](https://github.com/pandas-dev/pandas/issues/10630))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.read_csv` with kwargs `index_col=False`, `index_col=['a', 'b']` or
    `dtype` ([GH 10413](https://github.com/pandas-dev/pandas/issues/10413), [GH 10467](https://github.com/pandas-dev/pandas/issues/10467),
    [GH 10577](https://github.com/pandas-dev/pandas/issues/10577))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.from_csv` with `header` kwarg not setting the `Series.name` or
    the `Series.index.name` ([GH 10483](https://github.com/pandas-dev/pandas/issues/10483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby.var` which caused variance to be inaccurate for small float
    values ([GH 10448](https://github.com/pandas-dev/pandas/issues/10448))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.plot(kind='hist')` Y Label not informative ([GH 10485](https://github.com/pandas-dev/pandas/issues/10485))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_csv` when using a converter which generates a `uint8` type ([GH
    9266](https://github.com/pandas-dev/pandas/issues/9266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug causes memory leak in time-series line and area plot ([GH 9003](https://github.com/pandas-dev/pandas/issues/9003))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when setting a `Panel` sliced along the major or minor axes when the right-hand
    side is a `DataFrame` ([GH 11014](https://github.com/pandas-dev/pandas/issues/11014))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug that returns `None` and does not raise `NotImplementedError` when operator
    functions (e.g. `.add`) of `Panel` are not implemented ([GH 7692](https://github.com/pandas-dev/pandas/issues/7692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in line and kde plot cannot accept multiple colors when `subplots=True`
    ([GH 9894](https://github.com/pandas-dev/pandas/issues/9894))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.plot` raises `ValueError` when color name is specified by
    multiple characters ([GH 10387](https://github.com/pandas-dev/pandas/issues/10387))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in left and right `align` of `Series` with `MultiIndex` may be inverted
    ([GH 10665](https://github.com/pandas-dev/pandas/issues/10665))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in left and right `join` of with `MultiIndex` may be inverted ([GH 10741](https://github.com/pandas-dev/pandas/issues/10741))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_stata` when reading a file with a different order set in `columns`
    ([GH 10757](https://github.com/pandas-dev/pandas/issues/10757))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical` may not representing properly when category contains `tz`
    or `Period` ([GH 10713](https://github.com/pandas-dev/pandas/issues/10713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Categorical.__iter__` may not returning correct `datetime` and `Period`
    ([GH 10713](https://github.com/pandas-dev/pandas/issues/10713))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing with a `PeriodIndex` on an object with a `PeriodIndex` ([GH
    4125](https://github.com/pandas-dev/pandas/issues/4125))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bug in `read_csv` with `engine=''c''`: EOF preceded by a comment, blank line,
    etc. was not handled correctly ([GH 10728](https://github.com/pandas-dev/pandas/issues/10728),
    [GH 10548](https://github.com/pandas-dev/pandas/issues/10548))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reading “famafrench” data via `DataReader` results in HTTP 404 error because
    of the website url is changed ([GH 10591](https://github.com/pandas-dev/pandas/issues/10591)).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack` where DataFrame to decode has duplicate column names ([GH
    9618](https://github.com/pandas-dev/pandas/issues/9618))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `io.common.get_filepath_or_buffer` which caused reading of valid S3 files
    to fail if the bucket also contained keys for which the user does not have read
    permission ([GH 10604](https://github.com/pandas-dev/pandas/issues/10604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in vectorised setting of timestamp columns with python `datetime.date` and
    numpy `datetime64` ([GH 10408](https://github.com/pandas-dev/pandas/issues/10408),
    [GH 10412](https://github.com/pandas-dev/pandas/issues/10412))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.take` may add unnecessary `freq` attribute ([GH 10791](https://github.com/pandas-dev/pandas/issues/10791))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `merge` with empty `DataFrame` may raise `IndexError` ([GH 10824](https://github.com/pandas-dev/pandas/issues/10824))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_latex` where unexpected keyword argument for some documented arguments
    ([GH 10888](https://github.com/pandas-dev/pandas/issues/10888))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in indexing of large `DataFrame` where `IndexError` is uncaught ([GH 10645](https://github.com/pandas-dev/pandas/issues/10645)
    and [GH 10692](https://github.com/pandas-dev/pandas/issues/10692))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_csv` when using the `nrows` or `chunksize` parameters if file contains
    only a header line ([GH 9535](https://github.com/pandas-dev/pandas/issues/9535))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in serialization of `category` types in HDF5 in presence of alternate encodings.
    ([GH 10366](https://github.com/pandas-dev/pandas/issues/10366))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.DataFrame` when constructing an empty DataFrame with a string dtype
    ([GH 9428](https://github.com/pandas-dev/pandas/issues/9428))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.DataFrame.diff` when DataFrame is not consolidated ([GH 10907](https://github.com/pandas-dev/pandas/issues/10907))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `pd.unique` for arrays with the `datetime64` or `timedelta64` dtype that
    meant an array with object dtype was returned instead the original dtype ([GH
    9431](https://github.com/pandas-dev/pandas/issues/9431))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Timedelta` raising error when slicing from 0s ([GH 10583](https://github.com/pandas-dev/pandas/issues/10583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.take` and `TimedeltaIndex.take` may not raise `IndexError`
    against invalid index ([GH 10295](https://github.com/pandas-dev/pandas/issues/10295))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series([np.nan]).astype('M8[ms]')`, which now returns `Series([pd.NaT])`
    ([GH 10747](https://github.com/pandas-dev/pandas/issues/10747))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `PeriodIndex.order` reset freq ([GH 10295](https://github.com/pandas-dev/pandas/issues/10295))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `date_range` when `freq` divides `end` as nanos ([GH 10885](https://github.com/pandas-dev/pandas/issues/10885))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `iloc` allowing memory outside bounds of a Series to be accessed with
    negative integers ([GH 10779](https://github.com/pandas-dev/pandas/issues/10779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `read_msgpack` where encoding is not respected ([GH 10581](https://github.com/pandas-dev/pandas/issues/10581))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug preventing access to the first index when using `iloc` with a list containing
    the appropriate negative integer ([GH 10547](https://github.com/pandas-dev/pandas/issues/10547),
    [GH 10779](https://github.com/pandas-dev/pandas/issues/10779))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `TimedeltaIndex` formatter causing error while trying to save `DataFrame`
    with `TimedeltaIndex` using `to_csv` ([GH 10833](https://github.com/pandas-dev/pandas/issues/10833))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.where` when handling Series slicing ([GH 10218](https://github.com/pandas-dev/pandas/issues/10218),
    [GH 9558](https://github.com/pandas-dev/pandas/issues/9558))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where `pd.read_gbq` throws `ValueError` when Bigquery returns zero rows
    ([GH 10273](https://github.com/pandas-dev/pandas/issues/10273))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `to_json` which was causing segmentation fault when serializing 0-rank
    ndarray ([GH 9576](https://github.com/pandas-dev/pandas/issues/9576))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in plotting functions may raise `IndexError` when plotted on `GridSpec`
    ([GH 10819](https://github.com/pandas-dev/pandas/issues/10819))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in plot result may show unnecessary minor ticklabels ([GH 10657](https://github.com/pandas-dev/pandas/issues/10657))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `groupby` incorrect computation for aggregation on `DataFrame` with `NaT`
    (E.g `first`, `last`, `min`). ([GH 10590](https://github.com/pandas-dev/pandas/issues/10590),
    [GH 11010](https://github.com/pandas-dev/pandas/issues/11010))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when constructing `DataFrame` where passing a dictionary with only scalar
    values and specifying columns did not raise an error ([GH 10856](https://github.com/pandas-dev/pandas/issues/10856))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.var()` causing roundoff errors for highly similar values ([GH 10242](https://github.com/pandas-dev/pandas/issues/10242))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame.plot(subplots=True)` with duplicated columns outputs incorrect
    result ([GH 10962](https://github.com/pandas-dev/pandas/issues/10962))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` arithmetic may result in incorrect class ([GH 10638](https://github.com/pandas-dev/pandas/issues/10638))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `date_range` results in empty if freq is negative annually, quarterly
    and monthly ([GH 11018](https://github.com/pandas-dev/pandas/issues/11018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex` cannot infer negative freq ([GH 11018](https://github.com/pandas-dev/pandas/issues/11018))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remove use of some deprecated numpy comparison operations, mainly in tests.
    ([GH 10569](https://github.com/pandas-dev/pandas/issues/10569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index` dtype may not applied properly ([GH 11017](https://github.com/pandas-dev/pandas/issues/11017))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `io.gbq` when testing for minimum google api client version ([GH 10652](https://github.com/pandas-dev/pandas/issues/10652))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DataFrame` construction from nested `dict` with `timedelta` keys ([GH
    11129](https://github.com/pandas-dev/pandas/issues/11129))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.fillna` against may raise `TypeError` when data contains datetime dtype
    ([GH 7095](https://github.com/pandas-dev/pandas/issues/7095), [GH 11153](https://github.com/pandas-dev/pandas/issues/11153))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.groupby` when number of keys to group by is same as length of index
    ([GH 11185](https://github.com/pandas-dev/pandas/issues/11185))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `convert_objects` where converted values might not be returned if all
    null and `coerce` ([GH 9589](https://github.com/pandas-dev/pandas/issues/9589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `convert_objects` where `copy` keyword was not respected ([GH 9589](https://github.com/pandas-dev/pandas/issues/9589))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 112 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Alex Rothberg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrea Bedini +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Rosenfeld
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Hayden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andy Li +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anthonios Partheniou +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artemy Kolchinsky
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bernard Willers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Charlie Clark +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Gohlke +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Whelan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clark Fitzgerald
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clearfield Christopher +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan Ringwalt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Ni +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data & Code Expert Experimenting with Code on Data +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Cottrell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David John Gagne +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Kelly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ETF +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eduardo Schettino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Egor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Egor Panfilov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evan Wright
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frank Pinter +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gabriel Araujo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Garrett-R
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gianluca Rossi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Gay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Poulin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Harsh Nisar +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Henriksen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ian Hoegen +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaidev Deshpande +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Rudolph +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jan Schulz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jason Swails +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jeff Reback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonas Buyl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Vankerschaver +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Levy-Kramer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Julien Danjou
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ka Wo Chen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Karrie Kehoe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kelsey Jordahl
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kerby Shedden
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin Sheppard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lars Buitinck
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leif Johnson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Ortiz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mac +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Gambogi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Savoie +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Gilbert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maximilian Roos +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michelangelo D’Agostino +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mortada Mehyar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nick Eubank
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nipun Batra
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ondřej Čertík
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Phillip Cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pratap Vardhan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rafal Skolasinski +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Lewis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rinoc Johnson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rob Levy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Gieseke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Safia Abdalla +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Denny +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Saumitra Shahapure +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Pölsterl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Rubbert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sheppard, Kevin +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sinhrks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Siu Kwan Lam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skipper Seabold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spencer Carrucciu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephan Hoyer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Hoover +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stephen Pascoe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Terry Santegoeds +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Grainger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tjerk Santegoeds +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vincent Davis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Winterflower +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuan Tang (Terry) +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: agijsberts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ajcr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: behzad nouri
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cel4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-b1 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cyrusmaher +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: davidovitch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ganego +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jreback
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: juricast +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: larvian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: maximilianr +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: msund +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rekcahpassyla
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: robertzk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: scls19fr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: seth-p
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: sinhrks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: springcoil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: terrytangyuan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: tzinckgraf +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
