- en: numpy.interp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.interp.html](https://numpy.org/doc/1.26/reference/generated/numpy.interp.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: One-dimensional linear interpolation for monotonically increasing sample points.
  prefs: []
  type: TYPE_NORMAL
- en: Returns the one-dimensional piecewise linear interpolant to a function with
    given discrete data points (*xp*, *fp*), evaluated at *x*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The x-coordinates at which to evaluate the interpolated values.
  prefs: []
  type: TYPE_NORMAL
- en: '**xp**1-D sequence of floats'
  prefs: []
  type: TYPE_NORMAL
- en: The x-coordinates of the data points, must be increasing if argument *period*
    is not specified. Otherwise, *xp* is internally sorted after normalizing the periodic
    boundaries with `xp = xp % period`.
  prefs: []
  type: TYPE_NORMAL
- en: '**fp**1-D sequence of float or complex'
  prefs: []
  type: TYPE_NORMAL
- en: The y-coordinates of the data points, same length as *xp*.
  prefs: []
  type: TYPE_NORMAL
- en: '**left**optional float or complex corresponding to fp'
  prefs: []
  type: TYPE_NORMAL
- en: Value to return for *x < xp[0]*, default is *fp[0]*.
  prefs: []
  type: TYPE_NORMAL
- en: '**right**optional float or complex corresponding to fp'
  prefs: []
  type: TYPE_NORMAL
- en: Value to return for *x > xp[-1]*, default is *fp[-1]*.
  prefs: []
  type: TYPE_NORMAL
- en: '**period**None or float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A period for the x-coordinates. This parameter allows the proper interpolation
    of angular x-coordinates. Parameters *left* and *right* are ignored if *period*
    is specified.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**float or complex (corresponding to fp) or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The interpolated values, same shape as *x*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: If *xp* and *fp* have different length If *xp* or *fp* are not 1-D sequences
    If *period == 0*
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: The x-coordinate sequence is expected to be increasing, but this is not explicitly
    enforced. However, if the sequence *xp* is non-increasing, interpolation results
    are meaningless.
  prefs: []
  type: TYPE_NORMAL
- en: Note that, since NaN is unsortable, *xp* also cannot contain NaNs.
  prefs: []
  type: TYPE_NORMAL
- en: 'A simple check for *xp* being strictly increasing is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.interpolate`](https://docs.scipy.org/doc/scipy/reference/interpolate.html#module-scipy.interpolate
    "(in SciPy v1.11.2)")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Plot an interpolant to the sine function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/numpy-interp-1_00_00.png](../Images/97356c1bdd7d94cd4ad4a7a58ec2c211.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Interpolation with periodic x-coordinates:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Complex interpolation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
