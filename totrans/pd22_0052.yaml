- en: Input/output
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输入/输出
- en: 原文：[https://pandas.pydata.org/docs/reference/io.html](https://pandas.pydata.org/docs/reference/io.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/io.html](https://pandas.pydata.org/docs/reference/io.html)
- en: '## Pickling'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## Pickling'
- en: '| [`read_pickle`](api/pandas.read_pickle.html#pandas.read_pickle "pandas.read_pickle")(filepath_or_buffer[, ...])
    | Load pickled pandas object (or any object) from file. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| [`read_pickle`](api/pandas.read_pickle.html#pandas.read_pickle "pandas.read_pickle")(filepath_or_buffer[, ...])
    | 从文件中加载经过pickling的pandas对象（或任何对象）。 |'
- en: '| [`DataFrame.to_pickle`](api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")(path, *[, compression, ...]) | Pickle (serialize)
    object to file. |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_pickle`](api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")(path, *[, compression, ...]) | 将对象pickling（序列化）到文件。
    |'
- en: Flat file
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平面文件
- en: '| [`read_table`](api/pandas.read_table.html#pandas.read_table "pandas.read_table")(filepath_or_buffer, *[, sep, ...])
    | Read general delimited file into DataFrame. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`read_table`](api/pandas.read_table.html#pandas.read_table "pandas.read_table")(filepath_or_buffer, *[, sep, ...])
    | 将通用分隔文件读入DataFrame。 |'
- en: '| [`read_csv`](api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")(filepath_or_buffer, *[, sep, ...])
    | Read a comma-separated values (csv) file into DataFrame. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`read_csv`](api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")(filepath_or_buffer, *[, sep, ...])
    | 将逗号分隔值（csv）文件读入DataFrame。 |'
- en: '| [`DataFrame.to_csv`](api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")([path_or_buf, sep, na_rep, ...]) | Write object to
    a comma-separated values (csv) file. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_csv`](api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")([path_or_buf, sep, na_rep, ...]) | 将对象写入逗号分隔值（csv）文件。
    |'
- en: '| [`read_fwf`](api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")(filepath_or_buffer, *[, colspecs, ...])
    | Read a table of fixed-width formatted lines into DataFrame. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`read_fwf`](api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")(filepath_or_buffer, *[, colspecs, ...])
    | 将固定宽度格式的表格行读入DataFrame。 |'
- en: Clipboard
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 剪贴板
- en: '| [`read_clipboard`](api/pandas.read_clipboard.html#pandas.read_clipboard "pandas.read_clipboard")([sep, dtype_backend])
    | Read text from clipboard and pass to [`read_csv()`](api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"). |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`read_clipboard`](api/pandas.read_clipboard.html#pandas.read_clipboard "pandas.read_clipboard")([sep, dtype_backend])
    | 从剪贴板读取文本并传递给[`read_csv()`](api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")。
    |'
- en: '| [`DataFrame.to_clipboard`](api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard")(*[, excel, sep]) | Copy object to the system
    clipboard. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_clipboard`](api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard")(*[, excel, sep]) | 将对象复制到系统剪贴板。 |'
- en: Excel
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Excel
- en: '| [`read_excel`](api/pandas.read_excel.html#pandas.read_excel "pandas.read_excel")(io[, sheet_name, header, names, ...])
    | Read an Excel file into a `pandas` `DataFrame`. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`read_excel`](api/pandas.read_excel.html#pandas.read_excel "pandas.read_excel")(io[, sheet_name, header, names, ...])
    | 将Excel文件读入`pandas` `DataFrame`。 |'
- en: '| [`DataFrame.to_excel`](api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel")(excel_writer, *[, ...]) | Write object to an Excel
    sheet. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_excel`](api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel")(excel_writer, *[, ...]) | 将对象写入Excel表格。 |'
- en: '| [`ExcelFile`](api/pandas.ExcelFile.html#pandas.ExcelFile "pandas.ExcelFile")(path_or_buffer[, engine, ...])
    | Class for parsing tabular Excel sheets into DataFrame objects. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelFile`](api/pandas.ExcelFile.html#pandas.ExcelFile "pandas.ExcelFile")(path_or_buffer[, engine, ...])
    | 用于将表格化的Excel表格解析为DataFrame对象的类。 |'
- en: '| [`ExcelFile.book`](api/pandas.ExcelFile.book.html#pandas.ExcelFile.book "pandas.ExcelFile.book")
    |  |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelFile.book`](api/pandas.ExcelFile.book.html#pandas.ExcelFile.book "pandas.ExcelFile.book")
    |  |'
- en: '| [`ExcelFile.sheet_names`](api/pandas.ExcelFile.sheet_names.html#pandas.ExcelFile.sheet_names
    "pandas.ExcelFile.sheet_names") |  |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelFile.sheet_names`](api/pandas.ExcelFile.sheet_names.html#pandas.ExcelFile.sheet_names
    "pandas.ExcelFile.sheet_names") |  |'
- en: '| [`ExcelFile.parse`](api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse")([sheet_name, header, names, ...]) | Parse specified
    sheet(s) into a DataFrame. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelFile.parse`](api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse")([sheet_name, header, names, ...]) | 将指定的工作表解析为DataFrame。
    |'
- en: '| [`Styler.to_excel`](api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel")(excel_writer[, sheet_name, ...]) |
    Write Styler to an Excel sheet. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`Styler.to_excel`](api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel")(excel_writer[, sheet_name, ...]) |
    将Styler写入Excel表格。 |'
- en: '| [`ExcelWriter`](api/pandas.ExcelWriter.html#pandas.ExcelWriter "pandas.ExcelWriter")(path[, engine, date_format, ...])
    | Class for writing DataFrame objects into excel sheets. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelWriter`](api/pandas.ExcelWriter.html#pandas.ExcelWriter "pandas.ExcelWriter")(path[, engine, date_format, ...])
    | 用于将DataFrame对象写入Excel表格的类。 |'
- en: JSON
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JSON
- en: '| [`read_json`](api/pandas.read_json.html#pandas.read_json "pandas.read_json")(path_or_buf, *[, orient, typ, ...])
    | Convert a JSON string to pandas object. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`read_json`](api/pandas.read_json.html#pandas.read_json "pandas.read_json")(path_or_buf, *[, orient, typ, ...])
    | 将 JSON 字符串转换为 pandas 对象。 |'
- en: '| [`json_normalize`](api/pandas.json_normalize.html#pandas.json_normalize "pandas.json_normalize")(data[, record_path, meta, ...])
    | Normalize semi-structured JSON data into a flat table. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`json_normalize`](api/pandas.json_normalize.html#pandas.json_normalize "pandas.json_normalize")(data[, record_path, meta, ...])
    | 将半结构化的 JSON 数据规范化为平面表格。 |'
- en: '| [`DataFrame.to_json`](api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json")([path_or_buf, orient, ...]) | Convert the object to
    a JSON string. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_json`](api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json")([path_or_buf, orient, ...]) | 将对象转换为 JSON 字符串。 |'
- en: '| [`build_table_schema`](api/pandas.io.json.build_table_schema.html#pandas.io.json.build_table_schema
    "pandas.io.json.build_table_schema")(data[, index, ...]) | Create a Table schema
    from `data`. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`build_table_schema`](api/pandas.io.json.build_table_schema.html#pandas.io.json.build_table_schema
    "pandas.io.json.build_table_schema")(data[, index, ...]) | 从 `data` 创建表模式。 |'
- en: HTML
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML
- en: '| [`read_html`](api/pandas.read_html.html#pandas.read_html "pandas.read_html")(io, *[, match, flavor, header, ...])
    | Read HTML tables into a `list` of `DataFrame` objects. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`read_html`](api/pandas.read_html.html#pandas.read_html "pandas.read_html")(io, *[, match, flavor, header, ...])
    | 将 HTML 表格读取为 `DataFrame` 对象的 `list`。 |'
- en: '| [`DataFrame.to_html`](api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html")([buf, columns, col_space, ...]) | Render a DataFrame
    as an HTML table. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_html`](api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html")([buf, columns, col_space, ...]) | 将 DataFrame 渲染为
    HTML 表格。 |'
- en: '| [`Styler.to_html`](api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html")([buf, table_uuid, ...]) | Write Styler
    to a file, buffer or string in HTML-CSS format. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`Styler.to_html`](api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html")([buf, table_uuid, ...]) | 将 Styler 写入文件、缓冲区或以
    HTML-CSS 格式的字符串。 |'
- en: XML
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XML
- en: '| [`read_xml`](api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")(path_or_buffer, *[, xpath, ...])
    | Read XML document into a [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") object. |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`read_xml`](api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")(path_or_buffer, *[, xpath, ...])
    | 将 XML 文档读取为 [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    对象。 |'
- en: '| [`DataFrame.to_xml`](api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml")([path_or_buffer, index, ...]) | Render a DataFrame
    to an XML document. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_xml`](api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml")([path_or_buffer, index, ...]) | 将 DataFrame 渲染为 XML
    文档。 |'
- en: Latex
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Latex
- en: '| [`DataFrame.to_latex`](api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex")([buf, columns, header, ...]) | Render object to a
    LaTeX tabular, longtable, or nested table. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_latex`](api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex")([buf, columns, header, ...]) | 将对象渲染为 LaTeX 表格、长表格或嵌套表格。
    |'
- en: '| [`Styler.to_latex`](api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex")([buf, column_format, ...]) | Write
    Styler to a file, buffer or string in LaTeX format. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`Styler.to_latex`](api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex")([buf, column_format, ...]) | 将 Styler
    写入文件、缓冲区或以 LaTeX 格式的字符串。 |'
- en: 'HDFStore: PyTables (HDF5)'
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'HDFStore: PyTables (HDF5)'
- en: '| [`read_hdf`](api/pandas.read_hdf.html#pandas.read_hdf "pandas.read_hdf")(path_or_buf[, key, mode, errors, ...])
    | Read from the store, close it if we opened it. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`read_hdf`](api/pandas.read_hdf.html#pandas.read_hdf "pandas.read_hdf")(path_or_buf[, key, mode, errors, ...])
    | 从存储中读取，如果打开则关闭。 |'
- en: '| [`HDFStore.put`](api/pandas.HDFStore.put.html#pandas.HDFStore.put "pandas.HDFStore.put")(key, value[, format, index, ...])
    | Store object in HDFStore. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.put`](api/pandas.HDFStore.put.html#pandas.HDFStore.put "pandas.HDFStore.put")(key, value[, format, index, ...])
    | 将对象存储在 HDFStore 中。 |'
- en: '| [`HDFStore.append`](api/pandas.HDFStore.append.html#pandas.HDFStore.append
    "pandas.HDFStore.append")(key, value[, format, axes, ...]) | Append to Table in
    file. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.append`](api/pandas.HDFStore.append.html#pandas.HDFStore.append
    "pandas.HDFStore.append")(key, value[, format, axes, ...]) | 在文件中的表格中追加。 |'
- en: '| [`HDFStore.get`](api/pandas.HDFStore.get.html#pandas.HDFStore.get "pandas.HDFStore.get")(key)
    | Retrieve pandas object stored in file. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.get`](api/pandas.HDFStore.get.html#pandas.HDFStore.get "pandas.HDFStore.get")(key)
    | 从文件中检索存储的 pandas 对象。 |'
- en: '| [`HDFStore.select`](api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select")(key[, where, start, stop, ...]) | Retrieve pandas object
    stored in file, optionally based on where criteria. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.select`](api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select")(key[, where, start, stop, ...]) | 检索存储在文件中的 pandas 对象，可选地基于
    where 条件。 |'
- en: '| [`HDFStore.info`](api/pandas.HDFStore.info.html#pandas.HDFStore.info "pandas.HDFStore.info")()
    | Print detailed information on the store. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.info`](api/pandas.HDFStore.info.html#pandas.HDFStore.info "pandas.HDFStore.info")()
    | 打印存储的详细信息。 |'
- en: '| [`HDFStore.keys`](api/pandas.HDFStore.keys.html#pandas.HDFStore.keys "pandas.HDFStore.keys")([include])
    | Return a list of keys corresponding to objects stored in HDFStore. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.keys`](api/pandas.HDFStore.keys.html#pandas.HDFStore.keys "pandas.HDFStore.keys")([include])
    | 返回与 HDFStore 中存储的对象对应的键列表。 |'
- en: '| [`HDFStore.groups`](api/pandas.HDFStore.groups.html#pandas.HDFStore.groups
    "pandas.HDFStore.groups")() | Return a list of all the top-level nodes. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.groups`](api/pandas.HDFStore.groups.html#pandas.HDFStore.groups
    "pandas.HDFStore.groups")() | 返回所有顶级节点的列表。 |'
- en: '| [`HDFStore.walk`](api/pandas.HDFStore.walk.html#pandas.HDFStore.walk "pandas.HDFStore.walk")([where])
    | Walk the pytables group hierarchy for pandas objects. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.walk`](api/pandas.HDFStore.walk.html#pandas.HDFStore.walk "pandas.HDFStore.walk")([where])
    | 遍历 pandas 对象的 pytables 组层次结构。 |'
- en: Warning
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: One can store a subclass of [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    to HDF5, but the type of the subclass is lost upon storing.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将 [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    或 [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series") 的子类存储到 HDF5，但子类的类型在存储时会丢失。
- en: Feather
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Feather
- en: '| [`read_feather`](api/pandas.read_feather.html#pandas.read_feather "pandas.read_feather")(path[, columns, use_threads, ...])
    | Load a feather-format object from the file path. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`read_feather`](api/pandas.read_feather.html#pandas.read_feather "pandas.read_feather")(path[, columns, use_threads, ...])
    | 从文件路径加载 feather 格式对象。 |'
- en: '| [`DataFrame.to_feather`](api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather")(path, **kwargs) | Write a DataFrame to the binary
    Feather format. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_feather`](api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather")(path, **kwargs) | 将 DataFrame 写入二进制 Feather 格式。
    |'
- en: Parquet
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Parquet
- en: '| [`read_parquet`](api/pandas.read_parquet.html#pandas.read_parquet "pandas.read_parquet")(path[, engine, columns, ...])
    | Load a parquet object from the file path, returning a DataFrame. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`read_parquet`](api/pandas.read_parquet.html#pandas.read_parquet "pandas.read_parquet")(path[, engine, columns, ...])
    | 从文件路径加载 parquet 对象，返回一个 DataFrame。 |'
- en: '| [`DataFrame.to_parquet`](api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet")([path, engine, ...]) | Write a DataFrame to the
    binary parquet format. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_parquet`](api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet")([path, engine, ...]) | 将 DataFrame 写入二进制 parquet
    格式。 |'
- en: ORC
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ORC
- en: '| [`read_orc`](api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")(path[, columns, dtype_backend, ...])
    | Load an ORC object from the file path, returning a DataFrame. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`read_orc`](api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")(path[, columns, dtype_backend, ...])
    | 从文件路径加载 ORC 对象，返回一个 DataFrame。 |'
- en: '| [`DataFrame.to_orc`](api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc")([path, engine, index, ...]) | Write a DataFrame to
    the ORC format. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_orc`](api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc")([path, engine, index, ...]) | 将 DataFrame 写入 ORC 格式。
    |'
- en: SAS
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SAS
- en: '| [`read_sas`](api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")(filepath_or_buffer, *[, format, ...])
    | Read SAS files stored as either XPORT or SAS7BDAT format files. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`read_sas`](api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")(filepath_or_buffer, *[, format, ...])
    | 读取存储为 XPORT 或 SAS7BDAT 格式文件的 SAS 文件。 |'
- en: SPSS
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SPSS
- en: '| [`read_spss`](api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")(path[, usecols, ...])
    | Load an SPSS file from the file path, returning a DataFrame. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`read_spss`](api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")(path[, usecols, ...])
    | 从文件路径加载 SPSS 文件，返回一个 DataFrame。 |'
- en: SQL
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SQL
- en: '| [`read_sql_table`](api/pandas.read_sql_table.html#pandas.read_sql_table "pandas.read_sql_table")(table_name, con[, schema, ...])
    | Read SQL database table into a DataFrame. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`read_sql_table`](api/pandas.read_sql_table.html#pandas.read_sql_table "pandas.read_sql_table")(table_name, con[, schema, ...])
    | 将 SQL 数据库表读取为 DataFrame。 |'
- en: '| [`read_sql_query`](api/pandas.read_sql_query.html#pandas.read_sql_query "pandas.read_sql_query")(sql, con[, index_col, ...])
    | Read SQL query into a DataFrame. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`read_sql_query`](api/pandas.read_sql_query.html#pandas.read_sql_query "pandas.read_sql_query")(sql, con[, index_col, ...])
    | 将 SQL 查询读取为 DataFrame。 |'
- en: '| [`read_sql`](api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")(sql, con[, index_col, ...])
    | Read SQL query or database table into a DataFrame. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`read_sql`](api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")(sql, con[, index_col, ...])
    | 将 SQL 查询或数据库表读取到 DataFrame 中。 |'
- en: '| [`DataFrame.to_sql`](api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql")(name, con, *[, schema, ...]) | Write records stored
    in a DataFrame to a SQL database. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_sql`](api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql")(name, con, *[, schema, ...]) | 将存储在 DataFrame 中的记录写入
    SQL 数据库。 |'
- en: Google BigQuery
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谷歌大查询
- en: '| [`read_gbq`](api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")(query[, project_id, index_col, ...])
    | (DEPRECATED) Load data from Google BigQuery. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`read_gbq`](api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")(query[, project_id, index_col, ...])
    | （已弃用）从谷歌大查询加载数据。 |'
- en: STATA
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: STATA
- en: '| [`read_stata`](api/pandas.read_stata.html#pandas.read_stata "pandas.read_stata")(filepath_or_buffer, *[, ...])
    | Read Stata file into DataFrame. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`read_stata`](api/pandas.read_stata.html#pandas.read_stata "pandas.read_stata")(filepath_or_buffer, *[, ...])
    | 将 Stata 文件读取到 DataFrame 中。 |'
- en: '| [`DataFrame.to_stata`](api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata")(path, *[, convert_dates, ...]) | Export DataFrame
    object to Stata dta format. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_stata`](api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata")(path, *[, convert_dates, ...]) | 将 DataFrame 对象导出为
    Stata dta 格式。 |'
- en: '| [`StataReader.data_label`](api/pandas.io.stata.StataReader.data_label.html#pandas.io.stata.StataReader.data_label
    "pandas.io.stata.StataReader.data_label") | Return data label of Stata file. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`StataReader.data_label`](api/pandas.io.stata.StataReader.data_label.html#pandas.io.stata.StataReader.data_label
    "pandas.io.stata.StataReader.data_label") | 返回 Stata 文件的数据标签。 |'
- en: '| [`StataReader.value_labels`](api/pandas.io.stata.StataReader.value_labels.html#pandas.io.stata.StataReader.value_labels
    "pandas.io.stata.StataReader.value_labels")() | Return a nested dict associating
    each variable name to its value and label. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`StataReader.value_labels`](api/pandas.io.stata.StataReader.value_labels.html#pandas.io.stata.StataReader.value_labels
    "pandas.io.stata.StataReader.value_labels")() | 返回一个嵌套字典，将每个变量名与其值和标签关联。 |'
- en: '| [`StataReader.variable_labels`](api/pandas.io.stata.StataReader.variable_labels.html#pandas.io.stata.StataReader.variable_labels
    "pandas.io.stata.StataReader.variable_labels")() | Return a dict associating each
    variable name with corresponding label. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`StataReader.variable_labels`](api/pandas.io.stata.StataReader.variable_labels.html#pandas.io.stata.StataReader.variable_labels
    "pandas.io.stata.StataReader.variable_labels")() | 返回一个将每个变量名与相应标签关联的字典。 |'
- en: '| [`StataWriter.write_file`](api/pandas.io.stata.StataWriter.write_file.html#pandas.io.stata.StataWriter.write_file
    "pandas.io.stata.StataWriter.write_file")() | Export DataFrame object to Stata
    dta format. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`StataWriter.write_file`](api/pandas.io.stata.StataWriter.write_file.html#pandas.io.stata.StataWriter.write_file
    "pandas.io.stata.StataWriter.write_file")() | 将 DataFrame 对象导出为 Stata dta 格式。
    |'
- en: Pickling
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pickling
- en: '| [`read_pickle`](api/pandas.read_pickle.html#pandas.read_pickle "pandas.read_pickle")(filepath_or_buffer[, ...])
    | Load pickled pandas object (or any object) from file. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`read_pickle`](api/pandas.read_pickle.html#pandas.read_pickle "pandas.read_pickle")(filepath_or_buffer[, ...])
    | 从文件中加载经过 Pickle 处理的 pandas 对象（或任何对象）。 |'
- en: '| [`DataFrame.to_pickle`](api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")(path, *[, compression, ...]) | Pickle (serialize)
    object to file. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_pickle`](api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle")(path, *[, compression, ...]) | 将对象序列化（Pickle）到文件。
    |'
- en: Flat file
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 平面文件
- en: '| [`read_table`](api/pandas.read_table.html#pandas.read_table "pandas.read_table")(filepath_or_buffer, *[, sep, ...])
    | Read general delimited file into DataFrame. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`read_table`](api/pandas.read_table.html#pandas.read_table "pandas.read_table")(filepath_or_buffer, *[, sep, ...])
    | 将通用分隔文件读取到 DataFrame 中。 |'
- en: '| [`read_csv`](api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")(filepath_or_buffer, *[, sep, ...])
    | Read a comma-separated values (csv) file into DataFrame. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`read_csv`](api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")(filepath_or_buffer, *[, sep, ...])
    | 将逗号分隔值（csv）文件读取到 DataFrame 中。 |'
- en: '| [`DataFrame.to_csv`](api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")([path_or_buf, sep, na_rep, ...]) | Write object to
    a comma-separated values (csv) file. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_csv`](api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")([path_or_buf, sep, na_rep, ...]) | 将对象写入逗号分隔值（csv）文件。
    |'
- en: '| [`read_fwf`](api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")(filepath_or_buffer, *[, colspecs, ...])
    | Read a table of fixed-width formatted lines into DataFrame. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`read_fwf`](api/pandas.read_fwf.html#pandas.read_fwf "pandas.read_fwf")(filepath_or_buffer, *[, colspecs, ...])
    | 将固定宽度格式行的表读取到 DataFrame 中。 |'
- en: Clipboard
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 剪贴板
- en: '| [`read_clipboard`](api/pandas.read_clipboard.html#pandas.read_clipboard "pandas.read_clipboard")([sep, dtype_backend])
    | Read text from clipboard and pass to [`read_csv()`](api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"). |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| [`read_clipboard`](api/pandas.read_clipboard.html#pandas.read_clipboard "pandas.read_clipboard")([sep, dtype_backend])
    | 从剪贴板读取文本并传递给 [`read_csv()`](api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")。
    |'
- en: '| [`DataFrame.to_clipboard`](api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard")(*[, excel, sep]) | Copy object to the system
    clipboard. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_clipboard`](api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard")(*[, excel, sep]) | 将对象复制到系统剪贴板。 |'
- en: Excel
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Excel
- en: '| [`read_excel`](api/pandas.read_excel.html#pandas.read_excel "pandas.read_excel")(io[, sheet_name, header, names, ...])
    | Read an Excel file into a `pandas` `DataFrame`. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| [`read_excel`](api/pandas.read_excel.html#pandas.read_excel "pandas.read_excel")(io[, sheet_name, header, names, ...])
    | 将 Excel 文件读取为 `pandas` `DataFrame`。 |'
- en: '| [`DataFrame.to_excel`](api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel")(excel_writer, *[, ...]) | Write object to an Excel
    sheet. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_excel`](api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel")(excel_writer, *[, ...]) | 将对象写入 Excel 表格。 |'
- en: '| [`ExcelFile`](api/pandas.ExcelFile.html#pandas.ExcelFile "pandas.ExcelFile")(path_or_buffer[, engine, ...])
    | Class for parsing tabular Excel sheets into DataFrame objects. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelFile`](api/pandas.ExcelFile.html#pandas.ExcelFile "pandas.ExcelFile")(path_or_buffer[, engine, ...])
    | 用于将表格形式的 Excel 表格解析为 DataFrame 对象的类。 |'
- en: '| [`ExcelFile.book`](api/pandas.ExcelFile.book.html#pandas.ExcelFile.book "pandas.ExcelFile.book")
    |  |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelFile.book`](api/pandas.ExcelFile.book.html#pandas.ExcelFile.book "pandas.ExcelFile.book")
    |  |'
- en: '| [`ExcelFile.sheet_names`](api/pandas.ExcelFile.sheet_names.html#pandas.ExcelFile.sheet_names
    "pandas.ExcelFile.sheet_names") |  |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelFile.sheet_names`](api/pandas.ExcelFile.sheet_names.html#pandas.ExcelFile.sheet_names
    "pandas.ExcelFile.sheet_names") |  |'
- en: '| [`ExcelFile.parse`](api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse")([sheet_name, header, names, ...]) | Parse specified
    sheet(s) into a DataFrame. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelFile.parse`](api/pandas.ExcelFile.parse.html#pandas.ExcelFile.parse
    "pandas.ExcelFile.parse")([sheet_name, header, names, ...]) | 将指定的工作表解析为 DataFrame。
    |'
- en: '| [`Styler.to_excel`](api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel")(excel_writer[, sheet_name, ...]) |
    Write Styler to an Excel sheet. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`Styler.to_excel`](api/pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel")(excel_writer[, sheet_name, ...]) |
    将 Styler 写入 Excel 表格。 |'
- en: '| [`ExcelWriter`](api/pandas.ExcelWriter.html#pandas.ExcelWriter "pandas.ExcelWriter")(path[, engine, date_format, ...])
    | Class for writing DataFrame objects into excel sheets. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`ExcelWriter`](api/pandas.ExcelWriter.html#pandas.ExcelWriter "pandas.ExcelWriter")(path[, engine, date_format, ...])
    | 用于将 DataFrame 对象写入 Excel 表格的类。 |'
- en: JSON
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JSON
- en: '| [`read_json`](api/pandas.read_json.html#pandas.read_json "pandas.read_json")(path_or_buf, *[, orient, typ, ...])
    | Convert a JSON string to pandas object. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`read_json`](api/pandas.read_json.html#pandas.read_json "pandas.read_json")(path_or_buf, *[, orient, typ, ...])
    | 将 JSON 字符串转换为 pandas 对象。 |'
- en: '| [`json_normalize`](api/pandas.json_normalize.html#pandas.json_normalize "pandas.json_normalize")(data[, record_path, meta, ...])
    | Normalize semi-structured JSON data into a flat table. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`json_normalize`](api/pandas.json_normalize.html#pandas.json_normalize "pandas.json_normalize")(data[, record_path, meta, ...])
    | 将半结构化的 JSON 数据规范化为平面表。 |'
- en: '| [`DataFrame.to_json`](api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json")([path_or_buf, orient, ...]) | Convert the object to
    a JSON string. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_json`](api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") | 将对象转换为 JSON 字符串。 |'
- en: '| [`build_table_schema`](api/pandas.io.json.build_table_schema.html#pandas.io.json.build_table_schema
    "pandas.io.json.build_table_schema")(data[, index, ...]) | Create a Table schema
    from `data`. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`build_table_schema`](api/pandas.io.json.build_table_schema.html#pandas.io.json.build_table_schema
    "pandas.io.json.build_table_schema")(data[, index, ...]) | 从 `data` 创建一个表模式。 |'
- en: HTML
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML
- en: '| [`read_html`](api/pandas.read_html.html#pandas.read_html "pandas.read_html")(io, *[, match, flavor, header, ...])
    | Read HTML tables into a `list` of `DataFrame` objects. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`read_html`](api/pandas.read_html.html#pandas.read_html "pandas.read_html")(io, *[, match, flavor, header, ...])
    | 将 HTML 表格读取为 `DataFrame` 对象的 `list`。 |'
- en: '| [`DataFrame.to_html`](api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html")([buf, columns, col_space, ...]) | Render a DataFrame
    as an HTML table. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_html`](api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html")([buf, columns, col_space, ...]) | 将 DataFrame 渲染为
    HTML 表格。 |'
- en: '| [`Styler.to_html`](api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html")([buf, table_uuid, ...]) | Write Styler
    to a file, buffer or string in HTML-CSS format. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`Styler.to_html`](api/pandas.io.formats.style.Styler.to_html.html#pandas.io.formats.style.Styler.to_html
    "pandas.io.formats.style.Styler.to_html")([buf, table_uuid, ...]) | 将Styler写入文件、缓冲��或字符串，格式为HTML-CSS。
    |'
- en: XML
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XML
- en: '| [`read_xml`](api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")(path_or_buffer, *[, xpath, ...])
    | Read XML document into a [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") object. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`read_xml`](api/pandas.read_xml.html#pandas.read_xml "pandas.read_xml")(path_or_buffer, *[, xpath, ...])
    | 将XML文档读取为[`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")对象。
    |'
- en: '| [`DataFrame.to_xml`](api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml")([path_or_buffer, index, ...]) | Render a DataFrame
    to an XML document. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_xml`](api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml")([path_or_buffer, index, ...]) | 将DataFrame呈现为XML文档。
    |'
- en: Latex
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Latex
- en: '| [`DataFrame.to_latex`](api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex")([buf, columns, header, ...]) | Render object to a
    LaTeX tabular, longtable, or nested table. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_latex`](api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex")([buf, columns, header, ...]) | 将对象呈现为LaTeX表格、长表格或嵌套表格。
    |'
- en: '| [`Styler.to_latex`](api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex")([buf, column_format, ...]) | Write
    Styler to a file, buffer or string in LaTeX format. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`Styler.to_latex`](api/pandas.io.formats.style.Styler.to_latex.html#pandas.io.formats.style.Styler.to_latex
    "pandas.io.formats.style.Styler.to_latex")([buf, column_format, ...]) | 将Styler写入文件、缓冲区或字符串，格式为LaTeX。
    |'
- en: 'HDFStore: PyTables (HDF5)'
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'HDFStore: PyTables (HDF5)'
- en: '| [`read_hdf`](api/pandas.read_hdf.html#pandas.read_hdf "pandas.read_hdf")(path_or_buf[, key, mode, errors, ...])
    | Read from the store, close it if we opened it. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`read_hdf`](api/pandas.read_hdf.html#pandas.read_hdf "pandas.read_hdf")(path_or_buf[, key, mode, errors, ...])
    | 从存储中读取数据，如果打开了存储，则关闭它。 |'
- en: '| [`HDFStore.put`](api/pandas.HDFStore.put.html#pandas.HDFStore.put "pandas.HDFStore.put")(key, value[, format, index, ...])
    | Store object in HDFStore. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.put`](api/pandas.HDFStore.put.html#pandas.HDFStore.put "pandas.HDFStore.put")(key, value[, format, index, ...])
    | 将对象存储在HDFStore中。 |'
- en: '| [`HDFStore.append`](api/pandas.HDFStore.append.html#pandas.HDFStore.append
    "pandas.HDFStore.append")(key, value[, format, axes, ...]) | Append to Table in
    file. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.append`](api/pandas.HDFStore.append.html#pandas.HDFStore.append
    "pandas.HDFStore.append")(key, value[, format, axes, ...]) | 追加到文件中的表格。 |'
- en: '| [`HDFStore.get`](api/pandas.HDFStore.get.html#pandas.HDFStore.get "pandas.HDFStore.get")(key)
    | Retrieve pandas object stored in file. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.get`](api/pandas.HDFStore.get.html#pandas.HDFStore.get "pandas.HDFStore.get")(key)
    | 检索存储在文件中的pandas对象。 |'
- en: '| [`HDFStore.select`](api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select")(key[, where, start, stop, ...]) | Retrieve pandas object
    stored in file, optionally based on where criteria. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.select`](api/pandas.HDFStore.select.html#pandas.HDFStore.select
    "pandas.HDFStore.select")(key[, where, start, stop, ...]) | 检索存储在文件中的pandas对象，可选地基于where条件。
    |'
- en: '| [`HDFStore.info`](api/pandas.HDFStore.info.html#pandas.HDFStore.info "pandas.HDFStore.info")()
    | Print detailed information on the store. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.info`](api/pandas.HDFStore.info.html#pandas.HDFStore.info "pandas.HDFStore.info")()
    | 打印存储的详细信息。 |'
- en: '| [`HDFStore.keys`](api/pandas.HDFStore.keys.html#pandas.HDFStore.keys "pandas.HDFStore.keys")([include])
    | Return a list of keys corresponding to objects stored in HDFStore. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.keys`](api/pandas.HDFStore.keys.html#pandas.HDFStore.keys "pandas.HDFStore.keys")([include])
    | 返回存储在HDFStore中的对象对应的键列表。 |'
- en: '| [`HDFStore.groups`](api/pandas.HDFStore.groups.html#pandas.HDFStore.groups
    "pandas.HDFStore.groups")() | Return a list of all the top-level nodes. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.groups`](api/pandas.HDFStore.groups.html#pandas.HDFStore.groups
    "pandas.HDFStore.groups")() | 返回所有顶级节点的列表。 |'
- en: '| [`HDFStore.walk`](api/pandas.HDFStore.walk.html#pandas.HDFStore.walk "pandas.HDFStore.walk")([where])
    | Walk the pytables group hierarchy for pandas objects. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`HDFStore.walk`](api/pandas.HDFStore.walk.html#pandas.HDFStore.walk "pandas.HDFStore.walk")([where])
    | 遍历pytables组层次结构以查找pandas对象。 |'
- en: Warning
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: One can store a subclass of [`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or [`Series`](api/pandas.Series.html#pandas.Series "pandas.Series")
    to HDF5, but the type of the subclass is lost upon storing.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 可以将[`DataFrame`](api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")或[`Series`](api/pandas.Series.html#pandas.Series
    "pandas.Series")的子类存储到HDF5中，但子类的类型在存储时会丢失。
- en: Feather
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Feather
- en: '| [`read_feather`](api/pandas.read_feather.html#pandas.read_feather "pandas.read_feather")(path[, columns, use_threads, ...])
    | Load a feather-format object from the file path. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| [`read_feather`](api/pandas.read_feather.html#pandas.read_feather "pandas.read_feather")(path[, columns, use_threads, ...])
    | 从文件路径加载 feather 格式对象。 |'
- en: '| [`DataFrame.to_feather`](api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather")(path, **kwargs) | Write a DataFrame to the binary
    Feather format. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_feather`](api/pandas.DataFrame.to_feather.html#pandas.DataFrame.to_feather
    "pandas.DataFrame.to_feather")(path, **kwargs) | 将 DataFrame 写入二进制 Feather 格式。
    |'
- en: Parquet
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Parquet
- en: '| [`read_parquet`](api/pandas.read_parquet.html#pandas.read_parquet "pandas.read_parquet")(path[, engine, columns, ...])
    | Load a parquet object from the file path, returning a DataFrame. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| [`read_parquet`](api/pandas.read_parquet.html#pandas.read_parquet "pandas.read_parquet")(path[, engine, columns, ...])
    | 从文件路径加载 parquet 对象，返回一个 DataFrame。 |'
- en: '| [`DataFrame.to_parquet`](api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet")([path, engine, ...]) | Write a DataFrame to the
    binary parquet format. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_parquet`](api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet")([path, engine, ...]) | 将 DataFrame 写入二进制 parquet
    格式。 |'
- en: ORC
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ORC
- en: '| [`read_orc`](api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")(path[, columns, dtype_backend, ...])
    | Load an ORC object from the file path, returning a DataFrame. |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| [`read_orc`](api/pandas.read_orc.html#pandas.read_orc "pandas.read_orc")(path[, columns, dtype_backend, ...])
    | 从文件路径加载 ORC 对象，返回一个 DataFrame。 |'
- en: '| [`DataFrame.to_orc`](api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc")([path, engine, index, ...]) | Write a DataFrame to
    the ORC format. |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_orc`](api/pandas.DataFrame.to_orc.html#pandas.DataFrame.to_orc
    "pandas.DataFrame.to_orc")([path, engine, index, ...]) | 将 DataFrame 写入 ORC 格式。
    |'
- en: SAS
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SAS
- en: '| [`read_sas`](api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")(filepath_or_buffer, *[, format, ...])
    | Read SAS files stored as either XPORT or SAS7BDAT format files. |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| [`read_sas`](api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")(filepath_or_buffer, *[, format, ...])
    | 读取存储为 XPORT 或 SAS7BDAT 格式文件的 SAS 文件。 |'
- en: SPSS
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SPSS
- en: '| [`read_spss`](api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")(path[, usecols, ...])
    | Load an SPSS file from the file path, returning a DataFrame. |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`read_spss`](api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")(path[, usecols, ...])
    | 从文件路径加载 SPSS 文件，返回一个 DataFrame。 |'
- en: SQL
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SQL
- en: '| [`read_sql_table`](api/pandas.read_sql_table.html#pandas.read_sql_table "pandas.read_sql_table")(table_name, con[, schema, ...])
    | Read SQL database table into a DataFrame. |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`read_sql_table`](api/pandas.read_sql_table.html#pandas.read_sql_table "pandas.read_sql_table")(table_name, con[, schema, ...])
    | 将 SQL 数据库表读取为 DataFrame。 |'
- en: '| [`read_sql_query`](api/pandas.read_sql_query.html#pandas.read_sql_query "pandas.read_sql_query")(sql, con[, index_col, ...])
    | Read SQL query into a DataFrame. |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [`read_sql_query`](api/pandas.read_sql_query.html#pandas.read_sql_query "pandas.read_sql_query")(sql, con[, index_col, ...])
    | 将 SQL 查询读取为 DataFrame。 |'
- en: '| [`read_sql`](api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")(sql, con[, index_col, ...])
    | Read SQL query or database table into a DataFrame. |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| [`read_sql`](api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")(sql, con[, index_col, ...])
    | 将 SQL 查询或数据库表读取为 DataFrame。 |'
- en: '| [`DataFrame.to_sql`](api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql")(name, con, *[, schema, ...]) | Write records stored
    in a DataFrame to a SQL database. |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_sql`](api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql")(name, con, *[, schema, ...]) | 将存储在 DataFrame 中的记录写入
    SQL 数据库。 |'
- en: Google BigQuery
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google BigQuery
- en: '| [`read_gbq`](api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")(query[, project_id, index_col, ...])
    | (DEPRECATED) Load data from Google BigQuery. |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| [`read_gbq`](api/pandas.read_gbq.html#pandas.read_gbq "pandas.read_gbq")(query[, project_id, index_col, ...])
    | (已弃用) 从 Google BigQuery 加载数据。 |'
- en: STATA
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: STATA
- en: '| [`read_stata`](api/pandas.read_stata.html#pandas.read_stata "pandas.read_stata")(filepath_or_buffer, *[, ...])
    | Read Stata file into DataFrame. |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| [`read_stata`](api/pandas.read_stata.html#pandas.read_stata "pandas.read_stata")(filepath_or_buffer, *[, ...])
    | 将 Stata 文件读取为 DataFrame。 |'
- en: '| [`DataFrame.to_stata`](api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata")(path, *[, convert_dates, ...]) | Export DataFrame
    object to Stata dta format. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| [`DataFrame.to_stata`](api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata")(path, *[, convert_dates, ...]) | 将 DataFrame 对象导出为
    Stata dta 格式。 |'
- en: '| [`StataReader.data_label`](api/pandas.io.stata.StataReader.data_label.html#pandas.io.stata.StataReader.data_label
    "pandas.io.stata.StataReader.data_label") | Return data label of Stata file. |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| [`StataReader.data_label`](api/pandas.io.stata.StataReader.data_label.html#pandas.io.stata.StataReader.data_label
    "pandas.io.stata.StataReader.data_label") | 返回 Stata 文件的数据标签。 |'
- en: '| [`StataReader.value_labels`](api/pandas.io.stata.StataReader.value_labels.html#pandas.io.stata.StataReader.value_labels
    "pandas.io.stata.StataReader.value_labels")() | Return a nested dict associating
    each variable name to its value and label. |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| [`StataReader.value_labels`](api/pandas.io.stata.StataReader.value_labels.html#pandas.io.stata.StataReader.value_labels
    "pandas.io.stata.StataReader.value_labels")() | 返回一个嵌套字典，将每个变量名与其值和标签关联起来。 |'
- en: '| [`StataReader.variable_labels`](api/pandas.io.stata.StataReader.variable_labels.html#pandas.io.stata.StataReader.variable_labels
    "pandas.io.stata.StataReader.variable_labels")() | Return a dict associating each
    variable name with corresponding label. |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| [`StataReader.variable_labels`](api/pandas.io.stata.StataReader.variable_labels.html#pandas.io.stata.StataReader.variable_labels
    "pandas.io.stata.StataReader.variable_labels")() | 返回一个将每个变量名与相应标签关联起来的字典。 |'
- en: '| [`StataWriter.write_file`](api/pandas.io.stata.StataWriter.write_file.html#pandas.io.stata.StataWriter.write_file
    "pandas.io.stata.StataWriter.write_file")() | Export DataFrame object to Stata
    dta format. |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| [`StataWriter.write_file`](api/pandas.io.stata.StataWriter.write_file.html#pandas.io.stata.StataWriter.write_file
    "pandas.io.stata.StataWriter.write_file")() | 将 DataFrame 对象导出为 Stata dta 格式。
    |'
