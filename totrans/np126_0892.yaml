- en: numpy.max
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.max
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.max.html](https://numpy.org/doc/1.26/reference/generated/numpy.max.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[https://numpy.org/doc/1.26/reference/generated/numpy.max.html](https://numpy.org/doc/1.26/reference/generated/numpy.max.html)'
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the maximum of an array or maximum along an axis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回数组的最大值或沿轴的最大值。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**a**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**类似数组'
- en: Input data.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数据。
- en: '**axis**None or int or tuple of ints, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**None 或整数或整数元组，可选'
- en: Axis or axes along which to operate. By default, flattened input is used.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在哪个轴上执行操作。默认情况下，使用扁平化的输入。
- en: New in version 1.7.0.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.7.0。
- en: If this is a tuple of ints, the maximum is selected over multiple axes, instead
    of a single axis or all the axes as before.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是一个整数元组，则将在多个轴上选择最大值，而不是之前的单个轴或所有轴。
- en: '**out**ndarray, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray，可选'
- en: Alternative output array in which to place the result. Must be of the same shape
    and buffer length as the expected output. See [Output type determination](../../user/basics.ufuncs.html#ufuncs-output-type)
    for more details.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果的备用数组，必须与预期输出具有相同的形状和缓冲区长度。更多详情请参见[输出类型确定](../../user/basics.ufuncs.html#ufuncs-output-type)。
- en: '**keepdims**bool, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**keepdims**布尔值，可选'
- en: If this is set to True, the axes which are reduced are left in the result as
    dimensions with size one. With this option, the result will broadcast correctly
    against the input array.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设置为 True，则被减少的轴会保留在结果中，作为大小为一的维度。使用此选项，结果将正确地广播到输入数组。
- en: If the default value is passed, then *keepdims* will not be passed through to
    the `max` method of sub-classes of [`ndarray`](numpy.ndarray.html#numpy.ndarray
    "numpy.ndarray"), however any non-default value will be. If the sub-class’ method
    does not implement *keepdims* any exceptions will be raised.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果传递默认值，则*keepdims*不会传递给[`ndarray`](numpy.ndarray.html#numpy.ndarray "numpy.ndarray")的`max`方法的子类，但任何非默认值会传递。如果子类的方法没有实现*keepdims*，则会引发任何异常。
- en: '**initial**scalar, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**initial**标量，可选'
- en: The minimum value of an output element. Must be present to allow computation
    on empty slice. See [`reduce`](numpy.ufunc.reduce.html#numpy.ufunc.reduce "numpy.ufunc.reduce")
    for details.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 输出元素的最小值。必须出现在允许对空切片进行计算的情况下。详情请参见[`reduce`](numpy.ufunc.reduce.html#numpy.ufunc.reduce)。
- en: New in version 1.15.0.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.15.0。
- en: '**where**array_like of bool, optional'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**bool数组，可选'
- en: Elements to compare for the maximum. See [`reduce`](numpy.ufunc.reduce.html#numpy.ufunc.reduce
    "numpy.ufunc.reduce") for details.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要比较的最大元素。详情请参见[`reduce`](numpy.ufunc.reduce.html#numpy.ufunc.reduce)。
- en: New in version 1.17.0.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.17.0。
- en: 'Returns:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '返回:'
- en: '**max**ndarray or scalar'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**max**ndarray 或标量'
- en: Maximum of *a*. If *axis* is None, the result is a scalar value. If *axis* is
    an int, the result is an array of dimension `a.ndim - 1`. If *axis* is a tuple,
    the result is an array of dimension `a.ndim - len(axis)`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*a* 的最大值。如果 *axis* 为 None，则结果是标量值。如果 *axis* 是整数，则结果是维度为 `a.ndim - 1` 的数组。如果
    *axis* 是元组，则结果是维度为 `a.ndim - len(axis)` 的数组。'
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`amin`](numpy.amin.html#numpy.amin "numpy.amin")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`amin`](numpy.amin.html#numpy.amin "numpy.amin")'
- en: The minimum value of an array along a given axis, propagating any NaNs.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 沿给定轴的数组的最小值，传播任何 NaN。
- en: '[`nanmax`](numpy.nanmax.html#numpy.nanmax "numpy.nanmax")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nanmax`](numpy.nanmax.html#numpy.nanmax "numpy.nanmax")'
- en: The maximum value of an array along a given axis, ignoring any NaNs.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 忽略任何 NaN，沿着给定轴的数组的最大值。
- en: '[`maximum`](numpy.maximum.html#numpy.maximum "numpy.maximum")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`maximum`](numpy.maximum.html#numpy.maximum "numpy.maximum")'
- en: Element-wise maximum of two arrays, propagating any NaNs.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 两个数组的逐元素最大值，传播任何 NaN。
- en: '[`fmax`](numpy.fmax.html#numpy.fmax "numpy.fmax")'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fmax`](numpy.fmax.html#numpy.fmax "numpy.fmax")'
- en: Element-wise maximum of two arrays, ignoring any NaNs.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 两个数组的逐元素最大值，忽略任何 NaN。
- en: '[`argmax`](numpy.argmax.html#numpy.argmax "numpy.argmax")'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`argmax`](numpy.argmax.html#numpy.argmax "numpy.argmax")'
- en: Return the indices of the maximum values.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 返回最大值的索引。
- en: '[`nanmin`](numpy.nanmin.html#numpy.nanmin "numpy.nanmin"), [`minimum`](numpy.minimum.html#numpy.minimum
    "numpy.minimum"), [`fmin`](numpy.fmin.html#numpy.fmin "numpy.fmin")'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[`nanmin`](numpy.nanmin.html#numpy.nanmin "numpy.nanmin")，[`minimum`](numpy.minimum.html#numpy.minimum
    "numpy.minimum")，[`fmin`](numpy.fmin.html#numpy.fmin "numpy.fmin")'
- en: Notes
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: NaN values are propagated, that is if at least one item is NaN, the corresponding
    max value will be NaN as well. To ignore NaN values (MATLAB behavior), please
    use nanmax.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: NaN 值被传播，即如果至少有一个项目为 NaN，则相应的最大值也将为 NaN。要忽略 NaN 值（MATLAB 规则），请使用 nanmax。
- en: Don’t use [`max`](#numpy.max "numpy.max") for element-wise comparison of 2 arrays;
    when `a.shape[0]` is 2, `maximum(a[0], a[1])` is faster than `max(a, axis=0)`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 不要对2个数组进行逐元素比较使用[`max`](#numpy.max "numpy.max")；当`a.shape[0]`为2时，`maximum(a[0],
    a[1])`比`max(a, axis=0)`更快。
- en: Examples
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can use an initial value to compute the maximum of an empty slice, or to
    initialize it to a different value:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用初始值来计算空片段的最大值，或者将其初始化为不同的值：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Notice that the initial value is used as one of the elements for which the maximum
    is determined, unlike for the default argument Python’s max function, which is
    only used for empty iterables.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，初始值被用作确定最大值的元素之一，不同于默认参数Python的max函数，后者仅用于空可迭代对象。
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
