- en: numpy.ma.expand_dims
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.expand_dims.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.expand_dims.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Expand the shape of an array.
  prefs: []
  type: TYPE_NORMAL
- en: Insert a new axis that will appear at the *axis* position in the expanded array
    shape.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int or tuple of ints'
  prefs: []
  type: TYPE_NORMAL
- en: Position in the expanded axes where the new axis (or axes) is placed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deprecated since version 1.13.0: Passing an axis where `axis > a.ndim` will
    be treated as `axis == a.ndim`, and passing `axis < -a.ndim - 1` will be treated
    as `axis == 0`. This behavior is deprecated.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Changed in version 1.18.0: A tuple of axes is now supported. Out of range axes
    as described above are now forbidden and raise an `AxisError`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: View of *a* with the number of dimensions increased.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`squeeze`](numpy.squeeze.html#numpy.squeeze "numpy.squeeze")'
  prefs: []
  type: TYPE_NORMAL
- en: The inverse operation, removing singleton dimensions
  prefs: []
  type: TYPE_NORMAL
- en: '[`reshape`](numpy.reshape.html#numpy.reshape "numpy.reshape")'
  prefs: []
  type: TYPE_NORMAL
- en: Insert, remove, and combine dimensions, and resize existing ones
  prefs: []
  type: TYPE_NORMAL
- en: '`doc.indexing`, [`atleast_1d`](numpy.atleast_1d.html#numpy.atleast_1d "numpy.atleast_1d"),
    [`atleast_2d`](numpy.atleast_2d.html#numpy.atleast_2d "numpy.atleast_2d"), [`atleast_3d`](numpy.atleast_3d.html#numpy.atleast_3d
    "numpy.atleast_3d")'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is equivalent to `x[np.newaxis, :]` or `x[np.newaxis]`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is equivalent to `x[:, np.newaxis]`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '`axis` may also be a tuple:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that some examples may use `None` instead of `np.newaxis`. These are the
    same objects:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
