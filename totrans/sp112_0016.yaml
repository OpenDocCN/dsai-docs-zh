- en: File IO (scipy.io)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件IO（scipy.io）
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/tutorial/io.html](https://docs.scipy.org/doc/scipy-1.12.0/tutorial/io.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/tutorial/io.html](https://docs.scipy.org/doc/scipy-1.12.0/tutorial/io.html)
- en: See also
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[NumPy IO routines](https://www.numpy.org/devdocs/reference/routines.io.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[NumPy IO routines](https://www.numpy.org/devdocs/reference/routines.io.html)'
- en: MATLAB files
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MATLAB文件
- en: '| [`loadmat`](../reference/generated/scipy.io.loadmat.html#scipy.io.loadmat
    "scipy.io.loadmat")(file_name[, mdict, appendmat]) | Load MATLAB file. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`loadmat`](../reference/generated/scipy.io.loadmat.html#scipy.io.loadmat
    "scipy.io.loadmat")(file_name[, mdict, appendmat]) | Load MATLAB file. |'
- en: '| [`savemat`](../reference/generated/scipy.io.savemat.html#scipy.io.savemat
    "scipy.io.savemat")(file_name, mdict[, appendmat, ...]) | Save a dictionary of
    names and arrays into a MATLAB-style .mat file. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`savemat`](../reference/generated/scipy.io.savemat.html#scipy.io.savemat
    "scipy.io.savemat")(file_name, mdict[, appendmat, ...]) | 保存字典的名称和数组到MATLAB风格的.mat文件中。
    |'
- en: '| [`whosmat`](../reference/generated/scipy.io.whosmat.html#scipy.io.whosmat
    "scipy.io.whosmat")(file_name[, appendmat]) | List variables inside a MATLAB file.
    |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`whosmat`](../reference/generated/scipy.io.whosmat.html#scipy.io.whosmat
    "scipy.io.whosmat")(file_name[, appendmat]) | 列出MATLAB文件中的变量。 |'
- en: The basic functions
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本功能
- en: 'We’ll start by importing [`scipy.io`](../reference/io.html#module-scipy.io
    "scipy.io") and calling it `sio` for convenience:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从导入[`scipy.io`](../reference/io.html#module-scipy.io "scipy.io")开始，并为方便起见称其为`sio`：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you are using IPython, try tab-completing on `sio`. Among the many options,
    you will find:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用IPython，请尝试在`sio`上进行制表符完成。在众多选项中，您会找到：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'These are the high-level functions you will most likely use when working with
    MATLAB files. You’ll also find:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是您在处理MATLAB文件时最可能使用的高级功能。您还会发现：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is the package from which `loadmat`, `savemat`, and `whosmat` are imported.
    Within `sio.matlab`, you will find the `mio` module This module contains the machinery
    that `loadmat` and `savemat` use. From time to time you may find yourself re-using
    this machinery.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是导入`loadmat`、`savemat`和`whosmat`的包。在`sio.matlab`中，您会找到`mio`模块。该模块包含`loadmat`和`savemat`使用的机制。偶尔您可能会发现自己重新使用此机制。
- en: How do I start?
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我该如何开始？
- en: You may have a `.mat` file that you want to read into SciPy. Or, you want to
    pass some variables from SciPy / NumPy into MATLAB.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能有一个`.mat`文件，想要将其读入SciPy。或者，您想要从SciPy / NumPy传递一些变量到MATLAB。
- en: 'To save us using a MATLAB license, let’s start in [Octave](https://www.gnu.org/software/octave).
    Octave has MATLAB-compatible save and load functions. Start Octave (`octave` at
    the command line for me):'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免使用MATLAB许可证，让我们从[Octave](https://www.gnu.org/software/octave)开始。Octave具有与MATLAB兼容的保存和加载功能。在命令行上启动Octave（对我来说是`octave`）：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, to Python:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，到Python：
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now let’s try the other way round:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们试着换个角度：
- en: '[PRE5]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then back to Octave:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然后回到Octave：
- en: '[PRE6]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you want to inspect the contents of a MATLAB file without reading the data
    into memory, use the `whosmat` command:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要检查MATLAB文件的内容而不将数据读入内存，请使用`whosmat`命令：
- en: '[PRE7]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`whosmat` returns a list of tuples, one for each array (or other object) in
    the file. Each tuple contains the name, shape and data type of the array.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`whosmat`返回一个元组列表，每个文件中的数组（或其他对象）都有一个。每个元组包含数组的名称、形状和数据类型。'
- en: MATLAB structs
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MATLAB结构
- en: MATLAB structs are a little bit like Python dicts, except the field names must
    be strings. Any MATLAB object can be a value of a field. As for all objects in
    MATLAB, structs are, in fact, arrays of structs, where a single struct is an array
    of shape (1, 1).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB结构有点像Python字典，但字段名称必须是字符串。任何MATLAB对象都可以是字段的值。与MATLAB中的所有对象一样，结构实际上是结构数组，其中单个结构是形状为（1，1）的数组。
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can load this in Python:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在Python中加载它：
- en: '[PRE9]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In the SciPy versions from 0.12.0, MATLAB structs come back as NumPy structured
    arrays, with fields named for the struct fields. You can see the field names in
    the `dtype` output above. Note also:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在SciPy版本从0.12.0开始，MATLAB结构返回为NumPy结构化数组，其字段命名为结构字段。您可以在上面的`dtype`输出中看到字段名称。还要注意：
- en: '[PRE10]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'and:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 和：
- en: '[PRE11]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'So, in MATLAB, the struct array must be at least 2-D, and we replicate that
    when we read into SciPy. If you want all length 1 dimensions squeezed out, try
    this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在MATLAB中，结构数组必须至少是2维的，并且我们在读入SciPy时复制了这一点。如果您希望将所有长度为1的维度挤出，请尝试这样做：
- en: '[PRE12]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Sometimes, it’s more convenient to load the MATLAB structs as Python objects
    rather than NumPy structured arrays - it can make the access syntax in Python
    a bit more similar to that in MATLAB. In order to do this, use the `struct_as_record=False`
    parameter setting to `loadmat`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，将MATLAB结构加载为Python对象而不是NumPy结构化数组更方便 - 这可以使Python中的访问语法与MATLAB中的语法更加相似。为此，请使用`struct_as_record=False`参数设置为`loadmat`。
- en: '[PRE13]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '`struct_as_record=False` works nicely with `squeeze_me`:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`struct_as_record=False` 与 `squeeze_me` 配合使用效果很好：'
- en: '[PRE14]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Saving struct arrays can be done in various ways. One simple method is to use
    dicts:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 可以以多种方式保存结构数组。一种简单的方法是使用字典：
- en: '[PRE15]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'loaded as:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 被加载为：
- en: '[PRE16]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You can also save structs back again to MATLAB (or Octave in our case) like
    this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以像这样将结构体再次保存回 MATLAB（或者在我们的情况下是 Octave）：
- en: '[PRE17]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: MATLAB cell arrays
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MATLAB 单元数组
- en: Cell arrays in MATLAB are rather like Python lists, in the sense that the elements
    in the arrays can contain any type of MATLAB object. In fact, they are most similar
    to NumPy object arrays, and that is how we load them into NumPy.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB 中的单元数组与 Python 列表相似，数组中的元素可以包含任何类型的 MATLAB 对象。事实上，它们最类似于 NumPy 对象数组，这就是我们如何将它们加载到
    NumPy 中的方式。
- en: '[PRE18]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Back to Python:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 回到 Python：
- en: '[PRE19]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Saving to a MATLAB cell array just involves making a NumPy object array:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 保存到 MATLAB 单元数组只需创建一个 NumPy 对象数组：
- en: '[PRE20]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: IDL files
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IDL 文件
- en: '| [`readsav`](../reference/generated/scipy.io.readsav.html#scipy.io.readsav
    "scipy.io.readsav")(file_name[, idict, python_dict, ...]) | Read an IDL .sav file.
    |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`readsav`](../reference/generated/scipy.io.readsav.html#scipy.io.readsav
    "scipy.io.readsav")(文件名[, idict, python_dict, ...]) | 读取 IDL 的 .sav 文件。 |'
- en: Matrix Market files
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Matrix Market 文件
- en: '| [`mminfo`](../reference/generated/scipy.io.mminfo.html#scipy.io.mminfo "scipy.io.mminfo")(source)
    | Return size and storage parameters from Matrix Market file-like ''source''.
    |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`mminfo`](../reference/generated/scipy.io.mminfo.html#scipy.io.mminfo "scipy.io.mminfo")(源)
    | 从类似于 Matrix Market 文件的 ''源'' 返回大小和存储参数。 |'
- en: '| [`mmread`](../reference/generated/scipy.io.mmread.html#scipy.io.mmread "scipy.io.mmread")(source)
    | Reads the contents of a Matrix Market file-like ''source'' into a matrix. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`mmread`](../reference/generated/scipy.io.mmread.html#scipy.io.mmread "scipy.io.mmread")(源)
    | 从类似于 Matrix Market 的 ''源'' 中读取内容到矩阵中。 |'
- en: '| [`mmwrite`](../reference/generated/scipy.io.mmwrite.html#scipy.io.mmwrite
    "scipy.io.mmwrite")(target, a[, comment, field, ...]) | Writes the sparse or dense
    array *a* to Matrix Market file-like *target*. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`mmwrite`](../reference/generated/scipy.io.mmwrite.html#scipy.io.mmwrite
    "scipy.io.mmwrite")(目标, a[, 注释, 字段, ...]) | 将稀疏或密集数组 *a* 写入类似于 Matrix Market 的
    ''目标'' 文件。 |'
- en: Wav sound files ([`scipy.io.wavfile`](../reference/io.html#module-scipy.io.wavfile
    "scipy.io.wavfile"))
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Wav 声音文件（[`scipy.io.wavfile`](../reference/io.html#module-scipy.io.wavfile "scipy.io.wavfile")）
- en: '| [`read`](../reference/generated/scipy.io.wavfile.read.html#scipy.io.wavfile.read
    "scipy.io.wavfile.read")(filename[, mmap]) | Open a WAV file. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`read`](../reference/generated/scipy.io.wavfile.read.html#scipy.io.wavfile.read
    "scipy.io.wavfile.read")(文件名[, mmap]) | 打开 WAV 文件。 |'
- en: '| [`write`](../reference/generated/scipy.io.wavfile.write.html#scipy.io.wavfile.write
    "scipy.io.wavfile.write")(filename, rate, data) | Write a NumPy array as a WAV
    file. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`write`](../reference/generated/scipy.io.wavfile.write.html#scipy.io.wavfile.write
    "scipy.io.wavfile.write")(文件名, rate, 数据) | 将 NumPy 数组写入 WAV 文件。 |'
- en: Arff files ([`scipy.io.arff`](../reference/io.html#module-scipy.io.arff "scipy.io.arff"))
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Arff 文件（[`scipy.io.arff`](../reference/io.html#module-scipy.io.arff "scipy.io.arff")）
- en: '| [`loadarff`](../reference/generated/scipy.io.arff.loadarff.html#scipy.io.arff.loadarff
    "scipy.io.arff.loadarff")(f) | Read an arff file. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [`loadarff`](../reference/generated/scipy.io.arff.loadarff.html#scipy.io.arff.loadarff
    "scipy.io.arff.loadarff")(f) | 读取 arff 文件。 |'
- en: Netcdf
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Netcdf
- en: '| [`netcdf_file`](../reference/generated/scipy.io.netcdf_file.html#scipy.io.netcdf_file
    "scipy.io.netcdf_file")(filename[, mode, mmap, version, ...]) | A file object
    for NetCDF data. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`netcdf_file`](../reference/generated/scipy.io.netcdf_file.html#scipy.io.netcdf_file
    "scipy.io.netcdf_file")(文件名[, 模式, mmap, 版本, ...]) | 用于 NetCDF 数据的文件对象。 |'
- en: Allows reading of NetCDF files (version of [pupynere](https://pypi.org/project/pupynere/)
    package)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 允许读取 NetCDF 文件（使用 [pupynere](https://pypi.org/project/pupynere/) 包的版本）
