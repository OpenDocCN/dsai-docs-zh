- en: pandas.io.formats.style.Styler.pipe
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.io.formats.style.Styler.pipe
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.pipe.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.pipe.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.pipe.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.pipe.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Apply `func(self, *args, **kwargs)`, and return the result.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 应用 `func(self, *args, **kwargs)`，并返回结果。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**func**function'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**func**函数'
- en: Function to apply to the Styler. Alternatively, a `(callable, keyword)` tuple
    where `keyword` is a string indicating the keyword of `callable` that expects
    the Styler.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 函数应用到 Styler 上。或者，一个`(callable, keyword)`元组，其中 `keyword` 是一个字符串，表示 `callable`
    期望的 Styler 的关键字。
- en: '***args**optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '***args**可选'
- en: Arguments passed to func.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给 func 的参数。
- en: '****kwargs**optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**可选'
- en: A dictionary of keyword arguments passed into `func`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给 `func` 的关键字参数的字典。
- en: 'Returns:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值：
- en: object
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对象
- en: The value returned by `func`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`func` 的返回值。'
- en: See also
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '`DataFrame.pipe`'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame.pipe`'
- en: Analogous method for DataFrame.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame 的类似方法。
- en: '[`Styler.apply`](pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Styler.apply`](pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply")'
- en: Apply a CSS-styling function column-wise, row-wise, or table-wise.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 对列、行或表进行 CSS 样式化函数的应用。
- en: Notes
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: 'Like `DataFrame.pipe()`, this method can simplify the application of several
    user-defined functions to a styler. Instead of writing:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `DataFrame.pipe()` 类似，此方法可以简化对 styler 应用多个用户定义函数的操作。而不是编写：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'users can write:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以编写：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In particular, this allows users to define functions that take a styler object,
    along with other parameters, and return the styler after making styling changes
    (such as calling [`Styler.apply()`](pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") or [`Styler.set_properties()`](pandas.io.formats.style.Styler.set_properties.html#pandas.io.formats.style.Styler.set_properties
    "pandas.io.formats.style.Styler.set_properties")).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，这允许用户定义接受 styler 对象以及其他参数的函数，并在进行样式更改后返回 styler（例如调用 [`Styler.apply()`](pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply
    "pandas.io.formats.style.Styler.apply") 或 [`Styler.set_properties()`](pandas.io.formats.style.Styler.set_properties.html#pandas.io.formats.style.Styler.set_properties
    "pandas.io.formats.style.Styler.set_properties")）。
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '**Common Use**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**常见用法**'
- en: A common usage pattern is to pre-define styling operations which can be easily
    applied to a generic styler in a single `pipe` call.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的用法模式是预先定义样式化操作，这些操作可以轻松应用于单个 `pipe` 调用中的通用 styler。
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![../../_images/df_pipe_hl.png](../Images/846404205204d102dad4d7dd2853366a.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/df_pipe_hl.png](../Images/846404205204d102dad4d7dd2853366a.png)'
- en: Since the method returns a `Styler` object it can be chained with other methods
    as if applying the underlying highlighters directly.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 由于该方法返回一个 `Styler` 对象，因此可以像直接应用底层高亮器一样，将其与其他方法链接起来。
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![../../_images/df_pipe_hl2.png](../Images/e331484ee54ef76809fbe0b864f5dce7.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/df_pipe_hl2.png](../Images/e331484ee54ef76809fbe0b864f5dce7.png)'
- en: '**Advanced Use**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级用法**'
- en: Sometimes it may be necessary to pre-define styling functions, but in the case
    where those functions rely on the styler, data or context. Since `Styler.use`
    and `Styler.export` are designed to be non-data dependent, they cannot be used
    for this purpose. Additionally the `Styler.apply` and `Styler.format` type methods
    are not context aware, so a solution is to use `pipe` to dynamically wrap this
    functionality.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 有时可能需要预先定义样式化函数，但在这些函数依赖于 styler、数据或上下文的情况下。由于 `Styler.use` 和 `Styler.export`
    设计为非数据相关，因此不能用于此目的。此外，`Styler.apply` 和 `Styler.format` 类型方法不具有上下文感知能力，因此解决方案是使用
    `pipe` 动态包装此功能。
- en: Suppose we want to code a generic styling function that highlights the final
    level of a MultiIndex. The number of levels in the Index is dynamic so we need
    the `Styler` context to define the level.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想编写一个通用样式化函数，用于高亮显示多索引的最终级别。索引中级别的数量是动态的，因此我们需要 `Styler` 上下文来定义级别。
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![../../_images/df_pipe_applymap.png](../Images/374c032aa260a91efec601dd093e3605.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/df_pipe_applymap.png](../Images/374c032aa260a91efec601dd093e3605.png)'
- en: Additionally suppose we want to highlight a column header if there is any missing
    data in that column. In this case we need the data object itself to determine
    the effect on the column headers.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，假设我们希望在列头中高亮显示任何列中存在缺失数据的列。在这种情况下，我们需要数据对象本身来确定对列标题的影响。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![../../_images/df_pipe_applydata.png](../Images/37700d5ea1a650005b4b87f6ba2aeae8.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/df_pipe_applydata.png](../Images/37700d5ea1a650005b4b87f6ba2aeae8.png)'
