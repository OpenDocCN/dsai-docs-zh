- en: numpy.take
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.take
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.take.html](https://numpy.org/doc/1.26/reference/generated/numpy.take.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.take.html](https://numpy.org/doc/1.26/reference/generated/numpy.take.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Take elements from an array along an axis.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 沿轴取数组中的元素。
- en: When axis is not None, this function does the same thing as “fancy” indexing
    (indexing arrays using arrays); however, it can be easier to use if you need elements
    along a given axis. A call such as `np.take(arr, indices, axis=3)` is equivalent
    to `arr[:,:,:,indices,...]`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当axis不是None时, 此函数与"花式"索引（使用数组进行数组索引）执行相同的操作，但如果需要沿指定轴获取元素，则可能更容易使用。类似于`np.take(arr,
    indices, axis=3)`的调用等价于`arr[:,:,:,indices,...]`。
- en: 'Explained without fancy indexing, this is equivalent to the following use of
    [`ndindex`](numpy.ndindex.html#numpy.ndindex "numpy.ndindex"), which sets each
    of `ii`, `jj`, and `kk` to a tuple of indices:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 解释不使用fancy索引，这等同于以下对[`ndindex`](numpy.ndindex.html#numpy.ndindex "numpy.ndindex")的使用，它将`ii`、`jj`和`kk`中的每一个设置为索引的元组：
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**a**array_like (Ni…, M, Nk…)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like (Ni…, M, Nk…)'
- en: The source array.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 源数组。
- en: '**indices**array_like (Nj…)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**indices**array_like (Nj…)'
- en: The indices of the values to extract.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要提取的值的索引。
- en: New in version 1.8.0.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.8.0版本中新增。
- en: Also allow scalars for indices.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 也允许索引为标量。
- en: '**axis**int, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**axis**int, optional'
- en: The axis over which to select values. By default, the flattened input array
    is used.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 选择值的轴。默认情况下，使用扁平化的输入数组。
- en: '**out**ndarray, optional (Ni…, Nj…, Nk…)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray, optional (Ni…, Nj…, Nk…)'
- en: If provided, the result will be placed in this array. It should be of the appropriate
    shape and dtype. Note that *out* is always buffered if *mode=’raise’*; use other
    modes for better performance.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供，结果将放入此数组中。它应该具有适当的形状和dtype。注意，如果*mode=’raise’*，*out*始终被缓冲；使用其他模式以获得更好的性能。
- en: '**mode**{‘raise’, ‘wrap’, ‘clip’}, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**{‘raise’, ‘wrap’, ‘clip’}, optional'
- en: Specifies how out-of-bounds indices will behave.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 指定越界索引的行为。
- en: ‘raise’ – raise an error (default)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘raise’ – 抛出错误（默认）
- en: ‘wrap’ – wrap around
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘wrap’ – 包装
- en: ‘clip’ – clip to the range
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘clip’ – 截断到范围内
- en: ‘clip’ mode means that all indices that are too large are replaced by the index
    that addresses the last element along that axis. Note that this disables indexing
    with negative numbers.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: ‘clip’ 模式表示所有太大的索引都将被替换为地址该轴上的最后一个元素的索引。注意，这会禁用使用负数进行索引。
- en: 'Returns:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '返回:'
- en: '**out**ndarray (Ni…, Nj…, Nk…)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray (Ni…, Nj…, Nk…)'
- en: The returned array has the same type as *a*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的数组与*a*具有相同的类型。
- en: See also
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`compress`](numpy.compress.html#numpy.compress "numpy.compress")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`compress`](numpy.compress.html#numpy.compress "numpy.compress")'
- en: Take elements using a boolean mask
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用布尔掩码取元素
- en: '[`ndarray.take`](numpy.ndarray.take.html#numpy.ndarray.take "numpy.ndarray.take")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ndarray.take`](numpy.ndarray.take.html#numpy.ndarray.take "numpy.ndarray.take")'
- en: equivalent method
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 等效方法
- en: '[`take_along_axis`](numpy.take_along_axis.html#numpy.take_along_axis "numpy.take_along_axis")'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`take_along_axis`](numpy.take_along_axis.html#numpy.take_along_axis "numpy.take_along_axis")'
- en: Take elements by matching the array and the index arrays
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通过匹配数组和索引数组取元素
- en: Notes
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'By eliminating the inner loop in the description above, and using [`s_`](numpy.s_.html#numpy.s_
    "numpy.s_") to build simple slice objects, [`take`](#numpy.take "numpy.take")
    can be expressed in terms of applying fancy indexing to each 1-d slice:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通过消除上面的描述中的内部循环，并使用[`s_`](numpy.s_.html#numpy.s_ "numpy.s_")构建简单的切片对象，可以使用`take`在每个1-D切片上应用“fancy”索引来表达：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For this reason, it is equivalent to (but faster than) the following use of
    [`apply_along_axis`](numpy.apply_along_axis.html#numpy.apply_along_axis "numpy.apply_along_axis"):'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这个原因，它等同于（但速度更快）以下对[`apply_along_axis`](numpy.apply_along_axis.html#numpy.apply_along_axis
    "numpy.apply_along_axis")的使用：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Examples
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this example if *a* is an ndarray, “fancy” indexing can be used.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中, 如果*a*是一个ndarray, 可以使用“fancy”索引。
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If [`indices`](numpy.indices.html#numpy.indices "numpy.indices") is not one
    dimensional, the output also has these dimensions.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果[`indices`](numpy.indices.html#numpy.indices "numpy.indices")不是一维的，则输出数组也具有这些维度。
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
