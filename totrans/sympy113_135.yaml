- en: Orienter classes (docstrings)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/vector/api/orienterclasses.html](https://docs.sympy.org/latest/modules/vector/api/orienterclasses.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Super-class for all orienter classes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The rotation matrix corresponding to this orienter instance.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Class to denote an axis orienter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Axis rotation is a rotation about an arbitrary axis by some angle. The angle
    is supplied as a SymPy expr scalar, and the axis is supplied as a Vector.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**angle** : Expr'
  prefs: []
  type: TYPE_NORMAL
- en: The angle by which the new system is to be rotated
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**axis** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: The axis around which the rotation has to be performed
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The rotation matrix corresponding to this orienter instance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**system** : CoordSys3D'
  prefs: []
  type: TYPE_NORMAL
- en: The coordinate system wrt which the rotation matrix is to be computed
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Class to denote a body-orienter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Body orientation takes this coordinate system through three successive simple
    rotations.
  prefs: []
  type: TYPE_NORMAL
- en: Body fixed rotations include both Euler Angles and Tait-Bryan Angles, see [https://en.wikipedia.org/wiki/Euler_angles](https://en.wikipedia.org/wiki/Euler_angles).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**angle1, angle2, angle3** : Expr'
  prefs: []
  type: TYPE_NORMAL
- en: Three successive angles to rotate the coordinate system by
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rotation_order** : string'
  prefs: []
  type: TYPE_NORMAL
- en: String defining the order of axes for rotation
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: A ‘Body’ fixed rotation is described by three angles and three body-fixed rotation
    axes. To orient a coordinate system D with respect to N, each sequential rotation
    is always about the orthogonal unit vectors fixed to D. For example, a ‘123’ rotation
    will specify rotations about N.i, then D.j, then D.k. (Initially, D.i is same
    as N.i) Therefore,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: is same as
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Acceptable rotation orders are of length 3, expressed in XYZ or 123, and cannot
    have a rotation about about an axis twice in a row.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Class to denote a space-orienter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Space rotation is similar to Body rotation, but the rotations are applied in
    the opposite order.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**angle1, angle2, angle3** : Expr'
  prefs: []
  type: TYPE_NORMAL
- en: Three successive angles to rotate the coordinate system by
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rotation_order** : string'
  prefs: []
  type: TYPE_NORMAL
- en: String defining the order of axes for rotation
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: To orient a coordinate system D with respect to N, each sequential rotation
    is always about N’s orthogonal unit vectors. For example, a ‘123’ rotation will
    specify rotations about N.i, then N.j, then N.k. Therefore,
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: is same as
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`BodyOrienter`](#sympy.vector.orienters.BodyOrienter "sympy.vector.orienters.BodyOrienter")'
  prefs: []
  type: TYPE_NORMAL
- en: Orienter to orient systems wrt Euler angles.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Class to denote a quaternion-orienter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Quaternion orientation orients the new CoordSys3D with Quaternions, defined
    as a finite rotation about lambda, a unit vector, by some amount theta.
  prefs: []
  type: TYPE_NORMAL
- en: 'This orientation is described by four parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: q0 = cos(theta/2)
  prefs: []
  type: TYPE_NORMAL
- en: q1 = lambda_x sin(theta/2)
  prefs: []
  type: TYPE_NORMAL
- en: q2 = lambda_y sin(theta/2)
  prefs: []
  type: TYPE_NORMAL
- en: q3 = lambda_z sin(theta/2)
  prefs: []
  type: TYPE_NORMAL
- en: Quaternion does not take in a rotation order.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**q0, q1, q2, q3** : Expr'
  prefs: []
  type: TYPE_NORMAL
- en: The quaternions to rotate the coordinate system by
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
