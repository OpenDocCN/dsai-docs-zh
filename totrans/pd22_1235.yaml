- en: pandas.tseries.offsets.QuarterEnd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.QuarterEnd.html](https://pandas.pydata.org/docs/reference/api/pandas.tseries.offsets.QuarterEnd.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: DateOffset increments between Quarter end dates.
  prefs: []
  type: TYPE_NORMAL
- en: startingMonth = 1 corresponds to dates like 1/31/2007, 4/30/2007, … startingMonth
    = 2 corresponds to dates like 2/28/2007, 5/31/2007, … startingMonth = 3 corresponds
    to dates like 3/31/2007, 6/30/2007, …
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, default 1'
  prefs: []
  type: TYPE_NORMAL
- en: The number of quarters represented.
  prefs: []
  type: TYPE_NORMAL
- en: '**normalize**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: Normalize start/end dates to midnight before generating date range.
  prefs: []
  type: TYPE_NORMAL
- en: '**startingMonth**int, default 3'
  prefs: []
  type: TYPE_NORMAL
- en: A specific integer for the month of the year from which we start quarters.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`DateOffset`](pandas.tseries.offsets.DateOffset.html#pandas.tseries.offsets.DateOffset
    "pandas.tseries.offsets.DateOffset")'
  prefs: []
  type: TYPE_NORMAL
- en: Standard kind of date increment.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Attributes
  prefs: []
  type: TYPE_NORMAL
- en: '| `base` | Returns a copy of the calling offset object with n=1 and all other
    attributes equal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`freqstr`](pandas.tseries.offsets.QuarterEnd.freqstr.html#pandas.tseries.offsets.QuarterEnd.freqstr
    "pandas.tseries.offsets.QuarterEnd.freqstr") | Return a string representing the
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`kwds`](pandas.tseries.offsets.QuarterEnd.kwds.html#pandas.tseries.offsets.QuarterEnd.kwds
    "pandas.tseries.offsets.QuarterEnd.kwds") | Return a dict of extra parameters
    for the offset. |'
  prefs: []
  type: TYPE_TB
- en: '| [`n`](pandas.tseries.offsets.QuarterEnd.n.html#pandas.tseries.offsets.QuarterEnd.n
    "pandas.tseries.offsets.QuarterEnd.n") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`name`](pandas.tseries.offsets.QuarterEnd.name.html#pandas.tseries.offsets.QuarterEnd.name
    "pandas.tseries.offsets.QuarterEnd.name") | Return a string representing the base
    frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`nanos`](pandas.tseries.offsets.QuarterEnd.nanos.html#pandas.tseries.offsets.QuarterEnd.nanos
    "pandas.tseries.offsets.QuarterEnd.nanos") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`normalize`](pandas.tseries.offsets.QuarterEnd.normalize.html#pandas.tseries.offsets.QuarterEnd.normalize
    "pandas.tseries.offsets.QuarterEnd.normalize") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`rule_code`](pandas.tseries.offsets.QuarterEnd.rule_code.html#pandas.tseries.offsets.QuarterEnd.rule_code
    "pandas.tseries.offsets.QuarterEnd.rule_code") |  |'
  prefs: []
  type: TYPE_TB
- en: '| [`startingMonth`](pandas.tseries.offsets.QuarterEnd.startingMonth.html#pandas.tseries.offsets.QuarterEnd.startingMonth
    "pandas.tseries.offsets.QuarterEnd.startingMonth") |  |'
  prefs: []
  type: TYPE_TB
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`copy`](pandas.tseries.offsets.QuarterEnd.copy.html#pandas.tseries.offsets.QuarterEnd.copy
    "pandas.tseries.offsets.QuarterEnd.copy")() | Return a copy of the frequency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_anchored`](pandas.tseries.offsets.QuarterEnd.is_anchored.html#pandas.tseries.offsets.QuarterEnd.is_anchored
    "pandas.tseries.offsets.QuarterEnd.is_anchored")() | Return boolean whether the
    frequency is a unit frequency (n=1). |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_end`](pandas.tseries.offsets.QuarterEnd.is_month_end.html#pandas.tseries.offsets.QuarterEnd.is_month_end
    "pandas.tseries.offsets.QuarterEnd.is_month_end")(ts) | Return boolean whether
    a timestamp occurs on the month end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_month_start`](pandas.tseries.offsets.QuarterEnd.is_month_start.html#pandas.tseries.offsets.QuarterEnd.is_month_start
    "pandas.tseries.offsets.QuarterEnd.is_month_start")(ts) | Return boolean whether
    a timestamp occurs on the month start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_on_offset`](pandas.tseries.offsets.QuarterEnd.is_on_offset.html#pandas.tseries.offsets.QuarterEnd.is_on_offset
    "pandas.tseries.offsets.QuarterEnd.is_on_offset")(dt) | Return boolean whether
    a timestamp intersects with this frequency. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_end`](pandas.tseries.offsets.QuarterEnd.is_quarter_end.html#pandas.tseries.offsets.QuarterEnd.is_quarter_end
    "pandas.tseries.offsets.QuarterEnd.is_quarter_end")(ts) | Return boolean whether
    a timestamp occurs on the quarter end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_quarter_start`](pandas.tseries.offsets.QuarterEnd.is_quarter_start.html#pandas.tseries.offsets.QuarterEnd.is_quarter_start
    "pandas.tseries.offsets.QuarterEnd.is_quarter_start")(ts) | Return boolean whether
    a timestamp occurs on the quarter start. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_end`](pandas.tseries.offsets.QuarterEnd.is_year_end.html#pandas.tseries.offsets.QuarterEnd.is_year_end
    "pandas.tseries.offsets.QuarterEnd.is_year_end")(ts) | Return boolean whether
    a timestamp occurs on the year end. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_year_start`](pandas.tseries.offsets.QuarterEnd.is_year_start.html#pandas.tseries.offsets.QuarterEnd.is_year_start
    "pandas.tseries.offsets.QuarterEnd.is_year_start")(ts) | Return boolean whether
    a timestamp occurs on the year start. |'
  prefs: []
  type: TYPE_TB
- en: '| `rollback`(dt) | Roll provided date backward to next offset only if not on
    offset. |'
  prefs: []
  type: TYPE_TB
- en: '| `rollforward`(dt) | Roll provided date forward to next offset only if not
    on offset. |'
  prefs: []
  type: TYPE_TB
