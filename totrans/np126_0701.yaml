- en: numpy.ma.mask_rowcols
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.mask_rowcols.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.mask_rowcols.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Mask rows and/or columns of a 2D array that contain masked values.
  prefs: []
  type: TYPE_NORMAL
- en: Mask whole rows and/or columns of a 2D array that contain masked values. The
    masking behavior is selected using the *axis* parameter.
  prefs: []
  type: TYPE_NORMAL
- en: If *axis* is None, rows *and* columns are masked.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: If *axis* is 0, only rows are masked.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: If *axis* is 1 or -1, only columns are masked.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like, MaskedArray'
  prefs: []
  type: TYPE_NORMAL
- en: The array to mask. If not a MaskedArray instance (or if no array elements are
    masked), the result is a MaskedArray with *mask* set to [`nomask`](../maskedarray.baseclass.html#numpy.ma.nomask
    "numpy.ma.nomask") (False). Must be a 2D array.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to perform the operation. If None, applies to a flattened version
    of the array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**MaskedArray'
  prefs: []
  type: TYPE_NORMAL
- en: A modified version of the input array, masked depending on the value of the
    *axis* parameter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: NotImplementedError
  prefs: []
  type: TYPE_NORMAL
- en: If input array *a* is not 2D.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`mask_rows`](numpy.ma.mask_rows.html#numpy.ma.mask_rows "numpy.ma.mask_rows")'
  prefs: []
  type: TYPE_NORMAL
- en: Mask rows of a 2D array that contain masked values.
  prefs: []
  type: TYPE_NORMAL
- en: '[`mask_cols`](numpy.ma.mask_cols.html#numpy.ma.mask_cols "numpy.ma.mask_cols")'
  prefs: []
  type: TYPE_NORMAL
- en: Mask cols of a 2D array that contain masked values.
  prefs: []
  type: TYPE_NORMAL
- en: '[`masked_where`](numpy.ma.masked_where.html#numpy.ma.masked_where "numpy.ma.masked_where")'
  prefs: []
  type: TYPE_NORMAL
- en: Mask where a condition is met.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The input array’s mask is modified by this function.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
