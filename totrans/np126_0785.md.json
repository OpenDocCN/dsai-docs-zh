["```py\nma.outer(a, b)\n```", "```py\n[[a_0*b_0  a_0*b_1 ... a_0*b_{N-1} ]\n [a_1*b_0    .\n [ ...          .\n [a_{M-1}*b_0            a_{M-1}*b_{N-1} ]] \n```", "```py\n>>> rl = np.outer(np.ones((5,)), np.linspace(-2, 2, 5))\n>>> rl\narray([[-2., -1.,  0.,  1.,  2.],\n [-2., -1.,  0.,  1.,  2.],\n [-2., -1.,  0.,  1.,  2.],\n [-2., -1.,  0.,  1.,  2.],\n [-2., -1.,  0.,  1.,  2.]])\n>>> im = np.outer(1j*np.linspace(2, -2, 5), np.ones((5,)))\n>>> im\narray([[0.+2.j, 0.+2.j, 0.+2.j, 0.+2.j, 0.+2.j],\n [0.+1.j, 0.+1.j, 0.+1.j, 0.+1.j, 0.+1.j],\n [0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j, 0.+0.j],\n [0.-1.j, 0.-1.j, 0.-1.j, 0.-1.j, 0.-1.j],\n [0.-2.j, 0.-2.j, 0.-2.j, 0.-2.j, 0.-2.j]])\n>>> grid = rl + im\n>>> grid\narray([[-2.+2.j, -1.+2.j,  0.+2.j,  1.+2.j,  2.+2.j],\n [-2.+1.j, -1.+1.j,  0.+1.j,  1.+1.j,  2.+1.j],\n [-2.+0.j, -1.+0.j,  0.+0.j,  1.+0.j,  2.+0.j],\n [-2.-1.j, -1.-1.j,  0.-1.j,  1.-1.j,  2.-1.j],\n [-2.-2.j, -1.-2.j,  0.-2.j,  1.-2.j,  2.-2.j]]) \n```", "```py\n>>> x = np.array(['a', 'b', 'c'], dtype=object)\n>>> np.outer(x, [1, 2, 3])\narray([['a', 'aa', 'aaa'],\n ['b', 'bb', 'bbb'],\n ['c', 'cc', 'ccc']], dtype=object) \n```"]