- en: pandas.DataFrame.mode
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mode.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mode.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Get the mode(s) of each element along the selected axis.
  prefs: []
  type: TYPE_NORMAL
- en: The mode of a set of values is the value that appears most often. It can be
    multiple values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0 or ‘index’, 1 or ‘columns’}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: 'The axis to iterate over while searching for the mode:'
  prefs: []
  type: TYPE_NORMAL
- en: '0 or ‘index’ : get mode of each column'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '1 or ‘columns’ : get mode of each row.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**numeric_only**bool, default False'
  prefs: []
  type: TYPE_NORMAL
- en: If True, only apply to numeric columns.
  prefs: []
  type: TYPE_NORMAL
- en: '**dropna**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Don’t consider counts of NaN/NaT.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrame
  prefs: []
  type: TYPE_NORMAL
- en: The modes of each column or row.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.mode`](pandas.Series.mode.html#pandas.Series.mode "pandas.Series.mode")'
  prefs: []
  type: TYPE_NORMAL
- en: Return the highest frequency value in a Series.
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.value_counts`](pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts")'
  prefs: []
  type: TYPE_NORMAL
- en: Return the counts of values in a Series.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: By default, missing values are not considered, and the mode of wings are both
    0 and 2\. Because the resulting DataFrame has two rows, the second row of `species`
    and `legs` contains `NaN`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Setting `dropna=False` `NaN` values are considered and they can be the mode
    (like for wings).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Setting `numeric_only=True`, only the mode of numeric columns is computed, and
    columns of other types are ignored.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'To compute the mode over columns and not rows, use the axis parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
