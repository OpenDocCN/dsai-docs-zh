- en: numpy.testing.suppress_warnings
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.testing.suppress_warnings
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.suppress_warnings.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.suppress_warnings.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.testing.suppress_warnings.html](https://numpy.org/doc/1.26/reference/generated/numpy.testing.suppress_warnings.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Context manager and decorator doing much the same as `warnings.catch_warnings`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文管理器和装饰器的功能与`warnings.catch_warnings`类似。
- en: However, it also provides a filter mechanism to work around [https://bugs.python.org/issue4180](https://bugs.python.org/issue4180).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这也提供了一种解决[https://bugs.python.org/issue4180](https://bugs.python.org/issue4180)的过滤机制。
- en: This bug causes Python before 3.4 to not reliably show warnings again after
    they have been ignored once (even within catch_warnings). It means that no “ignore”
    filter can be used easily, since following tests might need to see the warning.
    Additionally it allows easier specificity for testing warnings and can be nested.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 bug 导致 Python 3.4 之前的版本在被忽略一次后无法可靠地再次显示警告（即使在 catch_warnings 内部）。这意味着很难使用“ignore”过滤器，因为后续的测试可能需要查看警告。此外，它允许更容易地针对测试警告进行特定设置，还可嵌套使用。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**forwarding_rule**str, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**forwarding_rule**str, optional'
- en: One of “always”, “once”, “module”, or “location”. Analogous to the usual warnings
    module filter mode, it is useful to reduce noise mostly on the outmost level.
    Unsuppressed and unrecorded warnings will be forwarded based on this rule. Defaults
    to “always”. “location” is equivalent to the warnings “default”, match by exact
    location the warning warning originated from.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“always”、“once”、“module”或“location”之一。类似于常规警告模块的过滤模式，有助于减少大部分噪音的输出。未抑制和未记录的警告将根据此规则转发。默认为“always”。“location”相当于警告的“default”，根据警告来源的确切位置匹配。
- en: Notes
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Filters added inside the context manager will be discarded again when leaving
    it. Upon entering all filters defined outside a context will be applied automatically.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在上下文管理器内添加的过滤器在退出时将被丢弃。进入时将自动应用所有在上层定义的过滤器。
- en: When a recording filter is added, matching warnings are stored in the `log`
    attribute as well as in the list returned by `record`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当添加记录过滤器时，匹配的警告将存储在`log`属性中，以及在`record`返回的列表中。
- en: If filters are added and the `module` keyword is given, the warning registry
    of this module will additionally be cleared when applying it, entering the context,
    or exiting it. This could cause warnings to appear a second time after leaving
    the context if they were configured to be printed once (default) and were already
    printed before the context was entered.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果添加了过滤器并提供了`module`关键字，则在应用、进入上下文或退出上下文时还将清除此模块的警告注册表。如果配置为仅打印一次（默认）并且在进入上下文之前已经打印过，则可能导致警告再次显示。
- en: Nesting this context manager will work as expected when the forwarding rule
    is “always” (default). Unfiltered and unrecorded warnings will be passed out and
    be matched by the outer level. On the outmost level they will be printed (or caught
    by another warnings context). The forwarding rule argument can modify this behaviour.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套此上下文管理器在“always”（默认）的转发规则下能正常工作。未经过滤和未记录的警告将被传递出去，并由外层级别匹配。在最外层级别上，它们将被打印（或被另一个警告上下文捕获）。转发规则参数可以修改这种行为。
- en: Like `catch_warnings` this context manager is not threadsafe.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`catch_warnings`，此上下文管理器不支持多线程。
- en: Examples
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'With a context manager:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上下文管理器：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Or as a decorator:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 或者作为装饰器：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Methods
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__call__`](numpy.testing.suppress_warnings.__call__.html#numpy.testing.suppress_warnings.__call__
    "numpy.testing.suppress_warnings.__call__")(func) | Function decorator to apply
    certain suppressions to a whole function. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`__call__`](numpy.testing.suppress_warnings.__call__.html#numpy.testing.suppress_warnings.__call__
    "numpy.testing.suppress_warnings.__call__")(func) | 函数装饰器，可将某些抑制应用于整个函数。 |'
- en: '| [`filter`](numpy.testing.suppress_warnings.filter.html#numpy.testing.suppress_warnings.filter
    "numpy.testing.suppress_warnings.filter")([category, message, module]) | Add a
    new suppressing filter or apply it if the state is entered. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`filter`](numpy.testing.suppress_warnings.filter.html#numpy.testing.suppress_warnings.filter
    "numpy.testing.suppress_warnings.filter")([category, message, module]) | 添加一个新的抑制过滤器，或者在状态进入时应用它。
    |'
- en: '| [`record`](numpy.testing.suppress_warnings.record.html#numpy.testing.suppress_warnings.record
    "numpy.testing.suppress_warnings.record")([category, message, module]) | Append
    a new recording filter or apply it if the state is entered. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`record`](numpy.testing.suppress_warnings.record.html#numpy.testing.suppress_warnings.record
    "numpy.testing.suppress_warnings.record")([category, message, module]) | 追加一个新的记录过滤器，或者在状态进入时应用它。
    |'
