["```py\nIn [1]: import pandas as pd\n\nIn [2]: import numpy as np \n```", "```py\n> sorted_df = df.sort_values(\"col1\") \n> ```", "```py\n> df = df.sort_values(\"col1\") \n> ```", "```py\ndf.replace(5, inplace=True) \n```", "```py\ninput x y\n1 2\n3 4\n5 6\nend \n```", "```py\nIn [3]: df = pd.DataFrame({\"x\": [1, 3, 5], \"y\": [2, 4, 6]})\n\nIn [4]: df\nOut[4]: \n x  y\n0  1  2\n1  3  4\n2  5  6 \n```", "```py\nimport delimited tips.csv \n```", "```py\nIn [5]: url = (\n ...:    \"https://raw.githubusercontent.com/pandas-dev\"\n ...:    \"/pandas/main/pandas/tests/io/data/csv/tips.csv\"\n ...: )\n ...: \n\nIn [6]: tips = pd.read_csv(url)\n\nIn [7]: tips\nOut[7]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\ntips = pd.read_csv(\"tips.csv\", sep=\"\\t\", header=None)\n\n# alternatively, read_table is an alias to read_csv with tab delimiter\ntips = pd.read_table(\"tips.csv\", header=None) \n```", "```py\ndf = pd.read_stata(\"data.dta\") \n```", "```py\nIn [8]: tips.head(5)\nOut[8]: \n total_bill   tip     sex smoker  day    time  size\n0       16.99  1.01  Female     No  Sun  Dinner     2\n1       10.34  1.66    Male     No  Sun  Dinner     3\n2       21.01  3.50    Male     No  Sun  Dinner     3\n3       23.68  3.31    Male     No  Sun  Dinner     2\n4       24.59  3.61  Female     No  Sun  Dinner     4 \n```", "```py\nlist in 1/5 \n```", "```py\nexport delimited tips2.csv \n```", "```py\ntips.to_csv(\"tips2.csv\") \n```", "```py\ntips.to_stata(\"tips2.dta\") \n```", "```py\nreplace total_bill = total_bill - 2\ngenerate new_bill = total_bill / 2\ndrop new_bill \n```", "```py\nIn [9]: tips[\"total_bill\"] = tips[\"total_bill\"] - 2\n\nIn [10]: tips[\"new_bill\"] = tips[\"total_bill\"] / 2\n\nIn [11]: tips\nOut[11]: \n total_bill   tip     sex smoker   day    time  size  new_bill\n0         14.99  1.01  Female     No   Sun  Dinner     2     7.495\n1          8.34  1.66    Male     No   Sun  Dinner     3     4.170\n2         19.01  3.50    Male     No   Sun  Dinner     3     9.505\n3         21.68  3.31    Male     No   Sun  Dinner     2    10.840\n4         22.59  3.61  Female     No   Sun  Dinner     4    11.295\n..          ...   ...     ...    ...   ...     ...   ...       ...\n239       27.03  5.92    Male     No   Sat  Dinner     3    13.515\n240       25.18  2.00  Female    Yes   Sat  Dinner     2    12.590\n241       20.67  2.00    Male    Yes   Sat  Dinner     2    10.335\n242       15.82  1.75    Male     No   Sat  Dinner     2     7.910\n243       16.78  3.00  Female     No  Thur  Dinner     2     8.390\n\n[244 rows x 8 columns]\n\nIn [12]: tips = tips.drop(\"new_bill\", axis=1) \n```", "```py\nlist if total_bill > 10 \n```", "```py\nIn [13]: tips[tips[\"total_bill\"] > 10]\nOut[13]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n5         23.29  4.71    Male     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[204 rows x 7 columns] \n```", "```py\nIn [14]: is_dinner = tips[\"time\"] == \"Dinner\"\n\nIn [15]: is_dinner\nOut[15]: \n0      True\n1      True\n2      True\n3      True\n4      True\n ... \n239    True\n240    True\n241    True\n242    True\n243    True\nName: time, Length: 244, dtype: bool\n\nIn [16]: is_dinner.value_counts()\nOut[16]: \ntime\nTrue     176\nFalse     68\nName: count, dtype: int64\n\nIn [17]: tips[is_dinner]\nOut[17]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n1          8.34  1.66    Male     No   Sun  Dinner     3\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[176 rows x 7 columns] \n```", "```py\ngenerate bucket = \"low\" if total_bill < 10\nreplace bucket = \"high\" if total_bill >= 10 \n```", "```py\nIn [18]: tips[\"bucket\"] = np.where(tips[\"total_bill\"] < 10, \"low\", \"high\")\n\nIn [19]: tips\nOut[19]: \n total_bill   tip     sex smoker   day    time  size bucket\n0         14.99  1.01  Female     No   Sun  Dinner     2   high\n1          8.34  1.66    Male     No   Sun  Dinner     3    low\n2         19.01  3.50    Male     No   Sun  Dinner     3   high\n3         21.68  3.31    Male     No   Sun  Dinner     2   high\n4         22.59  3.61  Female     No   Sun  Dinner     4   high\n..          ...   ...     ...    ...   ...     ...   ...    ...\n239       27.03  5.92    Male     No   Sat  Dinner     3   high\n240       25.18  2.00  Female    Yes   Sat  Dinner     2   high\n241       20.67  2.00    Male    Yes   Sat  Dinner     2   high\n242       15.82  1.75    Male     No   Sat  Dinner     2   high\n243       16.78  3.00  Female     No  Thur  Dinner     2   high\n\n[244 rows x 8 columns] \n```", "```py\ngenerate date1 = mdy(1, 15, 2013)\ngenerate date2 = date(\"Feb152015\", \"MDY\")\n\ngenerate date1_year = year(date1)\ngenerate date2_month = month(date2)\n\n* shift date to beginning of next month\ngenerate date1_next = mdy(month(date1) + 1, 1, year(date1)) if month(date1) != 12\nreplace date1_next = mdy(1, 1, year(date1) + 1) if month(date1) == 12\ngenerate months_between = mofd(date2) - mofd(date1)\n\nlist date1 date2 date1_year date2_month date1_next months_between \n```", "```py\nIn [20]: tips[\"date1\"] = pd.Timestamp(\"2013-01-15\")\n\nIn [21]: tips[\"date2\"] = pd.Timestamp(\"2015-02-15\")\n\nIn [22]: tips[\"date1_year\"] = tips[\"date1\"].dt.year\n\nIn [23]: tips[\"date2_month\"] = tips[\"date2\"].dt.month\n\nIn [24]: tips[\"date1_next\"] = tips[\"date1\"] + pd.offsets.MonthBegin()\n\nIn [25]: tips[\"months_between\"] = tips[\"date2\"].dt.to_period(\"M\") - tips[\n ....:    \"date1\"\n ....: ].dt.to_period(\"M\")\n ....: \n\nIn [26]: tips[\n ....:    [\"date1\", \"date2\", \"date1_year\", \"date2_month\", \"date1_next\", \"months_between\"]\n ....: ]\n ....: \nOut[26]: \n date1      date2  date1_year  date2_month date1_next    months_between\n0   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n1   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n2   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n3   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n4   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n..         ...        ...         ...          ...        ...               ...\n239 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n240 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n241 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n242 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n243 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n\n[244 rows x 6 columns] \n```", "```py\nkeep sex total_bill tip\n\ndrop sex\n\nrename total_bill total_bill_2 \n```", "```py\nIn [27]: tips[[\"sex\", \"total_bill\", \"tip\"]]\nOut[27]: \n sex  total_bill   tip\n0    Female       14.99  1.01\n1      Male        8.34  1.66\n2      Male       19.01  3.50\n3      Male       21.68  3.31\n4    Female       22.59  3.61\n..      ...         ...   ...\n239    Male       27.03  5.92\n240  Female       25.18  2.00\n241    Male       20.67  2.00\n242    Male       15.82  1.75\n243  Female       16.78  3.00\n\n[244 rows x 3 columns] \n```", "```py\nIn [28]: tips.drop(\"sex\", axis=1)\nOut[28]: \n total_bill   tip smoker   day    time  size\n0         14.99  1.01     No   Sun  Dinner     2\n1          8.34  1.66     No   Sun  Dinner     3\n2         19.01  3.50     No   Sun  Dinner     3\n3         21.68  3.31     No   Sun  Dinner     2\n4         22.59  3.61     No   Sun  Dinner     4\n..          ...   ...    ...   ...     ...   ...\n239       27.03  5.92     No   Sat  Dinner     3\n240       25.18  2.00    Yes   Sat  Dinner     2\n241       20.67  2.00    Yes   Sat  Dinner     2\n242       15.82  1.75     No   Sat  Dinner     2\n243       16.78  3.00     No  Thur  Dinner     2\n\n[244 rows x 6 columns] \n```", "```py\nIn [29]: tips.rename(columns={\"total_bill\": \"total_bill_2\"})\nOut[29]: \n total_bill_2   tip     sex smoker   day    time  size\n0           14.99  1.01  Female     No   Sun  Dinner     2\n1            8.34  1.66    Male     No   Sun  Dinner     3\n2           19.01  3.50    Male     No   Sun  Dinner     3\n3           21.68  3.31    Male     No   Sun  Dinner     2\n4           22.59  3.61  Female     No   Sun  Dinner     4\n..            ...   ...     ...    ...   ...     ...   ...\n239         27.03  5.92    Male     No   Sat  Dinner     3\n240         25.18  2.00  Female    Yes   Sat  Dinner     2\n241         20.67  2.00    Male    Yes   Sat  Dinner     2\n242         15.82  1.75    Male     No   Sat  Dinner     2\n243         16.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\nsort sex total_bill \n```", "```py\nIn [30]: tips = tips.sort_values([\"sex\", \"total_bill\"])\n\nIn [31]: tips\nOut[31]: \n total_bill    tip     sex smoker   day    time  size\n67         1.07   1.00  Female    Yes   Sat  Dinner     1\n92         3.75   1.00  Female    Yes   Fri  Dinner     2\n111        5.25   1.00  Female     No   Sat  Dinner     1\n145        6.35   1.50  Female     No  Thur   Lunch     2\n135        6.51   1.25  Female     No  Thur   Lunch     2\n..          ...    ...     ...    ...   ...     ...   ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3\n156       46.17   5.00    Male     No   Sun  Dinner     6\n59        46.27   6.73    Male     No   Sat  Dinner     4\n212       46.33   9.00    Male     No   Sat  Dinner     4\n170       48.81  10.00    Male    Yes   Sat  Dinner     3\n\n[244 rows x 7 columns] \n```", "```py\ngenerate strlen_time = strlen(time)\ngenerate ustrlen_time = ustrlen(time) \n```", "```py\nIn [32]: tips[\"time\"].str.len()\nOut[32]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64\n\nIn [33]: tips[\"time\"].str.rstrip().str.len()\nOut[33]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64 \n```", "```py\ngenerate str_position = strpos(sex, \"ale\") \n```", "```py\nIn [34]: tips[\"sex\"].str.find(\"ale\")\nOut[34]: \n67     3\n92     3\n111    3\n145    3\n135    3\n ..\n182    1\n156    1\n59     1\n212    1\n170    1\nName: sex, Length: 244, dtype: int64 \n```", "```py\ngenerate short_sex = substr(sex, 1, 1) \n```", "```py\nIn [35]: tips[\"sex\"].str[0:1]\nOut[35]: \n67     F\n92     F\n111    F\n145    F\n135    F\n ..\n182    M\n156    M\n59     M\n212    M\n170    M\nName: sex, Length: 244, dtype: object \n```", "```py\nclear\ninput str20 string\n\"John Smith\"\n\"Jane Cook\"\nend\n\ngenerate first_name = word(name, 1)\ngenerate last_name = word(name, -1) \n```", "```py\nIn [36]: firstlast = pd.DataFrame({\"String\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [37]: firstlast[\"First_Name\"] = firstlast[\"String\"].str.split(\" \", expand=True)[0]\n\nIn [38]: firstlast[\"Last_Name\"] = firstlast[\"String\"].str.rsplit(\" \", expand=True)[1]\n\nIn [39]: firstlast\nOut[39]: \n String First_Name Last_Name\n0  John Smith       John     Smith\n1   Jane Cook       Jane      Cook \n```", "```py\nclear\ninput str20 string\n\"John Smith\"\n\"Jane Cook\"\nend\n\ngenerate upper = strupper(string)\ngenerate lower = strlower(string)\ngenerate title = strproper(string)\nlist \n```", "```py\nIn [40]: firstlast = pd.DataFrame({\"string\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [41]: firstlast[\"upper\"] = firstlast[\"string\"].str.upper()\n\nIn [42]: firstlast[\"lower\"] = firstlast[\"string\"].str.lower()\n\nIn [43]: firstlast[\"title\"] = firstlast[\"string\"].str.title()\n\nIn [44]: firstlast\nOut[44]: \n string       upper       lower       title\n0  John Smith  JOHN SMITH  john smith  John Smith\n1   Jane Cook   JANE COOK   jane cook   Jane Cook \n```", "```py\nIn [45]: df1 = pd.DataFrame({\"key\": [\"A\", \"B\", \"C\", \"D\"], \"value\": np.random.randn(4)})\n\nIn [46]: df1\nOut[46]: \n key     value\n0   A  0.469112\n1   B -0.282863\n2   C -1.509059\n3   D -1.135632\n\nIn [47]: df2 = pd.DataFrame({\"key\": [\"B\", \"D\", \"D\", \"E\"], \"value\": np.random.randn(4)})\n\nIn [48]: df2\nOut[48]: \n key     value\n0   B  1.212112\n1   D -0.173215\n2   D  0.119209\n3   E -1.044236 \n```", "```py\n* First create df2 and save to disk\nclear\ninput str1 key\nB\nD\nD\nE\nend\ngenerate value = rnormal()\nsave df2.dta\n\n* Now create df1 in memory\nclear\ninput str1 key\nA\nB\nC\nD\nend\ngenerate value = rnormal()\n\npreserve\n\n* Left join\nmerge 1:n key using df2.dta\nkeep if _merge == 1\n\n* Right join\nrestore, preserve\nmerge 1:n key using df2.dta\nkeep if _merge == 2\n\n* Inner join\nrestore, preserve\nmerge 1:n key using df2.dta\nkeep if _merge == 3\n\n* Outer join\nrestore\nmerge 1:n key using df2.dta \n```", "```py\nIn [49]: inner_join = df1.merge(df2, on=[\"key\"], how=\"inner\")\n\nIn [50]: inner_join\nOut[50]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n\nIn [51]: left_join = df1.merge(df2, on=[\"key\"], how=\"left\")\n\nIn [52]: left_join\nOut[52]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n\nIn [53]: right_join = df1.merge(df2, on=[\"key\"], how=\"right\")\n\nIn [54]: right_join\nOut[54]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n3   E       NaN -1.044236\n\nIn [55]: outer_join = df1.merge(df2, on=[\"key\"], how=\"outer\")\n\nIn [56]: outer_join\nOut[56]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236 \n```", "```py\nIn [57]: outer_join\nOut[57]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236\n\nIn [58]: outer_join[\"value_x\"] + outer_join[\"value_y\"]\nOut[58]: \n0         NaN\n1    0.929249\n2         NaN\n3   -1.308847\n4   -1.016424\n5         NaN\ndtype: float64\n\nIn [59]: outer_join[\"value_x\"].sum()\nOut[59]: -3.5940742896293765 \n```", "```py\n* Keep missing values\nlist if value_x == .\n* Keep non-missing values\nlist if value_x != . \n```", "```py\nIn [60]: outer_join[outer_join[\"value_x\"].isna()]\nOut[60]: \n key  value_x   value_y\n5   E      NaN -1.044236\n\nIn [61]: outer_join[outer_join[\"value_x\"].notna()]\nOut[61]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [62]: outer_join.dropna()\nOut[62]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [63]: outer_join.ffill()\nOut[63]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E -1.135632 -1.044236 \n```", "```py\nIn [64]: outer_join[\"value_x\"].fillna(outer_join[\"value_x\"].mean())\nOut[64]: \n0    0.469112\n1   -0.282863\n2   -1.509059\n3   -1.135632\n4   -1.135632\n5   -0.718815\nName: value_x, dtype: float64 \n```", "```py\ncollapse (sum) total_bill tip, by(sex smoker) \n```", "```py\nIn [65]: tips_summed = tips.groupby([\"sex\", \"smoker\"])[[\"total_bill\", \"tip\"]].sum()\n\nIn [66]: tips_summed\nOut[66]: \n total_bill     tip\nsex    smoker \nFemale No          869.68  149.77\n Yes         527.27   96.74\nMale   No         1725.75  302.00\n Yes        1217.07  183.07 \n```", "```py\nbysort sex smoker: egen group_bill = mean(total_bill)\ngenerate adj_total_bill = total_bill - group_bill \n```", "```py\nIn [67]: gb = tips.groupby(\"smoker\")[\"total_bill\"]\n\nIn [68]: tips[\"adj_total_bill\"] = tips[\"total_bill\"] - gb.transform(\"mean\")\n\nIn [69]: tips\nOut[69]: \n total_bill    tip     sex smoker   day    time  size  adj_total_bill\n67         1.07   1.00  Female    Yes   Sat  Dinner     1      -17.686344\n92         3.75   1.00  Female    Yes   Fri  Dinner     2      -15.006344\n111        5.25   1.00  Female     No   Sat  Dinner     1      -11.938278\n145        6.35   1.50  Female     No  Thur   Lunch     2      -10.838278\n135        6.51   1.25  Female     No  Thur   Lunch     2      -10.678278\n..          ...    ...     ...    ...   ...     ...   ...             ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3       24.593656\n156       46.17   5.00    Male     No   Sun  Dinner     6       28.981722\n59        46.27   6.73    Male     No   Sat  Dinner     4       29.081722\n212       46.33   9.00    Male     No   Sat  Dinner     4       29.141722\n170       48.81  10.00    Male    Yes   Sat  Dinner     3       30.053656\n\n[244 rows x 8 columns] \n```", "```py\nbysort sex smoker: list if _n == 1 \n```", "```py\nIn [70]: tips.groupby([\"sex\", \"smoker\"]).first()\nOut[70]: \n total_bill   tip   day    time  size  adj_total_bill\nsex    smoker \nFemale No            5.25  1.00   Sat  Dinner     1      -11.938278\n Yes           1.07  1.00   Sat  Dinner     1      -17.686344\nMale   No            5.51  2.00  Thur   Lunch     2      -11.678278\n Yes           5.25  5.15   Sun  Dinner     2      -13.506344 \n```", "```py\n> sorted_df = df.sort_values(\"col1\") \n> ```", "```py\n> df = df.sort_values(\"col1\") \n> ```", "```py\ndf.replace(5, inplace=True) \n```", "```py\n> sorted_df = df.sort_values(\"col1\") \n> ```", "```py\n> df = df.sort_values(\"col1\") \n> ```", "```py\ndf.replace(5, inplace=True) \n```", "```py\ninput x y\n1 2\n3 4\n5 6\nend \n```", "```py\nIn [3]: df = pd.DataFrame({\"x\": [1, 3, 5], \"y\": [2, 4, 6]})\n\nIn [4]: df\nOut[4]: \n x  y\n0  1  2\n1  3  4\n2  5  6 \n```", "```py\nimport delimited tips.csv \n```", "```py\nIn [5]: url = (\n ...:    \"https://raw.githubusercontent.com/pandas-dev\"\n ...:    \"/pandas/main/pandas/tests/io/data/csv/tips.csv\"\n ...: )\n ...: \n\nIn [6]: tips = pd.read_csv(url)\n\nIn [7]: tips\nOut[7]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\ntips = pd.read_csv(\"tips.csv\", sep=\"\\t\", header=None)\n\n# alternatively, read_table is an alias to read_csv with tab delimiter\ntips = pd.read_table(\"tips.csv\", header=None) \n```", "```py\ndf = pd.read_stata(\"data.dta\") \n```", "```py\nIn [8]: tips.head(5)\nOut[8]: \n total_bill   tip     sex smoker  day    time  size\n0       16.99  1.01  Female     No  Sun  Dinner     2\n1       10.34  1.66    Male     No  Sun  Dinner     3\n2       21.01  3.50    Male     No  Sun  Dinner     3\n3       23.68  3.31    Male     No  Sun  Dinner     2\n4       24.59  3.61  Female     No  Sun  Dinner     4 \n```", "```py\nlist in 1/5 \n```", "```py\nexport delimited tips2.csv \n```", "```py\ntips.to_csv(\"tips2.csv\") \n```", "```py\ntips.to_stata(\"tips2.dta\") \n```", "```py\ninput x y\n1 2\n3 4\n5 6\nend \n```", "```py\nIn [3]: df = pd.DataFrame({\"x\": [1, 3, 5], \"y\": [2, 4, 6]})\n\nIn [4]: df\nOut[4]: \n x  y\n0  1  2\n1  3  4\n2  5  6 \n```", "```py\nimport delimited tips.csv \n```", "```py\nIn [5]: url = (\n ...:    \"https://raw.githubusercontent.com/pandas-dev\"\n ...:    \"/pandas/main/pandas/tests/io/data/csv/tips.csv\"\n ...: )\n ...: \n\nIn [6]: tips = pd.read_csv(url)\n\nIn [7]: tips\nOut[7]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\ntips = pd.read_csv(\"tips.csv\", sep=\"\\t\", header=None)\n\n# alternatively, read_table is an alias to read_csv with tab delimiter\ntips = pd.read_table(\"tips.csv\", header=None) \n```", "```py\ndf = pd.read_stata(\"data.dta\") \n```", "```py\nIn [8]: tips.head(5)\nOut[8]: \n total_bill   tip     sex smoker  day    time  size\n0       16.99  1.01  Female     No  Sun  Dinner     2\n1       10.34  1.66    Male     No  Sun  Dinner     3\n2       21.01  3.50    Male     No  Sun  Dinner     3\n3       23.68  3.31    Male     No  Sun  Dinner     2\n4       24.59  3.61  Female     No  Sun  Dinner     4 \n```", "```py\nlist in 1/5 \n```", "```py\nexport delimited tips2.csv \n```", "```py\ntips.to_csv(\"tips2.csv\") \n```", "```py\ntips.to_stata(\"tips2.dta\") \n```", "```py\nreplace total_bill = total_bill - 2\ngenerate new_bill = total_bill / 2\ndrop new_bill \n```", "```py\nIn [9]: tips[\"total_bill\"] = tips[\"total_bill\"] - 2\n\nIn [10]: tips[\"new_bill\"] = tips[\"total_bill\"] / 2\n\nIn [11]: tips\nOut[11]: \n total_bill   tip     sex smoker   day    time  size  new_bill\n0         14.99  1.01  Female     No   Sun  Dinner     2     7.495\n1          8.34  1.66    Male     No   Sun  Dinner     3     4.170\n2         19.01  3.50    Male     No   Sun  Dinner     3     9.505\n3         21.68  3.31    Male     No   Sun  Dinner     2    10.840\n4         22.59  3.61  Female     No   Sun  Dinner     4    11.295\n..          ...   ...     ...    ...   ...     ...   ...       ...\n239       27.03  5.92    Male     No   Sat  Dinner     3    13.515\n240       25.18  2.00  Female    Yes   Sat  Dinner     2    12.590\n241       20.67  2.00    Male    Yes   Sat  Dinner     2    10.335\n242       15.82  1.75    Male     No   Sat  Dinner     2     7.910\n243       16.78  3.00  Female     No  Thur  Dinner     2     8.390\n\n[244 rows x 8 columns]\n\nIn [12]: tips = tips.drop(\"new_bill\", axis=1) \n```", "```py\nlist if total_bill > 10 \n```", "```py\nIn [13]: tips[tips[\"total_bill\"] > 10]\nOut[13]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n5         23.29  4.71    Male     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[204 rows x 7 columns] \n```", "```py\nIn [14]: is_dinner = tips[\"time\"] == \"Dinner\"\n\nIn [15]: is_dinner\nOut[15]: \n0      True\n1      True\n2      True\n3      True\n4      True\n ... \n239    True\n240    True\n241    True\n242    True\n243    True\nName: time, Length: 244, dtype: bool\n\nIn [16]: is_dinner.value_counts()\nOut[16]: \ntime\nTrue     176\nFalse     68\nName: count, dtype: int64\n\nIn [17]: tips[is_dinner]\nOut[17]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n1          8.34  1.66    Male     No   Sun  Dinner     3\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[176 rows x 7 columns] \n```", "```py\ngenerate bucket = \"low\" if total_bill < 10\nreplace bucket = \"high\" if total_bill >= 10 \n```", "```py\nIn [18]: tips[\"bucket\"] = np.where(tips[\"total_bill\"] < 10, \"low\", \"high\")\n\nIn [19]: tips\nOut[19]: \n total_bill   tip     sex smoker   day    time  size bucket\n0         14.99  1.01  Female     No   Sun  Dinner     2   high\n1          8.34  1.66    Male     No   Sun  Dinner     3    low\n2         19.01  3.50    Male     No   Sun  Dinner     3   high\n3         21.68  3.31    Male     No   Sun  Dinner     2   high\n4         22.59  3.61  Female     No   Sun  Dinner     4   high\n..          ...   ...     ...    ...   ...     ...   ...    ...\n239       27.03  5.92    Male     No   Sat  Dinner     3   high\n240       25.18  2.00  Female    Yes   Sat  Dinner     2   high\n241       20.67  2.00    Male    Yes   Sat  Dinner     2   high\n242       15.82  1.75    Male     No   Sat  Dinner     2   high\n243       16.78  3.00  Female     No  Thur  Dinner     2   high\n\n[244 rows x 8 columns] \n```", "```py\ngenerate date1 = mdy(1, 15, 2013)\ngenerate date2 = date(\"Feb152015\", \"MDY\")\n\ngenerate date1_year = year(date1)\ngenerate date2_month = month(date2)\n\n* shift date to beginning of next month\ngenerate date1_next = mdy(month(date1) + 1, 1, year(date1)) if month(date1) != 12\nreplace date1_next = mdy(1, 1, year(date1) + 1) if month(date1) == 12\ngenerate months_between = mofd(date2) - mofd(date1)\n\nlist date1 date2 date1_year date2_month date1_next months_between \n```", "```py\nIn [20]: tips[\"date1\"] = pd.Timestamp(\"2013-01-15\")\n\nIn [21]: tips[\"date2\"] = pd.Timestamp(\"2015-02-15\")\n\nIn [22]: tips[\"date1_year\"] = tips[\"date1\"].dt.year\n\nIn [23]: tips[\"date2_month\"] = tips[\"date2\"].dt.month\n\nIn [24]: tips[\"date1_next\"] = tips[\"date1\"] + pd.offsets.MonthBegin()\n\nIn [25]: tips[\"months_between\"] = tips[\"date2\"].dt.to_period(\"M\") - tips[\n ....:    \"date1\"\n ....: ].dt.to_period(\"M\")\n ....: \n\nIn [26]: tips[\n ....:    [\"date1\", \"date2\", \"date1_year\", \"date2_month\", \"date1_next\", \"months_between\"]\n ....: ]\n ....: \nOut[26]: \n date1      date2  date1_year  date2_month date1_next    months_between\n0   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n1   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n2   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n3   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n4   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n..         ...        ...         ...          ...        ...               ...\n239 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n240 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n241 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n242 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n243 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n\n[244 rows x 6 columns] \n```", "```py\nkeep sex total_bill tip\n\ndrop sex\n\nrename total_bill total_bill_2 \n```", "```py\nIn [27]: tips[[\"sex\", \"total_bill\", \"tip\"]]\nOut[27]: \n sex  total_bill   tip\n0    Female       14.99  1.01\n1      Male        8.34  1.66\n2      Male       19.01  3.50\n3      Male       21.68  3.31\n4    Female       22.59  3.61\n..      ...         ...   ...\n239    Male       27.03  5.92\n240  Female       25.18  2.00\n241    Male       20.67  2.00\n242    Male       15.82  1.75\n243  Female       16.78  3.00\n\n[244 rows x 3 columns] \n```", "```py\nIn [28]: tips.drop(\"sex\", axis=1)\nOut[28]: \n total_bill   tip smoker   day    time  size\n0         14.99  1.01     No   Sun  Dinner     2\n1          8.34  1.66     No   Sun  Dinner     3\n2         19.01  3.50     No   Sun  Dinner     3\n3         21.68  3.31     No   Sun  Dinner     2\n4         22.59  3.61     No   Sun  Dinner     4\n..          ...   ...    ...   ...     ...   ...\n239       27.03  5.92     No   Sat  Dinner     3\n240       25.18  2.00    Yes   Sat  Dinner     2\n241       20.67  2.00    Yes   Sat  Dinner     2\n242       15.82  1.75     No   Sat  Dinner     2\n243       16.78  3.00     No  Thur  Dinner     2\n\n[244 rows x 6 columns] \n```", "```py\nIn [29]: tips.rename(columns={\"total_bill\": \"total_bill_2\"})\nOut[29]: \n total_bill_2   tip     sex smoker   day    time  size\n0           14.99  1.01  Female     No   Sun  Dinner     2\n1            8.34  1.66    Male     No   Sun  Dinner     3\n2           19.01  3.50    Male     No   Sun  Dinner     3\n3           21.68  3.31    Male     No   Sun  Dinner     2\n4           22.59  3.61  Female     No   Sun  Dinner     4\n..            ...   ...     ...    ...   ...     ...   ...\n239         27.03  5.92    Male     No   Sat  Dinner     3\n240         25.18  2.00  Female    Yes   Sat  Dinner     2\n241         20.67  2.00    Male    Yes   Sat  Dinner     2\n242         15.82  1.75    Male     No   Sat  Dinner     2\n243         16.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\nsort sex total_bill \n```", "```py\nIn [30]: tips = tips.sort_values([\"sex\", \"total_bill\"])\n\nIn [31]: tips\nOut[31]: \n total_bill    tip     sex smoker   day    time  size\n67         1.07   1.00  Female    Yes   Sat  Dinner     1\n92         3.75   1.00  Female    Yes   Fri  Dinner     2\n111        5.25   1.00  Female     No   Sat  Dinner     1\n145        6.35   1.50  Female     No  Thur   Lunch     2\n135        6.51   1.25  Female     No  Thur   Lunch     2\n..          ...    ...     ...    ...   ...     ...   ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3\n156       46.17   5.00    Male     No   Sun  Dinner     6\n59        46.27   6.73    Male     No   Sat  Dinner     4\n212       46.33   9.00    Male     No   Sat  Dinner     4\n170       48.81  10.00    Male    Yes   Sat  Dinner     3\n\n[244 rows x 7 columns] \n```", "```py\nreplace total_bill = total_bill - 2\ngenerate new_bill = total_bill / 2\ndrop new_bill \n```", "```py\nIn [9]: tips[\"total_bill\"] = tips[\"total_bill\"] - 2\n\nIn [10]: tips[\"new_bill\"] = tips[\"total_bill\"] / 2\n\nIn [11]: tips\nOut[11]: \n total_bill   tip     sex smoker   day    time  size  new_bill\n0         14.99  1.01  Female     No   Sun  Dinner     2     7.495\n1          8.34  1.66    Male     No   Sun  Dinner     3     4.170\n2         19.01  3.50    Male     No   Sun  Dinner     3     9.505\n3         21.68  3.31    Male     No   Sun  Dinner     2    10.840\n4         22.59  3.61  Female     No   Sun  Dinner     4    11.295\n..          ...   ...     ...    ...   ...     ...   ...       ...\n239       27.03  5.92    Male     No   Sat  Dinner     3    13.515\n240       25.18  2.00  Female    Yes   Sat  Dinner     2    12.590\n241       20.67  2.00    Male    Yes   Sat  Dinner     2    10.335\n242       15.82  1.75    Male     No   Sat  Dinner     2     7.910\n243       16.78  3.00  Female     No  Thur  Dinner     2     8.390\n\n[244 rows x 8 columns]\n\nIn [12]: tips = tips.drop(\"new_bill\", axis=1) \n```", "```py\nlist if total_bill > 10 \n```", "```py\nIn [13]: tips[tips[\"total_bill\"] > 10]\nOut[13]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n5         23.29  4.71    Male     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[204 rows x 7 columns] \n```", "```py\nIn [14]: is_dinner = tips[\"time\"] == \"Dinner\"\n\nIn [15]: is_dinner\nOut[15]: \n0      True\n1      True\n2      True\n3      True\n4      True\n ... \n239    True\n240    True\n241    True\n242    True\n243    True\nName: time, Length: 244, dtype: bool\n\nIn [16]: is_dinner.value_counts()\nOut[16]: \ntime\nTrue     176\nFalse     68\nName: count, dtype: int64\n\nIn [17]: tips[is_dinner]\nOut[17]: \n total_bill   tip     sex smoker   day    time  size\n0         14.99  1.01  Female     No   Sun  Dinner     2\n1          8.34  1.66    Male     No   Sun  Dinner     3\n2         19.01  3.50    Male     No   Sun  Dinner     3\n3         21.68  3.31    Male     No   Sun  Dinner     2\n4         22.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       27.03  5.92    Male     No   Sat  Dinner     3\n240       25.18  2.00  Female    Yes   Sat  Dinner     2\n241       20.67  2.00    Male    Yes   Sat  Dinner     2\n242       15.82  1.75    Male     No   Sat  Dinner     2\n243       16.78  3.00  Female     No  Thur  Dinner     2\n\n[176 rows x 7 columns] \n```", "```py\ngenerate bucket = \"low\" if total_bill < 10\nreplace bucket = \"high\" if total_bill >= 10 \n```", "```py\nIn [18]: tips[\"bucket\"] = np.where(tips[\"total_bill\"] < 10, \"low\", \"high\")\n\nIn [19]: tips\nOut[19]: \n total_bill   tip     sex smoker   day    time  size bucket\n0         14.99  1.01  Female     No   Sun  Dinner     2   high\n1          8.34  1.66    Male     No   Sun  Dinner     3    low\n2         19.01  3.50    Male     No   Sun  Dinner     3   high\n3         21.68  3.31    Male     No   Sun  Dinner     2   high\n4         22.59  3.61  Female     No   Sun  Dinner     4   high\n..          ...   ...     ...    ...   ...     ...   ...    ...\n239       27.03  5.92    Male     No   Sat  Dinner     3   high\n240       25.18  2.00  Female    Yes   Sat  Dinner     2   high\n241       20.67  2.00    Male    Yes   Sat  Dinner     2   high\n242       15.82  1.75    Male     No   Sat  Dinner     2   high\n243       16.78  3.00  Female     No  Thur  Dinner     2   high\n\n[244 rows x 8 columns] \n```", "```py\ngenerate date1 = mdy(1, 15, 2013)\ngenerate date2 = date(\"Feb152015\", \"MDY\")\n\ngenerate date1_year = year(date1)\ngenerate date2_month = month(date2)\n\n* shift date to beginning of next month\ngenerate date1_next = mdy(month(date1) + 1, 1, year(date1)) if month(date1) != 12\nreplace date1_next = mdy(1, 1, year(date1) + 1) if month(date1) == 12\ngenerate months_between = mofd(date2) - mofd(date1)\n\nlist date1 date2 date1_year date2_month date1_next months_between \n```", "```py\nIn [20]: tips[\"date1\"] = pd.Timestamp(\"2013-01-15\")\n\nIn [21]: tips[\"date2\"] = pd.Timestamp(\"2015-02-15\")\n\nIn [22]: tips[\"date1_year\"] = tips[\"date1\"].dt.year\n\nIn [23]: tips[\"date2_month\"] = tips[\"date2\"].dt.month\n\nIn [24]: tips[\"date1_next\"] = tips[\"date1\"] + pd.offsets.MonthBegin()\n\nIn [25]: tips[\"months_between\"] = tips[\"date2\"].dt.to_period(\"M\") - tips[\n ....:    \"date1\"\n ....: ].dt.to_period(\"M\")\n ....: \n\nIn [26]: tips[\n ....:    [\"date1\", \"date2\", \"date1_year\", \"date2_month\", \"date1_next\", \"months_between\"]\n ....: ]\n ....: \nOut[26]: \n date1      date2  date1_year  date2_month date1_next    months_between\n0   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n1   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n2   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n3   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n4   2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n..         ...        ...         ...          ...        ...               ...\n239 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n240 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n241 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n242 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n243 2013-01-15 2015-02-15        2013            2 2013-02-01  <25 * MonthEnds>\n\n[244 rows x 6 columns] \n```", "```py\nkeep sex total_bill tip\n\ndrop sex\n\nrename total_bill total_bill_2 \n```", "```py\nIn [27]: tips[[\"sex\", \"total_bill\", \"tip\"]]\nOut[27]: \n sex  total_bill   tip\n0    Female       14.99  1.01\n1      Male        8.34  1.66\n2      Male       19.01  3.50\n3      Male       21.68  3.31\n4    Female       22.59  3.61\n..      ...         ...   ...\n239    Male       27.03  5.92\n240  Female       25.18  2.00\n241    Male       20.67  2.00\n242    Male       15.82  1.75\n243  Female       16.78  3.00\n\n[244 rows x 3 columns] \n```", "```py\nIn [28]: tips.drop(\"sex\", axis=1)\nOut[28]: \n total_bill   tip smoker   day    time  size\n0         14.99  1.01     No   Sun  Dinner     2\n1          8.34  1.66     No   Sun  Dinner     3\n2         19.01  3.50     No   Sun  Dinner     3\n3         21.68  3.31     No   Sun  Dinner     2\n4         22.59  3.61     No   Sun  Dinner     4\n..          ...   ...    ...   ...     ...   ...\n239       27.03  5.92     No   Sat  Dinner     3\n240       25.18  2.00    Yes   Sat  Dinner     2\n241       20.67  2.00    Yes   Sat  Dinner     2\n242       15.82  1.75     No   Sat  Dinner     2\n243       16.78  3.00     No  Thur  Dinner     2\n\n[244 rows x 6 columns] \n```", "```py\nIn [29]: tips.rename(columns={\"total_bill\": \"total_bill_2\"})\nOut[29]: \n total_bill_2   tip     sex smoker   day    time  size\n0           14.99  1.01  Female     No   Sun  Dinner     2\n1            8.34  1.66    Male     No   Sun  Dinner     3\n2           19.01  3.50    Male     No   Sun  Dinner     3\n3           21.68  3.31    Male     No   Sun  Dinner     2\n4           22.59  3.61  Female     No   Sun  Dinner     4\n..            ...   ...     ...    ...   ...     ...   ...\n239         27.03  5.92    Male     No   Sat  Dinner     3\n240         25.18  2.00  Female    Yes   Sat  Dinner     2\n241         20.67  2.00    Male    Yes   Sat  Dinner     2\n242         15.82  1.75    Male     No   Sat  Dinner     2\n243         16.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\nIn [27]: tips[[\"sex\", \"total_bill\", \"tip\"]]\nOut[27]: \n sex  total_bill   tip\n0    Female       14.99  1.01\n1      Male        8.34  1.66\n2      Male       19.01  3.50\n3      Male       21.68  3.31\n4    Female       22.59  3.61\n..      ...         ...   ...\n239    Male       27.03  5.92\n240  Female       25.18  2.00\n241    Male       20.67  2.00\n242    Male       15.82  1.75\n243  Female       16.78  3.00\n\n[244 rows x 3 columns] \n```", "```py\nIn [28]: tips.drop(\"sex\", axis=1)\nOut[28]: \n total_bill   tip smoker   day    time  size\n0         14.99  1.01     No   Sun  Dinner     2\n1          8.34  1.66     No   Sun  Dinner     3\n2         19.01  3.50     No   Sun  Dinner     3\n3         21.68  3.31     No   Sun  Dinner     2\n4         22.59  3.61     No   Sun  Dinner     4\n..          ...   ...    ...   ...     ...   ...\n239       27.03  5.92     No   Sat  Dinner     3\n240       25.18  2.00    Yes   Sat  Dinner     2\n241       20.67  2.00    Yes   Sat  Dinner     2\n242       15.82  1.75     No   Sat  Dinner     2\n243       16.78  3.00     No  Thur  Dinner     2\n\n[244 rows x 6 columns] \n```", "```py\nIn [29]: tips.rename(columns={\"total_bill\": \"total_bill_2\"})\nOut[29]: \n total_bill_2   tip     sex smoker   day    time  size\n0           14.99  1.01  Female     No   Sun  Dinner     2\n1            8.34  1.66    Male     No   Sun  Dinner     3\n2           19.01  3.50    Male     No   Sun  Dinner     3\n3           21.68  3.31    Male     No   Sun  Dinner     2\n4           22.59  3.61  Female     No   Sun  Dinner     4\n..            ...   ...     ...    ...   ...     ...   ...\n239         27.03  5.92    Male     No   Sat  Dinner     3\n240         25.18  2.00  Female    Yes   Sat  Dinner     2\n241         20.67  2.00    Male    Yes   Sat  Dinner     2\n242         15.82  1.75    Male     No   Sat  Dinner     2\n243         16.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\nsort sex total_bill \n```", "```py\nIn [30]: tips = tips.sort_values([\"sex\", \"total_bill\"])\n\nIn [31]: tips\nOut[31]: \n total_bill    tip     sex smoker   day    time  size\n67         1.07   1.00  Female    Yes   Sat  Dinner     1\n92         3.75   1.00  Female    Yes   Fri  Dinner     2\n111        5.25   1.00  Female     No   Sat  Dinner     1\n145        6.35   1.50  Female     No  Thur   Lunch     2\n135        6.51   1.25  Female     No  Thur   Lunch     2\n..          ...    ...     ...    ...   ...     ...   ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3\n156       46.17   5.00    Male     No   Sun  Dinner     6\n59        46.27   6.73    Male     No   Sat  Dinner     4\n212       46.33   9.00    Male     No   Sat  Dinner     4\n170       48.81  10.00    Male    Yes   Sat  Dinner     3\n\n[244 rows x 7 columns] \n```", "```py\ngenerate strlen_time = strlen(time)\ngenerate ustrlen_time = ustrlen(time) \n```", "```py\nIn [32]: tips[\"time\"].str.len()\nOut[32]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64\n\nIn [33]: tips[\"time\"].str.rstrip().str.len()\nOut[33]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64 \n```", "```py\ngenerate str_position = strpos(sex, \"ale\") \n```", "```py\nIn [34]: tips[\"sex\"].str.find(\"ale\")\nOut[34]: \n67     3\n92     3\n111    3\n145    3\n135    3\n ..\n182    1\n156    1\n59     1\n212    1\n170    1\nName: sex, Length: 244, dtype: int64 \n```", "```py\ngenerate short_sex = substr(sex, 1, 1) \n```", "```py\nIn [35]: tips[\"sex\"].str[0:1]\nOut[35]: \n67     F\n92     F\n111    F\n145    F\n135    F\n ..\n182    M\n156    M\n59     M\n212    M\n170    M\nName: sex, Length: 244, dtype: object \n```", "```py\nclear\ninput str20 string\n\"John Smith\"\n\"Jane Cook\"\nend\n\ngenerate first_name = word(name, 1)\ngenerate last_name = word(name, -1) \n```", "```py\nIn [36]: firstlast = pd.DataFrame({\"String\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [37]: firstlast[\"First_Name\"] = firstlast[\"String\"].str.split(\" \", expand=True)[0]\n\nIn [38]: firstlast[\"Last_Name\"] = firstlast[\"String\"].str.rsplit(\" \", expand=True)[1]\n\nIn [39]: firstlast\nOut[39]: \n String First_Name Last_Name\n0  John Smith       John     Smith\n1   Jane Cook       Jane      Cook \n```", "```py\nclear\ninput str20 string\n\"John Smith\"\n\"Jane Cook\"\nend\n\ngenerate upper = strupper(string)\ngenerate lower = strlower(string)\ngenerate title = strproper(string)\nlist \n```", "```py\nIn [40]: firstlast = pd.DataFrame({\"string\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [41]: firstlast[\"upper\"] = firstlast[\"string\"].str.upper()\n\nIn [42]: firstlast[\"lower\"] = firstlast[\"string\"].str.lower()\n\nIn [43]: firstlast[\"title\"] = firstlast[\"string\"].str.title()\n\nIn [44]: firstlast\nOut[44]: \n string       upper       lower       title\n0  John Smith  JOHN SMITH  john smith  John Smith\n1   Jane Cook   JANE COOK   jane cook   Jane Cook \n```", "```py\ngenerate strlen_time = strlen(time)\ngenerate ustrlen_time = ustrlen(time) \n```", "```py\nIn [32]: tips[\"time\"].str.len()\nOut[32]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64\n\nIn [33]: tips[\"time\"].str.rstrip().str.len()\nOut[33]: \n67     6\n92     6\n111    6\n145    5\n135    5\n ..\n182    6\n156    6\n59     6\n212    6\n170    6\nName: time, Length: 244, dtype: int64 \n```", "```py\ngenerate str_position = strpos(sex, \"ale\") \n```", "```py\nIn [34]: tips[\"sex\"].str.find(\"ale\")\nOut[34]: \n67     3\n92     3\n111    3\n145    3\n135    3\n ..\n182    1\n156    1\n59     1\n212    1\n170    1\nName: sex, Length: 244, dtype: int64 \n```", "```py\ngenerate short_sex = substr(sex, 1, 1) \n```", "```py\nIn [35]: tips[\"sex\"].str[0:1]\nOut[35]: \n67     F\n92     F\n111    F\n145    F\n135    F\n ..\n182    M\n156    M\n59     M\n212    M\n170    M\nName: sex, Length: 244, dtype: object \n```", "```py\nclear\ninput str20 string\n\"John Smith\"\n\"Jane Cook\"\nend\n\ngenerate first_name = word(name, 1)\ngenerate last_name = word(name, -1) \n```", "```py\nIn [36]: firstlast = pd.DataFrame({\"String\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [37]: firstlast[\"First_Name\"] = firstlast[\"String\"].str.split(\" \", expand=True)[0]\n\nIn [38]: firstlast[\"Last_Name\"] = firstlast[\"String\"].str.rsplit(\" \", expand=True)[1]\n\nIn [39]: firstlast\nOut[39]: \n String First_Name Last_Name\n0  John Smith       John     Smith\n1   Jane Cook       Jane      Cook \n```", "```py\nclear\ninput str20 string\n\"John Smith\"\n\"Jane Cook\"\nend\n\ngenerate upper = strupper(string)\ngenerate lower = strlower(string)\ngenerate title = strproper(string)\nlist \n```", "```py\nIn [40]: firstlast = pd.DataFrame({\"string\": [\"John Smith\", \"Jane Cook\"]})\n\nIn [41]: firstlast[\"upper\"] = firstlast[\"string\"].str.upper()\n\nIn [42]: firstlast[\"lower\"] = firstlast[\"string\"].str.lower()\n\nIn [43]: firstlast[\"title\"] = firstlast[\"string\"].str.title()\n\nIn [44]: firstlast\nOut[44]: \n string       upper       lower       title\n0  John Smith  JOHN SMITH  john smith  John Smith\n1   Jane Cook   JANE COOK   jane cook   Jane Cook \n```", "```py\nIn [45]: df1 = pd.DataFrame({\"key\": [\"A\", \"B\", \"C\", \"D\"], \"value\": np.random.randn(4)})\n\nIn [46]: df1\nOut[46]: \n key     value\n0   A  0.469112\n1   B -0.282863\n2   C -1.509059\n3   D -1.135632\n\nIn [47]: df2 = pd.DataFrame({\"key\": [\"B\", \"D\", \"D\", \"E\"], \"value\": np.random.randn(4)})\n\nIn [48]: df2\nOut[48]: \n key     value\n0   B  1.212112\n1   D -0.173215\n2   D  0.119209\n3   E -1.044236 \n```", "```py\n* First create df2 and save to disk\nclear\ninput str1 key\nB\nD\nD\nE\nend\ngenerate value = rnormal()\nsave df2.dta\n\n* Now create df1 in memory\nclear\ninput str1 key\nA\nB\nC\nD\nend\ngenerate value = rnormal()\n\npreserve\n\n* Left join\nmerge 1:n key using df2.dta\nkeep if _merge == 1\n\n* Right join\nrestore, preserve\nmerge 1:n key using df2.dta\nkeep if _merge == 2\n\n* Inner join\nrestore, preserve\nmerge 1:n key using df2.dta\nkeep if _merge == 3\n\n* Outer join\nrestore\nmerge 1:n key using df2.dta \n```", "```py\nIn [49]: inner_join = df1.merge(df2, on=[\"key\"], how=\"inner\")\n\nIn [50]: inner_join\nOut[50]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n\nIn [51]: left_join = df1.merge(df2, on=[\"key\"], how=\"left\")\n\nIn [52]: left_join\nOut[52]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n\nIn [53]: right_join = df1.merge(df2, on=[\"key\"], how=\"right\")\n\nIn [54]: right_join\nOut[54]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n3   E       NaN -1.044236\n\nIn [55]: outer_join = df1.merge(df2, on=[\"key\"], how=\"outer\")\n\nIn [56]: outer_join\nOut[56]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236 \n```", "```py\nIn [57]: outer_join\nOut[57]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236\n\nIn [58]: outer_join[\"value_x\"] + outer_join[\"value_y\"]\nOut[58]: \n0         NaN\n1    0.929249\n2         NaN\n3   -1.308847\n4   -1.016424\n5         NaN\ndtype: float64\n\nIn [59]: outer_join[\"value_x\"].sum()\nOut[59]: -3.5940742896293765 \n```", "```py\n* Keep missing values\nlist if value_x == .\n* Keep non-missing values\nlist if value_x != . \n```", "```py\nIn [60]: outer_join[outer_join[\"value_x\"].isna()]\nOut[60]: \n key  value_x   value_y\n5   E      NaN -1.044236\n\nIn [61]: outer_join[outer_join[\"value_x\"].notna()]\nOut[61]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [62]: outer_join.dropna()\nOut[62]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [63]: outer_join.ffill()\nOut[63]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E -1.135632 -1.044236 \n```", "```py\nIn [64]: outer_join[\"value_x\"].fillna(outer_join[\"value_x\"].mean())\nOut[64]: \n0    0.469112\n1   -0.282863\n2   -1.509059\n3   -1.135632\n4   -1.135632\n5   -0.718815\nName: value_x, dtype: float64 \n```", "```py\nIn [62]: outer_join.dropna()\nOut[62]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nIn [63]: outer_join.ffill()\nOut[63]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059  1.212112\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E -1.135632 -1.044236 \n```", "```py\nIn [64]: outer_join[\"value_x\"].fillna(outer_join[\"value_x\"].mean())\nOut[64]: \n0    0.469112\n1   -0.282863\n2   -1.509059\n3   -1.135632\n4   -1.135632\n5   -0.718815\nName: value_x, dtype: float64 \n```", "```py\ncollapse (sum) total_bill tip, by(sex smoker) \n```", "```py\nIn [65]: tips_summed = tips.groupby([\"sex\", \"smoker\"])[[\"total_bill\", \"tip\"]].sum()\n\nIn [66]: tips_summed\nOut[66]: \n total_bill     tip\nsex    smoker \nFemale No          869.68  149.77\n Yes         527.27   96.74\nMale   No         1725.75  302.00\n Yes        1217.07  183.07 \n```", "```py\nbysort sex smoker: egen group_bill = mean(total_bill)\ngenerate adj_total_bill = total_bill - group_bill \n```", "```py\nIn [67]: gb = tips.groupby(\"smoker\")[\"total_bill\"]\n\nIn [68]: tips[\"adj_total_bill\"] = tips[\"total_bill\"] - gb.transform(\"mean\")\n\nIn [69]: tips\nOut[69]: \n total_bill    tip     sex smoker   day    time  size  adj_total_bill\n67         1.07   1.00  Female    Yes   Sat  Dinner     1      -17.686344\n92         3.75   1.00  Female    Yes   Fri  Dinner     2      -15.006344\n111        5.25   1.00  Female     No   Sat  Dinner     1      -11.938278\n145        6.35   1.50  Female     No  Thur   Lunch     2      -10.838278\n135        6.51   1.25  Female     No  Thur   Lunch     2      -10.678278\n..          ...    ...     ...    ...   ...     ...   ...             ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3       24.593656\n156       46.17   5.00    Male     No   Sun  Dinner     6       28.981722\n59        46.27   6.73    Male     No   Sat  Dinner     4       29.081722\n212       46.33   9.00    Male     No   Sat  Dinner     4       29.141722\n170       48.81  10.00    Male    Yes   Sat  Dinner     3       30.053656\n\n[244 rows x 8 columns] \n```", "```py\nbysort sex smoker: list if _n == 1 \n```", "```py\nIn [70]: tips.groupby([\"sex\", \"smoker\"]).first()\nOut[70]: \n total_bill   tip   day    time  size  adj_total_bill\nsex    smoker \nFemale No            5.25  1.00   Sat  Dinner     1      -11.938278\n Yes           1.07  1.00   Sat  Dinner     1      -17.686344\nMale   No            5.51  2.00  Thur   Lunch     2      -11.678278\n Yes           5.25  5.15   Sun  Dinner     2      -13.506344 \n```", "```py\ncollapse (sum) total_bill tip, by(sex smoker) \n```", "```py\nIn [65]: tips_summed = tips.groupby([\"sex\", \"smoker\"])[[\"total_bill\", \"tip\"]].sum()\n\nIn [66]: tips_summed\nOut[66]: \n total_bill     tip\nsex    smoker \nFemale No          869.68  149.77\n Yes         527.27   96.74\nMale   No         1725.75  302.00\n Yes        1217.07  183.07 \n```", "```py\nbysort sex smoker: egen group_bill = mean(total_bill)\ngenerate adj_total_bill = total_bill - group_bill \n```", "```py\nIn [67]: gb = tips.groupby(\"smoker\")[\"total_bill\"]\n\nIn [68]: tips[\"adj_total_bill\"] = tips[\"total_bill\"] - gb.transform(\"mean\")\n\nIn [69]: tips\nOut[69]: \n total_bill    tip     sex smoker   day    time  size  adj_total_bill\n67         1.07   1.00  Female    Yes   Sat  Dinner     1      -17.686344\n92         3.75   1.00  Female    Yes   Fri  Dinner     2      -15.006344\n111        5.25   1.00  Female     No   Sat  Dinner     1      -11.938278\n145        6.35   1.50  Female     No  Thur   Lunch     2      -10.838278\n135        6.51   1.25  Female     No  Thur   Lunch     2      -10.678278\n..          ...    ...     ...    ...   ...     ...   ...             ...\n182       43.35   3.50    Male    Yes   Sun  Dinner     3       24.593656\n156       46.17   5.00    Male     No   Sun  Dinner     6       28.981722\n59        46.27   6.73    Male     No   Sat  Dinner     4       29.081722\n212       46.33   9.00    Male     No   Sat  Dinner     4       29.141722\n170       48.81  10.00    Male    Yes   Sat  Dinner     3       30.053656\n\n[244 rows x 8 columns] \n```", "```py\nbysort sex smoker: list if _n == 1 \n```", "```py\nIn [70]: tips.groupby([\"sex\", \"smoker\"]).first()\nOut[70]: \n total_bill   tip   day    time  size  adj_total_bill\nsex    smoker \nFemale No            5.25  1.00   Sat  Dinner     1      -11.938278\n Yes           1.07  1.00   Sat  Dinner     1      -17.686344\nMale   No            5.51  2.00  Thur   Lunch     2      -11.678278\n Yes           5.25  5.15   Sun  Dinner     2      -13.506344 \n```"]