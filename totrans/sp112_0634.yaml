- en: scipy.signal.place_poles
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.place_poles
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.place_poles.html#scipy.signal.place_poles](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.place_poles.html#scipy.signal.place_poles)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.place_poles.html#scipy.signal.place_poles](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.place_poles.html#scipy.signal.place_poles)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute K such that eigenvalues (A - dot(B, K))=poles.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算K，使得特征值`(A - dot(B, K))=poles`。
- en: K is the gain matrix such as the plant described by the linear system `AX+BU`
    will have its closed-loop poles, i.e the eigenvalues `A - B*K`, as close as possible
    to those asked for in poles.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: K是增益矩阵，使得由线性系统`AX+BU`描述的过程的闭环极点，即特征值`A - B*K`，尽可能接近所要求的极点。
- en: SISO, MISO and MIMO systems are supported.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 支持SISO、MISO和MIMO系统。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**A, B**ndarray'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**A, B**ndarray'
- en: State-space representation of linear system `AX + BU`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 线性系统`AX + BU`的状态空间表示。
- en: '**poles**array_like'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**poles**array_like'
- en: Desired real poles and/or complex conjugates poles. Complex poles are only supported
    with `method="YT"` (default).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的实部极点和/或共轭复极点。仅支持`method="YT"`（默认）的复极点。
- en: '**method: {‘YT’, ‘KNV0’}, optional**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**method: {‘YT’, ‘KNV0’}, optional**'
- en: 'Which method to choose to find the gain matrix K. One of:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 选择用于找到增益矩阵K的方法之一：
- en: '‘YT’: Yang Tits'
  id: totrans-13
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘YT’：Yang Tits
- en: ''
  id: totrans-14
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-15
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '‘KNV0’: Kautsky, Nichols, Van Dooren update method 0'
  id: totrans-16
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘KNV0’：Kautsky、Nichols、Van Dooren更新方法0
- en: See References and Notes for details on the algorithms.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有关算法的详细信息，请参见参考文献和注释。
- en: '**rtol: float, optional**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**rtol: float, optional**'
- en: After each iteration the determinant of the eigenvectors of `A - B*K` is compared
    to its previous value, when the relative error between these two values becomes
    lower than *rtol* the algorithm stops. Default is 1e-3.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 每次迭代后，比较`A - B*K`的特征向量的行列式与其先前值，当这两个值之间的相对误差低于*rtol*时，算法停止。默认值为1e-3。
- en: '**maxiter: int, optional**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxiter: int, optional**'
- en: Maximum number of iterations to compute the gain matrix. Default is 30.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 计算增益矩阵的最大迭代次数。默认值为30。
- en: 'Returns:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**full_state_feedback**Bunch object'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**full_state_feedback**Bunch对象'
- en: 'full_state_feedback is composed of:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: full_state_feedback由以下组成：
- en: gain_matrix1-D ndarray
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: gain_matrix1-D ndarray
- en: The closed loop matrix K such as the eigenvalues of `A-BK` are as close as possible
    to the requested poles.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 闭环矩阵K，使得`A-BK`的特征值尽可能接近要求的极点。
- en: computed_poles1-D ndarray
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: computed_poles1-D ndarray
- en: The poles corresponding to `A-BK` sorted as first the real poles in increasing
    order, then the complex congugates in lexicographic order.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 与`A-BK`对应的极点，首先按升序排列实部极点，然后按字典顺序排列共轭复极点。
- en: requested_poles1-D ndarray
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: requested_poles1-D ndarray
- en: The poles the algorithm was asked to place sorted as above, they may differ
    from what was achieved.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 算法要求的极点如上所述排序，可能与实际实现的不同。
- en: X2-D ndarray
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: X2-D ndarray
- en: The transfer matrix such as `X * diag(poles) = (A - B*K)*X` (see Notes)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 传递矩阵如`X * diag(poles) = (A - B*K)*X`（参见注释）
- en: rtolfloat
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: rtolfloat
- en: The relative tolerance achieved on `det(X)` (see Notes). *rtol* will be NaN
    if it is possible to solve the system `diag(poles) = (A - B*K)`, or 0 when the
    optimization algorithms can’t do anything i.e when `B.shape[1] == 1`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 实现在`det(X)`上实现的相对容差（参见注释）。如果能够解决系统`diag(poles) = (A - B*K)`，则*rtol*将为NaN；当优化算法无法做任何事情，即`B.shape[1]
    == 1`时，为0。
- en: nb_iterint
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: nb_iterint
- en: The number of iterations performed before converging. *nb_iter* will be NaN
    if it is possible to solve the system `diag(poles) = (A - B*K)`, or 0 when the
    optimization algorithms can’t do anything i.e when `B.shape[1] == 1`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在收敛之前执行的迭代次数。如果能够解决系统`diag(poles) = (A - B*K)`，则*nb_iter*将为NaN；当优化算法无法做任何事情，即`B.shape[1]
    == 1`时，为0。
- en: Notes
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: The Tits and Yang (YT), [[2]](#r05297b315da4-2) paper is an update of the original
    Kautsky et al. (KNV) paper [[1]](#r05297b315da4-1). KNV relies on rank-1 updates
    to find the transfer matrix X such that `X * diag(poles) = (A - B*K)*X`, whereas
    YT uses rank-2 updates. This yields on average more robust solutions (see [[2]](#r05297b315da4-2)
    pp 21-22), furthermore the YT algorithm supports complex poles whereas KNV does
    not in its original version. Only update method 0 proposed by KNV has been implemented
    here, hence the name `'KNV0'`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Tits和Yang（YT）论文[[2]](#r05297b315da4-2)是Kautsky等人（KNV）原始论文[[1]](#r05297b315da4-1)的更新。KNV依赖于秩-1更新，以找到传递矩阵X，使得`X
    * diag(poles) = (A - B*K)*X`，而YT使用秩-2更新。这通常会产生更为健壮的解决方案（参见[[2]](#r05297b315da4-2)第21-22页），此外YT算法支持复极点，而KNV原始版本不支持。此处仅实现了KNV提出的更新方法0，因此命名为'KNV0'。
- en: KNV extended to complex poles is used in Matlab’s `place` function, YT is distributed
    under a non-free licence by Slicot under the name `robpole`. It is unclear and
    undocumented how KNV0 has been extended to complex poles (Tits and Yang claim
    on page 14 of their paper that their method can not be used to extend KNV to complex
    poles), therefore only YT supports them in this implementation.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: KNV扩展到复极点被用于Matlab的`place`函数，YT以非自由许可证由Slicot发布，名称为`robpole`。目前尚不清楚和未记录如何将KNV0扩展到复极点（Tits和Yang在其论文第14页声称他们的方法不能用于扩展KNV到复极点），因此只有YT在这个实现中支持它们。
- en: As the solution to the problem of pole placement is not unique for MIMO systems,
    both methods start with a tentative transfer matrix which is altered in various
    way to increase its determinant. Both methods have been proven to converge to
    a stable solution, however depending on the way the initial transfer matrix is
    chosen they will converge to different solutions and therefore there is absolutely
    no guarantee that using `'KNV0'` will yield results similar to Matlab’s or any
    other implementation of these algorithms.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由于对于MIMO系统来说，极点配置问题的解并不唯一，因此两种方法都从一个试探性的传递矩阵开始，该矩阵以不同的方式改变以增加其行列式。已经证明这两种方法都会收敛到一个稳定的解，然而，根据初始传递矩阵的选择方式，它们将收敛到不同的解，因此使用`'KNV0'`不能保证产生与Matlab或任何其他实现这些算法的结果相似。
- en: Using the default method `'YT'` should be fine in most cases; `'KNV0'` is only
    provided because it is needed by `'YT'` in some specific cases. Furthermore `'YT'`
    gives on average more robust results than `'KNV0'` when `abs(det(X))` is used
    as a robustness indicator.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，使用默认方法`'YT'`应该是可以的；`'KNV0'`仅提供是因为在某些特定情况下`'YT'`需要。此外，`'YT'`比使用绝对值`abs(det(X))`作为鲁棒性指标时，`'KNV0'`平均提供更稳健的结果。
- en: '[[2]](#r05297b315da4-2) is available as a technical report on the following
    URL: [https://hdl.handle.net/1903/5598](https://hdl.handle.net/1903/5598)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[[2]](#r05297b315da4-2) 可作为技术报告在以下网址获取：[https://hdl.handle.net/1903/5598](https://hdl.handle.net/1903/5598)'
- en: References
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] ([1](#id2),[2](#id7))'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] ([1](#id2),[2](#id7))'
- en: J. Kautsky, N.K. Nichols and P. van Dooren, “Robust pole assignment in linear
    state feedback”, International Journal of Control, Vol. 41 pp. 1129-1155, 1985.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: J. Kautsky, N.K. Nichols和P. van Dooren，“线性状态反馈中的鲁棒极点分配”，《国际控制杂志》，第41卷，第1129-1155页，1985年。
- en: '[2] ([1](#id1),[2](#id3),[3](#id4))'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] ([1](#id1),[2](#id3),[3](#id4))'
- en: A.L. Tits and Y. Yang, “Globally convergent algorithms for robust pole assignment
    by state feedback”, IEEE Transactions on Automatic Control, Vol. 41, pp. 1432-1452,
    1996.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: A.L. Tits和Y. Yang，“用于鲁棒状态反馈极点分配的全局收敛算法”，《IEEE自动控制杂志》，第41卷，第1432-1452页，1996年。
- en: Examples
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'A simple example demonstrating real pole placement using both KNV and YT algorithms.
    This is example number 1 from section 4 of the reference KNV publication ([[1]](#r05297b315da4-1)):'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的示例，展示了使用KNV和YT算法进行实际极点配置的方法。这是参考KNV出版物第4节中的示例1（[1](#r05297b315da4-1)）：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now compute K with KNV method 0, with the default YT method and with the YT
    method while forcing 100 iterations of the algorithm and print some results after
    each call.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在使用KNV方法0计算K，使用默认的YT方法以及使用强制算法100次迭代的YT方法，并在每次调用后打印一些结果。
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The absolute value of the determinant of X is a good indicator to check the
    robustness of the results, both `''KNV0''` and `''YT''` aim at maximizing it.
    Below a comparison of the robustness of the results above:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: X的行列式的绝对值是检查结果鲁棒性的良好指标，`'KNV0'`和`'YT'`都旨在最大化它。以下是上述结果鲁棒性的比较：
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Now a simple example for complex poles:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是一个复极点的简单示例：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We can plot the desired and computed poles in the complex plane:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在复平面上绘制期望和计算的极点：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![../../_images/scipy-signal-place_poles-1.png](../Images/4599dc18bdabf3130cc397c8be1b365e.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-place_poles-1.png](../Images/4599dc18bdabf3130cc397c8be1b365e.png)'
