["```py\nscipy.linalg.qr_delete(Q, R, k, int p=1, which=u'row', overwrite_qr=False, check_finite=True)\n```", "```py\n>>> import numpy as np\n>>> from scipy import linalg\n>>> a = np.array([[  3.,  -2.,  -2.],\n...               [  6.,  -9.,  -3.],\n...               [ -3.,  10.,   1.],\n...               [  6.,  -7.,   4.],\n...               [  7.,   8.,  -6.]])\n>>> q, r = linalg.qr(a) \n```", "```py\n>>> q1, r1 = linalg.qr_delete(q, r, 2, 2, 'row', False)\n>>> q1\narray([[ 0.30942637,  0.15347579,  0.93845645],  # may vary (signs)\n [ 0.61885275,  0.71680171, -0.32127338],\n [ 0.72199487, -0.68017681, -0.12681844]])\n>>> r1\narray([[  9.69535971,  -0.4125685 ,  -6.80738023],  # may vary (signs)\n [  0\\.        , -12.19958144,   1.62370412],\n [  0\\.        ,   0\\.        ,  -0.15218213]]) \n```", "```py\n>>> a1 = np.delete(a, slice(2,4), 0)\n>>> a1\narray([[ 3., -2., -2.],\n [ 6., -9., -3.],\n [ 7.,  8., -6.]])\n>>> q_direct, r_direct = linalg.qr(a1) \n```", "```py\n>>> np.dot(q1, r1)\narray([[ 3., -2., -2.],\n [ 6., -9., -3.],\n [ 7.,  8., -6.]])\n>>> np.allclose(np.dot(q1, r1), a1)\nTrue \n```", "```py\n>>> np.allclose(np.dot(q1.T, q1), np.eye(3))\nTrue \n```"]