- en: scipy.special.spence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.spence.html#scipy.special.spence](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.spence.html#scipy.special.spence)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Spence’s function, also known as the dilogarithm.
  prefs: []
  type: TYPE_NORMAL
- en: It is defined to be
  prefs: []
  type: TYPE_NORMAL
- en: \[\int_1^z \frac{\log(t)}{1 - t}dt\]
  prefs: []
  type: TYPE_NORMAL
- en: for complex \(z\), where the contour of integration is taken to avoid the branch
    cut of the logarithm. Spence’s function is analytic everywhere except the negative
    real axis where it has a branch cut.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Points at which to evaluate Spence’s function
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function results
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**s**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Computed values of Spence’s function
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: There is a different convention which defines Spence’s function by the integral
  prefs: []
  type: TYPE_NORMAL
- en: \[-\int_0^z \frac{\log(1 - t)}{t}dt;\]
  prefs: []
  type: TYPE_NORMAL
- en: this is our `spence(1 - z)`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The function is defined for complex inputs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'For complex inputs on the branch cut, which is the negative real axis, the
    function returns the limit for `z` with positive imaginary part. For example,
    in the following, note the sign change of the imaginary part of the output for
    `z = -2` and `z = -2 - 1e-8j`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The function returns `nan` for real inputs on the branch cut:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify some particular values: `spence(0) = pi**2/6`, `spence(1) = 0` and `spence(2)
    = -pi**2/12`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify the identity:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Plot the function for positive real input.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-spence-1.png](../Images/558b97a6b56e2d3afe8476dfbd549781.png)'
  prefs: []
  type: TYPE_IMG
