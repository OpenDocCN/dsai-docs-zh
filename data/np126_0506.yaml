- en: numpy.fft.irfftn
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.fft.irfftn
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.irfftn.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.irfftn.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.irfftn.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.irfftn.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Computes the inverse of [`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn "numpy.fft.rfftn").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 [`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn "numpy.fft.rfftn") 的逆变换。
- en: This function computes the inverse of the N-dimensional discrete Fourier Transform
    for real input over any number of axes in an M-dimensional array by means of the
    Fast Fourier Transform (FFT). In other words, `irfftn(rfftn(a), a.shape) == a`
    to within numerical accuracy. (The `a.shape` is necessary like `len(a)` is for
    [`irfft`](numpy.fft.irfft.html#numpy.fft.irfft "numpy.fft.irfft"), and for the
    same reason.)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数通过快速傅里叶变换（FFT）计算出 M 维数组中任意数量轴上的实数输入的 N 维离散傅里叶变换的逆变换。换句话说，`irfftn(rfftn(a),
    a.shape)` 对于数字精度内的 a 是成立的。（与 [`irfft`](numpy.fft.irfft.html#numpy.fft.irfft "numpy.fft.irfft")
    相同，`a.shape` 是必需的，并且是由于相同的原因。）
- en: The input should be ordered in the same way as is returned by [`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn
    "numpy.fft.rfftn"), i.e. as for [`irfft`](numpy.fft.irfft.html#numpy.fft.irfft
    "numpy.fft.irfft") for the final transformation axis, and as for [`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn
    "numpy.fft.ifftn") along all the other axes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 输入应按与由 [`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn "numpy.fft.rfftn") 返回的方式相同的方式进行排序，即对于最终的变换轴应按
    [`irfft`](numpy.fft.irfft.html#numpy.fft.irfft "numpy.fft.irfft") 返回的方式进行排序，对于其他所有轴应按
    [`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn "numpy.fft.ifftn") 的方式进行排序。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**，数组样式'
- en: Input array.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。
- en: '**s**sequence of ints, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**s**，int 的序列，可选'
- en: Shape (length of each transformed axis) of the output (`s[0]` refers to axis
    0, `s[1]` to axis 1, etc.). *s* is also the number of input points used along
    this axis, except for the last axis, where `s[-1]//2+1` points of the input are
    used. Along any axis, if the shape indicated by *s* is smaller than that of the
    input, the input is cropped. If it is larger, the input is padded with zeros.
    If *s* is not given, the shape of the input along the axes specified by axes is
    used. Except for the last axis which is taken to be `2*(m-1)` where `m` is the
    length of the input along that axis.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的形状（每个转换轴的长度），`s[0]` 参考轴 0，`s[1]` 参考轴 1，依此类推。*s* 同时也是沿着该轴使用的输入点的个数，除了最后一个轴，其使用输入的点数为
    `s[-1]//2+1`。在任何轴上，如果 *s* 指示的形状比输入的形状小，则输入会被裁剪。如果比输入的形状大，则会用零填充输入。如果没有给出 *s*，则使用由
    axes 指定的轴的输入形状。除了最后一个轴，该轴被认为是 `2*(m-1)`，其中 `m` 是该轴输入的长度。
- en: '**axes**sequence of ints, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**axes**，int 的序列，可选'
- en: Axes over which to compute the inverse FFT. If not given, the last *len(s)*
    axes are used, or all axes if *s* is also not specified. Repeated indices in *axes*
    means that the inverse transform over that axis is performed multiple times.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 用于计算逆 FFT 的轴。如果未给出，则使用最后 *len(s)* 个轴，如果也未指定 *s*，则使用所有轴。在 *axes* 中重复的索引意味着该轴上的逆变换会多次执行。
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**norm**，{“backward”，“ortho”，“forward”}，可选'
- en: New in version 1.10.0.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在版本 1.10.0 中引入。
- en: Normalization mode (see [`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft")). Default is “backward”. Indicates which direction of the forward/backward
    pair of transforms is scaled and with what normalization factor.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 规范化模式（参见 [`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft"））。默认为“backward”。指示正向/反向变换对的哪个方向被缩放以及使用什么归一化因子。
- en: 'New in version 1.20.0: The “backward”, “forward” values were added.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在版本 1.20.0 中新增：“backward”、“forward”值。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ndarray'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**，ndarray'
- en: The truncated or zero-padded input, transformed along the axes indicated by
    *axes*, or by a combination of *s* or *a*, as explained in the parameters section
    above. The length of each transformed axis is as given by the corresponding element
    of *s*, or the length of the input in every axis except for the last one if *s*
    is not given. In the final transformed axis the length of the output when *s*
    is not given is `2*(m-1)` where `m` is the length of the final transformed axis
    of the input. To get an odd number of output points in the final axis, *s* must
    be specified.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 被截断或零填充的输入，沿着由 *axes* 或 *s* 或 *a* 组合指示的轴进行变换，如上面的参数部分所述。每个转换轴的长度由 *s* 的相应元素给出，如果没有给出
    *s*，则每个轴的长度为输入的最后一个轴的长度。当在最后一个轴上的输出点数为奇数时，必须指定 *s*。
- en: 'Raises:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: ValueError
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 值错误
- en: If *s* and *axes* have different length.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 *s* 和 *axes* 的长度不同。
- en: IndexError
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 索引错误
- en: If an element of *axes* is larger than than the number of axes of *a*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*axes*的元素大于*a*的轴数。
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn "numpy.fft.rfftn")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rfftn`](numpy.fft.rfftn.html#numpy.fft.rfftn "numpy.fft.rfftn")'
- en: The forward n-dimensional FFT of real input, of which [`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn
    "numpy.fft.ifftn") is the inverse.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 实输入的正向n维FFT，其中[`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn "numpy.fft.ifftn")是其逆变换。
- en: '[`fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
- en: The one-dimensional FFT, with definitions and conventions used.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一维FFT，具有用到的定义和惯例。
- en: '[`irfft`](numpy.fft.irfft.html#numpy.fft.irfft "numpy.fft.irfft")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`irfft`](numpy.fft.irfft.html#numpy.fft.irfft "numpy.fft.irfft")'
- en: The inverse of the one-dimensional FFT of real input.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 实输入的一维FFT的逆变换。
- en: '[`irfft2`](numpy.fft.irfft2.html#numpy.fft.irfft2 "numpy.fft.irfft2")'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`irfft2`](numpy.fft.irfft2.html#numpy.fft.irfft2 "numpy.fft.irfft2")'
- en: The inverse of the two-dimensional FFT of real input.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 实输入的二维FFT的逆变换。
- en: Notes
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记
- en: See [`fft`](../routines.fft.html#module-numpy.fft "numpy.fft") for definitions
    and conventions used.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有关定义和惯例的内容，请参阅[`fft`](../routines.fft.html#module-numpy.fft "numpy.fft")。
- en: See [`rfft`](numpy.fft.rfft.html#numpy.fft.rfft "numpy.fft.rfft") for definitions
    and conventions used for real input.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有关实输入的定义和惯例，请参阅[`rfft`](numpy.fft.rfft.html#numpy.fft.rfft "numpy.fft.rfft")。
- en: The correct interpretation of the hermitian input depends on the shape of the
    original data, as given by *s*. This is because each input shape could correspond
    to either an odd or even length signal. By default, [`irfftn`](#numpy.fft.irfftn
    "numpy.fft.irfftn") assumes an even output length which puts the last entry at
    the Nyquist frequency; aliasing with its symmetric counterpart. When performing
    the final complex to real transform, the last value is thus treated as purely
    real. To avoid losing information, the correct shape of the real input **must**
    be given.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 正确解释共轭输入取决于原始数据的形状，由*s*给出。这是因为每个输入形状可能对应于奇数长度信号或偶数长度信号。默认情况下，[`irfftn`](#numpy.fft.irfftn
    "numpy.fft.irfftn") 假设偶数输出长度，将最后一个条目放在Nyquist频率上；与其对称对应相混。在执行最终的复变到真实变换时，最后一个值因此被视为纯粹的实数。为了避免丢失信息，必须提供正确的真实输入形状。
- en: Examples
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
