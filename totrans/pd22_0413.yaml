- en: pandas.DataFrame.to_excel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_excel.html](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_excel.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Write object to an Excel sheet.
  prefs: []
  type: TYPE_NORMAL
- en: To write a single object to an Excel .xlsx file it is only necessary to specify
    a target file name. To write to multiple sheets it is necessary to create an ExcelWriter
    object with a target file name, and specify a sheet in the file to write to.
  prefs: []
  type: TYPE_NORMAL
- en: Multiple sheets may be written to by specifying unique sheet_name. With all
    data written to the file it is necessary to save the changes. Note that creating
    an ExcelWriter object with a file name that already exists will result in the
    contents of the existing file being erased.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**excel_writer**path-like, file-like, or ExcelWriter object'
  prefs: []
  type: TYPE_NORMAL
- en: File path or existing ExcelWriter.
  prefs: []
  type: TYPE_NORMAL
- en: '**sheet_name**str, default ‘Sheet1’'
  prefs: []
  type: TYPE_NORMAL
- en: Name of sheet which will contain DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '**na_rep**str, default ‘’'
  prefs: []
  type: TYPE_NORMAL
- en: Missing data representation.
  prefs: []
  type: TYPE_NORMAL
- en: '**float_format**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Format string for floating point numbers. For example `float_format="%.2f"`
    will format 0.1234 to 0.12.
  prefs: []
  type: TYPE_NORMAL
- en: '**columns**sequence or list of str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Columns to write.
  prefs: []
  type: TYPE_NORMAL
- en: '**header**bool or list of str, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Write out the column names. If a list of string is given it is assumed to be
    aliases for the column names.
  prefs: []
  type: TYPE_NORMAL
- en: '**index**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Write row names (index).
  prefs: []
  type: TYPE_NORMAL
- en: '**index_label**str or sequence, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Column label for index column(s) if desired. If not specified, and header and
    index are True, then the index names are used. A sequence should be given if the
    DataFrame uses MultiIndex.
  prefs: []
  type: TYPE_NORMAL
- en: '**startrow**int, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Upper left cell row to dump data frame.
  prefs: []
  type: TYPE_NORMAL
- en: '**startcol**int, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Upper left cell column to dump data frame.
  prefs: []
  type: TYPE_NORMAL
- en: '**engine**str, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Write engine to use, ‘openpyxl’ or ‘xlsxwriter’. You can also set this via the
    options `io.excel.xlsx.writer` or `io.excel.xlsm.writer`.
  prefs: []
  type: TYPE_NORMAL
- en: '**merge_cells**bool, default True'
  prefs: []
  type: TYPE_NORMAL
- en: Write MultiIndex and Hierarchical Rows as merged cells.
  prefs: []
  type: TYPE_NORMAL
- en: '**inf_rep**str, default ‘inf’'
  prefs: []
  type: TYPE_NORMAL
- en: Representation for infinity (there is no native representation for infinity
    in Excel).
  prefs: []
  type: TYPE_NORMAL
- en: '**freeze_panes**tuple of int (length 2), optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specifies the one-based bottommost row and rightmost column that is to be frozen.
  prefs: []
  type: TYPE_NORMAL
- en: '**storage_options**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Extra options that make sense for a particular storage connection, e.g. host,
    port, username, password, etc. For HTTP(S) URLs the key-value pairs are forwarded
    to `urllib.request.Request` as header options. For other URLs (e.g. starting with
    “s3://”, and “gcs://”) the key-value pairs are forwarded to `fsspec.open`. Please
    see `fsspec` and `urllib` for more details, and for more examples on storage options
    refer [here](https://pandas.pydata.org/docs/user_guide/io.html?highlight=storage_options#reading-writing-remote-files).
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.2.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**engine_kwargs**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Arbitrary keyword arguments passed to excel engine.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_csv`](pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv "pandas.DataFrame.to_csv")'
  prefs: []
  type: TYPE_NORMAL
- en: Write DataFrame to a comma-separated values (csv) file.
  prefs: []
  type: TYPE_NORMAL
- en: '[`ExcelWriter`](pandas.ExcelWriter.html#pandas.ExcelWriter "pandas.ExcelWriter")'
  prefs: []
  type: TYPE_NORMAL
- en: Class for writing DataFrame objects into excel sheets.
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_excel`](pandas.read_excel.html#pandas.read_excel "pandas.read_excel")'
  prefs: []
  type: TYPE_NORMAL
- en: Read an Excel file into a pandas DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_csv`](pandas.read_csv.html#pandas.read_csv "pandas.read_csv")'
  prefs: []
  type: TYPE_NORMAL
- en: Read a comma-separated values (csv) file into DataFrame.
  prefs: []
  type: TYPE_NORMAL
- en: '[`io.formats.style.Styler.to_excel`](pandas.io.formats.style.Styler.to_excel.html#pandas.io.formats.style.Styler.to_excel
    "pandas.io.formats.style.Styler.to_excel")'
  prefs: []
  type: TYPE_NORMAL
- en: Add styles to Excel sheet.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: For compatibility with [`to_csv()`](pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), to_excel serializes lists and dicts to strings before
    writing.
  prefs: []
  type: TYPE_NORMAL
- en: Once a workbook has been saved it is not possible to write further data without
    rewriting the whole workbook.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'Create, write to and save a workbook:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To specify the sheet name:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If you wish to write to more than one sheet in the workbook, it is necessary
    to specify an ExcelWriter object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'ExcelWriter can also be used to append to an existing Excel file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'To set the library that is used to write the Excel file, you can pass the engine
    keyword (the default engine is automatically chosen depending on the file extension):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
