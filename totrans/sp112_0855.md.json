["```py\nscipy.special.nbdtri(k, n, y, out=None) = <ufunc 'nbdtri'>\n```", "```py\n>>> import numpy as np\n>>> from scipy.special import nbdtri, nbdtr\n>>> k, n, y = 5, 10, 0.2\n>>> cdf_val = nbdtr(k, n, y)\n>>> nbdtri(k, n, cdf_val)\n0.20000000000000004 \n```", "```py\n>>> y = np.array([0.1, 0.4, 0.8])\n>>> nbdtri(3, 5, y)\narray([0.34462319, 0.51653095, 0.69677416]) \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> n_parameters = [5, 20, 30, 30]\n>>> k_parameters = [20, 20, 60, 80]\n>>> linestyles = ['solid', 'dashed', 'dotted', 'dashdot']\n>>> parameters_list = list(zip(n_parameters, k_parameters, linestyles))\n>>> cdf_vals = np.linspace(0, 1, 1000)\n>>> fig, ax = plt.subplots(figsize=(8, 8))\n>>> for parameter_set in parameters_list:\n...     n, k, style = parameter_set\n...     nbdtri_vals = nbdtri(k, n, cdf_vals)\n...     ax.plot(cdf_vals, nbdtri_vals, label=rf\"$k={k},\\ n={n}$\",\n...             ls=style)\n>>> ax.legend()\n>>> ax.set_ylabel(\"$p$\")\n>>> ax.set_xlabel(\"$CDF$\")\n>>> title = \"nbdtri: inverse of negative binomial CDF with respect to $p$\"\n>>> ax.set_title(title)\n>>> plt.show() \n```", "```py\n>>> k = np.array([[5], [10], [15]])\n>>> y = np.array([0.3, 0.5, 0.7, 0.9])\n>>> k.shape, y.shape\n((3, 1), (4,)) \n```", "```py\n>>> nbdtri(k, 5, y)\narray([[0.37258157, 0.45169416, 0.53249956, 0.64578407],\n [0.24588501, 0.30451981, 0.36778453, 0.46397088],\n [0.18362101, 0.22966758, 0.28054743, 0.36066188]]) \n```"]