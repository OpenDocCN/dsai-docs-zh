- en: Comparison with SAS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与 SAS 的比较
- en: 原文：[https://pandas.pydata.org/docs/getting_started/comparison/comparison_with_sas.html](https://pandas.pydata.org/docs/getting_started/comparison/comparison_with_sas.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://pandas.pydata.org/docs/getting_started/comparison/comparison_with_sas.html](https://pandas.pydata.org/docs/getting_started/comparison/comparison_with_sas.html)
- en: For potential users coming from [SAS](https://en.wikipedia.org/wiki/SAS_(software))
    this page is meant to demonstrate how different SAS operations would be performed
    in pandas.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于来自[SAS](https://en.wikipedia.org/wiki/SAS_(software))的潜在用户，本页面旨在演示如何在 pandas
    中执行不同的 SAS 操作。
- en: If you’re new to pandas, you might want to first read through [10 Minutes to
    pandas](../../user_guide/10min.html#min) to familiarize yourself with the library.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是 pandas 的新手，您可能首先想通过阅读[10分钟入门 pandas](../../user_guide/10min.html#min)来熟悉该库。
- en: 'As is customary, we import pandas and NumPy as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 惯例上，我们导入 pandas 和 NumPy 如下：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Data structures
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据结构
- en: General terminology translation
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一般术语翻译
- en: '| pandas | SAS |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| pandas | SAS |'
- en: '| --- | --- |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `DataFrame` | data set |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `DataFrame` | 数据集 |'
- en: '| column | variable |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 列 | 变量 |'
- en: '| row | observation |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 行 | 观察 |'
- en: '| groupby | BY-group |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| groupby | BY-group |'
- en: '| `NaN` | `.` |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `NaN` | `.` |'
- en: '`DataFrame`'
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`DataFrame`'
- en: A `DataFrame` in pandas is analogous to a SAS data set - a two-dimensional data
    source with labeled columns that can be of different types. As will be shown in
    this document, almost any operation that can be applied to a data set using SAS’s
    `DATA` step, can also be accomplished in pandas.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 中的`DataFrame`类似于 SAS 数据集 - 一个具有标记列的二维数据源，可以是不同类型。正如本文档所示，几乎可以使用 SAS 的`DATA`步骤对数据集应用的任何操作，也可以在
    pandas 中完成。
- en: '`Series`'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Series`'
- en: A `Series` is the data structure that represents one column of a `DataFrame`.
    SAS doesn’t have a separate data structure for a single column, but in general,
    working with a `Series` is analogous to referencing a column in the `DATA` step.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`是表示`DataFrame`的一列的数据结构。SAS 没有单独的数据结构用于单列，但一般来说，使用`Series`类似于在`DATA`步骤中引用列。'
- en: '`Index`'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Index`'
- en: Every `DataFrame` and `Series` has an `Index` - which are labels on the *rows*
    of the data. SAS does not have an exactly analogous concept. A data set’s rows
    are essentially unlabeled, other than an implicit integer index that can be accessed
    during the `DATA` step (`_N_`).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每个`DataFrame`和`Series`都有一个`Index` - 这些是数据的*行*上的标签。SAS 没有完全类似的概念。数据集的行基本上是无标签的，除了在`DATA`步骤中可以访问的隐式整数索引（`_N_`）。
- en: In pandas, if no index is specified, an integer index is also used by default
    (first row = 0, second row = 1, and so on). While using a labeled `Index` or `MultiIndex`
    can enable sophisticated analyses and is ultimately an important part of pandas
    to understand, for this comparison we will essentially ignore the `Index` and
    just treat the `DataFrame` as a collection of columns. Please see the [indexing
    documentation](../../user_guide/indexing.html#indexing) for much more on how to
    use an `Index` effectively.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中，如果没有指定索引，默认也会使用整数索引（第一行 = 0，第二行 = 1，依此类推）。使用标记的`Index`或`MultiIndex`可以实现复杂的分析，并最终是理解
    pandas 的重要部分，但在这个比较中，我们将基本上忽略`Index`，只将`DataFrame`视为列的集合。请参阅[索引文档](../../user_guide/indexing.html#indexing)以了解如何有效使用`Index`。
- en: Copies vs. in place operations
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复制 vs. 原地操作
- en: 'Most pandas operations return copies of the `Series`/`DataFrame`. To make the
    changes “stick”, you’ll need to either assign to a new variable:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 pandas 操作返回`Series`/`DataFrame`的副本。要使更改“生效”，您需要将其分配给一个新变量：
- en: '[PRE1]'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'or overwrite the original one:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 或覆盖原始变量：
- en: '[PRE2]'
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You will see an `inplace=True` or `copy=False` keyword argument available for
    some methods:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您会看到一些方法可用的`inplace=True`或`copy=False`关键字参数：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: There is an active discussion about deprecating and removing `inplace` and `copy`
    for most methods (e.g. `dropna`) except for a very small subset of methods (including
    `replace`). Both keywords won’t be necessary anymore in the context of Copy-on-Write.
    The proposal can be found [here](https://github.com/pandas-dev/pandas/pull/51466).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有关废弃和删除`inplace`和`copy`的活跃讨论，适用于大多数方法（例如`dropna`），除了一小部分方法（包括`replace`）。在写时复制的情况下，这两个关键字将不再必要。提案可以在[这里](https://github.com/pandas-dev/pandas/pull/51466)找到。
- en: Data input / output
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据输入/输出
- en: Constructing a DataFrame from values
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从值构建 DataFrame
- en: A SAS data set can be built from specified values by placing the data after
    a `datalines` statement and specifying the column names.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在`datalines`语句后放置数据并指定列名来从指定值构建 SAS 数据集。
- en: '[PRE4]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: A pandas `DataFrame` can be constructed in many different ways, but for a small
    number of values, it is often convenient to specify it as a Python dictionary,
    where the keys are the column names and the values are the data.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 可以以多种不同的方式构建pandas`DataFrame`，但对于少量值，通常将其指定为Python字典是方便的，其中键是列名，值是数据。
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Reading external data
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读取外部数据
- en: Like SAS, pandas provides utilities for reading in data from many formats. The
    `tips` dataset, found within the pandas tests ([csv](https://raw.githubusercontent.com/pandas-dev/pandas/main/pandas/tests/io/data/csv/tips.csv))
    will be used in many of the following examples.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 与SAS类似，pandas提供了从多种格式读取数据的实用程序。在pandas测试中找到的`tips`数据集（[csv](https://raw.githubusercontent.com/pandas-dev/pandas/main/pandas/tests/io/data/csv/tips.csv)）将在接下来的许多示例中使用。
- en: SAS provides `PROC IMPORT` to read csv data into a data set.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: SAS提供`PROC IMPORT`来将csv数据读入数据集。
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The pandas method is [`read_csv()`](../../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), which works similarly.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: pandas方法是[`read_csv()`](../../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")，工作方式类似。
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Like `PROC IMPORT`, `read_csv` can take a number of parameters to specify how
    the data should be parsed. For example, if the data was instead tab delimited,
    and did not have column names, the pandas command would be:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 像`PROC IMPORT`一样，`read_csv`可以接受多个参数来指定数据应如何解析。例如，如果数据实际上是制表符分隔的，并且没有列名，那么pandas命令将是：
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In addition to text/csv, pandas supports a variety of other data formats such
    as Excel, HDF5, and SQL databases. These are all read via a `pd.read_*` function.
    See the [IO documentation](../../user_guide/io.html#io) for more details.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 除了文本/csv，pandas还支持多种其他数据格式，如Excel、HDF5和SQL数据库。这些都可以通过`pd.read_*`函数读取。更多详情请参阅[IO文档](../../user_guide/io.html#io)。
- en: Limiting output
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制输出
- en: By default, pandas will truncate output of large `DataFrame`s to show the first
    and last rows. This can be overridden by [changing the pandas options](../../user_guide/options.html#options),
    or using [`DataFrame.head()`](../../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head") or [`DataFrame.tail()`](../../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail").
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，pandas会截断大型`DataFrame`的输出，以显示第一行和最后一行。可以通过[更改pandas选项](../../user_guide/options.html#options)，或使用[`DataFrame.head()`](../../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head")或[`DataFrame.tail()`](../../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail")来覆盖此行为。
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The equivalent in SAS would be:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 中的等效操作为：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Exporting data
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出数据
- en: The inverse of `PROC IMPORT` in SAS is `PROC EXPORT`
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中，`PROC IMPORT`的反向操作是`PROC EXPORT`。
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Similarly in pandas, the opposite of `read_csv` is [`to_csv()`](../../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), and other data formats follow a similar api.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，在pandas中，`read_csv`的相反操作是[`to_csv()`](../../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")，其他数据格式遵循类似的api。
- en: '[PRE12]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Data operations
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据操作
- en: Operations on columns
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列操作
- en: In the `DATA` step, arbitrary math expressions can be used on new or existing
    columns.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在`DATA`步骤中，可以对新列或现有列使用任意数学表达式。
- en: '[PRE13]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: pandas provides vectorized operations by specifying the individual `Series`
    in the `DataFrame`. New columns can be assigned in the same way. The [`DataFrame.drop()`](../../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") method drops a column from the `DataFrame`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: pandas通过在`DataFrame`中指定各个`Series`来提供矢量化操作。新列可以以相同的方式分配。[`DataFrame.drop()`](../../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop")方法从`DataFrame`中删除列。
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Filtering
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤
- en: Filtering in SAS is done with an `if` or `where` statement, on one or more columns.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中，使用`if`或`where`语句对一个或多个列进行过滤。
- en: '[PRE15]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: DataFrames can be filtered in multiple ways; the most intuitive of which is
    using [boolean indexing](../../user_guide/indexing.html#indexing-boolean).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过多种方式对数据框进行过滤；其中最直观的是使用[布尔索引](../../user_guide/indexing.html#indexing-boolean)。
- en: '[PRE16]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The above statement is simply passing a `Series` of `True`/`False` objects to
    the DataFrame, returning all rows with `True`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句只是将一系列`True`/`False`对象传递给DataFrame，返回所有具有`True`的行。
- en: '[PRE17]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: If/then logic
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: if/then逻辑
- en: In SAS, if/then logic can be used to create new columns.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中，可以使用if/then逻辑来创建新列。
- en: '[PRE18]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The same operation in pandas can be accomplished using the `where` method from
    `numpy`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，可以使用`numpy`的`where`方法来执行相同的操作。
- en: '[PRE19]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Date functionality
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日期功能
- en: SAS provides a variety of functions to do operations on date/datetime columns.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: SAS提供了多种函数来对日期/时间列进行操作。
- en: '[PRE20]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The equivalent pandas operations are shown below. In addition to these functions
    pandas supports other Time Series features not available in Base SAS (such as
    resampling and custom offsets) - see the [timeseries documentation](../../user_guide/timeseries.html#timeseries)
    for more details.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 下面显示了等效的pandas操作。除了这些功能外，pandas还支持Base SAS中不可用的其他时间序列功能（例如重新采样和自定义偏移）-有关更多详细信息，请参阅[timeseries文档](../../user_guide/timeseries.html#timeseries)。
- en: '[PRE21]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Selection of columns
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择列
- en: SAS provides keywords in the `DATA` step to select, drop, and rename columns.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: SAS在`DATA`步骤中提供关键字来选择、删除和重命名列。
- en: '[PRE22]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The same operations are expressed in pandas below.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下面以pandas表达相同的操作。
- en: Keep certain columns
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 保留某些列
- en: '[PRE23]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Drop a column
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除列
- en: '[PRE24]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Rename a column
  id: totrans-87
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 重命名列
- en: '[PRE25]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Sorting by values
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按值排序
- en: Sorting in SAS is accomplished via `PROC SORT`
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAS中通过`PROC SORT`实现排序
- en: '[PRE26]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: pandas has a [`DataFrame.sort_values()`](../../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") method, which takes a list of columns to sort
    by.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: pandas有一个[`DataFrame.sort_values()`](../../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values")方法，它接受要排序的列的列表。
- en: '[PRE27]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: String processing
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字符串处理
- en: Finding length of string
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找字符串的长度
- en: SAS determines the length of a character string with the [LENGTHN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002284668.htm)
    and [LENGTHC](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002283942.htm)
    functions. `LENGTHN` excludes trailing blanks and `LENGTHC` includes trailing
    blanks.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: SAS使用[LENGTHN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002284668.htm)和[LENGTHC](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002283942.htm)函数确定字符字符串的长度。`LENGTHN`排除尾随空格，`LENGTHC`包括尾随空格。
- en: '[PRE28]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: You can find the length of a character string with [`Series.str.len()`](../../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len"). In Python 3, all strings are Unicode strings. `len`
    includes trailing blanks. Use `len` and `rstrip` to exclude trailing blanks.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`Series.str.len()`](../../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len")找到字符字符串的长度。在Python 3中，所有字符串都是Unicode字符串。`len`包括尾随空格。使用`len`和`rstrip`来排除尾随空格。
- en: '[PRE29]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Finding position of substring
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找子字符串的位置
- en: SAS determines the position of a character in a string with the [FINDW](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002978282.htm)
    function. `FINDW` takes the string defined by the first argument and searches
    for the first position of the substring you supply as the second argument.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: SAS使用[FINDW](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002978282.htm)函数确定字符串中字符的位置。`FINDW`接受由第一个参数定义的字符串，并搜索您提供的第二个参数作为子字符串的第一个位置。
- en: '[PRE30]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: You can find the position of a character in a column of strings with the [`Series.str.find()`](../../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find") method. `find` searches for the first position of the
    substring. If the substring is found, the method returns its position. If not
    found, it returns `-1`. Keep in mind that Python indexes are zero-based.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`Series.str.find()`](../../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find")方法在字符串列中找到字符的位置。`find`搜索子字符串的第一个位置。如果找到子字符串，则该方法返回其位置。如果未找到，则返回`-1`。请记住，Python索引是从零开始的。
- en: '[PRE31]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Extracting substring by position
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 根据位置提取子字符串
- en: SAS extracts a substring from a string based on its position with the [SUBSTR](https://support.sas.com/documentation/cdl/en/imlug/66845/HTML/default/viewer.htm#imlug_langref_sect455.htm)
    function.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: SAS根据位置从字符串中提取子字符串，使用[SUBSTR](https://support.sas.com/documentation/cdl/en/imlug/66845/HTML/default/viewer.htm#imlug_langref_sect455.htm)函数。
- en: '[PRE32]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: With pandas you can use `[]` notation to extract a substring from a string by
    position locations. Keep in mind that Python indexes are zero-based.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用pandas，您可以使用`[]`符号通过位置位置从字符串中提取子字符串。请记住，Python索引是从零开始的。
- en: '[PRE33]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Extracting nth word
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提取第n个单词
- en: The SAS [SCAN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000214639.htm)
    function returns the nth word from a string. The first argument is the string
    you want to parse and the second argument specifies which word you want to extract.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: SAS的[SCAN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000214639.htm)函数从字符串中返回第n个单词。第一个参数是您要解析的字符串，第二个参数指定要提取的单词。
- en: '[PRE34]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The simplest way to extract words in pandas is to split the strings by spaces,
    then reference the word by index. Note there are more powerful approaches should
    you need them.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中提取单词的最简单方法是通过空格拆分字符串，然后通过索引引用单词。请注意，如果需要，还有更强大的方法。
- en: '[PRE35]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Changing case
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改大小写
- en: The SAS [UPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245965.htm)
    [LOWCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245912.htm)
    and [PROPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/a002598106.htm)
    functions change the case of the argument.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: SAS的[UPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245965.htm)
    [LOWCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245912.htm)和[PROPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/a002598106.htm)函数改变参数的大小写。
- en: '[PRE36]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The equivalent pandas methods are [`Series.str.upper()`](../../reference/api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper"), [`Series.str.lower()`](../../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower"), and [`Series.str.title()`](../../reference/api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title").
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 等效的pandas方法是[`Series.str.upper()`](../../reference/api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")，[`Series.str.lower()`](../../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")和[`Series.str.title()`](../../reference/api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")。
- en: '[PRE37]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Merging
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并
- en: 'The following tables will be used in the merge examples:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 下表将用于合并示例：
- en: '[PRE38]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: In SAS, data must be explicitly sorted before merging. Different types of joins
    are accomplished using the `in=` dummy variables to track whether a match was
    found in one or both input frames.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAS中，数据必须在合并之前明确排序。使用`in=`虚拟变量来跟踪是否在一个或两个输入框架中找到匹配来实现不同类型的连接。
- en: '[PRE39]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: pandas DataFrames have a [`merge()`](../../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") method, which provides similar functionality. The data
    does not have to be sorted ahead of time, and different join types are accomplished
    via the `how` keyword.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: pandas的DataFrame有一个[`merge()`](../../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge")方法，提供类似的功能。数据不必事先排序，不同的连接类型通过`how`关键字实现。
- en: '[PRE40]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Missing data
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺失数据
- en: Both pandas and SAS have a representation for missing data.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: pandas和SAS都有处理缺失数据的表示方式。
- en: pandas represents missing data with the special float value `NaN` (not a number).
    Many of the semantics are the same; for example missing data propagates through
    numeric operations, and is ignored by default for aggregations.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: pandas用特殊的浮点值`NaN`（不是一个数字）表示缺失数据。许多语义是相同的；例如，缺失数据会在数值操作中传播，并且默认情况下会被聚合忽略。
- en: '[PRE41]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: One difference is that missing data cannot be compared to its sentinel value.
    For example, in SAS you could do this to filter missing values.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一个区别是缺失数据不能与其标记值进行比较。例如，在SAS中，您可以这样做来过滤缺失值。
- en: '[PRE42]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: In pandas, [`Series.isna()`](../../reference/api/pandas.Series.isna.html#pandas.Series.isna
    "pandas.Series.isna") and [`Series.notna()`](../../reference/api/pandas.Series.notna.html#pandas.Series.notna
    "pandas.Series.notna") can be used to filter the rows.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，[`Series.isna()`](../../reference/api/pandas.Series.isna.html#pandas.Series.isna
    "pandas.Series.isna")和[`Series.notna()`](../../reference/api/pandas.Series.notna.html#pandas.Series.notna
    "pandas.Series.notna")可用于过滤行。
- en: '[PRE43]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'pandas provides [a variety of methods to work with missing data](../../user_guide/missing_data.html#missing-data).
    Here are some examples:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了[处理缺失数据的各种方法](../../user_guide/missing_data.html#missing-data)。以下是一些示例：
- en: Drop rows with missing values
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除具有缺失值的行
- en: '[PRE44]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Forward fill from previous rows
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从前面的行向前填充
- en: '[PRE45]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Replace missing values with a specified value
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用指定值替换缺失值
- en: 'Using the mean:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 使用均值：
- en: '[PRE46]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: GroupBy
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GroupBy
- en: Aggregation
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚合
- en: SAS’s `PROC SUMMARY` can be used to group by one or more key variables and compute
    aggregations on numeric columns.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: SAS的`PROC SUMMARY`可以用于按一个或多个关键变量分组，并在数值列上计算聚合。
- en: '[PRE47]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: pandas provides a flexible `groupby` mechanism that allows similar aggregations.
    See the [groupby documentation](../../user_guide/groupby.html#groupby) for more
    details and examples.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了灵活的`groupby`机制，允许类似的聚合。有关更多详细信息和示例，请参阅[groupby文档](../../user_guide/groupby.html#groupby)。
- en: '[PRE48]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Transformation
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: In SAS, if the group aggregations need to be used with the original frame, it
    must be merged back together. For example, to subtract the mean for each observation
    by smoker group.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAS中，如果需要将组聚合与原始框架一起使用，则必须将其合并在一起。例如，通过吸烟者组减去每个观察值的均值。
- en: '[PRE49]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: pandas provides a [Transformation](../../user_guide/groupby.html#groupby-transform)
    mechanism that allows these type of operations to be succinctly expressed in one
    operation.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了一个[转换](../../user_guide/groupby.html#groupby-transform)机制，允许这些类型的操作在一个操作中简洁地表达。
- en: '[PRE50]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: By group processing
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按组处理
- en: In addition to aggregation, pandas `groupby` can be used to replicate most other
    by group processing from SAS. For example, this `DATA` step reads the data by
    sex/smoker group and filters to the first entry for each.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 除了聚合，pandas的`groupby`还可以用于复制SAS中的大多数按组处理。例如，这个`DATA`步骤按性别/吸烟者组读取数据，并过滤到每个组的第一个条目。
- en: '[PRE51]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'In pandas this would be written as:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，这将被写为：
- en: '[PRE52]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Other considerations
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他考虑因素
- en: Disk vs memory
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 磁盘与内存
- en: pandas operates exclusively in memory, where a SAS data set exists on disk.
    This means that the size of data able to be loaded in pandas is limited by your
    machine’s memory, but also that the operations on that data may be faster.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: pandas仅在内存中运行，而SAS数据集存在于磁盘上。这意味着pandas能够加载的数据大小受限于计算机的内存，但也意味着对该数据的操作可能更快。
- en: If out of core processing is needed, one possibility is the [dask.dataframe](https://docs.dask.org/en/latest/dataframe.html)
    library (currently in development) which provides a subset of pandas functionality
    for an on-disk `DataFrame`
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要进行外部处理，一种可能性是[dask.dataframe](https://docs.dask.org/en/latest/dataframe.html)库（目前正在开发中），它为磁盘上的`DataFrame`提供了一部分pandas功能。
- en: Data interop
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据互操作
- en: pandas provides a [`read_sas()`](../../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") method that can read SAS data saved in the XPORT or SAS7BDAT
    binary format.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了一个[`read_sas()`](../../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas")方法，可以读取以XPORT或SAS7BDAT二进制格式保存的SAS数据。
- en: '[PRE53]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: You can also specify the file format directly. By default, pandas will try to
    infer the file format based on its extension.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以直接指定文件格式。默认情况下，pandas会根据文件扩展名来推断文件格式。
- en: '[PRE55]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: XPORT is a relatively limited format and the parsing of it is not as optimized
    as some of the other pandas readers. An alternative way to interop data between
    SAS and pandas is to serialize to csv.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: XPORT是一种相对有限的格式，其解析不像其他pandas读取器那样优化。在SAS和pandas之间交换数据的另一种方法是序列化为csv。
- en: '[PRE56]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Data structures
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据结构
- en: General terminology translation
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通用术语翻译
- en: '| pandas | SAS |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| pandas | SAS |'
- en: '| --- | --- |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `DataFrame` | data set |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| `DataFrame` | 数据集 |'
- en: '| column | variable |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| 列 | 变量 |'
- en: '| row | observation |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| 行 | 观察 |'
- en: '| groupby | BY-group |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| 分组 | BY组 |'
- en: '| `NaN` | `.` |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| `NaN` | `.` |'
- en: '`DataFrame`'
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`DataFrame`'
- en: A `DataFrame` in pandas is analogous to a SAS data set - a two-dimensional data
    source with labeled columns that can be of different types. As will be shown in
    this document, almost any operation that can be applied to a data set using SAS’s
    `DATA` step, can also be accomplished in pandas.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，`DataFrame`类似于SAS数据集 - 一个具有标记列的二维数据源，可以是不同类型。正如本文档所示，几乎任何可以使用SAS的`DATA`步骤应用于数据集的操作，也可以在pandas中完成。
- en: '`Series`'
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Series`'
- en: A `Series` is the data structure that represents one column of a `DataFrame`.
    SAS doesn’t have a separate data structure for a single column, but in general,
    working with a `Series` is analogous to referencing a column in the `DATA` step.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`是表示`DataFrame`的一列的数据结构。SAS没有单独的数据结构用于单列，但通常，使用`Series`类似于在`DATA`步骤中引用列。'
- en: '`Index`'
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Index`'
- en: Every `DataFrame` and `Series` has an `Index` - which are labels on the *rows*
    of the data. SAS does not have an exactly analogous concept. A data set’s rows
    are essentially unlabeled, other than an implicit integer index that can be accessed
    during the `DATA` step (`_N_`).
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 每个`DataFrame`和`Series`都有一个`Index` - 这些是数据的*行*上的标签。SAS没有完全类似的概念。数据集的行基本上是无标签的，除了在`DATA`步骤中可以访问的隐式整数索引（`_N_`）。
- en: In pandas, if no index is specified, an integer index is also used by default
    (first row = 0, second row = 1, and so on). While using a labeled `Index` or `MultiIndex`
    can enable sophisticated analyses and is ultimately an important part of pandas
    to understand, for this comparison we will essentially ignore the `Index` and
    just treat the `DataFrame` as a collection of columns. Please see the [indexing
    documentation](../../user_guide/indexing.html#indexing) for much more on how to
    use an `Index` effectively.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，如果未指定索引，则默认情况下也使用整数索引（第一行=0，第二行=1，依此类推）。虽然使用带标签的`Index`或`MultiIndex`可以实现复杂的分析，并最终是理解pandas的重要部分，但在此比较中，我们将基本上忽略`Index`，只将`DataFrame`视为列的集合。请参阅[索引文档](../../user_guide/indexing.html#indexing)以了解如何有效使用`Index`。
- en: Copies vs. in place operations
  id: totrans-187
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复制与原地操作
- en: 'Most pandas operations return copies of the `Series`/`DataFrame`. To make the
    changes “stick”, you’ll need to either assign to a new variable:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数pandas操作返回`Series`/`DataFrame`的副本。要使更改“生效”，您需要将其分配给一个新变量：
- en: '[PRE57]'
  id: totrans-189
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'or overwrite the original one:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 或覆盖原始变量：
- en: '[PRE58]'
  id: totrans-191
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Note
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You will see an `inplace=True` or `copy=False` keyword argument available for
    some methods:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到一些方法可用的`inplace=True`或`copy=False`关键字参数：
- en: '[PRE59]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: There is an active discussion about deprecating and removing `inplace` and `copy`
    for most methods (e.g. `dropna`) except for a very small subset of methods (including
    `replace`). Both keywords won’t be necessary anymore in the context of Copy-on-Write.
    The proposal can be found [here](https://github.com/pandas-dev/pandas/pull/51466).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 有关废弃和删除`inplace`和`copy`的讨论正在进行中，适用于大多数方法（例如`dropna`），除了一小部分方法（包括`replace`）。在写时复制的情况下，这两个关键字将不再必要。提案可以在[这里](https://github.com/pandas-dev/pandas/pull/51466)找到。
- en: General terminology translation
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通用术语翻译
- en: '| pandas | SAS |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| pandas | SAS |'
- en: '| --- | --- |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `DataFrame` | data set |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| `DataFrame` | 数据集 |'
- en: '| column | variable |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| column | 变量 |'
- en: '| row | observation |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| row | 观察 |'
- en: '| groupby | BY-group |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| groupby | BY-group |'
- en: '| `NaN` | `.` |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| `NaN` | `.` |'
- en: '`DataFrame`'
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`DataFrame`'
- en: A `DataFrame` in pandas is analogous to a SAS data set - a two-dimensional data
    source with labeled columns that can be of different types. As will be shown in
    this document, almost any operation that can be applied to a data set using SAS’s
    `DATA` step, can also be accomplished in pandas.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，`DataFrame`类似于SAS数据集 - 一个具有带标签列的二维数据源，可以是不同类型的数据。正如本文档所示，几乎可以使用SAS的`DATA`步骤对数据集应用的任何操作，也可以在pandas中完成。
- en: '`Series`'
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Series`'
- en: A `Series` is the data structure that represents one column of a `DataFrame`.
    SAS doesn’t have a separate data structure for a single column, but in general,
    working with a `Series` is analogous to referencing a column in the `DATA` step.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series`是表示`DataFrame`的一列的数据结构。SAS没有单独的数据结构用于单列，但通常，使用`Series`类似于在`DATA`步骤中引用列。'
- en: '`Index`'
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`Index`'
- en: Every `DataFrame` and `Series` has an `Index` - which are labels on the *rows*
    of the data. SAS does not have an exactly analogous concept. A data set’s rows
    are essentially unlabeled, other than an implicit integer index that can be accessed
    during the `DATA` step (`_N_`).
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 每个`DataFrame`和`Series`都有一个`Index` - 这些是数据的*行*上的标签。SAS没有完全类似的概念。数据集的行基本上没有标签，除了在`DATA`步骤中可以访问的隐式整数索引（`_N_`）。
- en: In pandas, if no index is specified, an integer index is also used by default
    (first row = 0, second row = 1, and so on). While using a labeled `Index` or `MultiIndex`
    can enable sophisticated analyses and is ultimately an important part of pandas
    to understand, for this comparison we will essentially ignore the `Index` and
    just treat the `DataFrame` as a collection of columns. Please see the [indexing
    documentation](../../user_guide/indexing.html#indexing) for much more on how to
    use an `Index` effectively.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，如果未指定索引，则默认情况下也使用整数索引（第一行=0，第二行=1，依此类推）。虽然使用带标签的`Index`或`MultiIndex`可以实现复杂的分析，并最终是理解pandas的重要部分，但在此比较中，我们将基本上忽略`Index`，只将`DataFrame`视为列的集合。请参阅[索引文档](../../user_guide/indexing.html#indexing)以了解如何有效使用`Index`。
- en: Copies vs. in place operations
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复制与原地操作
- en: 'Most pandas operations return copies of the `Series`/`DataFrame`. To make the
    changes “stick”, you’ll need to either assign to a new variable:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数pandas操作返回`Series`/`DataFrame`的副本。要使更改“生效”，您需要将其分配给一个新变量：
- en: '[PRE60]'
  id: totrans-213
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'or overwrite the original one:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 或覆盖原始变量：
- en: '[PRE61]'
  id: totrans-215
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Note
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You will see an `inplace=True` or `copy=False` keyword argument available for
    some methods:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到一些方法可用的`inplace=True`或`copy=False`关键字参数：
- en: '[PRE62]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: There is an active discussion about deprecating and removing `inplace` and `copy`
    for most methods (e.g. `dropna`) except for a very small subset of methods (including
    `replace`). Both keywords won’t be necessary anymore in the context of Copy-on-Write.
    The proposal can be found [here](https://github.com/pandas-dev/pandas/pull/51466).
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 关于在大多数方法（例如 `dropna`）中废弃和删除 `inplace` 和 `copy` 正在进行活跃讨论，除了非常小的一部分方法（包括 `replace`）。在写时复制的情况下，这两个关键字将不再需要。提案可以在[这里](https://github.com/pandas-dev/pandas/pull/51466)找到。
- en: Data input / output
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据输入 / 输出
- en: Constructing a DataFrame from values
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从数值构建 DataFrame
- en: A SAS data set can be built from specified values by placing the data after
    a `datalines` statement and specifying the column names.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在 `datalines` 语句后放置数据并指定列名来构建指定值的 SAS 数据集。
- en: '[PRE63]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: A pandas `DataFrame` can be constructed in many different ways, but for a small
    number of values, it is often convenient to specify it as a Python dictionary,
    where the keys are the column names and the values are the data.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 可以用许多不同的方式构建 pandas 的 `DataFrame`，但对于少量的值，将其指定为 Python 字典通常很方便，其中键是列名，值是数据。
- en: '[PRE64]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Reading external data
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读取外部数据
- en: Like SAS, pandas provides utilities for reading in data from many formats. The
    `tips` dataset, found within the pandas tests ([csv](https://raw.githubusercontent.com/pandas-dev/pandas/main/pandas/tests/io/data/csv/tips.csv))
    will be used in many of the following examples.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 像 SAS 一样，pandas 提供了从多种格式中读取数据的工具。在 pandas 测试中找到的 `tips` 数据集（[csv](https://raw.githubusercontent.com/pandas-dev/pandas/main/pandas/tests/io/data/csv/tips.csv)）将在接下来的许多示例中使用。
- en: SAS provides `PROC IMPORT` to read csv data into a data set.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 提供了 `PROC IMPORT` 以将 csv 数据读入数据集。
- en: '[PRE65]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: The pandas method is [`read_csv()`](../../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), which works similarly.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 方法是 [`read_csv()`](../../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")，其工作方式类似。
- en: '[PRE66]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Like `PROC IMPORT`, `read_csv` can take a number of parameters to specify how
    the data should be parsed. For example, if the data was instead tab delimited,
    and did not have column names, the pandas command would be:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 像 `PROC IMPORT` 一样，`read_csv` 可以接受多个参数来指定数据应该如何解析。例如，如果数据是以制表符分隔的，并且没有列名，则 pandas
    命令将是：
- en: '[PRE67]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: In addition to text/csv, pandas supports a variety of other data formats such
    as Excel, HDF5, and SQL databases. These are all read via a `pd.read_*` function.
    See the [IO documentation](../../user_guide/io.html#io) for more details.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 text/csv，pandas 还支持多种其他数据格式，如 Excel、HDF5 和 SQL 数据库。所有这些都是通过 `pd.read_*` 函数读取的。有关更多详细信息，请参阅[IO
    文档](../../user_guide/io.html#io)。
- en: Limiting output
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制输出
- en: By default, pandas will truncate output of large `DataFrame`s to show the first
    and last rows. This can be overridden by [changing the pandas options](../../user_guide/options.html#options),
    or using [`DataFrame.head()`](../../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head") or [`DataFrame.tail()`](../../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail").
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，pandas 会截断大的 `DataFrame` 输出以显示第一行和最后一行。这可以通过[更改 pandas 选项](../../user_guide/options.html#options)或使用
    [`DataFrame.head()`](../../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head") 或 [`DataFrame.tail()`](../../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail") 来覆盖。
- en: '[PRE68]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The equivalent in SAS would be:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中等效的是：
- en: '[PRE69]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Exporting data
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出数据
- en: The inverse of `PROC IMPORT` in SAS is `PROC EXPORT`
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 中 `PROC IMPORT` 的反操作是 `PROC EXPORT`
- en: '[PRE70]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Similarly in pandas, the opposite of `read_csv` is [`to_csv()`](../../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), and other data formats follow a similar api.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，在 pandas 中，`read_csv` 的相反操作是 [`to_csv()`](../../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")，其他数据格式也遵循类似的 API。
- en: '[PRE71]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Constructing a DataFrame from values
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从数值构建 DataFrame
- en: A SAS data set can be built from specified values by placing the data after
    a `datalines` statement and specifying the column names.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在 `datalines` 语句后放置数据并指定列名来构建指定值的 SAS 数据集。
- en: '[PRE72]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: A pandas `DataFrame` can be constructed in many different ways, but for a small
    number of values, it is often convenient to specify it as a Python dictionary,
    where the keys are the column names and the values are the data.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 可以用许多不同的方式构建 pandas 的 `DataFrame`，但对于少量的值，将其指定为 Python 字典通常很方便，其中键是列名，值是数据。
- en: '[PRE73]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: Reading external data
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读取外部数据
- en: Like SAS, pandas provides utilities for reading in data from many formats. The
    `tips` dataset, found within the pandas tests ([csv](https://raw.githubusercontent.com/pandas-dev/pandas/main/pandas/tests/io/data/csv/tips.csv))
    will be used in many of the following examples.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 与 SAS 类似，pandas 提供了从许多格式中读取数据的实用程序。在 pandas 测试中找到的`tips`数据集（[csv](https://raw.githubusercontent.com/pandas-dev/pandas/main/pandas/tests/io/data/csv/tips.csv)）将在接下来的许多示例中使用。
- en: SAS provides `PROC IMPORT` to read csv data into a data set.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 提供了`PROC IMPORT`来将 csv 数据读入数据集。
- en: '[PRE74]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: The pandas method is [`read_csv()`](../../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv"), which works similarly.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 方法是[`read_csv()`](../../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv")，工作方式类似。
- en: '[PRE75]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Like `PROC IMPORT`, `read_csv` can take a number of parameters to specify how
    the data should be parsed. For example, if the data was instead tab delimited,
    and did not have column names, the pandas command would be:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 与`PROC IMPORT`类似，`read_csv`可以接受多个参数来指定数据应如何解析。例如，如果数据是制表符分隔的，并且没有列名，pandas 命令将是：
- en: '[PRE76]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: In addition to text/csv, pandas supports a variety of other data formats such
    as Excel, HDF5, and SQL databases. These are all read via a `pd.read_*` function.
    See the [IO documentation](../../user_guide/io.html#io) for more details.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 除了文本/csv，pandas 还支持多种其他数据格式，如 Excel、HDF5 和 SQL 数据库。这些都是通过`pd.read_*`函数读取的。更多详情请参阅[IO
    文档](../../user_guide/io.html#io)。
- en: Limiting output
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制输出
- en: By default, pandas will truncate output of large `DataFrame`s to show the first
    and last rows. This can be overridden by [changing the pandas options](../../user_guide/options.html#options),
    or using [`DataFrame.head()`](../../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head") or [`DataFrame.tail()`](../../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail").
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，pandas 会截断大型`DataFrame`的输出以显示第一行和最后一行。这可以通过[更改 pandas 选项](../../user_guide/options.html#options)，或使用[`DataFrame.head()`](../../reference/api/pandas.DataFrame.head.html#pandas.DataFrame.head
    "pandas.DataFrame.head")或[`DataFrame.tail()`](../../reference/api/pandas.DataFrame.tail.html#pandas.DataFrame.tail
    "pandas.DataFrame.tail")来覆盖。
- en: '[PRE77]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'The equivalent in SAS would be:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中的等效操作是：
- en: '[PRE78]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Exporting data
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出数据
- en: The inverse of `PROC IMPORT` in SAS is `PROC EXPORT`
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中，`PROC IMPORT`的反向操作是`PROC EXPORT`
- en: '[PRE79]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Similarly in pandas, the opposite of `read_csv` is [`to_csv()`](../../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv"), and other data formats follow a similar api.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 pandas，`read_csv`的相反操作是[`to_csv()`](../../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv")，其他数据格式遵循类似的 api。
- en: '[PRE80]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Data operations
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据操作
- en: Operations on columns
  id: totrans-270
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列操作
- en: In the `DATA` step, arbitrary math expressions can be used on new or existing
    columns.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在`DATA`步骤中，可以对新列或现有列使用任意数学表达式。
- en: '[PRE81]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: pandas provides vectorized operations by specifying the individual `Series`
    in the `DataFrame`. New columns can be assigned in the same way. The [`DataFrame.drop()`](../../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") method drops a column from the `DataFrame`.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 通过在`DataFrame`中指定各个`Series`来提供矢量化操作。新列可以以相同方式分配。[`DataFrame.drop()`](../../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop")方法从`DataFrame`中删除列。
- en: '[PRE82]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Filtering
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤
- en: Filtering in SAS is done with an `if` or `where` statement, on one or more columns.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中，使用`if`或`where`语句对一个或多个列进行过滤。
- en: '[PRE83]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: DataFrames can be filtered in multiple ways; the most intuitive of which is
    using [boolean indexing](../../user_guide/indexing.html#indexing-boolean).
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 数据框可以以多种方式进行过滤；其中最直观的是使用[布尔索引](../../user_guide/indexing.html#indexing-boolean)。
- en: '[PRE84]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: The above statement is simply passing a `Series` of `True`/`False` objects to
    the DataFrame, returning all rows with `True`.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句只是将`True`/`False`对象的`Series`传递给数据框，返回所有具有`True`的行。
- en: '[PRE85]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: If/then logic
  id: totrans-282
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: if/then 逻辑
- en: In SAS, if/then logic can be used to create new columns.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中，可以使用 if/then 逻辑来创建新列。
- en: '[PRE86]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: The same operation in pandas can be accomplished using the `where` method from
    `numpy`.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中，可以使用`numpy`中的`where`方法来完成相同的操作。
- en: '[PRE87]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Date functionality
  id: totrans-287
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日期功能
- en: SAS provides a variety of functions to do operations on date/datetime columns.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 提供了多种函数来对日期/时间列进行操作。
- en: '[PRE88]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: The equivalent pandas operations are shown below. In addition to these functions
    pandas supports other Time Series features not available in Base SAS (such as
    resampling and custom offsets) - see the [timeseries documentation](../../user_guide/timeseries.html#timeseries)
    for more details.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 下面显示了等效的pandas操作。除了这些功能外，pandas还支持Base SAS中不可用的其他时间序列功能（例如重新采样和自定义偏移）-请参阅[timeseries文档](../../user_guide/timeseries.html#timeseries)了解更多详情。
- en: '[PRE89]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Selection of columns
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择列
- en: SAS provides keywords in the `DATA` step to select, drop, and rename columns.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: SAS提供了在`DATA`步骤中选择、删除和重命名列的关键字。
- en: '[PRE90]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: The same operations are expressed in pandas below.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 下面以pandas表达了相同的操作。
- en: Keep certain columns
  id: totrans-296
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 保留特定列
- en: '[PRE91]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Drop a column
  id: totrans-298
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除一列
- en: '[PRE92]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Rename a column
  id: totrans-300
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 重命名一列
- en: '[PRE93]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Sorting by values
  id: totrans-302
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按值排序
- en: Sorting in SAS is accomplished via `PROC SORT`
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAS中，通过`PROC SORT`来实现排序
- en: '[PRE94]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: pandas has a [`DataFrame.sort_values()`](../../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") method, which takes a list of columns to sort
    by.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: pandas有一个[`DataFrame.sort_values()`](../../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values")方法，可以按列排序。
- en: '[PRE95]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Operations on columns
  id: totrans-307
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 列上的操作
- en: In the `DATA` step, arbitrary math expressions can be used on new or existing
    columns.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在`DATA`步骤中，可以对新列或现有列使用任意数学表达式。
- en: '[PRE96]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: pandas provides vectorized operations by specifying the individual `Series`
    in the `DataFrame`. New columns can be assigned in the same way. The [`DataFrame.drop()`](../../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop") method drops a column from the `DataFrame`.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: pandas通过在`DataFrame`中指定单独的`Series`来提供矢量化操作。新列可以以相同的方式分配。[`DataFrame.drop()`](../../reference/api/pandas.DataFrame.drop.html#pandas.DataFrame.drop
    "pandas.DataFrame.drop")方法从`DataFrame`中删除一列。
- en: '[PRE97]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Filtering
  id: totrans-312
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤
- en: Filtering in SAS is done with an `if` or `where` statement, on one or more columns.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAS中，使用`if`或`where`语句在一个或多个列上进行过滤。
- en: '[PRE98]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: DataFrames can be filtered in multiple ways; the most intuitive of which is
    using [boolean indexing](../../user_guide/indexing.html#indexing-boolean).
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrames可以以多种方式进行过滤；其中最直观的是使用[布尔索引](../../user_guide/indexing.html#indexing-boolean)。
- en: '[PRE99]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: The above statement is simply passing a `Series` of `True`/`False` objects to
    the DataFrame, returning all rows with `True`.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句只是将`True`/`False`对象的`Series`传递给DataFrame，返回所有具有`True`的行。
- en: '[PRE100]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: If/then logic
  id: totrans-319
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果/那么逻辑
- en: In SAS, if/then logic can be used to create new columns.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAS中，可以使用如果/那么逻辑来创建新列。
- en: '[PRE101]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: The same operation in pandas can be accomplished using the `where` method from
    `numpy`.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，可以使用`numpy`的`where`方法来实现相同的操作。
- en: '[PRE102]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: Date functionality
  id: totrans-324
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日期功能
- en: SAS provides a variety of functions to do operations on date/datetime columns.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: SAS提供了各种函数来对日期/时间列进行操作。
- en: '[PRE103]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: The equivalent pandas operations are shown below. In addition to these functions
    pandas supports other Time Series features not available in Base SAS (such as
    resampling and custom offsets) - see the [timeseries documentation](../../user_guide/timeseries.html#timeseries)
    for more details.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 下面显示了等效的pandas操作。除了这些功能外，pandas还支持Base SAS中不可用的其他时间序列功能（例如重新采样和自定义偏移）-请参阅[timeseries文档](../../user_guide/timeseries.html#timeseries)了解更多详情。
- en: '[PRE104]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Selection of columns
  id: totrans-329
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择列
- en: SAS provides keywords in the `DATA` step to select, drop, and rename columns.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: SAS提供了在`DATA`步骤中选择、删除和重命名列的关键字。
- en: '[PRE105]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: The same operations are expressed in pandas below.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 下面以pandas表达了相同的操作。
- en: Keep certain columns
  id: totrans-333
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 保留特定列
- en: '[PRE106]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Drop a column
  id: totrans-335
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除一列
- en: '[PRE107]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Rename a column
  id: totrans-337
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 重命名一列
- en: '[PRE108]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Keep certain columns
  id: totrans-339
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 保留特定列
- en: '[PRE109]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Drop a column
  id: totrans-341
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除一列
- en: '[PRE110]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Rename a column
  id: totrans-343
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 重命名一列
- en: '[PRE111]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: Sorting by values
  id: totrans-345
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按值排序
- en: Sorting in SAS is accomplished via `PROC SORT`
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAS中，通过`PROC SORT`来实现排序
- en: '[PRE112]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: pandas has a [`DataFrame.sort_values()`](../../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values") method, which takes a list of columns to sort
    by.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: pandas有一个[`DataFrame.sort_values()`](../../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values")方法，可以按列排序。
- en: '[PRE113]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: String processing
  id: totrans-350
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字符串处理
- en: Finding length of string
  id: totrans-351
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找字符串的长度
- en: SAS determines the length of a character string with the [LENGTHN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002284668.htm)
    and [LENGTHC](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002283942.htm)
    functions. `LENGTHN` excludes trailing blanks and `LENGTHC` includes trailing
    blanks.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 使用 [LENGTHN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002284668.htm)
    和 [LENGTHC](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002283942.htm)
    函数确定字符字符串的长度。`LENGTHN` 排除尾随空格，`LENGTHC` 包括尾随空格。
- en: '[PRE114]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: You can find the length of a character string with [`Series.str.len()`](../../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len"). In Python 3, all strings are Unicode strings. `len`
    includes trailing blanks. Use `len` and `rstrip` to exclude trailing blanks.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 [`Series.str.len()`](../../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len") 找到字符串的长度。在 Python 3 中，所有字符串都是 Unicode 字符串。`len` 包括尾随空格。使用
    `len` 和 `rstrip` 排除尾随空格。
- en: '[PRE115]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Finding position of substring
  id: totrans-356
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找子串的位置
- en: SAS determines the position of a character in a string with the [FINDW](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002978282.htm)
    function. `FINDW` takes the string defined by the first argument and searches
    for the first position of the substring you supply as the second argument.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 使用 [FINDW](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002978282.htm)
    函数确定字符串中字符的位置。`FINDW` 使用第一个参数定义的字符串，并搜索你提供的第二个参数作为子串的第一个位置。
- en: '[PRE116]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: You can find the position of a character in a column of strings with the [`Series.str.find()`](../../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find") method. `find` searches for the first position of the
    substring. If the substring is found, the method returns its position. If not
    found, it returns `-1`. Keep in mind that Python indexes are zero-based.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 [`Series.str.find()`](../../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find") 方法在字符串列中找到字符的位置。`find` 搜索子串的第一个位置。如果找到子串，则该方法返回其位置。如果未找到，则返回`-1`。请记住，Python
    的索引是从零开始的。
- en: '[PRE117]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Extracting substring by position
  id: totrans-361
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 根据位置提取子串
- en: SAS extracts a substring from a string based on its position with the [SUBSTR](https://support.sas.com/documentation/cdl/en/imlug/66845/HTML/default/viewer.htm#imlug_langref_sect455.htm)
    function.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 使用 [SUBSTR](https://support.sas.com/documentation/cdl/en/imlug/66845/HTML/default/viewer.htm#imlug_langref_sect455.htm)
    函数根据位置从字符串中提取子串。
- en: '[PRE118]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: With pandas you can use `[]` notation to extract a substring from a string by
    position locations. Keep in mind that Python indexes are zero-based.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 pandas，你可以使用`[]`符号通过位置来提取字符串中的子串。请记住，Python 的索引是从零开始的。
- en: '[PRE119]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: Extracting nth word
  id: totrans-366
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提取第n个单词
- en: The SAS [SCAN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000214639.htm)
    function returns the nth word from a string. The first argument is the string
    you want to parse and the second argument specifies which word you want to extract.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 的 [SCAN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000214639.htm)
    函数从字符串中返回第n个单词。第一个参数是要解析的字符串，第二个参数指定要提取的单词。
- en: '[PRE120]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: The simplest way to extract words in pandas is to split the strings by spaces,
    then reference the word by index. Note there are more powerful approaches should
    you need them.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中提取单词的最简单方法是通过空格将字符串分割，然后按索引引用单词。请注意，如果需要，还有更强大的方法。
- en: '[PRE121]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: Changing case
  id: totrans-371
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改大小写
- en: The SAS [UPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245965.htm)
    [LOWCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245912.htm)
    and [PROPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/a002598106.htm)
    functions change the case of the argument.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 的 [UPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245965.htm)、[LOWCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245912.htm)
    和 [PROPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/a002598106.htm)
    函数更改参数的大小写。
- en: '[PRE122]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: The equivalent pandas methods are [`Series.str.upper()`](../../reference/api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper"), [`Series.str.lower()`](../../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower"), and [`Series.str.title()`](../../reference/api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title").
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 等效的pandas方法是[`Series.str.upper()`](../../reference/api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")、[`Series.str.lower()`](../../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")和[`Series.str.title()`](../../reference/api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")。
- en: '[PRE123]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: Finding length of string
  id: totrans-376
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找字符串的长度
- en: SAS determines the length of a character string with the [LENGTHN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002284668.htm)
    and [LENGTHC](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002283942.htm)
    functions. `LENGTHN` excludes trailing blanks and `LENGTHC` includes trailing
    blanks.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: SAS使用[LENGTHN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002284668.htm)和[LENGTHC](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002283942.htm)函数确定字符字符串的长度。`LENGTHN`排除尾随空格，`LENGTHC`包括尾随空格。
- en: '[PRE124]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: You can find the length of a character string with [`Series.str.len()`](../../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len"). In Python 3, all strings are Unicode strings. `len`
    includes trailing blanks. Use `len` and `rstrip` to exclude trailing blanks.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`Series.str.len()`](../../reference/api/pandas.Series.str.len.html#pandas.Series.str.len
    "pandas.Series.str.len")找到字符字符串的长度。在Python 3中，所有字符串都是Unicode字符串。`len`包括尾随空格。使用`len`和`rstrip`来排除尾随空格。
- en: '[PRE125]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Finding position of substring
  id: totrans-381
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查找子字符串的位置
- en: SAS determines the position of a character in a string with the [FINDW](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002978282.htm)
    function. `FINDW` takes the string defined by the first argument and searches
    for the first position of the substring you supply as the second argument.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: SAS使用[FINDW](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a002978282.htm)函数确定字符串中字符的位置。`FINDW`接受由第一个参数定义的字符串，并搜索你提供的第二个参数作为子字符串的第一个位置。
- en: '[PRE126]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: You can find the position of a character in a column of strings with the [`Series.str.find()`](../../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find") method. `find` searches for the first position of the
    substring. If the substring is found, the method returns its position. If not
    found, it returns `-1`. Keep in mind that Python indexes are zero-based.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用[`Series.str.find()`](../../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find")方法在字符串列中找到字符的位置。`find`搜索子字符串的第一个位置。如果找到子字符串，则该方法返回其位置。如果未找到，则返回`-1`。请记住，Python索引是从零开始的。
- en: '[PRE127]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: Extracting substring by position
  id: totrans-386
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按位置提取子字符串
- en: SAS extracts a substring from a string based on its position with the [SUBSTR](https://support.sas.com/documentation/cdl/en/imlug/66845/HTML/default/viewer.htm#imlug_langref_sect455.htm)
    function.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: SAS使用[SUBSTR](https://support.sas.com/documentation/cdl/en/imlug/66845/HTML/default/viewer.htm#imlug_langref_sect455.htm)函数根据其位置从字符串中提取子字符串。
- en: '[PRE128]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: With pandas you can use `[]` notation to extract a substring from a string by
    position locations. Keep in mind that Python indexes are zero-based.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 使用pandas，您可以使用`[]`符号按位置位置从字符串中提取子字符串。请记住，Python索引是从零开始的。
- en: '[PRE129]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Extracting nth word
  id: totrans-391
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提取第n个单词
- en: The SAS [SCAN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000214639.htm)
    function returns the nth word from a string. The first argument is the string
    you want to parse and the second argument specifies which word you want to extract.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: SAS的[SCAN](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000214639.htm)函数从字符串中返回第n个单词。第一个参数是要解析的字符串，第二个参数指定要提取的单词。
- en: '[PRE130]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: The simplest way to extract words in pandas is to split the strings by spaces,
    then reference the word by index. Note there are more powerful approaches should
    you need them.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 用pandas提取单词的最简单方法是通过空格分割字符串，然后通过索引引用单词。请注意，如果需要，还有更强大的方法。
- en: '[PRE131]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: Changing case
  id: totrans-396
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改大小写
- en: The SAS [UPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245965.htm)
    [LOWCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245912.htm)
    and [PROPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/a002598106.htm)
    functions change the case of the argument.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 的 [UPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245965.htm)、[LOWCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000245912.htm)
    和 [PROPCASE](https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/a002598106.htm)
    函数改变参数的大小写。
- en: '[PRE132]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: The equivalent pandas methods are [`Series.str.upper()`](../../reference/api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper"), [`Series.str.lower()`](../../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower"), and [`Series.str.title()`](../../reference/api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title").
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 相应的方法为[`Series.str.upper()`](../../reference/api/pandas.Series.str.upper.html#pandas.Series.str.upper
    "pandas.Series.str.upper")、[`Series.str.lower()`](../../reference/api/pandas.Series.str.lower.html#pandas.Series.str.lower
    "pandas.Series.str.lower")和[`Series.str.title()`](../../reference/api/pandas.Series.str.title.html#pandas.Series.str.title
    "pandas.Series.str.title")。
- en: '[PRE133]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: Merging
  id: totrans-401
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合并
- en: 'The following tables will be used in the merge examples:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 合并示例中将使用以下表格：
- en: '[PRE134]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: In SAS, data must be explicitly sorted before merging. Different types of joins
    are accomplished using the `in=` dummy variables to track whether a match was
    found in one or both input frames.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中，数据必须在合并之前明确排序。使用 `in=` 虚拟变量来实现不同类型的连接，以跟踪在一个或两个输入框架中是否找到了匹配项。
- en: '[PRE135]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: pandas DataFrames have a [`merge()`](../../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge") method, which provides similar functionality. The data
    does not have to be sorted ahead of time, and different join types are accomplished
    via the `how` keyword.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: pandas DataFrame 有一个[`merge()`](../../reference/api/pandas.DataFrame.merge.html#pandas.DataFrame.merge
    "pandas.DataFrame.merge")方法，提供了类似的功能。数据不必提前排序，并且不同的连接类型通过 `how` 关键字实现。
- en: '[PRE136]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Missing data
  id: totrans-408
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 缺失数据
- en: Both pandas and SAS have a representation for missing data.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 和 SAS 都有一个表示缺失数据的表示形式。
- en: pandas represents missing data with the special float value `NaN` (not a number).
    Many of the semantics are the same; for example missing data propagates through
    numeric operations, and is ignored by default for aggregations.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 用特殊的浮点值 `NaN`（不是一个数字）表示缺失数据。许多语义是相同的；例如，缺失数据在数值运算中传播，并且默认情况下在聚合中被忽略。
- en: '[PRE137]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: One difference is that missing data cannot be compared to its sentinel value.
    For example, in SAS you could do this to filter missing values.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 一个区别是缺失数据不能与其标志值进行比较。例如，在 SAS 中，您可以这样做来过滤缺失值。
- en: '[PRE138]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: In pandas, [`Series.isna()`](../../reference/api/pandas.Series.isna.html#pandas.Series.isna
    "pandas.Series.isna") and [`Series.notna()`](../../reference/api/pandas.Series.notna.html#pandas.Series.notna
    "pandas.Series.notna") can be used to filter the rows.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中，可以使用[`Series.isna()`](../../reference/api/pandas.Series.isna.html#pandas.Series.isna
    "pandas.Series.isna")和[`Series.notna()`](../../reference/api/pandas.Series.notna.html#pandas.Series.notna
    "pandas.Series.notna")来过滤行。
- en: '[PRE139]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'pandas provides [a variety of methods to work with missing data](../../user_guide/missing_data.html#missing-data).
    Here are some examples:'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 提供了[多种处理缺失数据的方法](../../user_guide/missing_data.html#missing-data)。以下是一些示例：
- en: Drop rows with missing values
  id: totrans-417
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除含有缺失值的行
- en: '[PRE140]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: Forward fill from previous rows
  id: totrans-419
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从前面的行向前填充
- en: '[PRE141]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: Replace missing values with a specified value
  id: totrans-421
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用指定值替换缺失值
- en: 'Using the mean:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 使用均值：
- en: '[PRE142]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: Drop rows with missing values
  id: totrans-424
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除含有缺失值的行
- en: '[PRE143]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Forward fill from previous rows
  id: totrans-426
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从前面的行向前填充
- en: '[PRE144]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: Replace missing values with a specified value
  id: totrans-428
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用指定值替换缺失值
- en: 'Using the mean:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 使用均值：
- en: '[PRE145]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: GroupBy
  id: totrans-431
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分组
- en: Aggregation
  id: totrans-432
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚合
- en: SAS’s `PROC SUMMARY` can be used to group by one or more key variables and compute
    aggregations on numeric columns.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: SAS 的 `PROC SUMMARY` 可以用于按一个或多个关键变量分组，并对数值列进行聚合计算。
- en: '[PRE146]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: pandas provides a flexible `groupby` mechanism that allows similar aggregations.
    See the [groupby documentation](../../user_guide/groupby.html#groupby) for more
    details and examples.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 提供了灵活的 `groupby` 机制，允许进行类似的聚合。详细内容和示例请参阅[groupby 文档](../../user_guide/groupby.html#groupby)。
- en: '[PRE147]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Transformation
  id: totrans-437
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: In SAS, if the group aggregations need to be used with the original frame, it
    must be merged back together. For example, to subtract the mean for each observation
    by smoker group.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SAS 中，如果需要将组聚合与原始框架一起使用，则必须将其合并回来。例如，通过吸烟者组逐个观察减去均值。
- en: '[PRE148]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: pandas provides a [Transformation](../../user_guide/groupby.html#groupby-transform)
    mechanism that allows these type of operations to be succinctly expressed in one
    operation.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了一个[Transformation](../../user_guide/groupby.html#groupby-transform)机制，允许这些类型的操作在一个操作中简洁地表达。
- en: '[PRE149]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: By group processing
  id: totrans-442
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按组处理
- en: In addition to aggregation, pandas `groupby` can be used to replicate most other
    by group processing from SAS. For example, this `DATA` step reads the data by
    sex/smoker group and filters to the first entry for each.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 除了聚合，pandas的`groupby`还可以用于复制SAS中的大多数其他按组处理。例如，这个`DATA`步骤按性别/吸烟者组读取数据，并过滤到每个组的第一个条目。
- en: '[PRE150]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: 'In pandas this would be written as:'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，这样写：
- en: '[PRE151]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: Aggregation
  id: totrans-447
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚合
- en: SAS’s `PROC SUMMARY` can be used to group by one or more key variables and compute
    aggregations on numeric columns.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: SAS的`PROC SUMMARY`可以用于按一个或多个关键变量分组，并在数值列上计算聚合。
- en: '[PRE152]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: pandas provides a flexible `groupby` mechanism that allows similar aggregations.
    See the [groupby documentation](../../user_guide/groupby.html#groupby) for more
    details and examples.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了灵活的`groupby`机制，允许进行类似的聚合。查看[groupby文档](../../user_guide/groupby.html#groupby)获取更多详细信息和示例。
- en: '[PRE153]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: Transformation
  id: totrans-452
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 转换
- en: In SAS, if the group aggregations need to be used with the original frame, it
    must be merged back together. For example, to subtract the mean for each observation
    by smoker group.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 在SAS中，如果需要将组聚合与原始框架一起使用，则必须将其合并在一起。例如，通过吸烟者组减去每个观察值的平均值。
- en: '[PRE154]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: pandas provides a [Transformation](../../user_guide/groupby.html#groupby-transform)
    mechanism that allows these type of operations to be succinctly expressed in one
    operation.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了一个[Transformation](../../user_guide/groupby.html#groupby-transform)机制，允许这些类型的操作在一个操作中简洁地表达。
- en: '[PRE155]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: By group processing
  id: totrans-457
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按组处理
- en: In addition to aggregation, pandas `groupby` can be used to replicate most other
    by group processing from SAS. For example, this `DATA` step reads the data by
    sex/smoker group and filters to the first entry for each.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 除了聚合，pandas的`groupby`还可以用于复制SAS中的大多数其他按组处理。例如，这个`DATA`步骤按性别/吸烟者组读取数据，并过滤到每个组的第一个条目。
- en: '[PRE156]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: 'In pandas this would be written as:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中，这样写：
- en: '[PRE157]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: Other considerations
  id: totrans-462
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他考虑
- en: Disk vs memory
  id: totrans-463
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 磁盘 vs 内存
- en: pandas operates exclusively in memory, where a SAS data set exists on disk.
    This means that the size of data able to be loaded in pandas is limited by your
    machine’s memory, but also that the operations on that data may be faster.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: pandas仅在内存中运行，而SAS数据集存在于磁盘上。这意味着pandas���够加载的数据大小受限于计算机的内存，但也意味着对该数据的操作可能更快。
- en: If out of core processing is needed, one possibility is the [dask.dataframe](https://docs.dask.org/en/latest/dataframe.html)
    library (currently in development) which provides a subset of pandas functionality
    for an on-disk `DataFrame`
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要进行核心外处理，一种可能性是[dask.dataframe](https://docs.dask.org/en/latest/dataframe.html)库（目前正在开发中），它为磁盘上的`DataFrame`提供了一部分pandas功能。
- en: Data interop
  id: totrans-466
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据互操作
- en: pandas provides a [`read_sas()`](../../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") method that can read SAS data saved in the XPORT or SAS7BDAT
    binary format.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: pandas提供了一个[`read_sas()`](../../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas")方法，可以读取以XPORT或SAS7BDAT二进制格式保存的SAS数据。
- en: '[PRE158]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '[PRE159]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: You can also specify the file format directly. By default, pandas will try to
    infer the file format based on its extension.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以直接指定文件格式。默认情况下，pandas将尝试根据其扩展名推断文件格式。
- en: '[PRE160]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: XPORT is a relatively limited format and the parsing of it is not as optimized
    as some of the other pandas readers. An alternative way to interop data between
    SAS and pandas is to serialize to csv.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: XPORT是一个相对有限的格式，其解析不像其他pandas读取器那样经过优化。在SAS和pandas之间交换数据的另一种方法是序列化为csv。
- en: '[PRE161]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: Disk vs memory
  id: totrans-474
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 磁盘 vs 内存
- en: pandas operates exclusively in memory, where a SAS data set exists on disk.
    This means that the size of data able to be loaded in pandas is limited by your
    machine’s memory, but also that the operations on that data may be faster.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: pandas仅在内存中运行，而SAS数据集存在于磁盘上。这意味着pandas能够加载的数据大小受限于计算机的内存，但也意味着对该数据的操作可能更快。
- en: If out of core processing is needed, one possibility is the [dask.dataframe](https://docs.dask.org/en/latest/dataframe.html)
    library (currently in development) which provides a subset of pandas functionality
    for an on-disk `DataFrame`
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要进行核心外处理，一种可能性是[dask.dataframe](https://docs.dask.org/en/latest/dataframe.html)库（目前正在开发中），它为磁盘上的`DataFrame`提供了一部分pandas功能。
- en: Data interop
  id: totrans-477
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据互操作
- en: pandas provides a [`read_sas()`](../../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") method that can read SAS data saved in the XPORT or SAS7BDAT
    binary format.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 提供了一个 [`read_sas()`](../../reference/api/pandas.read_sas.html#pandas.read_sas
    "pandas.read_sas") 方法，可以读取以 XPORT 或 SAS7BDAT 二进制格式保存的 SAS 数据。
- en: '[PRE162]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '[PRE163]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: You can also specify the file format directly. By default, pandas will try to
    infer the file format based on its extension.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以直接指定文件格式。默认情况下，pandas 将尝试根据文件扩展名推断文件格式。
- en: '[PRE164]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: XPORT is a relatively limited format and the parsing of it is not as optimized
    as some of the other pandas readers. An alternative way to interop data between
    SAS and pandas is to serialize to csv.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: XPORT 是一个相对有限的格式，其解析并不像其他 pandas 读取器那样优化。在 SAS 和 pandas 之间进行数据交互的另一种方式是序列化为
    csv。
- en: '[PRE165]'
  id: totrans-484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
