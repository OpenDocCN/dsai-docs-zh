- en: Musculotendon (Docstrings)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/biomechanics/api/musculotendon.html](https://docs.sympy.org/latest/modules/physics/biomechanics/api/musculotendon.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Implementations of musculotendon models.
  prefs: []
  type: TYPE_NORMAL
- en: Musculotendon models are a critical component of biomechanical models, one that
    differentiates them from pure multibody systems. Musculotendon models produce
    a force dependent on their level of activation, their length, and their extension
    velocity. Length- and extension velocity-dependent force production are governed
    by force-length and force-velocity characteristics. These are normalized functions
    that are dependent on the musculotendon’s state and are specific to a given musculotendon
    model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Abstract base class for all musculotendon classes to inherit from.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : str'
  prefs: []
  type: TYPE_NORMAL
- en: The name identifier associated with the musculotendon. This name is used as
    a suffix when automatically generated symbols are instantiated. It must be a string
    of nonzero length.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**pathway** : PathwayBase'
  prefs: []
  type: TYPE_NORMAL
- en: The pathway that the actuator follows. This must be an instance of a concrete
    subclass of `PathwayBase`, e.g. `LinearPathway`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**activation_dynamics** : ActivationBase'
  prefs: []
  type: TYPE_NORMAL
- en: The activation dynamics that will be modeled within the musculotendon. This
    must be an instance of a concrete subclass of `ActivationBase`, e.g. `FirstOrderActivationDeGroote2016`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**musculotendon_dynamics** : MusculotendonFormulation | int'
  prefs: []
  type: TYPE_NORMAL
- en: The formulation of musculotendon dynamics that should be used internally, i.e.
    rigid or elastic tendon model, the choice of musculotendon state etc. This must
    be a member of the integer enumeration `MusculotendonFormulation` or an integer
    that can be cast to a member. To use a rigid tendon formulation, set this to `MusculotendonFormulation.RIGID_TENDON`
    (or the integer value `0`, which will be cast to the enumeration member). There
    are four possible formulations for an elastic tendon model. To use an explicit
    formulation with the fiber length as the state, set this to `MusculotendonFormulation.FIBER_LENGTH_EXPLICIT`
    (or the integer value `1`). To use an explicit formulation with the tendon force
    as the state, set this to `MusculotendonFormulation.TENDON_FORCE_EXPLICIT` (or
    the integer value `2`). To use an implicit formulation with the fiber length as
    the state, set this to `MusculotendonFormulation.FIBER_LENGTH_IMPLICIT` (or the
    integer value `3`). To use an implicit formulation with the tendon force as the
    state, set this to `MusculotendonFormulation.TENDON_FORCE_IMPLICIT` (or the integer
    value `4`). The default is `MusculotendonFormulation.RIGID_TENDON`, which corresponds
    to a rigid tendon formulation.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**tendon_slack_length** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The length of the tendon when the musculotendon is in its unloaded state. In
    a rigid tendon model the tendon length is the tendon slack length. In all musculotendon
    models, tendon slack length is used to normalize tendon length to give \(\tilde{l}^T
    = \frac{l^T}{l^T_{slack}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**peak_isometric_force** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The maximum force that the muscle fiber can produce when it is undergoing an
    isometric contraction (no lengthening velocity). In all musculotendon models,
    peak isometric force is used to normalized tendon and muscle fiber force to give
    \(\tilde{F}^T = \frac{F^T}{F^M_{max}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**optimal_fiber_length** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The muscle fiber length at which the muscle fibers produce no passive force
    and their maximum active force. In all musculotendon models, optimal fiber length
    is used to normalize muscle fiber length to give \(\tilde{l}^M = \frac{l^M}{l^M_{opt}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**maximal_fiber_velocity** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The fiber velocity at which, during muscle fiber shortening, the muscle fibers
    are unable to produce any active force. In all musculotendon models, maximal fiber
    velocity is used to normalize muscle fiber extension velocity to give \(\tilde{v}^M
    = \frac{v^M}{v^M_{max}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**optimal_pennation_angle** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The pennation angle when muscle fiber length equals the optimal fiber length.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**fiber_damping_coefficient** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The coefficient of damping to be used in the damping element in the muscle fiber
    model.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**with_defaults** : bool'
  prefs: []
  type: TYPE_NORMAL
- en: Whether `with_defaults` alternate constructors should be used when automatically
    constructing child classes. Default is `False`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: A musculotendon generates a contractile force based on its activation, length,
    and shortening velocity. This abstract base class is to be inherited by all musculotendon
    subclasses that implement different characteristic musculotendon curves. Characteristic
    musculotendon curves are required for the tendon force-length, passive fiber force-length,
    active fiber force- length, and fiber force-velocity relationships.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of equations on the RHS of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The column matrix that forms the RHS of the linear system of ordinary differential
    equations governing the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics have no state variables, this linear system
    has dimension 0 and therefore `F` is an empty column `Matrix` with shape (0, 1).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the peak isometric force constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The maximum force that the muscle fiber can produce when it is undergoing an
    isometric contraction (no lengthening velocity). In all musculotendon models,
    peak isometric force is used to normalized tendon and muscle fiber force to give
    \(\tilde{F}^T = \frac{F^T}{F^M_{max}}\).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `peak_isometric_force` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Ordered square matrix of coefficients on the LHS of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The square matrix that forms part of the LHS of the linear system of ordinary
    differential equations governing the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics have no state variables, this linear system
    has dimension 0 and therefore `M` is an empty square `Matrix` with shape (0, 0).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic symbol representing activation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `activation` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic symbol representing activation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `a` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Activation dynamics model governing this musculotendon’s activation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Returns the instance of a subclass of `ActivationBase` that governs the relationship
    between excitation and activation that is used to represent the activation dynamics
    of this musculotendon.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the optimal pennation angle constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The pennation angle when muscle fiber length equals the optimal fiber length.
  prefs: []
  type: TYPE_NORMAL
- en: The alias `optimal_pennation_angle` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the fiber damping coefficient constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The coefficient of damping to be used in the damping element in the muscle fiber
    model.
  prefs: []
  type: TYPE_NORMAL
- en: The alias `fiber_damping_coefficient` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of non-time varying symbols present in `M` and `F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Only symbolic constants are returned. If a numeric type (e.g. `Float`) has been
    used instead of `Symbol` for a constant then that attribute will not be included
    in the matrix returned by this property. This is because the primary use of this
    property attribute is to provide an ordered sequence of the still-free symbols
    that require numeric values during code generation.
  prefs: []
  type: TYPE_NORMAL
- en: The alias `p` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Return a `CharacteristicCurveCollection` of the curves related to the specific
    model.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic symbol representing excitation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `excitation` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic symbol representing excitation.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `e` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the fiber damping coefficient constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The coefficient of damping to be used in the damping element in the muscle fiber
    model.
  prefs: []
  type: TYPE_NORMAL
- en: The alias `beta` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the input variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `r` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the optimal fiber length constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The muscle fiber length at which the muscle fibers produce no passive force
    and their maximum active force. In all musculotendon models, optimal fiber length
    is used to normalize muscle fiber length to give \(\tilde{l}^M = \frac{l^M}{l^M_{opt}}\).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `optimal_fiber_length` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the tendon slack length constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The length of the tendon when the musculotendon is in its unloaded state. In
    a rigid tendon model the tendon length is the tendon slack length. In all musculotendon
    models, tendon slack length is used to normalize tendon length to give \(\tilde{l}^T
    = \frac{l^T}{l^T_{slack}}\).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `tendon_slack_length` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the maximal fiber velocity constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The fiber velocity at which, during muscle fiber shortening, the muscle fibers
    are unable to produce any active force. In all musculotendon models, maximal fiber
    velocity is used to normalize muscle fiber extension velocity to give \(\tilde{v}^M
    = \frac{v^M}{v^M_{max}}\).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `v_M_max` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: The choice of rigid or type of elastic tendon musculotendon dynamics.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The formulation of musculotendon dynamics that should be used internally, i.e.
    rigid or elastic tendon model, the choice of musculotendon state etc. This must
    be a member of the integer enumeration `MusculotendonFormulation` or an integer
    that can be cast to a member. To use a rigid tendon formulation, set this to `MusculotendonFormulation.RIGID_TENDON`
    (or the integer value `0`, which will be cast to the enumeration member). There
    are four possible formulations for an elastic tendon model. To use an explicit
    formulation with the fiber length as the state, set this to `MusculotendonFormulation.FIBER_LENGTH_EXPLICIT`
    (or the integer value `1`). To use an explicit formulation with the tendon force
    as the state, set this to `MusculotendonFormulation.TENDON_FORCE_EXPLICIT` (or
    the integer value `2`). To use an implicit formulation with the fiber length as
    the state, set this to `MusculotendonFormulation.FIBER_LENGTH_IMPLICIT` (or the
    integer value `3`). To use an implicit formulation with the tendon force as the
    state, set this to `MusculotendonFormulation.TENDON_FORCE_IMPLICIT` (or the integer
    value `4`). The default is `MusculotendonFormulation.RIGID_TENDON`, which corresponds
    to a rigid tendon formulation.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the optimal fiber length constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The muscle fiber length at which the muscle fibers produce no passive force
    and their maximum active force. In all musculotendon models, optimal fiber length
    is used to normalize muscle fiber length to give \(\tilde{l}^M = \frac{l^M}{l^M_{opt}}\).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `l_M_opt` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the optimal pennation angle constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The pennation angle when muscle fiber length equals the optimal fiber length.
  prefs: []
  type: TYPE_NORMAL
- en: The alias `alpha_opt` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of non-time varying symbols present in `M` and `F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Only symbolic constants are returned. If a numeric type (e.g. `Float`) has been
    used instead of `Symbol` for a constant then that attribute will not be included
    in the matrix returned by this property. This is because the primary use of this
    property attribute is to provide an ordered sequence of the still-free symbols
    that require numeric values during code generation.
  prefs: []
  type: TYPE_NORMAL
- en: The alias `constants` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the peak isometric force constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The maximum force that the muscle fiber can produce when it is undergoing an
    isometric contraction (no lengthening velocity). In all musculotendon models,
    peak isometric force is used to normalized tendon and muscle fiber force to give
    \(\tilde{F}^T = \frac{F^T}{F^M_{max}}\).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `F_M_max` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the input variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `input_vars` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of equations for the solution of `M x' = F`.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'The solution to the linear system of ordinary differential equations governing
    the activation dynamics:'
  prefs: []
  type: TYPE_NORMAL
- en: '`M(x, r, t, p) x'' = F(x, r, t, p)`.'
  prefs: []
  type: TYPE_NORMAL
- en: As zeroth-order activation dynamics have no state variables, this linear has
    dimension 0 and therefore this method returns an empty column `Matrix` with shape
    (0, 1).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the state variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `x` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the tendon slack length constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The length of the tendon when the musculotendon is in its unloaded state. In
    a rigid tendon model the tendon length is the tendon slack length. In all musculotendon
    models, tendon slack length is used to normalize tendon length to give \(\tilde{l}^T
    = \frac{l^T}{l^T_{slack}}\).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `l_T_slack` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Symbol or value corresponding to the maximal fiber velocity constant.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The fiber velocity at which, during muscle fiber shortening, the muscle fibers
    are unable to produce any active force. In all musculotendon models, maximal fiber
    velocity is used to normalize muscle fiber extension velocity to give \(\tilde{v}^M
    = \frac{v^M}{v^M_{max}}\).
  prefs: []
  type: TYPE_NORMAL
- en: The alias `maximal_fiber_velocity` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Recommended constructor that will use the published constants.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : str'
  prefs: []
  type: TYPE_NORMAL
- en: The name identifier associated with the musculotendon. This name is used as
    a suffix when automatically generated symbols are instantiated. It must be a string
    of nonzero length.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**pathway** : PathwayBase'
  prefs: []
  type: TYPE_NORMAL
- en: The pathway that the actuator follows. This must be an instance of a concrete
    subclass of `PathwayBase`, e.g. `LinearPathway`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**activation_dynamics** : ActivationBase'
  prefs: []
  type: TYPE_NORMAL
- en: The activation dynamics that will be modeled within the musculotendon. This
    must be an instance of a concrete subclass of `ActivationBase`, e.g. `FirstOrderActivationDeGroote2016`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**musculotendon_dynamics** : MusculotendonFormulation | int'
  prefs: []
  type: TYPE_NORMAL
- en: The formulation of musculotendon dynamics that should be used internally, i.e.
    rigid or elastic tendon model, the choice of musculotendon state etc. This must
    be a member of the integer enumeration `MusculotendonFormulation` or an integer
    that can be cast to a member. To use a rigid tendon formulation, set this to `MusculotendonFormulation.RIGID_TENDON`
    (or the integer value `0`, which will be cast to the enumeration member). There
    are four possible formulations for an elastic tendon model. To use an explicit
    formulation with the fiber length as the state, set this to `MusculotendonFormulation.FIBER_LENGTH_EXPLICIT`
    (or the integer value `1`). To use an explicit formulation with the tendon force
    as the state, set this to `MusculotendonFormulation.TENDON_FORCE_EXPLICIT` (or
    the integer value `2`). To use an implicit formulation with the fiber length as
    the state, set this to `MusculotendonFormulation.FIBER_LENGTH_IMPLICIT` (or the
    integer value `3`). To use an implicit formulation with the tendon force as the
    state, set this to `MusculotendonFormulation.TENDON_FORCE_IMPLICIT` (or the integer
    value `4`). The default is `MusculotendonFormulation.RIGID_TENDON`, which corresponds
    to a rigid tendon formulation.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**tendon_slack_length** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The length of the tendon when the musculotendon is in its unloaded state. In
    a rigid tendon model the tendon length is the tendon slack length. In all musculotendon
    models, tendon slack length is used to normalize tendon length to give \(\tilde{l}^T
    = \frac{l^T}{l^T_{slack}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**peak_isometric_force** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The maximum force that the muscle fiber can produce when it is undergoing an
    isometric contraction (no lengthening velocity). In all musculotendon models,
    peak isometric force is used to normalized tendon and muscle fiber force to give
    \(\tilde{F}^T = \frac{F^T}{F^M_{max}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**optimal_fiber_length** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The muscle fiber length at which the muscle fibers produce no passive force
    and their maximum active force. In all musculotendon models, optimal fiber length
    is used to normalize muscle fiber length to give \(\tilde{l}^M = \frac{l^M}{l^M_{opt}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**maximal_fiber_velocity** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The fiber velocity at which, during muscle fiber shortening, the muscle fibers
    are unable to produce any active force. In all musculotendon models, maximal fiber
    velocity is used to normalize muscle fiber extension velocity to give \(\tilde{v}^M
    = \frac{v^M}{v^M_{max}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**optimal_pennation_angle** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The pennation angle when muscle fiber length equals the optimal fiber length.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**fiber_damping_coefficient** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The coefficient of damping to be used in the damping element in the muscle fiber
    model.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns a new instance of the musculotendon class using recommended values
    for `v_M_max`, `alpha_opt`, and `beta`. The values are:'
  prefs: []
  type: TYPE_NORMAL
- en: \(v^M_{max} = 10\) \(\alpha_{opt} = 0\) \(\beta = \frac{1}{10}\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The musculotendon curves are also instantiated using the constants from the
    original publication.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Ordered column matrix of functions of time that represent the state variables.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: The alias `state_vars` can also be used to access the same attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Musculotendon model using the curves of De Groote et al., 2016 [[R728]](#r728).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : str'
  prefs: []
  type: TYPE_NORMAL
- en: The name identifier associated with the musculotendon. This name is used as
    a suffix when automatically generated symbols are instantiated. It must be a string
    of nonzero length.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**pathway** : PathwayBase'
  prefs: []
  type: TYPE_NORMAL
- en: The pathway that the actuator follows. This must be an instance of a concrete
    subclass of `PathwayBase`, e.g. `LinearPathway`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**activation_dynamics** : ActivationBase'
  prefs: []
  type: TYPE_NORMAL
- en: The activation dynamics that will be modeled within the musculotendon. This
    must be an instance of a concrete subclass of `ActivationBase`, e.g. `FirstOrderActivationDeGroote2016`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**musculotendon_dynamics** : MusculotendonFormulation | int'
  prefs: []
  type: TYPE_NORMAL
- en: The formulation of musculotendon dynamics that should be used internally, i.e.
    rigid or elastic tendon model, the choice of musculotendon state etc. This must
    be a member of the integer enumeration `MusculotendonFormulation` or an integer
    that can be cast to a member. To use a rigid tendon formulation, set this to `MusculotendonFormulation.RIGID_TENDON`
    (or the integer value `0`, which will be cast to the enumeration member). There
    are four possible formulations for an elastic tendon model. To use an explicit
    formulation with the fiber length as the state, set this to `MusculotendonFormulation.FIBER_LENGTH_EXPLICIT`
    (or the integer value `1`). To use an explicit formulation with the tendon force
    as the state, set this to `MusculotendonFormulation.TENDON_FORCE_EXPLICIT` (or
    the integer value `2`). To use an implicit formulation with the fiber length as
    the state, set this to `MusculotendonFormulation.FIBER_LENGTH_IMPLICIT` (or the
    integer value `3`). To use an implicit formulation with the tendon force as the
    state, set this to `MusculotendonFormulation.TENDON_FORCE_IMPLICIT` (or the integer
    value `4`). The default is `MusculotendonFormulation.RIGID_TENDON`, which corresponds
    to a rigid tendon formulation.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**tendon_slack_length** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The length of the tendon when the musculotendon is in its unloaded state. In
    a rigid tendon model the tendon length is the tendon slack length. In all musculotendon
    models, tendon slack length is used to normalize tendon length to give \(\tilde{l}^T
    = \frac{l^T}{l^T_{slack}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**peak_isometric_force** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The maximum force that the muscle fiber can produce when it is undergoing an
    isometric contraction (no lengthening velocity). In all musculotendon models,
    peak isometric force is used to normalized tendon and muscle fiber force to give
    \(\tilde{F}^T = \frac{F^T}{F^M_{max}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**optimal_fiber_length** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The muscle fiber length at which the muscle fibers produce no passive force
    and their maximum active force. In all musculotendon models, optimal fiber length
    is used to normalize muscle fiber length to give \(\tilde{l}^M = \frac{l^M}{l^M_{opt}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**maximal_fiber_velocity** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The fiber velocity at which, during muscle fiber shortening, the muscle fibers
    are unable to produce any active force. In all musculotendon models, maximal fiber
    velocity is used to normalize muscle fiber extension velocity to give \(\tilde{v}^M
    = \frac{v^M}{v^M_{max}}\).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**optimal_pennation_angle** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The pennation angle when muscle fiber length equals the optimal fiber length.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**fiber_damping_coefficient** : Expr | None'
  prefs: []
  type: TYPE_NORMAL
- en: The coefficient of damping to be used in the damping element in the muscle fiber
    model.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**with_defaults** : bool'
  prefs: []
  type: TYPE_NORMAL
- en: Whether `with_defaults` alternate constructors should be used when automatically
    constructing child classes. Default is `False`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: This class models the musculotendon actuator parametrized by the characteristic
    curves described in De Groote et al., 2016 [[R728]](#r728). Like all musculotendon
    models in SymPy’s biomechanics module, it requires a pathway to define its line
    of action. We’ll begin by creating a simple `LinearPathway` between two points
    that our musculotendon will follow. We’ll create a point `O` to represent the
    musculotendon’s origin and another `I` to represent its insertion.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: A musculotendon also takes an instance of an activation dynamics model as this
    will be used to provide symbols for the activation in the formulation of the musculotendon
    dynamics. We’ll use an instance of `FirstOrderActivationDeGroote2016` to represent
    first-order activation dynamics. Note that a single name argument needs to be
    provided as SymPy will use this as a suffix.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: The musculotendon class requires symbols or values to be passed to represent
    the constants in the musculotendon dynamics. We’ll use SymPy’s `symbols` function
    to create symbols for the maximum isometric force `F_M_max`, optimal fiber length
    `l_M_opt`, tendon slack length `l_T_slack`, maximum fiber velocity `v_M_max`,
    optimal pennation angle [PRE35].
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: We can then import the class `MusculotendonDeGroote2016` from the biomechanics
    module and create an instance by passing in the various objects we have previously
    instantiated. By default, a musculotendon model with rigid tendon musculotendon
    dynamics will be created.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: We can inspect the various properties of the musculotendon, including getting
    the symbolic expression describing the force it produces using its `force` attribute.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: When we created the musculotendon object, we passed in an instance of an activation
    dynamics object that governs the activation within the musculotendon. SymPy makes
    a design choice here that the activation dynamics instance will be treated as
    a child object of the musculotendon dynamics. Therefore, if we want to inspect
    the state and input variables associated with the musculotendon model, we will
    also be returned the state and input variables associated with the child object,
    or the activation dynamics in this case. As the musculotendon model that we created
    here uses rigid tendon dynamics, no additional states or inputs relating to the
    musculotendon are introduces. Consequently, the model has a single state associated
    with it, the activation, and a single input associated with it, the excitation.
    The states and inputs can be inspected using the `x` and `r` attributes respectively.
    Note that both `x` and `r` have the alias attributes of `state_vars` and `input_vars`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: To see which constants are symbolic in the musculotendon model, we can use the
    `p` or `constants` attribute. This returns a `Matrix` populated by the constants
    that are represented by a `Symbol` rather than a numeric value.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Finally, we can call the `rhs` method to return a `Matrix` that contains as
    its elements the righthand side of the ordinary differential equations corresponding
    to each of the musculotendon’s states. Like the method with the same name on the
    `Method` classes in SymPy’s mechanics module, this returns a column vector where
    the number of rows corresponds to the number of states. For our example here,
    we have a single state, the dynamic symbol `a_muscle(t)`, so the returned value
    is a 1-by-1 `Matrix`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: The musculotendon class supports elastic tendon musculotendon models in addition
    to rigid tendon ones. You can choose to either use the fiber length or tendon
    force as an additional state. You can also specify whether an explicit or implicit
    formulation should be used. To select a formulation, pass a member of the `MusculotendonFormulation`
    enumeration to the `musculotendon_dynamics` parameter when calling the constructor.
    This enumeration is an `IntEnum`, so you can also pass an integer, however it
    is recommended to use the enumeration as it is clearer which formulation you are
    actually selecting. Below, we’ll use the `FIBER_LENGTH_EXPLICIT` member to create
    a musculotendon with an elastic tendon that will use the (normalized) muscle fiber
    length as an additional state and will produce the governing ordinary differential
    equation in explicit form.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: It is strongly recommended to use the alternate `with_defaults` constructor
    when creating an instance because this will ensure that the published constants
    are used in the musculotendon characteristic curves.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[R728] ([1](#id1),[2](#id2),[3](#id3))'
  prefs: []
  type: TYPE_NORMAL
- en: De Groote, F., Kinney, A. L., Rao, A. V., & Fregly, B. J., Evaluation of direct
    collocation optimal control problem formulations for solving the muscle redundancy
    problem, Annals of biomedical engineering, 44(10), (2016) pp. 2922-2936
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: Enumeration of types of musculotendon dynamics formulations.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: An (integer) enumeration is used as it allows for clearer selection of the different
    formulations of musculotendon dynamics.
  prefs: []
  type: TYPE_NORMAL
- en: Members
  prefs: []
  type: TYPE_NORMAL
- en: RIGID_TENDON0
  prefs: []
  type: TYPE_NORMAL
- en: A rigid tendon model.
  prefs: []
  type: TYPE_NORMAL
- en: FIBER_LENGTH_EXPLICIT1
  prefs: []
  type: TYPE_NORMAL
- en: An explicit elastic tendon model with the muscle fiber length (l_M) as the state
    variable.
  prefs: []
  type: TYPE_NORMAL
- en: TENDON_FORCE_EXPLICIT2
  prefs: []
  type: TYPE_NORMAL
- en: An explicit elastic tendon model with the tendon force (F_T) as the state variable.
  prefs: []
  type: TYPE_NORMAL
- en: FIBER_LENGTH_IMPLICIT3
  prefs: []
  type: TYPE_NORMAL
- en: An implicit elastic tendon model with the muscle fiber length (l_M) as the state
    variable and the muscle fiber velocity as an additional input variable.
  prefs: []
  type: TYPE_NORMAL
- en: TENDON_FORCE_IMPLICIT4
  prefs: []
  type: TYPE_NORMAL
- en: An implicit elastic tendon model with the tendon force (F_T) as the state variable
    as the muscle fiber velocity as an additional input variable.
  prefs: []
  type: TYPE_NORMAL
