- en: numpy.mod
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.mod.html](https://numpy.org/doc/1.26/reference/generated/numpy.mod.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Returns the element-wise remainder of division.
  prefs: []
  type: TYPE_NORMAL
- en: Computes the remainder complementary to the [`floor_divide`](numpy.floor_divide.html#numpy.floor_divide
    "numpy.floor_divide") function. It is equivalent to the Python modulus operator``x1
    % x2`` and has the same sign as the divisor *x2*. The MATLAB function equivalent
    to `np.remainder` is `mod`.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs: []
  type: TYPE_NORMAL
- en: 'This should not be confused with:'
  prefs: []
  type: TYPE_NORMAL
- en: Python 3.7’s [`math.remainder`](https://docs.python.org/3/library/math.html#math.remainder
    "(in Python v3.11)") and C’s `remainder`, which computes the IEEE remainder, which
    are the complement to `round(x1 / x2)`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The MATLAB `rem` function and or the C `%` operator which is the complement
    to `int(x1 / x2)`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x1**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Dividend array.
  prefs: []
  type: TYPE_NORMAL
- en: '**x2**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Divisor array. If `x1.shape != x2.shape`, they must be broadcastable to a common
    shape (which becomes the shape of the output).
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  prefs: []
  type: TYPE_NORMAL
- en: '**where**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**'
  prefs: []
  type: TYPE_NORMAL
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The element-wise remainder of the quotient `floor_divide(x1, x2)`. This is a
    scalar if both *x1* and *x2* are scalars.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`floor_divide`](numpy.floor_divide.html#numpy.floor_divide "numpy.floor_divide")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent of Python `//` operator.
  prefs: []
  type: TYPE_NORMAL
- en: '[`divmod`](numpy.divmod.html#numpy.divmod "numpy.divmod")'
  prefs: []
  type: TYPE_NORMAL
- en: Simultaneous floor division and remainder.
  prefs: []
  type: TYPE_NORMAL
- en: '[`fmod`](numpy.fmod.html#numpy.fmod "numpy.fmod")'
  prefs: []
  type: TYPE_NORMAL
- en: Equivalent of the MATLAB `rem` function.
  prefs: []
  type: TYPE_NORMAL
- en: '[`divide`](numpy.divide.html#numpy.divide "numpy.divide"), [`floor`](numpy.floor.html#numpy.floor
    "numpy.floor")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Returns 0 when *x2* is 0 and both *x1* and *x2* are (arrays of) integers. `mod`
    is an alias of `remainder`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `%` operator can be used as a shorthand for `np.remainder` on ndarrays.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
