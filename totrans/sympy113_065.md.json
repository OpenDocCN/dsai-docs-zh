["```py\nsympy.combinatorics.group_numbers.is_nilpotent_number(n) → bool\n```", "```py\n>>> from sympy.combinatorics.group_numbers import is_nilpotent_number\n>>> from sympy import randprime\n>>> is_nilpotent_number(21)\nFalse\n>>> is_nilpotent_number(randprime(1, 30)**12)\nTrue \n```", "```py\nsympy.combinatorics.group_numbers.is_abelian_number(n) → bool\n```", "```py\n>>> from sympy.combinatorics.group_numbers import is_abelian_number\n>>> from sympy import randprime\n>>> is_abelian_number(4)\nTrue\n>>> is_abelian_number(randprime(1, 2000)**2)\nTrue\n>>> is_abelian_number(60)\nFalse \n```", "```py\nsympy.combinatorics.group_numbers.is_cyclic_number(n) → bool\n```", "```py\n>>> from sympy.combinatorics.group_numbers import is_cyclic_number\n>>> from sympy import randprime\n>>> is_cyclic_number(15)\nTrue\n>>> is_cyclic_number(randprime(1, 2000)**2)\nFalse\n>>> is_cyclic_number(4)\nFalse \n```", "```py\nsympy.combinatorics.group_numbers.groups_count(n)\n```", "```py\n>>> from sympy.combinatorics.group_numbers import groups_count\n>>> groups_count(3) # There is only one cyclic group of order 3\n1\n>>> # There are two groups of order 10: the cyclic group and the dihedral group\n>>> groups_count(10)\n2 \n```"]