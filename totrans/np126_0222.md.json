["```py\nnumpy.choose(a, choices, out=None, mode='raise')\n```", "```py\n>>> choices = [[0, 1, 2, 3], [10, 11, 12, 13],\n...   [20, 21, 22, 23], [30, 31, 32, 33]]\n>>> np.choose([2, 3, 1, 0], choices\n... # the first element of the result will be the first element of the\n... # third (2+1) \"array\" in choices, namely, 20; the second element\n... # will be the second element of the fourth (3+1) choice array, i.e.,\n... # 31, etc.\n... )\narray([20, 31, 12,  3])\n>>> np.choose([2, 4, 1, 0], choices, mode='clip') # 4 goes to 3 (4-1)\narray([20, 31, 12,  3])\n>>> # because there are 4 choice arrays\n>>> np.choose([2, 4, 1, 0], choices, mode='wrap') # 4 goes to (4 mod 4)\narray([20,  1, 12,  3])\n>>> # i.e., 0 \n```", "```py\n>>> a = [[1, 0, 1], [0, 1, 0], [1, 0, 1]]\n>>> choices = [-10, 10]\n>>> np.choose(a, choices)\narray([[ 10, -10,  10],\n [-10,  10, -10],\n [ 10, -10,  10]]) \n```", "```py\n>>> # With thanks to Anne Archibald\n>>> a = np.array([0, 1]).reshape((2,1,1))\n>>> c1 = np.array([1, 2, 3]).reshape((1,3,1))\n>>> c2 = np.array([-1, -2, -3, -4, -5]).reshape((1,1,5))\n>>> np.choose(a, (c1, c2)) # result is 2x3x5, res[0,:,:]=c1, res[1,:,:]=c2\narray([[[ 1,  1,  1,  1,  1],\n [ 2,  2,  2,  2,  2],\n [ 3,  3,  3,  3,  3]],\n [[-1, -2, -3, -4, -5],\n [-1, -2, -3, -4, -5],\n [-1, -2, -3, -4, -5]]]) \n```"]