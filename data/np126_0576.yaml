- en: numpy.linalg.tensorsolve
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.linalg.tensorsolve
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.linalg.tensorsolve.html](https://numpy.org/doc/1.26/reference/generated/numpy.linalg.tensorsolve.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.linalg.tensorsolve.html](https://numpy.org/doc/1.26/reference/generated/numpy.linalg.tensorsolve.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Solve the tensor equation `a x = b` for x.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 解张量方程`a x = b`，求解*x*。
- en: It is assumed that all indices of *x* are summed over in the product, together
    with the rightmost indices of *a*, as is done in, for example, `tensordot(a, x,
    axes=x.ndim)`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 假设*x*的所有索引在乘积中与*a*的最右边的索引一起被求和，如在例如`tensordot(a, x, axes=x.ndim)`中所做的那样。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**类似数组'
- en: Coefficient tensor, of shape `b.shape + Q`. *Q*, a tuple, equals the shape of
    that sub-tensor of *a* consisting of the appropriate number of its rightmost indices,
    and must be such that `prod(Q) == prod(b.shape)` (in which sense *a* is said to
    be ‘square’).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 系数张量，形状为`b.shape + Q`。*Q*，一个元组，等于*a*的子张量的形状，其中包含适当数量的最右边索引，并且必须满足`prod(Q) ==
    prod(b.shape)`（在这种意义上，*a*被称为“方阵”）。
- en: '**b**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**b**类似数组'
- en: Right-hand tensor, which can be of any shape.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 右手张量，可以是任意形状。
- en: '**axes**tuple of ints, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**轴**整数元组，可选'
- en: Axes in *a* to reorder to the right, before inversion. If None (default), no
    reordering is done.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对*a*中的轴重新排序，以便在求逆之前将其移到正确位置。如果为None（默认），则不进行重新排序。
- en: 'Returns:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**x**ndarray, shape Q'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**数组，形状 Q'
- en: 'Raises:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 异常：
- en: LinAlgError
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: LinAlgError
- en: If *a* is singular or not ‘square’ (in the above sense).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*a*是奇异的或不是“方阵”（在上述意义上）。
- en: See also
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`numpy.tensordot`](numpy.tensordot.html#numpy.tensordot "numpy.tensordot"),
    [`tensorinv`](numpy.linalg.tensorinv.html#numpy.linalg.tensorinv "numpy.linalg.tensorinv"),
    [`numpy.einsum`](numpy.einsum.html#numpy.einsum "numpy.einsum")'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.tensordot`](numpy.tensordot.html#numpy.tensordot "numpy.tensordot"),
    [`tensorinv`](numpy.linalg.tensorinv.html#numpy.linalg.tensorinv "numpy.linalg.tensorinv"),
    [`numpy.einsum`](numpy.einsum.html#numpy.einsum "numpy.einsum")'
- en: Examples
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
