- en: Limits of Sequences
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/series/limitseq.html](https://docs.sympy.org/latest/modules/series/limitseq.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Provides methods to compute limit of terms having sequences at infinity.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Difference Operator.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: Discrete analog of differential operator. Given a sequence x[n], returns the
    sequence x[n + step] - x[n].
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R833](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://reference.wolfram.com/language/ref/DifferenceDelta.html](https://reference.wolfram.com/language/ref/DifferenceDelta.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Finds the dominant term in a sum, that is a term that dominates every other
    term.
  prefs: []
  type: TYPE_NORMAL
- en: Explanation
  prefs: []
  type: TYPE_NORMAL
- en: If limit(a/b, n, oo) is oo then a dominates b. If limit(a/b, n, oo) is 0 then
    b dominates a. Otherwise, a and b are comparable.
  prefs: []
  type: TYPE_NORMAL
- en: If there is no unique dominant term, then returns `None`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.series.limitseq.dominant`](#sympy.series.limitseq.dominant "sympy.series.limitseq.dominant")'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Finds the limit of a sequence as index `n` tends to infinity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**expr** : Expr'
  prefs: []
  type: TYPE_NORMAL
- en: SymPy expression for the `n-th` term of the sequence
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**n** : Symbol, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The index of the sequence, an integer that tends to positive infinity. If None,
    inferred from the expression unless it has multiple symbols.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**trials: int, optional**'
  prefs: []
  type: TYPE_NORMAL
- en: The algorithm is highly recursive. `trials` is a safeguard from infinite recursion
    in case the limit is not easily computed by the algorithm. Try increasing `trials`
    if the algorithm returns `None`.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Admissible Terms
  prefs: []
  type: TYPE_NORMAL
- en: The algorithm is designed for sequences built from rational functions, indefinite
    sums, and indefinite products over an indeterminate n. Terms of alternating sign
    are also allowed, but more complex oscillatory behavior is not supported.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`sympy.series.limitseq.dominant`](#sympy.series.limitseq.dominant "sympy.series.limitseq.dominant")'
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[R834](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: Computing Limits of Sequences - Manuel Kauers
  prefs: []
  type: TYPE_NORMAL
