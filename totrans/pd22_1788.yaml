- en: pandas.io.formats.style.Styler.text_gradient
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.text_gradient.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.text_gradient.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Color the text in a gradient style.
  prefs: []
  type: TYPE_NORMAL
- en: The text color is determined according to the data in each column, row or frame,
    or by a given gradient map. Requires matplotlib.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**cmap**str or colormap'
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib colormap.
  prefs: []
  type: TYPE_NORMAL
- en: '**low**float'
  prefs: []
  type: TYPE_NORMAL
- en: Compress the color range at the low end. This is a multiple of the data range
    to extend below the minimum; good values usually in [0, 1], defaults to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**high**float'
  prefs: []
  type: TYPE_NORMAL
- en: Compress the color range at the high end. This is a multiple of the data range
    to extend above the maximum; good values usually in [0, 1], defaults to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**{0, 1, “index”, “columns”, None}, default 0'
  prefs: []
  type: TYPE_NORMAL
- en: Apply to each column (`axis=0` or `'index'`), to each row (`axis=1` or `'columns'`),
    or to the entire DataFrame at once with `axis=None`.
  prefs: []
  type: TYPE_NORMAL
- en: '**subset**label, array-like, IndexSlice, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A valid 2d input to DataFrame.loc[<subset>], or, in the case of a 1d input or
    single key, to DataFrame.loc[:, <subset>] where the columns are prioritised, to
    limit `data` to *before* applying the function.
  prefs: []
  type: TYPE_NORMAL
- en: '**vmin**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Minimum data value that corresponds to colormap minimum value. If not specified
    the minimum value of the data (or gmap) will be used.
  prefs: []
  type: TYPE_NORMAL
- en: '**vmax**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Maximum data value that corresponds to colormap maximum value. If not specified
    the maximum value of the data (or gmap) will be used.
  prefs: []
  type: TYPE_NORMAL
- en: '**gmap**array-like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Gradient map for determining the text colors. If not supplied will use the underlying
    data from rows, columns or frame. If given as an ndarray or list-like must be
    an identical shape to the underlying data considering `axis` and `subset`. If
    given as DataFrame or Series must have same index and column labels considering
    `axis` and `subset`. If supplied, `vmin` and `vmax` should be given relative to
    this gradient map.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.3.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Styler
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`Styler.background_gradient`](pandas.io.formats.style.Styler.background_gradient.html#pandas.io.formats.style.Styler.background_gradient
    "pandas.io.formats.style.Styler.background_gradient")'
  prefs: []
  type: TYPE_NORMAL
- en: Color the background in a gradient style.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: When using `low` and `high` the range of the gradient, given by the data if
    `gmap` is not given or by `gmap`, is extended at the low end effectively by map.min
    - low * map.range and at the high end by map.max + high * map.range before the
    colors are normalized and determined.
  prefs: []
  type: TYPE_NORMAL
- en: If combining with `vmin` and `vmax` the map.min, map.max and map.range are replaced
    by values according to the values derived from `vmin` and `vmax`.
  prefs: []
  type: TYPE_NORMAL
- en: This method will preselect numeric columns and ignore non-numeric columns unless
    a `gmap` is supplied in which case no preselection occurs.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Shading the values column-wise, with `axis=0`, preselecting numeric columns
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/tg_ax0.png](../Images/f8bc83e42374d28dd876da45df792414.png)'
  prefs: []
  type: TYPE_IMG
- en: Shading all values collectively using `axis=None`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/tg_axNone.png](../Images/7353c137ae2bc7ee1f565f9245043f37.png)'
  prefs: []
  type: TYPE_IMG
- en: Compress the color map from the both `low` and `high` ends
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/tg_axNone_lowhigh.png](../Images/bfa0f95725faf53d67ba0f45836f6357.png)'
  prefs: []
  type: TYPE_IMG
- en: Manually setting `vmin` and `vmax` gradient thresholds
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/tg_axNone_vminvmax.png](../Images/05bd6055bdae542d101aba896621768c.png)'
  prefs: []
  type: TYPE_IMG
- en: Setting a `gmap` and applying to all columns with another `cmap`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/tg_gmap.png](../Images/54447511af07b6bed1a2ac917593cddf.png)'
  prefs: []
  type: TYPE_IMG
- en: Setting the gradient map for a dataframe (i.e. `axis=None`), we need to explicitly
    state `subset` to match the `gmap` shape
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/tg_axNone_gmap.png](../Images/4b350488f95389181bc126ef593f2387.png)'
  prefs: []
  type: TYPE_IMG
