- en: numpy.core.defchararray.asarray
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.core.defchararray.asarray.html](https://numpy.org/doc/1.26/reference/generated/numpy.core.defchararray.asarray.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Convert the input to a [`chararray`](numpy.char.chararray.html#numpy.char.chararray
    "numpy.chararray"), copying the data only if necessary.
  prefs: []
  type: TYPE_NORMAL
- en: 'Versus a regular NumPy array of type *str* or *unicode*, this class adds the
    following functionality:'
  prefs: []
  type: TYPE_NORMAL
- en: values automatically have whitespace removed from the end when indexed
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: comparison operators automatically remove whitespace from the end when comparing
    values
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: vectorized string operations are provided as methods (e.g. *str.endswith*) and
    infix operators (e.g. `+`, `*`,``%``)
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**obj**array of str or unicode-like'
  prefs: []
  type: TYPE_NORMAL
- en: '**itemsize**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: '*itemsize* is the number of characters per scalar in the resulting array. If
    *itemsize* is None, and *obj* is an object array or a Python list, the *itemsize*
    will be automatically determined. If *itemsize* is provided and *obj* is of type
    str or unicode, then the *obj* string will be chunked into *itemsize* pieces.'
  prefs: []
  type: TYPE_NORMAL
- en: '**unicode**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'When true, the resulting [`chararray`](numpy.char.chararray.html#numpy.char.chararray
    "numpy.chararray") can contain Unicode characters, when false only 8-bit characters.
    If unicode is None and *obj* is one of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: a [`chararray`](numpy.char.chararray.html#numpy.char.chararray "numpy.chararray"),
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: an ndarray of type *str* or ‘unicode`
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: a Python str or unicode object,
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: then the unicode setting of the output array will be automatically determined.
  prefs: []
  type: TYPE_NORMAL
- en: '**order**{‘C’, ‘F’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Specify the order of the array. If order is ‘C’ (default), then the array will
    be in C-contiguous order (last-index varies the fastest). If order is ‘F’, then
    the returned array will be in Fortran-contiguous order (first-index varies the
    fastest).
  prefs: []
  type: TYPE_NORMAL
