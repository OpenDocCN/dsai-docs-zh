- en: Comprehensive Guide to Ultralytics YOLOv5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[`docs.ultralytics.com/yolov5/`](https://docs.ultralytics.com/yolov5/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![Ultralytics YOLOv5 v7.0 banner](https://ultralytics.com/yolov5)'
  prefs: []
  type: TYPE_IMG
- en: '![YOLOv5 CI](https://github.com/ultralytics/yolov5/actions/workflows/ci-testing.yml)
    ![YOLOv5 Citation](https://zenodo.org/badge/latestdoi/264818686) ![Docker Pulls](https://hub.docker.com/r/ultralytics/yolov5)'
  prefs: []
  type: TYPE_IMG
- en: '![Run on Gradient](https://bit.ly/yolov5-paperspace-notebook) ![Open In Colab](https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb)
    ![Open In Kaggle](https://www.kaggle.com/ultralytics/yolov5)'
  prefs: []
  type: TYPE_IMG
- en: Welcome to the Ultralytics' [YOLOv5](https://github.com/ultralytics/yolov5)üöÄ
    Documentation! YOLOv5, the fifth iteration of the revolutionary "You Only Look
    Once" object detection model, is designed to deliver high-speed, high-accuracy
    results in real-time.
  prefs: []
  type: TYPE_NORMAL
- en: Built on PyTorch, this powerful deep learning framework has garnered immense
    popularity for its versatility, ease of use, and high performance. Our documentation
    guides you through the installation process, explains the architectural nuances
    of the model, showcases various use-cases, and provides a series of detailed tutorials.
    These resources will help you harness the full potential of YOLOv5 for your computer
    vision projects. Let's get started!
  prefs: []
  type: TYPE_NORMAL
- en: Explore and Learn
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here's a compilation of comprehensive tutorials that will guide you through
    different aspects of YOLOv5.
  prefs: []
  type: TYPE_NORMAL
- en: 'Train Custom Data üöÄ RECOMMENDED: Learn how to train the YOLOv5 model on your
    custom dataset.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tips for Best Training Results ‚òòÔ∏è: Uncover practical tips to optimize your
    model training process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Multi-GPU Training: Understand how to leverage multiple GPUs to expedite your
    training.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'PyTorch Hub üåü NEW: Learn to load pre-trained models via PyTorch Hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'TFLite, ONNX, CoreML, TensorRT Export üöÄ: Understand how to export your model
    to different formats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Test-Time Augmentation (TTA): Explore how to use TTA to improve your model''s
    prediction accuracy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Model Ensembling: Learn the strategy of combining multiple models for improved
    performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Model Pruning/Sparsity: Understand pruning and sparsity concepts, and how to
    create a more efficient model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hyperparameter Evolution: Discover the process of automated hyperparameter
    tuning for better model performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Transfer Learning with Frozen Layers: Learn how to implement transfer learning
    by freezing layers in YOLOv5.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Architecture Summary üåü Delve into the structural details of the YOLOv5 model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Roboflow for Datasets: Understand how to utilize Roboflow for dataset management,
    labeling, and active learning.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ClearML Logging üåü Learn how to integrate ClearML for efficient logging during
    your model training.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: YOLOv5 with Neural Magic Discover how to use Neural Magic's Deepsparse to prune
    and quantize your YOLOv5 model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Comet Logging üåü NEW: Explore how to utilize Comet for improved model training
    logging.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supported Environments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Ultralytics provides a range of ready-to-use environments, each pre-installed
    with essential dependencies such as [CUDA](https://developer.nvidia.com/cuda),
    [CUDNN](https://developer.nvidia.com/cudnn), [Python](https://www.python.org/),
    and [PyTorch](https://pytorch.org/), to kickstart your projects.
  prefs: []
  type: TYPE_NORMAL
- en: '**Free GPU Notebooks**: ![Run on Gradient](https://bit.ly/yolov5-paperspace-notebook)
    ![Open In Colab](https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb)
    ![Open In Kaggle](https://www.kaggle.com/ultralytics/yolov5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Cloud**: GCP Quickstart Guide'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon**: AWS Quickstart Guide'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure**: AzureML Quickstart Guide'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Docker**: Docker Quickstart Guide ![Docker Pulls](https://hub.docker.com/r/ultralytics/yolov5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project Status
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![YOLOv5 CI](https://github.com/ultralytics/yolov5/actions/workflows/ci-testing.yml)'
  prefs: []
  type: TYPE_IMG
- en: 'This badge indicates that all [YOLOv5 GitHub Actions](https://github.com/ultralytics/yolov5/actions)
    Continuous Integration (CI) tests are successfully passing. These CI tests rigorously
    check the functionality and performance of YOLOv5 across various key aspects:
    [training](https://github.com/ultralytics/yolov5/blob/master/train.py), [validation](https://github.com/ultralytics/yolov5/blob/master/val.py),
    [inference](https://github.com/ultralytics/yolov5/blob/master/detect.py), [export](https://github.com/ultralytics/yolov5/blob/master/export.py),
    and [benchmarks](https://github.com/ultralytics/yolov5/blob/master/benchmarks.py).
    They ensure consistent and reliable operation on macOS, Windows, and Ubuntu, with
    tests conducted every 24 hours and upon each new commit.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Ultralytics GitHub](https://github.com/ultralytics) ![space](img/bea28c9c7f1a0c4c2108b8795e6e2889.png)
    ![Ultralytics LinkedIn](https://www.linkedin.com/company/ultralytics/) ![space](img/bea28c9c7f1a0c4c2108b8795e6e2889.png)
    ![Ultralytics Twitter](https://twitter.com/ultralytics) ![space](img/bea28c9c7f1a0c4c2108b8795e6e2889.png)
    ![Ultralytics YouTube](https://youtube.com/ultralytics?sub_confirmation=1) ![space](img/bea28c9c7f1a0c4c2108b8795e6e2889.png)
    ![Ultralytics TikTok](https://www.tiktok.com/@ultralytics) ![space](img/bea28c9c7f1a0c4c2108b8795e6e2889.png)
    ![Ultralytics BiliBili](https://ultralytics.com/bilibili) ![space](img/bea28c9c7f1a0c4c2108b8795e6e2889.png)
    ![Ultralytics Discord](https://ultralytics.com/discord)'
  prefs: []
  type: TYPE_IMG
- en: Connect and Contribute
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your journey with YOLOv5 doesn't have to be a solitary one. Join our vibrant
    community on [GitHub](https://github.com/ultralytics/yolov5), connect with professionals
    on [LinkedIn](https://www.linkedin.com/company/ultralytics/), share your results
    on [Twitter](https://twitter.com/ultralytics), and find educational resources
    on [YouTube](https://youtube.com/ultralytics?sub_confirmation=1). Follow us on
    [TikTok](https://www.tiktok.com/@ultralytics) and [BiliBili](https://ultralytics.com/bilibili)
    for more engaging content.
  prefs: []
  type: TYPE_NORMAL
- en: Interested in contributing? We welcome contributions of all forms; from code
    improvements and bug reports to documentation updates. Check out our contributing
    guidelines for more information.
  prefs: []
  type: TYPE_NORMAL
- en: We're excited to see the innovative ways you'll use YOLOv5\. Dive in, experiment,
    and revolutionize your computer vision projects! üöÄ
  prefs: []
  type: TYPE_NORMAL
- en: FAQ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What are the key features of Ultralytics YOLOv5?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ultralytics YOLOv5 is renowned for its high-speed and high-accuracy object detection
    capabilities. Built on PyTorch, it is versatile and user-friendly, making it suitable
    for various computer vision projects. Key features include real-time inference,
    support for multiple training tricks like Test-Time Augmentation (TTA) and Model
    Ensembling, and compatibility with export formats such as TFLite, ONNX, CoreML,
    and TensorRT. To delve deeper into how Ultralytics YOLOv5 can elevate your project,
    explore our TFLite, ONNX, CoreML, TensorRT Export guide.
  prefs: []
  type: TYPE_NORMAL
- en: How can I train a custom YOLOv5 model on my dataset?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Training a custom YOLOv5 model on your dataset involves a few key steps. First,
    prepare your dataset in the required format, annotated with labels. Then, configure
    the YOLOv5 training parameters and start the training process using the `train.py`
    script. For an in-depth tutorial on this process, consult our Train Custom Data
    guide. It provides step-by-step instructions to ensure optimal results for your
    specific use case.
  prefs: []
  type: TYPE_NORMAL
- en: Why should I use Ultralytics YOLOv5 over other object detection models like
    RCNN?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ultralytics YOLOv5 is preferred over models like RCNN due to its superior speed
    and accuracy in real-time object detection. YOLOv5 processes the entire image
    in one go, making it significantly faster compared to the region-based approach
    of RCNN, which involves multiple passes. Additionally, YOLOv5's seamless integration
    with various export formats and extensive documentation make it an excellent choice
    for both beginners and professionals. Learn more about the architectural advantages
    in our Architecture Summary.
  prefs: []
  type: TYPE_NORMAL
- en: How can I optimize YOLOv5 model performance during training?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Optimizing YOLOv5 model performance involves tuning various hyperparameters
    and incorporating techniques like data augmentation and transfer learning. Ultralytics
    provides comprehensive resources on hyperparameter evolution and pruning/sparsity
    to improve model efficiency. You can discover practical tips in our Tips for Best
    Training Results guide, which offers actionable insights for achieving optimal
    performance during training.
  prefs: []
  type: TYPE_NORMAL
- en: What environments are supported for running YOLOv5 applications?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Ultralytics YOLOv5 supports a variety of environments, including free GPU notebooks
    on Gradient, Google Colab, Kaggle, as well as major cloud platforms like Google
    Cloud, Amazon AWS, and Azure. Docker images are also available for convenient
    setup. For a detailed guide on setting up these environments, check our Supported
    Environments section, which includes step-by-step instructions for each platform.
  prefs: []
  type: TYPE_NORMAL
