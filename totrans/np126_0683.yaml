- en: numpy.ma.column_stack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.column_stack.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.column_stack.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: column_stack
  prefs: []
  type: TYPE_NORMAL
- en: Stack 1-D arrays as columns into a 2-D array.
  prefs: []
  type: TYPE_NORMAL
- en: Take a sequence of 1-D arrays and stack them as columns to make a single 2-D
    array. 2-D arrays are stacked as-is, just like with [`hstack`](numpy.hstack.html#numpy.hstack
    "numpy.hstack"). 1-D arrays are turned into 2-D columns first.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tup**sequence of 1-D or 2-D arrays.'
  prefs: []
  type: TYPE_NORMAL
- en: Arrays to stack. All of them must have the same first dimension.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**stacked**2-D array'
  prefs: []
  type: TYPE_NORMAL
- en: The array formed by stacking the given arrays.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`stack`](numpy.stack.html#numpy.stack "numpy.stack"), [`hstack`](numpy.hstack.html#numpy.hstack
    "numpy.hstack"), [`vstack`](numpy.vstack.html#numpy.vstack "numpy.vstack"), [`concatenate`](numpy.concatenate.html#numpy.concatenate
    "numpy.concatenate")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The function is applied to both the _data and the _mask, if any.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
