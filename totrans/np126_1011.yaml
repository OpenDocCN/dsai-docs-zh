- en: numpy.correlate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.correlate.html](https://numpy.org/doc/1.26/reference/generated/numpy.correlate.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Cross-correlation of two 1-dimensional sequences.
  prefs: []
  type: TYPE_NORMAL
- en: 'This function computes the correlation as generally defined in signal processing
    texts:'
  prefs: []
  type: TYPE_NORMAL
- en: \[c_k = \sum_n a_{n+k} \cdot \overline{v}_n\]
  prefs: []
  type: TYPE_NORMAL
- en: with a and v sequences being zero-padded where necessary and \(\overline x\)
    denoting complex conjugation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a, v**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input sequences.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**{‘valid’, ‘same’, ‘full’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Refer to the [`convolve`](numpy.convolve.html#numpy.convolve "numpy.convolve")
    docstring. Note that the default is ‘valid’, unlike [`convolve`](numpy.convolve.html#numpy.convolve
    "numpy.convolve"), which uses ‘full’.
  prefs: []
  type: TYPE_NORMAL
- en: '**old_behavior**bool'
  prefs: []
  type: TYPE_NORMAL
- en: '*old_behavior* was removed in NumPy 1.10\. If you need the old behavior, use
    *multiarray.correlate*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Discrete cross-correlation of *a* and *v*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`convolve`](numpy.convolve.html#numpy.convolve "numpy.convolve")'
  prefs: []
  type: TYPE_NORMAL
- en: Discrete, linear convolution of two one-dimensional sequences.
  prefs: []
  type: TYPE_NORMAL
- en: '`multiarray.correlate`'
  prefs: []
  type: TYPE_NORMAL
- en: Old, no conjugate, version of correlate.
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.signal.correlate`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.correlate.html#scipy.signal.correlate
    "(in SciPy v1.11.2)")'
  prefs: []
  type: TYPE_NORMAL
- en: uses FFT which has superior performance on large arrays.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The definition of correlation above is not unique and sometimes correlation
    may be defined differently. Another common definition is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[c'_k = \sum_n a_{n} \cdot \overline{v_{n+k}}\]
  prefs: []
  type: TYPE_NORMAL
- en: which is related to \(c_k\) by \(c'_k = c_{-k}\).
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.correlate`](#numpy.correlate "numpy.correlate") may perform slowly
    in large arrays (i.e. n = 1e5) because it does not use the FFT to compute the
    convolution; in that case, [`scipy.signal.correlate`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.correlate.html#scipy.signal.correlate
    "(in SciPy v1.11.2)") might be preferable.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Using complex sequences:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Note that you get the time reversed, complex conjugated result (\(\overline{c_{-k}}\))
    when the two input sequences a and v change places:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
