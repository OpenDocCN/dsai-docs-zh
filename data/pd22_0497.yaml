- en: pandas.Timestamp.tz_localize
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.Timestamp.tz_localize
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz_localize.html](https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz_localize.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz_localize.html](https://pandas.pydata.org/docs/reference/api/pandas.Timestamp.tz_localize.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Localize the Timestamp to a timezone.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 将时间戳本地化到时区。
- en: Convert naive Timestamp to local time zone or remove timezone from timezone-aware
    Timestamp.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 将简单时间戳转换为本地时区或从具有时区信息的时间戳中移除时区。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**tz**str, pytz.timezone, dateutil.tz.tzfile or None'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**tz**str、pytz.timezone、dateutil.tz.tzfile 或 None'
- en: Time zone for time which Timestamp will be converted to. None will remove timezone
    holding local time.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 将时间戳转换为将要转换为的时间区域。None 将移除保持本地时间的时区。
- en: '**ambiguous**bool, ‘NaT’, default ‘raise’'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**模棱两可的**bool、‘NaT’，默认为‘raise’'
- en: When clocks moved backward due to DST, ambiguous times may arise. For example
    in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST,
    02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a
    situation, the ambiguous parameter dictates how ambiguous times should be handled.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当由于夏令时而将时钟向后移动时，可能会出现模棱两可的时间。例如，在中欧时间（UTC+01）中，从 03:00 夏令时切换到 02:00 非夏令时时，当地时间
    02:30:00 同时发生在 UTC 的 00:30:00 和 01:30:00。在这种情况下，ambiguous 参数规定了如何处理模棱两可的时间。
- en: 'The behavior is as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 行为如下：
- en: bool contains flags to determine if time is dst or not (note that this flag
    is only applicable for ambiguous fall dst dates).
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布尔型的 contains 标志用于确定时间是否为夏令时（请注意，此标志仅适用于模棱两可的秋季夏令时日期）。
- en: ‘NaT’ will return NaT for an ambiguous time.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘NaT’ 将在模棱两可的时间处返回 NaT。
- en: ‘raise’ will raise an AmbiguousTimeError for an ambiguous time.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘raise’ 对于模棱两可的时间将引发 AmbiguousTimeError。
- en: '**nonexistent**‘shift_forward’, ‘shift_backward, ‘NaT’, timedelta, default
    ‘raise’'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**不存在的**‘shift_forward’、‘shift_backward’、‘NaT’、timedelta，默认为‘raise’'
- en: A nonexistent time does not exist in a particular timezone where clocks moved
    forward due to DST.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 不存在的时间不存在于由于夏令时而向前移动时钟的特定时区中。
- en: 'The behavior is as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 行为如下：
- en: ‘shift_forward’ will shift the nonexistent time forward to the closest existing
    time.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘shift_forward’ 将不存在的时间向前移动到最接近的现有时间。
- en: ‘shift_backward’ will shift the nonexistent time backward to the closest existing
    time.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘shift_backward’ 将不存在的时间向后移动到最接近的现有时间。
- en: ‘NaT’ will return NaT where there are nonexistent times.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘NaT’ 将在不存在的时间处返回 NaT。
- en: timedelta objects will shift nonexistent times by the timedelta.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: timedelta 对象将不存在的时间移动 timedelta。
- en: ‘raise’ will raise an NonExistentTimeError if there are nonexistent times.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ‘raise’ 如果存在不存在的时间，则会引发 NonExistentTimeError。
- en: 'Returns:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**localized**Timestamp'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**本地化的**Timestamp'
- en: 'Raises:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: TypeError
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: TypeError
- en: If the Timestamp is tz-aware and tz is not None.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果时间戳是时区感知的且时区不是 None。
- en: Examples
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Create a naive timestamp object:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个简单的时间戳对象：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Add ‘Europe/Stockholm’ as timezone:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 添加‘Europe/Stockholm’作为时区：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Analogous for `pd.NaT`:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `pd.NaT` 类似：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
