- en: What’s new in 2.2.0 (January 19, 2024)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v2.2.0.html](https://pandas.pydata.org/docs/whatsnew/v2.2.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: These are the changes in pandas 2.2.0\. See [Release notes](index.html#release)
    for a full changelog including other versions of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: '## Upcoming changes in pandas 3.0'
  prefs: []
  type: TYPE_NORMAL
- en: pandas 3.0 will bring two bigger changes to the default behavior of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Copy-on-Write
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The currently optional mode Copy-on-Write will be enabled by default in pandas
    3.0\. There won’t be an option to keep the current behavior enabled. The new behavioral
    semantics are explained in the [user guide about Copy-on-Write](../user_guide/copy_on_write.html#copy-on-write).
  prefs: []
  type: TYPE_NORMAL
- en: 'The new behavior can be enabled since pandas 2.0 with the following option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This change brings different changes in behavior in how pandas operates with
    respect to copies and views. Some of these changes allow a clear deprecation,
    like the changes in chained assignment. Other changes are more subtle and thus,
    the warnings are hidden behind an option that can be enabled in pandas 2.2.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This mode will warn in many different scenarios that aren’t actually relevant
    to most queries. We recommend exploring this mode, but it is not necessary to
    get rid of all of these warnings. The [migration guide](../user_guide/copy_on_write.html#copy-on-write-migration-guide)
    explains the upgrade process in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Dedicated string data type (backed by Arrow) by default
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Historically, pandas represented string columns with NumPy object data type.
    This representation has numerous problems, including slow performance and a large
    memory footprint. This will change in pandas 3.0\. pandas will start inferring
    string columns as a new `string` data type, backed by Arrow, which represents
    strings contiguous in memory. This brings a huge performance and memory improvement.
  prefs: []
  type: TYPE_NORMAL
- en: 'Old behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The string data type that is used in these scenarios will mostly behave as NumPy
    object would, including missing value semantics and general operations on these
    columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'This change includes a few additional changes across the API:'
  prefs: []
  type: TYPE_NORMAL
- en: Currently, specifying `dtype="string"` creates a dtype that is backed by Python
    strings which are stored in a NumPy array. This will change in pandas 3.0, this
    dtype will create an Arrow backed string column.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The column names and the Index will also be backed by Arrow strings.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PyArrow will become a required dependency with pandas 3.0 to accommodate this
    change.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This future dtype inference logic can be enabled with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]  ## Enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '### ADBC Driver support in to_sql and read_sql'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")
    and [`to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now work with [Apache Arrow ADBC](https://arrow.apache.org/adbc/current/index.html)
    drivers. Compared to traditional drivers used via SQLAlchemy, ADBC drivers should
    provide significant performance improvements, better type support and cleaner
    nullability handling.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The Arrow type system offers a wider array of types that can more closely match
    what databases like PostgreSQL can offer. To illustrate, note this (non-exhaustive)
    listing of types available in different databases and pandas backends:'
  prefs: []
  type: TYPE_NORMAL
- en: '| numpy/pandas | arrow | postgres | sqlite |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| int16/Int16 | int16 | SMALLINT | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| int32/Int32 | int32 | INTEGER | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| int64/Int64 | int64 | BIGINT | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| float32 | float32 | REAL | REAL |'
  prefs: []
  type: TYPE_TB
- en: '| float64 | float64 | DOUBLE PRECISION | REAL |'
  prefs: []
  type: TYPE_TB
- en: '| object | string | TEXT | TEXT |'
  prefs: []
  type: TYPE_TB
- en: '| bool | `bool_` | BOOLEAN |  |'
  prefs: []
  type: TYPE_TB
- en: '| datetime64[ns] | timestamp(us) | TIMESTAMP |  |'
  prefs: []
  type: TYPE_TB
- en: '| datetime64[ns,tz] | timestamp(us,tz) | TIMESTAMPTZ |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | date32 | DATE |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | month_day_nano_interval | INTERVAL |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | binary | BINARY | BLOB |'
  prefs: []
  type: TYPE_TB
- en: '|  | decimal128 | DECIMAL [[1]](#f1) |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | list | ARRAY [[1]](#f1) |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | struct |'
  prefs: []
  type: TYPE_TB
- en: COMPOSITE TYPE
  prefs: []
  type: TYPE_NORMAL
- en: '[[1]](#f1)'
  prefs: []
  type: TYPE_NORMAL
- en: '|  |'
  prefs: []
  type: TYPE_TB
- en: Footnotes
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in preserving database types as best as possible throughout
    the lifecycle of your DataFrame, users are encouraged to leverage the `dtype_backend="pyarrow"`
    argument of [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: This will prevent your data from being converted to the traditional pandas/NumPy
    type system, which often converts SQL types in ways that make them impossible
    to round-trip.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a full list of ADBC drivers and their development status, see the [ADBC
    Driver Implementation Status](https://arrow.apache.org/adbc/current/driver/status.html)
    documentation.  ### Create a pandas Series based on one or more conditions'
  prefs: []
  type: TYPE_NORMAL
- en: The [`Series.case_when()`](../reference/api/pandas.Series.case_when.html#pandas.Series.case_when
    "pandas.Series.case_when") function has been added to create a Series object based
    on one or more conditions. ([GH 39154](https://github.com/pandas-dev/pandas/issues/39154))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]  ### `to_numpy` for NumPy nullable and Arrow types converts to suitable
    NumPy dtype'
  prefs: []
  type: TYPE_NORMAL
- en: '`to_numpy` for NumPy nullable and Arrow types will now convert to a suitable
    NumPy dtype instead of `object` dtype for nullable and PyArrow backed extension
    dtypes.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The default NumPy dtype (without any arguments) is determined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: float dtypes are cast to NumPy floats
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: integer dtypes without missing values are cast to NumPy integer dtypes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: integer dtypes with missing values are cast to NumPy float dtypes and `NaN`
    is used as missing value indicator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: boolean dtypes without missing values are cast to NumPy bool dtype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: boolean dtypes with missing values keep object dtype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'datetime and timedelta types are cast to Numpy datetime64 and timedelta64 types
    respectively and `NaT` is used as missing value indicator  ### Series.struct accessor
    for PyArrow structured data'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series.struct` accessor provides attributes and methods for processing
    data with `struct[pyarrow]` dtype Series. For example, [`Series.struct.explode()`](../reference/api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode") converts PyArrow structured data to a pandas DataFrame.
    ([GH 54938](https://github.com/pandas-dev/pandas/issues/54938))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Use [`Series.struct.field()`](../reference/api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field") to index into a (possible nested) struct field.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]  ### Series.list accessor for PyArrow list data'
  prefs: []
  type: TYPE_NORMAL
- en: The `Series.list` accessor provides attributes and methods for processing data
    with `list[pyarrow]` dtype Series. For example, [`Series.list.__getitem__()`](../reference/api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__") allows indexing pyarrow lists in a Series. ([GH
    55323](https://github.com/pandas-dev/pandas/issues/55323))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]  ### Calamine engine for [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs: []
  type: TYPE_NORMAL
- en: The `calamine` engine was added to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). It uses `python-calamine`, which provides Python bindings
    for the Rust library [calamine](https://crates.io/crates/calamine). This engine
    supports Excel files (`.xlsx`, `.xlsm`, `.xls`, `.xlsb`) and OpenDocument spreadsheets
    (`.ods`) ([GH 50395](https://github.com/pandas-dev/pandas/issues/50395)).
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two advantages of this engine:'
  prefs: []
  type: TYPE_NORMAL
- en: Calamine is often faster than other engines, some benchmarks show results up
    to 5x faster than ‘openpyxl’, 20x - ‘odf’, 4x - ‘pyxlsb’, and 1.5x - ‘xlrd’. But,
    ‘openpyxl’ and ‘pyxlsb’ are faster in reading a few rows from large files because
    of lazy iteration over rows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Calamine supports the recognition of datetime in `.xlsb` files, unlike ‘pyxlsb’
    which is the only other engine in pandas that can read `.xlsb` files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'For more, see [Calamine (Excel and ODS files)](../user_guide/io.html#io-calamine)
    in the user guide on IO tools.  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") with method parameter set to `multi` works with Oracle
    on the backend'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.attrs`](../reference/api/pandas.Series.attrs.html#pandas.Series.attrs
    "pandas.Series.attrs") / [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs") now uses a deepcopy for propagating `attrs` ([GH 54134](https://github.com/pandas-dev/pandas/issues/54134)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") now returning extension dtypes `boolean` or `bool[pyarrow]`
    that are compatible with the input dtype ([GH 56273](https://github.com/pandas-dev/pandas/issues/56273))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now supports `on_bad_lines` parameter with `engine="pyarrow"` ([GH 54480](https://github.com/pandas-dev/pandas/issues/54480))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    returns `datetime64` dtypes with resolutions better matching those stored natively
    in SAS, and avoids returning object-dtype in cases that cannot be stored with
    `datetime64[ns]` dtype ([GH 56127](https://github.com/pandas-dev/pandas/issues/56127))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")
    now returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that stores the metadata in [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs") ([GH 54264](https://github.com/pandas-dev/pandas/issues/54264))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`tseries.api.guess_datetime_format()`](../reference/api/pandas.tseries.api.guess_datetime_format.html#pandas.tseries.api.guess_datetime_format
    "pandas.tseries.api.guess_datetime_format") is now part of the public API ([GH
    54727](https://github.com/pandas-dev/pandas/issues/54727))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") now allows the usage of numba (via `engine="numba"`)
    to JIT compile the passed function, allowing for potential speedups ([GH 54666](https://github.com/pandas-dev/pandas/issues/54666))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray._explode()` interface method added to allow extension type
    implementations of the `explode` method ([GH 54833](https://github.com/pandas-dev/pandas/issues/54833))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray.duplicated()` added to allow extension type implementations
    of the `duplicated` method ([GH 55255](https://github.com/pandas-dev/pandas/issues/55255))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), and [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") have gained the argument `limit_area`; 3rd party [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") authors need to add this argument to the
    method `_pad_or_backfill` ([GH 56492](https://github.com/pandas-dev/pandas/issues/56492))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow passing `read_only`, `data_only` and `keep_links` arguments to openpyxl
    using `engine_kwargs` of [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 55027](https://github.com/pandas-dev/pandas/issues/55027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") and masked dtypes ([GH 56267](https://github.com/pandas-dev/pandas/issues/56267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement masked algorithms for [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") ([GH 54984](https://github.com/pandas-dev/pandas/issues/54984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.dt()`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") methods and attributes for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.duration` type ([GH 52284](https://github.com/pandas-dev/pandas/issues/52284))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.str.extract()`](../reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") ([GH 56268](https://github.com/pandas-dev/pandas/issues/56268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message that appears in [`DatetimeIndex.to_period()`](../reference/api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period") with frequencies which are not supported as
    period frequencies, such as `"BMS"` ([GH 56243](https://github.com/pandas-dev/pandas/issues/56243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when constructing [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with invalid offsets such as `"QS"` ([GH 55785](https://github.com/pandas-dev/pandas/issues/55785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The dtypes `string[pyarrow]` and `string[pyarrow_numpy]` now both utilize the
    `large_string` type from PyArrow to avoid overflow for long columns ([GH 56259](https://github.com/pandas-dev/pandas/issues/56259))  ##
    Notable bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") now consistently follow documented sort behavior'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") did not always return a result that followed the documented
    sort behavior. pandas now follows the documented sort behavior in merge and join
    operations ([GH 54611](https://github.com/pandas-dev/pandas/issues/54611), [GH
    56426](https://github.com/pandas-dev/pandas/issues/56426), [GH 56443](https://github.com/pandas-dev/pandas/issues/56443)).
  prefs: []
  type: TYPE_NORMAL
- en: 'As documented, `sort=True` sorts the join keys lexicographically in the resulting
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    With `sort=False`, the order of the join keys depends on the join type (`how`
    keyword):'
  prefs: []
  type: TYPE_NORMAL
- en: '`how="left"`: preserve the order of the left keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="right"`: preserve the order of the right keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="inner"`: preserve the order of the left keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="outer"`: sort keys lexicographically'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'One example with changing behavior is inner joins with non-unique left join
    keys and `sort=False`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]  ### [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") no longer reorder levels when levels differ'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") would reorder index levels when joining on two indexes
    with different levels ([GH 34133](https://github.com/pandas-dev/pandas/issues/34133)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]  ### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: For [optional dependencies](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. Optional dependencies
    below the lowest tested version may still work but are not considered supported.
    The following table lists the optional dependencies that have had their minimum
    tested version increased.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | New Minimum Version |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.11.2 |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.3 |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.6 |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 2022.12.0 |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.9.2 |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.6.3 |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.56.4 |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.8.4 |'
  prefs: []
  type: TYPE_TB
- en: '| qtpy | 2.3.0 |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.1.0 |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.9.6 |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.2.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.8.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.10 |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.10.0 |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 2.0.0 |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.9.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 2022.12.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 3.0.5 |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.19.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pyqt5 | 5.15.8 |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022.7 |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The hash values of nullable extension dtypes changed to improve the performance
    of the hashing operation ([GH 56507](https://github.com/pandas-dev/pandas/issues/56507))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`check_exact` now only takes effect for floating-point dtypes in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal"). In particular, integer dtypes are always
    checked exactly ([GH 55882](https://github.com/pandas-dev/pandas/issues/55882))  ##
    Deprecations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chained assignment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In preparation of larger upcoming changes to the copy / view behaviour in pandas
    3.0 ([Copy-on-Write (CoW)](../user_guide/copy_on_write.html#copy-on-write), PDEP-7),
    we started deprecating *chained assignment*.
  prefs: []
  type: TYPE_NORMAL
- en: Chained assignment occurs when you try to update a pandas DataFrame or Series
    through two subsequent indexing operations. Depending on the type and order of
    those operations this currently does or does not work.
  prefs: []
  type: TYPE_NORMAL
- en: 'A typical example is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'This second example of chained assignment currently works to update the original
    `df`. This will no longer work in pandas 3.0, and therefore we started deprecating
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'You can fix this warning and ensure your code is ready for pandas 3.0 by removing
    the usage of chained assignment. Typically, this can be done by doing the assignment
    in a single step using for example `.loc`. For the example above, we can do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'The same deprecation applies to inplace methods that are done in a chained
    manner, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'When the goal is to update the column in the DataFrame `df`, the alternative
    here is to call the method on `df` itself, such as `df.fillna({"foo": 0}, inplace=True)`.'
  prefs: []
  type: TYPE_NORMAL
- en: See more details in the [migration guide](../user_guide/copy_on_write.html#copy-on-write-migration-guide).
  prefs: []
  type: TYPE_NORMAL
- en: Deprecate aliases `M`, `Q`, `Y`, etc. in favour of `ME`, `QE`, `YE`, etc. for
    offsets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Deprecated the following frequency aliases ([GH 9586](https://github.com/pandas-dev/pandas/issues/9586)):'
  prefs: []
  type: TYPE_NORMAL
- en: '| offsets | deprecated aliases | new aliases |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `MonthEnd` | `M` | `ME` |'
  prefs: []
  type: TYPE_TB
- en: '| `BusinessMonthEnd` | `BM` | `BME` |'
  prefs: []
  type: TYPE_TB
- en: '| `SemiMonthEnd` | `SM` | `SME` |'
  prefs: []
  type: TYPE_TB
- en: '| `CustomBusinessMonthEnd` | `CBM` | `CBME` |'
  prefs: []
  type: TYPE_TB
- en: '| `QuarterEnd` | `Q` | `QE` |'
  prefs: []
  type: TYPE_TB
- en: '| `BQuarterEnd` | `BQ` | `BQE` |'
  prefs: []
  type: TYPE_TB
- en: '| `YearEnd` | `Y` | `YE` |'
  prefs: []
  type: TYPE_TB
- en: '| `BYearEnd` | `BY` | `BYE` |'
  prefs: []
  type: TYPE_TB
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Deprecated automatic downcasting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Deprecated the automatic downcasting of object dtype results in a number of
    methods. These would silently change the dtype in a hard to predict manner since
    the behavior was value dependent. Additionally, pandas is moving away from silent
    dtype changes ([GH 54710](https://github.com/pandas-dev/pandas/issues/54710),
    [GH 54261](https://github.com/pandas-dev/pandas/issues/54261)).
  prefs: []
  type: TYPE_NORMAL
- en: 'These methods are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip"), [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Explicitly call [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects") to replicate the current behavior in the future.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Or explicitly cast all-round floats to ints using `astype`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the following option to opt into the future behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Other Deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Changed `Timedelta.resolution_string()` to return `h`, `min`, `s`, `ms`, `us`,
    and `ns` instead of `H`, `T`, `S`, `L`, `U`, and `N`, for compatibility with respective
    deprecations in frequency aliases ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `offsets.Day.delta`, `offsets.Hour.delta`, `offsets.Minute.delta`,
    `offsets.Second.delta`, `offsets.Milli.delta`, `offsets.Micro.delta`, `offsets.Nano.delta`,
    use `pd.Timedelta(obj)` instead ([GH 55498](https://github.com/pandas-dev/pandas/issues/55498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`pandas.api.types.is_interval()`](../reference/api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval") and `pandas.api.types.is_period()`, use `isinstance(obj,
    pd.Interval)` and `isinstance(obj, pd.Period)` instead ([GH 55264](https://github.com/pandas-dev/pandas/issues/55264))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq"). Use `pandas_gbq.read_gbq` and `pandas_gbq.to_gbq`
    instead [https://pandas-gbq.readthedocs.io/en/latest/api.html](https://pandas-gbq.readthedocs.io/en/latest/api.html)
    ([GH 55525](https://github.com/pandas-dev/pandas/issues/55525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna") and [`SeriesGroupBy.fillna()`](../reference/api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna"); use [`DataFrameGroupBy.ffill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill"), [`DataFrameGroupBy.bfill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill") for forward and backward filling
    or [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") to fill with a single value (or the Series equivalents)
    ([GH 55718](https://github.com/pandas-dev/pandas/issues/55718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DateOffset.is_anchored()`, use `obj.n == 1` for non-Tick subclasses
    (for Tick this was always False) ([GH 55388](https://github.com/pandas-dev/pandas/issues/55388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DatetimeArray.__init__()` and `TimedeltaArray.__init__()`, use [`array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array") instead ([GH 55623](https://github.com/pandas-dev/pandas/issues/55623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.format()`, use `index.astype(str)` or `index.map(formatter)`
    instead ([GH 55413](https://github.com/pandas-dev/pandas/issues/55413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.ravel()`](../reference/api/pandas.Series.ravel.html#pandas.Series.ravel
    "pandas.Series.ravel"), the underlying array is already 1D, so ravel is not necessary
    ([GH 52511](https://github.com/pandas-dev/pandas/issues/52511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") with a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") (and the ‘convention’ keyword), convert to [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") (with `.to_timestamp()`) before resampling instead ([GH
    53481](https://github.com/pandas-dev/pandas/issues/53481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view"), use [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") instead to change the dtype ([GH 20251](https://github.com/pandas-dev/pandas/issues/20251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `offsets.Tick.is_anchored()`, use `False` instead ([GH 55388](https://github.com/pandas-dev/pandas/issues/55388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `core.internals` members `Block`, `ExtensionBlock`, and `DatetimeTZBlock`,
    use public APIs instead ([GH 55139](https://github.com/pandas-dev/pandas/issues/55139))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `year`, `month`, `quarter`, `day`, `hour`, `minute`, and `second`
    keywords in the [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") constructor, use [`PeriodIndex.from_fields()`](../reference/api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields
    "pandas.PeriodIndex.from_fields") instead ([GH 55960](https://github.com/pandas-dev/pandas/issues/55960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated accepting a type as an argument in [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view"), call without any arguments instead ([GH 55709](https://github.com/pandas-dev/pandas/issues/55709))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-integer `periods` argument in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") ([GH 56036](https://github.com/pandas-dev/pandas/issues/56036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") except `excel_writer` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") except `destination_table` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") except `path` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") except `path` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml") except `path_or_buffer` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing passing `BlockManager` objects to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or `SingleBlockManager` objects to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 52419](https://github.com/pandas-dev/pandas/issues/52419))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert") with an object-dtype index silently performing type inference
    on the result, explicitly call `result.infer_objects(copy=False)` for the old
    behavior instead ([GH 51363](https://github.com/pandas-dev/pandas/issues/51363))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting non-datetimelike values (mainly strings) in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") and [`Index.isin()`](../reference/api/pandas.Index.isin.html#pandas.Index.isin
    "pandas.Index.isin") with `datetime64`, `timedelta64`, and [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") dtypes ([GH 53111](https://github.com/pandas-dev/pandas/issues/53111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dtype inference in [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors when giving a pandas input, call `.infer_objects`
    on the input to keep the current behavior ([GH 56012](https://github.com/pandas-dev/pandas/issues/56012))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dtype inference when setting a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), cast explicitly instead ([GH 56102](https://github.com/pandas-dev/pandas/issues/56102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated including the groups in computations when using [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample"); pass `include_groups=False`
    to exclude the groups ([GH 7155](https://github.com/pandas-dev/pandas/issues/7155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated indexing an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with a boolean indexer of length zero ([GH 55820](https://github.com/pandas-dev/pandas/issues/55820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated not passing a tuple to `DataFrameGroupBy.get_group` or `SeriesGroupBy.get_group`
    when grouping by a length-1 list-like ([GH 25971](https://github.com/pandas-dev/pandas/issues/25971))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `AS` denoting frequency in `YearBegin` and strings `AS-DEC`,
    `AS-JAN`, etc. denoting annual frequencies with various fiscal year starts ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `A` denoting frequency in `YearEnd` and strings `A-DEC`, `A-JAN`,
    etc. denoting annual frequencies with various fiscal year ends ([GH 54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `BAS` denoting frequency in `BYearBegin` and strings `BAS-DEC`,
    `BAS-JAN`, etc. denoting annual frequencies with various fiscal year starts ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `BA` denoting frequency in `BYearEnd` and strings `BA-DEC`,
    `BA-JAN`, etc. denoting annual frequencies with various fiscal year ends ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `BH`, and `CBH` denoting frequencies in `Hour`, `BusinessHour`,
    `CustomBusinessHour` ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `S`, `U`, and `N` denoting units in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `T`, `S`, `L`, `U`, and `N` denoting units in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `T`, `S`, `L`, `U`, and `N` denoting frequencies in `Minute`,
    `Second`, `Milli`, `Micro`, `Nano` ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated support for combining parsed datetime columns in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") along with the `keep_date_col` keyword ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `DataFrameGroupBy.grouper` and `SeriesGroupBy.grouper`; these
    attributes will be removed in a future version of pandas ([GH 56521](https://github.com/pandas-dev/pandas/issues/56521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `Grouping` attributes `group_index`, `result_index`, and `group_arraylike`;
    these will be removed in a future version of pandas ([GH 56148](https://github.com/pandas-dev/pandas/issues/56148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `delim_whitespace` keyword in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), use `sep="\\s+"` instead ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `errors="ignore"` option in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime"), [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"), and [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric"); explicitly catch exceptions instead ([GH 54467](https://github.com/pandas-dev/pandas/issues/54467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `fastpath` keyword in the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor ([GH 20110](https://github.com/pandas-dev/pandas/issues/20110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `kind` keyword in [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"), explicitly cast the object’s `index` instead ([GH
    55895](https://github.com/pandas-dev/pandas/issues/55895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `ordinal` keyword in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"), use [`PeriodIndex.from_ordinals()`](../reference/api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals") instead ([GH 55960](https://github.com/pandas-dev/pandas/issues/55960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `unit` keyword in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") construction, use [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") instead ([GH 55499](https://github.com/pandas-dev/pandas/issues/55499))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `verbose` keyword in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype"); in a future version replace will change the values
    while preserving the categories. To change the categories, use `ser.cat.rename_categories`
    instead ([GH 55147](https://github.com/pandas-dev/pandas/issues/55147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Index.value_counts()`](../reference/api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts") with object dtype; in a future version these will
    not perform dtype inference on the resulting [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), do `result.index = result.index.infer_objects()` to retain the
    old behavior ([GH 56161](https://github.com/pandas-dev/pandas/issues/56161))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the default of `observed=False` in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table"); will be `True` in a future version ([GH 56236](https://github.com/pandas-dev/pandas/issues/56236))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the extension test classes `BaseNoReduceTests`, `BaseBooleanReduceTests`,
    and `BaseNumericReduceTests`, use `BaseReduceTests` instead ([GH 54663](https://github.com/pandas-dev/pandas/issues/54663))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the option `mode.data_manager` and the `ArrayManager`; only the `BlockManager`
    will be available in future versions ([GH 55043](https://github.com/pandas-dev/pandas/issues/55043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Deprecated the previous implementation of [`DataFrame.stack`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"); specify `future_stack=True` to adopt the future version
    ([GH 53515](https://github.com/pandas-dev/pandas/issues/53515))  ## Performance
    improvements'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") ([GH 55949](https://github.com/pandas-dev/pandas/issues/55949),
    [GH 55971](https://github.com/pandas-dev/pandas/issues/55971))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with `axis=1` and objects with unaligned indexes ([GH 55084](https://github.com/pandas-dev/pandas/issues/55084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") ([GH 56089](https://github.com/pandas-dev/pandas/issues/56089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") when joining on sorted ascending keys ([GH 56115](https://github.com/pandas-dev/pandas/issues/56115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when `by` is not `None` ([GH 55580](https://github.com/pandas-dev/pandas/issues/55580),
    [GH 55678](https://github.com/pandas-dev/pandas/issues/55678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") for files with many variables ([GH 55515](https://github.com/pandas-dev/pandas/issues/55515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when aggregating pyarrow timestamp and duration dtypes
    ([GH 55031](https://github.com/pandas-dev/pandas/issues/55031))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when joining on unordered categorical indexes ([GH 56345](https://github.com/pandas-dev/pandas/issues/56345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") when indexing with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 56062](https://github.com/pandas-dev/pandas/issues/56062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index") when indexed by a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 54835](https://github.com/pandas-dev/pandas/issues/54835))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") on converting DataFrame to dictionary ([GH 50990](https://github.com/pandas-dev/pandas/issues/50990))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") ([GH 55108](https://github.com/pandas-dev/pandas/issues/55108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") when index is already sorted ([GH 56128](https://github.com/pandas-dev/pandas/issues/56128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") when `method` is not `None` ([GH 55839](https://github.com/pandas-dev/pandas/issues/55839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.duplicated()`](../reference/api/pandas.Series.duplicated.html#pandas.Series.duplicated
    "pandas.Series.duplicated") for pyarrow dtypes ([GH 55255](https://github.com/pandas-dev/pandas/issues/55255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str.get_dummies()`](../reference/api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies") when dtype is `"string[pyarrow]"` or `"string[pyarrow_numpy]"`
    ([GH 56110](https://github.com/pandas-dev/pandas/issues/56110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str()`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") methods ([GH 55736](https://github.com/pandas-dev/pandas/issues/55736))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") for masked dtypes ([GH 54984](https://github.com/pandas-dev/pandas/issues/54984),
    [GH 55340](https://github.com/pandas-dev/pandas/issues/55340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.nunique()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique") and [`SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") ([GH 55972](https://github.com/pandas-dev/pandas/issues/55972))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`SeriesGroupBy.idxmax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax"), [`SeriesGroupBy.idxmin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin") ([GH 54234](https://github.com/pandas-dev/pandas/issues/54234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when hashing a nullable extension array ([GH 56507](https://github.com/pandas-dev/pandas/issues/56507))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when indexing into a non-unique index ([GH 55816](https://github.com/pandas-dev/pandas/issues/55816))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when indexing with more than 4 keys ([GH 54550](https://github.com/pandas-dev/pandas/issues/54550))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Performance improvement when localizing time to UTC ([GH 55241](https://github.com/pandas-dev/pandas/issues/55241))  ##
    Bug fixes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.isin()` raising `InvalidIndexError` for categorical containing
    overlapping [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values ([GH 34974](https://github.com/pandas-dev/pandas/issues/34974))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalDtype.__eq__()` returning `False` for unordered categorical
    data with mixed types ([GH 55468](https://github.com/pandas-dev/pandas/issues/55468))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when casting `pa.dictionary` to [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") using a `pa.DictionaryArray` as categories ([GH 56672](https://github.com/pandas-dev/pandas/issues/56672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") construction when passing both a `tz` and either `dayfirst`
    or `yearfirst` ignoring dayfirst/yearfirst ([GH 55813](https://github.com/pandas-dev/pandas/issues/55813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing an object-dtype ndarray of float objects
    and a `tz` incorrectly localizing the result ([GH 55780](https://github.com/pandas-dev/pandas/issues/55780))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype and comparison values that are all `NaT` incorrectly
    returning all-`False` even if the series contains `NaT` entries ([GH 56427](https://github.com/pandas-dev/pandas/issues/56427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    raising `AttributeError` when concatenating all-NA DataFrame with [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype DataFrame ([GH 52093](https://github.com/pandas-dev/pandas/issues/52093))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_extension_array_equal()`](../reference/api/pandas.testing.assert_extension_array_equal.html#pandas.testing.assert_extension_array_equal
    "pandas.testing.assert_extension_array_equal") that could use the wrong unit when
    comparing resolutions ([GH 55730](https://github.com/pandas-dev/pandas/issues/55730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing a list of mixed-string-and-numeric types
    incorrectly raising ([GH 55780](https://github.com/pandas-dev/pandas/issues/55780))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing mixed-type objects with a mix of timezones
    or mix of timezone-awareness failing to raise `ValueError` ([GH 55693](https://github.com/pandas-dev/pandas/issues/55693))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick.delta()` with very large ticks raising `OverflowError` instead
    of `OutOfBoundsTimedelta` ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.shift()` with non-nanosecond resolution incorrectly returning
    with nanosecond resolution ([GH 56117](https://github.com/pandas-dev/pandas/issues/56117))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.union()` returning object dtype for tz-aware indexes with
    the same timezone but different units ([GH 55238](https://github.com/pandas-dev/pandas/issues/55238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.is_monotonic_increasing()`](../reference/api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") and [`Index.is_monotonic_decreasing()`](../reference/api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") always caching [`Index.is_unique()`](../reference/api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") as `True` when first value in index is `NaT` ([GH 55755](https://github.com/pandas-dev/pandas/issues/55755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view") to a datetime64 dtype with non-supported resolution incorrectly
    raising ([GH 55710](https://github.com/pandas-dev/pandas/issues/55710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt.round()`](../reference/api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round") with non-nanosecond resolution and `NaT` entries incorrectly
    raising `OverflowError` ([GH 56158](https://github.com/pandas-dev/pandas/issues/56158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") with non-nanosecond resolution dtypes and higher-resolution
    vector values returning incorrect (internally-corrupted) results ([GH 56410](https://github.com/pandas-dev/pandas/issues/56410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.unit()`](../reference/api/pandas.Timestamp.unit.html#pandas.Timestamp.unit
    "pandas.Timestamp.unit") being inferred incorrectly from an ISO8601 format string
    with minute or hour resolution and a timezone offset ([GH 56208](https://github.com/pandas-dev/pandas/issues/56208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.astype` converting from a higher-resolution `datetime64` dtype to a
    lower-resolution `datetime64` dtype (e.g. `datetime64[us]->datetime64[ms]`) silently
    overflowing with values near the lower implementation bound ([GH 55979](https://github.com/pandas-dev/pandas/issues/55979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding or subtracting a `Week` offset to a `datetime64` [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column with non-nanosecond resolution returning incorrect results ([GH 55583](https://github.com/pandas-dev/pandas/issues/55583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of `BusinessDay` offset with `offset` attribute
    to non-nanosecond [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column giving incorrect results ([GH 55608](https://github.com/pandas-dev/pandas/issues/55608))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of `DateOffset` objects with microsecond components
    to `datetime64` [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    columns with non-nanosecond resolution ([GH 55595](https://github.com/pandas-dev/pandas/issues/55595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of very large [`Tick`](../reference/api/pandas.tseries.offsets.Tick.html#pandas.tseries.offsets.Tick
    "pandas.tseries.offsets.Tick") objects with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects raising `OverflowError` instead of `OutOfBoundsTimedelta`
    ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") and inputs that would be out of bounds with nanosecond
    resolution incorrectly raising `OutOfBoundsDatetime` ([GH 54620](https://github.com/pandas-dev/pandas/issues/54620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond `datetime64` (or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")) from mixed-numeric inputs treating those as nanoseconds
    instead of as multiples of the dtype’s unit (which would happen with non-mixed
    numeric inputs) ([GH 56004](https://github.com/pandas-dev/pandas/issues/56004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond `datetime64` dtype and inputs that would
    be out of bounds for a `datetime64[ns]` incorrectly raising `OutOfBoundsDatetime`
    ([GH 55756](https://github.com/pandas-dev/pandas/issues/55756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with nanosecond resolution with non-ISO8601
    formats incorrectly truncating sub-microsecond components ([GH 56051](https://github.com/pandas-dev/pandas/issues/56051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with sub-second resolution and trailing zeros
    incorrectly inferring second or millisecond resolution ([GH 55737](https://github.com/pandas-dev/pandas/issues/55737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the results of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with an floating-dtype argument with `unit` not matching
    the pointwise results of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") ([GH 56037](https://github.com/pandas-dev/pandas/issues/56037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") would raise an error when concatenating `datetime64` columns
    with differing resolutions ([GH 53641](https://github.com/pandas-dev/pandas/issues/53641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") construction raising `OverflowError` instead of `OutOfBoundsTimedelta`
    ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering (`__repr__`) of [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with timedelta64 values with non-nanosecond resolution entries
    that are all multiples of 24 hours failing to use the compact representation used
    in the nanosecond cases ([GH 55405](https://github.com/pandas-dev/pandas/issues/55405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `AbstractHolidayCalendar` where timezone data was not propagated when
    computing holiday observances ([GH 54580](https://github.com/pandas-dev/pandas/issues/54580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") construction with an ambiguous value and a `pytz` timezone
    failing to raise `pytz.AmbiguousTimeError` ([GH 55657](https://github.com/pandas-dev/pandas/issues/55657))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") with `nonexistent="shift_forward` around UTC+0
    during DST ([GH 51501](https://github.com/pandas-dev/pandas/issues/51501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` causing rounding errors for large integers
    ([GH 52505](https://github.com/pandas-dev/pandas/issues/52505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__floordiv__()` and `Series.__truediv__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with integral dtypes raising for large divisors ([GH 56706](https://github.com/pandas-dev/pandas/issues/56706))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__floordiv__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with integral dtypes raising for large values ([GH 56645](https://github.com/pandas-dev/pandas/issues/56645))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.pow()`](../reference/api/pandas.Series.pow.html#pandas.Series.pow
    "pandas.Series.pow") not filling missing values correctly ([GH 55512](https://github.com/pandas-dev/pandas/issues/55512))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") matching float `0.0` with `False` and vice versa ([GH
    55398](https://github.com/pandas-dev/pandas/issues/55398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") raising for nullable boolean dtype ([GH 55936](https://github.com/pandas-dev/pandas/issues/55936))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when called with `str` on unpickled array - the array
    might change in-place ([GH 54654](https://github.com/pandas-dev/pandas/issues/54654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") where `errors="ignore"` had no effect for extension
    types ([GH 54654](https://github.com/pandas-dev/pandas/issues/54654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") not converting all NA column to `null[pyarrow]`
    ([GH 55346](https://github.com/pandas-dev/pandas/issues/55346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in :meth:`DataFrame.loc` was not throwing “incompatible dtype warning” (see
    [PDEP6](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html)) when assigning
    a `Series` with a different dtype using a full column setter (e.g. `df.loc[:,
    'a'] = incompatible_value`) ([GH 39584](https://github.com/pandas-dev/pandas/issues/39584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") while checking object array with no elements
    is of the string dtype ([GH 54661](https://github.com/pandas-dev/pandas/issues/54661))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") failing when `engine="numba"` and columns or index have
    `StringDtype` ([GH 56189](https://github.com/pandas-dev/pandas/issues/56189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") not matching [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `string[pyarrow_numpy]` dtype ([GH 56106](https://github.com/pandas-dev/pandas/issues/56106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.str.cat()` always casting result to object dtype ([GH 56157](https://github.com/pandas-dev/pandas/issues/56157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__mul__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` dtype and `string[pyarrow]` for the
    pyarrow backend ([GH 51970](https://github.com/pandas-dev/pandas/issues/51970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.find()`](../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find") when `start < 0` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` ([GH 56411](https://github.com/pandas-dev/pandas/issues/56411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.fullmatch()`](../reference/api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch") when `dtype=pandas.ArrowDtype(pyarrow.string()))`
    allows partial matches when regex ends in literal //$ ([GH 56652](https://github.com/pandas-dev/pandas/issues/56652))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") when `n < 0` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` ([GH 56404](https://github.com/pandas-dev/pandas/issues/56404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.startswith()`](../reference/api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith") and [`Series.str.endswith()`](../reference/api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith") with arguments of type `tuple[str, ...]` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` dtype ([GH 56579](https://github.com/pandas-dev/pandas/issues/56579))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.startswith()`](../reference/api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith") and [`Series.str.endswith()`](../reference/api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith") with arguments of type `tuple[str, ...]` for `string[pyarrow]`
    ([GH 54942](https://github.com/pandas-dev/pandas/issues/54942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison operations for `dtype="string[pyarrow_numpy]"` raising if
    dtypes can’t be compared ([GH 56008](https://github.com/pandas-dev/pandas/issues/56008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    `__repr__` not displaying UTC offsets for [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") bounds. Additionally the hour, minute and second components
    will now be shown ([GH 55015](https://github.com/pandas-dev/pandas/issues/55015))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.factorize()` and [`Series.factorize()`](../reference/api/pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") with datetime64 or timedelta64 intervals not preserving
    non-nanosecond units ([GH 56099](https://github.com/pandas-dev/pandas/issues/56099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.from_arrays()`](../reference/api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays") when passed `datetime64` or `timedelta64`
    arrays with mismatched resolutions constructing an invalid `IntervalArray` object
    ([GH 55714](https://github.com/pandas-dev/pandas/issues/55714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.from_tuples()`](../reference/api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples") raising if subtype is a nullable extension
    dtype ([GH 56765](https://github.com/pandas-dev/pandas/issues/56765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") with datetime or timedelta intervals incorrectly
    matching on integer targets ([GH 47772](https://github.com/pandas-dev/pandas/issues/47772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") with timezone-aware datetime intervals incorrectly
    matching on a sequence of timezone-naive targets ([GH 47772](https://github.com/pandas-dev/pandas/issues/47772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") using a slice incorrectly raising ([GH 54722](https://github.com/pandas-dev/pandas/issues/54722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") mutating a boolean indexer when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 56635](https://github.com/pandas-dev/pandas/issues/56635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with extension dtype into NumPy dtype ([GH 55604](https://github.com/pandas-dev/pandas/issues/55604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") not returning a unique set of values when `other` is
    empty or `other` is considered non-comparable ([GH 55113](https://github.com/pandas-dev/pandas/issues/55113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") values into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with numpy dtypes raising `RecursionError` ([GH 52927](https://github.com/pandas-dev/pandas/issues/52927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when creating new column with missing values when setting a single
    string value ([GH 56204](https://github.com/pandas-dev/pandas/issues/56204))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") wasn’t updating in-place for tz-aware datetime64 dtypes
    ([GH 56227](https://github.com/pandas-dev/pandas/issues/56227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") not raising `ValueError` when `method` provided
    and index is non-monotonic ([GH 53452](https://github.com/pandas-dev/pandas/issues/53452))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `engine="python"` did not respect `chunksize` arg when
    `skiprows` was specified ([GH 56323](https://github.com/pandas-dev/pandas/issues/56323))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `engine="python"` was causing a `TypeError` when a callable
    `skiprows` and a chunk size was specified ([GH 55677](https://github.com/pandas-dev/pandas/issues/55677))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `on_bad_lines="warn"` would write to `stderr` instead
    of raising a Python warning; this now yields a [`errors.ParserWarning`](../reference/api/pandas.errors.ParserWarning.html#pandas.errors.ParserWarning
    "pandas.errors.ParserWarning") ([GH 54296](https://github.com/pandas-dev/pandas/issues/54296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` where `quotechar` was ignored ([GH
    52266](https://github.com/pandas-dev/pandas/issues/52266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` where `usecols` wasn’t working with
    a CSV with no headers ([GH 54459](https://github.com/pandas-dev/pandas/issues/54459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), with `engine="xlrd"` (`xls` files) erroring when the file
    contains `NaN` or `Inf` ([GH 54564](https://github.com/pandas-dev/pandas/issues/54564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") not handling dtype conversion properly if `infer_string` is
    set ([GH 56195](https://github.com/pandas-dev/pandas/issues/56195))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), with `OdsWriter` (`ods` files) writing Boolean/string
    value ([GH 54994](https://github.com/pandas-dev/pandas/issues/54994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") with `datetime64` dtypes with non-nanosecond resolution failing
    to round-trip correctly ([GH 55622](https://github.com/pandas-dev/pandas/issues/55622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") raising for extension dtypes ([GH 54671](https://github.com/pandas-dev/pandas/issues/54671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") with `engine="odf"` (`ods` files) when a string cell contains
    an annotation ([GH 55200](https://github.com/pandas-dev/pandas/issues/55200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") with an ODS file without cached formatted cell for float
    values ([GH 55219](https://github.com/pandas-dev/pandas/issues/55219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") would raise an `OverflowError` instead of a `TypeError`
    with unsupported NumPy types ([GH 55403](https://github.com/pandas-dev/pandas/issues/55403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") construction when more than one of `data`, `ordinal` and
    `**fields` are passed failing to raise `ValueError` ([GH 55961](https://github.com/pandas-dev/pandas/issues/55961))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    addition silently wrapping around instead of raising `OverflowError` ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in casting from [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `astype` to `datetime64` or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") with non-nanosecond unit incorrectly returning with
    nanosecond unit ([GH 55958](https://github.com/pandas-dev/pandas/issues/55958))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") with `vert=False` and a Matplotlib `Axes` created
    with `sharey=True` ([GH 54941](https://github.com/pandas-dev/pandas/issues/54941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") discarding string columns ([GH 56142](https://github.com/pandas-dev/pandas/issues/56142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when reusing an `ax` object failing to raise when a `how`
    keyword is passed ([GH 55953](https://github.com/pandas-dev/pandas/issues/55953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`SeriesGroupBy.idxmin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin"), and [`SeriesGroupBy.idxmax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax") would not retain [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") dtype when the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") that contained NA values ([GH 54234](https://github.com/pandas-dev/pandas/issues/54234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") when `observed=False` and `f="idxmin"`
    or `f="idxmax"` would incorrectly raise on unobserved categories ([GH 54234](https://github.com/pandas-dev/pandas/issues/54234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") could result in incorrect sorting
    if the columns of the DataFrame or name of the Series are integers ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") would not respect `sort=False`
    in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") would sort by proportions rather
    than frequencies when `sort=True` and `normalize=True` ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.asfreq()`](../reference/api/pandas.DataFrame.asfreq.html#pandas.DataFrame.asfreq
    "pandas.DataFrame.asfreq") and [`Series.asfreq()`](../reference/api/pandas.Series.asfreq.html#pandas.Series.asfreq
    "pandas.Series.asfreq") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with non-nanosecond resolution incorrectly converting
    to nanosecond resolution ([GH 55958](https://github.com/pandas-dev/pandas/issues/55958))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") when passed `times` with non-nanosecond `datetime64` or
    [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype ([GH 56262](https://github.com/pandas-dev/pandas/issues/56262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where grouping by a combination of `Decimal` and NA values
    would fail when `sort=True` ([GH 54847](https://github.com/pandas-dev/pandas/issues/54847))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") for DataFrame subclasses when selecting a subset of
    columns to apply the function to ([GH 56761](https://github.com/pandas-dev/pandas/issues/56761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") not respecting `closed` and `label` arguments for
    [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") ([GH 55282](https://github.com/pandas-dev/pandas/issues/55282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") when resampling on a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of `pyarrow.timestamp` or `pyarrow.duration` type ([GH 55989](https://github.com/pandas-dev/pandas/issues/55989))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where bin edges were not correct for [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") ([GH 55281](https://github.com/pandas-dev/pandas/issues/55281))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where bin edges were not correct for [`MonthBegin`](../reference/api/pandas.tseries.offsets.MonthBegin.html#pandas.tseries.offsets.MonthBegin
    "pandas.tseries.offsets.MonthBegin") ([GH 55271](https://github.com/pandas-dev/pandas/issues/55271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") where duplicate datetimelike indexes are treated as consecutive
    rather than equal with `closed='left'` and `closed='neither'` ([GH 20712](https://github.com/pandas-dev/pandas/issues/20712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") where either the `index` or `on` column was [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.timestamp` type ([GH 55849](https://github.com/pandas-dev/pandas/issues/55849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    ignoring `sort` parameter when passed [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") indexes ([GH 54769](https://github.com/pandas-dev/pandas/issues/54769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    renaming [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    when `ignore_index=False` ([GH 15047](https://github.com/pandas-dev/pandas/issues/15047))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `TypeError` when `by` dtype is not `object`, `int64`,
    or `uint64` ([GH 22794](https://github.com/pandas-dev/pandas/issues/22794))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising incorrect error for string dtype ([GH 56444](https://github.com/pandas-dev/pandas/issues/56444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when using a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") tolerance on a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") column ([GH 56486](https://github.com/pandas-dev/pandas/issues/56486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not raising when merging datetime columns with timedelta columns ([GH 56455](https://github.com/pandas-dev/pandas/issues/56455))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not raising when merging string columns with numeric columns ([GH 56441](https://github.com/pandas-dev/pandas/issues/56441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not sorting for new string dtype ([GH 56442](https://github.com/pandas-dev/pandas/issues/56442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    returning columns in incorrect order when left and/or right is empty ([GH 51929](https://github.com/pandas-dev/pandas/issues/51929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") where an exception was raised if `var_name` was not a
    string ([GH 55948](https://github.com/pandas-dev/pandas/issues/55948))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") where it would not preserve the datetime ([GH 55254](https://github.com/pandas-dev/pandas/issues/55254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") where the row margin is incorrect when the columns
    have numeric names ([GH 26568](https://github.com/pandas-dev/pandas/issues/26568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") with numeric columns and extension dtype for data ([GH
    56528](https://github.com/pandas-dev/pandas/issues/56528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") with `future_stack=True` would not preserve NA values
    in the index ([GH 56573](https://github.com/pandas-dev/pandas/issues/56573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.take()` when using a different fill value than the
    array’s fill value ([GH 55181](https://github.com/pandas-dev/pandas/issues/55181))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.__dataframe__()`](../reference/api/pandas.DataFrame.__dataframe__.html#pandas.DataFrame.__dataframe__
    "pandas.DataFrame.__dataframe__") did not support pyarrow large strings ([GH 56702](https://github.com/pandas-dev/pandas/issues/56702))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") when formatting percentiles in the resulting percentile
    99.999% is rounded to 100% ([GH 55765](https://github.com/pandas-dev/pandas/issues/55765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") where it raised `NotImplementedError`
    when handling empty string columns ([GH 56703](https://github.com/pandas-dev/pandas/issues/56703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") and
    [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") with `datetime64`
    dtype values with non-nanosecond units incorrectly returning nanosecond-unit bins
    ([GH 56101](https://github.com/pandas-dev/pandas/issues/56101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") incorrectly
    allowing cutting of timezone-aware datetimes with timezone-naive bins ([GH 54964](https://github.com/pandas-dev/pandas/issues/54964))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") and [`DatetimeIndex.inferred_freq()`](../reference/api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") with weekly frequencies and non-nanosecond
    resolutions ([GH 55609](https://github.com/pandas-dev/pandas/issues/55609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") where passing `raw=True` ignored `args` passed to the
    applied function ([GH 55009](https://github.com/pandas-dev/pandas/issues/55009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") which would always sort the rows of the created
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    ([GH 55683](https://github.com/pandas-dev/pandas/issues/55683))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") when passing `axis="columns"` and `ignore_index=True`
    raising a `ValueError` ([GH 56478](https://github.com/pandas-dev/pandas/issues/56478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering `inf` values inside a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the `use_inf_as_na` option enabled ([GH 55483](https://github.com/pandas-dev/pandas/issues/55483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when one of the index level’s names is 0 not having that
    name displayed ([GH 55415](https://github.com/pandas-dev/pandas/issues/55415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the error message when assigning an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to a column ([GH 55956](https://github.com/pandas-dev/pandas/issues/55956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when time-like strings were being cast to [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.time64` type ([GH 56463](https://github.com/pandas-dev/pandas/issues/56463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fixed a spurious deprecation warning from `numba` >= 0.58.0 when passing a
    numpy ufunc in `core.window.Rolling.apply` with `engine="numba"` ([GH 55247](https://github.com/pandas-dev/pandas/issues/55247))  ##
    Contributors'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 162 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: AG
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aaron Rahman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abdullah Ihsan Secer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abhijit Deo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrian D’Alessandro
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmad Mustafa Anis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amanda Bizzinotto
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amith KK +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aniket Patil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Fonseca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artur Barseghyan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Greiner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bill Blum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boyd Kane
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damian Kula
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan King +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Weindl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniele Nicolodi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Poznik
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Toneian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dea María Léon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepak George +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitriy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dominique Garmier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Donald Thevalingam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Doug Davis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dukastlik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elahe Sharifi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Han +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francisco Alfaro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gadea Autric +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Lemaitre
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hadi Abdi Khojasteh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hedeer El Showk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Huanghz2001 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Issam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Itay Azolay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Itayazolay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack McIvor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JackCollins91 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Spencer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jessica Greene
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jirka Borovec +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JohannaTrost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John C +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José Lucas Mayer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José Lucas Silva Mayer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: João Andrade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kai Mühlbauer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katharina Tielking, MD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kazuto Haruguchi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lawrence Mitchell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linus Sommer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Louis-Émile Robitaille +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lumberbot (aka Jack)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maggie Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MainHanzo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Šícho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz Sokół
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Felipe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxwell Bileschi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Tiemann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michał Górny
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Molly Bowers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moritz Schubert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NNLNR +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natalia Mokeeva
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nils Müller-Wendt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omar Elbaz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paras Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parthi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Pellissier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Uhlenbruck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip Meier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philippe THOMY +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quang Nguyễn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raghav
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajat Subhra Mukherjee
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ralf Gommers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Randolf Scholz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rob +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohan Jain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Gibson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sai-Suraj-27 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Oranyeli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sara Bonati +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Berg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergey Zakharov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shyamala Venkatakrishnan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: StEmGeo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn de Gooijer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thiago Gariani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas A Caswell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Baumann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Guillet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Lazarus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Toro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ville Aikas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vinita Parasrampuria +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vyas Ramasubramani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Willian Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xiao Yuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yao Xiao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yves Delley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zemux1613 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ziad Kermadi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aaron-robeson-8451 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aram-cinnamon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: caneff +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ccccjone +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-caballero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cobalt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: color455nm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: denisrei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dependabot[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jfadia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: johanna.trost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kgmuzungu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mecopur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mhb143 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: morotti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mvirts +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: omar-elbaz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paulreece
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pre-commit-ci[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raj-thapa
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rebecca-palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rmhowe425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rohanjain101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shiersansi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smij720
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: srkds +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: taytzehao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: torext
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vboxuser +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: xzmeng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'yashb +  ## Upcoming changes in pandas 3.0'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pandas 3.0 will bring two bigger changes to the default behavior of pandas.
  prefs: []
  type: TYPE_NORMAL
- en: Copy-on-Write
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The currently optional mode Copy-on-Write will be enabled by default in pandas
    3.0\. There won’t be an option to keep the current behavior enabled. The new behavioral
    semantics are explained in the [user guide about Copy-on-Write](../user_guide/copy_on_write.html#copy-on-write).
  prefs: []
  type: TYPE_NORMAL
- en: 'The new behavior can be enabled since pandas 2.0 with the following option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: This change brings different changes in behavior in how pandas operates with
    respect to copies and views. Some of these changes allow a clear deprecation,
    like the changes in chained assignment. Other changes are more subtle and thus,
    the warnings are hidden behind an option that can be enabled in pandas 2.2.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: This mode will warn in many different scenarios that aren’t actually relevant
    to most queries. We recommend exploring this mode, but it is not necessary to
    get rid of all of these warnings. The [migration guide](../user_guide/copy_on_write.html#copy-on-write-migration-guide)
    explains the upgrade process in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Dedicated string data type (backed by Arrow) by default
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Historically, pandas represented string columns with NumPy object data type.
    This representation has numerous problems, including slow performance and a large
    memory footprint. This will change in pandas 3.0\. pandas will start inferring
    string columns as a new `string` data type, backed by Arrow, which represents
    strings contiguous in memory. This brings a huge performance and memory improvement.
  prefs: []
  type: TYPE_NORMAL
- en: 'Old behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: The string data type that is used in these scenarios will mostly behave as NumPy
    object would, including missing value semantics and general operations on these
    columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'This change includes a few additional changes across the API:'
  prefs: []
  type: TYPE_NORMAL
- en: Currently, specifying `dtype="string"` creates a dtype that is backed by Python
    strings which are stored in a NumPy array. This will change in pandas 3.0, this
    dtype will create an Arrow backed string column.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The column names and the Index will also be backed by Arrow strings.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PyArrow will become a required dependency with pandas 3.0 to accommodate this
    change.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This future dtype inference logic can be enabled with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Copy-on-Write
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The currently optional mode Copy-on-Write will be enabled by default in pandas
    3.0\. There won’t be an option to keep the current behavior enabled. The new behavioral
    semantics are explained in the [user guide about Copy-on-Write](../user_guide/copy_on_write.html#copy-on-write).
  prefs: []
  type: TYPE_NORMAL
- en: 'The new behavior can be enabled since pandas 2.0 with the following option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: This change brings different changes in behavior in how pandas operates with
    respect to copies and views. Some of these changes allow a clear deprecation,
    like the changes in chained assignment. Other changes are more subtle and thus,
    the warnings are hidden behind an option that can be enabled in pandas 2.2.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: This mode will warn in many different scenarios that aren’t actually relevant
    to most queries. We recommend exploring this mode, but it is not necessary to
    get rid of all of these warnings. The [migration guide](../user_guide/copy_on_write.html#copy-on-write-migration-guide)
    explains the upgrade process in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Dedicated string data type (backed by Arrow) by default
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Historically, pandas represented string columns with NumPy object data type.
    This representation has numerous problems, including slow performance and a large
    memory footprint. This will change in pandas 3.0\. pandas will start inferring
    string columns as a new `string` data type, backed by Arrow, which represents
    strings contiguous in memory. This brings a huge performance and memory improvement.
  prefs: []
  type: TYPE_NORMAL
- en: 'Old behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'New behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: The string data type that is used in these scenarios will mostly behave as NumPy
    object would, including missing value semantics and general operations on these
    columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'This change includes a few additional changes across the API:'
  prefs: []
  type: TYPE_NORMAL
- en: Currently, specifying `dtype="string"` creates a dtype that is backed by Python
    strings which are stored in a NumPy array. This will change in pandas 3.0, this
    dtype will create an Arrow backed string column.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The column names and the Index will also be backed by Arrow strings.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PyArrow will become a required dependency with pandas 3.0 to accommodate this
    change.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This future dtype inference logic can be enabled with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: '## Enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '### ADBC Driver support in to_sql and read_sql'
  prefs: []
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")
    and [`to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now work with [Apache Arrow ADBC](https://arrow.apache.org/adbc/current/index.html)
    drivers. Compared to traditional drivers used via SQLAlchemy, ADBC drivers should
    provide significant performance improvements, better type support and cleaner
    nullability handling.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'The Arrow type system offers a wider array of types that can more closely match
    what databases like PostgreSQL can offer. To illustrate, note this (non-exhaustive)
    listing of types available in different databases and pandas backends:'
  prefs: []
  type: TYPE_NORMAL
- en: '| numpy/pandas | arrow | postgres | sqlite |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| int16/Int16 | int16 | SMALLINT | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| int32/Int32 | int32 | INTEGER | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| int64/Int64 | int64 | BIGINT | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| float32 | float32 | REAL | REAL |'
  prefs: []
  type: TYPE_TB
- en: '| float64 | float64 | DOUBLE PRECISION | REAL |'
  prefs: []
  type: TYPE_TB
- en: '| object | string | TEXT | TEXT |'
  prefs: []
  type: TYPE_TB
- en: '| bool | `bool_` | BOOLEAN |  |'
  prefs: []
  type: TYPE_TB
- en: '| datetime64[ns] | timestamp(us) | TIMESTAMP |  |'
  prefs: []
  type: TYPE_TB
- en: '| datetime64[ns,tz] | timestamp(us,tz) | TIMESTAMPTZ |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | date32 | DATE |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | month_day_nano_interval | INTERVAL |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | binary | BINARY | BLOB |'
  prefs: []
  type: TYPE_TB
- en: '|  | decimal128 | DECIMAL [[1]](#f1) |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | list | ARRAY [[1]](#f1) |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | struct |'
  prefs: []
  type: TYPE_TB
- en: COMPOSITE TYPE
  prefs: []
  type: TYPE_NORMAL
- en: '[[1]](#f1)'
  prefs: []
  type: TYPE_NORMAL
- en: '|  |'
  prefs: []
  type: TYPE_TB
- en: Footnotes
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in preserving database types as best as possible throughout
    the lifecycle of your DataFrame, users are encouraged to leverage the `dtype_backend="pyarrow"`
    argument of [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: This will prevent your data from being converted to the traditional pandas/NumPy
    type system, which often converts SQL types in ways that make them impossible
    to round-trip.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a full list of ADBC drivers and their development status, see the [ADBC
    Driver Implementation Status](https://arrow.apache.org/adbc/current/driver/status.html)
    documentation.  ### Create a pandas Series based on one or more conditions'
  prefs: []
  type: TYPE_NORMAL
- en: The [`Series.case_when()`](../reference/api/pandas.Series.case_when.html#pandas.Series.case_when
    "pandas.Series.case_when") function has been added to create a Series object based
    on one or more conditions. ([GH 39154](https://github.com/pandas-dev/pandas/issues/39154))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]  ### `to_numpy` for NumPy nullable and Arrow types converts to suitable
    NumPy dtype'
  prefs: []
  type: TYPE_NORMAL
- en: '`to_numpy` for NumPy nullable and Arrow types will now convert to a suitable
    NumPy dtype instead of `object` dtype for nullable and PyArrow backed extension
    dtypes.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'The default NumPy dtype (without any arguments) is determined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: float dtypes are cast to NumPy floats
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: integer dtypes without missing values are cast to NumPy integer dtypes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: integer dtypes with missing values are cast to NumPy float dtypes and `NaN`
    is used as missing value indicator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: boolean dtypes without missing values are cast to NumPy bool dtype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: boolean dtypes with missing values keep object dtype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'datetime and timedelta types are cast to Numpy datetime64 and timedelta64 types
    respectively and `NaT` is used as missing value indicator  ### Series.struct accessor
    for PyArrow structured data'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `Series.struct` accessor provides attributes and methods for processing
    data with `struct[pyarrow]` dtype Series. For example, [`Series.struct.explode()`](../reference/api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode") converts PyArrow structured data to a pandas DataFrame.
    ([GH 54938](https://github.com/pandas-dev/pandas/issues/54938))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Use [`Series.struct.field()`](../reference/api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field") to index into a (possible nested) struct field.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]  ### Series.list accessor for PyArrow list data'
  prefs: []
  type: TYPE_NORMAL
- en: The `Series.list` accessor provides attributes and methods for processing data
    with `list[pyarrow]` dtype Series. For example, [`Series.list.__getitem__()`](../reference/api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__") allows indexing pyarrow lists in a Series. ([GH
    55323](https://github.com/pandas-dev/pandas/issues/55323))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]  ### Calamine engine for [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs: []
  type: TYPE_NORMAL
- en: The `calamine` engine was added to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). It uses `python-calamine`, which provides Python bindings
    for the Rust library [calamine](https://crates.io/crates/calamine). This engine
    supports Excel files (`.xlsx`, `.xlsm`, `.xls`, `.xlsb`) and OpenDocument spreadsheets
    (`.ods`) ([GH 50395](https://github.com/pandas-dev/pandas/issues/50395)).
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two advantages of this engine:'
  prefs: []
  type: TYPE_NORMAL
- en: Calamine is often faster than other engines, some benchmarks show results up
    to 5x faster than ‘openpyxl’, 20x - ‘odf’, 4x - ‘pyxlsb’, and 1.5x - ‘xlrd’. But,
    ‘openpyxl’ and ‘pyxlsb’ are faster in reading a few rows from large files because
    of lazy iteration over rows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Calamine supports the recognition of datetime in `.xlsb` files, unlike ‘pyxlsb’
    which is the only other engine in pandas that can read `.xlsb` files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'For more, see [Calamine (Excel and ODS files)](../user_guide/io.html#io-calamine)
    in the user guide on IO tools.  ### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") with method parameter set to `multi` works with Oracle
    on the backend'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.attrs`](../reference/api/pandas.Series.attrs.html#pandas.Series.attrs
    "pandas.Series.attrs") / [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs") now uses a deepcopy for propagating `attrs` ([GH 54134](https://github.com/pandas-dev/pandas/issues/54134)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") now returning extension dtypes `boolean` or `bool[pyarrow]`
    that are compatible with the input dtype ([GH 56273](https://github.com/pandas-dev/pandas/issues/56273))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now supports `on_bad_lines` parameter with `engine="pyarrow"` ([GH 54480](https://github.com/pandas-dev/pandas/issues/54480))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    returns `datetime64` dtypes with resolutions better matching those stored natively
    in SAS, and avoids returning object-dtype in cases that cannot be stored with
    `datetime64[ns]` dtype ([GH 56127](https://github.com/pandas-dev/pandas/issues/56127))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")
    now returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that stores the metadata in [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs") ([GH 54264](https://github.com/pandas-dev/pandas/issues/54264))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`tseries.api.guess_datetime_format()`](../reference/api/pandas.tseries.api.guess_datetime_format.html#pandas.tseries.api.guess_datetime_format
    "pandas.tseries.api.guess_datetime_format") is now part of the public API ([GH
    54727](https://github.com/pandas-dev/pandas/issues/54727))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") now allows the usage of numba (via `engine="numba"`)
    to JIT compile the passed function, allowing for potential speedups ([GH 54666](https://github.com/pandas-dev/pandas/issues/54666))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray._explode()` interface method added to allow extension type
    implementations of the `explode` method ([GH 54833](https://github.com/pandas-dev/pandas/issues/54833))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray.duplicated()` added to allow extension type implementations
    of the `duplicated` method ([GH 55255](https://github.com/pandas-dev/pandas/issues/55255))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), and [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") have gained the argument `limit_area`; 3rd party [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") authors need to add this argument to the
    method `_pad_or_backfill` ([GH 56492](https://github.com/pandas-dev/pandas/issues/56492))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow passing `read_only`, `data_only` and `keep_links` arguments to openpyxl
    using `engine_kwargs` of [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 55027](https://github.com/pandas-dev/pandas/issues/55027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") and masked dtypes ([GH 56267](https://github.com/pandas-dev/pandas/issues/56267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement masked algorithms for [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") ([GH 54984](https://github.com/pandas-dev/pandas/issues/54984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.dt()`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") methods and attributes for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.duration` type ([GH 52284](https://github.com/pandas-dev/pandas/issues/52284))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.str.extract()`](../reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") ([GH 56268](https://github.com/pandas-dev/pandas/issues/56268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message that appears in [`DatetimeIndex.to_period()`](../reference/api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period") with frequencies which are not supported as
    period frequencies, such as `"BMS"` ([GH 56243](https://github.com/pandas-dev/pandas/issues/56243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when constructing [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with invalid offsets such as `"QS"` ([GH 55785](https://github.com/pandas-dev/pandas/issues/55785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The dtypes `string[pyarrow]` and `string[pyarrow_numpy]` now both utilize the
    `large_string` type from PyArrow to avoid overflow for long columns ([GH 56259](https://github.com/pandas-dev/pandas/issues/56259))  ###
    ADBC Driver support in to_sql and read_sql'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql "pandas.read_sql")
    and [`to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") now work with [Apache Arrow ADBC](https://arrow.apache.org/adbc/current/index.html)
    drivers. Compared to traditional drivers used via SQLAlchemy, ADBC drivers should
    provide significant performance improvements, better type support and cleaner
    nullability handling.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'The Arrow type system offers a wider array of types that can more closely match
    what databases like PostgreSQL can offer. To illustrate, note this (non-exhaustive)
    listing of types available in different databases and pandas backends:'
  prefs: []
  type: TYPE_NORMAL
- en: '| numpy/pandas | arrow | postgres | sqlite |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| int16/Int16 | int16 | SMALLINT | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| int32/Int32 | int32 | INTEGER | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| int64/Int64 | int64 | BIGINT | INTEGER |'
  prefs: []
  type: TYPE_TB
- en: '| float32 | float32 | REAL | REAL |'
  prefs: []
  type: TYPE_TB
- en: '| float64 | float64 | DOUBLE PRECISION | REAL |'
  prefs: []
  type: TYPE_TB
- en: '| object | string | TEXT | TEXT |'
  prefs: []
  type: TYPE_TB
- en: '| bool | `bool_` | BOOLEAN |  |'
  prefs: []
  type: TYPE_TB
- en: '| datetime64[ns] | timestamp(us) | TIMESTAMP |  |'
  prefs: []
  type: TYPE_TB
- en: '| datetime64[ns,tz] | timestamp(us,tz) | TIMESTAMPTZ |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | date32 | DATE |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | month_day_nano_interval | INTERVAL |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | binary | BINARY | BLOB |'
  prefs: []
  type: TYPE_TB
- en: '|  | decimal128 | DECIMAL [[1]](#f1) |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | list | ARRAY [[1]](#f1) |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | struct |'
  prefs: []
  type: TYPE_TB
- en: COMPOSITE TYPE
  prefs: []
  type: TYPE_NORMAL
- en: '[[1]](#f1)'
  prefs: []
  type: TYPE_NORMAL
- en: '|  |'
  prefs: []
  type: TYPE_TB
- en: Footnotes
  prefs: []
  type: TYPE_NORMAL
- en: If you are interested in preserving database types as best as possible throughout
    the lifecycle of your DataFrame, users are encouraged to leverage the `dtype_backend="pyarrow"`
    argument of [`read_sql()`](../reference/api/pandas.read_sql.html#pandas.read_sql
    "pandas.read_sql")
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: This will prevent your data from being converted to the traditional pandas/NumPy
    type system, which often converts SQL types in ways that make them impossible
    to round-trip.
  prefs: []
  type: TYPE_NORMAL
- en: For a full list of ADBC drivers and their development status, see the [ADBC
    Driver Implementation Status](https://arrow.apache.org/adbc/current/driver/status.html)
    documentation.
  prefs: []
  type: TYPE_NORMAL
- en: '### Create a pandas Series based on one or more conditions'
  prefs: []
  type: TYPE_NORMAL
- en: The [`Series.case_when()`](../reference/api/pandas.Series.case_when.html#pandas.Series.case_when
    "pandas.Series.case_when") function has been added to create a Series object based
    on one or more conditions. ([GH 39154](https://github.com/pandas-dev/pandas/issues/39154))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '### `to_numpy` for NumPy nullable and Arrow types converts to suitable NumPy
    dtype'
  prefs: []
  type: TYPE_NORMAL
- en: '`to_numpy` for NumPy nullable and Arrow types will now convert to a suitable
    NumPy dtype instead of `object` dtype for nullable and PyArrow backed extension
    dtypes.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Old behavior:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: '*New behavior:*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'The default NumPy dtype (without any arguments) is determined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: float dtypes are cast to NumPy floats
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: integer dtypes without missing values are cast to NumPy integer dtypes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: integer dtypes with missing values are cast to NumPy float dtypes and `NaN`
    is used as missing value indicator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: boolean dtypes without missing values are cast to NumPy bool dtype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: boolean dtypes with missing values keep object dtype
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: datetime and timedelta types are cast to Numpy datetime64 and timedelta64 types
    respectively and `NaT` is used as missing value indicator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '### Series.struct accessor for PyArrow structured data'
  prefs: []
  type: TYPE_NORMAL
- en: The `Series.struct` accessor provides attributes and methods for processing
    data with `struct[pyarrow]` dtype Series. For example, [`Series.struct.explode()`](../reference/api/pandas.Series.struct.explode.html#pandas.Series.struct.explode
    "pandas.Series.struct.explode") converts PyArrow structured data to a pandas DataFrame.
    ([GH 54938](https://github.com/pandas-dev/pandas/issues/54938))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Use [`Series.struct.field()`](../reference/api/pandas.Series.struct.field.html#pandas.Series.struct.field
    "pandas.Series.struct.field") to index into a (possible nested) struct field.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: '### Series.list accessor for PyArrow list data'
  prefs: []
  type: TYPE_NORMAL
- en: The `Series.list` accessor provides attributes and methods for processing data
    with `list[pyarrow]` dtype Series. For example, [`Series.list.__getitem__()`](../reference/api/pandas.Series.list.__getitem__.html#pandas.Series.list.__getitem__
    "pandas.Series.list.__getitem__") allows indexing pyarrow lists in a Series. ([GH
    55323](https://github.com/pandas-dev/pandas/issues/55323))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: '### Calamine engine for [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel")'
  prefs: []
  type: TYPE_NORMAL
- en: The `calamine` engine was added to [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"). It uses `python-calamine`, which provides Python bindings
    for the Rust library [calamine](https://crates.io/crates/calamine). This engine
    supports Excel files (`.xlsx`, `.xlsm`, `.xls`, `.xlsb`) and OpenDocument spreadsheets
    (`.ods`) ([GH 50395](https://github.com/pandas-dev/pandas/issues/50395)).
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two advantages of this engine:'
  prefs: []
  type: TYPE_NORMAL
- en: Calamine is often faster than other engines, some benchmarks show results up
    to 5x faster than ‘openpyxl’, 20x - ‘odf’, 4x - ‘pyxlsb’, and 1.5x - ‘xlrd’. But,
    ‘openpyxl’ and ‘pyxlsb’ are faster in reading a few rows from large files because
    of lazy iteration over rows.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Calamine supports the recognition of datetime in `.xlsb` files, unlike ‘pyxlsb’
    which is the only other engine in pandas that can read `.xlsb` files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: For more, see [Calamine (Excel and ODS files)](../user_guide/io.html#io-calamine)
    in the user guide on IO tools.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other enhancements'
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_sql()`](../reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql
    "pandas.DataFrame.to_sql") with method parameter set to `multi` works with Oracle
    on the backend'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.attrs`](../reference/api/pandas.Series.attrs.html#pandas.Series.attrs
    "pandas.Series.attrs") / [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs") now uses a deepcopy for propagating `attrs` ([GH 54134](https://github.com/pandas-dev/pandas/issues/54134)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") now returning extension dtypes `boolean` or `bool[pyarrow]`
    that are compatible with the input dtype ([GH 56273](https://github.com/pandas-dev/pandas/issues/56273))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv "pandas.read_csv")
    now supports `on_bad_lines` parameter with `engine="pyarrow"` ([GH 54480](https://github.com/pandas-dev/pandas/issues/54480))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_sas()`](../reference/api/pandas.read_sas.html#pandas.read_sas "pandas.read_sas")
    returns `datetime64` dtypes with resolutions better matching those stored natively
    in SAS, and avoids returning object-dtype in cases that cannot be stored with
    `datetime64[ns]` dtype ([GH 56127](https://github.com/pandas-dev/pandas/issues/56127))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`read_spss()`](../reference/api/pandas.read_spss.html#pandas.read_spss "pandas.read_spss")
    now returns a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") that stores the metadata in [`DataFrame.attrs`](../reference/api/pandas.DataFrame.attrs.html#pandas.DataFrame.attrs
    "pandas.DataFrame.attrs") ([GH 54264](https://github.com/pandas-dev/pandas/issues/54264))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`tseries.api.guess_datetime_format()`](../reference/api/pandas.tseries.api.guess_datetime_format.html#pandas.tseries.api.guess_datetime_format
    "pandas.tseries.api.guess_datetime_format") is now part of the public API ([GH
    54727](https://github.com/pandas-dev/pandas/issues/54727))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") now allows the usage of numba (via `engine="numba"`)
    to JIT compile the passed function, allowing for potential speedups ([GH 54666](https://github.com/pandas-dev/pandas/issues/54666))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray._explode()` interface method added to allow extension type
    implementations of the `explode` method ([GH 54833](https://github.com/pandas-dev/pandas/issues/54833))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExtensionArray.duplicated()` added to allow extension type implementations
    of the `duplicated` method ([GH 55255](https://github.com/pandas-dev/pandas/issues/55255))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill"), [`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), and [`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill") have gained the argument `limit_area`; 3rd party [`ExtensionArray`](../reference/api/pandas.api.extensions.ExtensionArray.html#pandas.api.extensions.ExtensionArray
    "pandas.api.extensions.ExtensionArray") authors need to add this argument to the
    method `_pad_or_backfill` ([GH 56492](https://github.com/pandas-dev/pandas/issues/56492))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow passing `read_only`, `data_only` and `keep_links` arguments to openpyxl
    using `engine_kwargs` of [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") ([GH 55027](https://github.com/pandas-dev/pandas/issues/55027))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement [`Series.interpolate()`](../reference/api/pandas.Series.interpolate.html#pandas.Series.interpolate
    "pandas.Series.interpolate") and [`DataFrame.interpolate()`](../reference/api/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate
    "pandas.DataFrame.interpolate") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") and masked dtypes ([GH 56267](https://github.com/pandas-dev/pandas/issues/56267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement masked algorithms for [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") ([GH 54984](https://github.com/pandas-dev/pandas/issues/54984))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.dt()`](../reference/api/pandas.Series.dt.html#pandas.Series.dt
    "pandas.Series.dt") methods and attributes for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.duration` type ([GH 52284](https://github.com/pandas-dev/pandas/issues/52284))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implemented [`Series.str.extract()`](../reference/api/pandas.Series.str.extract.html#pandas.Series.str.extract
    "pandas.Series.str.extract") for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") ([GH 56268](https://github.com/pandas-dev/pandas/issues/56268))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message that appears in [`DatetimeIndex.to_period()`](../reference/api/pandas.DatetimeIndex.to_period.html#pandas.DatetimeIndex.to_period
    "pandas.DatetimeIndex.to_period") with frequencies which are not supported as
    period frequencies, such as `"BMS"` ([GH 56243](https://github.com/pandas-dev/pandas/issues/56243))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved error message when constructing [`Period`](../reference/api/pandas.Period.html#pandas.Period
    "pandas.Period") with invalid offsets such as `"QS"` ([GH 55785](https://github.com/pandas-dev/pandas/issues/55785))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The dtypes `string[pyarrow]` and `string[pyarrow_numpy]` now both utilize the
    `large_string` type from PyArrow to avoid overflow for long columns ([GH 56259](https://github.com/pandas-dev/pandas/issues/56259))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Notable bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: These are bug fixes that might have notable behavior changes.
  prefs: []
  type: TYPE_NORMAL
- en: '### [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") now consistently follow documented sort behavior'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") did not always return a result that followed the documented
    sort behavior. pandas now follows the documented sort behavior in merge and join
    operations ([GH 54611](https://github.com/pandas-dev/pandas/issues/54611), [GH
    56426](https://github.com/pandas-dev/pandas/issues/56426), [GH 56443](https://github.com/pandas-dev/pandas/issues/56443)).
  prefs: []
  type: TYPE_NORMAL
- en: 'As documented, `sort=True` sorts the join keys lexicographically in the resulting
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    With `sort=False`, the order of the join keys depends on the join type (`how`
    keyword):'
  prefs: []
  type: TYPE_NORMAL
- en: '`how="left"`: preserve the order of the left keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="right"`: preserve the order of the right keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="inner"`: preserve the order of the left keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="outer"`: sort keys lexicographically'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'One example with changing behavior is inner joins with non-unique left join
    keys and `sort=False`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]  ### [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") no longer reorder levels when levels differ'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") would reorder index levels when joining on two indexes
    with different levels ([GH 34133](https://github.com/pandas-dev/pandas/issues/34133)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]  ### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: For [optional dependencies](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. Optional dependencies
    below the lowest tested version may still work but are not considered supported.
    The following table lists the optional dependencies that have had their minimum
    tested version increased.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | New Minimum Version |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.11.2 |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.3 |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.6 |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 2022.12.0 |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.9.2 |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.6.3 |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.56.4 |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.8.4 |'
  prefs: []
  type: TYPE_TB
- en: '| qtpy | 2.3.0 |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.1.0 |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.9.6 |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.2.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.8.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.10 |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.10.0 |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 2.0.0 |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.9.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 2022.12.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 3.0.5 |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.19.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pyqt5 | 5.15.8 |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022.7 |'
  prefs: []
  type: TYPE_TB
- en: 'See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.  ### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The hash values of nullable extension dtypes changed to improve the performance
    of the hashing operation ([GH 56507](https://github.com/pandas-dev/pandas/issues/56507))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`check_exact` now only takes effect for floating-point dtypes in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal"). In particular, integer dtypes are always
    checked exactly ([GH 55882](https://github.com/pandas-dev/pandas/issues/55882))  ###
    [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge") and
    [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") now consistently follow documented sort behavior'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") did not always return a result that followed the documented
    sort behavior. pandas now follows the documented sort behavior in merge and join
    operations ([GH 54611](https://github.com/pandas-dev/pandas/issues/54611), [GH
    56426](https://github.com/pandas-dev/pandas/issues/56426), [GH 56443](https://github.com/pandas-dev/pandas/issues/56443)).
  prefs: []
  type: TYPE_NORMAL
- en: 'As documented, `sort=True` sorts the join keys lexicographically in the resulting
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    With `sort=False`, the order of the join keys depends on the join type (`how`
    keyword):'
  prefs: []
  type: TYPE_NORMAL
- en: '`how="left"`: preserve the order of the left keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="right"`: preserve the order of the right keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="inner"`: preserve the order of the left keys'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`how="outer"`: sort keys lexicographically'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'One example with changing behavior is inner joins with non-unique left join
    keys and `sort=False`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: '### [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") no longer reorder levels when levels differ'
  prefs: []
  type: TYPE_NORMAL
- en: In previous versions of pandas, [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") would reorder index levels when joining on two indexes
    with different levels ([GH 34133](https://github.com/pandas-dev/pandas/issues/34133)).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: '*Old Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: '*New Behavior*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: '### Increased minimum versions for dependencies'
  prefs: []
  type: TYPE_NORMAL
- en: For [optional dependencies](https://pandas.pydata.org/docs/getting_started/install.html)
    the general recommendation is to use the latest version. Optional dependencies
    below the lowest tested version may still work but are not considered supported.
    The following table lists the optional dependencies that have had their minimum
    tested version increased.
  prefs: []
  type: TYPE_NORMAL
- en: '| Package | New Minimum Version |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| beautifulsoup4 | 4.11.2 |'
  prefs: []
  type: TYPE_TB
- en: '| blosc | 1.21.3 |'
  prefs: []
  type: TYPE_TB
- en: '| bottleneck | 1.3.6 |'
  prefs: []
  type: TYPE_TB
- en: '| fastparquet | 2022.12.0 |'
  prefs: []
  type: TYPE_TB
- en: '| fsspec | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| gcsfs | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| lxml | 4.9.2 |'
  prefs: []
  type: TYPE_TB
- en: '| matplotlib | 3.6.3 |'
  prefs: []
  type: TYPE_TB
- en: '| numba | 0.56.4 |'
  prefs: []
  type: TYPE_TB
- en: '| numexpr | 2.8.4 |'
  prefs: []
  type: TYPE_TB
- en: '| qtpy | 2.3.0 |'
  prefs: []
  type: TYPE_TB
- en: '| openpyxl | 3.1.0 |'
  prefs: []
  type: TYPE_TB
- en: '| psycopg2 | 2.9.6 |'
  prefs: []
  type: TYPE_TB
- en: '| pyreadstat | 1.2.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pytables | 3.8.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pyxlsb | 1.0.10 |'
  prefs: []
  type: TYPE_TB
- en: '| s3fs | 2022.11.0 |'
  prefs: []
  type: TYPE_TB
- en: '| scipy | 1.10.0 |'
  prefs: []
  type: TYPE_TB
- en: '| sqlalchemy | 2.0.0 |'
  prefs: []
  type: TYPE_TB
- en: '| tabulate | 0.9.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xarray | 2022.12.0 |'
  prefs: []
  type: TYPE_TB
- en: '| xlsxwriter | 3.0.5 |'
  prefs: []
  type: TYPE_TB
- en: '| zstandard | 0.19.0 |'
  prefs: []
  type: TYPE_TB
- en: '| pyqt5 | 5.15.8 |'
  prefs: []
  type: TYPE_TB
- en: '| tzdata | 2022.7 |'
  prefs: []
  type: TYPE_TB
- en: See [Dependencies](../getting_started/install.html#install-dependencies) and
    [Optional dependencies](../getting_started/install.html#install-optional-dependencies)
    for more.
  prefs: []
  type: TYPE_NORMAL
- en: '### Other API changes'
  prefs: []
  type: TYPE_NORMAL
- en: The hash values of nullable extension dtypes changed to improve the performance
    of the hashing operation ([GH 56507](https://github.com/pandas-dev/pandas/issues/56507))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`check_exact` now only takes effect for floating-point dtypes in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal"). In particular, integer dtypes are always
    checked exactly ([GH 55882](https://github.com/pandas-dev/pandas/issues/55882))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Deprecations'
  prefs: []
  type: TYPE_NORMAL
- en: Chained assignment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In preparation of larger upcoming changes to the copy / view behaviour in pandas
    3.0 ([Copy-on-Write (CoW)](../user_guide/copy_on_write.html#copy-on-write), PDEP-7),
    we started deprecating *chained assignment*.
  prefs: []
  type: TYPE_NORMAL
- en: Chained assignment occurs when you try to update a pandas DataFrame or Series
    through two subsequent indexing operations. Depending on the type and order of
    those operations this currently does or does not work.
  prefs: []
  type: TYPE_NORMAL
- en: 'A typical example is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: 'This second example of chained assignment currently works to update the original
    `df`. This will no longer work in pandas 3.0, and therefore we started deprecating
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'You can fix this warning and ensure your code is ready for pandas 3.0 by removing
    the usage of chained assignment. Typically, this can be done by doing the assignment
    in a single step using for example `.loc`. For the example above, we can do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'The same deprecation applies to inplace methods that are done in a chained
    manner, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: 'When the goal is to update the column in the DataFrame `df`, the alternative
    here is to call the method on `df` itself, such as `df.fillna({"foo": 0}, inplace=True)`.'
  prefs: []
  type: TYPE_NORMAL
- en: See more details in the [migration guide](../user_guide/copy_on_write.html#copy-on-write-migration-guide).
  prefs: []
  type: TYPE_NORMAL
- en: Deprecate aliases `M`, `Q`, `Y`, etc. in favour of `ME`, `QE`, `YE`, etc. for
    offsets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Deprecated the following frequency aliases ([GH 9586](https://github.com/pandas-dev/pandas/issues/9586)):'
  prefs: []
  type: TYPE_NORMAL
- en: '| offsets | deprecated aliases | new aliases |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `MonthEnd` | `M` | `ME` |'
  prefs: []
  type: TYPE_TB
- en: '| `BusinessMonthEnd` | `BM` | `BME` |'
  prefs: []
  type: TYPE_TB
- en: '| `SemiMonthEnd` | `SM` | `SME` |'
  prefs: []
  type: TYPE_TB
- en: '| `CustomBusinessMonthEnd` | `CBM` | `CBME` |'
  prefs: []
  type: TYPE_TB
- en: '| `QuarterEnd` | `Q` | `QE` |'
  prefs: []
  type: TYPE_TB
- en: '| `BQuarterEnd` | `BQ` | `BQE` |'
  prefs: []
  type: TYPE_TB
- en: '| `YearEnd` | `Y` | `YE` |'
  prefs: []
  type: TYPE_TB
- en: '| `BYearEnd` | `BY` | `BYE` |'
  prefs: []
  type: TYPE_TB
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: Deprecated automatic downcasting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Deprecated the automatic downcasting of object dtype results in a number of
    methods. These would silently change the dtype in a hard to predict manner since
    the behavior was value dependent. Additionally, pandas is moving away from silent
    dtype changes ([GH 54710](https://github.com/pandas-dev/pandas/issues/54710),
    [GH 54261](https://github.com/pandas-dev/pandas/issues/54261)).
  prefs: []
  type: TYPE_NORMAL
- en: 'These methods are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip"), [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Explicitly call [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects") to replicate the current behavior in the future.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: Or explicitly cast all-round floats to ints using `astype`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the following option to opt into the future behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: Other Deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Changed `Timedelta.resolution_string()` to return `h`, `min`, `s`, `ms`, `us`,
    and `ns` instead of `H`, `T`, `S`, `L`, `U`, and `N`, for compatibility with respective
    deprecations in frequency aliases ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `offsets.Day.delta`, `offsets.Hour.delta`, `offsets.Minute.delta`,
    `offsets.Second.delta`, `offsets.Milli.delta`, `offsets.Micro.delta`, `offsets.Nano.delta`,
    use `pd.Timedelta(obj)` instead ([GH 55498](https://github.com/pandas-dev/pandas/issues/55498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`pandas.api.types.is_interval()`](../reference/api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval") and `pandas.api.types.is_period()`, use `isinstance(obj,
    pd.Interval)` and `isinstance(obj, pd.Period)` instead ([GH 55264](https://github.com/pandas-dev/pandas/issues/55264))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq"). Use `pandas_gbq.read_gbq` and `pandas_gbq.to_gbq`
    instead [https://pandas-gbq.readthedocs.io/en/latest/api.html](https://pandas-gbq.readthedocs.io/en/latest/api.html)
    ([GH 55525](https://github.com/pandas-dev/pandas/issues/55525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna") and [`SeriesGroupBy.fillna()`](../reference/api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna"); use [`DataFrameGroupBy.ffill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill"), [`DataFrameGroupBy.bfill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill") for forward and backward filling
    or [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") to fill with a single value (or the Series equivalents)
    ([GH 55718](https://github.com/pandas-dev/pandas/issues/55718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DateOffset.is_anchored()`, use `obj.n == 1` for non-Tick subclasses
    (for Tick this was always False) ([GH 55388](https://github.com/pandas-dev/pandas/issues/55388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DatetimeArray.__init__()` and `TimedeltaArray.__init__()`, use [`array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array") instead ([GH 55623](https://github.com/pandas-dev/pandas/issues/55623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.format()`, use `index.astype(str)` or `index.map(formatter)`
    instead ([GH 55413](https://github.com/pandas-dev/pandas/issues/55413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.ravel()`](../reference/api/pandas.Series.ravel.html#pandas.Series.ravel
    "pandas.Series.ravel"), the underlying array is already 1D, so ravel is not necessary
    ([GH 52511](https://github.com/pandas-dev/pandas/issues/52511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") with a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") (and the ‘convention’ keyword), convert to [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") (with `.to_timestamp()`) before resampling instead ([GH
    53481](https://github.com/pandas-dev/pandas/issues/53481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view"), use [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") instead to change the dtype ([GH 20251](https://github.com/pandas-dev/pandas/issues/20251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `offsets.Tick.is_anchored()`, use `False` instead ([GH 55388](https://github.com/pandas-dev/pandas/issues/55388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `core.internals` members `Block`, `ExtensionBlock`, and `DatetimeTZBlock`,
    use public APIs instead ([GH 55139](https://github.com/pandas-dev/pandas/issues/55139))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `year`, `month`, `quarter`, `day`, `hour`, `minute`, and `second`
    keywords in the [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") constructor, use [`PeriodIndex.from_fields()`](../reference/api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields
    "pandas.PeriodIndex.from_fields") instead ([GH 55960](https://github.com/pandas-dev/pandas/issues/55960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated accepting a type as an argument in [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view"), call without any arguments instead ([GH 55709](https://github.com/pandas-dev/pandas/issues/55709))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-integer `periods` argument in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") ([GH 56036](https://github.com/pandas-dev/pandas/issues/56036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") except `excel_writer` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") except `destination_table` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") except `path` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") except `path` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml") except `path_or_buffer` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing passing `BlockManager` objects to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or `SingleBlockManager` objects to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 52419](https://github.com/pandas-dev/pandas/issues/52419))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert") with an object-dtype index silently performing type inference
    on the result, explicitly call `result.infer_objects(copy=False)` for the old
    behavior instead ([GH 51363](https://github.com/pandas-dev/pandas/issues/51363))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting non-datetimelike values (mainly strings) in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") and [`Index.isin()`](../reference/api/pandas.Index.isin.html#pandas.Index.isin
    "pandas.Index.isin") with `datetime64`, `timedelta64`, and [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") dtypes ([GH 53111](https://github.com/pandas-dev/pandas/issues/53111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dtype inference in [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors when giving a pandas input, call `.infer_objects`
    on the input to keep the current behavior ([GH 56012](https://github.com/pandas-dev/pandas/issues/56012))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dtype inference when setting a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), cast explicitly instead ([GH 56102](https://github.com/pandas-dev/pandas/issues/56102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated including the groups in computations when using [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample"); pass `include_groups=False`
    to exclude the groups ([GH 7155](https://github.com/pandas-dev/pandas/issues/7155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated indexing an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with a boolean indexer of length zero ([GH 55820](https://github.com/pandas-dev/pandas/issues/55820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated not passing a tuple to `DataFrameGroupBy.get_group` or `SeriesGroupBy.get_group`
    when grouping by a length-1 list-like ([GH 25971](https://github.com/pandas-dev/pandas/issues/25971))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `AS` denoting frequency in `YearBegin` and strings `AS-DEC`,
    `AS-JAN`, etc. denoting annual frequencies with various fiscal year starts ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `A` denoting frequency in `YearEnd` and strings `A-DEC`, `A-JAN`,
    etc. denoting annual frequencies with various fiscal year ends ([GH 54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `BAS` denoting frequency in `BYearBegin` and strings `BAS-DEC`,
    `BAS-JAN`, etc. denoting annual frequencies with various fiscal year starts ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `BA` denoting frequency in `BYearEnd` and strings `BA-DEC`,
    `BA-JAN`, etc. denoting annual frequencies with various fiscal year ends ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `BH`, and `CBH` denoting frequencies in `Hour`, `BusinessHour`,
    `CustomBusinessHour` ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `S`, `U`, and `N` denoting units in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `T`, `S`, `L`, `U`, and `N` denoting units in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `T`, `S`, `L`, `U`, and `N` denoting frequencies in `Minute`,
    `Second`, `Milli`, `Micro`, `Nano` ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated support for combining parsed datetime columns in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") along with the `keep_date_col` keyword ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `DataFrameGroupBy.grouper` and `SeriesGroupBy.grouper`; these
    attributes will be removed in a future version of pandas ([GH 56521](https://github.com/pandas-dev/pandas/issues/56521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `Grouping` attributes `group_index`, `result_index`, and `group_arraylike`;
    these will be removed in a future version of pandas ([GH 56148](https://github.com/pandas-dev/pandas/issues/56148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `delim_whitespace` keyword in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), use `sep="\\s+"` instead ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `errors="ignore"` option in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime"), [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"), and [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric"); explicitly catch exceptions instead ([GH 54467](https://github.com/pandas-dev/pandas/issues/54467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `fastpath` keyword in the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor ([GH 20110](https://github.com/pandas-dev/pandas/issues/20110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `kind` keyword in [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"), explicitly cast the object’s `index` instead ([GH
    55895](https://github.com/pandas-dev/pandas/issues/55895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `ordinal` keyword in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"), use [`PeriodIndex.from_ordinals()`](../reference/api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals") instead ([GH 55960](https://github.com/pandas-dev/pandas/issues/55960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `unit` keyword in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") construction, use [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") instead ([GH 55499](https://github.com/pandas-dev/pandas/issues/55499))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `verbose` keyword in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype"); in a future version replace will change the values
    while preserving the categories. To change the categories, use `ser.cat.rename_categories`
    instead ([GH 55147](https://github.com/pandas-dev/pandas/issues/55147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Index.value_counts()`](../reference/api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts") with object dtype; in a future version these will
    not perform dtype inference on the resulting [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), do `result.index = result.index.infer_objects()` to retain the
    old behavior ([GH 56161](https://github.com/pandas-dev/pandas/issues/56161))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the default of `observed=False` in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table"); will be `True` in a future version ([GH 56236](https://github.com/pandas-dev/pandas/issues/56236))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the extension test classes `BaseNoReduceTests`, `BaseBooleanReduceTests`,
    and `BaseNumericReduceTests`, use `BaseReduceTests` instead ([GH 54663](https://github.com/pandas-dev/pandas/issues/54663))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the option `mode.data_manager` and the `ArrayManager`; only the `BlockManager`
    will be available in future versions ([GH 55043](https://github.com/pandas-dev/pandas/issues/55043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the previous implementation of [`DataFrame.stack`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"); specify `future_stack=True` to adopt the future version
    ([GH 53515](https://github.com/pandas-dev/pandas/issues/53515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chained assignment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In preparation of larger upcoming changes to the copy / view behaviour in pandas
    3.0 ([Copy-on-Write (CoW)](../user_guide/copy_on_write.html#copy-on-write), PDEP-7),
    we started deprecating *chained assignment*.
  prefs: []
  type: TYPE_NORMAL
- en: Chained assignment occurs when you try to update a pandas DataFrame or Series
    through two subsequent indexing operations. Depending on the type and order of
    those operations this currently does or does not work.
  prefs: []
  type: TYPE_NORMAL
- en: 'A typical example is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: 'This second example of chained assignment currently works to update the original
    `df`. This will no longer work in pandas 3.0, and therefore we started deprecating
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'You can fix this warning and ensure your code is ready for pandas 3.0 by removing
    the usage of chained assignment. Typically, this can be done by doing the assignment
    in a single step using for example `.loc`. For the example above, we can do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'The same deprecation applies to inplace methods that are done in a chained
    manner, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: 'When the goal is to update the column in the DataFrame `df`, the alternative
    here is to call the method on `df` itself, such as `df.fillna({"foo": 0}, inplace=True)`.'
  prefs: []
  type: TYPE_NORMAL
- en: See more details in the [migration guide](../user_guide/copy_on_write.html#copy-on-write-migration-guide).
  prefs: []
  type: TYPE_NORMAL
- en: Deprecate aliases `M`, `Q`, `Y`, etc. in favour of `ME`, `QE`, `YE`, etc. for
    offsets
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Deprecated the following frequency aliases ([GH 9586](https://github.com/pandas-dev/pandas/issues/9586)):'
  prefs: []
  type: TYPE_NORMAL
- en: '| offsets | deprecated aliases | new aliases |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `MonthEnd` | `M` | `ME` |'
  prefs: []
  type: TYPE_TB
- en: '| `BusinessMonthEnd` | `BM` | `BME` |'
  prefs: []
  type: TYPE_TB
- en: '| `SemiMonthEnd` | `SM` | `SME` |'
  prefs: []
  type: TYPE_TB
- en: '| `CustomBusinessMonthEnd` | `CBM` | `CBME` |'
  prefs: []
  type: TYPE_TB
- en: '| `QuarterEnd` | `Q` | `QE` |'
  prefs: []
  type: TYPE_TB
- en: '| `BQuarterEnd` | `BQ` | `BQE` |'
  prefs: []
  type: TYPE_TB
- en: '| `YearEnd` | `Y` | `YE` |'
  prefs: []
  type: TYPE_TB
- en: '| `BYearEnd` | `BY` | `BYE` |'
  prefs: []
  type: TYPE_TB
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Previous behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: '*Future behavior*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Deprecated automatic downcasting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Deprecated the automatic downcasting of object dtype results in a number of
    methods. These would silently change the dtype in a hard to predict manner since
    the behavior was value dependent. Additionally, pandas is moving away from silent
    dtype changes ([GH 54710](https://github.com/pandas-dev/pandas/issues/54710),
    [GH 54261](https://github.com/pandas-dev/pandas/issues/54261)).
  prefs: []
  type: TYPE_NORMAL
- en: 'These methods are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna"), [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.ffill()`](../reference/api/pandas.DataFrame.ffill.html#pandas.DataFrame.ffill
    "pandas.DataFrame.ffill"), [`Series.ffill()`](../reference/api/pandas.Series.ffill.html#pandas.Series.ffill
    "pandas.Series.ffill")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.bfill()`](../reference/api/pandas.DataFrame.bfill.html#pandas.DataFrame.bfill
    "pandas.DataFrame.bfill"), [`Series.bfill()`](../reference/api/pandas.Series.bfill.html#pandas.Series.bfill
    "pandas.Series.bfill")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.mask()`](../reference/api/pandas.DataFrame.mask.html#pandas.DataFrame.mask
    "pandas.DataFrame.mask"), [`Series.mask()`](../reference/api/pandas.Series.mask.html#pandas.Series.mask
    "pandas.Series.mask")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.where()`](../reference/api/pandas.DataFrame.where.html#pandas.DataFrame.where
    "pandas.DataFrame.where"), [`Series.where()`](../reference/api/pandas.Series.where.html#pandas.Series.where
    "pandas.Series.where")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DataFrame.clip()`](../reference/api/pandas.DataFrame.clip.html#pandas.DataFrame.clip
    "pandas.DataFrame.clip"), [`Series.clip()`](../reference/api/pandas.Series.clip.html#pandas.Series.clip
    "pandas.Series.clip")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Explicitly call [`DataFrame.infer_objects()`](../reference/api/pandas.DataFrame.infer_objects.html#pandas.DataFrame.infer_objects
    "pandas.DataFrame.infer_objects") to replicate the current behavior in the future.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: Or explicitly cast all-round floats to ints using `astype`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the following option to opt into the future behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: Other Deprecations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Changed `Timedelta.resolution_string()` to return `h`, `min`, `s`, `ms`, `us`,
    and `ns` instead of `H`, `T`, `S`, `L`, `U`, and `N`, for compatibility with respective
    deprecations in frequency aliases ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `offsets.Day.delta`, `offsets.Hour.delta`, `offsets.Minute.delta`,
    `offsets.Second.delta`, `offsets.Milli.delta`, `offsets.Micro.delta`, `offsets.Nano.delta`,
    use `pd.Timedelta(obj)` instead ([GH 55498](https://github.com/pandas-dev/pandas/issues/55498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`pandas.api.types.is_interval()`](../reference/api/pandas.api.types.is_interval.html#pandas.api.types.is_interval
    "pandas.api.types.is_interval") and `pandas.api.types.is_period()`, use `isinstance(obj,
    pd.Interval)` and `isinstance(obj, pd.Period)` instead ([GH 55264](https://github.com/pandas-dev/pandas/issues/55264))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`read_gbq()`](../reference/api/pandas.read_gbq.html#pandas.read_gbq
    "pandas.read_gbq") and [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq"). Use `pandas_gbq.read_gbq` and `pandas_gbq.to_gbq`
    instead [https://pandas-gbq.readthedocs.io/en/latest/api.html](https://pandas-gbq.readthedocs.io/en/latest/api.html)
    ([GH 55525](https://github.com/pandas-dev/pandas/issues/55525))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`DataFrameGroupBy.fillna()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.fillna.html#pandas.core.groupby.DataFrameGroupBy.fillna
    "pandas.core.groupby.DataFrameGroupBy.fillna") and [`SeriesGroupBy.fillna()`](../reference/api/pandas.core.groupby.SeriesGroupBy.fillna.html#pandas.core.groupby.SeriesGroupBy.fillna
    "pandas.core.groupby.SeriesGroupBy.fillna"); use [`DataFrameGroupBy.ffill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.ffill.html#pandas.core.groupby.DataFrameGroupBy.ffill
    "pandas.core.groupby.DataFrameGroupBy.ffill"), [`DataFrameGroupBy.bfill()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.bfill.html#pandas.core.groupby.DataFrameGroupBy.bfill
    "pandas.core.groupby.DataFrameGroupBy.bfill") for forward and backward filling
    or [`DataFrame.fillna()`](../reference/api/pandas.DataFrame.fillna.html#pandas.DataFrame.fillna
    "pandas.DataFrame.fillna") to fill with a single value (or the Series equivalents)
    ([GH 55718](https://github.com/pandas-dev/pandas/issues/55718))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DateOffset.is_anchored()`, use `obj.n == 1` for non-Tick subclasses
    (for Tick this was always False) ([GH 55388](https://github.com/pandas-dev/pandas/issues/55388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `DatetimeArray.__init__()` and `TimedeltaArray.__init__()`, use [`array()`](../reference/api/pandas.array.html#pandas.array
    "pandas.array") instead ([GH 55623](https://github.com/pandas-dev/pandas/issues/55623))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `Index.format()`, use `index.astype(str)` or `index.map(formatter)`
    instead ([GH 55413](https://github.com/pandas-dev/pandas/issues/55413))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.ravel()`](../reference/api/pandas.Series.ravel.html#pandas.Series.ravel
    "pandas.Series.ravel"), the underlying array is already 1D, so ravel is not necessary
    ([GH 52511](https://github.com/pandas-dev/pandas/issues/52511))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") with a [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") (and the ‘convention’ keyword), convert to [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") (with `.to_timestamp()`) before resampling instead ([GH
    53481](https://github.com/pandas-dev/pandas/issues/53481))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated [`Series.view()`](../reference/api/pandas.Series.view.html#pandas.Series.view
    "pandas.Series.view"), use [`Series.astype()`](../reference/api/pandas.Series.astype.html#pandas.Series.astype
    "pandas.Series.astype") instead to change the dtype ([GH 20251](https://github.com/pandas-dev/pandas/issues/20251))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `offsets.Tick.is_anchored()`, use `False` instead ([GH 55388](https://github.com/pandas-dev/pandas/issues/55388))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `core.internals` members `Block`, `ExtensionBlock`, and `DatetimeTZBlock`,
    use public APIs instead ([GH 55139](https://github.com/pandas-dev/pandas/issues/55139))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated `year`, `month`, `quarter`, `day`, `hour`, `minute`, and `second`
    keywords in the [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") constructor, use [`PeriodIndex.from_fields()`](../reference/api/pandas.PeriodIndex.from_fields.html#pandas.PeriodIndex.from_fields
    "pandas.PeriodIndex.from_fields") instead ([GH 55960](https://github.com/pandas-dev/pandas/issues/55960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated accepting a type as an argument in [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view"), call without any arguments instead ([GH 55709](https://github.com/pandas-dev/pandas/issues/55709))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-integer `periods` argument in [`date_range()`](../reference/api/pandas.date_range.html#pandas.date_range
    "pandas.date_range"), [`timedelta_range()`](../reference/api/pandas.timedelta_range.html#pandas.timedelta_range
    "pandas.timedelta_range"), [`period_range()`](../reference/api/pandas.period_range.html#pandas.period_range
    "pandas.period_range"), and [`interval_range()`](../reference/api/pandas.interval_range.html#pandas.interval_range
    "pandas.interval_range") ([GH 56036](https://github.com/pandas-dev/pandas/issues/56036))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_clipboard()`](../reference/api/pandas.DataFrame.to_clipboard.html#pandas.DataFrame.to_clipboard
    "pandas.DataFrame.to_clipboard") ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_csv()`](../reference/api/pandas.DataFrame.to_csv.html#pandas.DataFrame.to_csv
    "pandas.DataFrame.to_csv") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel") except `excel_writer` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_gbq()`](../reference/api/pandas.DataFrame.to_gbq.html#pandas.DataFrame.to_gbq
    "pandas.DataFrame.to_gbq") except `destination_table` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_html()`](../reference/api/pandas.DataFrame.to_html.html#pandas.DataFrame.to_html
    "pandas.DataFrame.to_html") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") except `path_or_buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_latex()`](../reference/api/pandas.DataFrame.to_latex.html#pandas.DataFrame.to_latex
    "pandas.DataFrame.to_latex") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_markdown()`](../reference/api/pandas.DataFrame.to_markdown.html#pandas.DataFrame.to_markdown
    "pandas.DataFrame.to_markdown") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_parquet()`](../reference/api/pandas.DataFrame.to_parquet.html#pandas.DataFrame.to_parquet
    "pandas.DataFrame.to_parquet") except `path` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_pickle()`](../reference/api/pandas.DataFrame.to_pickle.html#pandas.DataFrame.to_pickle
    "pandas.DataFrame.to_pickle") except `path` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_string()`](../reference/api/pandas.DataFrame.to_string.html#pandas.DataFrame.to_string
    "pandas.DataFrame.to_string") except `buf` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing non-keyword arguments in [`DataFrame.to_xml()`](../reference/api/pandas.DataFrame.to_xml.html#pandas.DataFrame.to_xml
    "pandas.DataFrame.to_xml") except `path_or_buffer` ([GH 54229](https://github.com/pandas-dev/pandas/issues/54229))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated allowing passing `BlockManager` objects to [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") or `SingleBlockManager` objects to [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") ([GH 52419](https://github.com/pandas-dev/pandas/issues/52419))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated behavior of [`Index.insert()`](../reference/api/pandas.Index.insert.html#pandas.Index.insert
    "pandas.Index.insert") with an object-dtype index silently performing type inference
    on the result, explicitly call `result.infer_objects(copy=False)` for the old
    behavior instead ([GH 51363](https://github.com/pandas-dev/pandas/issues/51363))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated casting non-datetimelike values (mainly strings) in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") and [`Index.isin()`](../reference/api/pandas.Index.isin.html#pandas.Index.isin
    "pandas.Index.isin") with `datetime64`, `timedelta64`, and [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") dtypes ([GH 53111](https://github.com/pandas-dev/pandas/issues/53111))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dtype inference in [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") and [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") constructors when giving a pandas input, call `.infer_objects`
    on the input to keep the current behavior ([GH 56012](https://github.com/pandas-dev/pandas/issues/56012))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated dtype inference when setting a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame"), cast explicitly instead ([GH 56102](https://github.com/pandas-dev/pandas/issues/56102))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated including the groups in computations when using [`DataFrameGroupBy.apply()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html#pandas.core.groupby.DataFrameGroupBy.apply
    "pandas.core.groupby.DataFrameGroupBy.apply") and [`DataFrameGroupBy.resample()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.resample.html#pandas.core.groupby.DataFrameGroupBy.resample
    "pandas.core.groupby.DataFrameGroupBy.resample"); pass `include_groups=False`
    to exclude the groups ([GH 7155](https://github.com/pandas-dev/pandas/issues/7155))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated indexing an [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with a boolean indexer of length zero ([GH 55820](https://github.com/pandas-dev/pandas/issues/55820))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated not passing a tuple to `DataFrameGroupBy.get_group` or `SeriesGroupBy.get_group`
    when grouping by a length-1 list-like ([GH 25971](https://github.com/pandas-dev/pandas/issues/25971))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `AS` denoting frequency in `YearBegin` and strings `AS-DEC`,
    `AS-JAN`, etc. denoting annual frequencies with various fiscal year starts ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `A` denoting frequency in `YearEnd` and strings `A-DEC`, `A-JAN`,
    etc. denoting annual frequencies with various fiscal year ends ([GH 54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `BAS` denoting frequency in `BYearBegin` and strings `BAS-DEC`,
    `BAS-JAN`, etc. denoting annual frequencies with various fiscal year starts ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated string `BA` denoting frequency in `BYearEnd` and strings `BA-DEC`,
    `BA-JAN`, etc. denoting annual frequencies with various fiscal year ends ([GH
    54275](https://github.com/pandas-dev/pandas/issues/54275))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `BH`, and `CBH` denoting frequencies in `Hour`, `BusinessHour`,
    `CustomBusinessHour` ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `S`, `U`, and `N` denoting units in [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `H`, `T`, `S`, `L`, `U`, and `N` denoting units in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated strings `T`, `S`, `L`, `U`, and `N` denoting frequencies in `Minute`,
    `Second`, `Milli`, `Micro`, `Nano` ([GH 52536](https://github.com/pandas-dev/pandas/issues/52536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated support for combining parsed datetime columns in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") along with the `keep_date_col` keyword ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `DataFrameGroupBy.grouper` and `SeriesGroupBy.grouper`; these
    attributes will be removed in a future version of pandas ([GH 56521](https://github.com/pandas-dev/pandas/issues/56521))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `Grouping` attributes `group_index`, `result_index`, and `group_arraylike`;
    these will be removed in a future version of pandas ([GH 56148](https://github.com/pandas-dev/pandas/issues/56148))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `delim_whitespace` keyword in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table"), use `sep="\\s+"` instead ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `errors="ignore"` option in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime"), [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta"), and [`to_numeric()`](../reference/api/pandas.to_numeric.html#pandas.to_numeric
    "pandas.to_numeric"); explicitly catch exceptions instead ([GH 54467](https://github.com/pandas-dev/pandas/issues/54467))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `fastpath` keyword in the [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") constructor ([GH 20110](https://github.com/pandas-dev/pandas/issues/20110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `kind` keyword in [`Series.resample()`](../reference/api/pandas.Series.resample.html#pandas.Series.resample
    "pandas.Series.resample") and [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample"), explicitly cast the object’s `index` instead ([GH
    55895](https://github.com/pandas-dev/pandas/issues/55895))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `ordinal` keyword in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex"), use [`PeriodIndex.from_ordinals()`](../reference/api/pandas.PeriodIndex.from_ordinals.html#pandas.PeriodIndex.from_ordinals
    "pandas.PeriodIndex.from_ordinals") instead ([GH 55960](https://github.com/pandas-dev/pandas/issues/55960))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `unit` keyword in [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") construction, use [`to_timedelta()`](../reference/api/pandas.to_timedelta.html#pandas.to_timedelta
    "pandas.to_timedelta") instead ([GH 55499](https://github.com/pandas-dev/pandas/issues/55499))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the `verbose` keyword in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") and [`read_table()`](../reference/api/pandas.read_table.html#pandas.read_table
    "pandas.read_table") ([GH 55569](https://github.com/pandas-dev/pandas/issues/55569))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") and [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") with [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype"); in a future version replace will change the values
    while preserving the categories. To change the categories, use `ser.cat.rename_categories`
    instead ([GH 55147](https://github.com/pandas-dev/pandas/issues/55147))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the behavior of [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Index.value_counts()`](../reference/api/pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts") with object dtype; in a future version these will
    not perform dtype inference on the resulting [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), do `result.index = result.index.infer_objects()` to retain the
    old behavior ([GH 56161](https://github.com/pandas-dev/pandas/issues/56161))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the default of `observed=False` in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table"); will be `True` in a future version ([GH 56236](https://github.com/pandas-dev/pandas/issues/56236))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the extension test classes `BaseNoReduceTests`, `BaseBooleanReduceTests`,
    and `BaseNumericReduceTests`, use `BaseReduceTests` instead ([GH 54663](https://github.com/pandas-dev/pandas/issues/54663))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the option `mode.data_manager` and the `ArrayManager`; only the `BlockManager`
    will be available in future versions ([GH 55043](https://github.com/pandas-dev/pandas/issues/55043))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deprecated the previous implementation of [`DataFrame.stack`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack"); specify `future_stack=True` to adopt the future version
    ([GH 53515](https://github.com/pandas-dev/pandas/issues/53515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Performance improvements'
  prefs: []
  type: TYPE_NORMAL
- en: Performance improvement in [`testing.assert_frame_equal()`](../reference/api/pandas.testing.assert_frame_equal.html#pandas.testing.assert_frame_equal
    "pandas.testing.assert_frame_equal") and [`testing.assert_series_equal()`](../reference/api/pandas.testing.assert_series_equal.html#pandas.testing.assert_series_equal
    "pandas.testing.assert_series_equal") ([GH 55949](https://github.com/pandas-dev/pandas/issues/55949),
    [GH 55971](https://github.com/pandas-dev/pandas/issues/55971))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") with `axis=1` and objects with unaligned indexes ([GH 55084](https://github.com/pandas-dev/pandas/issues/55084))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`get_dummies()`](../reference/api/pandas.get_dummies.html#pandas.get_dummies
    "pandas.get_dummies") ([GH 56089](https://github.com/pandas-dev/pandas/issues/56089))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge()`](../reference/api/pandas.merge.html#pandas.merge
    "pandas.merge") and [`merge_ordered()`](../reference/api/pandas.merge_ordered.html#pandas.merge_ordered
    "pandas.merge_ordered") when joining on sorted ascending keys ([GH 56115](https://github.com/pandas-dev/pandas/issues/56115))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when `by` is not `None` ([GH 55580](https://github.com/pandas-dev/pandas/issues/55580),
    [GH 55678](https://github.com/pandas-dev/pandas/issues/55678))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`read_stata()`](../reference/api/pandas.read_stata.html#pandas.read_stata
    "pandas.read_stata") for files with many variables ([GH 55515](https://github.com/pandas-dev/pandas/issues/55515))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") when aggregating pyarrow timestamp and duration dtypes
    ([GH 55031](https://github.com/pandas-dev/pandas/issues/55031))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.join()`](../reference/api/pandas.DataFrame.join.html#pandas.DataFrame.join
    "pandas.DataFrame.join") when joining on unordered categorical indexes ([GH 56345](https://github.com/pandas-dev/pandas/issues/56345))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") and [`Series.loc()`](../reference/api/pandas.Series.loc.html#pandas.Series.loc
    "pandas.Series.loc") when indexing with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 56062](https://github.com/pandas-dev/pandas/issues/56062))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") and [`Series.sort_index()`](../reference/api/pandas.Series.sort_index.html#pandas.Series.sort_index
    "pandas.Series.sort_index") when indexed by a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 54835](https://github.com/pandas-dev/pandas/issues/54835))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrame.to_dict()`](../reference/api/pandas.DataFrame.to_dict.html#pandas.DataFrame.to_dict
    "pandas.DataFrame.to_dict") on converting DataFrame to dictionary ([GH 50990](https://github.com/pandas-dev/pandas/issues/50990))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") ([GH 55108](https://github.com/pandas-dev/pandas/issues/55108))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Index.sort_values()`](../reference/api/pandas.Index.sort_values.html#pandas.Index.sort_values
    "pandas.Index.sort_values") when index is already sorted ([GH 56128](https://github.com/pandas-dev/pandas/issues/56128))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") when `method` is not `None` ([GH 55839](https://github.com/pandas-dev/pandas/issues/55839))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.duplicated()`](../reference/api/pandas.Series.duplicated.html#pandas.Series.duplicated
    "pandas.Series.duplicated") for pyarrow dtypes ([GH 55255](https://github.com/pandas-dev/pandas/issues/55255))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str.get_dummies()`](../reference/api/pandas.Series.str.get_dummies.html#pandas.Series.str.get_dummies
    "pandas.Series.str.get_dummies") when dtype is `"string[pyarrow]"` or `"string[pyarrow_numpy]"`
    ([GH 56110](https://github.com/pandas-dev/pandas/issues/56110))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.str()`](../reference/api/pandas.Series.str.html#pandas.Series.str
    "pandas.Series.str") methods ([GH 55736](https://github.com/pandas-dev/pandas/issues/55736))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`Series.value_counts()`](../reference/api/pandas.Series.value_counts.html#pandas.Series.value_counts
    "pandas.Series.value_counts") and [`Series.mode()`](../reference/api/pandas.Series.mode.html#pandas.Series.mode
    "pandas.Series.mode") for masked dtypes ([GH 54984](https://github.com/pandas-dev/pandas/issues/54984),
    [GH 55340](https://github.com/pandas-dev/pandas/issues/55340))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`DataFrameGroupBy.nunique()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.nunique.html#pandas.core.groupby.DataFrameGroupBy.nunique
    "pandas.core.groupby.DataFrameGroupBy.nunique") and [`SeriesGroupBy.nunique()`](../reference/api/pandas.core.groupby.SeriesGroupBy.nunique.html#pandas.core.groupby.SeriesGroupBy.nunique
    "pandas.core.groupby.SeriesGroupBy.nunique") ([GH 55972](https://github.com/pandas-dev/pandas/issues/55972))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement in [`SeriesGroupBy.idxmax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax"), [`SeriesGroupBy.idxmin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin") ([GH 54234](https://github.com/pandas-dev/pandas/issues/54234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when hashing a nullable extension array ([GH 56507](https://github.com/pandas-dev/pandas/issues/56507))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when indexing into a non-unique index ([GH 55816](https://github.com/pandas-dev/pandas/issues/55816))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when indexing with more than 4 keys ([GH 54550](https://github.com/pandas-dev/pandas/issues/54550))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvement when localizing time to UTC ([GH 55241](https://github.com/pandas-dev/pandas/issues/55241))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Bug fixes'
  prefs: []
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.isin()` raising `InvalidIndexError` for categorical containing
    overlapping [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values ([GH 34974](https://github.com/pandas-dev/pandas/issues/34974))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalDtype.__eq__()` returning `False` for unordered categorical
    data with mixed types ([GH 55468](https://github.com/pandas-dev/pandas/issues/55468))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when casting `pa.dictionary` to [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") using a `pa.DictionaryArray` as categories ([GH 56672](https://github.com/pandas-dev/pandas/issues/56672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") construction when passing both a `tz` and either `dayfirst`
    or `yearfirst` ignoring dayfirst/yearfirst ([GH 55813](https://github.com/pandas-dev/pandas/issues/55813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing an object-dtype ndarray of float objects
    and a `tz` incorrectly localizing the result ([GH 55780](https://github.com/pandas-dev/pandas/issues/55780))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype and comparison values that are all `NaT` incorrectly
    returning all-`False` even if the series contains `NaT` entries ([GH 56427](https://github.com/pandas-dev/pandas/issues/56427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    raising `AttributeError` when concatenating all-NA DataFrame with [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype DataFrame ([GH 52093](https://github.com/pandas-dev/pandas/issues/52093))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_extension_array_equal()`](../reference/api/pandas.testing.assert_extension_array_equal.html#pandas.testing.assert_extension_array_equal
    "pandas.testing.assert_extension_array_equal") that could use the wrong unit when
    comparing resolutions ([GH 55730](https://github.com/pandas-dev/pandas/issues/55730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing a list of mixed-string-and-numeric types
    incorrectly raising ([GH 55780](https://github.com/pandas-dev/pandas/issues/55780))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing mixed-type objects with a mix of timezones
    or mix of timezone-awareness failing to raise `ValueError` ([GH 55693](https://github.com/pandas-dev/pandas/issues/55693))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick.delta()` with very large ticks raising `OverflowError` instead
    of `OutOfBoundsTimedelta` ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.shift()` with non-nanosecond resolution incorrectly returning
    with nanosecond resolution ([GH 56117](https://github.com/pandas-dev/pandas/issues/56117))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.union()` returning object dtype for tz-aware indexes with
    the same timezone but different units ([GH 55238](https://github.com/pandas-dev/pandas/issues/55238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.is_monotonic_increasing()`](../reference/api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") and [`Index.is_monotonic_decreasing()`](../reference/api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") always caching [`Index.is_unique()`](../reference/api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") as `True` when first value in index is `NaT` ([GH 55755](https://github.com/pandas-dev/pandas/issues/55755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view") to a datetime64 dtype with non-supported resolution incorrectly
    raising ([GH 55710](https://github.com/pandas-dev/pandas/issues/55710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt.round()`](../reference/api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round") with non-nanosecond resolution and `NaT` entries incorrectly
    raising `OverflowError` ([GH 56158](https://github.com/pandas-dev/pandas/issues/56158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") with non-nanosecond resolution dtypes and higher-resolution
    vector values returning incorrect (internally-corrupted) results ([GH 56410](https://github.com/pandas-dev/pandas/issues/56410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.unit()`](../reference/api/pandas.Timestamp.unit.html#pandas.Timestamp.unit
    "pandas.Timestamp.unit") being inferred incorrectly from an ISO8601 format string
    with minute or hour resolution and a timezone offset ([GH 56208](https://github.com/pandas-dev/pandas/issues/56208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.astype` converting from a higher-resolution `datetime64` dtype to a
    lower-resolution `datetime64` dtype (e.g. `datetime64[us]->datetime64[ms]`) silently
    overflowing with values near the lower implementation bound ([GH 55979](https://github.com/pandas-dev/pandas/issues/55979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding or subtracting a `Week` offset to a `datetime64` [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column with non-nanosecond resolution returning incorrect results ([GH 55583](https://github.com/pandas-dev/pandas/issues/55583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of `BusinessDay` offset with `offset` attribute
    to non-nanosecond [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column giving incorrect results ([GH 55608](https://github.com/pandas-dev/pandas/issues/55608))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of `DateOffset` objects with microsecond components
    to `datetime64` [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    columns with non-nanosecond resolution ([GH 55595](https://github.com/pandas-dev/pandas/issues/55595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of very large [`Tick`](../reference/api/pandas.tseries.offsets.Tick.html#pandas.tseries.offsets.Tick
    "pandas.tseries.offsets.Tick") objects with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects raising `OverflowError` instead of `OutOfBoundsTimedelta`
    ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") and inputs that would be out of bounds with nanosecond
    resolution incorrectly raising `OutOfBoundsDatetime` ([GH 54620](https://github.com/pandas-dev/pandas/issues/54620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond `datetime64` (or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")) from mixed-numeric inputs treating those as nanoseconds
    instead of as multiples of the dtype’s unit (which would happen with non-mixed
    numeric inputs) ([GH 56004](https://github.com/pandas-dev/pandas/issues/56004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond `datetime64` dtype and inputs that would
    be out of bounds for a `datetime64[ns]` incorrectly raising `OutOfBoundsDatetime`
    ([GH 55756](https://github.com/pandas-dev/pandas/issues/55756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with nanosecond resolution with non-ISO8601
    formats incorrectly truncating sub-microsecond components ([GH 56051](https://github.com/pandas-dev/pandas/issues/56051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with sub-second resolution and trailing zeros
    incorrectly inferring second or millisecond resolution ([GH 55737](https://github.com/pandas-dev/pandas/issues/55737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the results of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with an floating-dtype argument with `unit` not matching
    the pointwise results of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") ([GH 56037](https://github.com/pandas-dev/pandas/issues/56037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") would raise an error when concatenating `datetime64` columns
    with differing resolutions ([GH 53641](https://github.com/pandas-dev/pandas/issues/53641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") construction raising `OverflowError` instead of `OutOfBoundsTimedelta`
    ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering (`__repr__`) of [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with timedelta64 values with non-nanosecond resolution entries
    that are all multiples of 24 hours failing to use the compact representation used
    in the nanosecond cases ([GH 55405](https://github.com/pandas-dev/pandas/issues/55405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `AbstractHolidayCalendar` where timezone data was not propagated when
    computing holiday observances ([GH 54580](https://github.com/pandas-dev/pandas/issues/54580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") construction with an ambiguous value and a `pytz` timezone
    failing to raise `pytz.AmbiguousTimeError` ([GH 55657](https://github.com/pandas-dev/pandas/issues/55657))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") with `nonexistent="shift_forward` around UTC+0
    during DST ([GH 51501](https://github.com/pandas-dev/pandas/issues/51501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` causing rounding errors for large integers
    ([GH 52505](https://github.com/pandas-dev/pandas/issues/52505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__floordiv__()` and `Series.__truediv__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with integral dtypes raising for large divisors ([GH 56706](https://github.com/pandas-dev/pandas/issues/56706))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__floordiv__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with integral dtypes raising for large values ([GH 56645](https://github.com/pandas-dev/pandas/issues/56645))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.pow()`](../reference/api/pandas.Series.pow.html#pandas.Series.pow
    "pandas.Series.pow") not filling missing values correctly ([GH 55512](https://github.com/pandas-dev/pandas/issues/55512))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") matching float `0.0` with `False` and vice versa ([GH
    55398](https://github.com/pandas-dev/pandas/issues/55398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") raising for nullable boolean dtype ([GH 55936](https://github.com/pandas-dev/pandas/issues/55936))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when called with `str` on unpickled array - the array
    might change in-place ([GH 54654](https://github.com/pandas-dev/pandas/issues/54654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") where `errors="ignore"` had no effect for extension
    types ([GH 54654](https://github.com/pandas-dev/pandas/issues/54654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") not converting all NA column to `null[pyarrow]`
    ([GH 55346](https://github.com/pandas-dev/pandas/issues/55346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in :meth:`DataFrame.loc` was not throwing “incompatible dtype warning” (see
    [PDEP6](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html)) when assigning
    a `Series` with a different dtype using a full column setter (e.g. `df.loc[:,
    'a'] = incompatible_value`) ([GH 39584](https://github.com/pandas-dev/pandas/issues/39584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") while checking object array with no elements
    is of the string dtype ([GH 54661](https://github.com/pandas-dev/pandas/issues/54661))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") failing when `engine="numba"` and columns or index have
    `StringDtype` ([GH 56189](https://github.com/pandas-dev/pandas/issues/56189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") not matching [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `string[pyarrow_numpy]` dtype ([GH 56106](https://github.com/pandas-dev/pandas/issues/56106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.str.cat()` always casting result to object dtype ([GH 56157](https://github.com/pandas-dev/pandas/issues/56157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__mul__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` dtype and `string[pyarrow]` for the
    pyarrow backend ([GH 51970](https://github.com/pandas-dev/pandas/issues/51970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.find()`](../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find") when `start < 0` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` ([GH 56411](https://github.com/pandas-dev/pandas/issues/56411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.fullmatch()`](../reference/api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch") when `dtype=pandas.ArrowDtype(pyarrow.string()))`
    allows partial matches when regex ends in literal //$ ([GH 56652](https://github.com/pandas-dev/pandas/issues/56652))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") when `n < 0` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` ([GH 56404](https://github.com/pandas-dev/pandas/issues/56404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.startswith()`](../reference/api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith") and [`Series.str.endswith()`](../reference/api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith") with arguments of type `tuple[str, ...]` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` dtype ([GH 56579](https://github.com/pandas-dev/pandas/issues/56579))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.startswith()`](../reference/api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith") and [`Series.str.endswith()`](../reference/api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith") with arguments of type `tuple[str, ...]` for `string[pyarrow]`
    ([GH 54942](https://github.com/pandas-dev/pandas/issues/54942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison operations for `dtype="string[pyarrow_numpy]"` raising if
    dtypes can’t be compared ([GH 56008](https://github.com/pandas-dev/pandas/issues/56008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    `__repr__` not displaying UTC offsets for [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") bounds. Additionally the hour, minute and second components
    will now be shown ([GH 55015](https://github.com/pandas-dev/pandas/issues/55015))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.factorize()` and [`Series.factorize()`](../reference/api/pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") with datetime64 or timedelta64 intervals not preserving
    non-nanosecond units ([GH 56099](https://github.com/pandas-dev/pandas/issues/56099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.from_arrays()`](../reference/api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays") when passed `datetime64` or `timedelta64`
    arrays with mismatched resolutions constructing an invalid `IntervalArray` object
    ([GH 55714](https://github.com/pandas-dev/pandas/issues/55714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.from_tuples()`](../reference/api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples") raising if subtype is a nullable extension
    dtype ([GH 56765](https://github.com/pandas-dev/pandas/issues/56765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") with datetime or timedelta intervals incorrectly
    matching on integer targets ([GH 47772](https://github.com/pandas-dev/pandas/issues/47772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") with timezone-aware datetime intervals incorrectly
    matching on a sequence of timezone-naive targets ([GH 47772](https://github.com/pandas-dev/pandas/issues/47772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") using a slice incorrectly raising ([GH 54722](https://github.com/pandas-dev/pandas/issues/54722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") mutating a boolean indexer when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 56635](https://github.com/pandas-dev/pandas/issues/56635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with extension dtype into NumPy dtype ([GH 55604](https://github.com/pandas-dev/pandas/issues/55604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") not returning a unique set of values when `other` is
    empty or `other` is considered non-comparable ([GH 55113](https://github.com/pandas-dev/pandas/issues/55113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") values into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with numpy dtypes raising `RecursionError` ([GH 52927](https://github.com/pandas-dev/pandas/issues/52927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when creating new column with missing values when setting a single
    string value ([GH 56204](https://github.com/pandas-dev/pandas/issues/56204))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") wasn’t updating in-place for tz-aware datetime64 dtypes
    ([GH 56227](https://github.com/pandas-dev/pandas/issues/56227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") not raising `ValueError` when `method` provided
    and index is non-monotonic ([GH 53452](https://github.com/pandas-dev/pandas/issues/53452))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `engine="python"` did not respect `chunksize` arg when
    `skiprows` was specified ([GH 56323](https://github.com/pandas-dev/pandas/issues/56323))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `engine="python"` was causing a `TypeError` when a callable
    `skiprows` and a chunk size was specified ([GH 55677](https://github.com/pandas-dev/pandas/issues/55677))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `on_bad_lines="warn"` would write to `stderr` instead
    of raising a Python warning; this now yields a [`errors.ParserWarning`](../reference/api/pandas.errors.ParserWarning.html#pandas.errors.ParserWarning
    "pandas.errors.ParserWarning") ([GH 54296](https://github.com/pandas-dev/pandas/issues/54296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` where `quotechar` was ignored ([GH
    52266](https://github.com/pandas-dev/pandas/issues/52266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` where `usecols` wasn’t working with
    a CSV with no headers ([GH 54459](https://github.com/pandas-dev/pandas/issues/54459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), with `engine="xlrd"` (`xls` files) erroring when the file
    contains `NaN` or `Inf` ([GH 54564](https://github.com/pandas-dev/pandas/issues/54564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") not handling dtype conversion properly if `infer_string` is
    set ([GH 56195](https://github.com/pandas-dev/pandas/issues/56195))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), with `OdsWriter` (`ods` files) writing Boolean/string
    value ([GH 54994](https://github.com/pandas-dev/pandas/issues/54994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") with `datetime64` dtypes with non-nanosecond resolution failing
    to round-trip correctly ([GH 55622](https://github.com/pandas-dev/pandas/issues/55622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") raising for extension dtypes ([GH 54671](https://github.com/pandas-dev/pandas/issues/54671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") with `engine="odf"` (`ods` files) when a string cell contains
    an annotation ([GH 55200](https://github.com/pandas-dev/pandas/issues/55200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") with an ODS file without cached formatted cell for float
    values ([GH 55219](https://github.com/pandas-dev/pandas/issues/55219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") would raise an `OverflowError` instead of a `TypeError`
    with unsupported NumPy types ([GH 55403](https://github.com/pandas-dev/pandas/issues/55403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") construction when more than one of `data`, `ordinal` and
    `**fields` are passed failing to raise `ValueError` ([GH 55961](https://github.com/pandas-dev/pandas/issues/55961))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    addition silently wrapping around instead of raising `OverflowError` ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in casting from [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `astype` to `datetime64` or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") with non-nanosecond unit incorrectly returning with
    nanosecond unit ([GH 55958](https://github.com/pandas-dev/pandas/issues/55958))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") with `vert=False` and a Matplotlib `Axes` created
    with `sharey=True` ([GH 54941](https://github.com/pandas-dev/pandas/issues/54941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") discarding string columns ([GH 56142](https://github.com/pandas-dev/pandas/issues/56142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when reusing an `ax` object failing to raise when a `how`
    keyword is passed ([GH 55953](https://github.com/pandas-dev/pandas/issues/55953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`SeriesGroupBy.idxmin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin"), and [`SeriesGroupBy.idxmax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax") would not retain [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") dtype when the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") that contained NA values ([GH 54234](https://github.com/pandas-dev/pandas/issues/54234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") when `observed=False` and `f="idxmin"`
    or `f="idxmax"` would incorrectly raise on unobserved categories ([GH 54234](https://github.com/pandas-dev/pandas/issues/54234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") could result in incorrect sorting
    if the columns of the DataFrame or name of the Series are integers ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") would not respect `sort=False`
    in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") would sort by proportions rather
    than frequencies when `sort=True` and `normalize=True` ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.asfreq()`](../reference/api/pandas.DataFrame.asfreq.html#pandas.DataFrame.asfreq
    "pandas.DataFrame.asfreq") and [`Series.asfreq()`](../reference/api/pandas.Series.asfreq.html#pandas.Series.asfreq
    "pandas.Series.asfreq") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with non-nanosecond resolution incorrectly converting
    to nanosecond resolution ([GH 55958](https://github.com/pandas-dev/pandas/issues/55958))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") when passed `times` with non-nanosecond `datetime64` or
    [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype ([GH 56262](https://github.com/pandas-dev/pandas/issues/56262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where grouping by a combination of `Decimal` and NA values
    would fail when `sort=True` ([GH 54847](https://github.com/pandas-dev/pandas/issues/54847))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") for DataFrame subclasses when selecting a subset of
    columns to apply the function to ([GH 56761](https://github.com/pandas-dev/pandas/issues/56761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") not respecting `closed` and `label` arguments for
    [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") ([GH 55282](https://github.com/pandas-dev/pandas/issues/55282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") when resampling on a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of `pyarrow.timestamp` or `pyarrow.duration` type ([GH 55989](https://github.com/pandas-dev/pandas/issues/55989))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where bin edges were not correct for [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") ([GH 55281](https://github.com/pandas-dev/pandas/issues/55281))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where bin edges were not correct for [`MonthBegin`](../reference/api/pandas.tseries.offsets.MonthBegin.html#pandas.tseries.offsets.MonthBegin
    "pandas.tseries.offsets.MonthBegin") ([GH 55271](https://github.com/pandas-dev/pandas/issues/55271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") where duplicate datetimelike indexes are treated as consecutive
    rather than equal with `closed='left'` and `closed='neither'` ([GH 20712](https://github.com/pandas-dev/pandas/issues/20712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") where either the `index` or `on` column was [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.timestamp` type ([GH 55849](https://github.com/pandas-dev/pandas/issues/55849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    ignoring `sort` parameter when passed [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") indexes ([GH 54769](https://github.com/pandas-dev/pandas/issues/54769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    renaming [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    when `ignore_index=False` ([GH 15047](https://github.com/pandas-dev/pandas/issues/15047))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `TypeError` when `by` dtype is not `object`, `int64`,
    or `uint64` ([GH 22794](https://github.com/pandas-dev/pandas/issues/22794))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising incorrect error for string dtype ([GH 56444](https://github.com/pandas-dev/pandas/issues/56444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when using a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") tolerance on a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") column ([GH 56486](https://github.com/pandas-dev/pandas/issues/56486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not raising when merging datetime columns with timedelta columns ([GH 56455](https://github.com/pandas-dev/pandas/issues/56455))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not raising when merging string columns with numeric columns ([GH 56441](https://github.com/pandas-dev/pandas/issues/56441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not sorting for new string dtype ([GH 56442](https://github.com/pandas-dev/pandas/issues/56442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    returning columns in incorrect order when left and/or right is empty ([GH 51929](https://github.com/pandas-dev/pandas/issues/51929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") where an exception was raised if `var_name` was not a
    string ([GH 55948](https://github.com/pandas-dev/pandas/issues/55948))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") where it would not preserve the datetime ([GH 55254](https://github.com/pandas-dev/pandas/issues/55254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") where the row margin is incorrect when the columns
    have numeric names ([GH 26568](https://github.com/pandas-dev/pandas/issues/26568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") with numeric columns and extension dtype for data ([GH
    56528](https://github.com/pandas-dev/pandas/issues/56528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") with `future_stack=True` would not preserve NA values
    in the index ([GH 56573](https://github.com/pandas-dev/pandas/issues/56573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.take()` when using a different fill value than the
    array’s fill value ([GH 55181](https://github.com/pandas-dev/pandas/issues/55181))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.__dataframe__()`](../reference/api/pandas.DataFrame.__dataframe__.html#pandas.DataFrame.__dataframe__
    "pandas.DataFrame.__dataframe__") did not support pyarrow large strings ([GH 56702](https://github.com/pandas-dev/pandas/issues/56702))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") when formatting percentiles in the resulting percentile
    99.999% is rounded to 100% ([GH 55765](https://github.com/pandas-dev/pandas/issues/55765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") where it raised `NotImplementedError`
    when handling empty string columns ([GH 56703](https://github.com/pandas-dev/pandas/issues/56703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") and
    [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") with `datetime64`
    dtype values with non-nanosecond units incorrectly returning nanosecond-unit bins
    ([GH 56101](https://github.com/pandas-dev/pandas/issues/56101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") incorrectly
    allowing cutting of timezone-aware datetimes with timezone-naive bins ([GH 54964](https://github.com/pandas-dev/pandas/issues/54964))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") and [`DatetimeIndex.inferred_freq()`](../reference/api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") with weekly frequencies and non-nanosecond
    resolutions ([GH 55609](https://github.com/pandas-dev/pandas/issues/55609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") where passing `raw=True` ignored `args` passed to the
    applied function ([GH 55009](https://github.com/pandas-dev/pandas/issues/55009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") which would always sort the rows of the created
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    ([GH 55683](https://github.com/pandas-dev/pandas/issues/55683))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") when passing `axis="columns"` and `ignore_index=True`
    raising a `ValueError` ([GH 56478](https://github.com/pandas-dev/pandas/issues/56478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering `inf` values inside a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the `use_inf_as_na` option enabled ([GH 55483](https://github.com/pandas-dev/pandas/issues/55483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when one of the index level’s names is 0 not having that
    name displayed ([GH 55415](https://github.com/pandas-dev/pandas/issues/55415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the error message when assigning an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to a column ([GH 55956](https://github.com/pandas-dev/pandas/issues/55956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when time-like strings were being cast to [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.time64` type ([GH 56463](https://github.com/pandas-dev/pandas/issues/56463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a spurious deprecation warning from `numba` >= 0.58.0 when passing a numpy
    ufunc in `core.window.Rolling.apply` with `engine="numba"` ([GH 55247](https://github.com/pandas-dev/pandas/issues/55247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorical
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Categorical.isin()` raising `InvalidIndexError` for categorical containing
    overlapping [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval
    "pandas.Interval") values ([GH 34974](https://github.com/pandas-dev/pandas/issues/34974))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `CategoricalDtype.__eq__()` returning `False` for unordered categorical
    data with mixed types ([GH 55468](https://github.com/pandas-dev/pandas/issues/55468))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when casting `pa.dictionary` to [`CategoricalDtype`](../reference/api/pandas.CategoricalDtype.html#pandas.CategoricalDtype
    "pandas.CategoricalDtype") using a `pa.DictionaryArray` as categories ([GH 56672](https://github.com/pandas-dev/pandas/issues/56672))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Datetimelike
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") construction when passing both a `tz` and either `dayfirst`
    or `yearfirst` ignoring dayfirst/yearfirst ([GH 55813](https://github.com/pandas-dev/pandas/issues/55813))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing an object-dtype ndarray of float objects
    and a `tz` incorrectly localizing the result ([GH 55780](https://github.com/pandas-dev/pandas/issues/55780))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.isin()`](../reference/api/pandas.Series.isin.html#pandas.Series.isin
    "pandas.Series.isin") with [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype and comparison values that are all `NaT` incorrectly
    returning all-`False` even if the series contains `NaT` entries ([GH 56427](https://github.com/pandas-dev/pandas/issues/56427))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    raising `AttributeError` when concatenating all-NA DataFrame with [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype DataFrame ([GH 52093](https://github.com/pandas-dev/pandas/issues/52093))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`testing.assert_extension_array_equal()`](../reference/api/pandas.testing.assert_extension_array_equal.html#pandas.testing.assert_extension_array_equal
    "pandas.testing.assert_extension_array_equal") that could use the wrong unit when
    comparing resolutions ([GH 55730](https://github.com/pandas-dev/pandas/issues/55730))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing a list of mixed-string-and-numeric types
    incorrectly raising ([GH 55780](https://github.com/pandas-dev/pandas/issues/55780))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") and [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") when passing mixed-type objects with a mix of timezones
    or mix of timezone-awareness failing to raise `ValueError` ([GH 55693](https://github.com/pandas-dev/pandas/issues/55693))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Tick.delta()` with very large ticks raising `OverflowError` instead
    of `OutOfBoundsTimedelta` ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.shift()` with non-nanosecond resolution incorrectly returning
    with nanosecond resolution ([GH 56117](https://github.com/pandas-dev/pandas/issues/56117))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `DatetimeIndex.union()` returning object dtype for tz-aware indexes with
    the same timezone but different units ([GH 55238](https://github.com/pandas-dev/pandas/issues/55238))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.is_monotonic_increasing()`](../reference/api/pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") and [`Index.is_monotonic_decreasing()`](../reference/api/pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") always caching [`Index.is_unique()`](../reference/api/pandas.Index.is_unique.html#pandas.Index.is_unique
    "pandas.Index.is_unique") as `True` when first value in index is `NaT` ([GH 55755](https://github.com/pandas-dev/pandas/issues/55755))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.view()`](../reference/api/pandas.Index.view.html#pandas.Index.view
    "pandas.Index.view") to a datetime64 dtype with non-supported resolution incorrectly
    raising ([GH 55710](https://github.com/pandas-dev/pandas/issues/55710))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.dt.round()`](../reference/api/pandas.Series.dt.round.html#pandas.Series.dt.round
    "pandas.Series.dt.round") with non-nanosecond resolution and `NaT` entries incorrectly
    raising `OverflowError` ([GH 56158](https://github.com/pandas-dev/pandas/issues/56158))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.fillna()`](../reference/api/pandas.Series.fillna.html#pandas.Series.fillna
    "pandas.Series.fillna") with non-nanosecond resolution dtypes and higher-resolution
    vector values returning incorrect (internally-corrupted) results ([GH 56410](https://github.com/pandas-dev/pandas/issues/56410))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.unit()`](../reference/api/pandas.Timestamp.unit.html#pandas.Timestamp.unit
    "pandas.Timestamp.unit") being inferred incorrectly from an ISO8601 format string
    with minute or hour resolution and a timezone offset ([GH 56208](https://github.com/pandas-dev/pandas/issues/56208))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `.astype` converting from a higher-resolution `datetime64` dtype to a
    lower-resolution `datetime64` dtype (e.g. `datetime64[us]->datetime64[ms]`) silently
    overflowing with values near the lower implementation bound ([GH 55979](https://github.com/pandas-dev/pandas/issues/55979))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in adding or subtracting a `Week` offset to a `datetime64` [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column with non-nanosecond resolution returning incorrect results ([GH 55583](https://github.com/pandas-dev/pandas/issues/55583))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of `BusinessDay` offset with `offset` attribute
    to non-nanosecond [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    column giving incorrect results ([GH 55608](https://github.com/pandas-dev/pandas/issues/55608))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of `DateOffset` objects with microsecond components
    to `datetime64` [`Index`](../reference/api/pandas.Index.html#pandas.Index "pandas.Index"),
    [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series"),
    or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    columns with non-nanosecond resolution ([GH 55595](https://github.com/pandas-dev/pandas/issues/55595))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in addition or subtraction of very large [`Tick`](../reference/api/pandas.tseries.offsets.Tick.html#pandas.tseries.offsets.Tick
    "pandas.tseries.offsets.Tick") objects with [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") or [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") objects raising `OverflowError` instead of `OutOfBoundsTimedelta`
    ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") and inputs that would be out of bounds with nanosecond
    resolution incorrectly raising `OutOfBoundsDatetime` ([GH 54620](https://github.com/pandas-dev/pandas/issues/54620))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond `datetime64` (or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype")) from mixed-numeric inputs treating those as nanoseconds
    instead of as multiples of the dtype’s unit (which would happen with non-mixed
    numeric inputs) ([GH 56004](https://github.com/pandas-dev/pandas/issues/56004))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in creating a [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index"), [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series"), or [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with a non-nanosecond `datetime64` dtype and inputs that would
    be out of bounds for a `datetime64[ns]` incorrectly raising `OutOfBoundsDatetime`
    ([GH 55756](https://github.com/pandas-dev/pandas/issues/55756))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with nanosecond resolution with non-ISO8601
    formats incorrectly truncating sub-microsecond components ([GH 56051](https://github.com/pandas-dev/pandas/issues/56051))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in parsing datetime strings with sub-second resolution and trailing zeros
    incorrectly inferring second or millisecond resolution ([GH 55737](https://github.com/pandas-dev/pandas/issues/55737))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the results of [`to_datetime()`](../reference/api/pandas.to_datetime.html#pandas.to_datetime
    "pandas.to_datetime") with an floating-dtype argument with `unit` not matching
    the pointwise results of [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") ([GH 56037](https://github.com/pandas-dev/pandas/issues/56037))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed regression where [`concat()`](../reference/api/pandas.concat.html#pandas.concat
    "pandas.concat") would raise an error when concatenating `datetime64` columns
    with differing resolutions ([GH 53641](https://github.com/pandas-dev/pandas/issues/53641))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timedelta
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") construction raising `OverflowError` instead of `OutOfBoundsTimedelta`
    ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering (`__repr__`) of [`TimedeltaIndex`](../reference/api/pandas.TimedeltaIndex.html#pandas.TimedeltaIndex
    "pandas.TimedeltaIndex") and [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with timedelta64 values with non-nanosecond resolution entries
    that are all multiples of 24 hours failing to use the compact representation used
    in the nanosecond cases ([GH 55405](https://github.com/pandas-dev/pandas/issues/55405))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timezones
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `AbstractHolidayCalendar` where timezone data was not propagated when
    computing holiday observances ([GH 54580](https://github.com/pandas-dev/pandas/issues/54580))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") construction with an ambiguous value and a `pytz` timezone
    failing to raise `pytz.AmbiguousTimeError` ([GH 55657](https://github.com/pandas-dev/pandas/issues/55657))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Timestamp.tz_localize()`](../reference/api/pandas.Timestamp.tz_localize.html#pandas.Timestamp.tz_localize
    "pandas.Timestamp.tz_localize") with `nonexistent="shift_forward` around UTC+0
    during DST ([GH 51501](https://github.com/pandas-dev/pandas/issues/51501))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numeric
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` causing rounding errors for large integers
    ([GH 52505](https://github.com/pandas-dev/pandas/issues/52505))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__floordiv__()` and `Series.__truediv__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with integral dtypes raising for large divisors ([GH 56706](https://github.com/pandas-dev/pandas/issues/56706))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__floordiv__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with integral dtypes raising for large values ([GH 56645](https://github.com/pandas-dev/pandas/issues/56645))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.pow()`](../reference/api/pandas.Series.pow.html#pandas.Series.pow
    "pandas.Series.pow") not filling missing values correctly ([GH 55512](https://github.com/pandas-dev/pandas/issues/55512))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.replace()`](../reference/api/pandas.Series.replace.html#pandas.Series.replace
    "pandas.Series.replace") and [`DataFrame.replace()`](../reference/api/pandas.DataFrame.replace.html#pandas.DataFrame.replace
    "pandas.DataFrame.replace") matching float `0.0` with `False` and vice versa ([GH
    55398](https://github.com/pandas-dev/pandas/issues/55398))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.round()`](../reference/api/pandas.Series.round.html#pandas.Series.round
    "pandas.Series.round") raising for nullable boolean dtype ([GH 55936](https://github.com/pandas-dev/pandas/issues/55936))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conversion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") when called with `str` on unpickled array - the array
    might change in-place ([GH 54654](https://github.com/pandas-dev/pandas/issues/54654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.astype()`](../reference/api/pandas.DataFrame.astype.html#pandas.DataFrame.astype
    "pandas.DataFrame.astype") where `errors="ignore"` had no effect for extension
    types ([GH 54654](https://github.com/pandas-dev/pandas/issues/54654))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.convert_dtypes()`](../reference/api/pandas.Series.convert_dtypes.html#pandas.Series.convert_dtypes
    "pandas.Series.convert_dtypes") not converting all NA column to `null[pyarrow]`
    ([GH 55346](https://github.com/pandas-dev/pandas/issues/55346))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in :meth:`DataFrame.loc` was not throwing “incompatible dtype warning” (see
    [PDEP6](https://pandas.pydata.org/pdeps/0006-ban-upcasting.html)) when assigning
    a `Series` with a different dtype using a full column setter (e.g. `df.loc[:,
    'a'] = incompatible_value`) ([GH 39584](https://github.com/pandas-dev/pandas/issues/39584))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`pandas.api.types.is_string_dtype()`](../reference/api/pandas.api.types.is_string_dtype.html#pandas.api.types.is_string_dtype
    "pandas.api.types.is_string_dtype") while checking object array with no elements
    is of the string dtype ([GH 54661](https://github.com/pandas-dev/pandas/issues/54661))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") failing when `engine="numba"` and columns or index have
    `StringDtype` ([GH 56189](https://github.com/pandas-dev/pandas/issues/56189))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.reindex()`](../reference/api/pandas.DataFrame.reindex.html#pandas.DataFrame.reindex
    "pandas.DataFrame.reindex") not matching [`Index`](../reference/api/pandas.Index.html#pandas.Index
    "pandas.Index") with `string[pyarrow_numpy]` dtype ([GH 56106](https://github.com/pandas-dev/pandas/issues/56106))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Index.str.cat()` always casting result to object dtype ([GH 56157](https://github.com/pandas-dev/pandas/issues/56157))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `Series.__mul__()` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` dtype and `string[pyarrow]` for the
    pyarrow backend ([GH 51970](https://github.com/pandas-dev/pandas/issues/51970))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.find()`](../reference/api/pandas.Series.str.find.html#pandas.Series.str.find
    "pandas.Series.str.find") when `start < 0` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` ([GH 56411](https://github.com/pandas-dev/pandas/issues/56411))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.fullmatch()`](../reference/api/pandas.Series.str.fullmatch.html#pandas.Series.str.fullmatch
    "pandas.Series.str.fullmatch") when `dtype=pandas.ArrowDtype(pyarrow.string()))`
    allows partial matches when regex ends in literal //$ ([GH 56652](https://github.com/pandas-dev/pandas/issues/56652))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.replace()`](../reference/api/pandas.Series.str.replace.html#pandas.Series.str.replace
    "pandas.Series.str.replace") when `n < 0` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` ([GH 56404](https://github.com/pandas-dev/pandas/issues/56404))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.startswith()`](../reference/api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith") and [`Series.str.endswith()`](../reference/api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith") with arguments of type `tuple[str, ...]` for [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.string` dtype ([GH 56579](https://github.com/pandas-dev/pandas/issues/56579))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.str.startswith()`](../reference/api/pandas.Series.str.startswith.html#pandas.Series.str.startswith
    "pandas.Series.str.startswith") and [`Series.str.endswith()`](../reference/api/pandas.Series.str.endswith.html#pandas.Series.str.endswith
    "pandas.Series.str.endswith") with arguments of type `tuple[str, ...]` for `string[pyarrow]`
    ([GH 54942](https://github.com/pandas-dev/pandas/issues/54942))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in comparison operations for `dtype="string[pyarrow_numpy]"` raising if
    dtypes can’t be compared ([GH 56008](https://github.com/pandas-dev/pandas/issues/56008))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`Interval`](../reference/api/pandas.Interval.html#pandas.Interval "pandas.Interval")
    `__repr__` not displaying UTC offsets for [`Timestamp`](../reference/api/pandas.Timestamp.html#pandas.Timestamp
    "pandas.Timestamp") bounds. Additionally the hour, minute and second components
    will now be shown ([GH 55015](https://github.com/pandas-dev/pandas/issues/55015))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in `IntervalIndex.factorize()` and [`Series.factorize()`](../reference/api/pandas.Series.factorize.html#pandas.Series.factorize
    "pandas.Series.factorize") with [`IntervalDtype`](../reference/api/pandas.IntervalDtype.html#pandas.IntervalDtype
    "pandas.IntervalDtype") with datetime64 or timedelta64 intervals not preserving
    non-nanosecond units ([GH 56099](https://github.com/pandas-dev/pandas/issues/56099))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.from_arrays()`](../reference/api/pandas.IntervalIndex.from_arrays.html#pandas.IntervalIndex.from_arrays
    "pandas.IntervalIndex.from_arrays") when passed `datetime64` or `timedelta64`
    arrays with mismatched resolutions constructing an invalid `IntervalArray` object
    ([GH 55714](https://github.com/pandas-dev/pandas/issues/55714))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.from_tuples()`](../reference/api/pandas.IntervalIndex.from_tuples.html#pandas.IntervalIndex.from_tuples
    "pandas.IntervalIndex.from_tuples") raising if subtype is a nullable extension
    dtype ([GH 56765](https://github.com/pandas-dev/pandas/issues/56765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") with datetime or timedelta intervals incorrectly
    matching on integer targets ([GH 47772](https://github.com/pandas-dev/pandas/issues/47772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`IntervalIndex.get_indexer()`](../reference/api/pandas.IntervalIndex.get_indexer.html#pandas.IntervalIndex.get_indexer
    "pandas.IntervalIndex.get_indexer") with timezone-aware datetime intervals incorrectly
    matching on a sequence of timezone-naive targets ([GH 47772](https://github.com/pandas-dev/pandas/issues/47772))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting values on a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with an [`IntervalIndex`](../reference/api/pandas.IntervalIndex.html#pandas.IntervalIndex
    "pandas.IntervalIndex") using a slice incorrectly raising ([GH 54722](https://github.com/pandas-dev/pandas/issues/54722))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indexing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") mutating a boolean indexer when [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") has a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") ([GH 56635](https://github.com/pandas-dev/pandas/issues/56635))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.loc()`](../reference/api/pandas.DataFrame.loc.html#pandas.DataFrame.loc
    "pandas.DataFrame.loc") when setting [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with extension dtype into NumPy dtype ([GH 55604](https://github.com/pandas-dev/pandas/issues/55604))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Index.difference()`](../reference/api/pandas.Index.difference.html#pandas.Index.difference
    "pandas.Index.difference") not returning a unique set of values when `other` is
    empty or `other` is considered non-comparable ([GH 55113](https://github.com/pandas-dev/pandas/issues/55113))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in setting [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") values into a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with numpy dtypes raising `RecursionError` ([GH 52927](https://github.com/pandas-dev/pandas/issues/52927))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed bug when creating new column with missing values when setting a single
    string value ([GH 56204](https://github.com/pandas-dev/pandas/issues/56204))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.update()`](../reference/api/pandas.DataFrame.update.html#pandas.DataFrame.update
    "pandas.DataFrame.update") wasn’t updating in-place for tz-aware datetime64 dtypes
    ([GH 56227](https://github.com/pandas-dev/pandas/issues/56227))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MultiIndex
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`MultiIndex.get_indexer()`](../reference/api/pandas.MultiIndex.get_indexer.html#pandas.MultiIndex.get_indexer
    "pandas.MultiIndex.get_indexer") not raising `ValueError` when `method` provided
    and index is non-monotonic ([GH 53452](https://github.com/pandas-dev/pandas/issues/53452))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I/O
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `engine="python"` did not respect `chunksize` arg when
    `skiprows` was specified ([GH 56323](https://github.com/pandas-dev/pandas/issues/56323))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `engine="python"` was causing a `TypeError` when a callable
    `skiprows` and a chunk size was specified ([GH 55677](https://github.com/pandas-dev/pandas/issues/55677))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") where `on_bad_lines="warn"` would write to `stderr` instead
    of raising a Python warning; this now yields a [`errors.ParserWarning`](../reference/api/pandas.errors.ParserWarning.html#pandas.errors.ParserWarning
    "pandas.errors.ParserWarning") ([GH 54296](https://github.com/pandas-dev/pandas/issues/54296))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` where `quotechar` was ignored ([GH
    52266](https://github.com/pandas-dev/pandas/issues/52266))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_csv()`](../reference/api/pandas.read_csv.html#pandas.read_csv
    "pandas.read_csv") with `engine="pyarrow"` where `usecols` wasn’t working with
    a CSV with no headers ([GH 54459](https://github.com/pandas-dev/pandas/issues/54459))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel"), with `engine="xlrd"` (`xls` files) erroring when the file
    contains `NaN` or `Inf` ([GH 54564](https://github.com/pandas-dev/pandas/issues/54564))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_json()`](../reference/api/pandas.read_json.html#pandas.read_json
    "pandas.read_json") not handling dtype conversion properly if `infer_string` is
    set ([GH 56195](https://github.com/pandas-dev/pandas/issues/56195))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_excel()`](../reference/api/pandas.DataFrame.to_excel.html#pandas.DataFrame.to_excel
    "pandas.DataFrame.to_excel"), with `OdsWriter` (`ods` files) writing Boolean/string
    value ([GH 54994](https://github.com/pandas-dev/pandas/issues/54994))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_hdf()`](../reference/api/pandas.DataFrame.to_hdf.html#pandas.DataFrame.to_hdf
    "pandas.DataFrame.to_hdf") and [`read_hdf()`](../reference/api/pandas.read_hdf.html#pandas.read_hdf
    "pandas.read_hdf") with `datetime64` dtypes with non-nanosecond resolution failing
    to round-trip correctly ([GH 55622](https://github.com/pandas-dev/pandas/issues/55622))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.to_stata()`](../reference/api/pandas.DataFrame.to_stata.html#pandas.DataFrame.to_stata
    "pandas.DataFrame.to_stata") raising for extension dtypes ([GH 54671](https://github.com/pandas-dev/pandas/issues/54671))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") with `engine="odf"` (`ods` files) when a string cell contains
    an annotation ([GH 55200](https://github.com/pandas-dev/pandas/issues/55200))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`read_excel()`](../reference/api/pandas.read_excel.html#pandas.read_excel
    "pandas.read_excel") with an ODS file without cached formatted cell for float
    values ([GH 55219](https://github.com/pandas-dev/pandas/issues/55219))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug where [`DataFrame.to_json()`](../reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json
    "pandas.DataFrame.to_json") would raise an `OverflowError` instead of a `TypeError`
    with unsupported NumPy types ([GH 55403](https://github.com/pandas-dev/pandas/issues/55403))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Period
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`PeriodIndex`](../reference/api/pandas.PeriodIndex.html#pandas.PeriodIndex
    "pandas.PeriodIndex") construction when more than one of `data`, `ordinal` and
    `**fields` are passed failing to raise `ValueError` ([GH 55961](https://github.com/pandas-dev/pandas/issues/55961))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Period`](../reference/api/pandas.Period.html#pandas.Period "pandas.Period")
    addition silently wrapping around instead of raising `OverflowError` ([GH 55503](https://github.com/pandas-dev/pandas/issues/55503))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in casting from [`PeriodDtype`](../reference/api/pandas.PeriodDtype.html#pandas.PeriodDtype
    "pandas.PeriodDtype") with `astype` to `datetime64` or [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") with non-nanosecond unit incorrectly returning with
    nanosecond unit ([GH 55958](https://github.com/pandas-dev/pandas/issues/55958))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotting
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.box()`](../reference/api/pandas.DataFrame.plot.box.html#pandas.DataFrame.plot.box
    "pandas.DataFrame.plot.box") with `vert=False` and a Matplotlib `Axes` created
    with `sharey=True` ([GH 54941](https://github.com/pandas-dev/pandas/issues/54941))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.plot.scatter()`](../reference/api/pandas.DataFrame.plot.scatter.html#pandas.DataFrame.plot.scatter
    "pandas.DataFrame.plot.scatter") discarding string columns ([GH 56142](https://github.com/pandas-dev/pandas/issues/56142))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`Series.plot()`](../reference/api/pandas.Series.plot.html#pandas.Series.plot
    "pandas.Series.plot") when reusing an `ax` object failing to raise when a `how`
    keyword is passed ([GH 55953](https://github.com/pandas-dev/pandas/issues/55953))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groupby/resample/rolling
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.idxmin()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmin.html#pandas.core.groupby.DataFrameGroupBy.idxmin
    "pandas.core.groupby.DataFrameGroupBy.idxmin"), [`DataFrameGroupBy.idxmax()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.idxmax.html#pandas.core.groupby.DataFrameGroupBy.idxmax
    "pandas.core.groupby.DataFrameGroupBy.idxmax"), [`SeriesGroupBy.idxmin()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmin.html#pandas.core.groupby.SeriesGroupBy.idxmin
    "pandas.core.groupby.SeriesGroupBy.idxmin"), and [`SeriesGroupBy.idxmax()`](../reference/api/pandas.core.groupby.SeriesGroupBy.idxmax.html#pandas.core.groupby.SeriesGroupBy.idxmax
    "pandas.core.groupby.SeriesGroupBy.idxmax") would not retain [`Categorical`](../reference/api/pandas.Categorical.html#pandas.Categorical
    "pandas.Categorical") dtype when the index was a [`CategoricalIndex`](../reference/api/pandas.CategoricalIndex.html#pandas.CategoricalIndex
    "pandas.CategoricalIndex") that contained NA values ([GH 54234](https://github.com/pandas-dev/pandas/issues/54234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.transform()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html#pandas.core.groupby.DataFrameGroupBy.transform
    "pandas.core.groupby.DataFrameGroupBy.transform") and [`SeriesGroupBy.transform()`](../reference/api/pandas.core.groupby.SeriesGroupBy.transform.html#pandas.core.groupby.SeriesGroupBy.transform
    "pandas.core.groupby.SeriesGroupBy.transform") when `observed=False` and `f="idxmin"`
    or `f="idxmax"` would incorrectly raise on unobserved categories ([GH 54234](https://github.com/pandas-dev/pandas/issues/54234))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") could result in incorrect sorting
    if the columns of the DataFrame or name of the Series are integers ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") would not respect `sort=False`
    in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrameGroupBy.value_counts()`](../reference/api/pandas.core.groupby.DataFrameGroupBy.value_counts.html#pandas.core.groupby.DataFrameGroupBy.value_counts
    "pandas.core.groupby.DataFrameGroupBy.value_counts") and [`SeriesGroupBy.value_counts()`](../reference/api/pandas.core.groupby.SeriesGroupBy.value_counts.html#pandas.core.groupby.SeriesGroupBy.value_counts
    "pandas.core.groupby.SeriesGroupBy.value_counts") would sort by proportions rather
    than frequencies when `sort=True` and `normalize=True` ([GH 55951](https://github.com/pandas-dev/pandas/issues/55951))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.asfreq()`](../reference/api/pandas.DataFrame.asfreq.html#pandas.DataFrame.asfreq
    "pandas.DataFrame.asfreq") and [`Series.asfreq()`](../reference/api/pandas.Series.asfreq.html#pandas.Series.asfreq
    "pandas.Series.asfreq") with a [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") with non-nanosecond resolution incorrectly converting
    to nanosecond resolution ([GH 55958](https://github.com/pandas-dev/pandas/issues/55958))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.ewm()`](../reference/api/pandas.DataFrame.ewm.html#pandas.DataFrame.ewm
    "pandas.DataFrame.ewm") when passed `times` with non-nanosecond `datetime64` or
    [`DatetimeTZDtype`](../reference/api/pandas.DatetimeTZDtype.html#pandas.DatetimeTZDtype
    "pandas.DatetimeTZDtype") dtype ([GH 56262](https://github.com/pandas-dev/pandas/issues/56262))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") and [`Series.groupby()`](../reference/api/pandas.Series.groupby.html#pandas.Series.groupby
    "pandas.Series.groupby") where grouping by a combination of `Decimal` and NA values
    would fail when `sort=True` ([GH 54847](https://github.com/pandas-dev/pandas/issues/54847))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.groupby()`](../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby") for DataFrame subclasses when selecting a subset of
    columns to apply the function to ([GH 56761](https://github.com/pandas-dev/pandas/issues/56761))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") not respecting `closed` and `label` arguments for
    [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") ([GH 55282](https://github.com/pandas-dev/pandas/issues/55282))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") when resampling on a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") of `pyarrow.timestamp` or `pyarrow.duration` type ([GH 55989](https://github.com/pandas-dev/pandas/issues/55989))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where bin edges were not correct for [`BusinessDay`](../reference/api/pandas.tseries.offsets.BusinessDay.html#pandas.tseries.offsets.BusinessDay
    "pandas.tseries.offsets.BusinessDay") ([GH 55281](https://github.com/pandas-dev/pandas/issues/55281))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.resample()`](../reference/api/pandas.DataFrame.resample.html#pandas.DataFrame.resample
    "pandas.DataFrame.resample") where bin edges were not correct for [`MonthBegin`](../reference/api/pandas.tseries.offsets.MonthBegin.html#pandas.tseries.offsets.MonthBegin
    "pandas.tseries.offsets.MonthBegin") ([GH 55271](https://github.com/pandas-dev/pandas/issues/55271))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") where duplicate datetimelike indexes are treated as consecutive
    rather than equal with `closed='left'` and `closed='neither'` ([GH 20712](https://github.com/pandas-dev/pandas/issues/20712))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.rolling()`](../reference/api/pandas.DataFrame.rolling.html#pandas.DataFrame.rolling
    "pandas.DataFrame.rolling") and [`Series.rolling()`](../reference/api/pandas.Series.rolling.html#pandas.Series.rolling
    "pandas.Series.rolling") where either the `index` or `on` column was [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.timestamp` type ([GH 55849](https://github.com/pandas-dev/pandas/issues/55849))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reshaping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    ignoring `sort` parameter when passed [`DatetimeIndex`](../reference/api/pandas.DatetimeIndex.html#pandas.DatetimeIndex
    "pandas.DatetimeIndex") indexes ([GH 54769](https://github.com/pandas-dev/pandas/issues/54769))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`concat()`](../reference/api/pandas.concat.html#pandas.concat "pandas.concat")
    renaming [`Series`](../reference/api/pandas.Series.html#pandas.Series "pandas.Series")
    when `ignore_index=False` ([GH 15047](https://github.com/pandas-dev/pandas/issues/15047))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising `TypeError` when `by` dtype is not `object`, `int64`,
    or `uint64` ([GH 22794](https://github.com/pandas-dev/pandas/issues/22794))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") raising incorrect error for string dtype ([GH 56444](https://github.com/pandas-dev/pandas/issues/56444))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge_asof()`](../reference/api/pandas.merge_asof.html#pandas.merge_asof
    "pandas.merge_asof") when using a [`Timedelta`](../reference/api/pandas.Timedelta.html#pandas.Timedelta
    "pandas.Timedelta") tolerance on a [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") column ([GH 56486](https://github.com/pandas-dev/pandas/issues/56486))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not raising when merging datetime columns with timedelta columns ([GH 56455](https://github.com/pandas-dev/pandas/issues/56455))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not raising when merging string columns with numeric columns ([GH 56441](https://github.com/pandas-dev/pandas/issues/56441))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    not sorting for new string dtype ([GH 56442](https://github.com/pandas-dev/pandas/issues/56442))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`merge()`](../reference/api/pandas.merge.html#pandas.merge "pandas.merge")
    returning columns in incorrect order when left and/or right is empty ([GH 51929](https://github.com/pandas-dev/pandas/issues/51929))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") where an exception was raised if `var_name` was not a
    string ([GH 55948](https://github.com/pandas-dev/pandas/issues/55948))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.melt()`](../reference/api/pandas.DataFrame.melt.html#pandas.DataFrame.melt
    "pandas.DataFrame.melt") where it would not preserve the datetime ([GH 55254](https://github.com/pandas-dev/pandas/issues/55254))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot_table()`](../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") where the row margin is incorrect when the columns
    have numeric names ([GH 26568](https://github.com/pandas-dev/pandas/issues/26568))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.pivot()`](../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot") with numeric columns and extension dtype for data ([GH
    56528](https://github.com/pandas-dev/pandas/issues/56528))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.stack()`](../reference/api/pandas.DataFrame.stack.html#pandas.DataFrame.stack
    "pandas.DataFrame.stack") with `future_stack=True` would not preserve NA values
    in the index ([GH 56573](https://github.com/pandas-dev/pandas/issues/56573))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparse
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bug in `arrays.SparseArray.take()` when using a different fill value than the
    array’s fill value ([GH 55181](https://github.com/pandas-dev/pandas/issues/55181))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[`DataFrame.__dataframe__()`](../reference/api/pandas.DataFrame.__dataframe__.html#pandas.DataFrame.__dataframe__
    "pandas.DataFrame.__dataframe__") did not support pyarrow large strings ([GH 56702](https://github.com/pandas-dev/pandas/issues/56702))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.describe()`](../reference/api/pandas.DataFrame.describe.html#pandas.DataFrame.describe
    "pandas.DataFrame.describe") when formatting percentiles in the resulting percentile
    99.999% is rounded to 100% ([GH 55765](https://github.com/pandas-dev/pandas/issues/55765))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`api.interchange.from_dataframe()`](../reference/api/pandas.api.interchange.from_dataframe.html#pandas.api.interchange.from_dataframe
    "pandas.api.interchange.from_dataframe") where it raised `NotImplementedError`
    when handling empty string columns ([GH 56703](https://github.com/pandas-dev/pandas/issues/56703))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") and
    [`qcut()`](../reference/api/pandas.qcut.html#pandas.qcut "pandas.qcut") with `datetime64`
    dtype values with non-nanosecond units incorrectly returning nanosecond-unit bins
    ([GH 56101](https://github.com/pandas-dev/pandas/issues/56101))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`cut()`](../reference/api/pandas.cut.html#pandas.cut "pandas.cut") incorrectly
    allowing cutting of timezone-aware datetimes with timezone-naive bins ([GH 54964](https://github.com/pandas-dev/pandas/issues/54964))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`infer_freq()`](../reference/api/pandas.infer_freq.html#pandas.infer_freq
    "pandas.infer_freq") and [`DatetimeIndex.inferred_freq()`](../reference/api/pandas.DatetimeIndex.inferred_freq.html#pandas.DatetimeIndex.inferred_freq
    "pandas.DatetimeIndex.inferred_freq") with weekly frequencies and non-nanosecond
    resolutions ([GH 55609](https://github.com/pandas-dev/pandas/issues/55609))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.apply()`](../reference/api/pandas.DataFrame.apply.html#pandas.DataFrame.apply
    "pandas.DataFrame.apply") where passing `raw=True` ignored `args` passed to the
    applied function ([GH 55009](https://github.com/pandas-dev/pandas/issues/55009))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.from_dict()`](../reference/api/pandas.DataFrame.from_dict.html#pandas.DataFrame.from_dict
    "pandas.DataFrame.from_dict") which would always sort the rows of the created
    [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame").
    ([GH 55683](https://github.com/pandas-dev/pandas/issues/55683))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in [`DataFrame.sort_index()`](../reference/api/pandas.DataFrame.sort_index.html#pandas.DataFrame.sort_index
    "pandas.DataFrame.sort_index") when passing `axis="columns"` and `ignore_index=True`
    raising a `ValueError` ([GH 56478](https://github.com/pandas-dev/pandas/issues/56478))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering `inf` values inside a [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") with the `use_inf_as_na` option enabled ([GH 55483](https://github.com/pandas-dev/pandas/issues/55483))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in rendering a [`Series`](../reference/api/pandas.Series.html#pandas.Series
    "pandas.Series") with a [`MultiIndex`](../reference/api/pandas.MultiIndex.html#pandas.MultiIndex
    "pandas.MultiIndex") when one of the index level’s names is 0 not having that
    name displayed ([GH 55415](https://github.com/pandas-dev/pandas/issues/55415))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug in the error message when assigning an empty [`DataFrame`](../reference/api/pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") to a column ([GH 55956](https://github.com/pandas-dev/pandas/issues/55956))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bug when time-like strings were being cast to [`ArrowDtype`](../reference/api/pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") with `pyarrow.time64` type ([GH 56463](https://github.com/pandas-dev/pandas/issues/56463))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixed a spurious deprecation warning from `numba` >= 0.58.0 when passing a numpy
    ufunc in `core.window.Rolling.apply` with `engine="numba"` ([GH 55247](https://github.com/pandas-dev/pandas/issues/55247))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 162 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: AG
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aaron Rahman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abdullah Ihsan Secer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abhijit Deo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrian D’Alessandro
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ahmad Mustafa Anis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amanda Bizzinotto
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amith KK +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aniket Patil +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Antonio Fonseca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Artur Barseghyan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ben Greiner
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bill Blum +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boyd Kane
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Damian Kula
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dan King +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Weindl +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniele Nicolodi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Poznik
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Toneian +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dea María Léon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deepak George +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dmitriy +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dominique Garmier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Donald Thevalingam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Doug Davis +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dukastlik +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elahe Sharifi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eric Han +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fangchen Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Francisco Alfaro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gadea Autric +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guillaume Lemaitre
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hadi Abdi Khojasteh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hedeer El Showk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Huanghz2001 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isaac Virshup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Issam +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Itay Azolay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Itayazolay +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jaca +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jack McIvor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JackCollins91 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: James Spencer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jay
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jessica Greene
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jirka Borovec +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JohannaTrost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: John C +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joris Van den Bossche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José Lucas Mayer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: José Lucas Silva Mayer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: João Andrade +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kai Mühlbauer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Katharina Tielking, MD +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kazuto Haruguchi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kevin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lawrence Mitchell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linus Sommer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Louis-Émile Robitaille +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luke Manley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lumberbot (aka Jack)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maggie Liu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MainHanzo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Garcia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marco Edward Gorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MarcoGorelli
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Šícho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mateusz Sokół
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Felipe +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Roeschke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthias Bussonnier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxwell Bileschi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Tiemann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michał Górny
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Molly Bowers +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moritz Schubert +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NNLNR +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Natalia Mokeeva
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nils Müller-Wendt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Omar Elbaz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas Development Team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paras Gupta +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parthi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Hoefler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Pellissier +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Paul Uhlenbruck +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philip Meier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Philippe THOMY +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quang Nguyễn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raghav
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rajat Subhra Mukherjee
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ralf Gommers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Randolf Scholz +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Richard Shadrach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rob +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rohan Jain +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ryan Gibson +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sai-Suraj-27 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Samuel Oranyeli +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sara Bonati +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Berg
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergey Zakharov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shyamala Venkatakrishnan +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: StEmGeo +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefanie Molin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stijn de Gooijer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thiago Gariani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas A Caswell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Baumann +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Guillet +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Lazarus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Li
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Hoffmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tim Swast
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tom Augspurger
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Toro +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Torsten Wörtwein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ville Aikas +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vinita Parasrampuria +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vyas Ramasubramani +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Andrea
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: William Ayd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Willian Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Xiao Yuan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yao Xiao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yves Delley
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zemux1613 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ziad Kermadi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aaron-robeson-8451 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: aram-cinnamon +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: caneff +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ccccjone +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chris-caballero +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: cobalt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: color455nm +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: denisrei +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dependabot[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jbrockmendel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: jfadia +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: johanna.trost +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: kgmuzungu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mecopur +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mhb143 +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: morotti +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: mvirts +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: omar-elbaz
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: paulreece
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pre-commit-ci[bot]
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: raj-thapa
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rebecca-palmer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rmhowe425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: rohanjain101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: shiersansi +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: smij720
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: srkds +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: taytzehao
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: torext
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vboxuser +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: xzmeng +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: yashb +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
