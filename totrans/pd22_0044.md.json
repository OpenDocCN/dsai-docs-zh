["```py\nIn [1]: import datetime\n\n# strings\nIn [2]: pd.Timedelta(\"1 days\")\nOut[2]: Timedelta('1 days 00:00:00')\n\nIn [3]: pd.Timedelta(\"1 days 00:00:00\")\nOut[3]: Timedelta('1 days 00:00:00')\n\nIn [4]: pd.Timedelta(\"1 days 2 hours\")\nOut[4]: Timedelta('1 days 02:00:00')\n\nIn [5]: pd.Timedelta(\"-1 days 2 min 3us\")\nOut[5]: Timedelta('-2 days +23:57:59.999997')\n\n# like datetime.timedelta\n# note: these MUST be specified as keyword arguments\nIn [6]: pd.Timedelta(days=1, seconds=1)\nOut[6]: Timedelta('1 days 00:00:01')\n\n# integers with a unit\nIn [7]: pd.Timedelta(1, unit=\"d\")\nOut[7]: Timedelta('1 days 00:00:00')\n\n# from a datetime.timedelta/np.timedelta64\nIn [8]: pd.Timedelta(datetime.timedelta(days=1, seconds=1))\nOut[8]: Timedelta('1 days 00:00:01')\n\nIn [9]: pd.Timedelta(np.timedelta64(1, \"ms\"))\nOut[9]: Timedelta('0 days 00:00:00.001000')\n\n# negative Timedeltas have this string repr\n# to be more consistent with datetime.timedelta conventions\nIn [10]: pd.Timedelta(\"-1us\")\nOut[10]: Timedelta('-1 days +23:59:59.999999')\n\n# a NaT\nIn [11]: pd.Timedelta(\"nan\")\nOut[11]: NaT\n\nIn [12]: pd.Timedelta(\"nat\")\nOut[12]: NaT\n\n# ISO 8601 Duration strings\nIn [13]: pd.Timedelta(\"P0DT0H1M0S\")\nOut[13]: Timedelta('0 days 00:01:00')\n\nIn [14]: pd.Timedelta(\"P0DT0H0M0.000000123S\")\nOut[14]: Timedelta('0 days 00:00:00.000000123') \n```", "```py\nIn [15]: pd.Timedelta(pd.offsets.Second(2))\nOut[15]: Timedelta('0 days 00:00:02') \n```", "```py\nIn [16]: pd.Timedelta(pd.offsets.Day(2)) + pd.Timedelta(pd.offsets.Second(2)) + pd.Timedelta(\n ....:    \"00:00:00.000123\"\n ....: )\n ....: \nOut[16]: Timedelta('2 days 00:00:02.000123') \n```", "```py\nIn [17]: pd.to_timedelta(\"1 days 06:05:01.00003\")\nOut[17]: Timedelta('1 days 06:05:01.000030')\n\nIn [18]: pd.to_timedelta(\"15.5us\")\nOut[18]: Timedelta('0 days 00:00:00.000015500') \n```", "```py\nIn [19]: pd.to_timedelta([\"1 days 06:05:01.00003\", \"15.5us\", \"nan\"])\nOut[19]: TimedeltaIndex(['1 days 06:05:01.000030', '0 days 00:00:00.000015500', NaT], dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [20]: pd.to_timedelta(np.arange(5), unit=\"s\")\nOut[20]: \nTimedeltaIndex(['0 days 00:00:00', '0 days 00:00:01', '0 days 00:00:02',\n '0 days 00:00:03', '0 days 00:00:04'],\n dtype='timedelta64[ns]', freq=None)\n\nIn [21]: pd.to_timedelta(np.arange(5), unit=\"d\")\nOut[21]: TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'], dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [22]: pd.Timedelta.min\nOut[22]: Timedelta('-106752 days +00:12:43.145224193')\n\nIn [23]: pd.Timedelta.max\nOut[23]: Timedelta('106751 days 23:47:16.854775807') \n```", "```py\nIn [24]: s = pd.Series(pd.date_range(\"2012-1-1\", periods=3, freq=\"D\"))\n\nIn [25]: td = pd.Series([pd.Timedelta(days=i) for i in range(3)])\n\nIn [26]: df = pd.DataFrame({\"A\": s, \"B\": td})\n\nIn [27]: df\nOut[27]: \n A      B\n0 2012-01-01 0 days\n1 2012-01-02 1 days\n2 2012-01-03 2 days\n\nIn [28]: df[\"C\"] = df[\"A\"] + df[\"B\"]\n\nIn [29]: df\nOut[29]: \n A      B          C\n0 2012-01-01 0 days 2012-01-01\n1 2012-01-02 1 days 2012-01-03\n2 2012-01-03 2 days 2012-01-05\n\nIn [30]: df.dtypes\nOut[30]: \nA     datetime64[ns]\nB    timedelta64[ns]\nC     datetime64[ns]\ndtype: object\n\nIn [31]: s - s.max()\nOut[31]: \n0   -2 days\n1   -1 days\n2    0 days\ndtype: timedelta64[ns]\n\nIn [32]: s - datetime.datetime(2011, 1, 1, 3, 5)\nOut[32]: \n0   364 days 20:55:00\n1   365 days 20:55:00\n2   366 days 20:55:00\ndtype: timedelta64[ns]\n\nIn [33]: s + datetime.timedelta(minutes=5)\nOut[33]: \n0   2012-01-01 00:05:00\n1   2012-01-02 00:05:00\n2   2012-01-03 00:05:00\ndtype: datetime64[ns]\n\nIn [34]: s + pd.offsets.Minute(5)\nOut[34]: \n0   2012-01-01 00:05:00\n1   2012-01-02 00:05:00\n2   2012-01-03 00:05:00\ndtype: datetime64[ns]\n\nIn [35]: s + pd.offsets.Minute(5) + pd.offsets.Milli(5)\nOut[35]: \n0   2012-01-01 00:05:00.005\n1   2012-01-02 00:05:00.005\n2   2012-01-03 00:05:00.005\ndtype: datetime64[ns] \n```", "```py\nIn [36]: y = s - s[0]\n\nIn [37]: y\nOut[37]: \n0   0 days\n1   1 days\n2   2 days\ndtype: timedelta64[ns] \n```", "```py\nIn [38]: y = s - s.shift()\n\nIn [39]: y\nOut[39]: \n0      NaT\n1   1 days\n2   1 days\ndtype: timedelta64[ns] \n```", "```py\nIn [40]: y[1] = np.nan\n\nIn [41]: y\nOut[41]: \n0      NaT\n1      NaT\n2   1 days\ndtype: timedelta64[ns] \n```", "```py\nIn [42]: s.max() - s\nOut[42]: \n0   2 days\n1   1 days\n2   0 days\ndtype: timedelta64[ns]\n\nIn [43]: datetime.datetime(2011, 1, 1, 3, 5) - s\nOut[43]: \n0   -365 days +03:05:00\n1   -366 days +03:05:00\n2   -367 days +03:05:00\ndtype: timedelta64[ns]\n\nIn [44]: datetime.timedelta(minutes=5) + s\nOut[44]: \n0   2012-01-01 00:05:00\n1   2012-01-02 00:05:00\n2   2012-01-03 00:05:00\ndtype: datetime64[ns] \n```", "```py\nIn [45]: A = s - pd.Timestamp(\"20120101\") - pd.Timedelta(\"00:05:05\")\n\nIn [46]: B = s - pd.Series(pd.date_range(\"2012-1-2\", periods=3, freq=\"D\"))\n\nIn [47]: df = pd.DataFrame({\"A\": A, \"B\": B})\n\nIn [48]: df\nOut[48]: \n A       B\n0 -1 days +23:54:55 -1 days\n1   0 days 23:54:55 -1 days\n2   1 days 23:54:55 -1 days\n\nIn [49]: df.min()\nOut[49]: \nA   -1 days +23:54:55\nB   -1 days +00:00:00\ndtype: timedelta64[ns]\n\nIn [50]: df.min(axis=1)\nOut[50]: \n0   -1 days\n1   -1 days\n2   -1 days\ndtype: timedelta64[ns]\n\nIn [51]: df.idxmin()\nOut[51]: \nA    0\nB    0\ndtype: int64\n\nIn [52]: df.idxmax()\nOut[52]: \nA    2\nB    0\ndtype: int64 \n```", "```py\nIn [53]: df.min().max()\nOut[53]: Timedelta('-1 days +23:54:55')\n\nIn [54]: df.min(axis=1).min()\nOut[54]: Timedelta('-1 days +00:00:00')\n\nIn [55]: df.min().idxmax()\nOut[55]: 'A'\n\nIn [56]: df.min(axis=1).idxmin()\nOut[56]: 0 \n```", "```py\nIn [57]: y.fillna(pd.Timedelta(0))\nOut[57]: \n0   0 days\n1   0 days\n2   1 days\ndtype: timedelta64[ns]\n\nIn [58]: y.fillna(pd.Timedelta(10, unit=\"s\"))\nOut[58]: \n0   0 days 00:00:10\n1   0 days 00:00:10\n2   1 days 00:00:00\ndtype: timedelta64[ns]\n\nIn [59]: y.fillna(pd.Timedelta(\"-1 days, 00:00:05\"))\nOut[59]: \n0   -1 days +00:00:05\n1   -1 days +00:00:05\n2     1 days 00:00:00\ndtype: timedelta64[ns] \n```", "```py\nIn [60]: td1 = pd.Timedelta(\"-1 days 2 hours 3 seconds\")\n\nIn [61]: td1\nOut[61]: Timedelta('-2 days +21:59:57')\n\nIn [62]: -1 * td1\nOut[62]: Timedelta('1 days 02:00:03')\n\nIn [63]: -td1\nOut[63]: Timedelta('1 days 02:00:03')\n\nIn [64]: abs(td1)\nOut[64]: Timedelta('1 days 02:00:03') \n```", "```py\nIn [65]: y2 = pd.Series(\n ....:    pd.to_timedelta([\"-1 days +00:00:05\", \"nat\", \"-1 days +00:00:05\", \"1 days\"])\n ....: )\n ....: \n\nIn [66]: y2\nOut[66]: \n0   -1 days +00:00:05\n1                 NaT\n2   -1 days +00:00:05\n3     1 days 00:00:00\ndtype: timedelta64[ns]\n\nIn [67]: y2.mean()\nOut[67]: Timedelta('-1 days +16:00:03.333333334')\n\nIn [68]: y2.median()\nOut[68]: Timedelta('-1 days +00:00:05')\n\nIn [69]: y2.quantile(0.1)\nOut[69]: Timedelta('-1 days +00:00:05')\n\nIn [70]: y2.sum()\nOut[70]: Timedelta('-1 days +00:00:10') \n```", "```py\nIn [71]: december = pd.Series(pd.date_range(\"20121201\", periods=4))\n\nIn [72]: january = pd.Series(pd.date_range(\"20130101\", periods=4))\n\nIn [73]: td = january - december\n\nIn [74]: td[2] += datetime.timedelta(minutes=5, seconds=3)\n\nIn [75]: td[3] = np.nan\n\nIn [76]: td\nOut[76]: \n0   31 days 00:00:00\n1   31 days 00:00:00\n2   31 days 00:05:03\n3                NaT\ndtype: timedelta64[ns]\n\n# to seconds\nIn [77]: td.astype(\"timedelta64[s]\")\nOut[77]: \n0   31 days 00:00:00\n1   31 days 00:00:00\n2   31 days 00:05:03\n3                NaT\ndtype: timedelta64[s] \n```", "```py\n# to days\nIn [78]: td / np.timedelta64(1, \"D\")\nOut[78]: \n0    31.000000\n1    31.000000\n2    31.003507\n3          NaN\ndtype: float64 \n```", "```py\nIn [79]: td * -1\nOut[79]: \n0   -31 days +00:00:00\n1   -31 days +00:00:00\n2   -32 days +23:54:57\n3                  NaT\ndtype: timedelta64[ns]\n\nIn [80]: td * pd.Series([1, 2, 3, 4])\nOut[80]: \n0   31 days 00:00:00\n1   62 days 00:00:00\n2   93 days 00:15:09\n3                NaT\ndtype: timedelta64[ns] \n```", "```py\nIn [81]: td // pd.Timedelta(days=3, hours=4)\nOut[81]: \n0    9.0\n1    9.0\n2    9.0\n3    NaN\ndtype: float64\n\nIn [82]: pd.Timedelta(days=3, hours=4) // td\nOut[82]: \n0    0.0\n1    0.0\n2    0.0\n3    NaN\ndtype: float64 \n```", "```py\nIn [83]: pd.Timedelta(hours=37) % datetime.timedelta(hours=2)\nOut[83]: Timedelta('0 days 01:00:00')\n\n# divmod against a timedelta-like returns a pair (int, Timedelta)\nIn [84]: divmod(datetime.timedelta(hours=2), pd.Timedelta(minutes=11))\nOut[84]: (10, Timedelta('0 days 00:10:00'))\n\n# divmod against a numeric returns a pair (Timedelta, Timedelta)\nIn [85]: divmod(pd.Timedelta(hours=25), 86400000000000)\nOut[85]: (Timedelta('0 days 00:00:00.000000001'), Timedelta('0 days 01:00:00')) \n```", "```py\nIn [86]: td.dt.days\nOut[86]: \n0    31.0\n1    31.0\n2    31.0\n3     NaN\ndtype: float64\n\nIn [87]: td.dt.seconds\nOut[87]: \n0      0.0\n1      0.0\n2    303.0\n3      NaN\ndtype: float64 \n```", "```py\nIn [88]: tds = pd.Timedelta(\"31 days 5 min 3 sec\")\n\nIn [89]: tds.days\nOut[89]: 31\n\nIn [90]: tds.seconds\nOut[90]: 303\n\nIn [91]: (-tds).seconds\nOut[91]: 86097 \n```", "```py\nIn [92]: td.dt.components\nOut[92]: \n days  hours  minutes  seconds  milliseconds  microseconds  nanoseconds\n0  31.0    0.0      0.0      0.0           0.0           0.0          0.0\n1  31.0    0.0      0.0      0.0           0.0           0.0          0.0\n2  31.0    0.0      5.0      3.0           0.0           0.0          0.0\n3   NaN    NaN      NaN      NaN           NaN           NaN          NaN\n\nIn [93]: td.dt.components.seconds\nOut[93]: \n0    0.0\n1    0.0\n2    3.0\n3    NaN\nName: seconds, dtype: float64 \n```", "```py\nIn [94]: pd.Timedelta(\n ....:    days=6, minutes=50, seconds=3, milliseconds=10, microseconds=10, nanoseconds=12\n ....: ).isoformat()\n ....: \nOut[94]: 'P6DT0H50M3.010010012S' \n```", "```py\nIn [95]: pd.TimedeltaIndex(\n ....:    [\n ....:        \"1 days\",\n ....:        \"1 days, 00:00:05\",\n ....:        np.timedelta64(2, \"D\"),\n ....:        datetime.timedelta(days=2, seconds=2),\n ....:    ]\n ....: )\n ....: \nOut[95]: \nTimedeltaIndex(['1 days 00:00:00', '1 days 00:00:05', '2 days 00:00:00',\n '2 days 00:00:02'],\n dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [96]: pd.TimedeltaIndex([\"0 days\", \"10 days\", \"20 days\"], freq=\"infer\")\nOut[96]: TimedeltaIndex(['0 days', '10 days', '20 days'], dtype='timedelta64[ns]', freq='10D') \n```", "```py\nIn [97]: pd.timedelta_range(start=\"1 days\", periods=5)\nOut[97]: TimedeltaIndex(['1 days', '2 days', '3 days', '4 days', '5 days'], dtype='timedelta64[ns]', freq='D') \n```", "```py\nIn [98]: pd.timedelta_range(start=\"1 days\", end=\"5 days\")\nOut[98]: TimedeltaIndex(['1 days', '2 days', '3 days', '4 days', '5 days'], dtype='timedelta64[ns]', freq='D')\n\nIn [99]: pd.timedelta_range(end=\"10 days\", periods=4)\nOut[99]: TimedeltaIndex(['7 days', '8 days', '9 days', '10 days'], dtype='timedelta64[ns]', freq='D') \n```", "```py\nIn [100]: pd.timedelta_range(start=\"1 days\", end=\"2 days\", freq=\"30min\")\nOut[100]: \nTimedeltaIndex(['1 days 00:00:00', '1 days 00:30:00', '1 days 01:00:00',\n '1 days 01:30:00', '1 days 02:00:00', '1 days 02:30:00',\n '1 days 03:00:00', '1 days 03:30:00', '1 days 04:00:00',\n '1 days 04:30:00', '1 days 05:00:00', '1 days 05:30:00',\n '1 days 06:00:00', '1 days 06:30:00', '1 days 07:00:00',\n '1 days 07:30:00', '1 days 08:00:00', '1 days 08:30:00',\n '1 days 09:00:00', '1 days 09:30:00', '1 days 10:00:00',\n '1 days 10:30:00', '1 days 11:00:00', '1 days 11:30:00',\n '1 days 12:00:00', '1 days 12:30:00', '1 days 13:00:00',\n '1 days 13:30:00', '1 days 14:00:00', '1 days 14:30:00',\n '1 days 15:00:00', '1 days 15:30:00', '1 days 16:00:00',\n '1 days 16:30:00', '1 days 17:00:00', '1 days 17:30:00',\n '1 days 18:00:00', '1 days 18:30:00', '1 days 19:00:00',\n '1 days 19:30:00', '1 days 20:00:00', '1 days 20:30:00',\n '1 days 21:00:00', '1 days 21:30:00', '1 days 22:00:00',\n '1 days 22:30:00', '1 days 23:00:00', '1 days 23:30:00',\n '2 days 00:00:00'],\n dtype='timedelta64[ns]', freq='30min')\n\nIn [101]: pd.timedelta_range(start=\"1 days\", periods=5, freq=\"2D5h\")\nOut[101]: \nTimedeltaIndex(['1 days 00:00:00', '3 days 05:00:00', '5 days 10:00:00',\n '7 days 15:00:00', '9 days 20:00:00'],\n dtype='timedelta64[ns]', freq='53h') \n```", "```py\nIn [102]: pd.timedelta_range(\"0 days\", \"4 days\", periods=5)\nOut[102]: TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'], dtype='timedelta64[ns]', freq=None)\n\nIn [103]: pd.timedelta_range(\"0 days\", \"4 days\", periods=10)\nOut[103]: \nTimedeltaIndex(['0 days 00:00:00', '0 days 10:40:00', '0 days 21:20:00',\n '1 days 08:00:00', '1 days 18:40:00', '2 days 05:20:00',\n '2 days 16:00:00', '3 days 02:40:00', '3 days 13:20:00',\n '4 days 00:00:00'],\n dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [104]: s = pd.Series(\n .....:    np.arange(100),\n .....:    index=pd.timedelta_range(\"1 days\", periods=100, freq=\"h\"),\n .....: )\n .....: \n\nIn [105]: s\nOut[105]: \n1 days 00:00:00     0\n1 days 01:00:00     1\n1 days 02:00:00     2\n1 days 03:00:00     3\n1 days 04:00:00     4\n ..\n4 days 23:00:00    95\n5 days 00:00:00    96\n5 days 01:00:00    97\n5 days 02:00:00    98\n5 days 03:00:00    99\nFreq: h, Length: 100, dtype: int64 \n```", "```py\nIn [106]: s[\"1 day\":\"2 day\"]\nOut[106]: \n1 days 00:00:00     0\n1 days 01:00:00     1\n1 days 02:00:00     2\n1 days 03:00:00     3\n1 days 04:00:00     4\n ..\n2 days 19:00:00    43\n2 days 20:00:00    44\n2 days 21:00:00    45\n2 days 22:00:00    46\n2 days 23:00:00    47\nFreq: h, Length: 48, dtype: int64\n\nIn [107]: s[\"1 day 01:00:00\"]\nOut[107]: 1\n\nIn [108]: s[pd.Timedelta(\"1 day 1h\")]\nOut[108]: 1 \n```", "```py\nIn [109]: s[\"1 day\":\"1 day 5 hours\"]\nOut[109]: \n1 days 00:00:00    0\n1 days 01:00:00    1\n1 days 02:00:00    2\n1 days 03:00:00    3\n1 days 04:00:00    4\n1 days 05:00:00    5\nFreq: h, dtype: int64 \n```", "```py\nIn [110]: tdi = pd.TimedeltaIndex([\"1 days\", pd.NaT, \"2 days\"])\n\nIn [111]: tdi.to_list()\nOut[111]: [Timedelta('1 days 00:00:00'), NaT, Timedelta('2 days 00:00:00')]\n\nIn [112]: dti = pd.date_range(\"20130101\", periods=3)\n\nIn [113]: dti.to_list()\nOut[113]: \n[Timestamp('2013-01-01 00:00:00'),\n Timestamp('2013-01-02 00:00:00'),\n Timestamp('2013-01-03 00:00:00')]\n\nIn [114]: (dti + tdi).to_list()\nOut[114]: [Timestamp('2013-01-02 00:00:00'), NaT, Timestamp('2013-01-05 00:00:00')]\n\nIn [115]: (dti - tdi).to_list()\nOut[115]: [Timestamp('2012-12-31 00:00:00'), NaT, Timestamp('2013-01-01 00:00:00')] \n```", "```py\nIn [116]: tdi / np.timedelta64(1, \"s\")\nOut[116]: Index([86400.0, nan, 172800.0], dtype='float64')\n\nIn [117]: tdi.astype(\"timedelta64[s]\")\nOut[117]: TimedeltaIndex(['1 days', NaT, '2 days'], dtype='timedelta64[s]', freq=None) \n```", "```py\n# adding or timedelta and date -> datelike\nIn [118]: tdi + pd.Timestamp(\"20130101\")\nOut[118]: DatetimeIndex(['2013-01-02', 'NaT', '2013-01-03'], dtype='datetime64[ns]', freq=None)\n\n# subtraction of a date and a timedelta -> datelike\n# note that trying to subtract a date from a Timedelta will raise an exception\nIn [119]: (pd.Timestamp(\"20130101\") - tdi).to_list()\nOut[119]: [Timestamp('2012-12-31 00:00:00'), NaT, Timestamp('2012-12-30 00:00:00')]\n\n# timedelta + timedelta -> timedelta\nIn [120]: tdi + pd.Timedelta(\"10 days\")\nOut[120]: TimedeltaIndex(['11 days', NaT, '12 days'], dtype='timedelta64[ns]', freq=None)\n\n# division can result in a Timedelta if the divisor is an integer\nIn [121]: tdi / 2\nOut[121]: TimedeltaIndex(['0 days 12:00:00', NaT, '1 days 00:00:00'], dtype='timedelta64[ns]', freq=None)\n\n# or a float64 Index if the divisor is a Timedelta\nIn [122]: tdi / tdi[0]\nOut[122]: Index([1.0, nan, 2.0], dtype='float64') \n```", "```py\nIn [123]: s.resample(\"D\").mean()\nOut[123]: \n1 days    11.5\n2 days    35.5\n3 days    59.5\n4 days    83.5\n5 days    97.5\nFreq: D, dtype: float64 \n```", "```py\nIn [1]: import datetime\n\n# strings\nIn [2]: pd.Timedelta(\"1 days\")\nOut[2]: Timedelta('1 days 00:00:00')\n\nIn [3]: pd.Timedelta(\"1 days 00:00:00\")\nOut[3]: Timedelta('1 days 00:00:00')\n\nIn [4]: pd.Timedelta(\"1 days 2 hours\")\nOut[4]: Timedelta('1 days 02:00:00')\n\nIn [5]: pd.Timedelta(\"-1 days 2 min 3us\")\nOut[5]: Timedelta('-2 days +23:57:59.999997')\n\n# like datetime.timedelta\n# note: these MUST be specified as keyword arguments\nIn [6]: pd.Timedelta(days=1, seconds=1)\nOut[6]: Timedelta('1 days 00:00:01')\n\n# integers with a unit\nIn [7]: pd.Timedelta(1, unit=\"d\")\nOut[7]: Timedelta('1 days 00:00:00')\n\n# from a datetime.timedelta/np.timedelta64\nIn [8]: pd.Timedelta(datetime.timedelta(days=1, seconds=1))\nOut[8]: Timedelta('1 days 00:00:01')\n\nIn [9]: pd.Timedelta(np.timedelta64(1, \"ms\"))\nOut[9]: Timedelta('0 days 00:00:00.001000')\n\n# negative Timedeltas have this string repr\n# to be more consistent with datetime.timedelta conventions\nIn [10]: pd.Timedelta(\"-1us\")\nOut[10]: Timedelta('-1 days +23:59:59.999999')\n\n# a NaT\nIn [11]: pd.Timedelta(\"nan\")\nOut[11]: NaT\n\nIn [12]: pd.Timedelta(\"nat\")\nOut[12]: NaT\n\n# ISO 8601 Duration strings\nIn [13]: pd.Timedelta(\"P0DT0H1M0S\")\nOut[13]: Timedelta('0 days 00:01:00')\n\nIn [14]: pd.Timedelta(\"P0DT0H0M0.000000123S\")\nOut[14]: Timedelta('0 days 00:00:00.000000123') \n```", "```py\nIn [15]: pd.Timedelta(pd.offsets.Second(2))\nOut[15]: Timedelta('0 days 00:00:02') \n```", "```py\nIn [16]: pd.Timedelta(pd.offsets.Day(2)) + pd.Timedelta(pd.offsets.Second(2)) + pd.Timedelta(\n ....:    \"00:00:00.000123\"\n ....: )\n ....: \nOut[16]: Timedelta('2 days 00:00:02.000123') \n```", "```py\nIn [17]: pd.to_timedelta(\"1 days 06:05:01.00003\")\nOut[17]: Timedelta('1 days 06:05:01.000030')\n\nIn [18]: pd.to_timedelta(\"15.5us\")\nOut[18]: Timedelta('0 days 00:00:00.000015500') \n```", "```py\nIn [19]: pd.to_timedelta([\"1 days 06:05:01.00003\", \"15.5us\", \"nan\"])\nOut[19]: TimedeltaIndex(['1 days 06:05:01.000030', '0 days 00:00:00.000015500', NaT], dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [20]: pd.to_timedelta(np.arange(5), unit=\"s\")\nOut[20]: \nTimedeltaIndex(['0 days 00:00:00', '0 days 00:00:01', '0 days 00:00:02',\n '0 days 00:00:03', '0 days 00:00:04'],\n dtype='timedelta64[ns]', freq=None)\n\nIn [21]: pd.to_timedelta(np.arange(5), unit=\"d\")\nOut[21]: TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'], dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [22]: pd.Timedelta.min\nOut[22]: Timedelta('-106752 days +00:12:43.145224193')\n\nIn [23]: pd.Timedelta.max\nOut[23]: Timedelta('106751 days 23:47:16.854775807') \n```", "```py\nIn [17]: pd.to_timedelta(\"1 days 06:05:01.00003\")\nOut[17]: Timedelta('1 days 06:05:01.000030')\n\nIn [18]: pd.to_timedelta(\"15.5us\")\nOut[18]: Timedelta('0 days 00:00:00.000015500') \n```", "```py\nIn [19]: pd.to_timedelta([\"1 days 06:05:01.00003\", \"15.5us\", \"nan\"])\nOut[19]: TimedeltaIndex(['1 days 06:05:01.000030', '0 days 00:00:00.000015500', NaT], dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [20]: pd.to_timedelta(np.arange(5), unit=\"s\")\nOut[20]: \nTimedeltaIndex(['0 days 00:00:00', '0 days 00:00:01', '0 days 00:00:02',\n '0 days 00:00:03', '0 days 00:00:04'],\n dtype='timedelta64[ns]', freq=None)\n\nIn [21]: pd.to_timedelta(np.arange(5), unit=\"d\")\nOut[21]: TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'], dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [22]: pd.Timedelta.min\nOut[22]: Timedelta('-106752 days +00:12:43.145224193')\n\nIn [23]: pd.Timedelta.max\nOut[23]: Timedelta('106751 days 23:47:16.854775807') \n```", "```py\nIn [24]: s = pd.Series(pd.date_range(\"2012-1-1\", periods=3, freq=\"D\"))\n\nIn [25]: td = pd.Series([pd.Timedelta(days=i) for i in range(3)])\n\nIn [26]: df = pd.DataFrame({\"A\": s, \"B\": td})\n\nIn [27]: df\nOut[27]: \n A      B\n0 2012-01-01 0 days\n1 2012-01-02 1 days\n2 2012-01-03 2 days\n\nIn [28]: df[\"C\"] = df[\"A\"] + df[\"B\"]\n\nIn [29]: df\nOut[29]: \n A      B          C\n0 2012-01-01 0 days 2012-01-01\n1 2012-01-02 1 days 2012-01-03\n2 2012-01-03 2 days 2012-01-05\n\nIn [30]: df.dtypes\nOut[30]: \nA     datetime64[ns]\nB    timedelta64[ns]\nC     datetime64[ns]\ndtype: object\n\nIn [31]: s - s.max()\nOut[31]: \n0   -2 days\n1   -1 days\n2    0 days\ndtype: timedelta64[ns]\n\nIn [32]: s - datetime.datetime(2011, 1, 1, 3, 5)\nOut[32]: \n0   364 days 20:55:00\n1   365 days 20:55:00\n2   366 days 20:55:00\ndtype: timedelta64[ns]\n\nIn [33]: s + datetime.timedelta(minutes=5)\nOut[33]: \n0   2012-01-01 00:05:00\n1   2012-01-02 00:05:00\n2   2012-01-03 00:05:00\ndtype: datetime64[ns]\n\nIn [34]: s + pd.offsets.Minute(5)\nOut[34]: \n0   2012-01-01 00:05:00\n1   2012-01-02 00:05:00\n2   2012-01-03 00:05:00\ndtype: datetime64[ns]\n\nIn [35]: s + pd.offsets.Minute(5) + pd.offsets.Milli(5)\nOut[35]: \n0   2012-01-01 00:05:00.005\n1   2012-01-02 00:05:00.005\n2   2012-01-03 00:05:00.005\ndtype: datetime64[ns] \n```", "```py\nIn [36]: y = s - s[0]\n\nIn [37]: y\nOut[37]: \n0   0 days\n1   1 days\n2   2 days\ndtype: timedelta64[ns] \n```", "```py\nIn [38]: y = s - s.shift()\n\nIn [39]: y\nOut[39]: \n0      NaT\n1   1 days\n2   1 days\ndtype: timedelta64[ns] \n```", "```py\nIn [40]: y[1] = np.nan\n\nIn [41]: y\nOut[41]: \n0      NaT\n1      NaT\n2   1 days\ndtype: timedelta64[ns] \n```", "```py\nIn [42]: s.max() - s\nOut[42]: \n0   2 days\n1   1 days\n2   0 days\ndtype: timedelta64[ns]\n\nIn [43]: datetime.datetime(2011, 1, 1, 3, 5) - s\nOut[43]: \n0   -365 days +03:05:00\n1   -366 days +03:05:00\n2   -367 days +03:05:00\ndtype: timedelta64[ns]\n\nIn [44]: datetime.timedelta(minutes=5) + s\nOut[44]: \n0   2012-01-01 00:05:00\n1   2012-01-02 00:05:00\n2   2012-01-03 00:05:00\ndtype: datetime64[ns] \n```", "```py\nIn [45]: A = s - pd.Timestamp(\"20120101\") - pd.Timedelta(\"00:05:05\")\n\nIn [46]: B = s - pd.Series(pd.date_range(\"2012-1-2\", periods=3, freq=\"D\"))\n\nIn [47]: df = pd.DataFrame({\"A\": A, \"B\": B})\n\nIn [48]: df\nOut[48]: \n A       B\n0 -1 days +23:54:55 -1 days\n1   0 days 23:54:55 -1 days\n2   1 days 23:54:55 -1 days\n\nIn [49]: df.min()\nOut[49]: \nA   -1 days +23:54:55\nB   -1 days +00:00:00\ndtype: timedelta64[ns]\n\nIn [50]: df.min(axis=1)\nOut[50]: \n0   -1 days\n1   -1 days\n2   -1 days\ndtype: timedelta64[ns]\n\nIn [51]: df.idxmin()\nOut[51]: \nA    0\nB    0\ndtype: int64\n\nIn [52]: df.idxmax()\nOut[52]: \nA    2\nB    0\ndtype: int64 \n```", "```py\nIn [53]: df.min().max()\nOut[53]: Timedelta('-1 days +23:54:55')\n\nIn [54]: df.min(axis=1).min()\nOut[54]: Timedelta('-1 days +00:00:00')\n\nIn [55]: df.min().idxmax()\nOut[55]: 'A'\n\nIn [56]: df.min(axis=1).idxmin()\nOut[56]: 0 \n```", "```py\nIn [57]: y.fillna(pd.Timedelta(0))\nOut[57]: \n0   0 days\n1   0 days\n2   1 days\ndtype: timedelta64[ns]\n\nIn [58]: y.fillna(pd.Timedelta(10, unit=\"s\"))\nOut[58]: \n0   0 days 00:00:10\n1   0 days 00:00:10\n2   1 days 00:00:00\ndtype: timedelta64[ns]\n\nIn [59]: y.fillna(pd.Timedelta(\"-1 days, 00:00:05\"))\nOut[59]: \n0   -1 days +00:00:05\n1   -1 days +00:00:05\n2     1 days 00:00:00\ndtype: timedelta64[ns] \n```", "```py\nIn [60]: td1 = pd.Timedelta(\"-1 days 2 hours 3 seconds\")\n\nIn [61]: td1\nOut[61]: Timedelta('-2 days +21:59:57')\n\nIn [62]: -1 * td1\nOut[62]: Timedelta('1 days 02:00:03')\n\nIn [63]: -td1\nOut[63]: Timedelta('1 days 02:00:03')\n\nIn [64]: abs(td1)\nOut[64]: Timedelta('1 days 02:00:03') \n```", "```py\nIn [65]: y2 = pd.Series(\n ....:    pd.to_timedelta([\"-1 days +00:00:05\", \"nat\", \"-1 days +00:00:05\", \"1 days\"])\n ....: )\n ....: \n\nIn [66]: y2\nOut[66]: \n0   -1 days +00:00:05\n1                 NaT\n2   -1 days +00:00:05\n3     1 days 00:00:00\ndtype: timedelta64[ns]\n\nIn [67]: y2.mean()\nOut[67]: Timedelta('-1 days +16:00:03.333333334')\n\nIn [68]: y2.median()\nOut[68]: Timedelta('-1 days +00:00:05')\n\nIn [69]: y2.quantile(0.1)\nOut[69]: Timedelta('-1 days +00:00:05')\n\nIn [70]: y2.sum()\nOut[70]: Timedelta('-1 days +00:00:10') \n```", "```py\nIn [71]: december = pd.Series(pd.date_range(\"20121201\", periods=4))\n\nIn [72]: january = pd.Series(pd.date_range(\"20130101\", periods=4))\n\nIn [73]: td = january - december\n\nIn [74]: td[2] += datetime.timedelta(minutes=5, seconds=3)\n\nIn [75]: td[3] = np.nan\n\nIn [76]: td\nOut[76]: \n0   31 days 00:00:00\n1   31 days 00:00:00\n2   31 days 00:05:03\n3                NaT\ndtype: timedelta64[ns]\n\n# to seconds\nIn [77]: td.astype(\"timedelta64[s]\")\nOut[77]: \n0   31 days 00:00:00\n1   31 days 00:00:00\n2   31 days 00:05:03\n3                NaT\ndtype: timedelta64[s] \n```", "```py\n# to days\nIn [78]: td / np.timedelta64(1, \"D\")\nOut[78]: \n0    31.000000\n1    31.000000\n2    31.003507\n3          NaN\ndtype: float64 \n```", "```py\nIn [79]: td * -1\nOut[79]: \n0   -31 days +00:00:00\n1   -31 days +00:00:00\n2   -32 days +23:54:57\n3                  NaT\ndtype: timedelta64[ns]\n\nIn [80]: td * pd.Series([1, 2, 3, 4])\nOut[80]: \n0   31 days 00:00:00\n1   62 days 00:00:00\n2   93 days 00:15:09\n3                NaT\ndtype: timedelta64[ns] \n```", "```py\nIn [81]: td // pd.Timedelta(days=3, hours=4)\nOut[81]: \n0    9.0\n1    9.0\n2    9.0\n3    NaN\ndtype: float64\n\nIn [82]: pd.Timedelta(days=3, hours=4) // td\nOut[82]: \n0    0.0\n1    0.0\n2    0.0\n3    NaN\ndtype: float64 \n```", "```py\nIn [83]: pd.Timedelta(hours=37) % datetime.timedelta(hours=2)\nOut[83]: Timedelta('0 days 01:00:00')\n\n# divmod against a timedelta-like returns a pair (int, Timedelta)\nIn [84]: divmod(datetime.timedelta(hours=2), pd.Timedelta(minutes=11))\nOut[84]: (10, Timedelta('0 days 00:10:00'))\n\n# divmod against a numeric returns a pair (Timedelta, Timedelta)\nIn [85]: divmod(pd.Timedelta(hours=25), 86400000000000)\nOut[85]: (Timedelta('0 days 00:00:00.000000001'), Timedelta('0 days 01:00:00')) \n```", "```py\nIn [86]: td.dt.days\nOut[86]: \n0    31.0\n1    31.0\n2    31.0\n3     NaN\ndtype: float64\n\nIn [87]: td.dt.seconds\nOut[87]: \n0      0.0\n1      0.0\n2    303.0\n3      NaN\ndtype: float64 \n```", "```py\nIn [88]: tds = pd.Timedelta(\"31 days 5 min 3 sec\")\n\nIn [89]: tds.days\nOut[89]: 31\n\nIn [90]: tds.seconds\nOut[90]: 303\n\nIn [91]: (-tds).seconds\nOut[91]: 86097 \n```", "```py\nIn [92]: td.dt.components\nOut[92]: \n days  hours  minutes  seconds  milliseconds  microseconds  nanoseconds\n0  31.0    0.0      0.0      0.0           0.0           0.0          0.0\n1  31.0    0.0      0.0      0.0           0.0           0.0          0.0\n2  31.0    0.0      5.0      3.0           0.0           0.0          0.0\n3   NaN    NaN      NaN      NaN           NaN           NaN          NaN\n\nIn [93]: td.dt.components.seconds\nOut[93]: \n0    0.0\n1    0.0\n2    3.0\n3    NaN\nName: seconds, dtype: float64 \n```", "```py\nIn [94]: pd.Timedelta(\n ....:    days=6, minutes=50, seconds=3, milliseconds=10, microseconds=10, nanoseconds=12\n ....: ).isoformat()\n ....: \nOut[94]: 'P6DT0H50M3.010010012S' \n```", "```py\nIn [95]: pd.TimedeltaIndex(\n ....:    [\n ....:        \"1 days\",\n ....:        \"1 days, 00:00:05\",\n ....:        np.timedelta64(2, \"D\"),\n ....:        datetime.timedelta(days=2, seconds=2),\n ....:    ]\n ....: )\n ....: \nOut[95]: \nTimedeltaIndex(['1 days 00:00:00', '1 days 00:00:05', '2 days 00:00:00',\n '2 days 00:00:02'],\n dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [96]: pd.TimedeltaIndex([\"0 days\", \"10 days\", \"20 days\"], freq=\"infer\")\nOut[96]: TimedeltaIndex(['0 days', '10 days', '20 days'], dtype='timedelta64[ns]', freq='10D') \n```", "```py\nIn [97]: pd.timedelta_range(start=\"1 days\", periods=5)\nOut[97]: TimedeltaIndex(['1 days', '2 days', '3 days', '4 days', '5 days'], dtype='timedelta64[ns]', freq='D') \n```", "```py\nIn [98]: pd.timedelta_range(start=\"1 days\", end=\"5 days\")\nOut[98]: TimedeltaIndex(['1 days', '2 days', '3 days', '4 days', '5 days'], dtype='timedelta64[ns]', freq='D')\n\nIn [99]: pd.timedelta_range(end=\"10 days\", periods=4)\nOut[99]: TimedeltaIndex(['7 days', '8 days', '9 days', '10 days'], dtype='timedelta64[ns]', freq='D') \n```", "```py\nIn [100]: pd.timedelta_range(start=\"1 days\", end=\"2 days\", freq=\"30min\")\nOut[100]: \nTimedeltaIndex(['1 days 00:00:00', '1 days 00:30:00', '1 days 01:00:00',\n '1 days 01:30:00', '1 days 02:00:00', '1 days 02:30:00',\n '1 days 03:00:00', '1 days 03:30:00', '1 days 04:00:00',\n '1 days 04:30:00', '1 days 05:00:00', '1 days 05:30:00',\n '1 days 06:00:00', '1 days 06:30:00', '1 days 07:00:00',\n '1 days 07:30:00', '1 days 08:00:00', '1 days 08:30:00',\n '1 days 09:00:00', '1 days 09:30:00', '1 days 10:00:00',\n '1 days 10:30:00', '1 days 11:00:00', '1 days 11:30:00',\n '1 days 12:00:00', '1 days 12:30:00', '1 days 13:00:00',\n '1 days 13:30:00', '1 days 14:00:00', '1 days 14:30:00',\n '1 days 15:00:00', '1 days 15:30:00', '1 days 16:00:00',\n '1 days 16:30:00', '1 days 17:00:00', '1 days 17:30:00',\n '1 days 18:00:00', '1 days 18:30:00', '1 days 19:00:00',\n '1 days 19:30:00', '1 days 20:00:00', '1 days 20:30:00',\n '1 days 21:00:00', '1 days 21:30:00', '1 days 22:00:00',\n '1 days 22:30:00', '1 days 23:00:00', '1 days 23:30:00',\n '2 days 00:00:00'],\n dtype='timedelta64[ns]', freq='30min')\n\nIn [101]: pd.timedelta_range(start=\"1 days\", periods=5, freq=\"2D5h\")\nOut[101]: \nTimedeltaIndex(['1 days 00:00:00', '3 days 05:00:00', '5 days 10:00:00',\n '7 days 15:00:00', '9 days 20:00:00'],\n dtype='timedelta64[ns]', freq='53h') \n```", "```py\nIn [102]: pd.timedelta_range(\"0 days\", \"4 days\", periods=5)\nOut[102]: TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'], dtype='timedelta64[ns]', freq=None)\n\nIn [103]: pd.timedelta_range(\"0 days\", \"4 days\", periods=10)\nOut[103]: \nTimedeltaIndex(['0 days 00:00:00', '0 days 10:40:00', '0 days 21:20:00',\n '1 days 08:00:00', '1 days 18:40:00', '2 days 05:20:00',\n '2 days 16:00:00', '3 days 02:40:00', '3 days 13:20:00',\n '4 days 00:00:00'],\n dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [104]: s = pd.Series(\n .....:    np.arange(100),\n .....:    index=pd.timedelta_range(\"1 days\", periods=100, freq=\"h\"),\n .....: )\n .....: \n\nIn [105]: s\nOut[105]: \n1 days 00:00:00     0\n1 days 01:00:00     1\n1 days 02:00:00     2\n1 days 03:00:00     3\n1 days 04:00:00     4\n ..\n4 days 23:00:00    95\n5 days 00:00:00    96\n5 days 01:00:00    97\n5 days 02:00:00    98\n5 days 03:00:00    99\nFreq: h, Length: 100, dtype: int64 \n```", "```py\nIn [106]: s[\"1 day\":\"2 day\"]\nOut[106]: \n1 days 00:00:00     0\n1 days 01:00:00     1\n1 days 02:00:00     2\n1 days 03:00:00     3\n1 days 04:00:00     4\n ..\n2 days 19:00:00    43\n2 days 20:00:00    44\n2 days 21:00:00    45\n2 days 22:00:00    46\n2 days 23:00:00    47\nFreq: h, Length: 48, dtype: int64\n\nIn [107]: s[\"1 day 01:00:00\"]\nOut[107]: 1\n\nIn [108]: s[pd.Timedelta(\"1 day 1h\")]\nOut[108]: 1 \n```", "```py\nIn [109]: s[\"1 day\":\"1 day 5 hours\"]\nOut[109]: \n1 days 00:00:00    0\n1 days 01:00:00    1\n1 days 02:00:00    2\n1 days 03:00:00    3\n1 days 04:00:00    4\n1 days 05:00:00    5\nFreq: h, dtype: int64 \n```", "```py\nIn [110]: tdi = pd.TimedeltaIndex([\"1 days\", pd.NaT, \"2 days\"])\n\nIn [111]: tdi.to_list()\nOut[111]: [Timedelta('1 days 00:00:00'), NaT, Timedelta('2 days 00:00:00')]\n\nIn [112]: dti = pd.date_range(\"20130101\", periods=3)\n\nIn [113]: dti.to_list()\nOut[113]: \n[Timestamp('2013-01-01 00:00:00'),\n Timestamp('2013-01-02 00:00:00'),\n Timestamp('2013-01-03 00:00:00')]\n\nIn [114]: (dti + tdi).to_list()\nOut[114]: [Timestamp('2013-01-02 00:00:00'), NaT, Timestamp('2013-01-05 00:00:00')]\n\nIn [115]: (dti - tdi).to_list()\nOut[115]: [Timestamp('2012-12-31 00:00:00'), NaT, Timestamp('2013-01-01 00:00:00')] \n```", "```py\nIn [116]: tdi / np.timedelta64(1, \"s\")\nOut[116]: Index([86400.0, nan, 172800.0], dtype='float64')\n\nIn [117]: tdi.astype(\"timedelta64[s]\")\nOut[117]: TimedeltaIndex(['1 days', NaT, '2 days'], dtype='timedelta64[s]', freq=None) \n```", "```py\n# adding or timedelta and date -> datelike\nIn [118]: tdi + pd.Timestamp(\"20130101\")\nOut[118]: DatetimeIndex(['2013-01-02', 'NaT', '2013-01-03'], dtype='datetime64[ns]', freq=None)\n\n# subtraction of a date and a timedelta -> datelike\n# note that trying to subtract a date from a Timedelta will raise an exception\nIn [119]: (pd.Timestamp(\"20130101\") - tdi).to_list()\nOut[119]: [Timestamp('2012-12-31 00:00:00'), NaT, Timestamp('2012-12-30 00:00:00')]\n\n# timedelta + timedelta -> timedelta\nIn [120]: tdi + pd.Timedelta(\"10 days\")\nOut[120]: TimedeltaIndex(['11 days', NaT, '12 days'], dtype='timedelta64[ns]', freq=None)\n\n# division can result in a Timedelta if the divisor is an integer\nIn [121]: tdi / 2\nOut[121]: TimedeltaIndex(['0 days 12:00:00', NaT, '1 days 00:00:00'], dtype='timedelta64[ns]', freq=None)\n\n# or a float64 Index if the divisor is a Timedelta\nIn [122]: tdi / tdi[0]\nOut[122]: Index([1.0, nan, 2.0], dtype='float64') \n```", "```py\nIn [97]: pd.timedelta_range(start=\"1 days\", periods=5)\nOut[97]: TimedeltaIndex(['1 days', '2 days', '3 days', '4 days', '5 days'], dtype='timedelta64[ns]', freq='D') \n```", "```py\nIn [98]: pd.timedelta_range(start=\"1 days\", end=\"5 days\")\nOut[98]: TimedeltaIndex(['1 days', '2 days', '3 days', '4 days', '5 days'], dtype='timedelta64[ns]', freq='D')\n\nIn [99]: pd.timedelta_range(end=\"10 days\", periods=4)\nOut[99]: TimedeltaIndex(['7 days', '8 days', '9 days', '10 days'], dtype='timedelta64[ns]', freq='D') \n```", "```py\nIn [100]: pd.timedelta_range(start=\"1 days\", end=\"2 days\", freq=\"30min\")\nOut[100]: \nTimedeltaIndex(['1 days 00:00:00', '1 days 00:30:00', '1 days 01:00:00',\n '1 days 01:30:00', '1 days 02:00:00', '1 days 02:30:00',\n '1 days 03:00:00', '1 days 03:30:00', '1 days 04:00:00',\n '1 days 04:30:00', '1 days 05:00:00', '1 days 05:30:00',\n '1 days 06:00:00', '1 days 06:30:00', '1 days 07:00:00',\n '1 days 07:30:00', '1 days 08:00:00', '1 days 08:30:00',\n '1 days 09:00:00', '1 days 09:30:00', '1 days 10:00:00',\n '1 days 10:30:00', '1 days 11:00:00', '1 days 11:30:00',\n '1 days 12:00:00', '1 days 12:30:00', '1 days 13:00:00',\n '1 days 13:30:00', '1 days 14:00:00', '1 days 14:30:00',\n '1 days 15:00:00', '1 days 15:30:00', '1 days 16:00:00',\n '1 days 16:30:00', '1 days 17:00:00', '1 days 17:30:00',\n '1 days 18:00:00', '1 days 18:30:00', '1 days 19:00:00',\n '1 days 19:30:00', '1 days 20:00:00', '1 days 20:30:00',\n '1 days 21:00:00', '1 days 21:30:00', '1 days 22:00:00',\n '1 days 22:30:00', '1 days 23:00:00', '1 days 23:30:00',\n '2 days 00:00:00'],\n dtype='timedelta64[ns]', freq='30min')\n\nIn [101]: pd.timedelta_range(start=\"1 days\", periods=5, freq=\"2D5h\")\nOut[101]: \nTimedeltaIndex(['1 days 00:00:00', '3 days 05:00:00', '5 days 10:00:00',\n '7 days 15:00:00', '9 days 20:00:00'],\n dtype='timedelta64[ns]', freq='53h') \n```", "```py\nIn [102]: pd.timedelta_range(\"0 days\", \"4 days\", periods=5)\nOut[102]: TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'], dtype='timedelta64[ns]', freq=None)\n\nIn [103]: pd.timedelta_range(\"0 days\", \"4 days\", periods=10)\nOut[103]: \nTimedeltaIndex(['0 days 00:00:00', '0 days 10:40:00', '0 days 21:20:00',\n '1 days 08:00:00', '1 days 18:40:00', '2 days 05:20:00',\n '2 days 16:00:00', '3 days 02:40:00', '3 days 13:20:00',\n '4 days 00:00:00'],\n dtype='timedelta64[ns]', freq=None) \n```", "```py\nIn [104]: s = pd.Series(\n .....:    np.arange(100),\n .....:    index=pd.timedelta_range(\"1 days\", periods=100, freq=\"h\"),\n .....: )\n .....: \n\nIn [105]: s\nOut[105]: \n1 days 00:00:00     0\n1 days 01:00:00     1\n1 days 02:00:00     2\n1 days 03:00:00     3\n1 days 04:00:00     4\n ..\n4 days 23:00:00    95\n5 days 00:00:00    96\n5 days 01:00:00    97\n5 days 02:00:00    98\n5 days 03:00:00    99\nFreq: h, Length: 100, dtype: int64 \n```", "```py\nIn [106]: s[\"1 day\":\"2 day\"]\nOut[106]: \n1 days 00:00:00     0\n1 days 01:00:00     1\n1 days 02:00:00     2\n1 days 03:00:00     3\n1 days 04:00:00     4\n ..\n2 days 19:00:00    43\n2 days 20:00:00    44\n2 days 21:00:00    45\n2 days 22:00:00    46\n2 days 23:00:00    47\nFreq: h, Length: 48, dtype: int64\n\nIn [107]: s[\"1 day 01:00:00\"]\nOut[107]: 1\n\nIn [108]: s[pd.Timedelta(\"1 day 1h\")]\nOut[108]: 1 \n```", "```py\nIn [109]: s[\"1 day\":\"1 day 5 hours\"]\nOut[109]: \n1 days 00:00:00    0\n1 days 01:00:00    1\n1 days 02:00:00    2\n1 days 03:00:00    3\n1 days 04:00:00    4\n1 days 05:00:00    5\nFreq: h, dtype: int64 \n```", "```py\nIn [110]: tdi = pd.TimedeltaIndex([\"1 days\", pd.NaT, \"2 days\"])\n\nIn [111]: tdi.to_list()\nOut[111]: [Timedelta('1 days 00:00:00'), NaT, Timedelta('2 days 00:00:00')]\n\nIn [112]: dti = pd.date_range(\"20130101\", periods=3)\n\nIn [113]: dti.to_list()\nOut[113]: \n[Timestamp('2013-01-01 00:00:00'),\n Timestamp('2013-01-02 00:00:00'),\n Timestamp('2013-01-03 00:00:00')]\n\nIn [114]: (dti + tdi).to_list()\nOut[114]: [Timestamp('2013-01-02 00:00:00'), NaT, Timestamp('2013-01-05 00:00:00')]\n\nIn [115]: (dti - tdi).to_list()\nOut[115]: [Timestamp('2012-12-31 00:00:00'), NaT, Timestamp('2013-01-01 00:00:00')] \n```", "```py\nIn [116]: tdi / np.timedelta64(1, \"s\")\nOut[116]: Index([86400.0, nan, 172800.0], dtype='float64')\n\nIn [117]: tdi.astype(\"timedelta64[s]\")\nOut[117]: TimedeltaIndex(['1 days', NaT, '2 days'], dtype='timedelta64[s]', freq=None) \n```", "```py\n# adding or timedelta and date -> datelike\nIn [118]: tdi + pd.Timestamp(\"20130101\")\nOut[118]: DatetimeIndex(['2013-01-02', 'NaT', '2013-01-03'], dtype='datetime64[ns]', freq=None)\n\n# subtraction of a date and a timedelta -> datelike\n# note that trying to subtract a date from a Timedelta will raise an exception\nIn [119]: (pd.Timestamp(\"20130101\") - tdi).to_list()\nOut[119]: [Timestamp('2012-12-31 00:00:00'), NaT, Timestamp('2012-12-30 00:00:00')]\n\n# timedelta + timedelta -> timedelta\nIn [120]: tdi + pd.Timedelta(\"10 days\")\nOut[120]: TimedeltaIndex(['11 days', NaT, '12 days'], dtype='timedelta64[ns]', freq=None)\n\n# division can result in a Timedelta if the divisor is an integer\nIn [121]: tdi / 2\nOut[121]: TimedeltaIndex(['0 days 12:00:00', NaT, '1 days 00:00:00'], dtype='timedelta64[ns]', freq=None)\n\n# or a float64 Index if the divisor is a Timedelta\nIn [122]: tdi / tdi[0]\nOut[122]: Index([1.0, nan, 2.0], dtype='float64') \n```", "```py\nIn [123]: s.resample(\"D\").mean()\nOut[123]: \n1 days    11.5\n2 days    35.5\n3 days    59.5\n4 days    83.5\n5 days    97.5\nFreq: D, dtype: float64 \n```"]