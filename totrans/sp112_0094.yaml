- en: scipy.fftpack.rfft
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.rfft.html#scipy.fftpack.rfft](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.fftpack.rfft.html#scipy.fftpack.rfft)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Discrete Fourier transform of a real sequence.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like, real-valued'
  prefs: []
  type: TYPE_NORMAL
- en: The data to transform.
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Defines the length of the Fourier transform. If *n* is not specified (the default)
    then `n = x.shape[axis]`. If `n < x.shape[axis]`, *x* is truncated, if `n > x.shape[axis]`,
    *x* is zero-padded.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The axis along which the transform is applied. The default is the last axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**overwrite_x**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If set to true, the contents of *x* can be overwritten. Default is False.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**z**real ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: 'The returned real array contains:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'where:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`fft`](scipy.fftpack.fft.html#scipy.fftpack.fft "scipy.fftpack.fft"), [`irfft`](scipy.fftpack.irfft.html#scipy.fftpack.irfft
    "scipy.fftpack.irfft"), [`scipy.fft.rfft`](scipy.fft.rfft.html#scipy.fft.rfft
    "scipy.fft.rfft")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Within numerical accuracy, `y == rfft(irfft(y))`.
  prefs: []
  type: TYPE_NORMAL
- en: Both single and double precision routines are implemented. Half precision inputs
    will be converted to single precision. Non-floating-point inputs will be converted
    to double precision. Long-double precision inputs are not supported.
  prefs: []
  type: TYPE_NORMAL
- en: To get an output with a complex datatype, consider using the newer function
    [`scipy.fft.rfft`](scipy.fft.rfft.html#scipy.fft.rfft "scipy.fft.rfft").
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
