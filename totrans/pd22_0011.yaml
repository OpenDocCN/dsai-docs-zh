- en: How to reshape the layout of tables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/getting_started/intro_tutorials/07_reshape_table_layout.html](https://pandas.pydata.org/docs/getting_started/intro_tutorials/07_reshape_table_layout.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Sort table rows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I want to sort the Titanic data according to the age of the passengers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: I want to sort the Titanic data according to the cabin class and age in descending
    order.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: With [`DataFrame.sort_values()`](../../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), the rows in the table are sorted according to
    the defined column(s). The index will follow the row order.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: More details about sorting of tables is provided in the user guide section on
    [sorting data](../../user_guide/basics.html#basics-sorting).
  prefs: []
  type: TYPE_NORMAL
- en: Long to wide table format
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s use a small subset of the air quality data set. We focus on \(NO_2\) data
    and only use the first two measurements of each location (i.e. the head of each
    group). The subset of data will be called `no2_subset`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/07_pivot.svg](../Images/f3505715c546befb8217e9ac3af9c96e.png)'
  prefs: []
  type: TYPE_IMG
- en: I want the values for the three stations as separate columns next to each other.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The [`pivot()`](../../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    function is purely reshaping of the data: a single value for each index/column
    combination is required.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'As pandas supports plotting of multiple columns (see [plotting tutorial](04_plotting.html#min-tut-04-plotting))
    out of the box, the conversion from *long* to *wide* table format enables the
    plotting of the different time series at the same time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/7_reshape_columns.png](../Images/701eea6ceaf3fb8f6a9d75aeeca41dc3.png)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: When the `index` parameter is not defined, the existing index (row labels) is
    used.
  prefs: []
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: For more information about [`pivot()`](../../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), see the user guide section on [pivoting DataFrame objects](../../user_guide/reshaping.html#reshaping-reshaping).
  prefs: []
  type: TYPE_NORMAL
- en: Pivot table
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![../../_images/07_pivot_table.svg](../Images/7deea040f7195f086af3797c3955e5ef.png)'
  prefs: []
  type: TYPE_IMG
- en: I want the mean concentrations for \(NO_2\) and \(PM_{2.5}\) in each of the
    stations in table form.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: In the case of [`pivot()`](../../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), the data is only rearranged. When multiple values need
    to be aggregated (in this specific case, the values on different time steps),
    [`pivot_table()`](../../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") can be used, providing an aggregation function
    (e.g. mean) on how to combine these values.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Pivot table is a well known concept in spreadsheet software. When interested
    in the row/column margins (subtotals) for each variable, set the `margins` parameter
    to `True`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: For more information about [`pivot_table()`](../../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table"), see the user guide section on [pivot tables](../../user_guide/reshaping.html#reshaping-pivot).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'In case you are wondering, [`pivot_table()`](../../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") is indeed directly linked to [`groupby()`](../../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"). The same result can be derived by grouping on both
    `parameter` and `location`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: Wide to long format
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting again from the wide format table created in the previous section, we
    add a new index to the `DataFrame` with [`reset_index()`](../../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/07_melt.svg](../Images/1b50e14df91f80c406faf5c95af29551.png)'
  prefs: []
  type: TYPE_IMG
- en: I want to collect all air quality \(NO_2\) measurements in a single column (long
    format).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The [`pandas.melt()`](../../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    method on a `DataFrame` converts the data table from wide format to long format.
    The column headers become the variable names in a newly created column.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The solution is the short version on how to apply [`pandas.melt()`](../../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt"). The method will *melt* all columns NOT mentioned in `id_vars`
    together into two columns: A column with the column header names and a column
    with the values itself. The latter column gets by default the name `value`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The parameters passed to [`pandas.melt()`](../../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt") can be defined in more detail:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The additional parameters have the following effects:'
  prefs: []
  type: TYPE_NORMAL
- en: '`value_vars` defines which columns to *melt* together'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_name` provides a custom column name for the values column instead of
    the default column name `value`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`var_name` provides a custom column name for the column collecting the column
    header names. Otherwise it takes the index name or a default `variable`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hence, the arguments `value_name` and `var_name` are just user-defined names
    for the two generated columns. The columns to melt are defined by `id_vars` and
    `value_vars`.
  prefs: []
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: Conversion from wide to long format with [`pandas.melt()`](../../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt") is explained in the user guide section on [reshaping by melt](../../user_guide/reshaping.html#reshaping-melt).
  prefs: []
  type: TYPE_NORMAL
- en: REMEMBER
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Sorting by one or more columns is supported by `sort_values`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pivot` function is purely restructuring of the data, `pivot_table` supports
    aggregations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The reverse of `pivot` (long to wide format) is `melt` (wide to long format).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: A full overview is available in the user guide on the pages about [reshaping
    and pivoting](../../user_guide/reshaping.html#reshaping).
  prefs: []
  type: TYPE_NORMAL
- en: Sort table rows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I want to sort the Titanic data according to the age of the passengers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: I want to sort the Titanic data according to the cabin class and age in descending
    order.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: With [`DataFrame.sort_values()`](../../reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values
    "pandas.DataFrame.sort_values"), the rows in the table are sorted according to
    the defined column(s). The index will follow the row order.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: More details about sorting of tables is provided in the user guide section on
    [sorting data](../../user_guide/basics.html#basics-sorting).
  prefs: []
  type: TYPE_NORMAL
- en: Long to wide table format
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s use a small subset of the air quality data set. We focus on \(NO_2\) data
    and only use the first two measurements of each location (i.e. the head of each
    group). The subset of data will be called `no2_subset`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/07_pivot.svg](../Images/f3505715c546befb8217e9ac3af9c96e.png)'
  prefs: []
  type: TYPE_IMG
- en: I want the values for the three stations as separate columns next to each other.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The [`pivot()`](../../reference/api/pandas.pivot.html#pandas.pivot "pandas.pivot")
    function is purely reshaping of the data: a single value for each index/column
    combination is required.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'As pandas supports plotting of multiple columns (see [plotting tutorial](04_plotting.html#min-tut-04-plotting))
    out of the box, the conversion from *long* to *wide* table format enables the
    plotting of the different time series at the same time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/7_reshape_columns.png](../Images/701eea6ceaf3fb8f6a9d75aeeca41dc3.png)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: When the `index` parameter is not defined, the existing index (row labels) is
    used.
  prefs: []
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: For more information about [`pivot()`](../../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), see the user guide section on [pivoting DataFrame objects](../../user_guide/reshaping.html#reshaping-reshaping).
  prefs: []
  type: TYPE_NORMAL
- en: Pivot table
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![../../_images/07_pivot_table.svg](../Images/7deea040f7195f086af3797c3955e5ef.png)'
  prefs: []
  type: TYPE_IMG
- en: I want the mean concentrations for \(NO_2\) and \(PM_{2.5}\) in each of the
    stations in table form.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: In the case of [`pivot()`](../../reference/api/pandas.DataFrame.pivot.html#pandas.DataFrame.pivot
    "pandas.DataFrame.pivot"), the data is only rearranged. When multiple values need
    to be aggregated (in this specific case, the values on different time steps),
    [`pivot_table()`](../../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") can be used, providing an aggregation function
    (e.g. mean) on how to combine these values.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Pivot table is a well known concept in spreadsheet software. When interested
    in the row/column margins (subtotals) for each variable, set the `margins` parameter
    to `True`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: For more information about [`pivot_table()`](../../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table"), see the user guide section on [pivot tables](../../user_guide/reshaping.html#reshaping-pivot).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'In case you are wondering, [`pivot_table()`](../../reference/api/pandas.DataFrame.pivot_table.html#pandas.DataFrame.pivot_table
    "pandas.DataFrame.pivot_table") is indeed directly linked to [`groupby()`](../../reference/api/pandas.DataFrame.groupby.html#pandas.DataFrame.groupby
    "pandas.DataFrame.groupby"). The same result can be derived by grouping on both
    `parameter` and `location`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: Wide to long format
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting again from the wide format table created in the previous section, we
    add a new index to the `DataFrame` with [`reset_index()`](../../reference/api/pandas.DataFrame.reset_index.html#pandas.DataFrame.reset_index
    "pandas.DataFrame.reset_index").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/07_melt.svg](../Images/1b50e14df91f80c406faf5c95af29551.png)'
  prefs: []
  type: TYPE_IMG
- en: I want to collect all air quality \(NO_2\) measurements in a single column (long
    format).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The [`pandas.melt()`](../../reference/api/pandas.melt.html#pandas.melt "pandas.melt")
    method on a `DataFrame` converts the data table from wide format to long format.
    The column headers become the variable names in a newly created column.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The solution is the short version on how to apply [`pandas.melt()`](../../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt"). The method will *melt* all columns NOT mentioned in `id_vars`
    together into two columns: A column with the column header names and a column
    with the values itself. The latter column gets by default the name `value`.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The parameters passed to [`pandas.melt()`](../../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt") can be defined in more detail:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The additional parameters have the following effects:'
  prefs: []
  type: TYPE_NORMAL
- en: '`value_vars` defines which columns to *melt* together'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_name` provides a custom column name for the values column instead of
    the default column name `value`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`var_name` provides a custom column name for the column collecting the column
    header names. Otherwise it takes the index name or a default `variable`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hence, the arguments `value_name` and `var_name` are just user-defined names
    for the two generated columns. The columns to melt are defined by `id_vars` and
    `value_vars`.
  prefs: []
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: Conversion from wide to long format with [`pandas.melt()`](../../reference/api/pandas.melt.html#pandas.melt
    "pandas.melt") is explained in the user guide section on [reshaping by melt](../../user_guide/reshaping.html#reshaping-melt).
  prefs: []
  type: TYPE_NORMAL
- en: REMEMBER
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Sorting by one or more columns is supported by `sort_values`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `pivot` function is purely restructuring of the data, `pivot_table` supports
    aggregations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The reverse of `pivot` (long to wide format) is `melt` (wide to long format).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To user guide
  prefs: []
  type: TYPE_NORMAL
- en: A full overview is available in the user guide on the pages about [reshaping
    and pivoting](../../user_guide/reshaping.html#reshaping).
  prefs: []
  type: TYPE_NORMAL
