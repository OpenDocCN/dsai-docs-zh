- en: numpy.insert
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.insert.html](https://numpy.org/doc/1.26/reference/generated/numpy.insert.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Insert values along the given axis before the given indices.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**arr**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**obj**int, slice or sequence of ints'
  prefs: []
  type: TYPE_NORMAL
- en: Object that defines the index or indices before which *values* is inserted.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.8.0.
  prefs: []
  type: TYPE_NORMAL
- en: Support for multiple insertions when *obj* is a single scalar or a sequence
    with one element (similar to calling insert multiple times).
  prefs: []
  type: TYPE_NORMAL
- en: '**values**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Values to insert into *arr*. If the type of *values* is different from that
    of *arr*, *values* is converted to the type of *arr*. *values* should be shaped
    so that `arr[...,obj,...] = values` is legal.
  prefs: []
  type: TYPE_NORMAL
- en: '**axis**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Axis along which to insert *values*. If *axis* is None then *arr* is flattened
    first.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: 'A copy of *arr* with *values* inserted. Note that [`insert`](#numpy.insert
    "numpy.insert") does not occur in-place: a new array is returned. If *axis* is
    None, *out* is a flattened array.'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`append`](numpy.append.html#numpy.append "numpy.append")'
  prefs: []
  type: TYPE_NORMAL
- en: Append elements at the end of an array.
  prefs: []
  type: TYPE_NORMAL
- en: '[`concatenate`](numpy.concatenate.html#numpy.concatenate "numpy.concatenate")'
  prefs: []
  type: TYPE_NORMAL
- en: Join a sequence of arrays along an existing axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[`delete`](numpy.delete.html#numpy.delete "numpy.delete")'
  prefs: []
  type: TYPE_NORMAL
- en: Delete elements from an array.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Note that for higher dimensional inserts `obj=0` behaves very different from
    `obj=[0]` just like `arr[:,0,:] = values` is different from `arr[:,[0],:] = values`.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Difference between sequence and scalars:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
