- en: scipy.stats.truncweibull_min
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.truncweibull_min.html#scipy.stats.truncweibull_min](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.truncweibull_min.html#scipy.stats.truncweibull_min)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A doubly truncated Weibull minimum continuous random variable.
  prefs: []
  type: TYPE_NORMAL
- en: As an instance of the [`rv_continuous`](scipy.stats.rv_continuous.html#scipy.stats.rv_continuous
    "scipy.stats.rv_continuous") class, [`truncweibull_min`](#scipy.stats.truncweibull_min
    "scipy.stats.truncweibull_min") object inherits from it a collection of generic
    methods (see below for the full list), and completes them with details specific
    for this particular distribution.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`weibull_min`](scipy.stats.weibull_min.html#scipy.stats.weibull_min "scipy.stats.weibull_min"),
    [`truncexpon`](scipy.stats.truncexpon.html#scipy.stats.truncexpon "scipy.stats.truncexpon")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: 'The probability density function for [`truncweibull_min`](#scipy.stats.truncweibull_min
    "scipy.stats.truncweibull_min") is:'
  prefs: []
  type: TYPE_NORMAL
- en: \[f(x, a, b, c) = \frac{c x^{c-1} \exp(-x^c)}{\exp(-a^c) - \exp(-b^c)}\]
  prefs: []
  type: TYPE_NORMAL
- en: for \(a < x <= b\), \(0 \le a < b\) and \(c > 0\).
  prefs: []
  type: TYPE_NORMAL
- en: '[`truncweibull_min`](#scipy.stats.truncweibull_min "scipy.stats.truncweibull_min")
    takes \(a\), \(b\), and \(c\) as shape parameters.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice that the truncation values, \(a\) and \(b\), are defined in standardized
    form:'
  prefs: []
  type: TYPE_NORMAL
- en: \[a = (u_l - loc)/scale b = (u_r - loc)/scale\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(u_l\) and \(u_r\) are the specific left and right truncation values,
    respectively. In other words, the support of the distribution becomes \((a*scale
    + loc) < x <= (b*scale + loc)\) when \(loc\) and/or \(scale\) are provided.
  prefs: []
  type: TYPE_NORMAL
- en: The probability density above is defined in the “standardized” form. To shift
    and/or scale the distribution use the `loc` and `scale` parameters. Specifically,
    `truncweibull_min.pdf(x, c, a, b, loc, scale)` is identically equivalent to `truncweibull_min.pdf(y,
    c, a, b) / scale` with `y = (x - loc) / scale`. Note that shifting the location
    of a distribution does not make it a “noncentral” distribution; noncentral generalizations
    of some distributions are available in separate classes.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Rinne, H. “The Weibull Distribution: A Handbook”. CRC Press (2009).'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the first four moments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Display the probability density function (`pdf`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Alternatively, the distribution object can be called (as a function) to fix
    the shape, location and scale parameters. This returns a “frozen” RV object holding
    the given parameters fixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Freeze the distribution and display the frozen `pdf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Check accuracy of `cdf` and `ppf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Generate random numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'And compare the histogram:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-stats-truncweibull_min-1.png](../Images/96a354468a74f94aec15d8851a7cccd3.png)'
  prefs: []
  type: TYPE_IMG
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **rvs(c, a, b, loc=0, scale=1, size=1, random_state=None)** | Random variates.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **pdf(x, c, a, b, loc=0, scale=1)** | Probability density function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(x, c, a, b, loc=0, scale=1)** | Log of the probability density function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **cdf(x, c, a, b, loc=0, scale=1)** | Cumulative distribution function. |'
  prefs: []
  type: TYPE_TB
- en: '| **logcdf(x, c, a, b, loc=0, scale=1)** | Log of the cumulative distribution
    function. |'
  prefs: []
  type: TYPE_TB
- en: '| **sf(x, c, a, b, loc=0, scale=1)** | Survival function (also defined as `1
    - cdf`, but *sf* is sometimes more accurate). |'
  prefs: []
  type: TYPE_TB
- en: '| **logsf(x, c, a, b, loc=0, scale=1)** | Log of the survival function. |'
  prefs: []
  type: TYPE_TB
- en: '| **ppf(q, c, a, b, loc=0, scale=1)** | Percent point function (inverse of
    `cdf` — percentiles). |'
  prefs: []
  type: TYPE_TB
- en: '| **isf(q, c, a, b, loc=0, scale=1)** | Inverse survival function (inverse
    of `sf`). |'
  prefs: []
  type: TYPE_TB
- en: '| **moment(order, c, a, b, loc=0, scale=1)** | Non-central moment of the specified
    order. |'
  prefs: []
  type: TYPE_TB
- en: '| **stats(c, a, b, loc=0, scale=1, moments=’mv’)** | Mean(‘m’), variance(‘v’),
    skew(‘s’), and/or kurtosis(‘k’). |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(c, a, b, loc=0, scale=1)** | (Differential) entropy of the RV.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **fit(data)** | Parameter estimates for generic data. See [scipy.stats.rv_continuous.fit](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.fit.html#scipy.stats.rv_continuous.fit)
    for detailed documentation of the keyword arguments. |'
  prefs: []
  type: TYPE_TB
- en: '| **expect(func, args=(c, a, b), loc=0, scale=1, lb=None, ub=None, conditional=False,
    **kwds)** | Expected value of a function (of one argument) with respect to the
    distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **median(c, a, b, loc=0, scale=1)** | Median of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **mean(c, a, b, loc=0, scale=1)** | Mean of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **var(c, a, b, loc=0, scale=1)** | Variance of the distribution. |'
  prefs: []
  type: TYPE_TB
- en: '| **std(c, a, b, loc=0, scale=1)** | Standard deviation of the distribution.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **interval(confidence, c, a, b, loc=0, scale=1)** | Confidence interval with
    equal areas around the median. |'
  prefs: []
  type: TYPE_TB
