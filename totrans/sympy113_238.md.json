["```py\n>>> from sympy import *\n>>> x, y, z = symbols('x y z')\n>>> init_printing(use_unicode=True) \n```", "```py\n y\n    ^\n    |\n\\\\\\\\|\n\\\\\\\\|    8 kN/m\n\\\\\\\\|_________________\n\\\\\\\\|| | | | | | | | |             12 kN\n\\\\\\\\|V V V V V V V V V               |\n\\\\\\\\|________________|_______________V\n\\\\\\\\|                |               |\n\\\\\\\\o - - - - - - - -⭯ 50 kN-m - - - | - - -> x\n\\\\\\\\|________________|_______________|\n\\\\\\\\|                                :\n\\\\\\\\|----------------|---------------|\n           5.0 m            4.0 m \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> E, I = symbols('E, I')\n>>> b = Beam(9, E, I) \n```", "```py\n>>> b.apply_load(12, 9, -1) \n```", "```py\n>>> b.load\n -1\n12⋅<x - 9> \n```", "```py\n>>> b.apply_load(50, 5, -2) \n```", "```py\n>>> b.apply_load(8, 0, 0, end=5) \n```", "```py\n>>> b.bc_deflection.append((0, 0))\n>>> b.bc_slope.append((0, 0)) \n```", "```py\n>>> R, M = symbols('R, M')\n>>> b.apply_load(R, 0, -1)\n>>> b.apply_load(M, 0, -2)\n>>> b.load\n -2        -1        0             -2            0             -1\nM⋅<x>   + R⋅<x>   + 8⋅<x>  + 50⋅<x - 5>   - 8⋅<x - 5>  + 12⋅<x - 9> \n```", "```py\n>>> b.solve_for_reaction_loads(R, M)\n>>> b.reaction_loads\n {M: 158, R: -52}\n>>> b.load\n -2         -1        0             -2            0             -1\n 158⋅<x>   - 52⋅<x>   + 8⋅<x>  + 50⋅<x - 5>   - 8⋅<x - 5>  + 12⋅<x - 9> \n```", "```py\n>>> b.shear_force()\n -1         0        1             -1            1             0\n - 158⋅<x>   + 52⋅<x>  - 8⋅<x>  - 50⋅<x - 5>   + 8⋅<x - 5>  - 12⋅<x - 9> \n```", "```py\n>>> b.bending_moment()\n 0         1        2             0            2             1\n - 158⋅<x>  + 52⋅<x>  - 4⋅<x>  - 50⋅<x - 5>  + 4⋅<x - 5>  - 12⋅<x - 9> \n```", "```py\n>>> b.plot_shear_force()  \n>>> b.plot_bending_moment() \n```", "```py\n>>> b.slope()\n ⎛                            3                          3             ⎞\n ⎜         1         2   4⋅<x>              1   4⋅<x - 5>             2⎟\n -⎜- 158⋅<x>  + 26⋅<x>  - ────── - 50⋅<x - 5>  + ────────── - 6⋅<x - 9> ⎟\n ⎝                         3                        3                  ⎠\n ─────────────────────────────────────────────────────────────────────────\n E⋅I\n>>> b.deflection()\n ⎛                  3      4                        4             ⎞\n ⎜        2   26⋅<x>    <x>              2   <x - 5>             3⎟\n -⎜- 79⋅<x>  + ─────── - ──── - 25⋅<x - 5>  + ──────── - 2⋅<x - 9> ⎟\n ⎝               3       3                      3                 ⎠\n ────────────────────────────────────────────────────────────────────\n E⋅I \n```", "```py\n>>> b.plot_slope(subs={E: 20E9, I: 3.25E-6})  \n>>> b.plot_deflection(subs={E: 20E9, I: 3.25E-6}) \n```", "```py\n>>> b.plot_loading_results(subs={E: 20E9, I: 3.25E-6}) \n```", "```py\n|| 8 N                                       ⭯ 120 Nm\n\\/______________________________________________|\n|_______________________________________________|\n            /\\                                 /\\\n|------------|---------------------------------|\n    10 m                  20 m \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols\n>>> E, I = symbols('E, I')\n>>> R1, R2 = symbols('R1, R2')\n>>> b = Beam(30, E, I)\n>>> b.apply_load(8, 0, -1)\n>>> b.apply_load(R1, 10, -1)\n>>> b.apply_load(R2, 30, -1)\n>>> b.apply_load(120, 30, -2)\n>>> b.bc_deflection.append((10, 0))\n>>> b.bc_deflection.append((30, 0))\n>>> b.solve_for_reaction_loads(R1, R2)\n>>> b.reaction_loads\n {R₁: -18, R₂: 10}\n>>> b.load\n -1              -1               -2              -1\n 8⋅<x>   - 18⋅<x - 10>   + 120⋅<x - 30>   + 10⋅<x - 30>\n>>> b.shear_force()\n 0              0               -1              0\n - 8⋅<x>  + 18⋅<x - 10>  - 120⋅<x - 30>   - 10⋅<x - 30>\n>>> b.bending_moment()\n 1              1               0              1\n - 8⋅<x>  + 18⋅<x - 10>  - 120⋅<x - 30>  - 10⋅<x - 30>\n>>> b.slope()\n 2             2               1             2   1600\n 4⋅<x>  - 9⋅<x - 10>  + 120⋅<x - 30>  + 5⋅<x - 30>  - ────\n 3\n ─────────────────────────────────────────────────────────\n E⋅I\n>>> b.deflection()\n 3                                          3\n 1600⋅x   4⋅<x>              3              2   5⋅<x - 30>\n - ────── + ────── - 3⋅<x - 10>  + 60⋅<x - 30>  + ─────────── + 4000\n 3        3                                        3\n ───────────────────────────────────────────────────────────────────\n E⋅I \n```", "```py\n ramp load = 1 KN/m/m\n                          constant load = 3 KN/m\n                       |------------------------|\n                     ⭯ 1.5 KN-m\n ______________________|________________________\n|_______________________________________________|\no                      |                       /\\\n|----------------------|-----------------------|\n        3.0 m                     3.0 m \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols, plot, S\n>>> E, I = symbols('E, I')\n>>> R1, R2 = symbols('R1, R2')\n>>> b = Beam(6, E, I)\n>>> b.apply_load(R1, 0, -1)\n>>> b.apply_load(-S(3)/2, 3, -2)\n>>> b.apply_load(3, 3, 0)\n>>> b.apply_load(1, 3, 1)\n>>> b.apply_load(R2, 6, -1)\n>>> b.bc_deflection.append((0, 0))\n>>> b.bc_deflection.append((6, 0))\n>>> b.solve_for_reaction_loads(R1, R2)\n>>> b.reaction_loads\n {R₁: -11/4, R₂: -43/4} \n```", "```py\n>>> b.load\n -1            -2                                     -1\n 11⋅<x>     3⋅<x - 3>              0          1   43⋅<x - 6>\n - ──────── - ─────────── + 3⋅<x - 3>  + <x - 3>  - ────────────\n 4            2                                     4 \n```", "```py\n>>> plot(b.load) \n```", "```py\n>>> b.shear_force()\n 0            -1                       2             0\n 11⋅<x>    3⋅<x - 3>              1   <x - 3>    43⋅<x - 6>\n ─────── + ─────────── - 3⋅<x - 3>  - ──────── + ───────────\n 4           2                        2            4 \n```", "```py\n>>> b.bending_moment()\n 1            0            2          3             1\n 11⋅<x>    3⋅<x - 3>    3⋅<x - 3>    <x - 3>    43⋅<x - 6>\n ─────── + ────────── - ────────── - ──────── + ───────────\n 4          2            2           6            4 \n```", "```py\n>>> b.slope()\n 2            1          3          4             2\n 11⋅<x>    3⋅<x - 3>    <x - 3>    <x - 3>    43⋅<x - 6>    78\n - ─────── - ────────── + ──────── + ──────── - ─────────── + ──\n 8          2           2          24           8        5\n ───────────────────────────────────────────────────────────────\n E⋅I \n```", "```py\n>>> b.deflection()\n 3            2          4          5             3\n 78⋅x   11⋅<x>    3⋅<x - 3>    <x - 3>    <x - 3>    43⋅<x - 6>\n ──── - ─────── - ────────── + ──────── + ──────── - ───────────\n 5        24         4           8         120           24\n ───────────────────────────────────────────────────────────────\n E⋅I \n```", "```py\n ---> x\n                                      |\n                                      v y\n  10 KN/m\n_____________                 20 KN         8 KN\n| | | | | | |                  |             |\nV V V V V V V                  V             V\n _______________________________________________\n|_______________________________________________|\n      /\\                                  O\n|-----|------|-----------------|----------|--|--|\n   1m    1m          3m              2m   .5m .5m \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols\n>>> E,I,M,V = symbols('E I M V')\n>>> b = Beam(8, E, I)\n>>> E,I,R1,R2 = symbols('E I R1 R2')\n>>> b.apply_load(R1, 1, -1)\n>>> b.apply_load(R2, 7, -1)\n>>> b.apply_load(10, 0, 0, end=2)\n>>> b.apply_load(20, 5, -1)\n>>> b.apply_load(8, 7.5, -1)\n>>> b.solve_for_reaction_loads(R1, R2)\n>>> b.reaction_loads\n{R₁: -26, R₂: -22}\n>>> b.load\n 0             -1             0             -1             -1              -1\n10⋅<x>  - 26⋅<x - 1>   - 10⋅<x - 2>  + 20⋅<x - 5>   - 22⋅<x - 7>   + 8⋅<x - 7.5>\n\n>>> b.shear_force()\n 1             0             1             0             0              0\n- 10⋅<x>  + 26⋅<x - 1>  + 10⋅<x - 2>  - 20⋅<x - 5>  + 22⋅<x - 7>  - 8⋅<x - 7.5>\n\n>>> b.bending_moment()\n 2             1            2             1             1              1\n- 5⋅<x>  + 26⋅<x - 1>  + 5⋅<x - 2>  - 20⋅<x - 5>  + 22⋅<x - 7>  - 8⋅<x - 7.5>\n\n>>> b.bc_deflection = [(1, 0), (7, 0)]\n>>> b.slope()\n 3                          3\n5⋅<x>              2   5⋅<x - 2>              2             2              2   679\n────── - 13⋅<x - 1>  - ────────── + 10⋅<x - 5>  - 11⋅<x - 7>  + 4⋅<x - 7.5>  + ───\n 3                        3                                                    24\n──────────────────────────────────────────────────────────────────────────────────\n E⋅I\n>>> b.deflection()\n 4             3            4             3             3              3\n679⋅x   5⋅<x>    13⋅<x - 1>    5⋅<x - 2>    10⋅<x - 5>    11⋅<x - 7>    4⋅<x - 7.5>    689\n───── + ────── - ─────────── - ────────── + ─────────── - ─────────── + ──────────── - ───\n 24      12          3            12            3             3             3          24\n──────────────────────────────────────────────────────────────────────────────────────────\n E⋅I \n```", "```py\n ---> x                             .\n  |                                . |\n  v y                    12 KN   . | |\n                           |   . | | |\n                           V . | | | |\n\\\\\\\\|   4 KN/m             . | | | | |\n\\\\\\\\|___________         . 1 KN/m/m| |\n\\\\\\\\|| | | | | |       . V V V V V V V\n\\\\\\\\|V V V V V V     |---------------|\n\\\\\\\\|________________________________\n\\\\\\\\|________________________________|\n\\\\\\\\|          :          :          :\n\\\\\\\\|----------|-----|----|----------|\n        2.0 m     1m   1m      2.0 m \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols\n>>> E,I,M,V = symbols('E I M V')\n>>> b = Beam(6, E, I)\n>>> b.apply_load(V, 0, -1)\n>>> b.apply_load(M, 0, -2)\n>>> b.apply_load(4, 0, 0, end=2)\n>>> b.apply_load(12, 4, -1)\n>>> b.apply_load(1, 3, 1, end=6)\n>>> b.solve_for_reaction_loads(V, M)\n>>> b.reaction_loads\n{M: 157/2, V: -49/2}\n>>> b.load\n -2         -1\n157⋅<x>     49⋅<x>          0            0          1             -1            0          1\n───────── - ──────── + 4⋅<x>  - 4⋅<x - 2>  + <x - 3>  + 12⋅<x - 4>   - 3⋅<x - 6>  - <x - 6>\n 2          2\n>>> b.shear_force()\n -1         0                                2                                     2\n 157⋅<x>     49⋅<x>        1            1    <x - 3>             0            1    <x - 6>\n- ───────── + ─────── - 4⋅<x>  + 4⋅<x - 2>  - ──────── - 12⋅<x - 4>  + 3⋅<x - 6>  + ────────\n 2          2                                2                                    2\n>>> b.bending_moment()\n 0         1                                3                          2          3\n 157⋅<x>    49⋅<x>         2            2   <x - 3>              1   3⋅<x - 6>    <x - 6>\n- ──────── + ─────── - 2⋅<x>  + 2⋅<x - 2>  - ──────── - 12⋅<x - 4>  + ────────── + ────────\n 2          2                               6                         2           6\n>>> b.bc_deflection = [(0, 0)]\n>>> b.bc_slope = [(0, 0)]\n>>> b.slope()\n ⎛         1         2        3            3          4                       3          4⎞\n ⎜  157⋅<x>    49⋅<x>    2⋅<x>    2⋅<x - 2>    <x - 3>             2   <x - 6>    <x - 6> ⎟\n-⎜- ──────── + ─────── - ────── + ────────── - ──────── - 6⋅<x - 4>  + ──────── + ────────⎟\n ⎝     2          4        3          3           24                      2          24   ⎠\n────────────────────────────────────────────────────────────────────────────────────────────\n E⋅I\n>>> b.deflection()\n ⎛         2         3      4          4          5                       4          5⎞\n ⎜  157⋅<x>    49⋅<x>    <x>    <x - 2>    <x - 3>             3   <x - 6>    <x - 6> ⎟\n-⎜- ──────── + ─────── - ──── + ──────── - ──────── - 2⋅<x - 4>  + ──────── + ────────⎟\n ⎝     4          12      6        6         120                      8         120   ⎠\n────────────────────────────────────────────────────────────────────────────────────────\n E⋅I \n```", "```py\n 2 KN/m                         ---> x\n           _________________                  |\n           | | | | | | | | |                  v y\n           V V V V V V V V V                        ⭯ 5 KN-m\n  ____________________________________________________|\n O____________________________________________________|\n/ \\                                   /\\\n |--------|----------------|----------|---------------|\n     2m           4m            2m            3m \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols\n>>> R1, R2 = symbols('R1, R2')\n>>> E, I = symbols('E, I')\n>>> b = Beam(11, E, I)\n>>> b.apply_load(R1, 0, -1)\n>>> b.apply_load(2, 2, 0, end=6)\n>>> b.apply_load(R2, 8, -1)\n>>> b.apply_load(5, 11, -2)\n>>> b.solve_for_reaction_loads(R1, R2)\n>>> b.reaction_loads\n{R₁: -37/8, R₂: -27/8}\n>>> b.load\n -1                                       -1\n 37⋅<x>              0            0   27⋅<x - 8>               -2\n- ──────── + 2⋅<x - 2>  - 2⋅<x - 6>  - ──────────── + 5⋅<x - 11>\n 8                                      8\n>>> b.shear_force()\n 0                                       0\n 37⋅<x>             1            1   27⋅<x - 8>              -1\n ─────── - 2⋅<x - 2>  + 2⋅<x - 6>  + ─────────── - 5⋅<x - 11>\n 8                                     8\n>>> b.bending_moment()\n 1                                   1\n 37⋅<x>           2          2   27⋅<x - 8>              0\n ─────── - <x - 2>  + <x - 6>  + ─────────── - 5⋅<x - 11>\n 8                                 8\n>>> b.bc_deflection = [(0, 0), (8, 0)]\n>>> b.slope()\n 2          3          3             2\n 37⋅<x>    <x - 2>    <x - 6>    27⋅<x - 8>              1\n- ─────── + ──────── - ──────── - ─────────── + 5⋅<x - 11>  + 36\n 16        3          3            16\n────────────────────────────────────────────────────────────────\n E⋅I\n>>> b.deflection()\n 3          4          4            3             2\n 37⋅<x>    <x - 2>    <x - 6>    9⋅<x - 8>    5⋅<x - 11>\n36⋅x - ─────── + ──────── - ──────── - ────────── + ───────────\n 48        12         12          16            2\n───────────────────────────────────────────────────────────────\n E⋅I \n```", "```py\n ^ y\n                                      |\n                                      ---> x\n\\\\\\\\|                  F                  |\\\\\\\\\n\\\\\\\\|                  |                  |\\\\\\\\\n\\\\\\\\|                  V                  |\\\\\\\\\n\\\\\\\\|_____________________________________|\\\\\\\\\n\\\\\\\\|_____________________________________|\\\\\\\\\n\\\\\\\\|                  :                  |\\\\\\\\\n\\\\\\\\|                  :                  |\\\\\\\\\n\\\\\\\\|------------------|------------------|\\\\\\\\\n             l/2                l/2 \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols\n>>> E, I, F = symbols('E I F')\n>>> l = symbols('l', positive=True)\n>>> b = Beam(l, E, I)\n>>> R1,R2 = symbols('R1  R2')\n>>> M1, M2 = symbols('M1, M2')\n>>> b.apply_load(R1, 0, -1)\n>>> b.apply_load(M1, 0, -2)\n>>> b.apply_load(R2, l, -1)\n>>> b.apply_load(M2, l, -2)\n>>> b.apply_load(-F, l/2, -1)\n>>> b.bc_deflection = [(0, 0),(l, 0)]\n>>> b.bc_slope = [(0, 0),(l, 0)]\n>>> b.solve_for_reaction_loads(R1, R2, M1, M2)\n>>> b.reaction_loads\n⎧    -F⋅l       F⋅l      F      F⎫\n⎨M₁: ─────, M₂: ───, R₁: ─, R₂: ─⎬\n⎩      8         8       2      2⎭\n\n>>> b.load\n -2               -2        -1              -1             -1\n F⋅l⋅<x>     F⋅l⋅<-l + x>     F⋅<x>          l          F⋅<-l + x>\n- ───────── + ────────────── + ─────── - F⋅<- ─ + x>   + ────────────\n 8             8             2           2               2\n\n>>> b.shear_force()\n -1               -1        0              0             0\n F⋅l⋅<x>     F⋅l⋅<-l + x>     F⋅<x>         l         F⋅<-l + x>\n ───────── - ────────────── - ────── + F⋅<- ─ + x>  - ───────────\n 8             8            2           2              2\n\n>>> b.bending_moment()\n 0               0        1              1             1\n F⋅l⋅<x>    F⋅l⋅<-l + x>    F⋅<x>         l         F⋅<-l + x>\n ──────── - ───────────── - ────── + F⋅<- ─ + x>  - ───────────\n 8             8           2           2              2\n\n>>> b.slope()\n ⎛                                               2              ⎞\n ⎜                                         l                    ⎟\n ⎜       1               1        2   F⋅<- ─ + x>              2⎟\n ⎜F⋅l⋅<x>    F⋅l⋅<-l + x>    F⋅<x>         2         F⋅<-l + x> ⎟\n-⎜──────── - ───────────── - ────── + ──────────── - ───────────⎟\n ⎝   8             8           4           2              4     ⎠\n──────────────────────────────────────────────────────────────────\n E⋅I\n\n>>> b.deflection()\n ⎛                                               3              ⎞\n ⎜                                         l                    ⎟\n ⎜       2               2        3   F⋅<- ─ + x>              3⎟\n ⎜F⋅l⋅<x>    F⋅l⋅<-l + x>    F⋅<x>         2         F⋅<-l + x> ⎟\n-⎜──────── - ───────────── - ────── + ──────────── - ───────────⎟\n ⎝   16            16          12          6              12    ⎠\n──────────────────────────────────────────────────────────────────\n E⋅I \n```", "```py\n ---> x\n\\\\\\\\|                                 P            |\n\\\\\\\\|                                 |            v y\n\\\\\\\\|                                 V\n\\\\\\\\|_____________________ _______________________\n\\\\\\\\|_____________________O_______________________|\n\\\\\\\\|          /\\                     :          /\\\n\\\\\\\\|         oooo                    :         oooo\n\\\\\\\\|----------|-----------|----------|-----------|\n         l           l          l            l \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols\n>>> E, I = symbols('E I')\n>>> l = symbols('l', positive=True)\n>>> R1, M1, R2, R3, P = symbols('R1 M1 R2 R3 P')\n>>> b1 = Beam(2*l, E, I)\n>>> b2 = Beam(2*l, E, I)\n>>> b = b1.join(b2, \"hinge\")\n>>> b.apply_load(M1, 0, -2)\n>>> b.apply_load(R1, 0, -1)\n>>> b.apply_load(R2, l, -1)\n>>> b.apply_load(R3, 4*l, -1)\n>>> b.apply_load(P, 3*l, -1)\n>>> b.bc_slope = [(0, 0)]\n>>> b.bc_deflection = [(0, 0), (l, 0), (4*l, 0)]\n>>> b.solve_for_reaction_loads(M1, R1, R2, R3)\n>>> b.reaction_loads\n⎧    -P⋅l       3⋅P      -5⋅P       -P ⎫\n⎨M₁: ─────, R₁: ───, R₂: ─────, R₃: ───⎬\n⎩      4         4         4         2 ⎭\n\n>>> b.load\n -2          -1               -1                                -1\n P⋅l⋅<x>     3⋅P⋅<x>     5⋅P⋅<-l + x>                 -1   P⋅<-4⋅l + x>\n- ───────── + ───────── - ────────────── + P⋅<-3⋅l + x>   - ──────────────\n 4           4             4                                 2\n\n>>> b.shear_force()\n -1          0               0                               0\n P⋅l⋅<x>     3⋅P⋅<x>    5⋅P⋅<-l + x>                0   P⋅<-4⋅l + x>\n ───────── - ──────── + ───────────── - P⋅<-3⋅l + x>  + ─────────────\n 4          4             4                               2\n\n>>> b.bending_moment()\n 0          1               1                               1\n P⋅l⋅<x>    3⋅P⋅<x>    5⋅P⋅<-l + x>                1   P⋅<-4⋅l + x>\n ──────── - ──────── + ───────────── - P⋅<-3⋅l + x>  + ─────────────\n 4          4             4                               2\n\n>>> b.slope()\n⎛     2               2               2               2⎞               ⎛         1          2               2               2⎞        ⎛         1          2               2               2⎞\n⎜5⋅P⋅l    P⋅<-2⋅l + x>    P⋅<-3⋅l + x>    P⋅<-4⋅l + x> ⎟           0   ⎜  P⋅l⋅<x>    3⋅P⋅<x>    5⋅P⋅<-l + x>    P⋅<-2⋅l + x> ⎟    0   ⎜  P⋅l⋅<x>    3⋅P⋅<x>    5⋅P⋅<-l + x>    P⋅<-2⋅l + x> ⎟           0\n⎜────── - ───────────── + ───────────── - ─────────────⎟⋅<-2⋅l + x>    ⎜- ──────── + ──────── - ───────────── + ─────────────⎟⋅<x>    ⎜- ──────── + ──────── - ───────────── + ─────────────⎟⋅<-2⋅l + x>\n⎝  48           4               2               4      ⎠               ⎝     4          8             8               4      ⎠        ⎝     4          8             8               4      ⎠\n──────────────────────────────────────────────────────────────────── + ──────────────────────────────────────────────────────────── - ───────────────────────────────────────────────────────────────────\n E⋅I                                                                E⋅I                                                                E⋅I\n>>> b.deflection()\n⎛         2        3               3               3⎞        ⎛         2        3               3               3⎞               ⎛     3        2                          3               3               3⎞\n⎜  P⋅l⋅<x>    P⋅<x>    5⋅P⋅<-l + x>    P⋅<-2⋅l + x> ⎟    0   ⎜  P⋅l⋅<x>    P⋅<x>    5⋅P⋅<-l + x>    P⋅<-2⋅l + x> ⎟           0   ⎜7⋅P⋅l    5⋅P⋅l ⋅(-2⋅l + x)   P⋅<-2⋅l + x>    P⋅<-3⋅l + x>    P⋅<-4⋅l + x> ⎟           0\n⎜- ──────── + ────── - ───────────── + ─────────────⎟⋅<x>    ⎜- ──────── + ────── - ───────────── + ─────────────⎟⋅<-2⋅l + x>    ⎜────── + ───────────────── - ───────────── + ───────────── - ─────────────⎟⋅<-2⋅l + x>\n⎝     8         8            24              12     ⎠        ⎝     8         8            24              12     ⎠               ⎝  24             48                12              6               12     ⎠\n────────────────────────────────────────────────────────── - ───────────────────────────────────────────────────────────────── + ────────────────────────────────────────────────────────────────────────────────────────\n E⋅I                                                              E⋅I                                                                            E⋅I \n```", "```py\n ---> x\n\\\\\\\\|                                      |\n\\\\\\\\|                               20 N   v y\n\\\\\\\\|________________                |\n\\\\\\\\|                |_______________V\n\\\\\\\\|      1.5*I      _______I_______|\n\\\\\\\\|________________|\n\\\\\\\\|                                :\n\\\\\\\\|----------------|---------------|\n           2.0 m            2.0 m \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols\n>>> E, I = symbols('E, I')\n>>> R1, R2 = symbols('R1, R2')\n>>> b1 = Beam(2, E, 1.5*I)\n>>> b2 = Beam(2, E, I)\n>>> b = b1.join(b2, \"fixed\")\n>>> b.apply_load(20, 4, -1)\n>>> b.apply_load(R1, 0, -1)\n>>> b.apply_load(R2, 0, -2)\n>>> b.bc_slope = [(0, 0)]\n>>> b.bc_deflection = [(0, 0)]\n>>> b.solve_for_reaction_loads(R1, R2)\n>>> b.load\n -2         -1             -1\n80⋅<x>   - 20⋅<x>   + 20⋅<x - 4>\n>>> b.shear_force()\n -1         0             0\n- 80⋅<x>   + 20⋅<x>  - 20⋅<x - 4>\n>>> b.bending_moment()\n 0         1             1\n- 80⋅<x>  + 20⋅<x>  - 20⋅<x - 4>\n>>> b.slope()\n⎛          1         2             2             ⎞\n⎜  - 80⋅<x>  + 10⋅<x>  - 10⋅<x - 4>    120       ⎟\n⎜  ───────────────────────────────── + ───       ⎟                              ⎛        1         2             2⎞    0                     ⎛        1         2             2⎞        0\n⎜                  I                    I    80.0⎟        0   0.666666666666667⋅⎝- 80⋅<x>  + 10⋅<x>  - 10⋅<x - 4> ⎠⋅<x>    0.666666666666667⋅⎝- 80⋅<x>  + 10⋅<x>  - 10⋅<x - 4> ⎠⋅<x - 2>\n⎜- ─────────────────────────────────────── + ────⎟⋅<x - 2>  - ────────────────────────────────────────────────────────── + ──────────────────────────────────────────────────────────────\n⎝                     E                      E⋅I ⎠                                       E⋅I                                                            E⋅I \n```", "```py\n ---> x\n                                      |\n\\\\\\\\|                         P       v y |\\\\\\\\\n\\\\\\\\|                         |           |\\\\\\\\\n\\\\\\\\|                         V           |\\\\\\\\\n\\\\\\\\|____________ ________________________|\\\\\\\\\n\\\\\\\\|____________O________________________|\\\\\\\\\n\\\\\\\\|            :            :           |\\\\\\\\\n\\\\\\\\|            :            :           |\\\\\\\\\n\\\\\\\\|------------|------------|-----------|\\\\\\\\\n         l            l            l \n```", "```py\n>>> from sympy.physics.continuum_mechanics.beam import Beam\n>>> from sympy import symbols\n>>> E, I = symbols('E, I')\n>>> l = symbols('l', positive=True)\n>>> b1 = Beam(l ,E,I)\n>>> b2 = Beam(2*l ,E,I)\n>>> b = b1.join(b2,\"hinge\")\n>>> M1, A1, M2, A2, P = symbols('M1 A1 M2 A2 P')\n>>> b.apply_load(A1, 0, -1)\n>>> b.apply_load(M1, 0 ,-2)\n>>> b.apply_load(P, 2*l, -1)\n>>> b.apply_load(A2, 3*l, -1)\n>>> b.apply_load(M2, 3*l, -2)\n>>> b.bc_slope=[(0, 0), (3*l, 0)]\n>>> b.bc_deflection=[(0, 0), (3*l, 0)]\n>>> b.solve_for_reaction_loads(M1, A1, M2, A2)\n>>> b.reaction_loads\n⎧    -5⋅P       -13⋅P       5⋅P⋅l      -4⋅P⋅l ⎫\n⎨A₁: ─────, A₂: ──────, M₁: ─────, M₂: ───────⎬\n⎩      18         18          18          9   ⎭\n\n>>> b.load\n -2                   -2          -1                                   -1\n5⋅P⋅l⋅<x>     4⋅P⋅l⋅<-3⋅l + x>     5⋅P⋅<x>                 -1   13⋅P⋅<-3⋅l + x>\n─────────── - ────────────────── - ───────── + P⋅<-2⋅l + x>   - ─────────────────\n 18               9                18                               18\n\n>>> b.shear_force()\n -1                   -1          0                                  0\n 5⋅P⋅l⋅<x>     4⋅P⋅l⋅<-3⋅l + x>     5⋅P⋅<x>                0   13⋅P⋅<-3⋅l + x>\n- ─────────── + ────────────────── + ──────── - P⋅<-2⋅l + x>  + ────────────────\n 18               9               18                             18\n\n>>> b.bending_moment()\n 0                   0          1                                  1\n 5⋅P⋅l⋅<x>    4⋅P⋅l⋅<-3⋅l + x>    5⋅P⋅<x>                1   13⋅P⋅<-3⋅l + x>\n- ────────── + ───────────────── + ──────── - P⋅<-2⋅l + x>  + ────────────────\n 18               9              18                             18\n\n>>> b.slope()\n⎛         1          2               2⎞        ⎛         1          2               2⎞             ⎛   2                   1               2               2                  2⎞\n⎜5⋅P⋅l⋅<x>    5⋅P⋅<x>    5⋅P⋅<-l + x> ⎟    0   ⎜5⋅P⋅l⋅<x>    5⋅P⋅<x>    5⋅P⋅<-l + x> ⎟         0   ⎜P⋅l    4⋅P⋅l⋅<-3⋅l + x>    5⋅P⋅<-l + x>    P⋅<-2⋅l + x>    13⋅P⋅<-3⋅l + x> ⎟         0\n⎜────────── - ──────── + ─────────────⎟⋅<x>    ⎜────────── - ──────── + ─────────────⎟⋅<-l + x>    ⎜──── - ───────────────── - ───────────── + ───────────── - ────────────────⎟⋅<-l + x>\n⎝    18          36            36     ⎠        ⎝    18          36            36     ⎠             ⎝ 18            9                 36              2                36       ⎠\n──────────────────────────────────────────── - ───────────────────────────────────────────────── + ───────────────────────────────────────────────────────────────────────────────────────\n E⋅I                                               E⋅I                                                                    E⋅I\n\n>>> b.deflection()\n⎛         2          3               3⎞        ⎛         2          3               3⎞             ⎛     3      2                            2               3               3                  3⎞\n⎜5⋅P⋅l⋅<x>    5⋅P⋅<x>    5⋅P⋅<-l + x> ⎟    0   ⎜5⋅P⋅l⋅<x>    5⋅P⋅<x>    5⋅P⋅<-l + x> ⎟         0   ⎜5⋅P⋅l    P⋅l ⋅(-l + x)   2⋅P⋅l⋅<-3⋅l + x>    5⋅P⋅<-l + x>    P⋅<-2⋅l + x>    13⋅P⋅<-3⋅l + x> ⎟         0\n⎜────────── - ──────── + ─────────────⎟⋅<x>    ⎜────────── - ──────── + ─────────────⎟⋅<-l + x>    ⎜────── + ───────────── - ───────────────── - ───────────── + ───────────── - ────────────────⎟⋅<-l + x>\n⎝    36         108           108     ⎠        ⎝    36         108           108     ⎠             ⎝  54           18                9                108              6               108       ⎠\n──────────────────────────────────────────── - ───────────────────────────────────────────────── + ─────────────────────────────────────────────────────────────────────────────────────────────────────────\n E⋅I                                               E⋅I                                                                             E⋅I \n```", "```py\n>>> n = 6\n>>> b = Beam(10*n, E, I)\n>>> for i in range(n):\n...     b.apply_load(1 / (5**i), 10*i + 5, i, end=10*i + 10)\n>>> plot(b.load, (x, 0, 10*n)) \n```"]