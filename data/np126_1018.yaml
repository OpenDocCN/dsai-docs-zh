- en: numpy.digitize
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.digitize
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.digitize.html](https://numpy.org/doc/1.26/reference/generated/numpy.digitize.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.digitize.html](https://numpy.org/doc/1.26/reference/generated/numpy.digitize.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return the indices of the bins to which each value in input array belongs.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回输入数组中每个值所属的区间的索引。
- en: '| *right* | order of bins | returned index *i* satisfies |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| *right* | 区间顺序 | 返回的索引 *i* 满足 |'
- en: '| --- | --- | --- |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `False` | increasing | `bins[i-1] <= x < bins[i]` |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| `False` | 递增 | `bins[i-1] <= x < bins[i]` |'
- en: '| `True` | increasing | `bins[i-1] < x <= bins[i]` |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `True` | 递增 | `bins[i-1] < x <= bins[i]` |'
- en: '| `False` | decreasing | `bins[i-1] > x >= bins[i]` |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `False` | 递减 | `bins[i-1] > x >= bins[i]` |'
- en: '| `True` | decreasing | `bins[i-1] >= x > bins[i]` |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `True` | 递减 | `bins[i-1] >= x > bins[i]` |'
- en: If values in *x* are beyond the bounds of *bins*, 0 or `len(bins)` is returned
    as appropriate.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*x*中的值超出*bins*的范围，则适当返回0或`len(bins)`。
- en: 'Parameters:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**array_like'
- en: Input array to be binned. Prior to NumPy 1.10.0, this array had to be 1-dimensional,
    but can now have any shape.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行分箱的输入数组。在 NumPy 1.10.0 之前，此数组必须是一维的，但现在可以具有任何形状。
- en: '**bins**array_like'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**bins**array_like'
- en: Array of bins. It has to be 1-dimensional and monotonic.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 区间数组。必须是一维且单调递增的。
- en: '**right**bool, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**right**bool，可选'
- en: Indicating whether the intervals include the right or the left bin edge. Default
    behavior is (right==False) indicating that the interval does not include the right
    edge. The left bin end is open in this case, i.e., bins[i-1] <= x < bins[i] is
    the default behavior for monotonically increasing bins.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 指示区间是否包括右边缘或左边缘。默认行为是（right==False），表示区间不包括右边缘。在这种情况下，左边缘是开放的，即，对于单调递增的区间，bins[i-1]
    <= x < bins[i] 是默认行为。
- en: 'Returns:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**indices**ndarray of ints'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**indices**整数的 ndarray'
- en: Output array of indices, of same shape as *x*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 与*x*相同形状的索引输出数组。
- en: 'Raises:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: ValueError
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 值错误
- en: If *bins* is not monotonic.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 *bins* 不是单调的。
- en: TypeError
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 类型错误
- en: If the type of the input is complex.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入的类型是复数。
- en: See also
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`bincount`](numpy.bincount.html#numpy.bincount "numpy.bincount"), [`histogram`](numpy.histogram.html#numpy.histogram
    "numpy.histogram"), [`unique`](numpy.unique.html#numpy.unique "numpy.unique"),
    [`searchsorted`](numpy.searchsorted.html#numpy.searchsorted "numpy.searchsorted")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bincount`](numpy.bincount.html#numpy.bincount "numpy.bincount"), [`histogram`](numpy.histogram.html#numpy.histogram
    "numpy.histogram"), [`unique`](numpy.unique.html#numpy.unique "numpy.unique"),
    [`searchsorted`](numpy.searchsorted.html#numpy.searchsorted "numpy.searchsorted")'
- en: Notes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: If values in *x* are such that they fall outside the bin range, attempting to
    index *bins* with the indices that [`digitize`](#numpy.digitize "numpy.digitize")
    returns will result in an IndexError.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*x*中的值使其超出区间范围，则尝试使用[`digitize`](#numpy.digitize "numpy.digitize") 返回的索引索引*bins*将导致
    IndexError。
- en: New in version 1.10.0.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.10.0 中新增。
- en: '*np.digitize* is implemented in terms of *np.searchsorted*. This means that
    a binary search is used to bin the values, which scales much better for larger
    number of bins than the previous linear search. It also removes the requirement
    for the input array to be 1-dimensional.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*np.digitize* 是基于 *np.searchsorted* 实现的。这意味着使用二分搜索对值进行分箱，对于更大数量的区间，比以前的线性搜索更具规模优势。它还消除了输入数组必须是一维的要求。'
- en: 'For monotonically _increasing_ *bins*, the following are equivalent:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于单调 _递增_ 的 *bins*，以下是等效的：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note that as the order of the arguments are reversed, the side must be too.
    The [`searchsorted`](numpy.searchsorted.html#numpy.searchsorted "numpy.searchsorted")
    call is marginally faster, as it does not do any monotonicity checks. Perhaps
    more importantly, it supports all dtypes.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于参数的顺序已颠倒，因此侧边也必须如此。[`searchsorted`](numpy.searchsorted.html#numpy.searchsorted
    "numpy.searchsorted") 调用稍微更快，因为它不执行任何单调性检查。或许更重要的是，它支持所有的数据类型。
- en: Examples
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
