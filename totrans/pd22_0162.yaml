- en: pandas.Series.convert_dtypes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Series.convert_dtypes.html](https://pandas.pydata.org/docs/reference/api/pandas.Series.convert_dtypes.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Convert columns to the best possible dtypes using dtypes supporting `pd.NA`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '**infer_objects**bool, default True'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Whether object dtypes should be converted to the best possible types.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '**convert_string**bool, default True'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Whether object dtypes should be converted to `StringDtype()`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '**convert_integer**bool, default True'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Whether, if possible, conversion can be done to integer extension types.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '**convert_boolean**bool, defaults True'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Whether object dtypes should be converted to `BooleanDtypes()`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '**convert_floating**bool, defaults True'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Whether, if possible, conversion can be done to floating extension types. If
    convert_integer is also True, preference will be give to integer dtypes if the
    floats can be faithfully casted to integers.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype_backend**{‘numpy_nullable’, ‘pyarrow’}, default ‘numpy_nullable’'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 'Back-end data type applied to the resultant [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (still experimental). Behaviour is as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '`"numpy_nullable"`: returns nullable-dtype-backed [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") (default).'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`"pyarrow"`: returns pyarrow-backed nullable [`ArrowDtype`](pandas.ArrowDtype.html#pandas.ArrowDtype
    "pandas.ArrowDtype") DataFrame.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New in version 2.0.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Series or DataFrame
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Copy of input object with new dtype.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: See also
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '[`infer_objects`](pandas.Series.infer_objects.html#pandas.Series.infer_objects
    "pandas.Series.infer_objects")'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Infer dtypes of objects.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_datetime`](pandas.to_datetime.html#pandas.to_datetime "pandas.to_datetime")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Convert argument to datetime.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_timedelta`](pandas.to_timedelta.html#pandas.to_timedelta "pandas.to_timedelta")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Convert argument to timedelta.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[`to_numeric`](pandas.to_numeric.html#pandas.to_numeric "pandas.to_numeric")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Convert argument to a numeric type.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: By default, `convert_dtypes` will attempt to convert a Series (or each Series
    in a DataFrame) to dtypes that support `pd.NA`. By using the options `convert_string`,
    `convert_integer`, `convert_boolean` and `convert_floating`, it is possible to
    turn off individual conversions to `StringDtype`, the integer extension types,
    `BooleanDtype` or floating extension types, respectively.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: For object-dtyped columns, if `infer_objects` is `True`, use the inference rules
    as during normal Series/DataFrame construction. Then, if possible, convert to
    `StringDtype`, `BooleanDtype` or an appropriate integer or floating extension
    type, otherwise leave as `object`.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: If the dtype is integer, convert to an appropriate integer extension type.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: If the dtype is numeric, and consists of all integers, convert to an appropriate
    integer extension type. Otherwise, convert to an appropriate floating extension
    type.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: In the future, as new dtypes are added that support `pd.NA`, the results of
    this method will change to support those new dtypes.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 将来，随着添加支持`pd.NA`的新数据类型，此方法的结果将会改变以支持这些新数据类型。
- en: Examples
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Start with a DataFrame with default dtypes.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 从具有默认数据类型的DataFrame开始。
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Convert the DataFrame to use best possible dtypes.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 将DataFrame转换为使用最佳可能的数据类型。
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Start with a Series of strings and missing data represented by `np.nan`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 从字符串序列和由`np.nan`表示的缺失数据开始。
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Obtain a Series with dtype `StringDtype`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 获得一个具有`StringDtype`数据类型的序列。
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
