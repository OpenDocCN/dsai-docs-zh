["```py\nscipy.optimize.dual_annealing(func, bounds, args=(), maxiter=1000, minimizer_kwargs=None, initial_temp=5230.0, restart_temp_ratio=2e-05, visit=2.62, accept=-5.0, maxfun=10000000.0, seed=None, no_local_search=False, callback=None, x0=None)\n```", "```py\n>>> import numpy as np\n>>> from scipy.optimize import dual_annealing\n>>> func = lambda x: np.sum(x*x - 10*np.cos(2*np.pi*x)) + 10*np.size(x)\n>>> lw = [-5.12] * 10\n>>> up = [5.12] * 10\n>>> ret = dual_annealing(func, bounds=list(zip(lw, up)))\n>>> ret.x\narray([-4.26437714e-09, -3.91699361e-09, -1.86149218e-09, -3.97165720e-09,\n -6.29151648e-09, -6.53145322e-09, -3.93616815e-09, -6.55623025e-09,\n -6.05775280e-09, -5.00668935e-09]) # random\n>>> ret.fun\n0.000000 \n```"]