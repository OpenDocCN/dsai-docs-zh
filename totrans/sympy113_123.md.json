["```py\nsympy.tensor.index_methods.get_contraction_structure(expr)\n```", "```py\n>>> from sympy.tensor.index_methods import get_contraction_structure\n>>> from sympy import default_sort_key\n>>> from sympy.tensor import IndexedBase, Idx\n>>> x, y, A = map(IndexedBase, ['x', 'y', 'A'])\n>>> i, j, k, l = map(Idx, ['i', 'j', 'k', 'l'])\n>>> get_contraction_structure(x[i]*y[i] + A[j, j])\n{(i,): {x[i]*y[i]}, (j,): {A[j, j]}}\n>>> get_contraction_structure(x[i]*y[j])\n{None: {x[i]*y[j]}} \n```", "```py\n>>> d = get_contraction_structure(x[i, i]*y[j, j])\n>>> sorted(d.keys(), key=default_sort_key)\n[None, x[i, i]*y[j, j]] \n```", "```py\n>>> d[None]\n{x[i, i]*y[j, j]} \n```", "```py\n>>> sorted(d[x[i, i]*y[j, j]], key=default_sort_key)\n[{(i,): {x[i, i]}}, {(j,): {y[j, j]}}] \n```", "```py\n>>> d = get_contraction_structure(x[i]*(y[i] + A[i, j]*x[j]))\n>>> sorted(d.keys(), key=default_sort_key)\n[(A[i, j]*x[j] + y[i])*x[i], (i,)]\n>>> d[(i,)]\n{(A[i, j]*x[j] + y[i])*x[i]}\n>>> d[x[i]*(A[i, j]*x[j] + y[i])]\n[{None: {y[i]}, (j,): {A[i, j]*x[j]}}] \n```", "```py\n>>> d = get_contraction_structure(A[j, j]**A[i, i])\n>>> d[None]\n{A[j, j]**A[i, i]}\n>>> nested_contractions = d[A[j, j]**A[i, i]]\n>>> nested_contractions[0]\n{(j,): {A[j, j]}}\n>>> nested_contractions[1]\n{(i,): {A[i, i]}} \n```", "```py\n>>> from sympy import Expr\n>>> for key in d:\n...     if isinstance(key, Expr):\n...         continue\n...     for term in d[key]:\n...         if term in d:\n...             # treat deepest contraction first\n...             pass\n...     # treat outermost contactions here \n```", "```py\nsympy.tensor.index_methods.get_indices(expr)\n```", "```py\n>>> from sympy.tensor.index_methods import get_indices\n>>> from sympy import symbols\n>>> from sympy.tensor import IndexedBase\n>>> x, y, A = map(IndexedBase, ['x', 'y', 'A'])\n>>> i, j, a, z = symbols('i j a z', integer=True) \n```", "```py\n>>> get_indices(A[i, i])\n(set(), {}) \n```", "```py\n>>> get_indices(x[i] + A[i, j]*y[j])\n({i}, {}) \n```", "```py\n>>> get_indices(x[i] + y[j])                \n (...)\nIndexConformanceException: Indices are not consistent: x(i) + y(j) \n```", "```py\n>>> get_indices((x[i] + A[i, j]*y[j])*x[j])\n({i, j}, {}) \n```"]