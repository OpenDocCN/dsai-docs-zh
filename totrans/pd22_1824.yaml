- en: pandas.api.indexers.check_array_indexer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.api.indexers.check_array_indexer.html](https://pandas.pydata.org/docs/reference/api/pandas.api.indexers.check_array_indexer.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Check if indexer is a valid array indexer for array.
  prefs: []
  type: TYPE_NORMAL
- en: For a boolean mask, array and indexer are checked to have the same length. The
    dtype is validated, and if it is an integer or boolean ExtensionArray, it is checked
    if there are missing values present, and it is converted to the appropriate numpy
    array. Other dtypes will raise an error.
  prefs: []
  type: TYPE_NORMAL
- en: Non-array indexers (integer, slice, Ellipsis, tuples, ..) are passed through
    as is.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**array**array-like'
  prefs: []
  type: TYPE_NORMAL
- en: The array that is being indexed (only used for the length).
  prefs: []
  type: TYPE_NORMAL
- en: '**indexer**array-like or list-like'
  prefs: []
  type: TYPE_NORMAL
- en: The array-like that’s used to index. List-like input that is not yet a numpy
    array or an ExtensionArray is converted to one. Other input types are passed through
    as is.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: numpy.ndarray
  prefs: []
  type: TYPE_NORMAL
- en: The validated indexer as a numpy array that can be used to index.
  prefs: []
  type: TYPE_NORMAL
- en: 'Raises:'
  prefs: []
  type: TYPE_NORMAL
- en: IndexError
  prefs: []
  type: TYPE_NORMAL
- en: When the lengths don’t match.
  prefs: []
  type: TYPE_NORMAL
- en: ValueError
  prefs: []
  type: TYPE_NORMAL
- en: When indexer cannot be converted to a numpy ndarray to index (e.g. presence
    of missing values).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '`api.types.is_bool_dtype`'
  prefs: []
  type: TYPE_NORMAL
- en: Check if key is of boolean dtype.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: When checking a boolean mask, a boolean ndarray is returned when the arguments
    are all valid.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: An IndexError is raised when the lengths don’t match.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: NA values in a boolean array are treated as False.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'A numpy boolean mask will get passed through (if the length is correct):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Similarly for integer indexers, an integer ndarray is returned when it is a
    valid indexer, otherwise an error is (for integer indexers, a matching length
    is not required):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'For non-integer/boolean dtypes, an appropriate error is raised:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
