- en: scipy.odr.Model
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.odr.Model
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.odr.Model.html#scipy.odr.Model](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.odr.Model.html#scipy.odr.Model)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.odr.Model.html#scipy.odr.Model](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.odr.Model.html#scipy.odr.Model)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The Model class stores information about the function you wish to fit.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Model类存储了您希望拟合的函数的信息。
- en: It stores the function itself, at the least, and optionally stores functions
    which compute the Jacobians used during fitting. Also, one can provide a function
    that will provide reasonable starting values for the fit parameters possibly given
    the set of data.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 它至少存储函数本身，并可选地存储用于拟合期间计算的雅可比函数。此外，可以提供一个函数，该函数将根据给定的数据集可能提供合理的拟合参数起始值。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fcn**function'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**fcn**函数'
- en: fcn(beta, x) –> y
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: fcn(beta, x) –> y
- en: '**fjacb**function'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**fjacb**函数'
- en: Jacobian of fcn wrt the fit parameters beta.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对fcn关于拟合参数beta的雅可比矩阵。
- en: fjacb(beta, x) –> @f_i(x,B)/@B_j
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: fjacb(beta, x) –> @f_i(x,B)/@B_j
- en: '**fjacd**function'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**fjacd**函数'
- en: Jacobian of fcn wrt the (possibly multidimensional) input variable.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对fcn关于（可能是多维的）输入变量的雅可比矩阵。
- en: fjacd(beta, x) –> @f_i(x,B)/@x_j
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: fjacd(beta, x) –> @f_i(x,B)/@x_j
- en: '**extra_args**tuple, optional'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**额外参数**元组，可选'
- en: If specified, *extra_args* should be a tuple of extra arguments to pass to *fcn*,
    *fjacb*, and *fjacd*. Each will be called by *apply(fcn, (beta, x) + extra_args)*
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定，*extra_args* 应为传递给 *fcn*、*fjacb* 和 *fjacd* 的额外参数元组。每个将通过 *apply(fcn, (beta,
    x) + extra_args)* 调用。
- en: '**estimate**array_like of rank-1'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**估计**秩-1的数组类型'
- en: Provides estimates of the fit parameters from the data
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 提供从数据中估计的拟合参数。
- en: estimate(data) –> estbeta
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: estimate(data) –> estbeta
- en: '**implicit**boolean'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**隐式**布尔值'
- en: If TRUE, specifies that the model is implicit; i.e *fcn(beta, x)* ~= 0 and there
    is no y data to fit against
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为TRUE，指定模型是隐式的；即 *fcn(beta, x)* ~= 0，并且没有y数据进行拟合。
- en: '**meta**dict, optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**元**字典，可选'
- en: freeform dictionary of metadata for the model
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 模型的自由格式元数据字典
- en: Notes
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记
- en: Note that the *fcn*, *fjacb*, and *fjacd* operate on NumPy arrays and return
    a NumPy array. The *estimate* object takes an instance of the Data class.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，*fcn*、*fjacb* 和 *fjacd* 操作于NumPy数组并返回NumPy数组。 *estimate* 对象接受Data类的实例。
- en: 'Here are the rules for the shapes of the argument and return arrays of the
    callback functions:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是回调函数的参数和返回数组形状的规则：
- en: '*x*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*x*'
- en: if the input data is single-dimensional, then *x* is rank-1 array; i.e., `x
    = array([1, 2, 3, ...]); x.shape = (n,)` If the input data is multi-dimensional,
    then *x* is a rank-2 array; i.e., `x = array([[1, 2, ...], [2, 4, ...]]); x.shape
    = (m, n)`. In all cases, it has the same shape as the input data array passed
    to [`odr`](odr-function.html#scipy.odr.odr "scipy.odr.odr"). *m* is the dimensionality
    of the input data, *n* is the number of observations.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果输入数据是单维的，则 *x* 是一个秩为1的数组；即 `x = array([1, 2, 3, ...]); x.shape = (n,)` 如果输入数据是多维的，则
    *x* 是一个秩为2的数组；即 `x = array([[1, 2, ...], [2, 4, ...]]); x.shape = (m, n)` 在所有情况下，它与传递给
    [`odr`](odr-function.html#scipy.odr.odr "scipy.odr.odr") 的输入数据数组具有相同的形状。 *m* 是输入数据的维数，
    *n* 是观测值的数量。
- en: '*y*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*y*'
- en: if the response variable is single-dimensional, then *y* is a rank-1 array,
    i.e., `y = array([2, 4, ...]); y.shape = (n,)`. If the response variable is multi-dimensional,
    then *y* is a rank-2 array, i.e., `y = array([[2, 4, ...], [3, 6, ...]]); y.shape
    = (q, n)` where *q* is the dimensionality of the response variable.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果响应变量是单维的，则 *y* 是一个秩为1的数组，即 `y = array([2, 4, ...]); y.shape = (n,)`。如果响应变量是多维的，则
    *y* 是一个秩为2的数组，即 `y = array([[2, 4, ...], [3, 6, ...]]); y.shape = (q, n)`，其中 *q*
    是响应变量的维数。
- en: '*beta*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*beta*'
- en: rank-1 array of length *p* where *p* is the number of parameters; i.e. `beta
    = array([B_1, B_2, ..., B_p])`
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 长度为 *p* 的秩-1数组，其中 *p* 是参数的数量；即 `beta = array([B_1, B_2, ..., B_p])`
- en: '*fjacb*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*fjacb*'
- en: if the response variable is multi-dimensional, then the return array’s shape
    is *(q, p, n)* such that `fjacb(x,beta)[l,k,i] = d f_l(X,B)/d B_k` evaluated at
    the ith data point. If *q == 1*, then the return array is only rank-2 and with
    shape *(p, n)*.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果响应变量是多维的，则返回数组的形状是 *(q, p, n)*，其中 `fjacb(x,beta)[l,k,i] = d f_l(X,B)/d B_k`
    在第i个数据点处求值。如果 *q == 1*，则返回数组仅为秩2且形状为 *(p, n)*。
- en: '*fjacd*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*fjacd*'
- en: as with fjacb, only the return array’s shape is *(q, m, n)* such that `fjacd(x,beta)[l,j,i]
    = d f_l(X,B)/d X_j` at the ith data point. If *q == 1*, then the return array’s
    shape is *(m, n)*. If *m == 1*, the shape is (q, n). If *m == q == 1*, the shape
    is *(n,)*.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 与fjacb类似，仅返回数组的形状为*(q, m, n)*，使得`fjacd(x,beta)[l,j,i] = d f_l(X,B)/d X_j`在第i个数据点。如果*q
    == 1*，则返回数组的形状为*(m, n)*。如果*m == 1*，则形状为(q, n)。如果*m == q == 1*，则形状为*(n,)*。
- en: Methods
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`set_meta`](scipy.odr.Model.set_meta.html#scipy.odr.Model.set_meta "scipy.odr.Model.set_meta")(**kwds)
    | Update the metadata dictionary with the keywords and data provided here. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`set_meta`](scipy.odr.Model.set_meta.html#scipy.odr.Model.set_meta "scipy.odr.Model.set_meta")(**kwds)
    | 使用提供的关键词和数据更新元数据字典。 |'
