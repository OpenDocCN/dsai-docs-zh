- en: scipy.optimize.toms748
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.toms748
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.toms748.html#scipy.optimize.toms748](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.toms748.html#scipy.optimize.toms748)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.toms748.html#scipy.optimize.toms748](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.toms748.html#scipy.optimize.toms748)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Find a root using TOMS Algorithm 748 method.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用TOMS算法748方法找到根。
- en: Implements the Algorithm 748 method of Alefeld, Potro and Shi to find a root
    of the function *f* on the interval *[a , b]*, where *f(a)* and *f(b)* must have
    opposite signs.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 实现Alefeld，Potro和Shi的Algorithm 748方法，在区间*[a , b]*上找到函数*f*的根，其中*f(a)*和*f(b)*必须有相反的符号。
- en: It uses a mixture of inverse cubic interpolation and “Newton-quadratic” steps.
    [APS1995].
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用反立方插值和“牛顿二次”步骤的混合。[APS1995]。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**f**function'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**f**函数'
- en: Python function returning a scalar. The function \(f\) must be continuous, and
    \(f(a)\) and \(f(b)\) have opposite signs.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 返回标量的Python函数。函数\(f\)必须连续，并且\(f(a)\)和\(f(b)\)具有相反的符号。
- en: '**a**scalar,'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**标量，'
- en: lower boundary of the search interval
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索区间的下界
- en: '**b**scalar,'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**b**标量，'
- en: upper boundary of the search interval
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索区间的上界
- en: '**args**tuple, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**args**元组，可选'
- en: containing extra arguments for the function *f*. *f* is called by `f(x, *args)`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 包含用于函数*f*的额外参数的对象。*f*通过`f(x, *args)`调用。
- en: '**k**int, optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**k**整数，可选'
- en: The number of Newton quadratic steps to perform each iteration. `k>=1`.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每次迭代执行的牛顿二次步骤数。`k>=1`。
- en: '**xtol**scalar, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**xtol**标量，可选'
- en: The computed root `x0` will satisfy `np.allclose(x, x0, atol=xtol, rtol=rtol)`,
    where `x` is the exact root. The parameter must be positive.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 计算得到的根`x0`将满足`np.allclose(x, x0, atol=xtol, rtol=rtol)`，其中`x`是精确的根。该参数必须为正数。
- en: '**rtol**scalar, optional'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**rtol**标量，可选'
- en: The computed root `x0` will satisfy `np.allclose(x, x0, atol=xtol, rtol=rtol)`,
    where `x` is the exact root.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 计算得到的根`x0`将满足`np.allclose(x, x0, atol=xtol, rtol=rtol)`，其中`x`是精确的根。
- en: '**maxiter**int, optional'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxiter**整数，可选'
- en: If convergence is not achieved in *maxiter* iterations, an error is raised.
    Must be >= 0.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在*maxiter*次迭代中未收敛，将引发错误。必须大于或等于0。
- en: '**full_output**bool, optional'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**full_output**布尔值，可选'
- en: If *full_output* is False, the root is returned. If *full_output* is True, the
    return value is `(x, r)`, where *x* is the root, and *r* is a [`RootResults`](scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults") object.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*full_output*为False，则返回根。如果*full_output*为True，则返回值为`(x, r)`，其中*x*为根，*r*是[`RootResults`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.RootResults.html#scipy.optimize.RootResults)对象。
- en: '**disp**bool, optional'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**disp**布尔值，可选'
- en: If True, raise RuntimeError if the algorithm didn’t converge. Otherwise, the
    convergence status is recorded in the [`RootResults`](scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults") return object.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为True，则在算法未收敛时引发运行时错误。否则，收敛状态记录在[`RootResults`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.RootResults.html#scipy.optimize.RootResults)返回对象中。
- en: 'Returns:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**root**float'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**root**浮点数'
- en: Approximate root of *f*
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*f*的近似根'
- en: '**r**[`RootResults`](scipy.optimize.RootResults.html#scipy.optimize.RootResults
    "scipy.optimize.RootResults") (present if `full_output = True`)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**r**[`RootResults`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.RootResults.html#scipy.optimize.RootResults)（如果`full_output
    = True`时存在）'
- en: Object containing information about the convergence. In particular, `r.converged`
    is True if the routine converged.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 包含有关收敛性的信息的对象。特别地，如果例程收敛，则`r.converged`为True。
- en: See also
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 另见
- en: '[`brentq`](scipy.optimize.brentq.html#scipy.optimize.brentq "scipy.optimize.brentq"),
    [`brenth`](scipy.optimize.brenth.html#scipy.optimize.brenth "scipy.optimize.brenth"),
    [`ridder`](scipy.optimize.ridder.html#scipy.optimize.ridder "scipy.optimize.ridder"),
    [`bisect`](scipy.optimize.bisect.html#scipy.optimize.bisect "scipy.optimize.bisect"),
    [`newton`](scipy.optimize.newton.html#scipy.optimize.newton "scipy.optimize.newton")'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[`brentq`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.brentq.html#scipy.optimize.brentq)，[`brenth`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.brenth.html#scipy.optimize.brenth)，[`ridder`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.ridder.html#scipy.optimize.ridder)，[`bisect`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.bisect.html#scipy.optimize.bisect)，[`newton`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.newton.html#scipy.optimize.newton)'
- en: '[`fsolve`](scipy.optimize.fsolve.html#scipy.optimize.fsolve "scipy.optimize.fsolve")'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fsolve`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.fsolve.html#scipy.optimize.fsolve)'
- en: find roots in N dimensions.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在N维空间中找到根。
- en: Notes
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '*f* must be continuous. Algorithm 748 with `k=2` is asymptotically the most
    efficient algorithm known for finding roots of a four times continuously differentiable
    function. In contrast with Brent’s algorithm, which may only decrease the length
    of the enclosing bracket on the last step, Algorithm 748 decreases it each iteration
    with the same asymptotic efficiency as it finds the root.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*f*必须是连续的。算法748在`k=2`时渐近地是已知寻找四次连续可微函数根最有效的算法。与Brent算法相比，在最后一步可能仅减少包围区间的长度，算法748在每次迭代中以与找到根的渐近效率相同的方式减小它。'
- en: For easy statement of efficiency indices, assume that *f* has 4 continuouous
    deriviatives. For `k=1`, the convergence order is at least 2.7, and with about
    asymptotically 2 function evaluations per iteration, the efficiency index is approximately
    1.65. For `k=2`, the order is about 4.6 with asymptotically 3 function evaluations
    per iteration, and the efficiency index 1.66. For higher values of *k*, the efficiency
    index approaches the kth root of `(3k-2)`, hence `k=1` or `k=2` are usually appropriate.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于表述效率指标，假设*f*具有4个连续导数。对于`k=1`，收敛阶至少为2.7，每次迭代约有渐近2次函数评估，效率指数约为1.65。对于`k=2`，阶数约为4.6，每次迭代渐近3次函数评估，效率指数为1.66。对于更高的*k*值，效率指数接近于`(3k-2)`的k次根，因此`k=1`或`k=2`通常是合适的选择。
- en: References
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[APS1995]'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[APS1995]'
- en: 'Alefeld, G. E. and Potra, F. A. and Shi, Yixun, *Algorithm 748: Enclosing Zeros
    of Continuous Functions*, ACM Trans. Math. Softw. Volume 221(1995) doi = {10.1145/210089.210111}'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 'Alefeld, G. E. and Potra, F. A. and Shi, Yixun，*Algorithm 748: Enclosing Zeros
    of Continuous Functions*，ACM Trans. Math. Softw. Volume 221(1995) doi = {10.1145/210089.210111}'
- en: Examples
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
