- en: scipy.special.stdtr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.stdtr.html#scipy.special.stdtr](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.stdtr.html#scipy.special.stdtr)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Student t distribution cumulative distribution function
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns the integral:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\frac{\Gamma((df+1)/2)}{\sqrt{\pi df} \Gamma(df/2)} \int_{-\infty}^t (1+x^2/df)^{-(df+1)/2}\,
    dx\]
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**df**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Degrees of freedom
  prefs: []
  type: TYPE_NORMAL
- en: '**t**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Upper bound of the integral
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function results
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: scalar or ndarray
  prefs: []
  type: TYPE_NORMAL
- en: Value of the Student t CDF at t
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`stdtridf`](scipy.special.stdtridf.html#scipy.special.stdtridf "scipy.special.stdtridf")'
  prefs: []
  type: TYPE_NORMAL
- en: inverse of stdtr with respect to *df*
  prefs: []
  type: TYPE_NORMAL
- en: '[`stdtrit`](scipy.special.stdtrit.html#scipy.special.stdtrit "scipy.special.stdtrit")'
  prefs: []
  type: TYPE_NORMAL
- en: inverse of stdtr with respect to *t*
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.t`](scipy.stats.t.html#scipy.stats.t "scipy.stats.t")'
  prefs: []
  type: TYPE_NORMAL
- en: student t distribution
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The student t distribution is also available as [`scipy.stats.t`](scipy.stats.t.html#scipy.stats.t
    "scipy.stats.t"). Calling [`stdtr`](#scipy.special.stdtr "scipy.special.stdtr")
    directly can improve performance compared to the `cdf` method of [`scipy.stats.t`](scipy.stats.t.html#scipy.stats.t
    "scipy.stats.t") (see last example below).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Calculate the function for `df=3` at `t=1`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Plot the function for three different degrees of freedom.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-stdtr-1_00_00.png](../Images/3fed336a34963adb236733ed5d727644.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The function can be computed for several degrees of freedom at the same time
    by providing a NumPy array or list for *df*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: It is possible to calculate the function at several points for several different
    degrees of freedom simultaneously by providing arrays for *df* and *t* with shapes
    compatible for broadcasting. Compute [`stdtr`](#scipy.special.stdtr "scipy.special.stdtr")
    at 4 points for 3 degrees of freedom resulting in an array of shape 3x4.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The t distribution is also available as [`scipy.stats.t`](scipy.stats.t.html#scipy.stats.t
    "scipy.stats.t"). Calling [`stdtr`](#scipy.special.stdtr "scipy.special.stdtr")
    directly can be much faster than calling the `cdf` method of [`scipy.stats.t`](scipy.stats.t.html#scipy.stats.t
    "scipy.stats.t"). To get the same results, one must use the following parametrization:
    `scipy.stats.t(df).cdf(x) = stdtr(df, x)`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
