- en: numpy.ufunc.outer
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ufunc.outer
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ufunc.outer.html](https://numpy.org/doc/1.26/reference/generated/numpy.ufunc.outer.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ufunc.outer.html](https://numpy.org/doc/1.26/reference/generated/numpy.ufunc.outer.html)
- en: method
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Apply the ufunc *op* to all pairs (a, b) with a in *A* and b in *B*.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 将ufunc *op*应用于所有(a, b)对，其中a在*A*中，b在*B*中。
- en: 'Let `M = A.ndim`, `N = B.ndim`. Then the result, *C*, of `op.outer(A, B)` is
    an array of dimension M + N such that:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 让`M = A.ndim`，`N = B.ndim`。那么`op.outer(A, B)`的结果*C*是一个维度为M + N的数组，使得：
- en: \[C[i_0, ..., i_{M-1}, j_0, ..., j_{N-1}] = op(A[i_0, ..., i_{M-1}], B[j_0,
    ..., j_{N-1}])\]
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: \[C[i_0, ..., i_{M-1}, j_0, ..., j_{N-1}] = op(A[i_0, ..., i_{M-1}], B[j_0,
    ..., j_{N-1}])\]
- en: 'For *A* and *B* one-dimensional, this is equivalent to:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一维的*A*和*B*，这等同于：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Parameters:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**A**array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**A**array_like'
- en: First array
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个数组
- en: '**B**array_like'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**B**array_like'
- en: Second array
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个数组
- en: '**kwargs**any'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**kwargs**任意'
- en: Arguments to pass on to the ufunc. Typically [`dtype`](numpy.dtype.html#numpy.dtype
    "numpy.dtype") or *out*. See [`ufunc`](numpy.ufunc.html#numpy.ufunc "numpy.ufunc")
    for a comprehensive overview of all available arguments.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给ufunc的参数。通常是[`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype")或*out*。查看[`ufunc`](numpy.ufunc.html#numpy.ufunc
    "numpy.ufunc")以获取所有可用参数的全面概述。
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**r**ndarray'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**r**ndarray'
- en: Output array
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 输出数组
- en: See also
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`numpy.outer`](numpy.outer.html#numpy.outer "numpy.outer")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.outer`](numpy.outer.html#numpy.outer "numpy.outer")'
- en: A less powerful version of `np.multiply.outer` that [`ravel`](numpy.ravel.html#numpy.ravel
    "numpy.ravel")s all inputs to 1D. This exists primarily for compatibility with
    old code.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一个比`np.multiply.outer`弱的版本，将所有输入展平为1D。这主要是为了与旧代码兼容而存在。
- en: '[`tensordot`](numpy.tensordot.html#numpy.tensordot "numpy.tensordot")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`tensordot`](numpy.tensordot.html#numpy.tensordot "numpy.tensordot")'
- en: '`np.tensordot(a, b, axes=((), ()))` and `np.multiply.outer(a, b)` behave same
    for all dimensions of a and b.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.tensordot(a, b, axes=((), ()))`和`np.multiply.outer(a, b)`对于a和b的所有维度行为相同。'
- en: Examples
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'A multi-dimensional example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 多维示例：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
