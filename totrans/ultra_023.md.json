["```py\n`I(X, X) >= I(X, f_theta(X)) >= I(X, g_phi(f_theta(X)))` \n```", "```py\n`X = v_zeta(r_psi(X))` \n```", "```py\n`from ultralytics import YOLO  # Build a YOLOv9c model from scratch model = YOLO(\"yolov9c.yaml\")  # Build a YOLOv9c model from pretrained weight model = YOLO(\"yolov9c.pt\")  # Display model information (optional) model.info()  # Train the model on the COCO8 example dataset for 100 epochs results = model.train(data=\"coco8.yaml\", epochs=100, imgsz=640)  # Run inference with the YOLOv9c model on the 'bus.jpg' image results = model(\"path/to/bus.jpg\")` \n```", "```py\n`# Build a YOLOv9c model from scratch and train it on the COCO8 example dataset for 100 epochs yolo  train  model=yolov9c.yaml  data=coco8.yaml  epochs=100  imgsz=640  # Build a YOLOv9c model from scratch and run inference on the 'bus.jpg' image yolo  predict  model=yolov9c.yaml  source=path/to/bus.jpg` \n```", "```py\n`@article{wang2024yolov9,   title={{YOLOv9}: Learning What You Want to Learn Using Programmable Gradient Information},   author={Wang, Chien-Yao  and Liao, Hong-Yuan Mark},   booktitle={arXiv preprint arXiv:2402.13616},   year={2024} }` \n```", "```py\n`from ultralytics import YOLO  # Build a YOLOv9c model from pretrained weights and train model = YOLO(\"yolov9c.pt\") results = model.train(data=\"coco8.yaml\", epochs=100, imgsz=640)` \n```", "```py\n`yolo  train  model=yolov9c.yaml  data=coco8.yaml  epochs=100  imgsz=640` \n```"]