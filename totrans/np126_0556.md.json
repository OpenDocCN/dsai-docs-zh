["```py\nnumpy.matmul(x1, x2, /, out=None, *, casting='same_kind', order='K', dtype=None, subok=True[, signature, extobj, axes, axis]) = <ufunc 'matmul'>\n```", "```py\n    >>> a = np.ones([9, 5, 7, 4])\n    >>> c = np.ones([9, 5, 4, 3])\n    >>> np.dot(a, c).shape\n    (9, 5, 7, 9, 5, 3)\n    >>> np.matmul(a, c).shape\n    (9, 5, 7, 3)\n    >>> # n is 7, k is 4, m is 3 \n    ```", "```py\n>>> a = np.array([[1, 0],\n...               [0, 1]])\n>>> b = np.array([[4, 1],\n...               [2, 2]])\n>>> np.matmul(a, b)\narray([[4, 1],\n [2, 2]]) \n```", "```py\n>>> a = np.array([[1, 0],\n...               [0, 1]])\n>>> b = np.array([1, 2])\n>>> np.matmul(a, b)\narray([1, 2])\n>>> np.matmul(b, a)\narray([1, 2]) \n```", "```py\n>>> a = np.arange(2 * 2 * 4).reshape((2, 2, 4))\n>>> b = np.arange(2 * 2 * 4).reshape((2, 4, 2))\n>>> np.matmul(a,b).shape\n(2, 2, 2)\n>>> np.matmul(a, b)[0, 1, 1]\n98\n>>> sum(a[0, 1, :] * b[0 , :, 1])\n98 \n```", "```py\n>>> np.matmul([2j, 3j], [2j, 3j])\n(-13+0j) \n```", "```py\n>>> np.matmul([1,2], 3)\nTraceback (most recent call last):\n...\nValueError: matmul: Input operand 1 does not have enough dimensions ... \n```", "```py\n>>> x1 = np.array([2j, 3j])\n>>> x2 = np.array([2j, 3j])\n>>> x1 @ x2\n(-13+0j) \n```"]