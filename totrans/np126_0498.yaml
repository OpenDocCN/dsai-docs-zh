- en: numpy.fft.ifft2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.fft.ifft2
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.ifft2.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.ifft2.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fft.ifft2.html](https://numpy.org/doc/1.26/reference/generated/numpy.fft.ifft2.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the 2-dimensional inverse discrete Fourier Transform.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算二维逆离散傅里叶变换。
- en: This function computes the inverse of the 2-dimensional discrete Fourier Transform
    over any number of axes in an M-dimensional array by means of the Fast Fourier
    Transform (FFT). In other words, `ifft2(fft2(a)) == a` to within numerical accuracy.
    By default, the inverse transform is computed over the last two axes of the input
    array.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数通过快速傅里叶变换（FFT）计算M维数组中任意数量轴上的二维离散傅里叶变换的逆变换。换句话说，`ifft2(fft2(a)) == a`，精确到数值精度。默认情况下，对输入数组的最后两个轴计算逆变换。
- en: The input, analogously to [`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft"),
    should be ordered in the same way as is returned by [`fft2`](numpy.fft.fft2.html#numpy.fft.fft2
    "numpy.fft.fft2"), i.e. it should have the term for zero frequency in the low-order
    corner of the two axes, the positive frequency terms in the first half of these
    axes, the term for the Nyquist frequency in the middle of the axes and the negative
    frequency terms in the second half of both axes, in order of decreasingly negative
    frequency.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 输入应按照与[`fft2`](numpy.fft.fft2.html#numpy.fft.fft2 "numpy.fft.fft2")返回的顺序一样进行，也就是说，它的两个轴的低阶角应该有零频率的项，这两个轴的前半部分应有正频率项，这两个轴的中间应有奈奎斯特频率项，并且这两个轴的后半部分应有负频率项，并依次按照递减负频率的顺序排列。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**a**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like'
- en: Input array, can be complex.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组，可以是复杂数组。
- en: '**s**sequence of ints, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**s**int的序列，可选'
- en: Shape (length of each axis) of the output (`s[0]` refers to axis 0, `s[1]` to
    axis 1, etc.). This corresponds to *n* for `ifft(x, n)`. Along each axis, if the
    given shape is smaller than that of the input, the input is cropped. If it is
    larger, the input is padded with zeros. if *s* is not given, the shape of the
    input along the axes specified by *axes* is used. See notes for issue on [`ifft`](numpy.fft.ifft.html#numpy.fft.ifft
    "numpy.fft.ifft") zero padding.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的形状（每个轴的长度）（`s[0]`表示轴0，`s[1]`表示轴1，依此类推）。这对应于`ifft(x, n)`中的*n*。沿着每个轴，如果给定的形状比输入的形状小，则裁剪输入。如果它大，则用零填充输入。如果未给出*s*，则使用*axes*指定的轴的输入形状。有关[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft
    "numpy.fft.ifft")零填充的问题，请参见注释。
- en: '**axes**sequence of ints, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**axes**int的序列，可选'
- en: Axes over which to compute the FFT. If not given, the last two axes are used.
    A repeated index in *axes* means the transform over that axis is performed multiple
    times. A one-element sequence means that a one-dimensional FFT is performed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 用于计算FFT的轴。如果未给出，则使用最后两个轴。*axes*中的重复索引表示对该轴进行多次变换。一个元素的序列表示执行一维FFT。
- en: '**norm**{“backward”, “ortho”, “forward”}, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**norm**{“backward”, “ortho”, “forward”}，可选'
- en: New in version 1.10.0.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '从1.10.0版本开始。 '
- en: Normalization mode (see [`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft")). Default is “backward”. Indicates which direction of the forward/backward
    pair of transforms is scaled and with what normalization factor.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 归一化模式（参见[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")）。默认为“backward”。表示前向/后向变换对中哪个方向标度化以及使用什么归一化因子。
- en: 'New in version 1.20.0: The “backward”, “forward” values were added.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从1.20.0版本开始：添加了“backward”，“forward”值。
- en: 'Returns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**complex ndarray'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**复数ndarray'
- en: The truncated or zero-padded input, transformed along the axes indicated by
    *axes*, or the last two axes if *axes* is not given.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 截断或零填充的输入，沿着*axes*指示的轴变换，或者如果未给出*axes*，则最后两个轴。
- en: 'Raises:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 异常：
- en: ValueError
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 值错误
- en: If *s* and *axes* have different length, or *axes* not given and `len(s) !=
    2`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*s*和*axes*的长度不同，或者未给出*axes*和`len(s) != 2`。
- en: IndexError
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 索引错误
- en: If an element of *axes* is larger than than the number of axes of *a*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*axes*的元素大于*a*的轴数。
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`numpy.fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
- en: Overall view of discrete Fourier transforms, with definitions and conventions
    used.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 离散傅里叶变换的总体视图，定义和使用的约定。
- en: '[`fft2`](numpy.fft.fft2.html#numpy.fft.fft2 "numpy.fft.fft2")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fft2`](numpy.fft.fft2.html#numpy.fft.fft2 "numpy.fft.fft2")'
- en: The forward 2-dimensional FFT, of which [`ifft2`](#numpy.fft.ifft2 "numpy.fft.ifft2")
    is the inverse.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '前向二维FFT，其逆变换为[`ifft2`](#numpy.fft.ifft2 "numpy.fft.ifft2")。 '
- en: '[`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn "numpy.fft.ifftn")'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn "numpy.fft.ifftn")'
- en: The inverse of the *n*-dimensional FFT.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*n*维FFT的逆变换。'
- en: '[`fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[`fft`](../routines.fft.html#module-numpy.fft "numpy.fft")'
- en: The one-dimensional FFT.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一维FFT。
- en: '[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft")'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft")'
- en: The one-dimensional inverse FFT.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一维逆FFT。
- en: Notes
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: '[`ifft2`](#numpy.fft.ifft2 "numpy.fft.ifft2") is just [`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn
    "numpy.fft.ifftn") with a different default for *axes*.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ifft2`](#numpy.fft.ifft2 "numpy.fft.ifft2")只是具有不同*axes*默认值的[`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn
    "numpy.fft.ifftn")。'
- en: See [`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn "numpy.fft.ifftn") for details
    and a plotting example, and [`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft") for definition and conventions used.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 详见[`ifftn`](numpy.fft.ifftn.html#numpy.fft.ifftn "numpy.fft.ifftn")以获取详细信息和绘图示例，以及[`numpy.fft`](../routines.fft.html#module-numpy.fft
    "numpy.fft")以获取定义和惯例。
- en: Zero-padding, analogously with [`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft"),
    is performed by appending zeros to the input along the specified dimension. Although
    this is the common approach, it might lead to surprising results. If another form
    of zero padding is desired, it must be performed before [`ifft2`](#numpy.fft.ifft2
    "numpy.fft.ifft2") is called.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于[`ifft`](numpy.fft.ifft.html#numpy.fft.ifft "numpy.fft.ifft")，零填充是通过在指定维度上向输入附加零来执行的。虽然这是常用的方法，但可能会导致意想不到的结果。如果需要另一种形式的零填充，必须在调用[`ifft2`](#numpy.fft.ifft2
    "numpy.fft.ifft2")之前执行。
- en: Examples
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
