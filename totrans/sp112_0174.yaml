- en: scipy.interpolate.NearestNDInterpolator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: NearestNDInterpolator(x, y).
  prefs: []
  type: TYPE_NORMAL
- en: Nearest-neighbor interpolator in N > 1 dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.9.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**(npoints, ndims) 2-D ndarray of floats'
  prefs: []
  type: TYPE_NORMAL
- en: Data point coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**(npoints, ) 1-D ndarray of float or complex'
  prefs: []
  type: TYPE_NORMAL
- en: Data values.
  prefs: []
  type: TYPE_NORMAL
- en: '**rescale**boolean, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Rescale points to unit cube before performing interpolation. This is useful
    if some of the input dimensions have incommensurable units and differ by many
    orders of magnitude.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.14.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**tree_options**dict, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Options passed to the underlying `cKDTree`.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.17.0.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`griddata`](scipy.interpolate.griddata.html#scipy.interpolate.griddata "scipy.interpolate.griddata")'
  prefs: []
  type: TYPE_NORMAL
- en: Interpolate unstructured D-D data.
  prefs: []
  type: TYPE_NORMAL
- en: '[`LinearNDInterpolator`](scipy.interpolate.LinearNDInterpolator.html#scipy.interpolate.LinearNDInterpolator
    "scipy.interpolate.LinearNDInterpolator")'
  prefs: []
  type: TYPE_NORMAL
- en: Piecewise linear interpolator in N dimensions.
  prefs: []
  type: TYPE_NORMAL
- en: '[`CloughTocher2DInterpolator`](scipy.interpolate.CloughTocher2DInterpolator.html#scipy.interpolate.CloughTocher2DInterpolator
    "scipy.interpolate.CloughTocher2DInterpolator")'
  prefs: []
  type: TYPE_NORMAL
- en: Piecewise cubic, C1 smooth, curvature-minimizing interpolator in 2D.
  prefs: []
  type: TYPE_NORMAL
- en: '[`interpn`](scipy.interpolate.interpn.html#scipy.interpolate.interpn "scipy.interpolate.interpn")'
  prefs: []
  type: TYPE_NORMAL
- en: Interpolation on a regular grid or rectilinear grid.
  prefs: []
  type: TYPE_NORMAL
- en: '[`RegularGridInterpolator`](scipy.interpolate.RegularGridInterpolator.html#scipy.interpolate.RegularGridInterpolator
    "scipy.interpolate.RegularGridInterpolator")'
  prefs: []
  type: TYPE_NORMAL
- en: Interpolator on a regular or rectilinear grid in arbitrary dimensions ([`interpn`](scipy.interpolate.interpn.html#scipy.interpolate.interpn
    "scipy.interpolate.interpn") wraps this class).
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Uses `scipy.spatial.cKDTree`
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: For data on a regular grid use [`interpn`](scipy.interpolate.interpn.html#scipy.interpolate.interpn
    "scipy.interpolate.interpn") instead.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'We can interpolate values on a 2D plane:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-interpolate-NearestNDInterpolator-1.png](../Images/91a94a936c4768f523c2b789ff94064f.png)'
  prefs: []
  type: TYPE_IMG
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__call__`](scipy.interpolate.NearestNDInterpolator.__call__.html#scipy.interpolate.NearestNDInterpolator.__call__
    "scipy.interpolate.NearestNDInterpolator.__call__")(*args, **query_options) |
    Evaluate interpolator at given points. |'
  prefs: []
  type: TYPE_TB
