- en: numpy.ma.make_mask
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ma.make_mask.html](https://numpy.org/doc/1.26/reference/generated/numpy.ma.make_mask.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Create a boolean mask from an array.
  prefs: []
  type: TYPE_NORMAL
- en: Return *m* as a boolean mask, creating a copy if necessary or requested. The
    function can accept any sequence that is convertible to integers, or `nomask`.
    Does not require that contents must be 0s and 1s, values of 0 are interpreted
    as False, everything else as True.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**m**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Potential mask.
  prefs: []
  type: TYPE_NORMAL
- en: '**copy**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to return a copy of *m* (True) or *m* itself (False).
  prefs: []
  type: TYPE_NORMAL
- en: '**shrink**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Whether to shrink *m* to `nomask` if all its values are False.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**dtype, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Data-type of the output mask. By default, the output mask has a dtype of MaskType
    (bool). If the dtype is flexible, each field has a boolean dtype. This is ignored
    when *m* is `nomask`, in which case `nomask` is always returned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**result**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: A boolean mask derived from *m*.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Effect of the *shrink* parameter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Using a flexible [`dtype`](numpy.dtype.html#numpy.dtype "numpy.dtype").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
