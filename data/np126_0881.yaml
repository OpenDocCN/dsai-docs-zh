- en: numpy.fmod
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.fmod
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fmod.html](https://numpy.org/doc/1.26/reference/generated/numpy.fmod.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.fmod.html](https://numpy.org/doc/1.26/reference/generated/numpy.fmod.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Returns the element-wise remainder of division.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 返回元素级别的除法余数。
- en: This is the NumPy implementation of the C library function fmod, the remainder
    has the same sign as the dividend *x1*. It is equivalent to the Matlab(TM) `rem`
    function and should not be confused with the Python modulus operator `x1 % x2`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 C 库函数 fmod 的 NumPy 实现，余数与被除数 *x1* 的符号相同。它等同于 Matlab(TM) 的 `rem` 函数，不应与 Python
    的模运算符 `x1 % x2` 混淆。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x1**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x1**array_like'
- en: Dividend.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 被除数。
- en: '**x2**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**x2**array_like'
- en: Divisor. If `x1.shape != x2.shape`, they must be broadcastable to a common shape
    (which becomes the shape of the output).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 除数。如果 `x1.shape != x2.shape`，它们必须能够广播到一个公共形状（这将成为输出的形状）。
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray, None, or tuple of ndarray and None, optional'
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 存储结果的位置。如果提供，它必须具有输入广播到的形状。如果未提供或为 None，则返回一个新分配的数组。一个元组（仅作为关键字参数）的长度必须等于输出的数量。
- en: '**where**array_like, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**array_like, optional'
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此条件广播到输入。在条件为 True 的位置，*out* 数组将设置为 ufunc 结果。在其他位置，*out* 数组将保留其原始值。请注意，如果通过默认的
    `out=None` 创建了一个未初始化的 *out* 数组，则其中条件为 False 的位置将保持未初始化状态。
- en: '****kwargs**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他仅限关键字参数，请参阅[ufunc文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'Returns:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**y**array_like'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**y**array_like'
- en: The remainder of the division of *x1* by *x2*. This is a scalar if both *x1*
    and *x2* are scalars.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*x1*除以*x2*的余数。如果*x1*和*x2*都是标量，则结果是标量。'
- en: See also
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`remainder`](numpy.remainder.html#numpy.remainder "numpy.remainder")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`remainder`](numpy.remainder.html#numpy.remainder "numpy.remainder")'
- en: Equivalent to the Python `%` operator.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 等同于 Python 的 `%` 运算符。
- en: '[`divide`](numpy.divide.html#numpy.divide "numpy.divide")'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[`divide`](numpy.divide.html#numpy.divide "numpy.divide")'
- en: Notes
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: The result of the modulo operation for negative dividend and divisors is bound
    by conventions. For [`fmod`](#numpy.fmod "numpy.fmod"), the sign of result is
    the sign of the dividend, while for [`remainder`](numpy.remainder.html#numpy.remainder
    "numpy.remainder") the sign of the result is the sign of the divisor. The [`fmod`](#numpy.fmod
    "numpy.fmod") function is equivalent to the Matlab(TM) `rem` function.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于负被除数和除数的模运算结果受约定限制。对于 [`fmod`](#numpy.fmod "numpy.fmod")，结果的符号与被除数的符号相同，而对于
    [`remainder`](numpy.remainder.html#numpy.remainder "numpy.remainder")，结果的符号与除数的符号相同。[`fmod`](#numpy.fmod
    "numpy.fmod") 函数等同于 Matlab(TM) 的 `rem` 函数。
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
