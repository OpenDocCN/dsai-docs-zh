- en: Chebyshev Series (numpy.polynomial.chebyshev)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/routines.polynomials.chebyshev.html](https://numpy.org/doc/1.26/reference/routines.polynomials.chebyshev.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This module provides a number of objects (mostly functions) useful for dealing
    with Chebyshev series, including a [`Chebyshev`](generated/numpy.polynomial.chebyshev.Chebyshev.html#numpy.polynomial.chebyshev.Chebyshev
    "numpy.polynomial.chebyshev.Chebyshev") class that encapsulates the usual arithmetic
    operations. (General information on how this module represents and works with
    such polynomials is in the docstring for its “parent” sub-package, [`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")).
  prefs: []
  type: TYPE_NORMAL
- en: Classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Chebyshev`](generated/numpy.polynomial.chebyshev.Chebyshev.html#numpy.polynomial.chebyshev.Chebyshev
    "numpy.polynomial.chebyshev.Chebyshev")(coef[, domain, window, symbol]) | A Chebyshev
    series class. |'
  prefs: []
  type: TYPE_TB
- en: Constants
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`chebdomain`](generated/numpy.polynomial.chebyshev.chebdomain.html#numpy.polynomial.chebyshev.chebdomain
    "numpy.polynomial.chebyshev.chebdomain") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebzero`](generated/numpy.polynomial.chebyshev.chebzero.html#numpy.polynomial.chebyshev.chebzero
    "numpy.polynomial.chebyshev.chebzero") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebone`](generated/numpy.polynomial.chebyshev.chebone.html#numpy.polynomial.chebyshev.chebone
    "numpy.polynomial.chebyshev.chebone") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebx`](generated/numpy.polynomial.chebyshev.chebx.html#numpy.polynomial.chebyshev.chebx
    "numpy.polynomial.chebyshev.chebx") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: Arithmetic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`chebadd`](generated/numpy.polynomial.chebyshev.chebadd.html#numpy.polynomial.chebyshev.chebadd
    "numpy.polynomial.chebyshev.chebadd")(c1, c2) | Add one Chebyshev series to another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebsub`](generated/numpy.polynomial.chebyshev.chebsub.html#numpy.polynomial.chebyshev.chebsub
    "numpy.polynomial.chebyshev.chebsub")(c1, c2) | Subtract one Chebyshev series
    from another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebmulx`](generated/numpy.polynomial.chebyshev.chebmulx.html#numpy.polynomial.chebyshev.chebmulx
    "numpy.polynomial.chebyshev.chebmulx")(c) | Multiply a Chebyshev series by x.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebmul`](generated/numpy.polynomial.chebyshev.chebmul.html#numpy.polynomial.chebyshev.chebmul
    "numpy.polynomial.chebyshev.chebmul")(c1, c2) | Multiply one Chebyshev series
    by another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebdiv`](generated/numpy.polynomial.chebyshev.chebdiv.html#numpy.polynomial.chebyshev.chebdiv
    "numpy.polynomial.chebyshev.chebdiv")(c1, c2) | Divide one Chebyshev series by
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebpow`](generated/numpy.polynomial.chebyshev.chebpow.html#numpy.polynomial.chebyshev.chebpow
    "numpy.polynomial.chebyshev.chebpow")(c, pow[, maxpower]) | Raise a Chebyshev
    series to a power. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebval`](generated/numpy.polynomial.chebyshev.chebval.html#numpy.polynomial.chebyshev.chebval
    "numpy.polynomial.chebyshev.chebval")(x, c[, tensor]) | Evaluate a Chebyshev series
    at points x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebval2d`](generated/numpy.polynomial.chebyshev.chebval2d.html#numpy.polynomial.chebyshev.chebval2d
    "numpy.polynomial.chebyshev.chebval2d")(x, y, c) | Evaluate a 2-D Chebyshev series
    at points (x, y). |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebval3d`](generated/numpy.polynomial.chebyshev.chebval3d.html#numpy.polynomial.chebyshev.chebval3d
    "numpy.polynomial.chebyshev.chebval3d")(x, y, z, c) | Evaluate a 3-D Chebyshev
    series at points (x, y, z). |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebgrid2d`](generated/numpy.polynomial.chebyshev.chebgrid2d.html#numpy.polynomial.chebyshev.chebgrid2d
    "numpy.polynomial.chebyshev.chebgrid2d")(x, y, c) | Evaluate a 2-D Chebyshev series
    on the Cartesian product of x and y. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebgrid3d`](generated/numpy.polynomial.chebyshev.chebgrid3d.html#numpy.polynomial.chebyshev.chebgrid3d
    "numpy.polynomial.chebyshev.chebgrid3d")(x, y, z, c) | Evaluate a 3-D Chebyshev
    series on the Cartesian product of x, y, and z. |'
  prefs: []
  type: TYPE_TB
- en: Calculus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`chebder`](generated/numpy.polynomial.chebyshev.chebder.html#numpy.polynomial.chebyshev.chebder
    "numpy.polynomial.chebyshev.chebder")(c[, m, scl, axis]) | Differentiate a Chebyshev
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebint`](generated/numpy.polynomial.chebyshev.chebint.html#numpy.polynomial.chebyshev.chebint
    "numpy.polynomial.chebyshev.chebint")(c[, m, k, lbnd, scl, axis]) | Integrate
    a Chebyshev series. |'
  prefs: []
  type: TYPE_TB
- en: Misc Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`chebfromroots`](generated/numpy.polynomial.chebyshev.chebfromroots.html#numpy.polynomial.chebyshev.chebfromroots
    "numpy.polynomial.chebyshev.chebfromroots")(roots) | Generate a Chebyshev series
    with given roots. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebroots`](generated/numpy.polynomial.chebyshev.chebroots.html#numpy.polynomial.chebyshev.chebroots
    "numpy.polynomial.chebyshev.chebroots")(c) | Compute the roots of a Chebyshev
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebvander`](generated/numpy.polynomial.chebyshev.chebvander.html#numpy.polynomial.chebyshev.chebvander
    "numpy.polynomial.chebyshev.chebvander")(x, deg) | Pseudo-Vandermonde matrix of
    given degree. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebvander2d`](generated/numpy.polynomial.chebyshev.chebvander2d.html#numpy.polynomial.chebyshev.chebvander2d
    "numpy.polynomial.chebyshev.chebvander2d")(x, y, deg) | Pseudo-Vandermonde matrix
    of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebvander3d`](generated/numpy.polynomial.chebyshev.chebvander3d.html#numpy.polynomial.chebyshev.chebvander3d
    "numpy.polynomial.chebyshev.chebvander3d")(x, y, z, deg) | Pseudo-Vandermonde
    matrix of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebgauss`](generated/numpy.polynomial.chebyshev.chebgauss.html#numpy.polynomial.chebyshev.chebgauss
    "numpy.polynomial.chebyshev.chebgauss")(deg) | Gauss-Chebyshev quadrature. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebweight`](generated/numpy.polynomial.chebyshev.chebweight.html#numpy.polynomial.chebyshev.chebweight
    "numpy.polynomial.chebyshev.chebweight")(x) | The weight function of the Chebyshev
    polynomials. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebcompanion`](generated/numpy.polynomial.chebyshev.chebcompanion.html#numpy.polynomial.chebyshev.chebcompanion
    "numpy.polynomial.chebyshev.chebcompanion")(c) | Return the scaled companion matrix
    of c. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebfit`](generated/numpy.polynomial.chebyshev.chebfit.html#numpy.polynomial.chebyshev.chebfit
    "numpy.polynomial.chebyshev.chebfit")(x, y, deg[, rcond, full, w]) | Least squares
    fit of Chebyshev series to data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebpts1`](generated/numpy.polynomial.chebyshev.chebpts1.html#numpy.polynomial.chebyshev.chebpts1
    "numpy.polynomial.chebyshev.chebpts1")(npts) | Chebyshev points of the first kind.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebpts2`](generated/numpy.polynomial.chebyshev.chebpts2.html#numpy.polynomial.chebyshev.chebpts2
    "numpy.polynomial.chebyshev.chebpts2")(npts) | Chebyshev points of the second
    kind. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebtrim`](generated/numpy.polynomial.chebyshev.chebtrim.html#numpy.polynomial.chebyshev.chebtrim
    "numpy.polynomial.chebyshev.chebtrim")(c[, tol]) | Remove "small" "trailing" coefficients
    from a polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebline`](generated/numpy.polynomial.chebyshev.chebline.html#numpy.polynomial.chebyshev.chebline
    "numpy.polynomial.chebyshev.chebline")(off, scl) | Chebyshev series whose graph
    is a straight line. |'
  prefs: []
  type: TYPE_TB
- en: '| [`cheb2poly`](generated/numpy.polynomial.chebyshev.cheb2poly.html#numpy.polynomial.chebyshev.cheb2poly
    "numpy.polynomial.chebyshev.cheb2poly")(c) | Convert a Chebyshev series to a polynomial.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`poly2cheb`](generated/numpy.polynomial.chebyshev.poly2cheb.html#numpy.polynomial.chebyshev.poly2cheb
    "numpy.polynomial.chebyshev.poly2cheb")(pol) | Convert a polynomial to a Chebyshev
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebinterpolate`](generated/numpy.polynomial.chebyshev.chebinterpolate.html#numpy.polynomial.chebyshev.chebinterpolate
    "numpy.polynomial.chebyshev.chebinterpolate")(func, deg[, args]) | Interpolate
    a function at the Chebyshev points of the first kind. |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The implementations of multiplication, division, integration, and differentiation
    use the algebraic identities [[1]](#r3f3efff98d00-1):'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}T_n(x) = \frac{z^n + z^{-n}}{2} \\ z\frac{dx}{dz} = \frac{z -
    z^{-1}}{2}.\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: where
  prefs: []
  type: TYPE_NORMAL
- en: \[x = \frac{z + z^{-1}}{2}.\]
  prefs: []
  type: TYPE_NORMAL
- en: These identities allow a Chebyshev series to be expressed as a finite, symmetric
    Laurent series. In this module, this sort of Laurent series is referred to as
    a “z-series.”
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: A. T. Benjamin, et al., “Combinatorial Trigonometry with Chebyshev Polynomials,”
    *Journal of Statistical Planning and Inference 14*, 2008 ([https://web.archive.org/web/20080221202153/https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf](https://web.archive.org/web/20080221202153/https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf),
    pg. 4)
  prefs: []
  type: TYPE_NORMAL
- en: Classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`Chebyshev`](generated/numpy.polynomial.chebyshev.Chebyshev.html#numpy.polynomial.chebyshev.Chebyshev
    "numpy.polynomial.chebyshev.Chebyshev")(coef[, domain, window, symbol]) | A Chebyshev
    series class. |'
  prefs: []
  type: TYPE_TB
- en: Constants
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`chebdomain`](generated/numpy.polynomial.chebyshev.chebdomain.html#numpy.polynomial.chebyshev.chebdomain
    "numpy.polynomial.chebyshev.chebdomain") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebzero`](generated/numpy.polynomial.chebyshev.chebzero.html#numpy.polynomial.chebyshev.chebzero
    "numpy.polynomial.chebyshev.chebzero") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebone`](generated/numpy.polynomial.chebyshev.chebone.html#numpy.polynomial.chebyshev.chebone
    "numpy.polynomial.chebyshev.chebone") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebx`](generated/numpy.polynomial.chebyshev.chebx.html#numpy.polynomial.chebyshev.chebx
    "numpy.polynomial.chebyshev.chebx") | An array object represents a multidimensional,
    homogeneous array of fixed-size items. |'
  prefs: []
  type: TYPE_TB
- en: Arithmetic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`chebadd`](generated/numpy.polynomial.chebyshev.chebadd.html#numpy.polynomial.chebyshev.chebadd
    "numpy.polynomial.chebyshev.chebadd")(c1, c2) | Add one Chebyshev series to another.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebsub`](generated/numpy.polynomial.chebyshev.chebsub.html#numpy.polynomial.chebyshev.chebsub
    "numpy.polynomial.chebyshev.chebsub")(c1, c2) | Subtract one Chebyshev series
    from another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebmulx`](generated/numpy.polynomial.chebyshev.chebmulx.html#numpy.polynomial.chebyshev.chebmulx
    "numpy.polynomial.chebyshev.chebmulx")(c) | Multiply a Chebyshev series by x.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebmul`](generated/numpy.polynomial.chebyshev.chebmul.html#numpy.polynomial.chebyshev.chebmul
    "numpy.polynomial.chebyshev.chebmul")(c1, c2) | Multiply one Chebyshev series
    by another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebdiv`](generated/numpy.polynomial.chebyshev.chebdiv.html#numpy.polynomial.chebyshev.chebdiv
    "numpy.polynomial.chebyshev.chebdiv")(c1, c2) | Divide one Chebyshev series by
    another. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebpow`](generated/numpy.polynomial.chebyshev.chebpow.html#numpy.polynomial.chebyshev.chebpow
    "numpy.polynomial.chebyshev.chebpow")(c, pow[, maxpower]) | Raise a Chebyshev
    series to a power. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebval`](generated/numpy.polynomial.chebyshev.chebval.html#numpy.polynomial.chebyshev.chebval
    "numpy.polynomial.chebyshev.chebval")(x, c[, tensor]) | Evaluate a Chebyshev series
    at points x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebval2d`](generated/numpy.polynomial.chebyshev.chebval2d.html#numpy.polynomial.chebyshev.chebval2d
    "numpy.polynomial.chebyshev.chebval2d")(x, y, c) | Evaluate a 2-D Chebyshev series
    at points (x, y). |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebval3d`](generated/numpy.polynomial.chebyshev.chebval3d.html#numpy.polynomial.chebyshev.chebval3d
    "numpy.polynomial.chebyshev.chebval3d")(x, y, z, c) | Evaluate a 3-D Chebyshev
    series at points (x, y, z). |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebgrid2d`](generated/numpy.polynomial.chebyshev.chebgrid2d.html#numpy.polynomial.chebyshev.chebgrid2d
    "numpy.polynomial.chebyshev.chebgrid2d")(x, y, c) | Evaluate a 2-D Chebyshev series
    on the Cartesian product of x and y. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebgrid3d`](generated/numpy.polynomial.chebyshev.chebgrid3d.html#numpy.polynomial.chebyshev.chebgrid3d
    "numpy.polynomial.chebyshev.chebgrid3d")(x, y, z, c) | Evaluate a 3-D Chebyshev
    series on the Cartesian product of x, y, and z. |'
  prefs: []
  type: TYPE_TB
- en: Calculus
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`chebder`](generated/numpy.polynomial.chebyshev.chebder.html#numpy.polynomial.chebyshev.chebder
    "numpy.polynomial.chebyshev.chebder")(c[, m, scl, axis]) | Differentiate a Chebyshev
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebint`](generated/numpy.polynomial.chebyshev.chebint.html#numpy.polynomial.chebyshev.chebint
    "numpy.polynomial.chebyshev.chebint")(c[, m, k, lbnd, scl, axis]) | Integrate
    a Chebyshev series. |'
  prefs: []
  type: TYPE_TB
- en: Misc Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`chebfromroots`](generated/numpy.polynomial.chebyshev.chebfromroots.html#numpy.polynomial.chebyshev.chebfromroots
    "numpy.polynomial.chebyshev.chebfromroots")(roots) | Generate a Chebyshev series
    with given roots. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebroots`](generated/numpy.polynomial.chebyshev.chebroots.html#numpy.polynomial.chebyshev.chebroots
    "numpy.polynomial.chebyshev.chebroots")(c) | Compute the roots of a Chebyshev
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebvander`](generated/numpy.polynomial.chebyshev.chebvander.html#numpy.polynomial.chebyshev.chebvander
    "numpy.polynomial.chebyshev.chebvander")(x, deg) | Pseudo-Vandermonde matrix of
    given degree. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebvander2d`](generated/numpy.polynomial.chebyshev.chebvander2d.html#numpy.polynomial.chebyshev.chebvander2d
    "numpy.polynomial.chebyshev.chebvander2d")(x, y, deg) | Pseudo-Vandermonde matrix
    of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebvander3d`](generated/numpy.polynomial.chebyshev.chebvander3d.html#numpy.polynomial.chebyshev.chebvander3d
    "numpy.polynomial.chebyshev.chebvander3d")(x, y, z, deg) | Pseudo-Vandermonde
    matrix of given degrees. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebgauss`](generated/numpy.polynomial.chebyshev.chebgauss.html#numpy.polynomial.chebyshev.chebgauss
    "numpy.polynomial.chebyshev.chebgauss")(deg) | Gauss-Chebyshev quadrature. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebweight`](generated/numpy.polynomial.chebyshev.chebweight.html#numpy.polynomial.chebyshev.chebweight
    "numpy.polynomial.chebyshev.chebweight")(x) | The weight function of the Chebyshev
    polynomials. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebcompanion`](generated/numpy.polynomial.chebyshev.chebcompanion.html#numpy.polynomial.chebyshev.chebcompanion
    "numpy.polynomial.chebyshev.chebcompanion")(c) | Return the scaled companion matrix
    of c. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebfit`](generated/numpy.polynomial.chebyshev.chebfit.html#numpy.polynomial.chebyshev.chebfit
    "numpy.polynomial.chebyshev.chebfit")(x, y, deg[, rcond, full, w]) | Least squares
    fit of Chebyshev series to data. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebpts1`](generated/numpy.polynomial.chebyshev.chebpts1.html#numpy.polynomial.chebyshev.chebpts1
    "numpy.polynomial.chebyshev.chebpts1")(npts) | Chebyshev points of the first kind.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebpts2`](generated/numpy.polynomial.chebyshev.chebpts2.html#numpy.polynomial.chebyshev.chebpts2
    "numpy.polynomial.chebyshev.chebpts2")(npts) | Chebyshev points of the second
    kind. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebtrim`](generated/numpy.polynomial.chebyshev.chebtrim.html#numpy.polynomial.chebyshev.chebtrim
    "numpy.polynomial.chebyshev.chebtrim")(c[, tol]) | Remove "small" "trailing" coefficients
    from a polynomial. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebline`](generated/numpy.polynomial.chebyshev.chebline.html#numpy.polynomial.chebyshev.chebline
    "numpy.polynomial.chebyshev.chebline")(off, scl) | Chebyshev series whose graph
    is a straight line. |'
  prefs: []
  type: TYPE_TB
- en: '| [`cheb2poly`](generated/numpy.polynomial.chebyshev.cheb2poly.html#numpy.polynomial.chebyshev.cheb2poly
    "numpy.polynomial.chebyshev.cheb2poly")(c) | Convert a Chebyshev series to a polynomial.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`poly2cheb`](generated/numpy.polynomial.chebyshev.poly2cheb.html#numpy.polynomial.chebyshev.poly2cheb
    "numpy.polynomial.chebyshev.poly2cheb")(pol) | Convert a polynomial to a Chebyshev
    series. |'
  prefs: []
  type: TYPE_TB
- en: '| [`chebinterpolate`](generated/numpy.polynomial.chebyshev.chebinterpolate.html#numpy.polynomial.chebyshev.chebinterpolate
    "numpy.polynomial.chebyshev.chebinterpolate")(func, deg[, args]) | Interpolate
    a function at the Chebyshev points of the first kind. |'
  prefs: []
  type: TYPE_TB
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[`numpy.polynomial`](routines.polynomials.package.html#module-numpy.polynomial
    "numpy.polynomial")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The implementations of multiplication, division, integration, and differentiation
    use the algebraic identities [[1]](#r3f3efff98d00-1):'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}T_n(x) = \frac{z^n + z^{-n}}{2} \\ z\frac{dx}{dz} = \frac{z -
    z^{-1}}{2}.\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: where
  prefs: []
  type: TYPE_NORMAL
- en: \[x = \frac{z + z^{-1}}{2}.\]
  prefs: []
  type: TYPE_NORMAL
- en: These identities allow a Chebyshev series to be expressed as a finite, symmetric
    Laurent series. In this module, this sort of Laurent series is referred to as
    a “z-series.”
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: A. T. Benjamin, et al., “Combinatorial Trigonometry with Chebyshev Polynomials,”
    *Journal of Statistical Planning and Inference 14*, 2008 ([https://web.archive.org/web/20080221202153/https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf](https://web.archive.org/web/20080221202153/https://www.math.hmc.edu/~benjamin/papers/CombTrig.pdf),
    pg. 4)
  prefs: []
  type: TYPE_NORMAL
