["```py\nscipy.signal.hilbert(x, N=None, axis=-1)\n```", "```py\n>>> import numpy as np\n>>> import matplotlib.pyplot as plt\n>>> from scipy.signal import hilbert, chirp \n```", "```py\n>>> duration = 1.0\n>>> fs = 400.0\n>>> samples = int(fs*duration)\n>>> t = np.arange(samples) / fs \n```", "```py\n>>> signal = chirp(t, 20.0, t[-1], 100.0)\n>>> signal *= (1.0 + 0.5 * np.sin(2.0*np.pi*3.0*t) ) \n```", "```py\n>>> analytic_signal = hilbert(signal)\n>>> amplitude_envelope = np.abs(analytic_signal)\n>>> instantaneous_phase = np.unwrap(np.angle(analytic_signal))\n>>> instantaneous_frequency = (np.diff(instantaneous_phase) /\n...                            (2.0*np.pi) * fs) \n```", "```py\n>>> fig, (ax0, ax1) = plt.subplots(nrows=2)\n>>> ax0.plot(t, signal, label='signal')\n>>> ax0.plot(t, amplitude_envelope, label='envelope')\n>>> ax0.set_xlabel(\"time in seconds\")\n>>> ax0.legend()\n>>> ax1.plot(t[1:], instantaneous_frequency)\n>>> ax1.set_xlabel(\"time in seconds\")\n>>> ax1.set_ylim(0.0, 120.0)\n>>> fig.tight_layout() \n```"]