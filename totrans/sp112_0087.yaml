- en: Legacy discrete Fourier transforms (scipy.fftpack)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/fftpack.html](https://docs.scipy.org/doc/scipy-1.12.0/reference/fftpack.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Legacy
  prefs: []
  type: TYPE_NORMAL
- en: This submodule is considered legacy and will no longer receive updates. This
    could also mean it will be removed in future SciPy versions. New code should use
    [`scipy.fft`](fft.html#module-scipy.fft "scipy.fft").
  prefs: []
  type: TYPE_NORMAL
- en: Fast Fourier Transforms (FFTs)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`fft`](generated/scipy.fftpack.fft.html#scipy.fftpack.fft "scipy.fftpack.fft")(x[, n, axis, overwrite_x])
    | Return discrete Fourier transform of real or complex sequence. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ifft`](generated/scipy.fftpack.ifft.html#scipy.fftpack.ifft "scipy.fftpack.ifft")(x[, n, axis, overwrite_x])
    | Return discrete inverse Fourier transform of real or complex sequence. |'
  prefs: []
  type: TYPE_TB
- en: '| [`fft2`](generated/scipy.fftpack.fft2.html#scipy.fftpack.fft2 "scipy.fftpack.fft2")(x[, shape, axes, overwrite_x])
    | 2-D discrete Fourier transform. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ifft2`](generated/scipy.fftpack.ifft2.html#scipy.fftpack.ifft2 "scipy.fftpack.ifft2")(x[, shape, axes, overwrite_x])
    | 2-D discrete inverse Fourier transform of real or complex sequence. |'
  prefs: []
  type: TYPE_TB
- en: '| [`fftn`](generated/scipy.fftpack.fftn.html#scipy.fftpack.fftn "scipy.fftpack.fftn")(x[, shape, axes, overwrite_x])
    | Return multidimensional discrete Fourier transform. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ifftn`](generated/scipy.fftpack.ifftn.html#scipy.fftpack.ifftn "scipy.fftpack.ifftn")(x[, shape, axes, overwrite_x])
    | Return inverse multidimensional discrete Fourier transform. |'
  prefs: []
  type: TYPE_TB
- en: '| [`rfft`](generated/scipy.fftpack.rfft.html#scipy.fftpack.rfft "scipy.fftpack.rfft")(x[, n, axis, overwrite_x])
    | Discrete Fourier transform of a real sequence. |'
  prefs: []
  type: TYPE_TB
- en: '| [`irfft`](generated/scipy.fftpack.irfft.html#scipy.fftpack.irfft "scipy.fftpack.irfft")(x[, n, axis, overwrite_x])
    | Return inverse discrete Fourier transform of real sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`dct`](generated/scipy.fftpack.dct.html#scipy.fftpack.dct "scipy.fftpack.dct")(x[, type, n, axis, norm, overwrite_x])
    | Return the Discrete Cosine Transform of arbitrary type sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`idct`](generated/scipy.fftpack.idct.html#scipy.fftpack.idct "scipy.fftpack.idct")(x[, type, n, axis, norm, overwrite_x])
    | Return the Inverse Discrete Cosine Transform of an arbitrary type sequence.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`dctn`](generated/scipy.fftpack.dctn.html#scipy.fftpack.dctn "scipy.fftpack.dctn")(x[, type, shape, axes, norm, overwrite_x])
    | Return multidimensional Discrete Cosine Transform along the specified axes.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`idctn`](generated/scipy.fftpack.idctn.html#scipy.fftpack.idctn "scipy.fftpack.idctn")(x[, type, shape, axes, norm, overwrite_x])
    | Return multidimensional Discrete Cosine Transform along the specified axes.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`dst`](generated/scipy.fftpack.dst.html#scipy.fftpack.dst "scipy.fftpack.dst")(x[, type, n, axis, norm, overwrite_x])
    | Return the Discrete Sine Transform of arbitrary type sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`idst`](generated/scipy.fftpack.idst.html#scipy.fftpack.idst "scipy.fftpack.idst")(x[, type, n, axis, norm, overwrite_x])
    | Return the Inverse Discrete Sine Transform of an arbitrary type sequence. |'
  prefs: []
  type: TYPE_TB
- en: '| [`dstn`](generated/scipy.fftpack.dstn.html#scipy.fftpack.dstn "scipy.fftpack.dstn")(x[, type, shape, axes, norm, overwrite_x])
    | Return multidimensional Discrete Sine Transform along the specified axes. |'
  prefs: []
  type: TYPE_TB
- en: '| [`idstn`](generated/scipy.fftpack.idstn.html#scipy.fftpack.idstn "scipy.fftpack.idstn")(x[, type, shape, axes, norm, overwrite_x])
    | Return multidimensional Discrete Sine Transform along the specified axes. |'
  prefs: []
  type: TYPE_TB
- en: Differential and pseudo-differential operators
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`diff`](generated/scipy.fftpack.diff.html#scipy.fftpack.diff "scipy.fftpack.diff")(x[, order, period, _cache])
    | Return kth derivative (or integral) of a periodic sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tilbert`](generated/scipy.fftpack.tilbert.html#scipy.fftpack.tilbert "scipy.fftpack.tilbert")(x, h[, period, _cache])
    | Return h-Tilbert transform of a periodic sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`itilbert`](generated/scipy.fftpack.itilbert.html#scipy.fftpack.itilbert
    "scipy.fftpack.itilbert")(x, h[, period, _cache]) | Return inverse h-Tilbert transform
    of a periodic sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`hilbert`](generated/scipy.fftpack.hilbert.html#scipy.fftpack.hilbert "scipy.fftpack.hilbert")(x[, _cache])
    | Return Hilbert transform of a periodic sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ihilbert`](generated/scipy.fftpack.ihilbert.html#scipy.fftpack.ihilbert
    "scipy.fftpack.ihilbert")(x) | Return inverse Hilbert transform of a periodic
    sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`cs_diff`](generated/scipy.fftpack.cs_diff.html#scipy.fftpack.cs_diff "scipy.fftpack.cs_diff")(x, a, b[, period, _cache])
    | Return (a,b)-cosh/sinh pseudo-derivative of a periodic sequence. |'
  prefs: []
  type: TYPE_TB
- en: '| [`sc_diff`](generated/scipy.fftpack.sc_diff.html#scipy.fftpack.sc_diff "scipy.fftpack.sc_diff")(x, a, b[, period, _cache])
    | Return (a,b)-sinh/cosh pseudo-derivative of a periodic sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ss_diff`](generated/scipy.fftpack.ss_diff.html#scipy.fftpack.ss_diff "scipy.fftpack.ss_diff")(x, a, b[, period, _cache])
    | Return (a,b)-sinh/sinh pseudo-derivative of a periodic sequence x. |'
  prefs: []
  type: TYPE_TB
- en: '| [`cc_diff`](generated/scipy.fftpack.cc_diff.html#scipy.fftpack.cc_diff "scipy.fftpack.cc_diff")(x, a, b[, period, _cache])
    | Return (a,b)-cosh/cosh pseudo-derivative of a periodic sequence. |'
  prefs: []
  type: TYPE_TB
- en: '| [`shift`](generated/scipy.fftpack.shift.html#scipy.fftpack.shift "scipy.fftpack.shift")(x, a[, period, _cache])
    | Shift periodic sequence x by a: y(u) = x(u+a). |'
  prefs: []
  type: TYPE_TB
- en: Helper functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| [`fftshift`](generated/scipy.fftpack.fftshift.html#scipy.fftpack.fftshift
    "scipy.fftpack.fftshift")(x[, axes]) | Shift the zero-frequency component to the
    center of the spectrum. |'
  prefs: []
  type: TYPE_TB
- en: '| [`ifftshift`](generated/scipy.fftpack.ifftshift.html#scipy.fftpack.ifftshift
    "scipy.fftpack.ifftshift")(x[, axes]) | The inverse of [`fftshift`](generated/scipy.fftpack.fftshift.html#scipy.fftpack.fftshift
    "scipy.fftpack.fftshift"). |'
  prefs: []
  type: TYPE_TB
- en: '| [`fftfreq`](generated/scipy.fftpack.fftfreq.html#scipy.fftpack.fftfreq "scipy.fftpack.fftfreq")(n[, d])
    | Return the Discrete Fourier Transform sample frequencies. |'
  prefs: []
  type: TYPE_TB
- en: '| [`rfftfreq`](generated/scipy.fftpack.rfftfreq.html#scipy.fftpack.rfftfreq
    "scipy.fftpack.rfftfreq")(n[, d]) | DFT sample frequencies (for usage with rfft,
    irfft). |'
  prefs: []
  type: TYPE_TB
- en: '| [`next_fast_len`](generated/scipy.fftpack.next_fast_len.html#scipy.fftpack.next_fast_len
    "scipy.fftpack.next_fast_len")(target) | Find the next fast size of input data
    to [`fft`](generated/scipy.fftpack.fft.html#scipy.fftpack.fft "scipy.fftpack.fft"),
    for zero-padding, etc. |'
  prefs: []
  type: TYPE_TB
- en: Note that `fftshift`, `ifftshift` and `fftfreq` are numpy functions exposed
    by `fftpack`; importing them from `numpy` should be preferred.
  prefs: []
  type: TYPE_NORMAL
- en: '## Convolutions ([`scipy.fftpack.convolve`](#module-scipy.fftpack.convolve
    "scipy.fftpack.convolve"))'
  prefs: []
  type: TYPE_NORMAL
- en: '| [`convolve`](generated/scipy.fftpack.convolve.convolve.html#scipy.fftpack.convolve.convolve
    "scipy.fftpack.convolve.convolve")(x,omega,[swap_real_imag,overwrite_x]) | Wrapper
    for `convolve`. |'
  prefs: []
  type: TYPE_TB
- en: '| [`convolve_z`](generated/scipy.fftpack.convolve.convolve_z.html#scipy.fftpack.convolve.convolve_z
    "scipy.fftpack.convolve.convolve_z")(x,omega_real,omega_imag,[overwrite_x]) |
    Wrapper for `convolve_z`. |'
  prefs: []
  type: TYPE_TB
- en: '| [`init_convolution_kernel`](generated/scipy.fftpack.convolve.init_convolution_kernel.html#scipy.fftpack.convolve.init_convolution_kernel
    "scipy.fftpack.convolve.init_convolution_kernel")(...) | Wrapper for `init_convolution_kernel`.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`destroy_convolve_cache`](generated/scipy.fftpack.convolve.destroy_convolve_cache.html#scipy.fftpack.convolve.destroy_convolve_cache
    "scipy.fftpack.convolve.destroy_convolve_cache")() |  |'
  prefs: []
  type: TYPE_TB
