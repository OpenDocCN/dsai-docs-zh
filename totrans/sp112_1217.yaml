- en: scipy.stats.matrix_normal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.matrix_normal.html#scipy.stats.matrix_normal](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.matrix_normal.html#scipy.stats.matrix_normal)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A matrix normal random variable.
  prefs: []
  type: TYPE_NORMAL
- en: The *mean* keyword specifies the mean. The *rowcov* keyword specifies the among-row
    covariance matrix. The ‘colcov’ keyword specifies the among-column covariance
    matrix.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**mean**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mean of the distribution (default: *None*)'
  prefs: []
  type: TYPE_NORMAL
- en: '**rowcov**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Among-row covariance matrix of the distribution (default: *1*)'
  prefs: []
  type: TYPE_NORMAL
- en: '**colcov**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Among-column covariance matrix of the distribution (default: *1*)'
  prefs: []
  type: TYPE_NORMAL
- en: '**seed**{None, int, np.random.RandomState, np.random.Generator}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used for drawing random variates. If *seed* is *None*, the *RandomState* singleton
    is used. If *seed* is an int, a new `RandomState` instance is used, seeded with
    seed. If *seed* is already a `RandomState` or `Generator` instance, then that
    object is used. Default is *None*.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: If *mean* is set to *None* then a matrix of zeros is used for the mean. The
    dimensions of this matrix are inferred from the shape of *rowcov* and *colcov*,
    if these are provided, or set to *1* if ambiguous.
  prefs: []
  type: TYPE_NORMAL
- en: '*rowcov* and *colcov* can be two-dimensional array_likes specifying the covariance
    matrices directly. Alternatively, a one-dimensional array will be be interpreted
    as the entries of a diagonal matrix, and a scalar or zero-dimensional array will
    be interpreted as this value times the identity matrix.'
  prefs: []
  type: TYPE_NORMAL
- en: The covariance matrices specified by *rowcov* and *colcov* must be (symmetric)
    positive definite. If the samples in *X* are \(m \times n\), then *rowcov* must
    be \(m \times m\) and *colcov* must be \(n \times n\). *mean* must be the same
    shape as *X*.
  prefs: []
  type: TYPE_NORMAL
- en: The probability density function for [`matrix_normal`](#scipy.stats.matrix_normal
    "scipy.stats.matrix_normal") is
  prefs: []
  type: TYPE_NORMAL
- en: \[f(X) = (2 \pi)^{-\frac{mn}{2}}|U|^{-\frac{n}{2}} |V|^{-\frac{m}{2}} \exp\left(
    -\frac{1}{2} \mathrm{Tr}\left[ U^{-1} (X-M) V^{-1} (X-M)^T \right] \right),\]
  prefs: []
  type: TYPE_NORMAL
- en: where \(M\) is the mean, \(U\) the among-row covariance matrix, \(V\) the among-column
    covariance matrix.
  prefs: []
  type: TYPE_NORMAL
- en: The *allow_singular* behaviour of the [`multivariate_normal`](scipy.stats.multivariate_normal.html#scipy.stats.multivariate_normal
    "scipy.stats.multivariate_normal") distribution is not currently supported. Covariance
    matrices must be full rank.
  prefs: []
  type: TYPE_NORMAL
- en: The [`matrix_normal`](#scipy.stats.matrix_normal "scipy.stats.matrix_normal")
    distribution is closely related to the [`multivariate_normal`](scipy.stats.multivariate_normal.html#scipy.stats.multivariate_normal
    "scipy.stats.multivariate_normal") distribution. Specifically, \(\mathrm{Vec}(X)\)
    (the vector formed by concatenating the columns of \(X\)) has a multivariate normal
    distribution with mean \(\mathrm{Vec}(M)\) and covariance \(V \otimes U\) (where
    \(\otimes\) is the Kronecker product). Sampling and pdf evaluation are \(\mathcal{O}(m^3
    + n^3 + m^2 n + m n^2)\) for the matrix normal, but \(\mathcal{O}(m^3 n^3)\) for
    the equivalent multivariate normal, making this equivalent form algorithmically
    inefficient.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 0.17.0.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, the object may be called (as a function) to fix the mean and
    covariance parameters, returning a “frozen” matrix normal random variable:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| **pdf(X, mean=None, rowcov=1, colcov=1)** | Probability density function.
    |'
  prefs: []
  type: TYPE_TB
- en: '| **logpdf(X, mean=None, rowcov=1, colcov=1)** | Log of the probability density
    function. |'
  prefs: []
  type: TYPE_TB
- en: '| **rvs(mean=None, rowcov=1, colcov=1, size=1, random_state=None)** | Draw
    random samples. |'
  prefs: []
  type: TYPE_TB
- en: '| **entropy(rowcol=1, colcov=1)** | Differential entropy. |'
  prefs: []
  type: TYPE_TB
