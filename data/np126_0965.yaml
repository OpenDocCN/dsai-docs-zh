- en: C API for random
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 随机数的 C API
- en: 原文：[https://numpy.org/doc/1.26/reference/random/c-api.html](https://numpy.org/doc/1.26/reference/random/c-api.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/random/c-api.html](https://numpy.org/doc/1.26/reference/random/c-api.html)
- en: New in version 1.19.0.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在版本 1.19.0 中新增。
- en: Access to various distributions below is available via Cython or C-wrapper libraries
    like CFFI. All the functions accept a [`bitgen_t`](#c.bitgen_t "bitgen_t") as
    their first argument. To access these from Cython or C, you must link with the
    `npyrandom` static library which is part of the NumPy distribution, located in
    `numpy/random/lib`. Note that you must *also* link with `npymath`, see [Linking
    against the core math library in an extension](../c-api/coremath.html#linking-npymath).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Cython 或 C 封装库（如 CFFI）可以访问下面的各种分布。所有函数接受一个 [`bitgen_t`](#c.bitgen_t "bitgen_t")
    作为其第一个参数。要从 Cython 或 C 访问这些函数，必须链接 `npyrandom` 静态库，这是 NumPy 发行版的一部分，位于 `numpy/random/lib`
    中。请注意，您还必须链接 `npymath`，请参见 [在扩展中链接核心数学库](../c-api/coremath.html#linking-npymath)。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The [`bitgen_t`](#c.bitgen_t "bitgen_t") holds the current state of the BitGenerator
    and pointers to functions that return standard C types while advancing the state.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bitgen_t`](#c.bitgen_t "bitgen_t") 包含 BitGenerator 的当前状态和返回标准 C 类型的函数指针，同时推进状态。'
- en: '[PRE1]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: See [Extending](extending.html) for examples of using these functions.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见 [扩展](extending.html) 以了解如何使用这些函数的示例。
- en: 'The functions are named with the following conventions:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 函数命名遵循以下约定：
- en: “standard” refers to the reference values for any parameters. For instance “standard_uniform”
    means a uniform distribution on the interval `0.0` to `1.0`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “standard” 是指任何参数的参考值。例如，“standard_uniform” 表示区间 `0.0` 到 `1.0` 上的均匀分布。
- en: “fill” functions will fill the provided `out` with `cnt` values.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “fill” 函数将用 `cnt` 个值填充提供的 `out`。
- en: The functions without “standard” in their name require additional parameters
    to describe the distributions.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有在名称中带有“standard”的函数需要附加参数来描述分布。
- en: Functions with `inv` in their name are based on the slower inverse method instead
    of a ziggurat lookup algorithm, which is significantly faster. The non-ziggurat
    variants are used in corner cases and for legacy compatibility.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称中带有 `inv` 的函数基于较慢的反转方法，而不是 ziggurat 查找算法，后者速度明显更快。非 ziggurat 变体用于边缘情况和向后兼容性。
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Generate a single integer
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 生成单个整数
- en: '[PRE56]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Generate random uint64 numbers in closed interval [off, off + rng].
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在闭区间 [off, off + rng] 生成随机的 uint64 数字。
- en: '[PRE60]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
