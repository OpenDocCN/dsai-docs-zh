- en: numpy.pad
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.pad.html](https://numpy.org/doc/1.26/reference/generated/numpy.pad.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Pad an array.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**array**array_like of rank N'
  prefs: []
  type: TYPE_NORMAL
- en: The array to pad.
  prefs: []
  type: TYPE_NORMAL
- en: '**pad_width**{sequence, array_like, int}'
  prefs: []
  type: TYPE_NORMAL
- en: Number of values padded to the edges of each axis. `((before_1, after_1), ...
    (before_N, after_N))` unique pad widths for each axis. `(before, after)` or `((before,
    after),)` yields same before and after pad for each axis. `(pad,)` or `int` is
    a shortcut for before = after = pad width for all axes.
  prefs: []
  type: TYPE_NORMAL
- en: '**mode**str or function, optional'
  prefs: []
  type: TYPE_NORMAL
- en: One of the following string values or a user supplied function.
  prefs: []
  type: TYPE_NORMAL
- en: ‘constant’ (default)
  prefs: []
  type: TYPE_NORMAL
- en: Pads with a constant value.
  prefs: []
  type: TYPE_NORMAL
- en: ‘edge’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the edge values of array.
  prefs: []
  type: TYPE_NORMAL
- en: ‘linear_ramp’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the linear ramp between end_value and the array edge value.
  prefs: []
  type: TYPE_NORMAL
- en: ‘maximum’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the maximum value of all or part of the vector along each axis.
  prefs: []
  type: TYPE_NORMAL
- en: ‘mean’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the mean value of all or part of the vector along each axis.
  prefs: []
  type: TYPE_NORMAL
- en: ‘median’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the median value of all or part of the vector along each axis.
  prefs: []
  type: TYPE_NORMAL
- en: ‘minimum’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the minimum value of all or part of the vector along each axis.
  prefs: []
  type: TYPE_NORMAL
- en: ‘reflect’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the reflection of the vector mirrored on the first and last values
    of the vector along each axis.
  prefs: []
  type: TYPE_NORMAL
- en: ‘symmetric’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the reflection of the vector mirrored along the edge of the array.
  prefs: []
  type: TYPE_NORMAL
- en: ‘wrap’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with the wrap of the vector along the axis. The first values are used to
    pad the end and the end values are used to pad the beginning.
  prefs: []
  type: TYPE_NORMAL
- en: ‘empty’
  prefs: []
  type: TYPE_NORMAL
- en: Pads with undefined values.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.17.
  prefs: []
  type: TYPE_NORMAL
- en: <function>
  prefs: []
  type: TYPE_NORMAL
- en: Padding function, see Notes.
  prefs: []
  type: TYPE_NORMAL
- en: '**stat_length**sequence or int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used in ‘maximum’, ‘mean’, ‘median’, and ‘minimum’. Number of values at edge
    of each axis used to calculate the statistic value.
  prefs: []
  type: TYPE_NORMAL
- en: '`((before_1, after_1), ... (before_N, after_N))` unique statistic lengths for
    each axis.'
  prefs: []
  type: TYPE_NORMAL
- en: '`(before, after)` or `((before, after),)` yields same before and after statistic
    lengths for each axis.'
  prefs: []
  type: TYPE_NORMAL
- en: '`(stat_length,)` or `int` is a shortcut for `before = after = statistic` length
    for all axes.'
  prefs: []
  type: TYPE_NORMAL
- en: Default is `None`, to use the entire axis.
  prefs: []
  type: TYPE_NORMAL
- en: '**constant_values**sequence or scalar, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used in ‘constant’. The values to set the padded values for each axis.
  prefs: []
  type: TYPE_NORMAL
- en: '`((before_1, after_1), ... (before_N, after_N))` unique pad constants for each
    axis.'
  prefs: []
  type: TYPE_NORMAL
- en: '`(before, after)` or `((before, after),)` yields same before and after constants
    for each axis.'
  prefs: []
  type: TYPE_NORMAL
- en: '`(constant,)` or `constant` is a shortcut for `before = after = constant` for
    all axes.'
  prefs: []
  type: TYPE_NORMAL
- en: Default is 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**end_values**sequence or scalar, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used in ‘linear_ramp’. The values used for the ending value of the linear_ramp
    and that will form the edge of the padded array.
  prefs: []
  type: TYPE_NORMAL
- en: '`((before_1, after_1), ... (before_N, after_N))` unique end values for each
    axis.'
  prefs: []
  type: TYPE_NORMAL
- en: '`(before, after)` or `((before, after),)` yields same before and after end
    values for each axis.'
  prefs: []
  type: TYPE_NORMAL
- en: '`(constant,)` or `constant` is a shortcut for `before = after = constant` for
    all axes.'
  prefs: []
  type: TYPE_NORMAL
- en: Default is 0.
  prefs: []
  type: TYPE_NORMAL
- en: '**reflect_type**{‘even’, ‘odd’}, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Used in ‘reflect’, and ‘symmetric’. The ‘even’ style is the default with an
    unaltered reflection around the edge value. For the ‘odd’ style, the extended
    part of the array is created by subtracting the reflected values from two times
    the edge value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**pad**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: Padded array of rank equal to [`array`](numpy.array.html#numpy.array "numpy.array")
    with shape increased according to *pad_width*.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.7.0.
  prefs: []
  type: TYPE_NORMAL
- en: For an array with rank greater than 1, some of the padding of later axes is
    calculated from padding of previous axes. This is easiest to think about with
    a rank 2 array where the corners of the padded array are calculated by using padded
    values from the first axis.
  prefs: []
  type: TYPE_NORMAL
- en: 'The padding function, if used, should modify a rank 1 array in-place. It has
    the following signature:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: where
  prefs: []
  type: TYPE_NORMAL
- en: vectorndarray
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A rank 1 array already padded with zeros. Padded values are vector[:iaxis_pad_width[0]]
    and vector[-iaxis_pad_width[1]:].
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: iaxis_pad_widthtuple
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A 2-tuple of ints, iaxis_pad_width[0] represents the number of values padded
    at the beginning of vector where iaxis_pad_width[1] represents the number of values
    padded at the end of vector.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: iaxisint
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The axis currently being calculated.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: kwargsdict
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Any keyword arguments the function requires.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
