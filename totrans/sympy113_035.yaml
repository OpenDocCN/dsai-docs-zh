- en: Solve a Diophantine Equation Algebraically
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代数解二次不定方程
- en: Original text：[https://docs.sympy.org/latest/guides/solving/solve-diophantine-equation.html](https://docs.sympy.org/latest/guides/solving/solve-diophantine-equation.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sympy.org/latest/guides/solving/solve-diophantine-equation.html](https://docs.sympy.org/latest/guides/solving/solve-diophantine-equation.html)
- en: Use SymPy to solve a [Diophantine equation](https://en.wikipedia.org/wiki/Diophantine_equation)
    (find integer solutions to a polynomial equation) algebraically, returning a parameterized
    general solution if possible. For example, solving the [Pythagorean equation](https://en.wikipedia.org/wiki/Pythagorean_theorem)
    \(a^2 + b^2 = c^2\) yields \((a=2pq, b=p^2-q^2, c=p^2+q^2)\). Here, \(p\) and
    \(q\) are new parameters introduced in the solution. \(p\) and \(q\) can take
    on any integer value to parameterize the full set of solutions. More formally,
    \(p,q \in \mathbb{Z}\) parameterize the infinite set of [Pythagorean triples](https://en.wikipedia.org/wiki/Pythagorean_triple).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SymPy来代数地解[不定方程](https://en.wikipedia.org/wiki/Diophantine_equation)（找到多项式方程的整数解），如果可能，返回一个参数化的一般解。例如，解[毕达哥拉斯定理](https://en.wikipedia.org/wiki/Pythagorean_theorem)
    \(a^2 + b^2 = c^2\) 得到 \((a=2pq, b=p^2-q^2, c=p^2+q^2)\)。这里，\(p\) 和 \(q\) 是解中引入的新参数。\(p\)
    和 \(q\) 可以取任意整数值来参数化完整的解集。更正式地说，\(p,q \in \mathbb{Z}\) 参数化了无限集合的[毕达哥拉斯三元组](https://en.wikipedia.org/wiki/Pythagorean_triple)。
- en: Alternatives to Consider
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 考虑的替代方案
- en: There are few alternatives for finding a parameterized general solution a Diophantine
    equation.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种寻找不定方程参数化一般解的替代方案。
- en: 'Numerical alternatives:'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '数值替代方案:'
- en: '[Sage’s EllipticCurve command](https://doc.sagemath.org/html/en/constructions/elliptic_curves.html)
    may be able to find a set of relative numerical values for each variable'
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Sage的椭圆曲线命令](https://doc.sagemath.org/html/en/constructions/elliptic_curves.html)可能能够找到每个变量的一组相对数值解'
- en: You can test explicit integer values, for example using a nested for loop of
    ranges of values. This is inefficient, but fine if you are only interested in
    solutions that are relatively small.
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以测试显式整数值，例如使用值范围的嵌套for循环。这种方法效率低下，但如果您只对相对较小的解感兴趣，那么这是可以接受的。
- en: '[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") treats the variables as real or complex numbers,
    and simply solves for one variable in terms of the others, which produces a different
    type of solution. For example, attempting to solve \(a^2 + b^2 = c^2\) for \(a\),
    \(b\), and \(c\) can only reveal that \(a = \pm \sqrt{c^2-b^2}\).'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`solve()`](../../modules/solvers/solvers.html#sympy.solvers.solvers.solve
    "sympy.solvers.solvers.solve") 将变量视为实数或复数，并仅解出一个变量的解，这会产生不同类型的解。例如，试图解\(a^2 +
    b^2 = c^2\) 对\(a\), \(b\), 和\(c\) 只能揭示\(a = \pm \sqrt{c^2-b^2}\)。'
- en: Example of Solving a Diophantine Equation
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解二次不定方程的示例
- en: 'Here is an example of solving a Diophantine equation, specifically \(a^2 +
    b^2 = c^2\), using [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine"):'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个解不定方程的示例，特别是 \(a^2 + b^2 = c^2\)，使用[`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine")：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Refer to the [Diophantine API reference](../../modules/solvers/diophantine.html)
    for more examples of solving various types of Diophantine equations.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[不定方程API参考](../../modules/solvers/diophantine.html)，了解更多解各种类型不定方程的示例。
- en: Guidance
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指导
- en: Diophantine Equation Can be Expressed as Expression That Equals Zero
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不定方程可以被表达为等于零的表达式
- en: 'If you already have an expression that equals zero, you can solve that expression.
    For example, expressing the Pythagorean equation as \(a^2 + b^2 - c^2\) is also
    valid:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经有一个等于零的表达式，您可以解决这个表达式。例如，将毕达哥拉斯方程表达为 \(a^2 + b^2 - c^2\) 也是有效的：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Specify the Order of Symbols in the Result
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 指定结果中符号的顺序
- en: We recommend you specify the order of symbols in the result to avoid confusion.
    Use the `syms` parameter and pass it a tuple or list of symbols to ensure the
    result will be in that order, for example `syms=my_syms`, as in the examples on
    this page.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您指定结果中符号的顺序，以避免混淆。使用`syms`参数，并将其传递给一个元组或符号列表，以确保结果按照该顺序排列，例如`syms=my_syms`，如本页面上的示例所示。
- en: Limitations
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 限制条件
- en: Currently, following five types of Diophantine equations can be solved using
    [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") and other helper functions
    of the Diophantine module.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，可以使用 [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") 和 Diophantine 模块的其他辅助函数解决五种类型的丢番图方程。
- en: 'Linear Diophantine equations: \(a_1x_1 + a_2x_2 + \ldots + a_nx_n = b\)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性丢番图方程：\(a_1x_1 + a_2x_2 + \ldots + a_nx_n = b\)
- en: 'General binary quadratic equation: \(ax^2 + bxy + cy^2 + dx + ey + f = 0\)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般二元二次方程：\(ax^2 + bxy + cy^2 + dx + ey + f = 0\)
- en: 'Homogeneous ternary quadratic equation: \(ax^2 + by^2 + cz^2 + dxy + eyz +
    fzx = 0\)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 齐次三元二次方程：\(ax^2 + by^2 + cz^2 + dxy + eyz + fzx = 0\)
- en: 'Extended Pythagorean equation: \(a_{1}x_{1}^2 + a_{2}x_{2}^2 + \ldots + a_{n}x_{n}^2
    = a_{n+1}x_{n+1}^2\)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展勾股定理方程：\(a_{1}x_{1}^2 + a_{2}x_{2}^2 + \ldots + a_{n}x_{n}^2 = a_{n+1}x_{n+1}^2\)
- en: 'General sum of squares: \(x_{1}^2 + x_{2}^2 + \ldots + x_{n}^2 = k\)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般平方和：\(x_{1}^2 + x_{2}^2 + \ldots + x_{n}^2 = k\)
- en: Use the Solution Result
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用解决方案结果
- en: Extract Expressions From the Result
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从结果中提取表达式
- en: '[`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") returns results as a set
    of tuples, where each element in a tuple is an expression for a variable in your
    equation. For example, for the Pythogorean equation, the result is a set containing
    one tuple where the expressions correspond to (a, b, c). That is, the tuple represents
    `a = 2*p*q, b = p**2 - q**2, c = p**2-q**2`. Because you cannot extract an element
    (here, a tuple) from a set by subscripting the set, you can create a dictionary
    of symbol-expression pairs to extract an expression by its symbol:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") 返回结果作为一组元组，元组中的每个元素都是方程中变量的表达式。例如，对于勾股定理方程，结果是一个包含一个元组的集合，其中表达式对应于
    (a, b, c)。也就是说，元组表示 `a = 2*p*q, b = p**2 - q**2, c = p**2-q**2`。因为不能通过下标从集合中提取元素（这里是一个元组），所以可以创建一个符号-表达式对的字典，通过其符号提取表达式：'
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Less elegantly, you can convert the set to a list, and then subscript the list.
    It is a common mistake to forget the order of parameters, so this method is more
    prone to errors:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 不够优雅的方法是将集合转换为列表，然后对列表进行下标操作。忘记参数顺序是常见错误，因此此方法更容易出错：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Work With Parameters
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理参数
- en: You can manipulate parameters such as `p` and `q`, which are generated automatically
    by [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine"), by creating them as symbols.
    For example, to find a particular set of values that satisfies the Diophantine
    equation, you can substitute in values for the parameters by
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以操作像 `p` 和 `q` 这样由 [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") 自动生成的参数，将它们创建为符号。例如，要找到满足丢番图方程的特定值集合，可以通过以下方式替换参数的值
- en: creating the parameters as symbols
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建参数作为符号
- en: substituting in their values using [`subs()`](../../modules/core.html#sympy.core.basic.Basic.subs
    "sympy.core.basic.Basic.subs").
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 [`subs()`](../../modules/core.html#sympy.core.basic.Basic.subs "sympy.core.basic.Basic.subs")
    替换它们的值。
- en: 'Here, we express the set of values as a dictionary to associate each variable
    (\(a, b, c\)) with its example value:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将值集合表示为一个字典，将每个变量（\(a, b, c\)）与其示例值关联起来：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note that you need to include the `integer=True` assumption for the generated
    parameters (`p` and `q`) to substitute numerical values for them. Conversely,
    you do not need to include the `integer=True` assumption for the symbols in the
    original equation (`a`, `b`, and `c`), although it is a good practice.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，需要对生成的参数 (`p` 和 `q`) 包含 `integer=True` 假设，以便为它们提供数值。相反，对于原始方程中的符号 (`a`, `b`,
    和 `c`)，不需要包含 `integer=True` 假设，尽管这是一个好习惯。
- en: 'To iterate the set of solutions, you can iterate over value of the parameters
    (`p` and `q`) in a nested loop:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要遍历解集，可以在嵌套循环中迭代参数 (`p` 和 `q`) 的值：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Verify a Solution
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证解决方案
- en: 'You can verify a solution is correct by substituting its integer values back
    into the original equation (expression which equals zero) and checking that the
    result is zero, either by using the dictionary approach from [Work With Parameters](#work-with-parameters),
    or by manually substituting in values determined by any procedure:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过将其整数值代入原始方程（等于零的表达式）并检查结果是否为零来验证解是否正确，可以使用[处理参数](#work-with-parameters)中的字典方法，或通过任何程序确定的值手动替换：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Programmatically Extract Parameter Symbols
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 程序化提取参数符号
- en: 'If you want to programmatically obtain the set of auto-generated parameters
    for one solution, you can use the following code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想程序化地获取一个解的自动生成参数集合，您可以使用以下代码：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Not All Equations Can Be Solved
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不是所有的方程都能解决
- en: Equations With No Solution
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 没有解的方程
- en: Some Diophantine equations have no solution, in which case [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") will return an empty set,
    `set()`. For example, in the expression \(2x + 4y - 3\) (which we will try to
    set to zero), the coefficients are both even (\(2\) and \(4\)), so the sum of
    the terms \((2x + 4y)\) can only be even. However, the constant \(3\) is odd,
    so there is no solution.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有些丢番图方程无解，这种情况下 [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") 将返回一个空集合，`set()`。例如，在表达式
    \(2x + 4y - 3\)（我们将尝试将其设置为零）中，系数都是偶数（\(2\) 和 \(4\)），因此项的和 \((2x + 4y)\) 只能是偶数。然而，常数
    \(3\) 是奇数，因此没有解决方案。
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Report a Bug
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 报告错误
- en: If you find a bug with [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine"), please post the problem
    on the [SymPy mailing list](https://groups.google.com/g/sympy). Until the issue
    is resolved, you can use a different method listed in [Alternatives to Consider](#alternatives-to-consider).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现 [`diophantine()`](../../modules/solvers/diophantine.html#sympy.solvers.diophantine.diophantine.diophantine
    "sympy.solvers.diophantine.diophantine.diophantine") 存在 bug，请在[SymPy邮件列表](https://groups.google.com/g/sympy)上发布问题。在问题解决之前，您可以使用[考虑的替代方案](#alternatives-to-consider)中列出的其他方法。
