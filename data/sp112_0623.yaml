- en: scipy.signal.tf2zpk
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.tf2zpk
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.tf2zpk.html#scipy.signal.tf2zpk](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.tf2zpk.html#scipy.signal.tf2zpk)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.tf2zpk.html#scipy.signal.tf2zpk](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.tf2zpk.html#scipy.signal.tf2zpk)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return zero, pole, gain (z, p, k) representation from a numerator, denominator
    representation of a linear filter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从线性滤波器的分子、分母表示返回零点、极点、增益（z, p, k）的表示。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**b**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**b**array_like'
- en: Numerator polynomial coefficients.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 分子多项式系数。
- en: '**a**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**a**array_like'
- en: Denominator polynomial coefficients.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 分母多项式系数。
- en: 'Returns:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**z**ndarray'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**z**ndarray'
- en: Zeros of the transfer function.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 传输函数的零点。
- en: '**p**ndarray'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**p**ndarray'
- en: Poles of the transfer function.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 传输函数的极点。
- en: '**k**float'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**k**float'
- en: System gain.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 系统增益。
- en: Notes
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记
- en: If some values of *b* are too close to 0, they are removed. In that case, a
    BadCoefficients warning is emitted.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果*b*的某些值太接近0，则它们将被移除。在这种情况下，会发出BadCoefficients警告。
- en: 'The *b* and *a* arrays are interpreted as coefficients for positive, descending
    powers of the transfer function variable. So the inputs \(b = [b_0, b_1, ...,
    b_M]\) and \(a =[a_0, a_1, ..., a_N]\) can represent an analog filter of the form:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数组*b*和*a*被解释为传输函数变量的正向递减幂的系数。因此，输入\(b = [b_0, b_1, ..., b_M]\)和\(a =[a_0, a_1,
    ..., a_N]\)可以表示形如以下模拟滤波器：
- en: \[H(s) = \frac {b_0 s^M + b_1 s^{(M-1)} + \cdots + b_M} {a_0 s^N + a_1 s^{(N-1)}
    + \cdots + a_N}\]
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: \[H(s) = \frac {b_0 s^M + b_1 s^{(M-1)} + \cdots + b_M} {a_0 s^N + a_1 s^{(N-1)}
    + \cdots + a_N}\]
- en: 'or a discrete-time filter of the form:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 或形如以下离散时间滤波器：
- en: \[H(z) = \frac {b_0 z^M + b_1 z^{(M-1)} + \cdots + b_M} {a_0 z^N + a_1 z^{(N-1)}
    + \cdots + a_N}\]
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: \[H(z) = \frac {b_0 z^M + b_1 z^{(M-1)} + \cdots + b_M} {a_0 z^N + a_1 z^{(N-1)}
    + \cdots + a_N}\]
- en: 'This “positive powers” form is found more commonly in controls engineering.
    If *M* and *N* are equal (which is true for all filters generated by the bilinear
    transform), then this happens to be equivalent to the “negative powers” discrete-time
    form preferred in DSP:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这种“正幂”形式在控制工程中更为常见。如果*M*和*N*相等（这对所有通过双线性变换生成的滤波器都成立），那么这等同于DSP中更受青睐的“负幂”离散时间形式：
- en: \[H(z) = \frac {b_0 + b_1 z^{-1} + \cdots + b_M z^{-M}} {a_0 + a_1 z^{-1} +
    \cdots + a_N z^{-N}}\]
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: \[H(z) = \frac {b_0 + b_1 z^{-1} + \cdots + b_M z^{-M}} {a_0 + a_1 z^{-1} +
    \cdots + a_N z^{-N}}\]
- en: Although this is true for common filters, remember that this is not true in
    the general case. If *M* and *N* are not equal, the discrete-time transfer function
    coefficients must first be converted to the “positive powers” form before finding
    the poles and zeros.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管对于常见的滤波器是如此，但请记住这在一般情况下并非如此。如果*M*和*N*不相等，则必须先将离散时间传输函数系数转换为“正幂”形式，然后再找到极点和零点。
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Find the zeroes, poles and gain of a filter with the transfer function
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 找到具有传输函数的零点、极点和增益
- en: \[H(s) = \frac{3s^2}{s^2 + 5s + 13}\]
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: \[H(s) = \frac{3s^2}{s^2 + 5s + 13}\]
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
