- en: scipy.signal.ZoomFFT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.ZoomFFT.html#scipy.signal.ZoomFFT](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.ZoomFFT.html#scipy.signal.ZoomFFT)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Create a callable zoom FFT transform function.
  prefs: []
  type: TYPE_NORMAL
- en: This is a specialization of the chirp z-transform ([`CZT`](scipy.signal.CZT.html#scipy.signal.CZT
    "scipy.signal.CZT")) for a set of equally-spaced frequencies around the unit circle,
    used to calculate a section of the FFT more efficiently than calculating the entire
    FFT and truncating.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n**int'
  prefs: []
  type: TYPE_NORMAL
- en: The size of the signal.
  prefs: []
  type: TYPE_NORMAL
- en: '**fn**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A length-2 sequence [*f1*, *f2*] giving the frequency range, or a scalar, for
    which the range [0, *fn*] is assumed.
  prefs: []
  type: TYPE_NORMAL
- en: '**m**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The number of points to evaluate. Default is *n*.
  prefs: []
  type: TYPE_NORMAL
- en: '**fs**float, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The sampling frequency. If `fs=10` represented 10 kHz, for example, then *f1*
    and *f2* would also be given in kHz. The default sampling frequency is 2, so *f1*
    and *f2* should be in the range [0, 1] to keep the transform below the Nyquist
    frequency.
  prefs: []
  type: TYPE_NORMAL
- en: '**endpoint**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: If True, *f2* is the last sample. Otherwise, it is not included. Default is
    False.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**f**ZoomFFT'
  prefs: []
  type: TYPE_NORMAL
- en: Callable object `f(x, axis=-1)` for computing the zoom FFT on *x*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`zoom_fft`](scipy.signal.zoom_fft.html#scipy.signal.zoom_fft "scipy.signal.zoom_fft")'
  prefs: []
  type: TYPE_NORMAL
- en: Convenience function for calculating a zoom FFT.
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The defaults are chosen such that `f(x, 2)` is equivalent to `fft.fft(x)` and,
    if `m > len(x)`, that `f(x, 2, m)` is equivalent to `fft.fft(x, m)`.
  prefs: []
  type: TYPE_NORMAL
- en: Sampling frequency is 1/dt, the time step between samples in the signal *x*.
    The unit circle corresponds to frequencies from 0 up to the sampling frequency.
    The default sampling frequency of 2 means that *f1*, *f2* values up to the Nyquist
    frequency are in the range [0, 1). For *f1*, *f2* values expressed in radians,
    a sampling frequency of 2*pi should be used.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that a zoom FFT can only interpolate the points of the existing FFT.
    It cannot help to resolve two separate nearby frequencies. Frequency resolution
    can only be increased by increasing acquisition time.
  prefs: []
  type: TYPE_NORMAL
- en: These functions are implemented using Bluestein’s algorithm (as is [`scipy.fft`](../fft.html#module-scipy.fft
    "scipy.fft")). [[2]](#r60ab76173d0a-2)
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[1]'
  prefs: []
  type: TYPE_NORMAL
- en: Steve Alan Shilling, “A study of the chirp z-transform and its applications”,
    pg 29 (1970) [https://krex.k-state.edu/dspace/bitstream/handle/2097/7844/LD2668R41972S43.pdf](https://krex.k-state.edu/dspace/bitstream/handle/2097/7844/LD2668R41972S43.pdf)
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: Leo I. Bluestein, “A linear filtering approach to the computation of the discrete
    Fourier transform,” Northeast Electronics Research and Engineering Meeting Record
    10, 218-219 (1968).
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: 'To plot the transform results use something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-signal-ZoomFFT-1.png](../Images/a4b840db29a910da189cbd67e55ae5ef.png)'
  prefs: []
  type: TYPE_IMG
- en: Methods
  prefs: []
  type: TYPE_NORMAL
- en: '| [`__call__`](scipy.signal.ZoomFFT.__call__.html#scipy.signal.ZoomFFT.__call__
    "scipy.signal.ZoomFFT.__call__")(x, *[, axis]) | Calculate the chirp z-transform
    of a signal. |'
  prefs: []
  type: TYPE_TB
- en: '| [`points`](scipy.signal.ZoomFFT.points.html#scipy.signal.ZoomFFT.points "scipy.signal.ZoomFFT.points")()
    | Return the points at which the chirp z-transform is computed. |'
  prefs: []
  type: TYPE_TB
