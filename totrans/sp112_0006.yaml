- en: Interpolation (scipy.interpolate)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/tutorial/interpolate.html](https://docs.scipy.org/doc/scipy-1.12.0/tutorial/interpolate.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'There are several general facilities available in SciPy for interpolation and
    smoothing for data in 1, 2, and higher dimensions. The choice of a specific interpolation
    routine depends on the data: whether it is one-dimensional, is given on a structured
    grid, or is unstructured. One other factor is the desired smoothness of the interpolator.
    In short, routines recommended *for interpolation* can be summarized as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | **kind** | **routine** | **continuity** | **comment** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1D | linear | [`numpy.interp`](https://numpy.org/devdocs/reference/generated/numpy.interp.html#numpy.interp
    "(in NumPy v2.0.dev0)") | piecewise continuous | comes from numpy |'
  prefs: []
  type: TYPE_TB
- en: '| cubic spline | [`CubicSpline`](../reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline
    "scipy.interpolate.CubicSpline") | 2nd derivative |  |'
  prefs: []
  type: TYPE_TB
- en: '| monotone cubic spline | [`PchipInterpolator`](../reference/generated/scipy.interpolate.PchipInterpolator.html#scipy.interpolate.PchipInterpolator
    "scipy.interpolate.PchipInterpolator") | 1st derivative | non-overshooting |'
  prefs: []
  type: TYPE_TB
- en: '| non-cubic spline | [`make_interp_spline`](../reference/generated/scipy.interpolate.make_interp_spline.html#scipy.interpolate.make_interp_spline
    "scipy.interpolate.make_interp_spline") | (k-1)th derivative | `k=3` is equivalent
    to [`CubicSpline`](../reference/generated/scipy.interpolate.CubicSpline.html#scipy.interpolate.CubicSpline
    "scipy.interpolate.CubicSpline") |'
  prefs: []
  type: TYPE_TB
- en: '| nearest | [`interp1d`](../reference/generated/scipy.interpolate.interp1d.html#scipy.interpolate.interp1d
    "scipy.interpolate.interp1d") |  | kind=’nearest’, ‘previous’, ‘next’ |'
  prefs: []
  type: TYPE_TB
- en: '| N-D curve | nearest, linear, spline | [`make_interp_spline`](../reference/generated/scipy.interpolate.make_interp_spline.html#scipy.interpolate.make_interp_spline
    "scipy.interpolate.make_interp_spline") | (k-1)th derivative | use N-dim *y* array
    |'
  prefs: []
  type: TYPE_TB
- en: '| N-D regular (*rectilinear*) grid | nearest | [`RegularGridInterpolator`](../reference/generated/scipy.interpolate.RegularGridInterpolator.html#scipy.interpolate.RegularGridInterpolator
    "scipy.interpolate.RegularGridInterpolator") |  | method=’nearest’ |'
  prefs: []
  type: TYPE_TB
- en: '| linear | method=’linear’ |'
  prefs: []
  type: TYPE_TB
- en: '| splines | 2nd derivatives | method=’cubic’, ‘quintic’ |'
  prefs: []
  type: TYPE_TB
- en: '| monotone splines | 1st derivatives | method=’pchip’ |'
  prefs: []
  type: TYPE_TB
- en: '| N-D scattered | nearest | [`NearestNDInterpolator`](../reference/generated/scipy.interpolate.NearestNDInterpolator.html#scipy.interpolate.NearestNDInterpolator
    "scipy.interpolate.NearestNDInterpolator") |  | alias: [`griddata`](../reference/generated/scipy.interpolate.griddata.html#scipy.interpolate.griddata
    "scipy.interpolate.griddata") |'
  prefs: []
  type: TYPE_TB
- en: '| linear | [`LinearNDInterpolator`](../reference/generated/scipy.interpolate.LinearNDInterpolator.html#scipy.interpolate.LinearNDInterpolator
    "scipy.interpolate.LinearNDInterpolator") |'
  prefs: []
  type: TYPE_TB
- en: '| cubic (2D only) | [`CloughTocher2DInterpolator`](../reference/generated/scipy.interpolate.CloughTocher2DInterpolator.html#scipy.interpolate.CloughTocher2DInterpolator
    "scipy.interpolate.CloughTocher2DInterpolator") | 1st derivatives |'
  prefs: []
  type: TYPE_TB
- en: '| radial basis function | [`RBFInterpolator`](../reference/generated/scipy.interpolate.RBFInterpolator.html#scipy.interpolate.RBFInterpolator
    "scipy.interpolate.RBFInterpolator") |  |  |'
  prefs: []
  type: TYPE_TB
- en: For data smoothing, [functions are provided](interpolate/smoothing_splines.html#tutorial-interpolate-fitpack)
    for 1- and 2-D data using cubic splines, based on the FORTRAN library FITPACK.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, routines are provided for interpolation / smoothing using [radial
    basis functions](interpolate/ND_unstructured.html#tutorial-interpolate-rbf) with
    several kernels.
  prefs: []
  type: TYPE_NORMAL
- en: Further details are given in the links below.
  prefs: []
  type: TYPE_NORMAL
- en: '[1-D interpolation](interpolate/1D.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Piecewise linear interpolation](interpolate/1D.html#piecewise-linear-interpolation)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Cubic splines](interpolate/1D.html#cubic-splines)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Monotone interpolants](interpolate/1D.html#monotone-interpolants)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Interpolation with B-splines](interpolate/1D.html#interpolation-with-b-splines)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Parametric spline curves](interpolate/1D.html#parametric-spline-curves)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Legacy interface for 1-D interpolation (`interp1d`)](interpolate/1D.html#legacy-interface-for-1-d-interpolation-interp1d)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Missing data](interpolate/1D.html#missing-data)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Piecewise polynomials and splines](interpolate/splines_and_polynomials.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Manipulating `PPoly` objects](interpolate/splines_and_polynomials.html#manipulating-ppoly-objects)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[B-splines: knots and coefficients](interpolate/splines_and_polynomials.html#b-splines-knots-and-coefficients)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[B-spline basis elements](interpolate/splines_and_polynomials.html#b-spline-basis-elements)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Design matrices in the B-spline basis](interpolate/splines_and_polynomials.html#design-matrices-in-the-b-spline-basis)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Smoothing splines](interpolate/smoothing_splines.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Spline smoothing in 1-D](interpolate/smoothing_splines.html#spline-smoothing-in-1-d)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Procedural (`splrep`)](interpolate/smoothing_splines.html#procedural-splrep)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Object-oriented (`UnivariateSpline`)](interpolate/smoothing_splines.html#object-oriented-univariatespline)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[2-D smoothing splines](interpolate/smoothing_splines.html#d-smoothing-splines)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bivariate spline fitting of scattered data](interpolate/smoothing_splines.html#bivariate-spline-fitting-of-scattered-data)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bivariate spline fitting of data on a grid](interpolate/smoothing_splines.html#bivariate-spline-fitting-of-data-on-a-grid)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bivariate spline fitting of data in spherical coordinates](interpolate/smoothing_splines.html#bivariate-spline-fitting-of-data-in-spherical-coordinates)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Multivariate data interpolation on a regular grid (`RegularGridInterpolator`)](interpolate/ND_regular_grid.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Uniformly spaced data](interpolate/ND_regular_grid.html#uniformly-spaced-data)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Scattered data interpolation (`griddata`)](interpolate/ND_unstructured.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using radial basis functions for smoothing/interpolation](interpolate/ND_unstructured.html#using-radial-basis-functions-for-smoothing-interpolation)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[1-D Example](interpolate/ND_unstructured.html#d-example)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[2-D Example](interpolate/ND_unstructured.html#id1)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Extrapolation tips and tricks](interpolate/extrapolation_examples.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`interp1d` : replicate `numpy.interp` left and right fill values](interpolate/extrapolation_examples.html#interp1d-replicate-numpy-interp-left-and-right-fill-values)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CubicSpline extend the boundary conditions](interpolate/extrapolation_examples.html#cubicspline-extend-the-boundary-conditions)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Manually implement the asymptotics](interpolate/extrapolation_examples.html#manually-implement-the-asymptotics)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The setup](interpolate/extrapolation_examples.html#the-setup)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Use the known asymptotics](interpolate/extrapolation_examples.html#use-the-known-asymptotics)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Extrapolation in `D > 1`](interpolate/extrapolation_examples.html#extrapolation-in-d-1)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
