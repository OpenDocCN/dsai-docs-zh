["```py\n>>> from sympy import *\n>>> x, y, z = symbols('x y z')\n>>> init_printing(use_unicode=True) \n```", "```py\n>>> diff(cos(x), x)\n-sin(x)\n>>> diff(exp(x**2), x)\n ⎛ 2⎞\n ⎝x ⎠\n2⋅x⋅ℯ \n```", "```py\n>>> diff(x**4, x, x, x)\n24⋅x\n>>> diff(x**4, x, 3)\n24⋅x \n```", "```py\n>>> expr = exp(x*y*z)\n>>> diff(expr, x, y, y, z, z, z, z)\n 3  2 ⎛ 3  3  3       2  2  2                ⎞  x⋅y⋅z\nx ⋅y ⋅⎝x ⋅y ⋅z  + 14⋅x ⋅y ⋅z  + 52⋅x⋅y⋅z + 48⎠⋅ℯ\n>>> diff(expr, x, y, 2, z, 4)\n 3  2 ⎛ 3  3  3       2  2  2                ⎞  x⋅y⋅z\nx ⋅y ⋅⎝x ⋅y ⋅z  + 14⋅x ⋅y ⋅z  + 52⋅x⋅y⋅z + 48⎠⋅ℯ\n>>> diff(expr, x, y, y, z, 4)\n 3  2 ⎛ 3  3  3       2  2  2                ⎞  x⋅y⋅z\nx ⋅y ⋅⎝x ⋅y ⋅z  + 14⋅x ⋅y ⋅z  + 52⋅x⋅y⋅z + 48⎠⋅ℯ \n```", "```py\n>>> expr.diff(x, y, y, z, 4)\n 3  2 ⎛ 3  3  3       2  2  2                ⎞  x⋅y⋅z\nx ⋅y ⋅⎝x ⋅y ⋅z  + 14⋅x ⋅y ⋅z  + 52⋅x⋅y⋅z + 48⎠⋅ℯ \n```", "```py\n>>> deriv = Derivative(expr, x, y, y, z, 4)\n>>> deriv\n 7\n ∂     ⎛ x⋅y⋅z⎞\n──────────⎝ℯ     ⎠\n 4   2\n∂z  ∂y  ∂x \n```", "```py\n>>> deriv.doit()\n 3  2 ⎛ 3  3  3       2  2  2                ⎞  x⋅y⋅z\nx ⋅y ⋅⎝x ⋅y ⋅z  + 14⋅x ⋅y ⋅z  + 52⋅x⋅y⋅z + 48⎠⋅ℯ \n```", "```py\n>>> m, n, a, b = symbols('m n a b')\n>>> expr = (a*x + b)**m\n>>> expr.diff((x, n))\n n\n ∂ ⎛         m⎞\n───⎝(a⋅x + b) ⎠\n n\n∂x \n```", "```py\n>>> integrate(cos(x), x)\nsin(x) \n```", "```py\n>>> integrate(exp(-x), (x, 0, oo))\n1 \n```", "```py\n>>> integrate(exp(-x**2 - y**2), (x, -oo, oo), (y, -oo, oo))\nπ \n```", "```py\n>>> expr = integrate(x**x, x)\n>>> print(expr)\nIntegral(x**x, x)\n>>> expr\n⌠\n⎮  x\n⎮ x  dx\n⌡ \n```", "```py\n>>> expr = Integral(log(x)**2, x)\n>>> expr\n⌠\n⎮    2\n⎮ log (x) dx\n⌡\n>>> expr.doit()\n 2\nx⋅log (x) - 2⋅x⋅log(x) + 2⋅x \n```", "```py\n>>> integ = Integral((x**4 + x**2*exp(x) - x**2 - 2*x*exp(x) - 2*x -\n...     exp(x))*exp(x)/((x - 1)**2*(x + 1)**2*(exp(x) + 1)), x)\n>>> integ\n⌠\n⎮ ⎛ 4    2  x    2        x          x⎞  x\n⎮ ⎝x  + x ⋅ℯ  - x  - 2⋅x⋅ℯ  - 2⋅x - ℯ ⎠⋅ℯ\n⎮ ──────────────────────────────────────── dx\n⎮               2        2 ⎛ x    ⎞\n⎮        (x - 1) ⋅(x + 1) ⋅⎝ℯ  + 1⎠\n⌡\n>>> integ.doit()\n x\n ⎛ x    ⎞     ℯ\nlog⎝ℯ  + 1⎠ + ──────\n 2\n x  - 1 \n```", "```py\n>>> integ = Integral(sin(x**2), x)\n>>> integ\n⌠\n⎮    ⎛ 2⎞\n⎮ sin⎝x ⎠ dx\n⌡\n>>> integ.doit()\n ⎛√2⋅x⎞\n3⋅√2⋅√π⋅S⎜────⎟⋅Γ(3/4)\n ⎝ √π ⎠\n──────────────────────\n 8⋅Γ(7/4) \n```", "```py\n>>> integ = Integral(x**y*exp(-x), (x, 0, oo))\n>>> integ\n∞\n⌠\n⎮  y  -x\n⎮ x ⋅ℯ   dx\n⌡\n0\n>>> integ.doit()\n⎧ Γ(y + 1)    for re(y) > -1\n⎪\n⎪∞\n⎪⌠\n⎨⎮  y  -x\n⎪⎮ x ⋅ℯ   dx    otherwise\n⎪⌡\n⎪0\n⎩ \n```", "```py\n>>> from sympy import Integral, Symbol, sqrt\n>>> x = Symbol('x')\n>>> integral = Integral(sqrt(2)*x, (x, 0, 1))\n>>> integral\n1\n⌠\n⎮ √2⋅x dx\n⌡\n0\n>>> integral.evalf()\n0.707106781186548 \n```", "```py\n>>> integral.evalf(50)\n0.70710678118654752440084436210484903928483593768847 \n```", "```py\n>>> Integral(exp(-(x ** 2)), (x, -oo, oo)).evalf()\n1.77245385090552 \n```", "```py\n>>> Integral(1 / sqrt(x), (x, 0, 1)).evalf()\n2.00000000000000 \n```", "```py\n>>> limit(sin(x)/x, x, 0)\n1 \n```", "```py\n>>> expr = x**2/exp(x)\n>>> expr.subs(x, oo)\nnan\n>>> limit(expr, x, oo)\n0 \n```", "```py\n>>> expr = Limit((cos(x) - 1)/x, x, 0)\n>>> expr\n ⎛cos(x) - 1⎞\n lim ⎜──────────⎟\nx─→0⁺⎝    x     ⎠\n>>> expr.doit()\n0 \n```", "```py\n>>> limit(1/x, x, 0, '+')\n∞ \n```", "```py\n>>> limit(1/x, x, 0, '-')\n-∞ \n```", "```py\n>>> expr = exp(sin(x))\n>>> expr.series(x, 0, 4)\n 2\n x     ⎛ 4⎞\n1 + x + ── + O⎝x ⎠\n 2 \n```", "```py\n>>> x + x**3 + x**6 + O(x**4)\n 3    ⎛ 4⎞\nx + x  + O⎝x ⎠\n>>> x*O(1)\nO(x) \n```", "```py\n>>> expr.series(x, 0, 4).removeO()\n 2\nx\n── + x + 1\n2 \n```", "```py\n>>> exp(x - 6).series(x, x0=6)\n 2          3          4          5\n (x - 6)    (x - 6)    (x - 6)    (x - 6)         ⎛       6       ⎞\n-5 + ──────── + ──────── + ──────── + ──────── + x + O⎝(x - 6) ; x → 6⎠\n 2          6          24        120 \n```", "```py\n>>> f, g = symbols('f g', cls=Function)\n>>> differentiate_finite(f(x)*g(x))\n-f(x - 1/2)⋅g(x - 1/2) + f(x + 1/2)⋅g(x + 1/2) \n```", "```py\n>>> f = Function('f')\n>>> dfdx = f(x).diff(x)\n>>> dfdx.as_finite_difference()\n-f(x - 1/2) + f(x + 1/2) \n```", "```py\n>>> f = Function('f')\n>>> d2fdx2 = f(x).diff(x, 2)\n>>> h = Symbol('h')\n>>> d2fdx2.as_finite_difference([-3*h,-h,2*h])\nf(-3⋅h)   f(-h)   2⋅f(2⋅h)\n─────── - ───── + ────────\n 2        2        2\n 5⋅h      3⋅h     15⋅h \n```", "```py\n>>> finite_diff_weights(2, [-3, -1, 2], 0)[-1][-1]\n[1/5, -1/3, 2/15] \n```", "```py\n>>> x_list = [-3, 1, 2]\n>>> y_list = symbols('a b c')\n>>> apply_finite_diff(1, x_list, y_list, 0)\n 3⋅a   b   2⋅c\n- ─── - ─ + ───\n 20   4    5 \n```"]