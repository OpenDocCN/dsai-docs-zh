- en: numpy.bitwise_xor
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.bitwise_xor
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.bitwise_xor.html](https://numpy.org/doc/1.26/reference/generated/numpy.bitwise_xor.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.bitwise_xor.html](https://numpy.org/doc/1.26/reference/generated/numpy.bitwise_xor.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute the bit-wise XOR of two arrays element-wise.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 逐元素计算两个数组的位异或。
- en: Computes the bit-wise XOR of the underlying binary representation of the integers
    in the input arrays. This ufunc implements the C/Python operator `^`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 计算输入数组中整数的基础二进制表示的位异或。此 ufunc 实现了 C/Python 运算符 `^`。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x1, x2**array_like'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**x1, x2**array_like'
- en: Only integer and boolean types are handled. If `x1.shape != x2.shape`, they
    must be broadcastable to a common shape (which becomes the shape of the output).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 仅处理整数和布尔类型。如果 `x1.shape != x2.shape`，它们必须能够广播到一个公共形状（这成为输出的形状）。
- en: '**out**ndarray, None, or tuple of ndarray and None, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray, None, 或包含 ndarray 和 None 的元组，可选'
- en: A location into which the result is stored. If provided, it must have a shape
    that the inputs broadcast to. If not provided or None, a freshly-allocated array
    is returned. A tuple (possible only as a keyword argument) must have length equal
    to the number of outputs.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 结果存储的位置。如果提供，则必须具有输入广播到的形状。如果未提供或为 None，则返回一个新分配的数组。一个元组（仅作为关键字参数）必须具有与输出数目相等的长度。
- en: '**where**array_like, optional'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**where**array_like，可选'
- en: This condition is broadcast over the input. At locations where the condition
    is True, the *out* array will be set to the ufunc result. Elsewhere, the *out*
    array will retain its original value. Note that if an uninitialized *out* array
    is created via the default `out=None`, locations within it where the condition
    is False will remain uninitialized.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此条件在输入上进行广播。在此条件为真的位置，*out* 数组将设置为 ufunc 结果。其他地方，*out* 数组将保留其原始值。请注意，如果通过默认的
    `out=None` 创建未初始化的 *out* 数组，则其中条件为假的位置将保持未初始化。
- en: '****kwargs**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '****kwargs**'
- en: For other keyword-only arguments, see the [ufunc docs](../ufuncs.html#ufuncs-kwargs).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他仅关键字参数，请参阅 [ufunc 文档](../ufuncs.html#ufuncs-kwargs)。
- en: 'Returns:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**out**ndarray or scalar'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**ndarray 或标量'
- en: Result. This is a scalar if both *x1* and *x2* are scalars.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 结果。如果 *x1* 和 *x2* 均为标量，则为标量。
- en: See also
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`logical_xor`](numpy.logical_xor.html#numpy.logical_xor "numpy.logical_xor")'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[`logical_xor`](numpy.logical_xor.html#numpy.logical_xor "numpy.logical_xor")'
- en: '[`bitwise_and`](numpy.bitwise_and.html#numpy.bitwise_and "numpy.bitwise_and")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bitwise_and`](numpy.bitwise_and.html#numpy.bitwise_and "numpy.bitwise_and")'
- en: '[`bitwise_or`](numpy.bitwise_or.html#numpy.bitwise_or "numpy.bitwise_or")'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[`bitwise_or`](numpy.bitwise_or.html#numpy.bitwise_or "numpy.bitwise_or")'
- en: '[`binary_repr`](numpy.binary_repr.html#numpy.binary_repr "numpy.binary_repr")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`binary_repr`](numpy.binary_repr.html#numpy.binary_repr "numpy.binary_repr")'
- en: Return the binary representation of the input number as a string.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 返回输入数字的二进制表示形式作为字符串。
- en: Examples
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'The number 13 is represented by `00001101`. Likewise, 17 is represented by
    `00010001`. The bit-wise XOR of 13 and 17 is therefore `00011100`, or 28:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 数字 13 的表示为 `00001101`。同样，数字 17 的表示为 `00010001`。因此，13 和 17 的位异或是 `00011100`，即
    28：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `^` operator can be used as a shorthand for `np.bitwise_xor` on ndarrays.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`^` 运算符可用作对 ndarrays 的 `np.bitwise_xor` 的简写。'
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
