- en: scipy.stats.PermutationMethod
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.PermutationMethod.html#scipy.stats.PermutationMethod](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.PermutationMethod.html#scipy.stats.PermutationMethod)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Configuration information for a permutation hypothesis test.
  prefs: []
  type: TYPE_NORMAL
- en: Instances of this class can be passed into the *method* parameter of some hypothesis
    test functions to perform a permutation version of the hypothesis tests.
  prefs: []
  type: TYPE_NORMAL
- en: 'Attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**n_resamples**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The number of resamples to perform. Default is 9999.
  prefs: []
  type: TYPE_NORMAL
- en: '**batch**int, optional'
  prefs: []
  type: TYPE_NORMAL
- en: The number of resamples to process in each vectorized call to the statistic.
    Batch sizes >>1 tend to be faster when the statistic is vectorized, but memory
    usage scales linearly with the batch size. Default is `None`, which processes
    all resamples in a single batch.
  prefs: []
  type: TYPE_NORMAL
- en: '**random_state**{None, int, [`numpy.random.Generator`](https://numpy.org/devdocs/reference/random/generator.html#numpy.random.Generator
    "(in NumPy v2.0.dev0)"),'
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)")}, optional'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Pseudorandom number generator state used to generate resamples.
  prefs: []
  type: TYPE_NORMAL
- en: If [`random_state`](scipy.stats.PermutationMethod.random_state.html#scipy.stats.PermutationMethod.random_state
    "scipy.stats.PermutationMethod.random_state") is already a `Generator` or `RandomState`
    instance, then that instance is used. If [`random_state`](scipy.stats.PermutationMethod.random_state.html#scipy.stats.PermutationMethod.random_state
    "scipy.stats.PermutationMethod.random_state") is an int, a new `RandomState` instance
    is used, seeded with [`random_state`](scipy.stats.PermutationMethod.random_state.html#scipy.stats.PermutationMethod.random_state
    "scipy.stats.PermutationMethod.random_state"). If [`random_state`](scipy.stats.PermutationMethod.random_state.html#scipy.stats.PermutationMethod.random_state
    "scipy.stats.PermutationMethod.random_state") is `None` (default), the [`numpy.random.RandomState`](https://numpy.org/devdocs/reference/random/legacy.html#numpy.random.RandomState
    "(in NumPy v2.0.dev0)") singleton is used.
  prefs: []
  type: TYPE_NORMAL
