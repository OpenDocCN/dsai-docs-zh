- en: numpy.meshgrid
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.meshgrid
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.meshgrid.html](https://numpy.org/doc/1.26/reference/generated/numpy.meshgrid.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.meshgrid.html](https://numpy.org/doc/1.26/reference/generated/numpy.meshgrid.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Return a list of coordinate matrices from coordinate vectors.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从坐标向量返回坐标矩阵列表。
- en: Make N-D coordinate arrays for vectorized evaluations of N-D scalar/vector fields
    over N-D grids, given one-dimensional coordinate arrays x1, x2,…, xn.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为 N-D 格点数组创建一维坐标数组，以便在 N-D 格点上对 N-D 标量/向量场进行矢量化评估，给定一维坐标数组 x1, x2,…, xn。
- en: 'Changed in version 1.9: 1-D and 0-D cases are allowed.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在 1.9 版中更改：允许 1-D 和 0-D 情况。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x1, x2,…, xn**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**x1, x2,…, xn**array_like'
- en: 1-D arrays representing the coordinates of a grid.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 表示网格坐标的 1-D 数组。
- en: '**indexing**{‘xy’, ‘ij’}, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**indexing**{‘xy’，‘ij’}，可选'
- en: Cartesian (‘xy’, default) or matrix (‘ij’) indexing of output. See Notes for
    more details.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的笛卡尔（‘xy’，默认）或矩阵（‘ij’）索引。更多细节请参阅注释。
- en: New in version 1.7.0.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.7.0 中的新功能。
- en: '**sparse**bool, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**sparse**bool，可选'
- en: If True the shape of the returned coordinate array for dimension *i* is reduced
    from `(N1, ..., Ni, ... Nn)` to `(1, ..., 1, Ni, 1, ..., 1)`. These sparse coordinate
    grids are intended to be use with [Broadcasting](../../user/basics.broadcasting.html#basics-broadcasting).
    When all coordinates are used in an expression, broadcasting still leads to a
    fully-dimensonal result array.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为 True，则使得用于第 *i* 维的返回坐标数组的形状从`（N1, ..., Ni, ... Nn）`减少为`（1，...，1，Ni，1，...，1）`。这些稀疏坐标网格用于与[广播](../../user/basics.broadcasting.html#basics-broadcasting)。当在表达式中使用所有坐��时，广播仍然导致完全维数的结果数组。
- en: Default is False.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 默认值为 False。
- en: New in version 1.7.0.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.7.0 中的新功能。
- en: '**copy**bool, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**copy**bool，可选'
- en: If False, a view into the original arrays are returned in order to conserve
    memory. Default is True. Please note that `sparse=False, copy=False` will likely
    return non-contiguous arrays. Furthermore, more than one element of a broadcast
    array may refer to a single memory location. If you need to write to the arrays,
    make copies first.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为 False，则会视图返回到原始数组，以便节省内存。默认为 True。请注意，`sparse=False, copy=False` 可能会返回非连续数组。此外，广播数组的一个以上元素可能指向单个内存位置。如果您需要向数组写入内容，请先制作副本。
- en: New in version 1.7.0.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本 1.7.0 中的新功能。
- en: 'Returns:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值：
- en: '**X1, X2,…, XN**list of ndarrays'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**X1, X2，…，XN**ndarray 列表'
- en: For vectors *x1*, *x2*,…, *xn* with lengths `Ni=len(xi)`, returns `(N1, N2,
    N3,..., Nn)` shaped arrays if indexing=’ij’ or `(N2, N1, N3,..., Nn)` shaped arrays
    if indexing=’xy’ with the elements of *xi* repeated to fill the matrix along the
    first dimension for *x1*, the second for *x2* and so on.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于向量 *x1*、*x2*，...、*xn*，其长度为 `Ni=len(xi)`，如果 indexing=’ij’，则返回形状为 `(N1, N2,
    N3,..., Nn)` 的数组；如果 indexing=’xy’，则返回形状为 `(N2, N1, N3,..., Nn)` 的数组，其中 *xi* 的元素重复以填充矩阵中的第一维度，*x1*
    的第二维度，依此类推。
- en: See also
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`mgrid`](numpy.mgrid.html#numpy.mgrid "numpy.mgrid")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`mgrid`](numpy.mgrid.html#numpy.mgrid "numpy.mgrid")'
- en: Construct a multi-dimensional “meshgrid” using indexing notation.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用索引表示的多维“网格”。
- en: '[`ogrid`](numpy.ogrid.html#numpy.ogrid "numpy.ogrid")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`ogrid`](numpy.ogrid.html#numpy.ogrid "numpy.ogrid")'
- en: Construct an open multi-dimensional “meshgrid” using indexing notation.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用索引表示的多维“网格”。
- en: '`how-to-index`'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`how-to-index`'
- en: Notes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: 'This function supports both indexing conventions through the indexing keyword
    argument. Giving the string ‘ij’ returns a meshgrid with matrix indexing, while
    ‘xy’ returns a meshgrid with Cartesian indexing. In the 2-D case with inputs of
    length M and N, the outputs are of shape (N, M) for ‘xy’ indexing and (M, N) for
    ‘ij’ indexing. In the 3-D case with inputs of length M, N and P, outputs are of
    shape (N, M, P) for ‘xy’ indexing and (M, N, P) for ‘ij’ indexing. The difference
    is illustrated by the following code snippet:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数通过索引关键字参数支持两种索引约定。使用字符串 ‘ij’ 返回带有矩阵索引的 meshgrid，而 ‘xy’ 返回带有笛卡尔索引的 meshgrid。在输入长度为
    M 和 N 的 2-D 情况下，对于‘xy’索引，输出的形状为（N，M），对于‘ij’索引，输出的形状为（M，N）。在输入长度为 M、N 和 P 的 3-D
    情况下，对于‘xy’索引，输出形状为（N，M，P），对于‘ij’索引，输出形状为（M，N，P）。下面的代码片段说明了区别：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the 1-D and 0-D case, the indexing and sparse keywords have no effect.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在 1-D 和 0-D 情况下，索引和 sparse 关键字无效。
- en: Examples
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The result of [`meshgrid`](#numpy.meshgrid "numpy.meshgrid") is a coordinate
    grid:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[`meshgrid`](#numpy.meshgrid "numpy.meshgrid") 的结果是坐标网格：'
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![../../_images/numpy-meshgrid-1_00_00.png](../Images/f77edb9313db215a503300c785951127.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/numpy-meshgrid-1_00_00.png](../Images/f77edb9313db215a503300c785951127.png)'
- en: You can create sparse output arrays to save memory and computation time.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以创建稀疏输出数组以节省内存和计算时间。
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[`meshgrid`](#numpy.meshgrid "numpy.meshgrid") is very useful to evaluate functions
    on a grid. If the function depends on all coordinates, both dense and sparse outputs
    can be used.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[`meshgrid`](#numpy.meshgrid "numpy.meshgrid")非常有用，可以在网格上评估函数。如果函数依赖于所有坐标，则可以使用密集和稀疏输出。'
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![../../_images/numpy-meshgrid-1_01_00.png](../Images/4138ec295c16fb3a9dc3f3194b323b1a.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/numpy-meshgrid-1_01_00.png](../Images/4138ec295c16fb3a9dc3f3194b323b1a.png)'
