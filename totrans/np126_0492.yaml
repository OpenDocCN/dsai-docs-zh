- en: numpy.errstate
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.errstate
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.errstate.html](https://numpy.org/doc/1.26/reference/generated/numpy.errstate.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.errstate.html](https://numpy.org/doc/1.26/reference/generated/numpy.errstate.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Context manager for floating-point error handling.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点错误处理的上下文管理器。
- en: Using an instance of [`errstate`](#numpy.errstate "numpy.errstate") as a context
    manager allows statements in that context to execute with a known error handling
    behavior. Upon entering the context the error handling is set with [`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr") and [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall"),
    and upon exiting it is reset to what it was before.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`errstate`](#numpy.errstate "numpy.errstate")的实例作为上下文管理器，允许该上下文中的语句以已知的错误处理行为执行。进入上下文时，使用[`seterr`](numpy.seterr.html#numpy.seterr
    "numpy.seterr")和[`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall")设置错误处理，并在退出时将其重置为之前的状态。
- en: 'Changed in version 1.17.0: [`errstate`](#numpy.errstate "numpy.errstate") is
    also usable as a function decorator, saving a level of indentation if an entire
    function is wrapped. See [`contextlib.ContextDecorator`](https://docs.python.org/3/library/contextlib.html#contextlib.ContextDecorator
    "(in Python v3.11)") for more information.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 自1.17.0版更改：[`errstate`](#numpy.errstate "numpy.errstate")也可以作为函数装饰器使用，如果需要包装整个函数，则可节省一个缩进级别。有关更多信息，请参见[`contextlib.ContextDecorator`](https://docs.python.org/3/library/contextlib.html#contextlib.ContextDecorator
    "(in Python v3.11)")。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**kwargs**{divide, over, under, invalid}'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**kwargs**{divide, over, under, invalid}'
- en: Keyword arguments. The valid keywords are the possible floating-point exceptions.
    Each keyword should have a string value that defines the treatment for the particular
    error. Possible values are {‘ignore’, ‘warn’, ‘raise’, ‘call’, ‘print’, ‘log’}.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 关键字参数。有效关键字是可能的浮点异常。每个关键字应具有定义特定错误处理的字符串值。可能的值为{'ignore'，'warn'，'raise'，'call'，'print'，'log'}。
- en: See also
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr"), [`geterr`](numpy.geterr.html#numpy.geterr
    "numpy.geterr"), [`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall"),
    [`geterrcall`](numpy.geterrcall.html#numpy.geterrcall "numpy.geterrcall")'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr")，[`geterr`](numpy.geterr.html#numpy.geterr
    "numpy.geterr")，[`seterrcall`](numpy.seterrcall.html#numpy.seterrcall "numpy.seterrcall")，[`geterrcall`](numpy.geterrcall.html#numpy.geterrcall
    "numpy.geterrcall")'
- en: Notes
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: For complete documentation of the types of floating-point exceptions and treatment
    options, see [`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr").
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要完整了解浮点异常类型和处理选项，请参阅[`seterr`](numpy.seterr.html#numpy.seterr "numpy.seterr")的完整文档。
- en: Examples
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Outside the context the error handling behavior has not changed:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在上下文之外，错误处理行为并未改变：
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Methods
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`__call__`](numpy.errstate.__call__.html#numpy.errstate.__call__ "numpy.errstate.__call__")(func)
    | Call self as a function. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`__call__`](numpy.errstate.__call__.html#numpy.errstate.__call__ "numpy.errstate.__call__")(func)
    | 将自身作为函数调用。 |'
