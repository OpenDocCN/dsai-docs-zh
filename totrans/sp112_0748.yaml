- en: scipy.special.errstate
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.errstate.html#scipy.special.errstate](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.errstate.html#scipy.special.errstate)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Context manager for special-function error handling.
  prefs: []
  type: TYPE_NORMAL
- en: Using an instance of [`errstate`](#scipy.special.errstate "scipy.special.errstate")
    as a context manager allows statements in that context to execute with a known
    error handling behavior. Upon entering the context the error handling is set with
    [`seterr`](scipy.special.seterr.html#scipy.special.seterr "scipy.special.seterr"),
    and upon exiting it is restored to what it was before.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**kwargs**{all, singular, underflow, overflow, slow, loss, no_result, domain,
    arg, other}'
  prefs: []
  type: TYPE_NORMAL
- en: Keyword arguments. The valid keywords are possible special-function errors.
    Each keyword should have a string value that defines the treatment for the particular
    type of error. Values must be ‘ignore’, ‘warn’, or ‘other’. See [`seterr`](scipy.special.seterr.html#scipy.special.seterr
    "scipy.special.seterr") for details.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`geterr`](scipy.special.geterr.html#scipy.special.geterr "scipy.special.geterr")'
  prefs: []
  type: TYPE_NORMAL
- en: get the current way of handling special-function errors
  prefs: []
  type: TYPE_NORMAL
- en: '[`seterr`](scipy.special.seterr.html#scipy.special.seterr "scipy.special.seterr")'
  prefs: []
  type: TYPE_NORMAL
- en: set how special-function errors are handled
  prefs: []
  type: TYPE_NORMAL
- en: '[`numpy.errstate`](https://numpy.org/devdocs/reference/generated/numpy.errstate.html#numpy.errstate
    "(in NumPy v2.0.dev0)")'
  prefs: []
  type: TYPE_NORMAL
- en: similar numpy function for floating-point errors
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We can also raise on every category except one.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
