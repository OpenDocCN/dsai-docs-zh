- en: Kinematics (Docstrings)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/vector/api/kinematics.html](https://docs.sympy.org/latest/modules/physics/vector/api/kinematics.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This object represents a point in a dynamic system.
  prefs: []
  type: TYPE_NORMAL
- en: 'It stores the: position, velocity, and acceleration of a point. The position
    is a vector defined as the vector distance from a parent point to this point.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : string'
  prefs: []
  type: TYPE_NORMAL
- en: The display name of the Point
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '`symbols()` can be used to create multiple Points in a single step, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Sets the acceleration of this point with the 1-point theory.
  prefs: []
  type: TYPE_NORMAL
- en: 'The 1-point theory for point acceleration looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: ^N a^P = ^B a^P + ^N a^O + ^N alpha^B x r^OP + ^N omega^B x (^N omega^B x r^OP)
    + 2 ^N omega^B x ^B v^P
  prefs: []
  type: TYPE_NORMAL
- en: where O is a point fixed in B, P is a point moving in B, and B is rotating in
    frame N.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**otherpoint** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: The first point of the 1-point theory (O)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**outframe** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame we want this point’s acceleration defined in (N)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**fixedframe** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The intermediate frame in this calculation (B)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Sets the acceleration of this point with the 2-point theory.
  prefs: []
  type: TYPE_NORMAL
- en: 'The 2-point theory for point acceleration looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: ^N a^P = ^N a^O + ^N alpha^B x r^OP + ^N omega^B x (^N omega^B x r^OP)
  prefs: []
  type: TYPE_NORMAL
- en: where O and P are both points fixed in frame B, which is rotating in frame N.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**otherpoint** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: The first point of the 2-point theory (O)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**outframe** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame we want this point’s acceleration defined in (N)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**fixedframe** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame in which both points are fixed (B)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The acceleration Vector of this Point in a ReferenceFrame.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**frame** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame in which the returned acceleration vector will be defined in.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Creates a new point with a position defined from this point.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** : str'
  prefs: []
  type: TYPE_NORMAL
- en: The name for the new point
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**value** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: The position of the new point relative to this point
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Returns the partial velocities of the linear velocity vector of this point in
    the given frame with respect to one or more provided generalized speeds.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**frame** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame with which the velocity is defined in.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**gen_speeds** : functions of time'
  prefs: []
  type: TYPE_NORMAL
- en: The generalized speeds.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**partial_velocities** : tuple of Vector'
  prefs: []
  type: TYPE_NORMAL
- en: The partial velocity vectors corresponding to the provided generalized speeds.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Returns a Vector distance between this Point and the other Point.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**otherpoint** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: The otherpoint we are locating this one relative to
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Used to set the acceleration of this Point in a ReferenceFrame.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**frame** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame in which this point’s acceleration is defined
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**value** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: The vector value of this point’s acceleration in the frame
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Used to set the position of this point w.r.t. another point.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**otherpoint** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: The other point which this point’s location is defined relative to
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**value** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: The vector which defines the location of this point
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Sets the velocity Vector of this Point in a ReferenceFrame.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**frame** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame in which this point’s velocity is defined
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**value** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: The vector value of this point’s velocity in the frame
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Sets the velocity of this point with the 1-point theory.
  prefs: []
  type: TYPE_NORMAL
- en: 'The 1-point theory for point velocity looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: ^N v^P = ^B v^P + ^N v^O + ^N omega^B x r^OP
  prefs: []
  type: TYPE_NORMAL
- en: where O is a point fixed in B, P is a point moving in B, and B is rotating in
    frame N.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**otherpoint** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: The first point of the 1-point theory (O)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**outframe** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame we want this point’s velocity defined in (N)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**interframe** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The intermediate frame in this calculation (B)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Sets the velocity of this point with the 2-point theory.
  prefs: []
  type: TYPE_NORMAL
- en: 'The 2-point theory for point velocity looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: ^N v^P = ^N v^O + ^N omega^B x r^OP
  prefs: []
  type: TYPE_NORMAL
- en: where O and P are both points fixed in frame B, which is rotating in frame N.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**otherpoint** : Point'
  prefs: []
  type: TYPE_NORMAL
- en: The first point of the 2-point theory (O)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**outframe** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame we want this point’s velocity defined in (N)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**fixedframe** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame in which both points are fixed (B)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: The velocity Vector of this Point in the ReferenceFrame.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**frame** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame in which the returned velocity vector will be defined in
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Velocities will be automatically calculated if possible, otherwise a `ValueError`
    will be returned. If it is possible to calculate multiple different velocities
    from the relative points, the points defined most directly relative to this point
    will be used. In the case of inconsistent relative positions of points, incorrect
    velocities may be returned. It is up to the user to define prior relative positions
    and velocities of points in a self-consistent way.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: '## kinematic_equations'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Returns the three motion parameters - (acceleration, velocity, and position)
    as vectorial functions of time in the given frame.
  prefs: []
  type: TYPE_NORMAL
- en: If a higher order differential function is provided, the lower order functions
    are used as boundary conditions. For example, given the acceleration, the velocity
    and position parameters are taken as boundary conditions.
  prefs: []
  type: TYPE_NORMAL
- en: The values of time at which the boundary conditions are specified are taken
    from timevalue1(for position boundary condition) and timevalue2(for velocity boundary
    condition).
  prefs: []
  type: TYPE_NORMAL
- en: If any of the boundary conditions are not provided, they are taken to be zero
    by default (zero vectors, in case of vectorial inputs). If the boundary conditions
    are also functions of time, they are converted to constants by substituting the
    time values in the dynamicsymbols._t time Symbol.
  prefs: []
  type: TYPE_NORMAL
- en: This function can also be used for calculating rotational motion parameters.
    Have a look at the Parameters and Examples for more clarity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**frame** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The frame to express the motion parameters in
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**acceleration** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: Acceleration of the object/frame as a function of time
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**velocity** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: Velocity as function of time or as boundary condition of velocity at time =
    timevalue1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**position** : Vector'
  prefs: []
  type: TYPE_NORMAL
- en: Velocity as function of time or as boundary condition of velocity at time =
    timevalue1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**timevalue1** : sympyfiable'
  prefs: []
  type: TYPE_NORMAL
- en: Value of time for position boundary condition
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**timevalue2** : sympyfiable'
  prefs: []
  type: TYPE_NORMAL
- en: Value of time for velocity boundary condition
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Gives equations relating the qdot’s to u’s for a rotation type.
  prefs: []
  type: TYPE_NORMAL
- en: 'Supply rotation type and order as in orient. Speeds are assumed to be body-fixed;
    if we are defining the orientation of B in A using by rot_type, the angular velocity
    of B in A is assumed to be in the form: speed[0]*B.x + speed[1]*B.y + speed[2]*B.z'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**speeds** : list of length 3'
  prefs: []
  type: TYPE_NORMAL
- en: The body fixed angular velocity measure numbers.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**coords** : list of length 3 or 4'
  prefs: []
  type: TYPE_NORMAL
- en: The coordinates used to define the orientation of the two frames.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rot_type** : str'
  prefs: []
  type: TYPE_NORMAL
- en: The type of rotation used to create the equations. Body, Space, or Quaternion
    only
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rot_order** : str or int'
  prefs: []
  type: TYPE_NORMAL
- en: If applicable, the order of a series of rotations.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Returns a list of partial velocities with respect to the provided generalized
    speeds in the given reference frame for each of the supplied velocity vectors.
  prefs: []
  type: TYPE_NORMAL
- en: The output is a list of lists. The outer list has a number of elements equal
    to the number of supplied velocity vectors. The inner lists are, for each velocity
    vector, the partial derivatives of that velocity vector with respect to the generalized
    speeds supplied.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**vel_vecs** : iterable'
  prefs: []
  type: TYPE_NORMAL
- en: An iterable of velocity vectors (angular or linear).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**gen_speeds** : iterable'
  prefs: []
  type: TYPE_NORMAL
- en: An iterable of generalized speeds.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**frame** : ReferenceFrame'
  prefs: []
  type: TYPE_NORMAL
- en: The reference frame that the partial derivatives are going to be taken in.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
