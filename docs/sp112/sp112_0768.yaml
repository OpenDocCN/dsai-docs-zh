- en: scipy.special.jve
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.special.jve
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.jve.html#scipy.special.jve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.jve.html#scipy.special.jve)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.jve.html#scipy.special.jve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.jve.html#scipy.special.jve)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Exponentially scaled Bessel function of the first kind of order *v*.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 指数缩放的第一类贝塞尔函数，其次序为*v*。
- en: 'Defined as:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 定义如下：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**v**array_like'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**v** array_like'
- en: Order (float).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 次序（浮点数）。
- en: '**z**array_like'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**z** array_like'
- en: Argument (float or complex).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 参数（浮点数或复数）。
- en: '**out**ndarray, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**out** ndarray，可选项'
- en: Optional output array for the function values
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 函数值的可选输出数组
- en: 'Returns:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**J**scalar or ndarray'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**J** 标量或ndarray'
- en: Value of the exponentially scaled Bessel function.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 指数缩放的贝塞尔函数的值。
- en: See also
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`jv`](scipy.special.jv.html#scipy.special.jv "scipy.special.jv")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`jv`](scipy.special.jv.html#scipy.special.jv "scipy.special.jv")'
- en: Unscaled Bessel function of the first kind
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类未缩放贝塞尔函数
- en: Notes
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: For positive *v* values, the computation is carried out using the AMOS [[1]](#r36ae789cf8a8-1)
    *zbesj* routine, which exploits the connection to the modified Bessel function
    \(I_v\),
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于正*v*值，通过利用与修改贝塞尔函数\(I_v\)的联系的AMOS [[1]](#r36ae789cf8a8-1) *zbesj*例程进行计算，
- en: \[ \begin{align}\begin{aligned}J_v(z) = \exp(v\pi\imath/2) I_v(-\imath z)\qquad
    (\Im z > 0)\\J_v(z) = \exp(-v\pi\imath/2) I_v(\imath z)\qquad (\Im z < 0)\end{aligned}\end{align}
    \]
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: \[ \begin{align}\begin{aligned}J_v(z) = \exp(v\pi\imath/2) I_v(-\imath z)\qquad
    (\Im z > 0)\\J_v(z) = \exp(-v\pi\imath/2) I_v(\imath z)\qquad (\Im z < 0)\end{aligned}\end{align}
    \]
- en: For negative *v* values the formula,
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 对于负*v*值的公式，
- en: \[J_{-v}(z) = J_v(z) \cos(\pi v) - Y_v(z) \sin(\pi v)\]
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: \[J_{-v}(z) = J_v(z) \cos(\pi v) - Y_v(z) \sin(\pi v)\]
- en: is used, where \(Y_v(z)\) is the Bessel function of the second kind, computed
    using the AMOS routine *zbesy*. Note that the second term is exactly zero for
    integer *v*; to improve accuracy the second term is explicitly omitted for *v*
    values such that *v = floor(v)*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用，其中\(Y_v(z)\)是第二类贝塞尔函数，使用AMOS例程*zbesy*计算。请注意，对于整数*v*，第二项恰好为零；为提高精度，对于使*v =
    floor(v)*成立的*v*值，明确省略第二项。
- en: 'Exponentially scaled Bessel functions are useful for large arguments *z*: for
    these, the unscaled Bessel functions can easily under-or overflow.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大参数*z*，指数缩放的贝塞尔函数非常有用：对于这些函数，未缩放的贝塞尔函数可能轻松地上溢或下溢。
- en: References
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[[1](#id1)]'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1]](#id1)'
- en: Donald E. Amos, “AMOS, A Portable Package for Bessel Functions of a Complex
    Argument and Nonnegative Order”, [http://netlib.org/amos/](http://netlib.org/amos/)
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Donald E. Amos，“AMOS，一种用于复参数和非负次序贝塞尔函数的便携式软件包”，[http://netlib.org/amos/](http://netlib.org/amos/)
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: 'Compare the output of [`jv`](scipy.special.jv.html#scipy.special.jv "scipy.special.jv")
    and [`jve`](#scipy.special.jve "scipy.special.jve") for large complex arguments
    for *z* by computing their values for order `v=1` at `z=1000j`. We see that [`jv`](scipy.special.jv.html#scipy.special.jv
    "scipy.special.jv") overflows but [`jve`](#scipy.special.jve "scipy.special.jve")
    returns a finite number:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在次序`v=1`和在`z=1000j`处计算[`jv`](scipy.special.jv.html#scipy.special.jv "scipy.special.jv")和[`jve`](#scipy.special.jve
    "scipy.special.jve") 的值，比较它们在大复参数*z*处的输出。我们看到[`jv`](scipy.special.jv.html#scipy.special.jv
    "scipy.special.jv") 溢出，但[`jve`](#scipy.special.jve "scipy.special.jve") 返回一个有限数：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For real arguments for *z*, [`jve`](#scipy.special.jve "scipy.special.jve")
    returns the same as [`jv`](scipy.special.jv.html#scipy.special.jv "scipy.special.jv").
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于*z*的实数参数，[`jve`](#scipy.special.jve "scipy.special.jve") 返回与[`jv`](scipy.special.jv.html#scipy.special.jv
    "scipy.special.jv") 相同的值。
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The function can be evaluated for several orders at the same time by providing
    a list or NumPy array for *v*:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通过为*v*提供列表或NumPy数组，可以同时评估多个次序的函数：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the same way, the function can be evaluated at several points in one call
    by providing a list or NumPy array for *z*:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，通过为*z*提供列表或NumPy数组，可以一次在多个点评估函数：
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: It is also possible to evaluate several orders at several points at the same
    time by providing arrays for *v* and *z* with compatible shapes for broadcasting.
    Compute [`jve`](#scipy.special.jve "scipy.special.jve") for two different orders
    *v* and three points *z* resulting in a 2x3 array.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过为*v*和*z*提供兼容形状的数组进行广播，同时在几个点评估几个次序。在两个不同次序的*v*和三个点*z*上计算[`jve`](#scipy.special.jve
    "scipy.special.jve")，得到一个2x3的数组。
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
