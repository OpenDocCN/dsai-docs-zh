- en: SciPy 0.11.0 Release Notes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/release/0.11.0-notes.html](https://docs.scipy.org/doc/scipy-1.12.0/release/0.11.0-notes.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Contents
  prefs: []
  type: TYPE_NORMAL
- en: '[SciPy 0.11.0 Release Notes](#scipy-0-11-0-release-notes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[New features](#new-features)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sparse Graph Submodule](#sparse-graph-submodule)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`scipy.optimize` improvements](#scipy-optimize-improvements)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unified interfaces to minimizers](#unified-interfaces-to-minimizers)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unified interface to root finding algorithms](#unified-interface-to-root-finding-algorithms)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`scipy.linalg` improvements](#scipy-linalg-improvements)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[New matrix equation solvers](#new-matrix-equation-solvers)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[QZ and QR Decomposition](#qz-and-qr-decomposition)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Pascal matrices](#pascal-matrices)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sparse matrix construction and operations](#sparse-matrix-construction-and-operations)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[LSMR iterative solver](#lsmr-iterative-solver)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Discrete Sine Transform](#discrete-sine-transform)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`scipy.interpolate` improvements](#scipy-interpolate-improvements)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Binned statistics (`scipy.stats`)](#binned-statistics-scipy-stats)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Deprecated features](#deprecated-features)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Backwards incompatible changes](#backwards-incompatible-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Removal of `scipy.maxentropy`](#removal-of-scipy-maxentropy)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Minor change in behavior of `splev`](#minor-change-in-behavior-of-splev)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Behavior of `scipy.integrate.complex_ode`](#behavior-of-scipy-integrate-complex-ode)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Minor change in behavior of T-tests](#minor-change-in-behavior-of-t-tests)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other changes](#other-changes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Authors](#authors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'SciPy 0.11.0 is the culmination of 8 months of hard work. It contains many
    new features, numerous bug-fixes, improved test coverage and better documentation.
    Highlights of this release are:'
  prefs: []
  type: TYPE_NORMAL
- en: A new module has been added which provides a number of common sparse graph algorithms.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: New unified interfaces to the existing optimization and root finding functions
    have been added.
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: All users are encouraged to upgrade to this release, as there are a large number
    of bug-fixes and optimizations. Our development attention will now shift to bug-fix
    releases on the 0.11.x branch, and on adding new features on the master branch.
  prefs: []
  type: TYPE_NORMAL
- en: This release requires Python 2.4-2.7 or 3.1-3.2 and NumPy 1.5.1 or greater.
  prefs: []
  type: TYPE_NORMAL
- en: '[New features](#id2)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Sparse Graph Submodule](#id3)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The new submodule [`scipy.sparse.csgraph`](../reference/sparse.csgraph.html#module-scipy.sparse.csgraph
    "scipy.sparse.csgraph") implements a number of efficient graph algorithms for
    graphs stored as sparse adjacency matrices. Available routines are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[`connected_components`](../reference/generated/scipy.sparse.csgraph.connected_components.html#scipy.sparse.csgraph.connected_components
    "scipy.sparse.csgraph.connected_components") - determine connected components
    of a graph'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`laplacian`](../reference/generated/scipy.sparse.csgraph.laplacian.html#scipy.sparse.csgraph.laplacian
    "scipy.sparse.csgraph.laplacian") - compute the laplacian of a graph'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`shortest_path`](../reference/generated/scipy.sparse.csgraph.shortest_path.html#scipy.sparse.csgraph.shortest_path
    "scipy.sparse.csgraph.shortest_path") - compute the shortest path between points
    on a positive graph'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`dijkstra`](../reference/generated/scipy.sparse.csgraph.dijkstra.html#scipy.sparse.csgraph.dijkstra
    "scipy.sparse.csgraph.dijkstra") - use Dijkstra’s algorithm for shortest path'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`floyd_warshall`](../reference/generated/scipy.sparse.csgraph.floyd_warshall.html#scipy.sparse.csgraph.floyd_warshall
    "scipy.sparse.csgraph.floyd_warshall") - use the Floyd-Warshall algorithm for
    shortest path'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`breadth_first_order`](../reference/generated/scipy.sparse.csgraph.breadth_first_order.html#scipy.sparse.csgraph.breadth_first_order
    "scipy.sparse.csgraph.breadth_first_order") - compute a breadth-first order of
    nodes'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`depth_first_order`](../reference/generated/scipy.sparse.csgraph.depth_first_order.html#scipy.sparse.csgraph.depth_first_order
    "scipy.sparse.csgraph.depth_first_order") - compute a depth-first order of nodes'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`breadth_first_tree`](../reference/generated/scipy.sparse.csgraph.breadth_first_tree.html#scipy.sparse.csgraph.breadth_first_tree
    "scipy.sparse.csgraph.breadth_first_tree") - construct the breadth-first tree
    from a given node'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`depth_first_tree`](../reference/generated/scipy.sparse.csgraph.depth_first_tree.html#scipy.sparse.csgraph.depth_first_tree
    "scipy.sparse.csgraph.depth_first_tree") - construct a depth-first tree from a
    given node'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`minimum_spanning_tree`](../reference/generated/scipy.sparse.csgraph.minimum_spanning_tree.html#scipy.sparse.csgraph.minimum_spanning_tree
    "scipy.sparse.csgraph.minimum_spanning_tree") - construct the minimum spanning
    tree of a graph'
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`scipy.optimize` improvements](#id4)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The optimize module has received a lot of attention this release. In addition
    to added tests, documentation improvements, bug fixes and code clean-up, the following
    improvements were made:'
  prefs: []
  type: TYPE_NORMAL
- en: A unified interface to minimizers of univariate and multivariate functions has
    been added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A unified interface to root finding algorithms for multivariate functions has
    been added.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The L-BFGS-B algorithm has been updated to version 3.0.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unified interfaces to minimizers](#id5)'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Two new functions `scipy.optimize.minimize` and `scipy.optimize.minimize_scalar`
    were added to provide a common interface to minimizers of multivariate and univariate
    functions respectively. For multivariate functions, `scipy.optimize.minimize`
    provides an interface to methods for unconstrained optimization ([`fmin`](../reference/generated/scipy.optimize.fmin.html#scipy.optimize.fmin
    "scipy.optimize.fmin"), [`fmin_powell`](../reference/generated/scipy.optimize.fmin_powell.html#scipy.optimize.fmin_powell
    "scipy.optimize.fmin_powell"), [`fmin_cg`](../reference/generated/scipy.optimize.fmin_cg.html#scipy.optimize.fmin_cg
    "scipy.optimize.fmin_cg"), [`fmin_ncg`](../reference/generated/scipy.optimize.fmin_ncg.html#scipy.optimize.fmin_ncg
    "scipy.optimize.fmin_ncg"), [`fmin_bfgs`](../reference/generated/scipy.optimize.fmin_bfgs.html#scipy.optimize.fmin_bfgs
    "scipy.optimize.fmin_bfgs") and *anneal*) or constrained optimization ([`fmin_l_bfgs_b`](../reference/generated/scipy.optimize.fmin_l_bfgs_b.html#scipy.optimize.fmin_l_bfgs_b
    "scipy.optimize.fmin_l_bfgs_b"), [`fmin_tnc`](../reference/generated/scipy.optimize.fmin_tnc.html#scipy.optimize.fmin_tnc
    "scipy.optimize.fmin_tnc"), [`fmin_cobyla`](../reference/generated/scipy.optimize.fmin_cobyla.html#scipy.optimize.fmin_cobyla
    "scipy.optimize.fmin_cobyla") and [`fmin_slsqp`](../reference/generated/scipy.optimize.fmin_slsqp.html#scipy.optimize.fmin_slsqp
    "scipy.optimize.fmin_slsqp")). For univariate functions, `scipy.optimize.minimize_scalar`
    provides an interface to methods for unconstrained and bounded optimization ([`brent`](../reference/generated/scipy.optimize.brent.html#scipy.optimize.brent
    "scipy.optimize.brent"), [`golden`](../reference/generated/scipy.optimize.golden.html#scipy.optimize.golden
    "scipy.optimize.golden"), [`fminbound`](../reference/generated/scipy.optimize.fminbound.html#scipy.optimize.fminbound
    "scipy.optimize.fminbound")). This allows for easier comparing and switching between
    solvers.
  prefs: []
  type: TYPE_NORMAL
- en: '[Unified interface to root finding algorithms](#id6)'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The new function `scipy.optimize.root` provides a common interface to root finding
    algorithms for multivariate functions, embedding [`fsolve`](../reference/generated/scipy.optimize.fsolve.html#scipy.optimize.fsolve
    "scipy.optimize.fsolve"), [`leastsq`](../reference/generated/scipy.optimize.leastsq.html#scipy.optimize.leastsq
    "scipy.optimize.leastsq") and `nonlin` solvers.
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.linalg` improvements](#id7)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[New matrix equation solvers](#id8)'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Solvers for the Sylvester equation (`scipy.linalg.solve_sylvester`, discrete
    and continuous Lyapunov equations (`scipy.linalg.solve_lyapunov`, `scipy.linalg.solve_discrete_lyapunov`)
    and discrete and continuous algebraic Riccati equations (`scipy.linalg.solve_continuous_are`,
    `scipy.linalg.solve_discrete_are`) have been added to `scipy.linalg`. These solvers
    are often used in the field of linear control theory.
  prefs: []
  type: TYPE_NORMAL
- en: '[QZ and QR Decomposition](#id9)'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: It is now possible to calculate the QZ, or Generalized Schur, decomposition
    using `scipy.linalg.qz`. This function wraps the LAPACK routines sgges, dgges,
    cgges, and zgges.
  prefs: []
  type: TYPE_NORMAL
- en: The function `scipy.linalg.qr_multiply`, which allows efficient computation
    of the matrix product of Q (from a QR decomposition) and a vector, has been added.
  prefs: []
  type: TYPE_NORMAL
- en: '[Pascal matrices](#id10)'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: A function for creating Pascal matrices, `scipy.linalg.pascal`, was added.
  prefs: []
  type: TYPE_NORMAL
- en: '[Sparse matrix construction and operations](#id11)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Two new functions, `scipy.sparse.diags` and `scipy.sparse.block_diag`, were
    added to easily construct diagonal and block-diagonal sparse matrices respectively.
  prefs: []
  type: TYPE_NORMAL
- en: '`scipy.sparse.csc_matrix` and `csr_matrix` now support the operations `sin`,
    `tan`, `arcsin`, `arctan`, `sinh`, `tanh`, `arcsinh`, `arctanh`, `rint`, `sign`,
    `expm1`, `log1p`, `deg2rad`, `rad2deg`, `floor`, `ceil` and `trunc`. Previously,
    these operations had to be performed by operating on the matrices’ `data` attribute.'
  prefs: []
  type: TYPE_NORMAL
- en: '[LSMR iterative solver](#id12)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: LSMR, an iterative method for solving (sparse) linear and linear least-squares
    systems, was added as `scipy.sparse.linalg.lsmr`.
  prefs: []
  type: TYPE_NORMAL
- en: '[Discrete Sine Transform](#id13)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bindings for the discrete sine transform functions have been added to `scipy.fftpack`.
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.interpolate` improvements](#id14)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For interpolation in spherical coordinates, the three classes `scipy.interpolate.SmoothSphereBivariateSpline`,
    `scipy.interpolate.LSQSphereBivariateSpline`, and `scipy.interpolate.RectSphereBivariateSpline`
    have been added.
  prefs: []
  type: TYPE_NORMAL
- en: '[Binned statistics (`scipy.stats`)](#id15)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The stats module has gained functions to do binned statistics, which are a
    generalization of histograms, in 1-D, 2-D and multiple dimensions: `scipy.stats.binned_statistic`,
    `scipy.stats.binned_statistic_2d` and `scipy.stats.binned_statistic_dd`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Deprecated features](#id16)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`scipy.sparse.cs_graph_components` has been made a part of the sparse graph
    submodule, and renamed to `scipy.sparse.csgraph.connected_components`. Calling
    the former routine will result in a deprecation warning.'
  prefs: []
  type: TYPE_NORMAL
- en: '`scipy.misc.radon` has been deprecated. A more full-featured radon transform
    can be found in scikits-image.'
  prefs: []
  type: TYPE_NORMAL
- en: '`scipy.io.save_as_module` has been deprecated. A better way to save multiple
    Numpy arrays is the `numpy.savez` function.'
  prefs: []
  type: TYPE_NORMAL
- en: The *xa* and *xb* parameters for all distributions in `scipy.stats.distributions`
    already weren’t used; they have now been deprecated.
  prefs: []
  type: TYPE_NORMAL
- en: '[Backwards incompatible changes](#id17)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Removal of `scipy.maxentropy`](#id18)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `scipy.maxentropy` module, which was deprecated in the 0.10.0 release, has
    been removed. Logistic regression in scikits.learn is a good and modern alternative
    for this functionality.
  prefs: []
  type: TYPE_NORMAL
- en: '[Minor change in behavior of `splev`](#id19)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The spline evaluation function now behaves similarly to `interp1d` for size-1
    arrays. Previous behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Corrected behavior:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This affects also the `UnivariateSpline` classes.
  prefs: []
  type: TYPE_NORMAL
- en: '[Behavior of `scipy.integrate.complex_ode`](#id20)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The behavior of the `y` attribute of `complex_ode` is changed. Previously,
    it expressed the complex-valued solution in the form:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, it is directly the complex-valued solution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[Minor change in behavior of T-tests](#id21)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The T-tests `scipy.stats.ttest_ind`, `scipy.stats.ttest_rel` and `scipy.stats.ttest_1samp`
    have been changed so that 0 / 0 now returns NaN instead of 1.
  prefs: []
  type: TYPE_NORMAL
- en: '[Other changes](#id22)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The SuperLU sources in `scipy.sparse.linalg` have been updated to version 4.3
    from upstream.
  prefs: []
  type: TYPE_NORMAL
- en: The function `scipy.signal.bode`, which calculates magnitude and phase data
    for a continuous-time system, has been added.
  prefs: []
  type: TYPE_NORMAL
- en: The two-sample T-test `scipy.stats.ttest_ind` gained an option to compare samples
    with unequal variances, i.e. Welch’s T-test.
  prefs: []
  type: TYPE_NORMAL
- en: '`scipy.misc.logsumexp` now takes an optional `axis` keyword argument.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Authors](#id23)'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This release contains work by the following people (contributed at least one
    patch to this release, names in alphabetical order):'
  prefs: []
  type: TYPE_NORMAL
- en: Jeff Armstrong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chad Baker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brandon Beacher +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: behrisch +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: borishim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matthew Brett
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lars Buitinck
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luis Pedro Coelho +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Johann Cohen-Tanugi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Cournapeau
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dougal +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ali Ebrahim +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: endolith +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bjørn Forsman +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Robert Gantner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Gassner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christoph Gohlke
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ralf Gommers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Charles Harris
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Helmus +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andreas Hilboll +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Marc Honnorat +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jonathan Hunt +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maxim Ivanov +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thouis (Ray) Jones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Christopher Kuster +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Lawrence +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Denis Laxalde +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Travis Oliphant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joonas Paalasmaa +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabian Pedregosa
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josef Perktold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gavin Price +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jim Radford +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Andrew Schein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skipper Seabold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Silterra +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scott Sinclair
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alexis Tabary +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Martin Teichmann
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matt Terry +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nicky van Foreest +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jacob Vanderplas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patrick Varilly +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pauli Virtanen
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nils Wagner +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Darryl Wally +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stefan van der Walt
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Liming Wang +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: David Warde-Farley +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Warren Weckesser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastian Werk +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mike Wimmer +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tony S Yu +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A total of 55 people contributed to this release. People with a “+” by their
    names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
