["```py\nnumpy.meshgrid(*xi, copy=True, sparse=False, indexing='xy')\n```", "```py\nxv, yv = np.meshgrid(x, y, indexing='ij')\nfor i in range(nx):\n    for j in range(ny):\n        # treat xv[i,j], yv[i,j]\n\nxv, yv = np.meshgrid(x, y, indexing='xy')\nfor i in range(nx):\n    for j in range(ny):\n        # treat xv[j,i], yv[j,i] \n```", "```py\n>>> nx, ny = (3, 2)\n>>> x = np.linspace(0, 1, nx)\n>>> y = np.linspace(0, 1, ny)\n>>> xv, yv = np.meshgrid(x, y)\n>>> xv\narray([[0\\. , 0.5, 1\\. ],\n [0\\. , 0.5, 1\\. ]])\n>>> yv\narray([[0.,  0.,  0.],\n [1.,  1.,  1.]]) \n```", "```py\n>>> import matplotlib.pyplot as plt\n>>> plt.plot(xv, yv, marker='o', color='k', linestyle='none')\n>>> plt.show() \n```", "```py\n>>> xv, yv = np.meshgrid(x, y, sparse=True)\n>>> xv\narray([[0\\. ,  0.5,  1\\. ]])\n>>> yv\narray([[0.],\n [1.]]) \n```", "```py\n>>> x = np.linspace(-5, 5, 101)\n>>> y = np.linspace(-5, 5, 101)\n>>> # full coordinate arrays\n>>> xx, yy = np.meshgrid(x, y)\n>>> zz = np.sqrt(xx**2 + yy**2)\n>>> xx.shape, yy.shape, zz.shape\n((101, 101), (101, 101), (101, 101))\n>>> # sparse coordinate arrays\n>>> xs, ys = np.meshgrid(x, y, sparse=True)\n>>> zs = np.sqrt(xs**2 + ys**2)\n>>> xs.shape, ys.shape, zs.shape\n((1, 101), (101, 1), (101, 101))\n>>> np.array_equal(zz, zs)\nTrue \n```", "```py\n>>> h = plt.contourf(x, y, zs)\n>>> plt.axis('scaled')\n>>> plt.colorbar()\n>>> plt.show() \n```"]