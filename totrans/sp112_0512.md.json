["```py\nscipy.signal.bspline(x, n)\n```", "```py\n>>> import numpy as np\n>>> from scipy.interpolate import BSpline\n>>> knots = np.arange(-(n+1)/2, (n+3)/2)\n>>> out = BSpline.basis_element(knots)(x)\n>>> out[(x < knots[0]) | (x > knots[-1])] = 0.0 \n```", "```py\n>>> import numpy as np\n>>> from scipy.signal import bspline, cubic, quadratic\n>>> bspline(0.0, 1)\n1 \n```", "```py\n>>> knots = [-1.0, 0.0, -1.0]\n>>> bspline(knots, 2)\narray([0.125, 0.75, 0.125]) \n```", "```py\n>>> np.array_equal(bspline(knots, 2), quadratic(knots))\nTrue \n```", "```py\n>>> np.array_equal(bspline(knots, 3), cubic(knots))\nTrue \n```"]