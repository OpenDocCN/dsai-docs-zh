["```py\n    In [6]: titanic.sort_values(by=\"Age\").head()\n    Out[6]: \n     PassengerId  Survived  Pclass  ...     Fare Cabin  Embarked\n    803          804         1       3  ...   8.5167   NaN         C\n    755          756         1       2  ...  14.5000   NaN         S\n    644          645         1       3  ...  19.2583   NaN         C\n    469          470         1       3  ...  19.2583   NaN         C\n    78            79         1       2  ...  29.0000   NaN         S\n\n    [5 rows x 12 columns] \n    ```", "```py\n    In [7]: titanic.sort_values(by=['Pclass', 'Age'], ascending=False).head()\n    Out[7]: \n     PassengerId  Survived  Pclass  ...    Fare Cabin  Embarked\n    851          852         0       3  ...  7.7750   NaN         S\n    116          117         0       3  ...  7.7500   NaN         Q\n    280          281         0       3  ...  7.7500   NaN         Q\n    483          484         1       3  ...  9.5875   NaN         S\n    326          327         0       3  ...  6.2375   NaN         S\n\n    [5 rows x 12 columns] \n    ```", "```py\n# filter for no2 data only\nIn [8]: no2 = air_quality[air_quality[\"parameter\"] == \"no2\"] \n```", "```py\n# use 2 measurements (head) for each location (groupby)\nIn [9]: no2_subset = no2.sort_index().groupby([\"location\"]).head(2)\n\nIn [10]: no2_subset\nOut[10]: \n city country  ... value   unit\ndate.utc                                      ... \n2019-04-09 01:00:00+00:00  Antwerpen      BE  ...  22.5  \u00b5g/m\u00b3\n2019-04-09 01:00:00+00:00      Paris      FR  ...  24.4  \u00b5g/m\u00b3\n2019-04-09 02:00:00+00:00     London      GB  ...  67.0  \u00b5g/m\u00b3\n2019-04-09 02:00:00+00:00  Antwerpen      BE  ...  53.5  \u00b5g/m\u00b3\n2019-04-09 02:00:00+00:00      Paris      FR  ...  27.4  \u00b5g/m\u00b3\n2019-04-09 03:00:00+00:00     London      GB  ...  67.0  \u00b5g/m\u00b3\n\n[6 rows x 6 columns] \n```", "```py\n    In [11]: no2_subset.pivot(columns=\"location\", values=\"value\")\n    Out[11]: \n    location                   BETR801  FR04014  London Westminster\n    date.utc \n    2019-04-09 01:00:00+00:00     22.5     24.4                 NaN\n    2019-04-09 02:00:00+00:00     53.5     27.4                67.0\n    2019-04-09 03:00:00+00:00      NaN      NaN                67.0 \n    ```", "```py\nIn [12]: no2.head()\nOut[12]: \n city country location parameter  value   unit\ndate.utc \n2019-06-21 00:00:00+00:00  Paris      FR  FR04014       no2   20.0  \u00b5g/m\u00b3\n2019-06-20 23:00:00+00:00  Paris      FR  FR04014       no2   21.8  \u00b5g/m\u00b3\n2019-06-20 22:00:00+00:00  Paris      FR  FR04014       no2   26.5  \u00b5g/m\u00b3\n2019-06-20 21:00:00+00:00  Paris      FR  FR04014       no2   24.9  \u00b5g/m\u00b3\n2019-06-20 20:00:00+00:00  Paris      FR  FR04014       no2   21.4  \u00b5g/m\u00b3 \n```", "```py\nIn [13]: no2.pivot(columns=\"location\", values=\"value\").plot()\nOut[13]: <Axes: xlabel='date.utc'> \n```", "```py\n    In [14]: air_quality.pivot_table(\n     ....:    values=\"value\", index=\"location\", columns=\"parameter\", aggfunc=\"mean\"\n     ....: )\n     ....: \n    Out[14]: \n    parameter                 no2       pm25\n    location \n    BETR801             26.950920  23.169492\n    FR04014             29.374284        NaN\n    London Westminster  29.740050  13.443568 \n    ```", "```py\nIn [15]: air_quality.pivot_table(\n ....:    values=\"value\",\n ....:    index=\"location\",\n ....:    columns=\"parameter\",\n ....:    aggfunc=\"mean\",\n ....:    margins=True,\n ....: )\n ....: \nOut[15]: \nparameter                 no2       pm25        All\nlocation \nBETR801             26.950920  23.169492  24.982353\nFR04014             29.374284        NaN  29.374284\nLondon Westminster  29.740050  13.443568  21.491708\nAll                 29.430316  14.386849  24.222743 \n```", "```py\nair_quality.groupby([\"parameter\", \"location\"])[[\"value\"]].mean() \n```", "```py\nIn [16]: no2_pivoted = no2.pivot(columns=\"location\", values=\"value\").reset_index()\n\nIn [17]: no2_pivoted.head()\nOut[17]: \nlocation                  date.utc  BETR801  FR04014  London Westminster\n0        2019-04-09 01:00:00+00:00     22.5     24.4                 NaN\n1        2019-04-09 02:00:00+00:00     53.5     27.4                67.0\n2        2019-04-09 03:00:00+00:00     54.5     34.2                67.0\n3        2019-04-09 04:00:00+00:00     34.5     48.5                41.0\n4        2019-04-09 05:00:00+00:00     46.5     59.5                41.0 \n```", "```py\n    In [18]: no_2 = no2_pivoted.melt(id_vars=\"date.utc\")\n\n    In [19]: no_2.head()\n    Out[19]: \n     date.utc location  value\n    0 2019-04-09 01:00:00+00:00  BETR801   22.5\n    1 2019-04-09 02:00:00+00:00  BETR801   53.5\n    2 2019-04-09 03:00:00+00:00  BETR801   54.5\n    3 2019-04-09 04:00:00+00:00  BETR801   34.5\n    4 2019-04-09 05:00:00+00:00  BETR801   46.5 \n    ```", "```py\nIn [20]: no_2 = no2_pivoted.melt(\n ....:    id_vars=\"date.utc\",\n ....:    value_vars=[\"BETR801\", \"FR04014\", \"London Westminster\"],\n ....:    value_name=\"NO_2\",\n ....:    var_name=\"id_location\",\n ....: )\n ....: \n\nIn [21]: no_2.head()\nOut[21]: \n date.utc id_location  NO_2\n0 2019-04-09 01:00:00+00:00     BETR801  22.5\n1 2019-04-09 02:00:00+00:00     BETR801  53.5\n2 2019-04-09 03:00:00+00:00     BETR801  54.5\n3 2019-04-09 04:00:00+00:00     BETR801  34.5\n4 2019-04-09 05:00:00+00:00     BETR801  46.5 \n```", "```py\n    In [6]: titanic.sort_values(by=\"Age\").head()\n    Out[6]: \n     PassengerId  Survived  Pclass  ...     Fare Cabin  Embarked\n    803          804         1       3  ...   8.5167   NaN         C\n    755          756         1       2  ...  14.5000   NaN         S\n    644          645         1       3  ...  19.2583   NaN         C\n    469          470         1       3  ...  19.2583   NaN         C\n    78            79         1       2  ...  29.0000   NaN         S\n\n    [5 rows x 12 columns] \n    ```", "```py\n    In [7]: titanic.sort_values(by=['Pclass', 'Age'], ascending=False).head()\n    Out[7]: \n     PassengerId  Survived  Pclass  ...    Fare Cabin  Embarked\n    851          852         0       3  ...  7.7750   NaN         S\n    116          117         0       3  ...  7.7500   NaN         Q\n    280          281         0       3  ...  7.7500   NaN         Q\n    483          484         1       3  ...  9.5875   NaN         S\n    326          327         0       3  ...  6.2375   NaN         S\n\n    [5 rows x 12 columns] \n    ```", "```py\n# filter for no2 data only\nIn [8]: no2 = air_quality[air_quality[\"parameter\"] == \"no2\"] \n```", "```py\n# use 2 measurements (head) for each location (groupby)\nIn [9]: no2_subset = no2.sort_index().groupby([\"location\"]).head(2)\n\nIn [10]: no2_subset\nOut[10]: \n city country  ... value   unit\ndate.utc                                      ... \n2019-04-09 01:00:00+00:00  Antwerpen      BE  ...  22.5  \u00b5g/m\u00b3\n2019-04-09 01:00:00+00:00      Paris      FR  ...  24.4  \u00b5g/m\u00b3\n2019-04-09 02:00:00+00:00     London      GB  ...  67.0  \u00b5g/m\u00b3\n2019-04-09 02:00:00+00:00  Antwerpen      BE  ...  53.5  \u00b5g/m\u00b3\n2019-04-09 02:00:00+00:00      Paris      FR  ...  27.4  \u00b5g/m\u00b3\n2019-04-09 03:00:00+00:00     London      GB  ...  67.0  \u00b5g/m\u00b3\n\n[6 rows x 6 columns] \n```", "```py\n    In [11]: no2_subset.pivot(columns=\"location\", values=\"value\")\n    Out[11]: \n    location                   BETR801  FR04014  London Westminster\n    date.utc \n    2019-04-09 01:00:00+00:00     22.5     24.4                 NaN\n    2019-04-09 02:00:00+00:00     53.5     27.4                67.0\n    2019-04-09 03:00:00+00:00      NaN      NaN                67.0 \n    ```", "```py\nIn [12]: no2.head()\nOut[12]: \n city country location parameter  value   unit\ndate.utc \n2019-06-21 00:00:00+00:00  Paris      FR  FR04014       no2   20.0  \u00b5g/m\u00b3\n2019-06-20 23:00:00+00:00  Paris      FR  FR04014       no2   21.8  \u00b5g/m\u00b3\n2019-06-20 22:00:00+00:00  Paris      FR  FR04014       no2   26.5  \u00b5g/m\u00b3\n2019-06-20 21:00:00+00:00  Paris      FR  FR04014       no2   24.9  \u00b5g/m\u00b3\n2019-06-20 20:00:00+00:00  Paris      FR  FR04014       no2   21.4  \u00b5g/m\u00b3 \n```", "```py\nIn [13]: no2.pivot(columns=\"location\", values=\"value\").plot()\nOut[13]: <Axes: xlabel='date.utc'> \n```", "```py\n    In [14]: air_quality.pivot_table(\n     ....:    values=\"value\", index=\"location\", columns=\"parameter\", aggfunc=\"mean\"\n     ....: )\n     ....: \n    Out[14]: \n    parameter                 no2       pm25\n    location \n    BETR801             26.950920  23.169492\n    FR04014             29.374284        NaN\n    London Westminster  29.740050  13.443568 \n    ```", "```py\nIn [15]: air_quality.pivot_table(\n ....:    values=\"value\",\n ....:    index=\"location\",\n ....:    columns=\"parameter\",\n ....:    aggfunc=\"mean\",\n ....:    margins=True,\n ....: )\n ....: \nOut[15]: \nparameter                 no2       pm25        All\nlocation \nBETR801             26.950920  23.169492  24.982353\nFR04014             29.374284        NaN  29.374284\nLondon Westminster  29.740050  13.443568  21.491708\nAll                 29.430316  14.386849  24.222743 \n```", "```py\nair_quality.groupby([\"parameter\", \"location\"])[[\"value\"]].mean() \n```", "```py\nIn [16]: no2_pivoted = no2.pivot(columns=\"location\", values=\"value\").reset_index()\n\nIn [17]: no2_pivoted.head()\nOut[17]: \nlocation                  date.utc  BETR801  FR04014  London Westminster\n0        2019-04-09 01:00:00+00:00     22.5     24.4                 NaN\n1        2019-04-09 02:00:00+00:00     53.5     27.4                67.0\n2        2019-04-09 03:00:00+00:00     54.5     34.2                67.0\n3        2019-04-09 04:00:00+00:00     34.5     48.5                41.0\n4        2019-04-09 05:00:00+00:00     46.5     59.5                41.0 \n```", "```py\n    In [18]: no_2 = no2_pivoted.melt(id_vars=\"date.utc\")\n\n    In [19]: no_2.head()\n    Out[19]: \n     date.utc location  value\n    0 2019-04-09 01:00:00+00:00  BETR801   22.5\n    1 2019-04-09 02:00:00+00:00  BETR801   53.5\n    2 2019-04-09 03:00:00+00:00  BETR801   54.5\n    3 2019-04-09 04:00:00+00:00  BETR801   34.5\n    4 2019-04-09 05:00:00+00:00  BETR801   46.5 \n    ```", "```py\nIn [20]: no_2 = no2_pivoted.melt(\n ....:    id_vars=\"date.utc\",\n ....:    value_vars=[\"BETR801\", \"FR04014\", \"London Westminster\"],\n ....:    value_name=\"NO_2\",\n ....:    var_name=\"id_location\",\n ....: )\n ....: \n\nIn [21]: no_2.head()\nOut[21]: \n date.utc id_location  NO_2\n0 2019-04-09 01:00:00+00:00     BETR801  22.5\n1 2019-04-09 02:00:00+00:00     BETR801  53.5\n2 2019-04-09 03:00:00+00:00     BETR801  54.5\n3 2019-04-09 04:00:00+00:00     BETR801  34.5\n4 2019-04-09 05:00:00+00:00     BETR801  46.5 \n```"]