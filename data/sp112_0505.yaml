- en: scipy.signal.fftconvolve
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.fftconvolve
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Convolve two N-dimensional arrays using FFT.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 FFT 对两个 N 维数组进行卷积。
- en: Convolve *in1* and *in2* using the fast Fourier transform method, with the output
    size determined by the *mode* argument.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 使用快速 Fourier 变换方法对 *in1* 和 *in2* 进行卷积，输出大小由 *mode* 参数确定。
- en: This is generally much faster than [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve
    "scipy.signal.convolve") for large arrays (n > ~500), but can be slower when only
    a few output values are needed, and can only output float arrays (int or object
    array inputs will be cast to float).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大数组（n > ~500），这通常比 [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve
    "scipy.signal.convolve") 快得多，但是当仅需要少数输出值时可能较慢，并且只能输出浮点数数组（整数或对象数组输入将转换为浮点数）。
- en: As of v0.19, [`convolve`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")
    automatically chooses this method or the direct method based on an estimation
    of which is faster.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 自 v0.19 起，[`convolve`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")
    根据哪种方法更快的估计自动选择。
- en: 'Parameters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '参数:'
- en: '**in1**array_like'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**in1**array_like'
- en: First input.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个输入。
- en: '**in2**array_like'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**in2**array_like'
- en: Second input. Should have the same number of dimensions as *in1*.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个输入。应与 *in1* 具有相同数量的维度。
- en: '**mode**str {‘full’, ‘valid’, ‘same’}, optional'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**mode**str {''full'', ''valid'', ''same''}，可选'
- en: 'A string indicating the size of the output:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '指示输出大小的字符串:'
- en: '`full`'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`full`'
- en: The output is the full discrete linear convolution of the inputs. (Default)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 输出是输入的完整离散线性卷积。(默认)
- en: '`valid`'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`valid`'
- en: The output consists only of those elements that do not rely on the zero-padding.
    In ‘valid’ mode, either *in1* or *in2* must be at least as large as the other
    in every dimension.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 输出仅包含不依赖于零填充的元素。在 'valid' 模式下，*in1* 或 *in2* 在每个维度上必须至少与另一个一样大。
- en: '`same`'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`same`'
- en: The output is the same size as *in1*, centered with respect to the ‘full’ output.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 输出与 *in1* 大小相同，相对于 'full' 输出居中。
- en: '**axes**int or array_like of ints or None, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**axes**int 或 array_like 的整数或 None，可选'
- en: Axes over which to compute the convolution. The default is over all axes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 计算卷积的轴。默认为所有轴。
- en: 'Returns:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '返回:'
- en: '**out**array'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**out**array'
- en: An N-dimensional array containing a subset of the discrete linear convolution
    of *in1* with *in2*.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 包含 *in1* 与 *in2* 的离散线性卷积的子集的 N 维数组。
- en: See also
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`convolve`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[`convolve`](scipy.signal.convolve.html#scipy.signal.convolve "scipy.signal.convolve")'
- en: Uses the direct convolution or FFT convolution algorithm depending on which
    is faster.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 根据速度选择直接卷积或 FFT 卷积算法。
- en: '[`oaconvolve`](scipy.signal.oaconvolve.html#scipy.signal.oaconvolve "scipy.signal.oaconvolve")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[`oaconvolve`](scipy.signal.oaconvolve.html#scipy.signal.oaconvolve "scipy.signal.oaconvolve")'
- en: Uses the overlap-add method to do convolution, which is generally faster when
    the input arrays are large and significantly different in size.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当输入数组大且尺寸显著不同时，使用重叠-添加方法进行卷积通常更快。
- en: Examples
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Autocorrelation of white noise is an impulse.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 白噪声的自相关是一个脉冲。
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Gaussian blur implemented using FFT convolution. Notice the dark borders around
    the image, due to the zero-padding beyond its boundaries. The [`convolve2d`](scipy.signal.convolve2d.html#scipy.signal.convolve2d
    "scipy.signal.convolve2d") function allows for other types of image boundaries,
    but is far slower.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 FFT 卷积实现高斯模糊。请注意图像周围的黑暗边界，这是由于超出其边界的零填充所致。[`convolve2d`](scipy.signal.convolve2d.html#scipy.signal.convolve2d
    "scipy.signal.convolve2d") 函数允许其他类型的图像边界，但速度较慢。
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![../../_images/scipy-signal-fftconvolve-1_00.png](../Images/2765608e64e291f5a0de8c8102b7f8bb.png)![../../_images/scipy-signal-fftconvolve-1_01.png](../Images/4052979d354dc12955a908bf065674fd.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-fftconvolve-1_00.png](../Images/2765608e64e291f5a0de8c8102b7f8bb.png)![../../_images/scipy-signal-fftconvolve-1_01.png](../Images/4052979d354dc12955a908bf065674fd.png)'
