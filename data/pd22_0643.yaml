- en: pandas.Index
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.Index
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Index.html](https://pandas.pydata.org/docs/reference/api/pandas.Index.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.Index.html](https://pandas.pydata.org/docs/reference/api/pandas.Index.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Immutable sequence used for indexing and alignment.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 用于索引和对齐的不可变序列。
- en: The basic object storing axis labels for all pandas objects.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 存储所有pandas对象轴标签的基本对象。
- en: 'Changed in version 2.0.0: Index can hold all numpy numeric dtypes (except float16).
    Previously only int64/uint64/float64 dtypes were accepted.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本2.0.0开始更改：索引可以保存所有numpy数值dtypes（除了float16）。以前只接受int64/uint64/float64 dtypes。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**data**array-like (1-dimensional)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**data**类似数组（1维）'
- en: '**dtype**str, numpy.dtype, or ExtensionDtype, optional'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**str、numpy.dtype或ExtensionDtype，可选'
- en: Data type for the output Index. If not specified, this will be inferred from
    data. See the [user guide](../../user_guide/basics.html#basics-dtypes) for more
    usages.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 输出索引的数据类型���如果未指定，将从数据中推断。有关更多用法，请参阅[用户指南](../../user_guide/basics.html#basics-dtypes)。
- en: '**copy**bool, default False'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**copy**bool，默认值False'
- en: Copy input data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 复制输入数据。
- en: '**name**object'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**name**对象'
- en: Name to be stored in the index.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要存储在索引中的名称。
- en: '**tupleize_cols**bool (default: True)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**tupleize_cols**bool（默认值：True）'
- en: When True, attempt to create a MultiIndex if possible.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当为True时，尝试创建MultiIndex（如果可能）。
- en: See also
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`RangeIndex`](pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[`RangeIndex`](pandas.RangeIndex.html#pandas.RangeIndex "pandas.RangeIndex")'
- en: Index implementing a monotonic integer range.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 实现单调整数范围的索引。
- en: '[`CategoricalIndex`](pandas.CategoricalIndex.html#pandas.CategoricalIndex "pandas.CategoricalIndex")'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CategoricalIndex`](pandas.CategoricalIndex.html#pandas.CategoricalIndex "pandas.CategoricalIndex")'
- en: Index of [`Categorical`](pandas.Categorical.html#pandas.Categorical "pandas.Categorical")
    s.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 索引[`Categorical`](pandas.Categorical.html#pandas.Categorical "pandas.Categorical")
    s。
- en: '[`MultiIndex`](pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[`MultiIndex`](pandas.MultiIndex.html#pandas.MultiIndex "pandas.MultiIndex")'
- en: A multi-level, or hierarchical Index.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 多级或分层索引。
- en: '[`IntervalIndex`](pandas.IntervalIndex.html#pandas.IntervalIndex "pandas.IntervalIndex")'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[`IntervalIndex`](pandas.IntervalIndex.html#pandas.IntervalIndex "pandas.IntervalIndex")'
- en: An Index of [`Interval`](pandas.Interval.html#pandas.Interval "pandas.Interval")
    s.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一个[`Interval`](pandas.Interval.html#pandas.Interval "pandas.Interval") s的索引。
- en: '[`DatetimeIndex`](pandas.DatetimeIndex.html#pandas.DatetimeIndex "pandas.DatetimeIndex")'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DatetimeIndex`](pandas.DatetimeIndex.html#pandas.DatetimeIndex "pandas.DatetimeIndex")'
- en: Index of datetime64 data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: datetime64数据的索引。
- en: '[`TimedeltaIndex`](pandas.TimedeltaIndex.html#pandas.TimedeltaIndex "pandas.TimedeltaIndex")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`TimedeltaIndex`](pandas.TimedeltaIndex.html#pandas.TimedeltaIndex "pandas.TimedeltaIndex")'
- en: Index of timedelta64 data.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: timedelta64数据的索引。
- en: '[`PeriodIndex`](pandas.PeriodIndex.html#pandas.PeriodIndex "pandas.PeriodIndex")'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[`PeriodIndex`](pandas.PeriodIndex.html#pandas.PeriodIndex "pandas.PeriodIndex")'
- en: Index of Period data.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 期间数据的索引。
- en: Notes
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: An Index instance can **only** contain hashable objects. An Index instance *can
    not* hold numpy float16 dtype.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 索引实例**只能**包含可哈希对象。索引实例*不能*保存numpy float16 dtype。
- en: Examples
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Attributes
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 属性
- en: '| [`T`](pandas.Index.T.html#pandas.Index.T "pandas.Index.T") | Return the transpose,
    which is by definition self. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`T`](pandas.Index.T.html#pandas.Index.T "pandas.Index.T") | 返回转置，根据定义为自身。
    |'
- en: '| `array` | The ExtensionArray of the data backing this Series or Index. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| `array` | 支持此Series或Index的数据的ExtensionArray。 |'
- en: '| [`dtype`](pandas.Index.dtype.html#pandas.Index.dtype "pandas.Index.dtype")
    | Return the dtype object of the underlying data. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`dtype`](pandas.Index.dtype.html#pandas.Index.dtype "pandas.Index.dtype")
    | 返回基础数据的dtype对象。 |'
- en: '| [`empty`](pandas.Index.empty.html#pandas.Index.empty "pandas.Index.empty")
    |  |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`empty`](pandas.Index.empty.html#pandas.Index.empty "pandas.Index.empty")
    |  |'
- en: '| [`has_duplicates`](pandas.Index.has_duplicates.html#pandas.Index.has_duplicates
    "pandas.Index.has_duplicates") | Check if the Index has duplicate values. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`has_duplicates`](pandas.Index.has_duplicates.html#pandas.Index.has_duplicates
    "pandas.Index.has_duplicates") | 检查索引是否具有重复值。 |'
- en: '| [`hasnans`](pandas.Index.hasnans.html#pandas.Index.hasnans "pandas.Index.hasnans")
    | Return True if there are any NaNs. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`hasnans`](pandas.Index.hasnans.html#pandas.Index.hasnans "pandas.Index.hasnans")
    | 如果存在任何NaN，则返回True。 |'
- en: '| [`inferred_type`](pandas.Index.inferred_type.html#pandas.Index.inferred_type
    "pandas.Index.inferred_type") | Return a string of the type inferred from the
    values. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`inferred_type`](pandas.Index.inferred_type.html#pandas.Index.inferred_type
    "pandas.Index.inferred_type") | 返回从值推断的类型的字符串。 |'
- en: '| [`is_monotonic_decreasing`](pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") | Return a boolean if the values are equal
    or decreasing. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`is_monotonic_decreasing`](pandas.Index.is_monotonic_decreasing.html#pandas.Index.is_monotonic_decreasing
    "pandas.Index.is_monotonic_decreasing") | 如果值相等或递减，则返回布尔值。 |'
- en: '| [`is_monotonic_increasing`](pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") | Return a boolean if the values are equal
    or increasing. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`is_monotonic_increasing`](pandas.Index.is_monotonic_increasing.html#pandas.Index.is_monotonic_increasing
    "pandas.Index.is_monotonic_increasing") | 返回一个布尔值，如果值相等或递增则为真。 |'
- en: '| [`is_unique`](pandas.Index.is_unique.html#pandas.Index.is_unique "pandas.Index.is_unique")
    | Return if the index has unique values. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`is_unique`](pandas.Index.is_unique.html#pandas.Index.is_unique "pandas.Index.is_unique")
    | 返回索引是否具有唯一值。 |'
- en: '| [`name`](pandas.Index.name.html#pandas.Index.name "pandas.Index.name") |
    Return Index or MultiIndex name. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`name`](pandas.Index.name.html#pandas.Index.name "pandas.Index.name") |
    返回索引或多重索引的名称。 |'
- en: '| [`names`](pandas.Index.names.html#pandas.Index.names "pandas.Index.names")
    |  |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`names`](pandas.Index.names.html#pandas.Index.names "pandas.Index.names")
    |  |'
- en: '| [`nbytes`](pandas.Index.nbytes.html#pandas.Index.nbytes "pandas.Index.nbytes")
    | Return the number of bytes in the underlying data. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`nbytes`](pandas.Index.nbytes.html#pandas.Index.nbytes "pandas.Index.nbytes")
    | 返回底层数据中的字节数。 |'
- en: '| [`ndim`](pandas.Index.ndim.html#pandas.Index.ndim "pandas.Index.ndim") |
    Number of dimensions of the underlying data, by definition 1. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`ndim`](pandas.Index.ndim.html#pandas.Index.ndim "pandas.Index.ndim") |
    底层数据的维数，定义为1。 |'
- en: '| `nlevels` | Number of levels. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `nlevels` | 等级数。 |'
- en: '| [`shape`](pandas.Index.shape.html#pandas.Index.shape "pandas.Index.shape")
    | Return a tuple of the shape of the underlying data. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`shape`](pandas.Index.shape.html#pandas.Index.shape "pandas.Index.shape")
    | 返回底层数据的形状的元组。 |'
- en: '| [`size`](pandas.Index.size.html#pandas.Index.size "pandas.Index.size") |
    Return the number of elements in the underlying data. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`size`](pandas.Index.size.html#pandas.Index.size "pandas.Index.size") |
    返回底层数据中的元素数。 |'
- en: '| [`values`](pandas.Index.values.html#pandas.Index.values "pandas.Index.values")
    | Return an array representing the data in the Index. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`values`](pandas.Index.values.html#pandas.Index.values "pandas.Index.values")
    | 返回表示索引中数据的数组。 |'
- en: Methods
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '| [`all`](pandas.Index.all.html#pandas.Index.all "pandas.Index.all")(*args, **kwargs)
    | Return whether all elements are Truthy. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`all`](pandas.Index.all.html#pandas.Index.all "pandas.Index.all")(*args, **kwargs)
    | 返回所有元素是否为真。 |'
- en: '| [`any`](pandas.Index.any.html#pandas.Index.any "pandas.Index.any")(*args, **kwargs)
    | Return whether any element is Truthy. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`any`](pandas.Index.any.html#pandas.Index.any "pandas.Index.any")(*args, **kwargs)
    | 返回是否有任何元素为真。 |'
- en: '| [`append`](pandas.Index.append.html#pandas.Index.append "pandas.Index.append")(other)
    | Append a collection of Index options together. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`append`](pandas.Index.append.html#pandas.Index.append "pandas.Index.append")(other)
    | 将一组索引选项连接在一起。 |'
- en: '| [`argmax`](pandas.Index.argmax.html#pandas.Index.argmax "pandas.Index.argmax")([axis, skipna])
    | Return int position of the largest value in the Series. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`argmax`](pandas.Index.argmax.html#pandas.Index.argmax "pandas.Index.argmax")([axis, skipna])
    | 返回系列中最大值的整数位置。 |'
- en: '| [`argmin`](pandas.Index.argmin.html#pandas.Index.argmin "pandas.Index.argmin")([axis, skipna])
    | Return int position of the smallest value in the Series. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`argmin`](pandas.Index.argmin.html#pandas.Index.argmin "pandas.Index.argmin")([axis, skipna])
    | 返回系列中最小值的整数位置。 |'
- en: '| [`argsort`](pandas.Index.argsort.html#pandas.Index.argsort "pandas.Index.argsort")(*args, **kwargs)
    | Return the integer indices that would sort the index. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| [`argsort`](pandas.Index.argsort.html#pandas.Index.argsort "pandas.Index.argsort")(*args, **kwargs)
    | 返回将索引排序的整数索引。 |'
- en: '| [`asof`](pandas.Index.asof.html#pandas.Index.asof "pandas.Index.asof")(label)
    | Return the label from the index, or, if not present, the previous one. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| [`asof`](pandas.Index.asof.html#pandas.Index.asof "pandas.Index.asof")(label)
    | 返回索引中的标签，如果不存在，则返回前一个标签。 |'
- en: '| [`asof_locs`](pandas.Index.asof_locs.html#pandas.Index.asof_locs "pandas.Index.asof_locs")(where, mask)
    | Return the locations (indices) of labels in the index. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| [`asof_locs`](pandas.Index.asof_locs.html#pandas.Index.asof_locs "pandas.Index.asof_locs")(where, mask)
    | 返回索引中标签的位置（索引）。 |'
- en: '| [`astype`](pandas.Index.astype.html#pandas.Index.astype "pandas.Index.astype")(dtype[, copy])
    | Create an Index with values cast to dtypes. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| [`astype`](pandas.Index.astype.html#pandas.Index.astype "pandas.Index.astype")(dtype[, copy])
    | 创建一个将值转换为指定数据类型的索引。 |'
- en: '| [`copy`](pandas.Index.copy.html#pandas.Index.copy "pandas.Index.copy")([name, deep])
    | Make a copy of this object. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| [`copy`](pandas.Index.copy.html#pandas.Index.copy "pandas.Index.copy")([name, deep])
    | 复制此对象。 |'
- en: '| [`delete`](pandas.Index.delete.html#pandas.Index.delete "pandas.Index.delete")(loc)
    | Make new Index with passed location(-s) deleted. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| [`delete`](pandas.Index.delete.html#pandas.Index.delete "pandas.Index.delete")(loc)
    | 创建一个删除指定位置的新索引。 |'
- en: '| `diff`([periods]) | Computes the difference between consecutive values in
    the Index object. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `diff`([periods]) | 计算索引对象中连续值之间的差异。 |'
- en: '| [`difference`](pandas.Index.difference.html#pandas.Index.difference "pandas.Index.difference")(other[, sort])
    | Return a new Index with elements of index not in other. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [`difference`](pandas.Index.difference.html#pandas.Index.difference "pandas.Index.difference")(other[, sort])
    | 返回一个新的索引，其中包含不在其他索引中的元素。 |'
- en: '| [`drop`](pandas.Index.drop.html#pandas.Index.drop "pandas.Index.drop")(labels[, errors])
    | Make new Index with passed list of labels deleted. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [`drop`](pandas.Index.drop.html#pandas.Index.drop "pandas.Index.drop")(labels[, errors])
    | 使用传递的标签列表创建新的索引。 |'
- en: '| [`drop_duplicates`](pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates")(*[, keep]) | Return Index with duplicate values
    removed. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [`drop_duplicates`](pandas.Index.drop_duplicates.html#pandas.Index.drop_duplicates
    "pandas.Index.drop_duplicates")(*[, keep]) | 返回删除重复值后的索引。 |'
- en: '| [`droplevel`](pandas.Index.droplevel.html#pandas.Index.droplevel "pandas.Index.droplevel")([level])
    | Return index with requested level(s) removed. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [`droplevel`](pandas.Index.droplevel.html#pandas.Index.droplevel "pandas.Index.droplevel")([level])
    | 返回删除请求级别的索引。 |'
- en: '| [`dropna`](pandas.Index.dropna.html#pandas.Index.dropna "pandas.Index.dropna")([how])
    | Return Index without NA/NaN values. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| [`dropna`](pandas.Index.dropna.html#pandas.Index.dropna "pandas.Index.dropna")([how])
    | 返回没有 NA/NaN 值的索引。 |'
- en: '| [`duplicated`](pandas.Index.duplicated.html#pandas.Index.duplicated "pandas.Index.duplicated")([keep])
    | Indicate duplicate index values. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| [`duplicated`](pandas.Index.duplicated.html#pandas.Index.duplicated "pandas.Index.duplicated")([keep])
    | 指示重复的索引值。 |'
- en: '| [`equals`](pandas.Index.equals.html#pandas.Index.equals "pandas.Index.equals")(other)
    | Determine if two Index object are equal. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| [`equals`](pandas.Index.equals.html#pandas.Index.equals "pandas.Index.equals")(other)
    | 确定两个索引对象是否相等。 |'
- en: '| [`factorize`](pandas.Index.factorize.html#pandas.Index.factorize "pandas.Index.factorize")([sort, use_na_sentinel])
    | Encode the object as an enumerated type or categorical variable. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| [`factorize`](pandas.Index.factorize.html#pandas.Index.factorize "pandas.Index.factorize")([sort, use_na_sentinel])
    | 将对象编码为枚举类型或分类变量。 |'
- en: '| [`fillna`](pandas.Index.fillna.html#pandas.Index.fillna "pandas.Index.fillna")([value, downcast])
    | Fill NA/NaN values with the specified value. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| [`fillna`](pandas.Index.fillna.html#pandas.Index.fillna "pandas.Index.fillna")([value, downcast])
    | 使用指定的值填充 NA/NaN 值。 |'
- en: '| `format`([name, formatter, na_rep]) | Render a string representation of the
    Index. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `format`([name, formatter, na_rep]) | 渲染索引的字符串表示。 |'
- en: '| [`get_indexer`](pandas.Index.get_indexer.html#pandas.Index.get_indexer "pandas.Index.get_indexer")(target[, method, limit, tolerance])
    | Compute indexer and mask for new index given the current index. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| [`get_indexer`](pandas.Index.get_indexer.html#pandas.Index.get_indexer "pandas.Index.get_indexer")(target[, method, limit, tolerance])
    | 给定当前索引，计算新索引的索引器和掩码。 |'
- en: '| [`get_indexer_for`](pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for")(target) | Guaranteed return of an indexer even
    when non-unique. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| [`get_indexer_for`](pandas.Index.get_indexer_for.html#pandas.Index.get_indexer_for
    "pandas.Index.get_indexer_for")(target) | 即使不唯一，也保证返回一个索引器。 |'
- en: '| [`get_indexer_non_unique`](pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique")(target) | Compute indexer and mask for
    new index given the current index. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| [`get_indexer_non_unique`](pandas.Index.get_indexer_non_unique.html#pandas.Index.get_indexer_non_unique
    "pandas.Index.get_indexer_non_unique")(target) | 给定当前索引，计算新索引的索引器和掩码。 |'
- en: '| [`get_level_values`](pandas.Index.get_level_values.html#pandas.Index.get_level_values
    "pandas.Index.get_level_values")(level) | Return an Index of values for requested
    level. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| [`get_level_values`](pandas.Index.get_level_values.html#pandas.Index.get_level_values
    "pandas.Index.get_level_values")(level) | 返回请求级别的值索引。 |'
- en: '| [`get_loc`](pandas.Index.get_loc.html#pandas.Index.get_loc "pandas.Index.get_loc")(key)
    | Get integer location, slice or boolean mask for requested label. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| [`get_loc`](pandas.Index.get_loc.html#pandas.Index.get_loc "pandas.Index.get_loc")(key)
    | 获取请求标签的整数位置、切片或布尔遮罩。 |'
- en: '| [`get_slice_bound`](pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound")(label, side) | Calculate slice bound that corresponds
    to given label. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| [`get_slice_bound`](pandas.Index.get_slice_bound.html#pandas.Index.get_slice_bound
    "pandas.Index.get_slice_bound")(label, side) | 计算与给定标签对应的切片边界。 |'
- en: '| `groupby`(values) | Group the index labels by a given array of values. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `groupby`(values) | 根据给定的值数组对索引标签进行分组。 |'
- en: '| `holds_integer`() | (DEPRECATED) Whether the type is an integer type. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `holds_integer`() | （已弃用）类型是否为整数类型。 |'
- en: '| [`identical`](pandas.Index.identical.html#pandas.Index.identical "pandas.Index.identical")(other)
    | Similar to equals, but checks that object attributes and types are also equal.
    |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| [`identical`](pandas.Index.identical.html#pandas.Index.identical "pandas.Index.identical")(other)
    | 类似于 equals，但也检查对象属性和类型是否相等。 |'
- en: '| `infer_objects`([copy]) | If we have an object dtype, try to infer a non-object
    dtype. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `infer_objects`([copy]) | 如果有对象类型，���尝试推断非对象类型。 |'
- en: '| [`insert`](pandas.Index.insert.html#pandas.Index.insert "pandas.Index.insert")(loc, item)
    | Make new Index inserting new item at location. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| [`insert`](pandas.Index.insert.html#pandas.Index.insert "pandas.Index.insert")(loc, item)
    | 在指定位置插入新项目以创建新索引。 |'
- en: '| [`intersection`](pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection")(other[, sort]) | Form the intersection of two Index
    objects. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| [`intersection`](pandas.Index.intersection.html#pandas.Index.intersection
    "pandas.Index.intersection")(other[, sort]) | 形成两个索引对象的交集。 |'
- en: '| [`is_`](pandas.Index.is_.html#pandas.Index.is_ "pandas.Index.is_")(other)
    | More flexible, faster check like `is` but that works through views. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| [`is_`](pandas.Index.is_.html#pandas.Index.is_ "pandas.Index.is_")(other)
    | 更灵活、更快速的检查，类似于 `is`，但通过视图操作。 |'
- en: '| [`is_boolean`](pandas.Index.is_boolean.html#pandas.Index.is_boolean "pandas.Index.is_boolean")()
    | (DEPRECATED) Check if the Index only consists of booleans. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| [`is_boolean`](pandas.Index.is_boolean.html#pandas.Index.is_boolean "pandas.Index.is_boolean")()
    | (已弃用) 检查索引是否仅由布尔值组成。 |'
- en: '| [`is_categorical`](pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical")() | (DEPRECATED) Check if the Index holds categorical
    data. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| [`is_categorical`](pandas.Index.is_categorical.html#pandas.Index.is_categorical
    "pandas.Index.is_categorical")() | (已弃用) 检查索引是否包含分类数据。 |'
- en: '| [`is_floating`](pandas.Index.is_floating.html#pandas.Index.is_floating "pandas.Index.is_floating")()
    | (DEPRECATED) Check if the Index is a floating type. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| [`is_floating`](pandas.Index.is_floating.html#pandas.Index.is_floating "pandas.Index.is_floating")()
    | (已弃用) 检查索引是否为浮点类型。 |'
- en: '| [`is_integer`](pandas.Index.is_integer.html#pandas.Index.is_integer "pandas.Index.is_integer")()
    | (DEPRECATED) Check if the Index only consists of integers. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| [`is_integer`](pandas.Index.is_integer.html#pandas.Index.is_integer "pandas.Index.is_integer")()
    | (已弃用) 检查索引是否仅由整数组成。 |'
- en: '| [`is_interval`](pandas.Index.is_interval.html#pandas.Index.is_interval "pandas.Index.is_interval")()
    | (DEPRECATED) Check if the Index holds Interval objects. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| [`is_interval`](pandas.Index.is_interval.html#pandas.Index.is_interval "pandas.Index.is_interval")()
    | (已弃用) 检查索引是否包含区间对象。 |'
- en: '| [`is_numeric`](pandas.Index.is_numeric.html#pandas.Index.is_numeric "pandas.Index.is_numeric")()
    | (DEPRECATED) Check if the Index only consists of numeric data. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| [`is_numeric`](pandas.Index.is_numeric.html#pandas.Index.is_numeric "pandas.Index.is_numeric")()
    | (已弃用) 检查索引是否仅由数值数据组成。 |'
- en: '| [`is_object`](pandas.Index.is_object.html#pandas.Index.is_object "pandas.Index.is_object")()
    | (DEPRECATED) Check if the Index is of the object dtype. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| [`is_object`](pandas.Index.is_object.html#pandas.Index.is_object "pandas.Index.is_object")()
    | (已弃用) 检查索引是否为对象类型。 |'
- en: '| [`isin`](pandas.Index.isin.html#pandas.Index.isin "pandas.Index.isin")(values[, level])
    | Return a boolean array where the index values are in values. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| [`isin`](pandas.Index.isin.html#pandas.Index.isin "pandas.Index.isin")(values[, level])
    | 返回一个布尔数组，其中索引值在给定值中。 |'
- en: '| [`isna`](pandas.Index.isna.html#pandas.Index.isna "pandas.Index.isna")()
    | Detect missing values. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| [`isna`](pandas.Index.isna.html#pandas.Index.isna "pandas.Index.isna")()
    | 检测缺失值。 |'
- en: '| `isnull`() | Detect missing values. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `isnull`() | 检测缺失值。 |'
- en: '| [`item`](pandas.Index.item.html#pandas.Index.item "pandas.Index.item")()
    | Return the first element of the underlying data as a Python scalar. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| [`item`](pandas.Index.item.html#pandas.Index.item "pandas.Index.item")()
    | 将底层数据的第一个元素作为 Python 标量返回。 |'
- en: '| [`join`](pandas.Index.join.html#pandas.Index.join "pandas.Index.join")(other, *[, how, level, ...])
    | Compute join_index and indexers to conform data structures to the new index.
    |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| [`join`](pandas.Index.join.html#pandas.Index.join "pandas.Index.join")(other, *[, how, level, ...])
    | 计算 join_index 和 indexers，以使数据结构符合新索引。 |'
- en: '| [`map`](pandas.Index.map.html#pandas.Index.map "pandas.Index.map")(mapper[, na_action])
    | Map values using an input mapping or function. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| [`map`](pandas.Index.map.html#pandas.Index.map "pandas.Index.map")(mapper[, na_action])
    | 使用输入映射或函数映射值。 |'
- en: '| [`max`](pandas.Index.max.html#pandas.Index.max "pandas.Index.max")([axis, skipna])
    | Return the maximum value of the Index. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| [`max`](pandas.Index.max.html#pandas.Index.max "pandas.Index.max")([axis, skipna])
    | 返回索引的最大值。 |'
- en: '| [`memory_usage`](pandas.Index.memory_usage.html#pandas.Index.memory_usage
    "pandas.Index.memory_usage")([deep]) | Memory usage of the values. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| [`memory_usage`](pandas.Index.memory_usage.html#pandas.Index.memory_usage
    "pandas.Index.memory_usage")([deep]) | 值的内存使用情况。 |'
- en: '| [`min`](pandas.Index.min.html#pandas.Index.min "pandas.Index.min")([axis, skipna])
    | Return the minimum value of the Index. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| [`min`](pandas.Index.min.html#pandas.Index.min "pandas.Index.min")([axis, skipna])
    | 返回索引的最小值。 |'
- en: '| [`notna`](pandas.Index.notna.html#pandas.Index.notna "pandas.Index.notna")()
    | Detect existing (non-missing) values. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| [`notna`](pandas.Index.notna.html#pandas.Index.notna "pandas.Index.notna")()
    | 检测存在的（非缺失）值。 |'
- en: '| `notnull`() | Detect existing (non-missing) values. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| `notnull`() | 检测存在的（非缺失的）值。'
- en: '| [`nunique`](pandas.Index.nunique.html#pandas.Index.nunique "pandas.Index.nunique")([dropna])
    | Return number of unique elements in the object. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| [`nunique`](pandas.Index.nunique.html#pandas.Index.nunique "pandas.Index.nunique")([dropna])
    | 返回对象中唯一元素的数量。'
- en: '| [`putmask`](pandas.Index.putmask.html#pandas.Index.putmask "pandas.Index.putmask")(mask, value)
    | Return a new Index of the values set with the mask. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| [`putmask`](pandas.Index.putmask.html#pandas.Index.putmask "pandas.Index.putmask")(mask, value)
    | 返回使用掩码设置的值的新索引。'
- en: '| [`ravel`](pandas.Index.ravel.html#pandas.Index.ravel "pandas.Index.ravel")([order])
    | Return a view on self. |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| [`ravel`](pandas.Index.ravel.html#pandas.Index.ravel "pandas.Index.ravel")([order])
    | 返回自身的视图。'
- en: '| [`reindex`](pandas.Index.reindex.html#pandas.Index.reindex "pandas.Index.reindex")(target[, method, level, limit, ...])
    | Create index with target''s values. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| [`reindex`](pandas.Index.reindex.html#pandas.Index.reindex "pandas.Index.reindex")(target[, method, level, limit, ...])
    | 使用目标值创建索引。'
- en: '| [`rename`](pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")(name, *[, inplace])
    | Alter Index or MultiIndex name. |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| [`rename`](pandas.Index.rename.html#pandas.Index.rename "pandas.Index.rename")(name, *[, inplace])
    | 更改索引或多重索引的名称。'
- en: '| [`repeat`](pandas.Index.repeat.html#pandas.Index.repeat "pandas.Index.repeat")(repeats[, axis])
    | Repeat elements of a Index. |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| [`repeat`](pandas.Index.repeat.html#pandas.Index.repeat "pandas.Index.repeat")(repeats[, axis])
    | 重复索引的元素。'
- en: '| `round`([decimals]) | Round each value in the Index to the given number of
    decimals. |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| `round`([decimals]) | 将索引中的每个值四舍五入到给定的小数位数。'
- en: '| [`searchsorted`](pandas.Index.searchsorted.html#pandas.Index.searchsorted
    "pandas.Index.searchsorted")(value[, side, sorter]) | Find indices where elements
    should be inserted to maintain order. |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| [`searchsorted`](pandas.Index.searchsorted.html#pandas.Index.searchsorted
    "pandas.Index.searchsorted")(value[, side, sorter]) | 查找应插入元素以保持顺序的索引。'
- en: '| [`set_names`](pandas.Index.set_names.html#pandas.Index.set_names "pandas.Index.set_names")(names, *[, level, inplace])
    | Set Index or MultiIndex name. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| [`set_names`](pandas.Index.set_names.html#pandas.Index.set_names "pandas.Index.set_names")(names, *[, level, inplace])
    | 设置索引或多重索引的名称。'
- en: '| [`shift`](pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")([periods, freq])
    | Shift index by desired number of time frequency increments. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| [`shift`](pandas.Index.shift.html#pandas.Index.shift "pandas.Index.shift")([periods, freq])
    | 按所需的时间频率增量移动索引。'
- en: '| [`slice_indexer`](pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer")([start, end, step]) | Compute the slice indexer
    for input labels and step. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| [`slice_indexer`](pandas.Index.slice_indexer.html#pandas.Index.slice_indexer
    "pandas.Index.slice_indexer")([start, end, step]) | 计算输入标签和步长的切片索引器。'
- en: '| [`slice_locs`](pandas.Index.slice_locs.html#pandas.Index.slice_locs "pandas.Index.slice_locs")([start, end, step])
    | Compute slice locations for input labels. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| [`slice_locs`](pandas.Index.slice_locs.html#pandas.Index.slice_locs "pandas.Index.slice_locs")([start, end, step])
    | 计算输入标签的切片位置。'
- en: '| `sort`(*args, **kwargs) | Use sort_values instead. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `sort`(*args, **kwargs) | 使用 sort_values 代替。'
- en: '| [`sort_values`](pandas.Index.sort_values.html#pandas.Index.sort_values "pandas.Index.sort_values")(*[, return_indexer, ascending, ...])
    | Return a sorted copy of the index. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| [`sort_values`](pandas.Index.sort_values.html#pandas.Index.sort_values "pandas.Index.sort_values")(*[, return_indexer, ascending, ...])
    | 返回索引的排序副本。'
- en: '| `sortlevel`([level, ascending, ...]) | For internal compatibility with the
    Index API. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `sortlevel`([level, ascending, ...]) | 用于与索引 API 的内部兼容性。'
- en: '| [`symmetric_difference`](pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference")(other[, result_name, sort]) | Compute the
    symmetric difference of two Index objects. |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| [`symmetric_difference`](pandas.Index.symmetric_difference.html#pandas.Index.symmetric_difference
    "pandas.Index.symmetric_difference")(other[, result_name, sort]) | 计算两个索引对象的对称差。'
- en: '| [`take`](pandas.Index.take.html#pandas.Index.take "pandas.Index.take")(indices[, axis, allow_fill, fill_value])
    | Return a new Index of the values selected by the indices. |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| [`take`](pandas.Index.take.html#pandas.Index.take "pandas.Index.take")(indices[, axis, allow_fill, fill_value])
    | 返回由索引选定的值的新索引。'
- en: '| `to_flat_index`() | Identity method. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| `to_flat_index`() | 身份方法。'
- en: '| [`to_frame`](pandas.Index.to_frame.html#pandas.Index.to_frame "pandas.Index.to_frame")([index, name])
    | Create a DataFrame with a column containing the Index. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| [`to_frame`](pandas.Index.to_frame.html#pandas.Index.to_frame "pandas.Index.to_frame")([index, name])
    | 创建一个包含索引的列的 DataFrame。'
- en: '| [`to_list`](pandas.Index.to_list.html#pandas.Index.to_list "pandas.Index.to_list")()
    | Return a list of the values. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| [`to_list`](pandas.Index.to_list.html#pandas.Index.to_list "pandas.Index.to_list")()
    | 返回值的列表。'
- en: '| `to_numpy`([dtype, copy, na_value]) | A NumPy ndarray representing the values
    in this Series or Index. |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| `to_numpy`([dtype, copy, na_value]) | 表示此 Series 或 Index 中值的 NumPy ndarray。'
- en: '| [`to_series`](pandas.Index.to_series.html#pandas.Index.to_series "pandas.Index.to_series")([index, name])
    | Create a Series with both index and values equal to the index keys. |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| [`to_series`](pandas.Index.to_series.html#pandas.Index.to_series "pandas.Index.to_series")([index, name])
    | 创建一个索引和值都等于索引键的 Series。'
- en: '| `tolist`() | Return a list of the values. |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| `tolist`() | 返回值的列表。'
- en: '| `transpose`(*args, **kwargs) | Return the transpose, which is by definition
    self. |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| `transpose`(*args, **kwargs) | 返回转置，其定义为自身。'
- en: '| [`union`](pandas.Index.union.html#pandas.Index.union "pandas.Index.union")(other[, sort])
    | Form the union of two Index objects. |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| [`union`](pandas.Index.union.html#pandas.Index.union "pandas.Index.union")(other[, sort])
    | 形成两个索引对象的并集。'
- en: '| [`unique`](pandas.Index.unique.html#pandas.Index.unique "pandas.Index.unique")([level])
    | Return unique values in the index. |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| [`unique`](pandas.Index.unique.html#pandas.Index.unique "pandas.Index.unique")([level])
    | 返回索引中的唯一值。'
- en: '| [`value_counts`](pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts")([normalize, sort, ascending, ...]) | Return a Series
    containing counts of unique values. |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| [`value_counts`](pandas.Index.value_counts.html#pandas.Index.value_counts
    "pandas.Index.value_counts")([normalize, sort, ascending, ...]) | 返回包含唯一值计数的 Series。'
- en: '| [`view`](pandas.Index.view.html#pandas.Index.view "pandas.Index.view")([cls])
    |  |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| [`view`](pandas.Index.view.html#pandas.Index.view "pandas.Index.view")([cls])
    |  |'
- en: '| [`where`](pandas.Index.where.html#pandas.Index.where "pandas.Index.where")(cond[, other])
    | Replace values where the condition is False. |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| [`where`](pandas.Index.where.html#pandas.Index.where "pandas.Index.where")(cond[, other])
    | 替换条件为 False 的值。'
