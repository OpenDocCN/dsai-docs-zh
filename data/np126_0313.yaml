- en: numpy.core.defchararray.array
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.core.defchararray.array
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.core.defchararray.array.html](https://numpy.org/doc/1.26/reference/generated/numpy.core.defchararray.array.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.core.defchararray.array.html](https://numpy.org/doc/1.26/reference/generated/numpy.core.defchararray.array.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Create a [`chararray`](numpy.char.chararray.html#numpy.char.chararray "numpy.chararray").
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个 [`chararray`](numpy.char.chararray.html#numpy.char.chararray "numpy.chararray")。
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This class is provided for numarray backward-compatibility. New code (not concerned
    with numarray compatibility) should use arrays of type [`bytes_`](../arrays.scalars.html#numpy.bytes_
    "numpy.bytes_") or [`str_`](../arrays.scalars.html#numpy.str_ "numpy.str_") and
    use the free functions in `numpy.char` for fast vectorized string operations instead.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 此类是为了与 numarray 向后兼容而提供的。不涉及 numarray 兼容性的新代码应使用类型为[`bytes_`](../arrays.scalars.html#numpy.bytes_
    "numpy.bytes_")或[`str_`](../arrays.scalars.html#numpy.str_ "numpy.str_")的数组，并使用
    `numpy.char` 中的自由函数进行快速矢量化字符串操作。
- en: 'Versus a regular NumPy array of type *str* or *unicode*, this class adds the
    following functionality:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 与常规的类型为 *str* 或 *unicode* 的 NumPy 数组相比，此类新增了以下功能：
- en: values automatically have whitespace removed from the end when indexed
  id: totrans-7
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 索引时，值将自动删除末尾的空白
- en: ''
  id: totrans-8
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-9
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: comparison operators automatically remove whitespace from the end when comparing
    values
  id: totrans-10
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较操作符在比较值时会自动删除末尾的空白
- en: ''
  id: totrans-11
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-12
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: vectorized string operations are provided as methods (e.g. *str.endswith*) and
    infix operators (e.g. `+, *, %`)
  id: totrans-13
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 矢量化字符串操作以方法的形式提供（例如 *str.endswith*）和中缀运算符的方式提供（例如 `+, *, %`）
- en: 'Parameters:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**obj**array of str or unicode-like'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**obj**str 或类似 unicode 的数组'
- en: '**itemsize**int, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**itemsize**int, 可选'
- en: '*itemsize* is the number of characters per scalar in the resulting array. If
    *itemsize* is None, and *obj* is an object array or a Python list, the *itemsize*
    will be automatically determined. If *itemsize* is provided and *obj* is of type
    str or unicode, then the *obj* string will be chunked into *itemsize* pieces.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*itemsize* 是结果数组中每个标量的字符数。如果 *itemsize* 为 None，并且 *obj* 为对象数组或 Python 列表，则
    *itemsize* 将被自动确定。如果提供了 *itemsize* 并且 *obj* 的类型为 str 或 unicode，则 *obj* 字符串将被分成
    *itemsize* 个部分。'
- en: '**copy**bool, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**copy**bool, 可选'
- en: If true (default), then the object is copied. Otherwise, a copy will only be
    made if __array__ returns a copy, if obj is a nested sequence, or if a copy is
    needed to satisfy any of the other requirements (*itemsize*, unicode, *order*,
    etc.).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果为真（默认值），则复制对象。否则，仅当__array__返回复制，obj为嵌套序列，或者需要复制以满足其他要求（*itemsize*，unicode，*order*等）时将进行复制。
- en: '**unicode**bool, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**unicode**bool, 可选'
- en: 'When true, the resulting [`chararray`](numpy.char.chararray.html#numpy.char.chararray
    "numpy.chararray") can contain Unicode characters, when false only 8-bit characters.
    If unicode is None and *obj* is one of the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当为真时，生成的 [`chararray`](numpy.char.chararray.html#numpy.char.chararray "numpy.chararray")
    可以包含 Unicode 字符，当为假时只能包含 8 位字符。如果 unicode 为 None，且 *obj* 是以下之一：
- en: a [`chararray`](numpy.char.chararray.html#numpy.char.chararray "numpy.chararray"),
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 [`chararray`](numpy.char.chararray.html#numpy.char.chararray "numpy.chararray")
- en: ''
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-24
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: an ndarray of type *str* or *unicode*
  id: totrans-25
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型为 *str* 或 *unicode* 的数组
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-27
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: a Python str or unicode object,
  id: totrans-28
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python str 或 unicode 对象，
- en: then the unicode setting of the output array will be automatically determined.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输出数组的 unicode 设置将自动确定。
- en: '**order**{‘C’, ‘F’, ‘A’}, optional'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**order**{‘C’, ‘F’, ‘A’}, 可选'
- en: Specify the order of the array. If order is ‘C’ (default), then the array will
    be in C-contiguous order (last-index varies the fastest). If order is ‘F’, then
    the returned array will be in Fortran-contiguous order (first-index varies the
    fastest). If order is ‘A’, then the returned array may be in any order (either
    C-, Fortran-contiguous, or even discontiguous).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 指定数组的顺序。如果顺序为 'C'（默认），则数组将按 C 顺序排列（最后一个索引变化最快）。如果顺序为 'F'，则返回的数组将按 Fortran 顺序排列（第一个索引变化最快）。如果顺序为
    'A'，则返回的数组可以是任何顺序（C-，Fortran- 连续，甚至不连续的顺序）。
