- en: Version 0.7.0 (February 9, 2012)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/whatsnew/v0.7.0.html](https://pandas.pydata.org/docs/whatsnew/v0.7.0.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## New features'
  prefs: []
  type: TYPE_NORMAL
- en: New unified [merge function](../user_guide/merging.html#merging-join) for efficiently
    performing full gamut of database / relational-algebra operations. Refactored
    existing join methods to use the new infrastructure, resulting in substantial
    performance gains ([GH 220](https://github.com/pandas-dev/pandas/issues/220),
    [GH 249](https://github.com/pandas-dev/pandas/issues/249), [GH 267](https://github.com/pandas-dev/pandas/issues/267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New [unified concatenation function](../user_guide/merging.html#merging-concat)
    for concatenating Series, DataFrame or Panel objects along an axis. Can form union
    or intersection of the other axes. Improves performance of `Series.append` and
    `DataFrame.append` ([GH 468](https://github.com/pandas-dev/pandas/issues/468),
    [GH 479](https://github.com/pandas-dev/pandas/issues/479), [GH 273](https://github.com/pandas-dev/pandas/issues/273))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can pass multiple DataFrames to `DataFrame.append` to concatenate (stack) and
    multiple Series to `Series.append` too
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can](../user_guide/dsintro.html#basics-dataframe-from-list-of-dicts) pass
    list of dicts (e.g., a list of JSON objects) to DataFrame constructor ([GH 526](https://github.com/pandas-dev/pandas/issues/526))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can now [set multiple columns](../user_guide/indexing.html#indexing-columns-multiple)
    in a DataFrame via `__getitem__`, useful for transformation ([GH 342](https://github.com/pandas-dev/pandas/issues/342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Handle differently-indexed output values in `DataFrame.apply` ([GH 498](https://github.com/pandas-dev/pandas/issues/498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[Add](../user_guide/advanced.html#advanced-reorderlevels) `reorder_levels`
    method to Series and DataFrame ([GH 534](https://github.com/pandas-dev/pandas/issues/534))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/indexing.html#indexing-dictionarylike) dict-like `get`
    function to DataFrame and Panel ([GH 521](https://github.com/pandas-dev/pandas/issues/521))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/basics.html#basics-iterrows) `DataFrame.iterrows` method
    for efficiently iterating through the rows of a DataFrame'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `DataFrame.to_panel` with code adapted from `LongPanel.to_long`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/basics.html#basics-reindexing) `reindex_axis` method added
    to DataFrame'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/basics.html#basics-stats) `level` option to binary arithmetic
    functions on `DataFrame` and `Series`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/advanced.html#advanced-advanced-reindex) `level` option
    to the `reindex` and `align` methods on Series and DataFrame for broadcasting
    values across a level ([GH 542](https://github.com/pandas-dev/pandas/issues/542),
    [GH 552](https://github.com/pandas-dev/pandas/issues/552), others)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add attribute-based item access to `Panel` and add IPython completion ([GH 563](https://github.com/pandas-dev/pandas/issues/563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/visualization.html#visualization-basic) `logy` option to
    `Series.plot` for log-scaling on the Y axis'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/io.html#io-formatting) `index` and `header` options to
    `DataFrame.to_string`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can](../user_guide/merging.html#merging-multiple-join) pass multiple DataFrames
    to `DataFrame.join` to join on index ([GH 115](https://github.com/pandas-dev/pandas/issues/115))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can](../user_guide/merging.html#merging-multiple-join) pass multiple Panels
    to `Panel.join` ([GH 115](https://github.com/pandas-dev/pandas/issues/115))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/io.html#io-formatting) `justify` argument to `DataFrame.to_string`
    to allow different alignment of column headers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/groupby.html#groupby-attributes) `sort` option to GroupBy
    to allow disabling sorting of the group keys for potential speedups ([GH 595](https://github.com/pandas-dev/pandas/issues/595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can](../user_guide/dsintro.html#basics-dataframe-from-series) pass MaskedArray
    to Series constructor ([GH 563](https://github.com/pandas-dev/pandas/issues/563))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add Panel item access via attributes and IPython completion ([GH 554](https://github.com/pandas-dev/pandas/issues/554))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement `DataFrame.lookup`, fancy-indexing analogue for retrieving values
    given a sequence of row and column labels ([GH 338](https://github.com/pandas-dev/pandas/issues/338))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can pass a [list of functions](../user_guide/groupby.html#groupby-aggregate-multifunc)
    to aggregate with groupby on a DataFrame, yielding an aggregated result with hierarchical
    columns ([GH 166](https://github.com/pandas-dev/pandas/issues/166))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can call `cummin` and `cummax` on Series and DataFrame to get cumulative minimum
    and maximum, respectively ([GH 647](https://github.com/pandas-dev/pandas/issues/647))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_range` added as utility function to get min and max of a dataframe ([GH
    288](https://github.com/pandas-dev/pandas/issues/288))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `encoding` argument to `read_csv`, `read_table`, `to_csv` and `from_csv`
    for non-ascii text ([GH 717](https://github.com/pandas-dev/pandas/issues/717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/basics.html#basics-stats) `abs` method to pandas objects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/reshaping.html#reshaping-pivot) `crosstab` function for
    easily computing frequency tables'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/indexing.html#indexing-set-ops) `isin` method to index
    objects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/advanced.html#advanced-xs) `level` argument to `xs` method
    of DataFrame.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: API changes to integer indexing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One of the potentially riskiest API changes in 0.7.0, but also one of the most
    important, was a complete review of how **integer indexes** are handled with regard
    to label-based indexing. Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This is all exactly identical to the behavior before. However, if you ask for
    a key **not** contained in the Series, in versions 0.6.1 and prior, Series would
    *fall back* on a location-based lookup. This now raises a `KeyError`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This change also has the same impact on DataFrame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'In order to support purely integer-based indexing, the following methods have
    been added:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Method | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.iget_value(i)` | Retrieve value stored at location `i` |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.iget(i)` | Alias for `iget_value` |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.irow(i)` | Retrieve the `i`-th row |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.icol(j)` | Retrieve the `j`-th column |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.iget_value(i, j)` | Retrieve the value at row `i` and column `j`
    |'
  prefs: []
  type: TYPE_TB
- en: API tweaks regarding label-based slicing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Label-based slicing using `ix` now requires that the index be sorted (monotonic)
    **unless** both the start and endpoint are contained in the index:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Then this is OK:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'But this is not:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'If the index had been sorted, the “range selection” would have been possible:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Changes to Series `[]` operator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As as notational convenience, you can pass a sequence of labels or a label
    slice to a Series when getting and setting values via `[]` (i.e. the `__getitem__`
    and `__setitem__` methods). The behavior will be the same as passing similar input
    to `ix` **except in the case of integer indexing**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'In the case of integer indexes, the behavior will be exactly as before (shadowing
    `ndarray`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: If you wish to do indexing with sequences and slicing on an integer index with
    label semantics, use `ix`.
  prefs: []
  type: TYPE_NORMAL
- en: Other API changes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The deprecated `LongPanel` class has been completely removed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If `Series.sort` is called on a column of a DataFrame, an exception will now
    be raised. Before it was possible to accidentally mutate a DataFrame’s column
    by doing `df[col].sort()` instead of the side-effect free method `df[col].order()`
    ([GH 316](https://github.com/pandas-dev/pandas/issues/316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miscellaneous renames and deprecations which will (harmlessly) raise `FutureWarning`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`drop` added as an optional parameter to `DataFrame.reset_index` ([GH 699](https://github.com/pandas-dev/pandas/issues/699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Cythonized GroupBy aggregations](../user_guide/groupby.html#groupby-aggregate-builtin)
    no longer presort the data, thus achieving a significant speedup ([GH 93](https://github.com/pandas-dev/pandas/issues/93)).
    GroupBy aggregations with Python functions significantly sped up by clever manipulation
    of the ndarray data type in Cython ([GH 496](https://github.com/pandas-dev/pandas/issues/496)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better error message in DataFrame constructor when passed column labels don’t
    match data ([GH 497](https://github.com/pandas-dev/pandas/issues/497))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Substantially improve performance of multi-GroupBy aggregation when a Python
    function is passed, reuse ndarray object in Cython ([GH 496](https://github.com/pandas-dev/pandas/issues/496))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can store objects indexed by tuples and floats in HDFStore ([GH 492](https://github.com/pandas-dev/pandas/issues/492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don’t print length by default in Series.to_string, add `length` option ([GH
    489](https://github.com/pandas-dev/pandas/issues/489))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve Cython code for multi-groupby to aggregate without having to sort the
    data ([GH 93](https://github.com/pandas-dev/pandas/issues/93))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve MultiIndex reindexing speed by storing tuples in the MultiIndex, test
    for backwards unpickling compatibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve column reindexing performance by using specialized Cython take function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further performance tweaking of Series.__getitem__ for standard use cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid Index dict creation in some cases (i.e. when getting slices, etc.), regression
    from prior versions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Friendlier error message in setup.py if NumPy not installed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use common set of NA-handling operations (sum, mean, etc.) in Panel class also
    ([GH 536](https://github.com/pandas-dev/pandas/issues/536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Default name assignment when calling `reset_index` on DataFrame with a regular
    (non-hierarchical) index ([GH 476](https://github.com/pandas-dev/pandas/issues/476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Cythonized groupers when possible in Series/DataFrame stat ops with `level`
    parameter passed ([GH 545](https://github.com/pandas-dev/pandas/issues/545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ported skiplist data structure to C to speed up `rolling_median` by about 5-10x
    in most typical use cases ([GH 374](https://github.com/pandas-dev/pandas/issues/374))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 18 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Adam Klein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bayle Shanks +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Billington +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dieter Vandenbussche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabrizio Pollastri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graham Taylor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gregg Lind +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Klein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luca Beltrame
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olivier Grisel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skipper Seabold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kluyver
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Wiecki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes McKinney
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wouter Overmeire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fabriziop +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: theandygross +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: New unified [merge function](../user_guide/merging.html#merging-join) for efficiently
    performing full gamut of database / relational-algebra operations. Refactored
    existing join methods to use the new infrastructure, resulting in substantial
    performance gains ([GH 220](https://github.com/pandas-dev/pandas/issues/220),
    [GH 249](https://github.com/pandas-dev/pandas/issues/249), [GH 267](https://github.com/pandas-dev/pandas/issues/267))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New [unified concatenation function](../user_guide/merging.html#merging-concat)
    for concatenating Series, DataFrame or Panel objects along an axis. Can form union
    or intersection of the other axes. Improves performance of `Series.append` and
    `DataFrame.append` ([GH 468](https://github.com/pandas-dev/pandas/issues/468),
    [GH 479](https://github.com/pandas-dev/pandas/issues/479), [GH 273](https://github.com/pandas-dev/pandas/issues/273))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can pass multiple DataFrames to `DataFrame.append` to concatenate (stack) and
    multiple Series to `Series.append` too
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can](../user_guide/dsintro.html#basics-dataframe-from-list-of-dicts) pass
    list of dicts (e.g., a list of JSON objects) to DataFrame constructor ([GH 526](https://github.com/pandas-dev/pandas/issues/526))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can now [set multiple columns](../user_guide/indexing.html#indexing-columns-multiple)
    in a DataFrame via `__getitem__`, useful for transformation ([GH 342](https://github.com/pandas-dev/pandas/issues/342))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Handle differently-indexed output values in `DataFrame.apply` ([GH 498](https://github.com/pandas-dev/pandas/issues/498))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '[Add](../user_guide/advanced.html#advanced-reorderlevels) `reorder_levels`
    method to Series and DataFrame ([GH 534](https://github.com/pandas-dev/pandas/issues/534))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/indexing.html#indexing-dictionarylike) dict-like `get`
    function to DataFrame and Panel ([GH 521](https://github.com/pandas-dev/pandas/issues/521))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/basics.html#basics-iterrows) `DataFrame.iterrows` method
    for efficiently iterating through the rows of a DataFrame'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add `DataFrame.to_panel` with code adapted from `LongPanel.to_long`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/basics.html#basics-reindexing) `reindex_axis` method added
    to DataFrame'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/basics.html#basics-stats) `level` option to binary arithmetic
    functions on `DataFrame` and `Series`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/advanced.html#advanced-advanced-reindex) `level` option
    to the `reindex` and `align` methods on Series and DataFrame for broadcasting
    values across a level ([GH 542](https://github.com/pandas-dev/pandas/issues/542),
    [GH 552](https://github.com/pandas-dev/pandas/issues/552), others)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add attribute-based item access to `Panel` and add IPython completion ([GH 563](https://github.com/pandas-dev/pandas/issues/563))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/visualization.html#visualization-basic) `logy` option to
    `Series.plot` for log-scaling on the Y axis'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/io.html#io-formatting) `index` and `header` options to
    `DataFrame.to_string`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can](../user_guide/merging.html#merging-multiple-join) pass multiple DataFrames
    to `DataFrame.join` to join on index ([GH 115](https://github.com/pandas-dev/pandas/issues/115))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can](../user_guide/merging.html#merging-multiple-join) pass multiple Panels
    to `Panel.join` ([GH 115](https://github.com/pandas-dev/pandas/issues/115))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/io.html#io-formatting) `justify` argument to `DataFrame.to_string`
    to allow different alignment of column headers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Add](../user_guide/groupby.html#groupby-attributes) `sort` option to GroupBy
    to allow disabling sorting of the group keys for potential speedups ([GH 595](https://github.com/pandas-dev/pandas/issues/595))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Can](../user_guide/dsintro.html#basics-dataframe-from-series) pass MaskedArray
    to Series constructor ([GH 563](https://github.com/pandas-dev/pandas/issues/563))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add Panel item access via attributes and IPython completion ([GH 554](https://github.com/pandas-dev/pandas/issues/554))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement `DataFrame.lookup`, fancy-indexing analogue for retrieving values
    given a sequence of row and column labels ([GH 338](https://github.com/pandas-dev/pandas/issues/338))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can pass a [list of functions](../user_guide/groupby.html#groupby-aggregate-multifunc)
    to aggregate with groupby on a DataFrame, yielding an aggregated result with hierarchical
    columns ([GH 166](https://github.com/pandas-dev/pandas/issues/166))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can call `cummin` and `cummax` on Series and DataFrame to get cumulative minimum
    and maximum, respectively ([GH 647](https://github.com/pandas-dev/pandas/issues/647))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`value_range` added as utility function to get min and max of a dataframe ([GH
    288](https://github.com/pandas-dev/pandas/issues/288))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Added `encoding` argument to `read_csv`, `read_table`, `to_csv` and `from_csv`
    for non-ascii text ([GH 717](https://github.com/pandas-dev/pandas/issues/717))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/basics.html#basics-stats) `abs` method to pandas objects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/reshaping.html#reshaping-pivot) `crosstab` function for
    easily computing frequency tables'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/indexing.html#indexing-set-ops) `isin` method to index
    objects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Added](../user_guide/advanced.html#advanced-xs) `level` argument to `xs` method
    of DataFrame.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: API changes to integer indexing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One of the potentially riskiest API changes in 0.7.0, but also one of the most
    important, was a complete review of how **integer indexes** are handled with regard
    to label-based indexing. Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'This is all exactly identical to the behavior before. However, if you ask for
    a key **not** contained in the Series, in versions 0.6.1 and prior, Series would
    *fall back* on a location-based lookup. This now raises a `KeyError`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'This change also has the same impact on DataFrame:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'In order to support purely integer-based indexing, the following methods have
    been added:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Method | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.iget_value(i)` | Retrieve value stored at location `i` |'
  prefs: []
  type: TYPE_TB
- en: '| `Series.iget(i)` | Alias for `iget_value` |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.irow(i)` | Retrieve the `i`-th row |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.icol(j)` | Retrieve the `j`-th column |'
  prefs: []
  type: TYPE_TB
- en: '| `DataFrame.iget_value(i, j)` | Retrieve the value at row `i` and column `j`
    |'
  prefs: []
  type: TYPE_TB
- en: API tweaks regarding label-based slicing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Label-based slicing using `ix` now requires that the index be sorted (monotonic)
    **unless** both the start and endpoint are contained in the index:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Then this is OK:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'But this is not:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'If the index had been sorted, the “range selection” would have been possible:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Changes to Series `[]` operator
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As as notational convenience, you can pass a sequence of labels or a label
    slice to a Series when getting and setting values via `[]` (i.e. the `__getitem__`
    and `__setitem__` methods). The behavior will be the same as passing similar input
    to `ix` **except in the case of integer indexing**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'In the case of integer indexes, the behavior will be exactly as before (shadowing
    `ndarray`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: If you wish to do indexing with sequences and slicing on an integer index with
    label semantics, use `ix`.
  prefs: []
  type: TYPE_NORMAL
- en: Other API changes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The deprecated `LongPanel` class has been completely removed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If `Series.sort` is called on a column of a DataFrame, an exception will now
    be raised. Before it was possible to accidentally mutate a DataFrame’s column
    by doing `df[col].sort()` instead of the side-effect free method `df[col].order()`
    ([GH 316](https://github.com/pandas-dev/pandas/issues/316))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Miscellaneous renames and deprecations which will (harmlessly) raise `FutureWarning`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`drop` added as an optional parameter to `DataFrame.reset_index` ([GH 699](https://github.com/pandas-dev/pandas/issues/699))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performance improvements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Cythonized GroupBy aggregations](../user_guide/groupby.html#groupby-aggregate-builtin)
    no longer presort the data, thus achieving a significant speedup ([GH 93](https://github.com/pandas-dev/pandas/issues/93)).
    GroupBy aggregations with Python functions significantly sped up by clever manipulation
    of the ndarray data type in Cython ([GH 496](https://github.com/pandas-dev/pandas/issues/496)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better error message in DataFrame constructor when passed column labels don’t
    match data ([GH 497](https://github.com/pandas-dev/pandas/issues/497))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Substantially improve performance of multi-GroupBy aggregation when a Python
    function is passed, reuse ndarray object in Cython ([GH 496](https://github.com/pandas-dev/pandas/issues/496))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can store objects indexed by tuples and floats in HDFStore ([GH 492](https://github.com/pandas-dev/pandas/issues/492))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don’t print length by default in Series.to_string, add `length` option ([GH
    489](https://github.com/pandas-dev/pandas/issues/489))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve Cython code for multi-groupby to aggregate without having to sort the
    data ([GH 93](https://github.com/pandas-dev/pandas/issues/93))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve MultiIndex reindexing speed by storing tuples in the MultiIndex, test
    for backwards unpickling compatibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improve column reindexing performance by using specialized Cython take function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further performance tweaking of Series.__getitem__ for standard use cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid Index dict creation in some cases (i.e. when getting slices, etc.), regression
    from prior versions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Friendlier error message in setup.py if NumPy not installed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use common set of NA-handling operations (sum, mean, etc.) in Panel class also
    ([GH 536](https://github.com/pandas-dev/pandas/issues/536))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Default name assignment when calling `reset_index` on DataFrame with a regular
    (non-hierarchical) index ([GH 476](https://github.com/pandas-dev/pandas/issues/476))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Cythonized groupers when possible in Series/DataFrame stat ops with `level`
    parameter passed ([GH 545](https://github.com/pandas-dev/pandas/issues/545))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ported skiplist data structure to C to speed up `rolling_median` by about 5-10x
    in most typical use cases ([GH 374](https://github.com/pandas-dev/pandas/issues/374))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '## Contributors'
  prefs: []
  type: TYPE_NORMAL
- en: A total of 18 people contributed patches to this release. People with a “+”
    by their names contributed a patch for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Adam Klein
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bayle Shanks +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chris Billington +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dieter Vandenbussche
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabrizio Pollastri +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graham Taylor +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gregg Lind +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Josh Klein +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Luca Beltrame
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Olivier Grisel +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skipper Seabold
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Kluyver
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thomas Wiecki +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wes McKinney
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wouter Overmeire
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yaroslav Halchenko
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: fabriziop +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: theandygross +
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
