- en: scipy.optimize.NonlinearConstraint
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.optimize.NonlinearConstraint
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Nonlinear constraint on the variables.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 变量的非线性约束。
- en: 'The constraint has the general inequality form:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 约束具有一般的不等式形式：
- en: '[PRE1]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here the vector of independent variables x is passed as ndarray of shape (n,)
    and `fun` returns a vector with m components.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这里独立变量向量 x 作为形状为 (n,) 的 ndarray 传递，并且`fun`返回一个有 m 个分量的向量。
- en: It is possible to use equal bounds to represent an equality constraint or infinite
    bounds to represent a one-sided constraint.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用相等的边界来表示等式约束，或者使用无限边界来表示单边约束。
- en: 'Parameters:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fun**callable'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**fun**：可调用函数'
- en: The function defining the constraint. The signature is `fun(x) -> array_like,
    shape (m,)`.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 定义约束的函数。签名是 `fun(x) -> array_like, shape (m,)`。
- en: '**lb, ub**array_like'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**lb, ub**：array_like'
- en: 'Lower and upper bounds on the constraint. Each array must have the shape (m,)
    or be a scalar, in the latter case a bound will be the same for all components
    of the constraint. Use `np.inf` with an appropriate sign to specify a one-sided
    constraint. Set components of *lb* and *ub* equal to represent an equality constraint.
    Note that you can mix constraints of different types: interval, one-sided or equality,
    by setting different components of *lb* and *ub* as necessary.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 约束的下界和上界。每个数组必须具有形状 (m,) 或者是一个标量，后一种情况下约束对所有约束分量是相同的。使用 `np.inf` 与适当的符号指定单边约束。将
    *lb* 和 *ub* 的分量设置为相等表示等式约束。注意，可以通过设置 *lb* 和 *ub* 的不同分量来混合不同类型的约束：区间、单边或等式。
- en: '**jac**{callable, ‘2-point’, ‘3-point’, ‘cs’}, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**jac**：{可调用函数, ‘2-point’, ‘3-point’, ‘cs’}，可选'
- en: 'Method of computing the Jacobian matrix (an m-by-n matrix, where element (i,
    j) is the partial derivative of f[i] with respect to x[j]). The keywords {‘2-point’,
    ‘3-point’, ‘cs’} select a finite difference scheme for the numerical estimation.
    A callable must have the following signature: `jac(x) -> {ndarray, sparse matrix},
    shape (m, n)`. Default is ‘2-point’.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 计算雅可比矩阵的方法（一个 m×n 矩阵，其中元素 (i, j) 是 f[i] 对 x[j] 的偏导数）。关键字 {‘2-point’, ‘3-point’,
    ‘cs’} 选择数值估计的有限差分方案。一个可调用对象必须具有以下签名：`jac(x) -> {ndarray, sparse matrix}, shape
    (m, n)`。默认为 ‘2-point’。
- en: '**hess**{callable, ‘2-point’, ‘3-point’, ‘cs’, HessianUpdateStrategy, None},
    optional'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**hess**：{可调用函数, ‘2-point’, ‘3-point’, ‘cs’, HessianUpdateStrategy, None}，可选'
- en: 'Method for computing the Hessian matrix. The keywords {‘2-point’, ‘3-point’,
    ‘cs’} select a finite difference scheme for numerical estimation. Alternatively,
    objects implementing [`HessianUpdateStrategy`](scipy.optimize.HessianUpdateStrategy.html#scipy.optimize.HessianUpdateStrategy
    "scipy.optimize.HessianUpdateStrategy") interface can be used to approximate the
    Hessian. Currently available implementations are:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 计算 Hessian 矩阵的方法。关键字 {‘2-point’, ‘3-point’, ‘cs’} 选择数值估计的有限差分方案。或者，实现了 [`HessianUpdateStrategy`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.HessianUpdateStrategy.html#scipy.optimize.HessianUpdateStrategy
    "scipy.optimize.HessianUpdateStrategy") 接口的对象可以用来近似 Hessian。当前可用的实现是：
- en: '[`BFGS`](scipy.optimize.BFGS.html#scipy.optimize.BFGS "scipy.optimize.BFGS")
    (default option)'
  id: totrans-17
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`BFGS`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.BFGS.html#scipy.optimize.BFGS
    "scipy.optimize.BFGS") （默认选项）'
- en: ''
  id: totrans-18
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-19
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`SR1`](scipy.optimize.SR1.html#scipy.optimize.SR1 "scipy.optimize.SR1")'
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`SR1`](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.optimize.SR1.html#scipy.optimize.SR1
    "scipy.optimize.SR1")'
- en: 'A callable must return the Hessian matrix of `dot(fun, v)` and must have the
    following signature: `hess(x, v) -> {LinearOperator, sparse matrix, array_like},
    shape (n, n)`. Here `v` is ndarray with shape (m,) containing Lagrange multipliers.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可调用对象必须返回 `dot(fun, v)` 的 Hessian 矩阵，并且必须具有以下签名：`hess(x, v) -> {LinearOperator,
    sparse matrix, array_like}, shape (n, n)`。这里 `v` 是形状为 (m,) 的 ndarray，包含拉格朗日乘数。
- en: '**keep_feasible**array_like of bool, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**keep_feasible**：bool 类型的数组，可选'
- en: Whether to keep the constraint components feasible throughout iterations. A
    single value set this property for all components. Default is False. Has no effect
    for equality constraints.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 决定在迭代过程中是否保持约束分量的可行性。一个单一的值设置该属性对所有分量生效。默认值为 False。对于等式约束没有影响。
- en: '**finite_diff_rel_step: None or array_like, optional**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**finite_diff_rel_step**：None 或者 array_like，可选'
- en: Relative step size for the finite difference approximation. Default is None,
    which will select a reasonable value automatically depending on a finite difference
    scheme.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有限差分近似的相对步长。默认为 None，根据有限差分方案自动选择合理值。
- en: '**finite_diff_jac_sparsity: {None, array_like, sparse matrix}, optional**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**finite_diff_jac_sparsity: {None, array_like, sparse matrix}, optional**'
- en: Defines the sparsity structure of the Jacobian matrix for finite difference
    estimation, its shape must be (m, n). If the Jacobian has only few non-zero elements
    in *each* row, providing the sparsity structure will greatly speed up the computations.
    A zero entry means that a corresponding element in the Jacobian is identically
    zero. If provided, forces the use of ‘lsmr’ trust-region solver. If None (default)
    then dense differencing will be used.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 定义了有限差分估计雅可比矩阵的稀疏结构，其形状必须为 (m, n)。如果雅可比矩阵每行只有少量非零元素，在提供稀疏结构的情况下将大大加快计算速度。零条目意味着雅可比矩阵中对应元素恒为零。如果提供，则强制使用
    'lsmr' 信赖区域求解器。如果为 None（默认值），则将使用稠密差分。
- en: Notes
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: Finite difference schemes {‘2-point’, ‘3-point’, ‘cs’} may be used for approximating
    either the Jacobian or the Hessian. We, however, do not allow its use for approximating
    both simultaneously. Hence whenever the Jacobian is estimated via finite-differences,
    we require the Hessian to be estimated using one of the quasi-Newton strategies.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 可用于近似雅可比或海森矩阵的有限差分方案 {‘2-point’, ‘3-point’, ‘cs’}。然而，我们不允许同时用于两者的近似。因此，每当通过有限差分估计雅可比时，我们要求使用一种拟牛顿策略估计海森矩阵。
- en: The scheme ‘cs’ is potentially the most accurate, but requires the function
    to correctly handles complex inputs and be analytically continuable to the complex
    plane. The scheme ‘3-point’ is more accurate than ‘2-point’ but requires twice
    as many operations.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 方案 'cs' 可能是最准确的，但要求函数能正确处理复杂输入，并在复平面上解析延拓。方案 '3-point' 比 '2-point' 更精确，但操作数量是其两倍。
- en: Examples
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: Constrain `x[0] < sin(x[1]) + 1.9`
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 约束条件 `x[0] < sin(x[1]) + 1.9`
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
