["```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-pose.yaml\")  # build a new model from YAML model = YOLO(\"yolov8n-pose.pt\")  # load a pretrained model (recommended for training) model = YOLO(\"yolov8n-pose.yaml\").load(\"yolov8n-pose.pt\")  # build from YAML and transfer weights  # Train the model results = model.train(data=\"coco8-pose.yaml\", epochs=100, imgsz=640)` \n```", "```py\n`# Build a new model from YAML and start training from scratch yolo  pose  train  data=coco8-pose.yaml  model=yolov8n-pose.yaml  epochs=100  imgsz=640  # Start training from a pretrained *.pt model yolo  pose  train  data=coco8-pose.yaml  model=yolov8n-pose.pt  epochs=100  imgsz=640  # Build a new model from YAML, transfer pretrained weights to it and start training yolo  pose  train  data=coco8-pose.yaml  model=yolov8n-pose.yaml  pretrained=yolov8n-pose.pt  epochs=100  imgsz=640` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-pose.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom model  # Validate the model metrics = model.val()  # no arguments needed, dataset and settings remembered metrics.box.map  # map50-95 metrics.box.map50  # map50 metrics.box.map75  # map75 metrics.box.maps  # a list contains map50-95 of each category` \n```", "```py\n`yolo  pose  val  model=yolov8n-pose.pt  # val official model yolo  pose  val  model=path/to/best.pt  # val custom model` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-pose.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom model  # Predict with the model results = model(\"https://ultralytics.com/images/bus.jpg\")  # predict on an image` \n```", "```py\n`yolo  pose  predict  model=yolov8n-pose.pt  source='https://ultralytics.com/images/bus.jpg'  # predict with official model yolo  pose  predict  model=path/to/best.pt  source='https://ultralytics.com/images/bus.jpg'  # predict with custom model` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-pose.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom trained model  # Export the model model.export(format=\"onnx\")` \n```", "```py\n`yolo  export  model=yolov8n-pose.pt  format=onnx  # export official model yolo  export  model=path/to/best.pt  format=onnx  # export custom trained model` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-pose.yaml\")  # build a new model from YAML model = YOLO(\"yolov8n-pose.pt\")  # load a pretrained model (recommended for training)  # Train the model results = model.train(data=\"your-dataset.yaml\", epochs=100, imgsz=640)` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-pose.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom model  # Validate the model metrics = model.val()  # no arguments needed, dataset and settings remembered` \n```", "```py\n`from ultralytics import YOLO  # Load a model model = YOLO(\"yolov8n-pose.pt\")  # load an official model model = YOLO(\"path/to/best.pt\")  # load a custom trained model  # Export the model model.export(format=\"onnx\")` \n```"]