["```py\nsudo apt install -y gcc g++ gfortran libopenblas-dev liblapack-dev pkg-config python3-pip python3-dev \n```", "```py\nsudo apt build-dep scipy \n```", "```py\nsudo dnf install gcc-gfortran python3-devel openblas-devel lapack-devel pkgconfig \n```", "```py\nsudo dnf builddep scipy \n```", "```py\nsudo yum install gcc-gfortran python3-devel openblas-devel lapack-devel pkgconfig \n```", "```py\nsudo yum-builddep scipy \n```", "```py\nsudo pacman -S gcc-fortran openblas pkgconf \n```", "```py\nxcode-select --install \n```", "```py\nbrew install gfortran openblas pkg-config \n```", "```py\nchoco install rtools -y --no-progress --force --version=4.0.0.20220206 \n```", "```py\n# Either install all SciPy dev dependencies into a fresh conda environment\nmamba env create -f environment.yml\n\n# Or, install only the required build dependencies\nmamba install python numpy cython pythran pybind11 compilers openblas meson-python pkg-config\n\n# To build the latest stable release:\npip install scipy --no-build-isolation --no-binary scipy\n\n# To build a development version, you need a local clone of the SciPy git repository:\ngit clone https://github.com/scipy/scipy.git\ncd scipy\ngit submodule update --init\npip install . --no-build-isolation \n```", "```py\n# To build the latest stable release:\npip install scipy --no-binary scipy\n\n# To build a development version, you need a local clone of the SciPy git repository:\ngit clone https://github.com/scipy/scipy.git\ncd scipy\ngit submodule update --init\npip install . \n```", "```py\ngit clone https://github.com/scipy/scipy.git\ncd scipy\ngit submodule update --init \n```", "```py\nmamba env create -f environment.yml\nmamba activate scipy-dev \n```", "```py\npython -m venv venv\nsource venv/bin/activate \n```", "```py\npython -m venv venv\nsource venv/bin/activate \n```", "```py\npython -m venv venv\n.\\venv\\Scripts\\activate \n```", "```py\n# Build dependencies\npython -m pip install numpy cython pythran pybind11 meson-python ninja pydevtool rich-click\n\n# Test and optional runtime dependencies\npython -m pip install pytest pytest-xdist pytest-timeout pooch threadpoolctl asv gmpy2 mpmath hypothesis\n\n# Doc build dependencies\npython -m pip install sphinx \"pydata-sphinx-theme==0.9.0\" sphinx-design matplotlib numpydoc jupytext myst-nb\n\n# Dev dependencies (static typing and linting)\npython -m pip install mypy typing_extensions types-psutil pycodestyle ruff cython-lint \n```", "```py\npython dev.py build \n```", "```py\n# Note: the --no-build-isolation is important! meson-python will\n# auto-rebuild each time SciPy is imported by the Python interpreter.\npip install -e . --no-build-isolation\n\n# To run the tests for, e.g., the `scipy.linalg` module:\npytest scipy/linalg \n```"]