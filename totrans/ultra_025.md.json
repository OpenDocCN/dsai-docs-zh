["```py\n`from ultralytics import SAM  # Load a model model = SAM(\"sam_b.pt\")  # Display model information (optional) model.info()  # Run inference with bboxes prompt results = model(\"ultralytics/assets/zidane.jpg\", bboxes=[439, 437, 524, 709])  # Run inference with points prompt results = model(\"ultralytics/assets/zidane.jpg\", points=[900, 370], labels=[1])` \n```", "```py\n`from ultralytics import SAM  # Load a model model = SAM(\"sam_b.pt\")  # Display model information (optional) model.info()  # Run inference model(\"path/to/image.jpg\")` \n```", "```py\n`# Run inference with a SAM model yolo  predict  model=sam_b.pt  source=path/to/image.jpg` \n```", "```py\n`from ultralytics.models.sam import Predictor as SAMPredictor  # Create SAMPredictor overrides = dict(conf=0.25, task=\"segment\", mode=\"predict\", imgsz=1024, model=\"mobile_sam.pt\") predictor = SAMPredictor(overrides=overrides)  # Set image predictor.set_image(\"ultralytics/assets/zidane.jpg\")  # set with image file predictor.set_image(cv2.imread(\"ultralytics/assets/zidane.jpg\"))  # set with np.ndarray results = predictor(bboxes=[439, 437, 524, 709]) results = predictor(points=[900, 370], labels=[1])  # Reset image predictor.reset_image()` \n```", "```py\n`from ultralytics.models.sam import Predictor as SAMPredictor  # Create SAMPredictor overrides = dict(conf=0.25, task=\"segment\", mode=\"predict\", imgsz=1024, model=\"mobile_sam.pt\") predictor = SAMPredictor(overrides=overrides)  # Segment with additional args results = predictor(source=\"ultralytics/assets/zidane.jpg\", crop_n_layers=1, points_stride=64)` \n```", "```py\n`from ultralytics import SAM, YOLO, FastSAM  # Profile SAM-b model = SAM(\"sam_b.pt\") model.info() model(\"ultralytics/assets\")  # Profile MobileSAM model = SAM(\"mobile_sam.pt\") model.info() model(\"ultralytics/assets\")  # Profile FastSAM-s model = FastSAM(\"FastSAM-s.pt\") model.info() model(\"ultralytics/assets\")  # Profile YOLOv8n-seg model = YOLO(\"yolov8n-seg.pt\") model.info() model(\"ultralytics/assets\")` \n```", "```py\n`from ultralytics.data.annotator import auto_annotate  auto_annotate(data=\"path/to/images\", det_model=\"yolov8x.pt\", sam_model=\"sam_b.pt\")` \n```", "```py\n`@misc{kirillov2023segment,   title={Segment Anything},   author={Alexander Kirillov and Eric Mintun and Nikhila Ravi and Hanzi Mao and Chloe Rolland and Laura Gustafson and Tete Xiao and Spencer Whitehead and Alexander C. Berg and Wan-Yen Lo and Piotr Doll√°r and Ross Girshick},   year={2023},   eprint={2304.02643},   archivePrefix={arXiv},   primaryClass={cs.CV} }` \n```", "```py\n`from ultralytics import SAM  # Load a model model = SAM(\"sam_b.pt\")  # Segment with bounding box prompt model(\"ultralytics/assets/zidane.jpg\", bboxes=[439, 437, 524, 709])  # Segment with points prompt model(\"ultralytics/assets/zidane.jpg\", points=[900, 370], labels=[1])` \n```", "```py\n`yolo  predict  model=sam_b.pt  source=path/to/image.jpg` \n```", "```py\n`from ultralytics.data.annotator import auto_annotate  auto_annotate(data=\"path/to/images\", det_model=\"yolov8x.pt\", sam_model=\"sam_b.pt\")` \n```"]