- en: pandas.eval
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pandas.eval
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.eval.html](https://pandas.pydata.org/docs/reference/api/pandas.eval.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 译文：[https://pandas.pydata.org/docs/reference/api/pandas.eval.html](https://pandas.pydata.org/docs/reference/api/pandas.eval.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Evaluate a Python expression as a string using various backends.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 使用不同后端以字符串形式评估 Python 表达式。
- en: 'The following arithmetic operations are supported: `+`, `-`, `*`, `/`, `**`,
    `%`, `//` (python engine only) along with the following boolean operations: `|`
    (or), `&` (and), and `~` (not). Additionally, the `''pandas''` parser allows the
    use of [`and`](https://docs.python.org/3/reference/expressions.html#and "(in Python
    v3.12)"), [`or`](https://docs.python.org/3/reference/expressions.html#or "(in
    Python v3.12)"), and [`not`](https://docs.python.org/3/reference/expressions.html#not
    "(in Python v3.12)") with the same semantics as the corresponding bitwise operators.
    [`Series`](pandas.Series.html#pandas.Series "pandas.Series") and [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") objects are supported and behave as they would with plain
    ol’ Python evaluation.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 支持以下算术运算：`+`、`-`、`*`、`/`、`**`、`%`、`//`（仅限 python 引擎），以及以下布尔运算：`|`（或）、`&`（与）和
    `~`（非）。此外，'pandas' 解析器允许使用 [`and`](https://docs.python.org/zh-cn/3/reference/expressions.html#and
    "(在 Python v3.12 中)")、[`or`](https://docs.python.org/zh-cn/3/reference/expressions.html#or
    "(在 Python v3.12 中)") 和 [`not`](https://docs.python.org/zh-cn/3/reference/expressions.html#not
    "(在 Python v3.12 中)")，其语义与相应的位运算符相同。支持 [`Series`](pandas.Series.html#pandas.Series
    "pandas.Series") 和 [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame")
    对象，并且表现方式与普通的 Python 评估相同。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**expr**str'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**expr**str'
- en: The expression to evaluate. This string cannot contain any Python [statements](https://docs.python.org/3/reference/simple_stmts.html#simple-statements),
    only Python [expressions](https://docs.python.org/3/reference/simple_stmts.html#expression-statements).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要评估的表达式。此字符串不能包含任何 Python [语句](https://docs.python.org/zh-cn/3/reference/simple_stmts.html#simple-statements)，只能包含
    Python [表达式](https://docs.python.org/zh-cn/3/reference/simple_stmts.html#expression-statements)。
- en: '**parser**{‘pandas’, ‘python’}, default ‘pandas’'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**parser**{‘pandas’、‘python’}，默认为 ‘pandas’'
- en: The parser to use to construct the syntax tree from the expression. The default
    of `'pandas'` parses code slightly different than standard Python. Alternatively,
    you can parse an expression using the `'python'` parser to retain strict Python
    semantics. See the [enhancing performance](../../user_guide/enhancingperf.html#enhancingperf-eval)
    documentation for more details.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 用于从表达式构造语法树的解析器。默认值为 `'pandas'`，与标准 Python 稍有不同。或者，您可以使用 `'python'` 解析器解析表达式以保留严格的
    Python 语义。有关更多详细信息，请参阅[增强性能](../../user_guide/enhancingperf.html#enhancingperf-eval)文档。
- en: '**engine**{‘python’, ‘numexpr’}, default ‘numexpr’'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**engine**{‘python’、‘numexpr’}��默认为 ‘numexpr’'
- en: The engine used to evaluate the expression. Supported engines are
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 用于评估表达式的引擎。支持的引擎有
- en: 'None : tries to use `numexpr`, falls back to `python`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: None：尝试使用 `numexpr`，如果失败则退回到 `python`
- en: '`''numexpr''` : This default engine evaluates pandas objects using numexpr
    for large speed ups in complex expressions with large frames.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''numexpr''`：此默认引擎使用 numexpr 评估 pandas 对象，可大幅提高具有大型帧的复杂表达式的速度。'
- en: '`''python''` : Performs operations as if you had `eval`’d in top level python.
    This engine is generally not that useful.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''python''`：执行操作，就好像在顶层 Python 中执行了 `eval`。此引擎通常不太有用。'
- en: More backends may be available in the future.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 未来可能会提供更多后端。
- en: '**local_dict**dict or None, optional'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**local_dict**dict 或 None，可选'
- en: A dictionary of local variables, taken from locals() by default.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本地变量字典，默认为 locals()。
- en: '**global_dict**dict or None, optional'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**global_dict**dict 或 None，可选'
- en: A dictionary of global variables, taken from globals() by default.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 全局变量字典，默认为 globals()。
- en: '**resolvers**list of dict-like or None, optional'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**resolvers**dict-like 列表或 None，可选'
- en: A list of objects implementing the `__getitem__` special method that you can
    use to inject an additional collection of namespaces to use for variable lookup.
    For example, this is used in the [`query()`](pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") method to inject the `DataFrame.index` and `DataFrame.columns`
    variables that refer to their respective [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame
    "pandas.DataFrame") instance attributes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一个实现 `__getitem__` 特殊方法的对象列表，您可以使用它们来注入额外的命名空间集合，以用于变量查找。例如，在 [`query()`](pandas.DataFrame.query.html#pandas.DataFrame.query
    "pandas.DataFrame.query") 方法中使用它来注入 `DataFrame.index` 和 `DataFrame.columns` 变量，这些变量分别指代它们各自的
    [`DataFrame`](pandas.DataFrame.html#pandas.DataFrame "pandas.DataFrame") 实例属性。
- en: '**level**int, optional'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**level**int，可选'
- en: The number of prior stack frames to traverse and add to the current scope. Most
    users will **not** need to change this parameter.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要遍历并添加到当前作用域的先前堆栈帧数。大多数用户**不**需要更改此参数。
- en: '**target**object, optional, default None'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**目标**对象，可选，默认为None'
- en: This is the target object for assignment. It is used when there is variable
    assignment in the expression. If so, then target must support item assignment
    with string keys, and if a copy is being returned, it must also support .copy().
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这是用于赋值的目标对象。当表达式中有变量赋值时使用。如果是这样，那么目标必须支持使用字符串键进行项目分配，并且如果返回一个副本，则它还必须支持`.copy()`。
- en: '**inplace**bool, default False'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**inplace**布尔值，默认为False'
- en: If target is provided, and the expression mutates target, whether to modify
    target inplace. Otherwise, return a copy of target with the mutation.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提供了目标对象，并且表达式会改变目标对象，则决定是否就地修改目标对象。否则，返回带有变异的目标对象的副本。
- en: 'Returns:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: ndarray, numeric scalar, DataFrame, Series, or None
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ndarray、数值标量、DataFrame、Series或None
- en: The completion value of evaluating the given code or None if `inplace=True`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 评估给定代码的完成值，如果`inplace=True`则为None。
- en: 'Raises:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 引发：
- en: ValueError
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: ValueError
- en: 'There are many instances where such an error can be raised:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多情况会引发此类错误：
- en: target=None, but the expression is multiline.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标为None，但表达式是多行的。
- en: 'The expression is multiline, but not all them have item assignment. An example
    of such an arrangement is this:'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表达式是多行的，但并非所有都有项目分配。一个这样排列的示例是：
- en: a = b + 1 a + 2
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a = b + 1 a + 2
- en: Here, there are expressions on different lines, making it multiline, but the
    last line has no variable assigned to the output of a + 2.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里有不同行上的表达式，使其成为多行，但最后一行没有将a + 2的输出分配给任何变量。
- en: inplace=True, but the expression is missing item assignment.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: inplace=True，但表达式缺少项目分配。
- en: Item assignment is provided, but the target does not support string item assignment.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供了项目分配，但目标不支持字符串项目分配。
- en: Item assignment is provided and inplace=False, but the target does not support
    the .copy() method
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供了项目分配且inplace=False，但目标不支持`.copy()`方法
- en: See also
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[`DataFrame.query`](pandas.DataFrame.query.html#pandas.DataFrame.query "pandas.DataFrame.query")'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.query`](pandas.DataFrame.query.html#pandas.DataFrame.query "pandas.DataFrame.query")'
- en: Evaluates a boolean expression to query the columns of a frame.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 评估布尔表达式以查询帧的列。
- en: '[`DataFrame.eval`](pandas.DataFrame.eval.html#pandas.DataFrame.eval "pandas.DataFrame.eval")'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[`DataFrame.eval`](pandas.DataFrame.eval.html#pandas.DataFrame.eval "pandas.DataFrame.eval")'
- en: Evaluate a string describing operations on DataFrame columns.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 评估描述DataFrame列操作的字符串。
- en: Notes
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `dtype` of any objects involved in an arithmetic `%` operation are recursively
    cast to `float64`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 参与算术`%`操作的任何对象的`dtype`都会递归转换为`float64`。
- en: See the [enhancing performance](../../user_guide/enhancingperf.html#enhancingperf-eval)
    documentation for more details.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多详细信息，请参阅[提高性能](../../user_guide/enhancingperf.html#enhancingperf-eval)文档。
- en: Examples
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can add a new column using `pd.eval`:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`pd.eval`添加一个新列：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
