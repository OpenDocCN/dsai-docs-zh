- en: Second Quantization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 二次量子化
- en: Original text：[https://docs.sympy.org/latest/modules/physics/secondquant.html](https://docs.sympy.org/latest/modules/physics/secondquant.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原始文本：[https://docs.sympy.org/latest/modules/physics/secondquant.html](https://docs.sympy.org/latest/modules/physics/secondquant.html)
- en: Second quantization operators and states for bosons.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 玻色子的二次量子化算符和状态。
- en: This follow the formulation of Fetter and Welecka, “Quantum Theory of Many-Particle
    Systems.”
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这遵循费特和韦勒克的《多粒子系统的量子理论》的表述。
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Bosonic annihilation operator.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 玻色子湮灭算符。
- en: Examples
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Apply state to self if self is not symbolic and state is a FockStateKet, else
    multiply self by state.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果self不是符号化的且state是FockStateKet，则将state应用于self，否则将self乘以state。
- en: Examples
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Fermionic annihilation operator.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 费米子湮灭算符。
- en: '[PRE5]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Apply state to self if self is not symbolic and state is a FockStateKet, else
    multiply self by state.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果self不是符号化的且state是FockStateKet，则将state应用于self，否则将self乘以state。
- en: Examples
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE6]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Always destroy a quasi-particle? (annihilate hole or annihilate particle)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 总是销毁一个准粒子吗？（湮灭空穴或湮灭粒子）
- en: Examples
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE8]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Always create a quasi-particle? (create hole or create particle)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 总是创建一个准粒子吗？（创建空穴或创建粒子）
- en: Examples
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE11]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Can we destroy a quasi-particle? (annihilate hole or annihilate particle) If
    so, would that be above or below the fermi surface?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够销毁一个准粒子吗？（湮灭空穴或湮灭粒子）如果可以，那么这会在费米面之上还是之下？
- en: Examples
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE14]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Can we create a quasi-particle? (create hole or create particle) If so, would
    that be above or below the fermi surface?
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够创建一个准粒子吗？（创建空穴或创建粒子）如果可以，那么这会在费米面之上还是之下？
- en: Examples
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE17]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Stores upper and lower indices in separate Tuple’s.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 将上下标存储在单独的Tuple中。
- en: Each group of indices is assumed to be antisymmetric.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 每组指标假定为反对称。
- en: Examples
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE20]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: As you can see, the indices are automatically sorted to a canonical form.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，指标会自动排序为规范形式。
- en: '[PRE21]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Returns the lower indices.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 返回较低的指标。
- en: Examples
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE22]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Returns the symbol of the tensor.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 返回张量的符号。
- en: Examples
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE24]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Returns the upper indices.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 返回较高的指标。
- en: Examples
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE26]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: alias of [`AnnihilateBoson`](#sympy.physics.secondquant.AnnihilateBoson "sympy.physics.secondquant.AnnihilateBoson")
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 别名为[`AnnihilateBoson`](#sympy.physics.secondquant.AnnihilateBoson "sympy.physics.secondquant.AnnihilateBoson")
- en: '[PRE28]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: alias of [`FockStateBosonBra`](#sympy.physics.secondquant.FockStateBosonBra
    "sympy.physics.secondquant.FockStateBosonBra")
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 别名为[`FockStateBosonBra`](#sympy.physics.secondquant.FockStateBosonBra "sympy.physics.secondquant.FockStateBosonBra")
- en: '[PRE29]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: alias of [`FockStateBosonKet`](#sympy.physics.secondquant.FockStateBosonKet
    "sympy.physics.secondquant.FockStateBosonKet")
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 别名为[`FockStateBosonKet`](#sympy.physics.secondquant.FockStateBosonKet "sympy.physics.secondquant.FockStateBosonKet")
- en: '[PRE30]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: alias of [`CreateBoson`](#sympy.physics.secondquant.CreateBoson "sympy.physics.secondquant.CreateBoson")
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 别名为[`CreateBoson`](#sympy.physics.secondquant.CreateBoson "sympy.physics.secondquant.CreateBoson")
- en: '[PRE31]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Base class for a basis set of bosonic Fock states.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 玻色子Fock态基础集合的基类。
- en: '[PRE32]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The Commutator: [A, B] = A*B - B*A'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 交换子：[A, B] = A*B - B*A
- en: The arguments are ordered according to .__cmp__()
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 根据.__cmp__()对参数进行排序。
- en: Examples
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE33]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Evaluate the commutator with .doit()
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用.doit()评估交换子。
- en: '[PRE34]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'For two second quantization operators the commutator is evaluated immediately:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于两个二次量子化算符，交换子立即计算：
- en: '[PRE35]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: But for more complicated expressions, the evaluation is triggered by a call
    to .doit()
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 但对于更复杂的表达式，通过调用.doit()来触发评估。
- en: '[PRE37]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Enables the computation of complex expressions.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 启用计算复杂表达式。
- en: Examples
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE39]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The Commutator [A,B] is on canonical form if A < B.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 交换子[A, B]在A < B时处于规范形式。
- en: Examples
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE41]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Bosonic creation operator.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 玻色子产生算符。
- en: '[PRE43]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Apply state to self if self is not symbolic and state is a FockStateKet, else
    multiply self by state.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果self不是符号化的且state是FockStateKet，则将state应用于self，否则将self乘以state。
- en: Examples
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE44]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Fermionic creation operator.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 费米子产生算符。
- en: '[PRE46]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Apply state to self if self is not symbolic and state is a FockStateKet, else
    multiply self by state.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果self不是符号化的且state是FockStateKet，则将state应用于self，否则将self乘以state。
- en: Examples
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE47]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Always destroy a quasi-particle? (annihilate hole or annihilate particle)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 总是销毁一个准粒子吗？（湮灭空穴或湮灭粒子）
- en: Examples
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE49]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Always create a quasi-particle? (create hole or create particle)
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 总是创建一个准粒子吗？（创建空穴或创建粒子）
- en: Examples
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE52]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Can we destroy a quasi-particle? (annihilate hole or annihilate particle) If
    so, would that be above or below the fermi surface?
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够销毁一个准粒子吗？（湮灭空穴或湮灭粒子）如果可以，那么这会在费米面之上还是之下？
- en: Examples
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE55]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Can we create a quasi-particle? (create hole or create particle) If so, would
    that be above or below the fermi surface?
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够创建一个准粒子吗？（创建空穴或创建粒子）如果可以，那么这会在费米面之上还是之下？
- en: Examples
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Examples
- en: '[PRE58]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Hermitian conjugate of creation/annihilation operators.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 创建/湮灭算符的厄米共轭。
- en: Examples
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE61]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Evaluates the Dagger instance.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 评估 Dagger 实例。
- en: Examples
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE63]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: The eval() method is called automatically.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 自动调用 eval() 方法。
- en: '[PRE64]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: alias of [`AnnihilateFermion`](#sympy.physics.secondquant.AnnihilateFermion
    "sympy.physics.secondquant.AnnihilateFermion")
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[`AnnihilateFermion`](#sympy.physics.secondquant.AnnihilateFermion "sympy.physics.secondquant.AnnihilateFermion")
    的别名。'
- en: '[PRE65]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: alias of [`FockStateFermionBra`](#sympy.physics.secondquant.FockStateFermionBra
    "sympy.physics.secondquant.FockStateFermionBra")
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[`FockStateFermionBra`](#sympy.physics.secondquant.FockStateFermionBra "sympy.physics.secondquant.FockStateFermionBra")
    的别名。'
- en: '[PRE66]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: alias of [`FockStateFermionKet`](#sympy.physics.secondquant.FockStateFermionKet
    "sympy.physics.secondquant.FockStateFermionKet")
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '[`FockStateFermionKet`](#sympy.physics.secondquant.FockStateFermionKet "sympy.physics.secondquant.FockStateFermionKet")
    的别名。'
- en: '[PRE67]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: alias of [`CreateFermion`](#sympy.physics.secondquant.CreateFermion "sympy.physics.secondquant.CreateFermion")
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[`CreateFermion`](#sympy.physics.secondquant.CreateFermion "sympy.physics.secondquant.CreateFermion")
    的别名。'
- en: '[PRE68]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Fixed particle number basis set.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 固定粒子数的基组。
- en: Examples
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE69]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Returns the index of state in basis.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 返回基础中状态的索引。
- en: Examples
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE71]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Returns the state that lies at index i of the basis
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在基础中索引为 i 的态。
- en: Examples
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE73]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Many particle Fock state with a sequence of occupation numbers.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 具有一系列占据数的多粒子 Fock 态。
- en: Anywhere you can have a FockState, you can also have S.Zero. All code must check
    for this!
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何可以有 FockState 的地方，也可以有 S.Zero。所有代码必须检查这一点！
- en: Base class to represent FockStates.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 代表 FockStates 的基类。
- en: '[PRE75]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: Describes a collection of BosonBra particles.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 描述了一组 BosonBra 粒子。
- en: Examples
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE76]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Many particle Fock state with a sequence of occupation numbers.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 具有一系列占据数的多粒子 Fock 态。
- en: Occupation numbers can be any integer >= 0.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 占据数可以是任何大于等于 0 的整数。
- en: Examples
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE78]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Representation of a bra.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 左矢的表示。
- en: '[PRE80]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Examples
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE81]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: See also
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见。
- en: '[`FockStateFermionKet`](#sympy.physics.secondquant.FockStateFermionKet "sympy.physics.secondquant.FockStateFermionKet")'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '[`FockStateFermionKet`](#sympy.physics.secondquant.FockStateFermionKet "sympy.physics.secondquant.FockStateFermionKet")'
- en: '[PRE82]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Many-particle Fock state with a sequence of occupied orbits.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 具有一系列占据轨道的多粒子 Fock 态。
- en: Explanation
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 解释。
- en: Each state can only have one particle, so we choose to store a list of occupied
    orbits rather than a tuple with occupation numbers (zeros and ones).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 每个状态只能有一个粒子，因此我们选择存储一组占据轨道而不是具有占据数（零和一）的元组。
- en: states below fermi level are holes, and are represented by negative labels in
    the occupation list.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 费米面以下的态被称为空穴，并且在占据列表中用负标签表示。
- en: For symbolic state labels, the fermi_level caps the number of allowed hole-
    states.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 对于符号态标签，费米面限制了允许的空穴态数。
- en: Examples
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE83]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Representation of a ket.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 右矢的表示。
- en: '[PRE85]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: An unevaluated inner product between a bra and ket.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 一个未评估的左矢和右矢之间的内积。
- en: Explanation
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 解释。
- en: Currently this class just reduces things to a product of Kronecker Deltas. In
    the future, we could introduce abstract states like `|a>` and `|b>`, and leave
    the inner product unevaluated as `<a|b>`.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 目前该类只将事物简化为 Kronecker Delta 的乘积。将来，我们可以引入像 `|a>` 和 `|b>` 这样的抽象态，并将内积保持为未评估状态
    `<a|b>`。
- en: '[PRE86]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Returns the bra part of the state
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 返回态的左矢部分。
- en: '[PRE87]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Returns the ket part of the state
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 返回态的右矢部分。
- en: '[PRE88]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: The discrete, or Kronecker, delta function.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 离散或 Kronecker Delta 函数。
- en: 'Parameters:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**i** : Number, Symbol'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '**i**：数字，符号'
- en: The first index of the delta function.
  id: totrans-189
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Delta 函数的第一个索引。
- en: '**j** : Number, Symbol'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '**j**：数字，符号'
- en: The second index of the delta function.
  id: totrans-191
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Delta 函数的第二个索引。
- en: Explanation
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 解释。
- en: A function that takes in two integers \(i\) and \(j\). It returns \(0\) if \(i\)
    and \(j\) are not equal, or it returns \(1\) if \(i\) and \(j\) are equal.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 一个函数，接受两个整数 \(i\) 和 \(j\)。如果 \(i\) 和 \(j\) 不相等，则返回 \(0\)，如果相等，则返回 \(1\)。
- en: Examples
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: 'An example with integer indices:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 具有整数索引的示例：
- en: '[PRE89]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Symbolic indices:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 符号索引：
- en: '[PRE90]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: See also
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参见。
- en: '[`eval`](#sympy.physics.secondquant.KroneckerDelta.eval "sympy.physics.secondquant.KroneckerDelta.eval"),
    [`DiracDelta`](../functions/special.html#sympy.functions.special.delta_functions.DiracDelta
    "sympy.functions.special.delta_functions.DiracDelta")'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '[`eval`](#sympy.physics.secondquant.KroneckerDelta.eval "sympy.physics.secondquant.KroneckerDelta.eval")，[`DiracDelta`](../functions/special.html#sympy.functions.special.delta_functions.DiracDelta
    "sympy.functions.special.delta_functions.DiracDelta")'
- en: References
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文献。
- en: '[[R771](#id1)]'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '[[R771](#id1)]'
- en: '[https://en.wikipedia.org/wiki/Kronecker_delta](https://en.wikipedia.org/wiki/Kronecker_delta)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Kronecker_delta](https://en.wikipedia.org/wiki/Kronecker_delta)'
- en: '[PRE91]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: Evaluates the discrete delta function.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 评估离散 Delta 函数。
- en: Examples
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 示例。
- en: '[PRE92]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: indirect doctest
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 间接的 doctest。
- en: '[PRE94]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Returns True if indices are either both above or below fermi.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 返回True，如果指标要么都在费米能级上，要么都在费米能级下。
- en: Examples
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE95]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: True if Delta can be non-zero above fermi.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Delta 在费米能级上方可以非零，则为真。
- en: Examples
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE97]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: See also
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_below_fermi"), [`is_only_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi"), [`is_only_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi")'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_below_fermi"), [`is_only_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi"), [`is_only_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi")'
- en: '[PRE98]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: True if Delta can be non-zero below fermi.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Delta 在费米能级下方可以非零，则为真。
- en: Examples
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE99]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: See also
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_above_fermi"), [`is_only_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi"), [`is_only_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi")'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_above_fermi"), [`is_only_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi"), [`is_only_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi")'
- en: '[PRE100]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: True if Delta is restricted to above fermi.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Delta 受限于费米能级上方，则为真。
- en: Examples
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE101]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: See also
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_above_fermi"), [`is_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_below_fermi"), [`is_only_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi")'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_above_fermi"), [`is_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_below_fermi"), [`is_only_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_below_fermi")'
- en: '[PRE102]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: True if Delta is restricted to below fermi.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Delta 受限于费米能级下方，则为真。
- en: Examples
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE103]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: See also
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`is_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_above_fermi"), [`is_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_below_fermi"), [`is_only_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi")'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '[`is_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_above_fermi"), [`is_below_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_below_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_below_fermi"), [`is_only_above_fermi`](#sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi
    "sympy.physics.secondquant.KroneckerDelta.is_only_above_fermi")'
- en: '[PRE104]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Returns the index which is preferred to substitute in the final expression.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在最终表达式中要替换的首选指标。
- en: Explanation
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The index to substitute is the index with less information regarding fermi level.
    If indices contain the same information, ‘a’ is preferred before ‘b’.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 要替换的指标是在费米能级方面具有较少信息的指标。如果指标包含相同信息，则‘a’优于‘b’。
- en: Examples
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE105]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: See also
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`preferred_index`](#sympy.physics.secondquant.KroneckerDelta.preferred_index
    "sympy.physics.secondquant.KroneckerDelta.preferred_index")'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '[`preferred_index`](#sympy.physics.secondquant.KroneckerDelta.preferred_index
    "sympy.physics.secondquant.KroneckerDelta.preferred_index")'
- en: '[PRE106]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Returns the index which is preferred to keep in the final expression.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在最终表达式中要保留的首选指标。
- en: Explanation
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: The preferred index is the index with more information regarding fermi level.
    If indices contain the same information, ‘a’ is preferred before ‘b’.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 首选指标是在费米能级方面具有更多信息的指标。如果指标包含相同信息，则‘a’优于‘b’。
- en: Examples
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE107]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: See also
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '[`killable_index`](#sympy.physics.secondquant.KroneckerDelta.killable_index
    "sympy.physics.secondquant.KroneckerDelta.killable_index")'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '[`killable_index`](#sympy.physics.secondquant.KroneckerDelta.killable_index
    "sympy.physics.secondquant.KroneckerDelta.killable_index")'
- en: '[PRE108]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: This Object is used to represent normal ordering brackets.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 该对象用于表示正规顺序括号。
- en: 'i.e. {abcd} sometimes written :abcd:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '即 {abcd} 有时写作 :abcd:'
- en: Explanation
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: Applying the function NO(arg) to an argument means that all operators in the
    argument will be assumed to anticommute, and have vanishing contractions. This
    allows an immediate reordering to canonical form upon object creation.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 对一个参数应用NO(arg)函数意味着假设参数中的所有算符均反对易，并且具有消失的收缩。这允许在对象创建时立即重新排序为规范形式。
- en: Examples
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE109]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Note
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to generate a normal ordered equivalent of an expression, you should
    use the function wicks(). This class only indicates that all operators inside
    the brackets anticommute, and have vanishing contractions. Nothing more, nothing
    less.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想生成一个表达式的正规顺序等价物，则应使用wicks()函数。此类仅指示括号内的所有算符均反对易，并具有消失的收缩。不多不少。
- en: '[PRE110]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: Either removes the brackets or enables complex computations in its arguments.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 要么去掉括号或在其参数中启用复杂计算。
- en: Examples
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE111]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: Returns a NO() without FermionicOperator at index i.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 返回在索引i处没有FermionicOperator的NO()。
- en: Examples
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE113]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Return 0 if the rightmost argument of the first argument is a not a q_annihilator,
    else 1 if it is above fermi or -1 if it is below fermi.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 如果第一个参数的最右边参数不是q湮灭算符，则返回0，否则如果其在费米面上方则返回1，如果在费米面下方则返回-1。
- en: Examples
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE116]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Return 0 if the leftmost argument of the first argument is a not a q_creator,
    else 1 if it is above fermi or -1 if it is below fermi.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 如果第一个参数的最左边参数不是q创造算符，则返回0，否则如果其在费米面上方则返回1，如果在费米面下方则返回-1。
- en: Examples
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE119]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: Iterates over the annihilation operators.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代湮灭算符。
- en: Examples
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE122]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '[PRE124]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: Iterates over the creation operators.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代创建算符。
- en: Examples
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE125]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: '[PRE126]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '[PRE127]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: Represents the index permutation operator P(ij).
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 表示指数置换算符P(ij)。
- en: P(ij)*f(i)*g(j) = f(i)*g(j) - f(j)*g(i)
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: P(ij)*f(i)*g(j) = f(i)*g(j) - f(j)*g(i)
- en: '[PRE128]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: Returns -expr with permuted indices.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 返回具有置换指数的-expr。
- en: Explanation
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: '[PRE129]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '[PRE130]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: A single state, variable particle number basis set.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 一个单态、变粒子数的基组。
- en: Examples
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE131]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '[PRE132]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: Returns the index of state in basis.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 返回基础中状态的索引。
- en: Examples
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE133]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[PRE134]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: The state of a single basis.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 单一基组的状态。
- en: Examples
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE135]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: Take a SymPy expression with operators and states and apply the operators.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 以SymPy表达式和算符为参数，应用这些算符。
- en: Examples
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE137]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '[PRE138]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: Calculates contraction of Fermionic operators a and b.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 计算Fermionic算符a和b的收缩。
- en: Examples
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE139]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'A contraction is non-zero only if a quasi-creator is to the right of a quasi-annihilator:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 收缩仅在准创造算符位于准湮灭算符右侧时才非零：
- en: '[PRE140]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'For general indices a non-zero result restricts the indices to below/above
    the fermi surface:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一般指标，非零结果将限制指标位于费米面以下/以上：
- en: '[PRE141]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'Two creators or two annihilators always vanishes:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 两个创建算符或两个湮灭算符总是消失的：
- en: '[PRE142]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: '[PRE143]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: We evaluate KroneckerDelta symbols in the expression assuming Einstein summation.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在表达式中假设按照爱因斯坦求和约定评估KroneckerDelta符号。
- en: Explanation
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: If one index is repeated it is summed over and in effect substituted with the
    other one. If both indices are repeated we substitute according to what is the
    preferred index. this is determined by KroneckerDelta.preferred_index and KroneckerDelta.killable_index.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个指标重复，则对其求和，并实际上用另一个指标代替它。如果两个指标都重复，则根据首选指标进行替换。这由KroneckerDelta.preferred_index和KroneckerDelta.killable_index决定。
- en: In case there are no possible substitutions or if a substitution would imply
    a loss of information, nothing is done.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有可能的替换或者替换会导致信息丢失，则不进行任何操作。
- en: In case an index appears in more than one KroneckerDelta, the resulting substitution
    depends on the order of the factors. Since the ordering is platform dependent,
    the literal expression resulting from this function may be hard to predict.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个指标出现在多个KroneckerDelta中，则结果的替换取决于因子的顺序。由于排序依赖于平台，因此从此函数得到的文字表达可能难以预测。
- en: Examples
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: 'We assume the following:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设以下情况：
- en: '[PRE144]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: The order of preference for these indices according to KroneckerDelta is (a,
    b, i, j, p, q).
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 根据KroneckerDelta，这些指标的优先顺序是(a, b, i, j, p, q)。
- en: 'Trivial cases:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的情况：
- en: '[PRE145]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'More interesting cases:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 更有趣的情况：
- en: '[PRE146]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'Finally, here are some cases where nothing is done, because that would imply
    a loss of information:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这里有一些不做任何操作的情况，因为那将意味着信息的丢失：
- en: '[PRE147]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: '[PRE148]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: Find the representation of an operator in a basis.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 查找算符在基组中的表示。
- en: Examples
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 例子
- en: '[PRE149]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: '[PRE150]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: Performs simplification by introducing PermutationOperators where appropriate.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 通过引入适当的置换算符来执行简化。
- en: Explanation
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: 'Schematically:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 示意性地：
- en: '[abij] - [abji] - [baij] + [baji] -> P(ab)*P(ij)*[abij]'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '[abij] - [abji] - [baij] + [baji] -> P(ab)*P(ij)*[abij]'
- en: permutation_operators is a list of PermutationOperators to consider.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: permutation_operators是要考虑的置换算符列表。
- en: If permutation_operators=[P(ab),P(ij)] we will try to introduce the permutation
    operators P(ij) and P(ab) in the expression. If there are other possible simplifications,
    we ignore them.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 如果permutation_operators=[P(ab),P(ij)]，我们将尝试在表达式中引入排列算子P(ij)和P(ab)。如果还有其他可能的简化，我们将忽略它们。
- en: '[PRE151]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: '[PRE152]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '[PRE154]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: Collect terms by substitution of dummy variables.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 通过替换虚拟变量来收集项。
- en: Explanation
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 解释
- en: This routine allows simplification of Add expressions containing terms which
    differ only due to dummy variables.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 此例程允许简化包含仅因虚拟变量而不同的项的Add表达式。
- en: The idea is to substitute all dummy variables consistently depending on the
    structure of the term. For each term, we obtain a sequence of all dummy variables,
    where the order is determined by the index range, what factors the index belongs
    to and its position in each factor. See _get_ordered_dummies() for more information
    about the sorting of dummies. The index sequence is then substituted consistently
    in each term.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法是根据项的结构一致地替换所有虚拟变量。对于每个项，我们获得一个所有虚拟变量的序列，其中顺序由索引范围、索引所属的因子以及其在每个因子中的位置决定。有关虚拟变量排序的更多信息，请参阅_get_ordered_dummies()。然后在每个项中一致地进行替换。
- en: Examples
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE155]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: Since a, b, c and d are equivalent summation indices, the expression can be
    simplified to a single term (for which the dummy indices are still summed over)
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 由于a、b、c和d是等效的求和索引，因此表达式可以简化为单一项（其中虚拟指数仍然被求和）
- en: '[PRE157]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'Controlling output:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 控制输出：
- en: By default the dummy symbols that are already present in the expression will
    be reused in a different permutation. However, if new_indices=True, new dummies
    will be generated and inserted. The keyword ‘pretty_indices’ can be used to control
    this generation of new symbols.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，将在表达式中已经存在的虚拟符号重新用于不同的排列。然而，如果new_indices=True，则会生成并插入新的虚拟符号。“pretty_indices”关键字可用于控制此新符号的生成。
- en: 'By default the new dummies will be generated on the form i_1, i_2, a_1, etc.
    If you supply a dictionary with key:value pairs in the form:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，新的虚拟符号将以i_1、i_2、a_1等形式生成。如果您提供一个键值对字典，形式为：
- en: '{ index_group: string_of_letters }'
  id: totrans-368
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '{ index_group: string_of_letters }'
- en: The letters will be used as labels for the new dummy symbols. The index_groups
    must be one of ‘above’, ‘below’ or ‘general’.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 这些字母将用作新虚拟符号的标签。index_groups必须是“above”、“below”或“general”之一。
- en: '[PRE158]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'If we run out of letters, or if there is no keyword for some index_group the
    default dummy generator will be used as a fallback:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们用完了字母，或者某些index_group没有关键字，则默认的虚拟生成器将作为后备：
- en: '[PRE159]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '[PRE160]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: Returns the normal ordered equivalent of an expression using Wicks Theorem.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Wick定理返回表达式的正常排序等效物。
- en: Examples
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE161]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'By default, the expression is expanded:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，表达式被展开：
- en: '[PRE162]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: With the keyword ‘keep_only_fully_contracted=True’, only fully contracted terms
    are returned.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 使用关键字“keep_only_fully_contracted=True”，仅返回完全收缩的项。
- en: 'By request, the result can be simplified in the following order:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 根据请求，结果可以按以下顺序简化：
- en: – KroneckerDelta functions are evaluated – Dummy variables are substituted consistently
    across terms
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: – KroneckerDelta函数被评估 – 虚拟变量在各项中一致地替换
- en: '[PRE163]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
