- en: scipy.ndimage.maximum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.maximum.html#scipy.ndimage.maximum](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.ndimage.maximum.html#scipy.ndimage.maximum)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the maximum of the values of an array over labeled regions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**input**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Array_like of values. For each region specified by *labels*, the maximal values
    of *input* over the region is computed.
  prefs: []
  type: TYPE_NORMAL
- en: '**labels**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An array of integers marking different regions over which the maximum value
    of *input* is to be computed. *labels* must have the same shape as *input*. If
    *labels* is not specified, the maximum over the whole array is returned.
  prefs: []
  type: TYPE_NORMAL
- en: '**index**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A list of region labels that are taken into account for computing the maxima.
    If index is None, the maximum over all elements where *labels* is non-zero is
    returned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**output**float or list of floats'
  prefs: []
  type: TYPE_NORMAL
- en: 'List of maxima of *input* over the regions determined by *labels* and whose
    index is in *index*. If *index* or *labels* are not specified, a float is returned:
    the maximal value of *input* if *labels* is None, and the maximal value of elements
    where *labels* is greater than zero if *index* is None.'
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`label`](scipy.ndimage.label.html#scipy.ndimage.label "scipy.ndimage.label"),
    [`minimum`](scipy.ndimage.minimum.html#scipy.ndimage.minimum "scipy.ndimage.minimum"),
    [`median`](scipy.ndimage.median.html#scipy.ndimage.median "scipy.ndimage.median"),
    [`maximum_position`](scipy.ndimage.maximum_position.html#scipy.ndimage.maximum_position
    "scipy.ndimage.maximum_position"), [`extrema`](scipy.ndimage.extrema.html#scipy.ndimage.extrema
    "scipy.ndimage.extrema"), [`sum`](https://docs.python.org/3/library/functions.html#sum
    "(in Python v3.12)"), [`mean`](scipy.ndimage.mean.html#scipy.ndimage.mean "scipy.ndimage.mean"),
    [`variance`](scipy.ndimage.variance.html#scipy.ndimage.variance "scipy.ndimage.variance")'
  prefs: []
  type: TYPE_NORMAL
- en: '[`standard_deviation`](scipy.ndimage.standard_deviation.html#scipy.ndimage.standard_deviation
    "scipy.ndimage.standard_deviation")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: The function returns a Python list and not a NumPy array, use *np.array* to
    convert the list to an array.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
