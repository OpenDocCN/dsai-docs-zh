- en: scipy.signal.cwt
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.signal.cwt
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cwt.html#scipy.signal.cwt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cwt.html#scipy.signal.cwt)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文链接：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cwt.html#scipy.signal.cwt](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.signal.cwt.html#scipy.signal.cwt)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Continuous wavelet transform.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 连续小波变换。
- en: 'Deprecated since version 1.12.0: scipy.signal.cwt is deprecated in SciPy 1.12
    and will be removed in SciPy 1.15\. We recommend using PyWavelets instead.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 自版本1.12.0起弃用：scipy.signal.cwt在SciPy 1.12中已弃用，并将在SciPy 1.15中删除。我们建议改用PyWavelets。
- en: Performs a continuous wavelet transform on *data*, using the *wavelet* function.
    A CWT performs a convolution with *data* using the *wavelet* function, which is
    characterized by a width parameter and length parameter. The *wavelet* function
    is allowed to be complex.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对*data*执行连续小波变换，使用*wavelet*函数。 CWT使用*wavelet*函数对*data*进行卷积，该函数以宽度参数和长度参数为特征。
    *wavelet*函数允许是复数。
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**data**(N,) ndarray'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**data**(N,) ndarray'
- en: data on which to perform the transform.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 执行变换的数据。
- en: '**wavelet**function'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**wavelet**函数'
- en: Wavelet function, which should take 2 arguments. The first argument is the number
    of points that the returned vector will have (len(wavelet(length,width)) == length).
    The second is a width parameter, defining the size of the wavelet (e.g. standard
    deviation of a gaussian). See [`ricker`](scipy.signal.ricker.html#scipy.signal.ricker
    "scipy.signal.ricker"), which satisfies these requirements.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 小波函数，应该接受2个参数。第一个参数是返回的向量将具有的点数（len(wavelet(length,width)) == length）。第二个是宽度参数，定义小波的大小（例如，高斯标准差）。参见[`ricker`](scipy.signal.ricker.html#scipy.signal.ricker
    "scipy.signal.ricker")，满足这些要求。
- en: '**widths**(M,) sequence'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**widths**(M,) 序列'
- en: Widths to use for transform.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 用于变换的宽度。
- en: '**dtype**data-type, optional'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**dtype**数据类型，可选'
- en: The desired data type of output. Defaults to `float64` if the output of *wavelet*
    is real and `complex128` if it is complex.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的期望数据类型。如果*wavelet*的输出是实数，则默认为`float64`，如果是复数，则为`complex128`。
- en: New in version 1.4.0.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本1.4.0中新增。
- en: '**kwargs**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**kwargs**'
- en: Keyword arguments passed to wavelet function.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 传递给小波函数的关键字参数。
- en: New in version 1.4.0.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本1.4.0中新增。
- en: 'Returns:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'cwt: (M, N) ndarray'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: cwt：(M, N) ndarray
- en: Will have shape of (len(widths), len(data)).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 将具有形状(len(widths), len(data))。
- en: Notes
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意事项
- en: New in version 1.4.0.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 新版本1.4.0中新增。
- en: For non-symmetric, complex-valued wavelets, the input signal is convolved with
    the time-reversed complex-conjugate of the wavelet data [1].
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非对称的复数值小波，输入信号与小波数据的时间反转共轭卷积[1]。
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: References
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[1]'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[1]'
- en: S. Mallat, “A Wavelet Tour of Signal Processing (3rd Edition)”, Academic Press,
    2009.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: S. Mallat，“信号处理的小波之旅（第3版）”，Academic Press，2009。
- en: Examples
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For cwt matrix plotting it is advisable to flip the y-axis
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于cwt矩阵绘图，建议翻转y轴
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![../../_images/scipy-signal-cwt-1.png](../Images/6514c860ece9bd403d4a1009e6b6f6ca.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-signal-cwt-1.png](../Images/6514c860ece9bd403d4a1009e6b6f6ca.png)'
