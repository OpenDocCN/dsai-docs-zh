- en: numpy.real_if_close
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.real_if_close.html](https://numpy.org/doc/1.26/reference/generated/numpy.real_if_close.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If input is complex with all imaginary parts close to zero, return real parts.
  prefs: []
  type: TYPE_NORMAL
- en: “Close to zero” is defined as *tol* * (machine epsilon of the type for *a*).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Input array.
  prefs: []
  type: TYPE_NORMAL
- en: '**tol**float'
  prefs: []
  type: TYPE_NORMAL
- en: Tolerance in machine epsilons for the complex part of the elements in the array.
    If the tolerance is <=1, then the absolute tolerance is used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: If *a* is real, the type of *a* is used for the output. If *a* has complex elements,
    the returned type is float.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`real`](numpy.real.html#numpy.real "numpy.real"), [`imag`](numpy.imag.html#numpy.imag
    "numpy.imag"), [`angle`](numpy.angle.html#numpy.angle "numpy.angle")'
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Machine epsilon varies from machine to machine and between data types but Python
    floats on most platforms have a machine epsilon equal to 2.2204460492503131e-16\.
    You can use ‘np.finfo(float).eps’ to print out the machine epsilon for floats.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
