- en: Lagrange’s Method in Physics/Mechanics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sympy.org/latest/modules/physics/mechanics/lagrange.html](https://docs.sympy.org/latest/modules/physics/mechanics/lagrange.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[`sympy.physics.mechanics`](index.html#module-sympy.physics.mechanics "sympy.physics.mechanics")
    provides functionality for deriving equations of motion using [Lagrange’s method](https://en.wikipedia.org/wiki/Lagrangian_mechanics).
    This document will describe Lagrange’s method as used in this module, but not
    how the equations are actually derived.'
  prefs: []
  type: TYPE_NORMAL
- en: Structure of Equations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [`sympy.physics.mechanics`](index.html#module-sympy.physics.mechanics "sympy.physics.mechanics")
    we are assuming there are 3 basic sets of equations needed to describe a system;
    the constraint equations, the time differentiated constraint equations and the
    dynamic equations.
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}\mathbf{m_{c}}(q, t) \dot{q} + \mathbf{f_{c}}(q, t) &= 0\\ \mathbf{m_{dc}}(\dot{q},
    q, t) \ddot{q} + \mathbf{f_{dc}}(\dot{q}, q, t) &= 0\\ \mathbf{m_d}(\dot{q}, q,
    t) \ddot{q} + \mathbf{\Lambda_c}(q, t) \lambda + \mathbf{f_d}(\dot{q}, q, t) &=
    0\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: 'In this module, the expressions formed by using Lagrange’s equations of the
    second kind are rearranged into the following form:'
  prefs: []
  type: TYPE_NORMAL
- en: \(\mathbf{M}(q, t) x = \mathbf{f}(q, \dot{q}, t)\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'where in the case of a system without constraints:'
  prefs: []
  type: TYPE_NORMAL
- en: \(x = \ddot{q}\)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'For a constrained system with \(n\) generalized speeds and \(m\) constraints,
    we will get n - m equations. The mass-matrix/forcing equations are then augmented
    in the following fashion:'
  prefs: []
  type: TYPE_NORMAL
- en: \[\begin{split}x = \begin{bmatrix} \ddot{q} \\ \lambda \end{bmatrix} \\ \mathbf{M}(q,
    t) &= \begin{bmatrix} \mathbf{m_d}(q, t) & \mathbf{\Lambda_c}(q, t) \end{bmatrix}\\
    \mathbf{F}(\dot{q}, q, t) &= \begin{bmatrix} \mathbf{f_d}(q, \dot{q}, t) \end{bmatrix}\\\end{split}\]
  prefs: []
  type: TYPE_NORMAL
- en: Lagrange’s Method in Physics/Mechanics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The formulation of the equations of motion in [`sympy.physics.mechanics`](index.html#module-sympy.physics.mechanics
    "sympy.physics.mechanics") using Lagrange’s Method starts with the creation of
    generalized coordinates and a Lagrangian. The Lagrangian can either be created
    with the `Lagrangian` function or can be a user supplied function. In this case
    we will supply the Lagrangian.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: To formulate the equations of motion we create a `LagrangesMethod` object. The
    Lagrangian and generalized coordinates need to be supplied upon initialization.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: With that the equations of motion can be formed.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It is possible to obtain the mass matrix and the forcing vector.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'If there are any holonomic or non-holonomic constraints, they must be supplied
    as keyword arguments (`hol_coneqs` and `nonhol_coneqs` respectively) in a list
    of expressions which are equal to zero. Modifying the example above, the equations
    of motion can then be generated:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: When the equations of motion are generated in this case, the Lagrange multipliers
    are introduced; they are represented by `lam1` in this case. In general, there
    will be as many multipliers as there are constraint equations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Also in the case of systems with constraints, the ‘full’ mass matrix is augmented
    by the \(k_{dc}(q, t)\) matrix, and the forcing vector by the \(f_{dc}(q, \dot{q},
    t)\) vector. The ‘full’ mass matrix is of size (2n + o) x (2n + o), i.e. it’s
    a square matrix.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'If there are any non-conservative forces or moments acting on the system, they
    must also be supplied as keyword arguments in a list of 2-tuples of the form `(Point,
    Vector)` or `(ReferenceFrame, Vector)` where the `Vector` represents the non-conservative
    forces and torques. Along with this 2-tuple, the inertial frame must also be specified
    as a keyword argument. This is shown below by modifying the example above:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Exploration of the provided examples is encouraged in order to gain more understanding
    of the `LagrangesMethod` object.
  prefs: []
  type: TYPE_NORMAL
