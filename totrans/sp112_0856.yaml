- en: scipy.special.nbdtrik
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.nbdtrik.html#scipy.special.nbdtrik](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.special.nbdtrik.html#scipy.special.nbdtrik)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Negative binomial percentile function.
  prefs: []
  type: TYPE_NORMAL
- en: Returns the inverse with respect to the parameter *k* of *y = nbdtr(k, n, p)*,
    the negative binomial cumulative distribution function.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**y**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The probability of *k* or fewer failures before *n* successes (float).
  prefs: []
  type: TYPE_NORMAL
- en: '**n**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: The target number of successes (positive int).
  prefs: []
  type: TYPE_NORMAL
- en: '**p**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: Probability of success in a single event (float).
  prefs: []
  type: TYPE_NORMAL
- en: '**out**ndarray, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Optional output array for the function results
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**k**scalar or ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The maximum number of allowed failures such that *nbdtr(k, n, p) = y*.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`nbdtr`](scipy.special.nbdtr.html#scipy.special.nbdtr "scipy.special.nbdtr")'
  prefs: []
  type: TYPE_NORMAL
- en: Cumulative distribution function of the negative binomial.
  prefs: []
  type: TYPE_NORMAL
- en: '[`nbdtrc`](scipy.special.nbdtrc.html#scipy.special.nbdtrc "scipy.special.nbdtrc")'
  prefs: []
  type: TYPE_NORMAL
- en: Survival function of the negative binomial.
  prefs: []
  type: TYPE_NORMAL
- en: '[`nbdtri`](scipy.special.nbdtri.html#scipy.special.nbdtri "scipy.special.nbdtri")'
  prefs: []
  type: TYPE_NORMAL
- en: Inverse with respect to *p* of *nbdtr(k, n, p)*.
  prefs: []
  type: TYPE_NORMAL
- en: '[`nbdtrin`](scipy.special.nbdtrin.html#scipy.special.nbdtrin "scipy.special.nbdtrin")'
  prefs: []
  type: TYPE_NORMAL
- en: Inverse with respect to *n* of *nbdtr(k, n, p)*.
  prefs: []
  type: TYPE_NORMAL
- en: '[`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom "scipy.stats.nbinom")'
  prefs: []
  type: TYPE_NORMAL
- en: Negative binomial distribution
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Wrapper for the CDFLIB [[1]](#r1c68fb2a79db-1) Fortran routine *cdfnbn*.
  prefs: []
  type: TYPE_NORMAL
- en: Formula 26.5.26 of [[2]](#r1c68fb2a79db-2),
  prefs: []
  type: TYPE_NORMAL
- en: \[\sum_{j=k + 1}^\infty {{n + j - 1} \choose{j}} p^n (1 - p)^j = I_{1 - p}(k
    + 1, n),\]
  prefs: []
  type: TYPE_NORMAL
- en: is used to reduce calculation of the cumulative distribution function to that
    of a regularized incomplete beta \(I\).
  prefs: []
  type: TYPE_NORMAL
- en: Computation of *k* involves a search for a value that produces the desired value
    of *y*. The search relies on the monotonicity of *y* with *k*.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs: []
  type: TYPE_NORMAL
- en: '[[1](#id1)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Barry Brown, James Lovato, and Kathy Russell, CDFLIB: Library of Fortran Routines
    for Cumulative Distribution Functions, Inverses, and Other Parameters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[2](#id2)]'
  prefs: []
  type: TYPE_NORMAL
- en: 'Milton Abramowitz and Irene A. Stegun, eds. Handbook of Mathematical Functions
    with Formulas, Graphs, and Mathematical Tables. New York: Dover, 1972.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: Compute the negative binomial cumulative distribution function for an exemplary
    parameter set.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Verify that [`nbdtrik`](#scipy.special.nbdtrik "scipy.special.nbdtrik") recovers
    the original value for *k*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Plot the function for different parameter sets.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![../../_images/scipy-special-nbdtrik-1_00_00.png](../Images/9894679ad9e8c9c8602ae23d907be88a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The negative binomial distribution is also available as [`scipy.stats.nbinom`](scipy.stats.nbinom.html#scipy.stats.nbinom
    "scipy.stats.nbinom"). The percentile function method `ppf` returns the result
    of [`nbdtrik`](#scipy.special.nbdtrik "scipy.special.nbdtrik") rounded up to integers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
