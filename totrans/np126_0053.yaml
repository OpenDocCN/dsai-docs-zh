- en: numpy.ndarray.setflags
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: numpy.ndarray.setflags
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.setflags.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.setflags.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.setflags.html](https://numpy.org/doc/1.26/reference/generated/numpy.ndarray.setflags.html)
- en: method
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 方法
- en: '[PRE0]'
  id: totrans-3
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Set array flags WRITEABLE, ALIGNED, WRITEBACKIFCOPY, respectively.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 分别设置数组标志WRITEABLE、ALIGNED、WRITEBACKIFCOPY。
- en: These Boolean-valued flags affect how numpy interprets the memory area used
    by *a* (see Notes below). The ALIGNED flag can only be set to True if the data
    is actually aligned according to the type. The WRITEBACKIFCOPY and flag can never
    be set to True. The flag WRITEABLE can only be set to True if the array owns its
    own memory, or the ultimate owner of the memory exposes a writeable buffer interface,
    or is a string. (The exception for string is made so that unpickling can be done
    without copying memory.)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这些布尔标记会影响NumPy解释*a*占用的内存区域的方式（见下面的说明）。只有在数据实际按照类型对齐时，ALIGNED标记才能设置为True。WRITEBACKIFCOPY标记永远不能被设置为True。只有当数组拥有自己的内存，或者内存的最终所有者提供了可写的缓冲区接口，或者是字符串时，WRITEABLE标记才能设置为True。（对于字符串的例外是为了能够在不复制内存的情况下进行反序列化。）
- en: 'Parameters:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**write**bool, optional'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**write**bool，可选项'
- en: Describes whether or not *a* can be written to.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 指示是否能够写入*a*。
- en: '**align**bool, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**align**bool，可选项'
- en: Describes whether or not *a* is aligned properly for its type.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 描述*a*是否对其类型进行了正确对齐。
- en: '**uic**bool, optional'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**uic**bool，可选项'
- en: Describes whether or not *a* is a copy of another “base” array.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 描述*a*是否是另一个“基础”数组的副本。
- en: Notes
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 说明
- en: 'Array flags provide information about how the memory area used for the array
    is to be interpreted. There are 7 Boolean flags in use, only four of which can
    be changed by the user: WRITEBACKIFCOPY, WRITEABLE, and ALIGNED.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 数组标记提供有关用于数组的内存区域如何解释的信息。有7个正在使用的布尔标记，其中用户只能更改四个：WRITEBACKIFCOPY、WRITEABLE和ALIGNED。
- en: WRITEABLE (W) the data area can be written to;
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: WRITEABLE（W）可以对数据区域进行写入；
- en: ALIGNED (A) the data and strides are aligned appropriately for the hardware
    (as determined by the compiler);
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ALIGNED（A）数据和步幅在硬件上适当对齐（由编译器决定）；
- en: WRITEBACKIFCOPY (X) this array is a copy of some other array (referenced by
    .base). When the C-API function PyArray_ResolveWritebackIfCopy is called, the
    base array will be updated with the contents of this array.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: WRITEBACKIFCOPY（X）此数组是另一个“基础”数组的副本（由.base引用）。在调用C-API函数PyArray_ResolveWritebackIfCopy时，基础数组将使用此数组的内容进行更新。
- en: All flags can be accessed using the single (upper case) letter as well as the
    full name.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 所有标记都可以使用单个（大写）字母以及完整名称来访问。
- en: Examples
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
