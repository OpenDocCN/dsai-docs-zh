- en: numpy.corrcoef
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://numpy.org/doc/1.26/reference/generated/numpy.corrcoef.html](https://numpy.org/doc/1.26/reference/generated/numpy.corrcoef.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Return Pearson product-moment correlation coefficients.
  prefs: []
  type: TYPE_NORMAL
- en: Please refer to the documentation for [`cov`](numpy.cov.html#numpy.cov "numpy.cov")
    for more detail. The relationship between the correlation coefficient matrix,
    *R*, and the covariance matrix, *C*, is
  prefs: []
  type: TYPE_NORMAL
- en: \[R_{ij} = \frac{ C_{ij} } { \sqrt{ C_{ii} C_{jj} } }\]
  prefs: []
  type: TYPE_NORMAL
- en: The values of *R* are between -1 and 1, inclusive.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x**array_like'
  prefs: []
  type: TYPE_NORMAL
- en: A 1-D or 2-D array containing multiple variables and observations. Each row
    of *x* represents a variable, and each column a single observation of all those
    variables. Also see *rowvar* below.
  prefs: []
  type: TYPE_NORMAL
- en: '**y**array_like, optional'
  prefs: []
  type: TYPE_NORMAL
- en: An additional set of variables and observations. *y* has the same shape as *x*.
  prefs: []
  type: TYPE_NORMAL
- en: '**rowvar**bool, optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'If *rowvar* is True (default), then each row represents a variable, with observations
    in the columns. Otherwise, the relationship is transposed: each column represents
    a variable, while the rows contain observations.'
  prefs: []
  type: TYPE_NORMAL
- en: '**bias**_NoValue, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Has no effect, do not use.
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated since version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**ddof**_NoValue, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Has no effect, do not use.
  prefs: []
  type: TYPE_NORMAL
- en: Deprecated since version 1.10.0.
  prefs: []
  type: TYPE_NORMAL
- en: '**dtype**data-type, optional'
  prefs: []
  type: TYPE_NORMAL
- en: Data-type of the result. By default, the return data-type will have at least
    [`numpy.float64`](../arrays.scalars.html#numpy.float64 "numpy.float64") precision.
  prefs: []
  type: TYPE_NORMAL
- en: New in version 1.20.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**R**ndarray'
  prefs: []
  type: TYPE_NORMAL
- en: The correlation coefficient matrix of the variables.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs: []
  type: TYPE_NORMAL
- en: '[`cov`](numpy.cov.html#numpy.cov "numpy.cov")'
  prefs: []
  type: TYPE_NORMAL
- en: Covariance matrix
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: Due to floating point rounding the resulting array may not be Hermitian, the
    diagonal elements may not be 1, and the elements may not satisfy the inequality
    abs(a) <= 1\. The real and imaginary parts are clipped to the interval [-1, 1]
    in an attempt to improve on that situation but is not much help in the complex
    case.
  prefs: []
  type: TYPE_NORMAL
- en: This function accepts but discards arguments *bias* and *ddof*. This is for
    backwards compatibility with previous versions of this function. These arguments
    had no effect on the return values of the function and can be safely ignored in
    this and previous versions of numpy.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: In this example we generate two random arrays, `xarr` and `yarr`, and compute
    the row-wise and column-wise Pearson correlation coefficients, `R`. Since `rowvar`
    is true by default, we first find the row-wise Pearson correlation coefficients
    between the variables of `xarr`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: If we add another set of variables and observations `yarr`, we can compute the
    row-wise Pearson correlation coefficients between the variables in `xarr` and
    `yarr`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Finally if we use the option `rowvar=False`, the columns are now being treated
    as the variables and we will find the column-wise Pearson correlation coefficients
    between variables in `xarr` and `yarr`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
