["```py\nIn [1]: import pandas as pd\n\nIn [2]: import numpy as np \n```", "```py\nIn [3]: url = (\n ...:    \"https://raw.githubusercontent.com/pandas-dev\"\n ...:    \"/pandas/main/pandas/tests/io/data/csv/tips.csv\"\n ...: )\n ...: \n\nIn [4]: tips = pd.read_csv(url)\n\nIn [5]: tips\nOut[5]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[244 rows x 7 columns] \n```", "```py\n> sorted_df = df.sort_values(\"col1\") \n> ```", "```py\n> df = df.sort_values(\"col1\") \n> ```", "```py\ndf.replace(5, inplace=True) \n```", "```py\nSELECT  total_bill,  tip,  smoker,  time\nFROM  tips; \n```", "```py\nIn [6]: tips[[\"total_bill\", \"tip\", \"smoker\", \"time\"]]\nOut[6]: \n total_bill   tip smoker    time\n0         16.99  1.01     No  Dinner\n1         10.34  1.66     No  Dinner\n2         21.01  3.50     No  Dinner\n3         23.68  3.31     No  Dinner\n4         24.59  3.61     No  Dinner\n..          ...   ...    ...     ...\n239       29.03  5.92     No  Dinner\n240       27.18  2.00    Yes  Dinner\n241       22.67  2.00    Yes  Dinner\n242       17.82  1.75     No  Dinner\n243       18.78  3.00     No  Dinner\n\n[244 rows x 4 columns] \n```", "```py\nSELECT  *,  tip/total_bill  as  tip_rate\nFROM  tips; \n```", "```py\nIn [7]: tips.assign(tip_rate=tips[\"tip\"] / tips[\"total_bill\"])\nOut[7]: \n total_bill   tip     sex smoker   day    time  size  tip_rate\n0         16.99  1.01  Female     No   Sun  Dinner     2  0.059447\n1         10.34  1.66    Male     No   Sun  Dinner     3  0.160542\n2         21.01  3.50    Male     No   Sun  Dinner     3  0.166587\n3         23.68  3.31    Male     No   Sun  Dinner     2  0.139780\n4         24.59  3.61  Female     No   Sun  Dinner     4  0.146808\n..          ...   ...     ...    ...   ...     ...   ...       ...\n239       29.03  5.92    Male     No   Sat  Dinner     3  0.203927\n240       27.18  2.00  Female    Yes   Sat  Dinner     2  0.073584\n241       22.67  2.00    Male    Yes   Sat  Dinner     2  0.088222\n242       17.82  1.75    Male     No   Sat  Dinner     2  0.098204\n243       18.78  3.00  Female     No  Thur  Dinner     2  0.159744\n\n[244 rows x 8 columns] \n```", "```py\nSELECT  *\nFROM  tips\nWHERE  time  =  'Dinner'; \n```", "```py\nIn [8]: tips[tips[\"total_bill\"] > 10]\nOut[8]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[227 rows x 7 columns] \n```", "```py\nIn [9]: is_dinner = tips[\"time\"] == \"Dinner\"\n\nIn [10]: is_dinner\nOut[10]: \n0      True\n1      True\n2      True\n3      True\n4      True\n ... \n239    True\n240    True\n241    True\n242    True\n243    True\nName: time, Length: 244, dtype: bool\n\nIn [11]: is_dinner.value_counts()\nOut[11]: \ntime\nTrue     176\nFalse     68\nName: count, dtype: int64\n\nIn [12]: tips[is_dinner]\nOut[12]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[176 rows x 7 columns] \n```", "```py\nSELECT  *\nFROM  tips\nWHERE  time  =  'Dinner'  AND  tip  >  5.00; \n```", "```py\nIn [13]: tips[(tips[\"time\"] == \"Dinner\") & (tips[\"tip\"] > 5.00)]\nOut[13]: \n total_bill    tip     sex smoker  day    time  size\n23        39.42   7.58    Male     No  Sat  Dinner     4\n44        30.40   5.60    Male     No  Sun  Dinner     4\n47        32.40   6.00    Male     No  Sun  Dinner     4\n52        34.81   5.20  Female     No  Sun  Dinner     4\n59        48.27   6.73    Male     No  Sat  Dinner     4\n116       29.93   5.07    Male     No  Sun  Dinner     4\n155       29.85   5.14  Female     No  Sun  Dinner     5\n170       50.81  10.00    Male    Yes  Sat  Dinner     3\n172        7.25   5.15    Male    Yes  Sun  Dinner     2\n181       23.33   5.65    Male    Yes  Sun  Dinner     2\n183       23.17   6.50    Male    Yes  Sun  Dinner     4\n211       25.89   5.16    Male    Yes  Sat  Dinner     4\n212       48.33   9.00    Male     No  Sat  Dinner     4\n214       28.17   6.50  Female    Yes  Sat  Dinner     3\n239       29.03   5.92    Male     No  Sat  Dinner     3 \n```", "```py\nSELECT  *\nFROM  tips\nWHERE  size  >=  5  OR  total_bill  >  45; \n```", "```py\nIn [14]: tips[(tips[\"size\"] >= 5) | (tips[\"total_bill\"] > 45)]\nOut[14]: \n total_bill    tip     sex smoker   day    time  size\n59        48.27   6.73    Male     No   Sat  Dinner     4\n125       29.80   4.20  Female     No  Thur   Lunch     6\n141       34.30   6.70    Male     No  Thur   Lunch     6\n142       41.19   5.00    Male     No  Thur   Lunch     5\n143       27.05   5.00  Female     No  Thur   Lunch     6\n155       29.85   5.14  Female     No   Sun  Dinner     5\n156       48.17   5.00    Male     No   Sun  Dinner     6\n170       50.81  10.00    Male    Yes   Sat  Dinner     3\n182       45.35   3.50    Male    Yes   Sun  Dinner     3\n185       20.69   5.00    Male     No   Sun  Dinner     5\n187       30.46   2.00    Male    Yes   Sun  Dinner     5\n212       48.33   9.00    Male     No   Sat  Dinner     4\n216       28.15   3.00    Male    Yes   Sat  Dinner     5 \n```", "```py\nIn [15]: frame = pd.DataFrame(\n ....:    {\"col1\": [\"A\", \"B\", np.nan, \"C\", \"D\"], \"col2\": [\"F\", np.nan, \"G\", \"H\", \"I\"]}\n ....: )\n ....: \n\nIn [16]: frame\nOut[16]: \n col1 col2\n0    A    F\n1    B  NaN\n2  NaN    G\n3    C    H\n4    D    I \n```", "```py\nSELECT  *\nFROM  frame\nWHERE  col2  IS  NULL; \n```", "```py\nIn [17]: frame[frame[\"col2\"].isna()]\nOut[17]: \n col1 col2\n1    B  NaN \n```", "```py\nSELECT  *\nFROM  frame\nWHERE  col1  IS  NOT  NULL; \n```", "```py\nIn [18]: frame[frame[\"col1\"].notna()]\nOut[18]: \n col1 col2\n0    A    F\n1    B  NaN\n3    C    H\n4    D    I \n```", "```py\nSELECT  sex,  count(*)\nFROM  tips\nGROUP  BY  sex;\n/*\nFemale     87\nMale      157\n*/ \n```", "```py\nIn [19]: tips.groupby(\"sex\").size()\nOut[19]: \nsex\nFemale     87\nMale      157\ndtype: int64 \n```", "```py\nIn [20]: tips.groupby(\"sex\").count()\nOut[20]: \n total_bill  tip  smoker  day  time  size\nsex \nFemale          87   87      87   87    87    87\nMale           157  157     157  157   157   157 \n```", "```py\nIn [21]: tips.groupby(\"sex\")[\"total_bill\"].count()\nOut[21]: \nsex\nFemale     87\nMale      157\nName: total_bill, dtype: int64 \n```", "```py\nSELECT  day,  AVG(tip),  COUNT(*)\nFROM  tips\nGROUP  BY  day;\n/*\nFri   2.734737   19\nSat   2.993103   87\nSun   3.255132   76\nThu  2.771452   62\n*/ \n```", "```py\nIn [22]: tips.groupby(\"day\").agg({\"tip\": \"mean\", \"day\": \"size\"})\nOut[22]: \n tip  day\nday \nFri   2.734737   19\nSat   2.993103   87\nSun   3.255132   76\nThur  2.771452   62 \n```", "```py\nSELECT  smoker,  day,  COUNT(*),  AVG(tip)\nFROM  tips\nGROUP  BY  smoker,  day;\n/*\nsmoker day\nNo     Fri      4  2.812500\n Sat     45  3.102889\n Sun     57  3.167895\n Thu    45  2.673778\nYes    Fri     15  2.714000\n Sat     42  2.875476\n Sun     19  3.516842\n Thu    17  3.030000\n*/ \n```", "```py\nIn [23]: tips.groupby([\"smoker\", \"day\"]).agg({\"tip\": [\"size\", \"mean\"]})\nOut[23]: \n tip \n size      mean\nsmoker day \nNo     Fri     4  2.812500\n Sat    45  3.102889\n Sun    57  3.167895\n Thur   45  2.673778\nYes    Fri    15  2.714000\n Sat    42  2.875476\n Sun    19  3.516842\n Thur   17  3.030000 \n```", "```py\nIn [24]: df1 = pd.DataFrame({\"key\": [\"A\", \"B\", \"C\", \"D\"], \"value\": np.random.randn(4)})\n\nIn [25]: df2 = pd.DataFrame({\"key\": [\"B\", \"D\", \"D\", \"E\"], \"value\": np.random.randn(4)}) \n```", "```py\nSELECT  *\nFROM  df1\nINNER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\n# merge performs an INNER JOIN by default\nIn [26]: pd.merge(df1, df2, on=\"key\")\nOut[26]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209 \n```", "```py\nIn [27]: indexed_df2 = df2.set_index(\"key\")\n\nIn [28]: pd.merge(df1, indexed_df2, left_on=\"key\", right_index=True)\nOut[28]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n3   D -1.135632  0.119209 \n```", "```py\nSELECT  *\nFROM  df1\nLEFT  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [29]: pd.merge(df1, df2, on=\"key\", how=\"left\")\nOut[29]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nSELECT  *\nFROM  df1\nRIGHT  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [30]: pd.merge(df1, df2, on=\"key\", how=\"right\")\nOut[30]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n3   E       NaN -1.044236 \n```", "```py\nSELECT  *\nFROM  df1\nFULL  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [31]: pd.merge(df1, df2, on=\"key\", how=\"outer\")\nOut[31]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236 \n```", "```py\nIn [32]: df1 = pd.DataFrame(\n ....:    {\"city\": [\"Chicago\", \"San Francisco\", \"New York City\"], \"rank\": range(1, 4)}\n ....: )\n ....: \n\nIn [33]: df2 = pd.DataFrame(\n ....:    {\"city\": [\"Chicago\", \"Boston\", \"Los Angeles\"], \"rank\": [1, 4, 5]}\n ....: )\n ....: \n```", "```py\nSELECT  city,  rank\nFROM  df1\nUNION  ALL\nSELECT  city,  rank\nFROM  df2;\n/*\n city  rank\n Chicago     1\nSan Francisco     2\nNew York City     3\n Chicago     1\n Boston     4\n Los Angeles     5\n*/ \n```", "```py\nIn [34]: pd.concat([df1, df2])\nOut[34]: \n city  rank\n0        Chicago     1\n1  San Francisco     2\n2  New York City     3\n0        Chicago     1\n1         Boston     4\n2    Los Angeles     5 \n```", "```py\nSELECT  city,  rank\nFROM  df1\nUNION\nSELECT  city,  rank\nFROM  df2;\n-- notice that there is only one Chicago record this time\n/*\n city  rank\n Chicago     1\nSan Francisco     2\nNew York City     3\n Boston     4\n Los Angeles     5\n*/ \n```", "```py\nIn [35]: pd.concat([df1, df2]).drop_duplicates()\nOut[35]: \n city  rank\n0        Chicago     1\n1  San Francisco     2\n2  New York City     3\n1         Boston     4\n2    Los Angeles     5 \n```", "```py\nSELECT  *  FROM  tips\nLIMIT  10; \n```", "```py\nIn [36]: tips.head(10)\nOut[36]: \n total_bill   tip     sex smoker  day    time  size\n0       16.99  1.01  Female     No  Sun  Dinner     2\n1       10.34  1.66    Male     No  Sun  Dinner     3\n2       21.01  3.50    Male     No  Sun  Dinner     3\n3       23.68  3.31    Male     No  Sun  Dinner     2\n4       24.59  3.61  Female     No  Sun  Dinner     4\n5       25.29  4.71    Male     No  Sun  Dinner     4\n6        8.77  2.00    Male     No  Sun  Dinner     2\n7       26.88  3.12    Male     No  Sun  Dinner     4\n8       15.04  1.96    Male     No  Sun  Dinner     2\n9       14.78  3.23    Male     No  Sun  Dinner     2 \n```", "```py\n-- MySQL\nSELECT  *  FROM  tips\nORDER  BY  tip  DESC\nLIMIT  10  OFFSET  5; \n```", "```py\nIn [37]: tips.nlargest(10 + 5, columns=\"tip\").tail(10)\nOut[37]: \n total_bill   tip     sex smoker   day    time  size\n183       23.17  6.50    Male    Yes   Sun  Dinner     4\n214       28.17  6.50  Female    Yes   Sat  Dinner     3\n47        32.40  6.00    Male     No   Sun  Dinner     4\n239       29.03  5.92    Male     No   Sat  Dinner     3\n88        24.71  5.85    Male     No  Thur   Lunch     2\n181       23.33  5.65    Male    Yes   Sun  Dinner     2\n44        30.40  5.60    Male     No   Sun  Dinner     4\n52        34.81  5.20  Female     No   Sun  Dinner     4\n85        34.83  5.17  Female     No  Thur   Lunch     4\n211       25.89  5.16    Male    Yes   Sat  Dinner     4 \n```", "```py\n-- Oracle's ROW_NUMBER() analytic function\nSELECT  *  FROM  (\n  SELECT\n  t.*,\n  ROW_NUMBER()  OVER(PARTITION  BY  day  ORDER  BY  total_bill  DESC)  AS  rn\n  FROM  tips  t\n)\nWHERE  rn  <  3\nORDER  BY  day,  rn; \n```", "```py\nIn [38]: (\n ....:    tips.assign(\n ....:        rn=tips.sort_values([\"total_bill\"], ascending=False)\n ....:        .groupby([\"day\"])\n ....:        .cumcount()\n ....:        + 1\n ....:    )\n ....:    .query(\"rn < 3\")\n ....:    .sort_values([\"day\", \"rn\"])\n ....: )\n ....: \nOut[38]: \n total_bill    tip     sex smoker   day    time  size  rn\n95        40.17   4.73    Male    Yes   Fri  Dinner     4   1\n90        28.97   3.00    Male    Yes   Fri  Dinner     2   2\n170       50.81  10.00    Male    Yes   Sat  Dinner     3   1\n212       48.33   9.00    Male     No   Sat  Dinner     4   2\n156       48.17   5.00    Male     No   Sun  Dinner     6   1\n182       45.35   3.50    Male    Yes   Sun  Dinner     3   2\n197       43.11   5.00  Female    Yes  Thur   Lunch     4   1\n142       41.19   5.00    Male     No  Thur   Lunch     5   2 \n```", "```py\nIn [39]: (\n ....:    tips.assign(\n ....:        rnk=tips.groupby([\"day\"])[\"total_bill\"].rank(\n ....:            method=\"first\", ascending=False\n ....:        )\n ....:    )\n ....:    .query(\"rnk < 3\")\n ....:    .sort_values([\"day\", \"rnk\"])\n ....: )\n ....: \nOut[39]: \n total_bill    tip     sex smoker   day    time  size  rnk\n95        40.17   4.73    Male    Yes   Fri  Dinner     4  1.0\n90        28.97   3.00    Male    Yes   Fri  Dinner     2  2.0\n170       50.81  10.00    Male    Yes   Sat  Dinner     3  1.0\n212       48.33   9.00    Male     No   Sat  Dinner     4  2.0\n156       48.17   5.00    Male     No   Sun  Dinner     6  1.0\n182       45.35   3.50    Male    Yes   Sun  Dinner     3  2.0\n197       43.11   5.00  Female    Yes  Thur   Lunch     4  1.0\n142       41.19   5.00    Male     No  Thur   Lunch     5  2.0 \n```", "```py\n-- Oracle's RANK() analytic function\nSELECT  *  FROM  (\n  SELECT\n  t.*,\n  RANK()  OVER(PARTITION  BY  sex  ORDER  BY  tip)  AS  rnk\n  FROM  tips  t\n  WHERE  tip  <  2\n)\nWHERE  rnk  <  3\nORDER  BY  sex,  rnk; \n```", "```py\nIn [40]: (\n ....:    tips[tips[\"tip\"] < 2]\n ....:    .assign(rnk_min=tips.groupby([\"sex\"])[\"tip\"].rank(method=\"min\"))\n ....:    .query(\"rnk_min < 3\")\n ....:    .sort_values([\"sex\", \"rnk_min\"])\n ....: )\n ....: \nOut[40]: \n total_bill   tip     sex smoker  day    time  size  rnk_min\n67         3.07  1.00  Female    Yes  Sat  Dinner     1      1.0\n92         5.75  1.00  Female    Yes  Fri  Dinner     2      1.0\n111        7.25  1.00  Female     No  Sat  Dinner     1      1.0\n236       12.60  1.00    Male    Yes  Sat  Dinner     2      1.0\n237       32.83  1.17    Male    Yes  Sat  Dinner     2      2.0 \n```", "```py\nUPDATE  tips\nSET  tip  =  tip*2\nWHERE  tip  <  2; \n```", "```py\nIn [41]: tips.loc[tips[\"tip\"] < 2, \"tip\"] *= 2 \n```", "```py\nDELETE  FROM  tips\nWHERE  tip  >  9; \n```", "```py\nIn [42]: tips = tips.loc[tips[\"tip\"] <= 9] \n```", "```py\n> sorted_df = df.sort_values(\"col1\") \n> ```", "```py\n> df = df.sort_values(\"col1\") \n> ```", "```py\ndf.replace(5, inplace=True) \n```", "```py\nSELECT  total_bill,  tip,  smoker,  time\nFROM  tips; \n```", "```py\nIn [6]: tips[[\"total_bill\", \"tip\", \"smoker\", \"time\"]]\nOut[6]: \n total_bill   tip smoker    time\n0         16.99  1.01     No  Dinner\n1         10.34  1.66     No  Dinner\n2         21.01  3.50     No  Dinner\n3         23.68  3.31     No  Dinner\n4         24.59  3.61     No  Dinner\n..          ...   ...    ...     ...\n239       29.03  5.92     No  Dinner\n240       27.18  2.00    Yes  Dinner\n241       22.67  2.00    Yes  Dinner\n242       17.82  1.75     No  Dinner\n243       18.78  3.00     No  Dinner\n\n[244 rows x 4 columns] \n```", "```py\nSELECT  *,  tip/total_bill  as  tip_rate\nFROM  tips; \n```", "```py\nIn [7]: tips.assign(tip_rate=tips[\"tip\"] / tips[\"total_bill\"])\nOut[7]: \n total_bill   tip     sex smoker   day    time  size  tip_rate\n0         16.99  1.01  Female     No   Sun  Dinner     2  0.059447\n1         10.34  1.66    Male     No   Sun  Dinner     3  0.160542\n2         21.01  3.50    Male     No   Sun  Dinner     3  0.166587\n3         23.68  3.31    Male     No   Sun  Dinner     2  0.139780\n4         24.59  3.61  Female     No   Sun  Dinner     4  0.146808\n..          ...   ...     ...    ...   ...     ...   ...       ...\n239       29.03  5.92    Male     No   Sat  Dinner     3  0.203927\n240       27.18  2.00  Female    Yes   Sat  Dinner     2  0.073584\n241       22.67  2.00    Male    Yes   Sat  Dinner     2  0.088222\n242       17.82  1.75    Male     No   Sat  Dinner     2  0.098204\n243       18.78  3.00  Female     No  Thur  Dinner     2  0.159744\n\n[244 rows x 8 columns] \n```", "```py\nSELECT  *\nFROM  tips\nWHERE  time  =  'Dinner'; \n```", "```py\nIn [8]: tips[tips[\"total_bill\"] > 10]\nOut[8]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[227 rows x 7 columns] \n```", "```py\nIn [9]: is_dinner = tips[\"time\"] == \"Dinner\"\n\nIn [10]: is_dinner\nOut[10]: \n0      True\n1      True\n2      True\n3      True\n4      True\n ... \n239    True\n240    True\n241    True\n242    True\n243    True\nName: time, Length: 244, dtype: bool\n\nIn [11]: is_dinner.value_counts()\nOut[11]: \ntime\nTrue     176\nFalse     68\nName: count, dtype: int64\n\nIn [12]: tips[is_dinner]\nOut[12]: \n total_bill   tip     sex smoker   day    time  size\n0         16.99  1.01  Female     No   Sun  Dinner     2\n1         10.34  1.66    Male     No   Sun  Dinner     3\n2         21.01  3.50    Male     No   Sun  Dinner     3\n3         23.68  3.31    Male     No   Sun  Dinner     2\n4         24.59  3.61  Female     No   Sun  Dinner     4\n..          ...   ...     ...    ...   ...     ...   ...\n239       29.03  5.92    Male     No   Sat  Dinner     3\n240       27.18  2.00  Female    Yes   Sat  Dinner     2\n241       22.67  2.00    Male    Yes   Sat  Dinner     2\n242       17.82  1.75    Male     No   Sat  Dinner     2\n243       18.78  3.00  Female     No  Thur  Dinner     2\n\n[176 rows x 7 columns] \n```", "```py\nSELECT  *\nFROM  tips\nWHERE  time  =  'Dinner'  AND  tip  >  5.00; \n```", "```py\nIn [13]: tips[(tips[\"time\"] == \"Dinner\") & (tips[\"tip\"] > 5.00)]\nOut[13]: \n total_bill    tip     sex smoker  day    time  size\n23        39.42   7.58    Male     No  Sat  Dinner     4\n44        30.40   5.60    Male     No  Sun  Dinner     4\n47        32.40   6.00    Male     No  Sun  Dinner     4\n52        34.81   5.20  Female     No  Sun  Dinner     4\n59        48.27   6.73    Male     No  Sat  Dinner     4\n116       29.93   5.07    Male     No  Sun  Dinner     4\n155       29.85   5.14  Female     No  Sun  Dinner     5\n170       50.81  10.00    Male    Yes  Sat  Dinner     3\n172        7.25   5.15    Male    Yes  Sun  Dinner     2\n181       23.33   5.65    Male    Yes  Sun  Dinner     2\n183       23.17   6.50    Male    Yes  Sun  Dinner     4\n211       25.89   5.16    Male    Yes  Sat  Dinner     4\n212       48.33   9.00    Male     No  Sat  Dinner     4\n214       28.17   6.50  Female    Yes  Sat  Dinner     3\n239       29.03   5.92    Male     No  Sat  Dinner     3 \n```", "```py\nSELECT  *\nFROM  tips\nWHERE  size  >=  5  OR  total_bill  >  45; \n```", "```py\nIn [14]: tips[(tips[\"size\"] >= 5) | (tips[\"total_bill\"] > 45)]\nOut[14]: \n total_bill    tip     sex smoker   day    time  size\n59        48.27   6.73    Male     No   Sat  Dinner     4\n125       29.80   4.20  Female     No  Thur   Lunch     6\n141       34.30   6.70    Male     No  Thur   Lunch     6\n142       41.19   5.00    Male     No  Thur   Lunch     5\n143       27.05   5.00  Female     No  Thur   Lunch     6\n155       29.85   5.14  Female     No   Sun  Dinner     5\n156       48.17   5.00    Male     No   Sun  Dinner     6\n170       50.81  10.00    Male    Yes   Sat  Dinner     3\n182       45.35   3.50    Male    Yes   Sun  Dinner     3\n185       20.69   5.00    Male     No   Sun  Dinner     5\n187       30.46   2.00    Male    Yes   Sun  Dinner     5\n212       48.33   9.00    Male     No   Sat  Dinner     4\n216       28.15   3.00    Male    Yes   Sat  Dinner     5 \n```", "```py\nIn [15]: frame = pd.DataFrame(\n ....:    {\"col1\": [\"A\", \"B\", np.nan, \"C\", \"D\"], \"col2\": [\"F\", np.nan, \"G\", \"H\", \"I\"]}\n ....: )\n ....: \n\nIn [16]: frame\nOut[16]: \n col1 col2\n0    A    F\n1    B  NaN\n2  NaN    G\n3    C    H\n4    D    I \n```", "```py\nSELECT  *\nFROM  frame\nWHERE  col2  IS  NULL; \n```", "```py\nIn [17]: frame[frame[\"col2\"].isna()]\nOut[17]: \n col1 col2\n1    B  NaN \n```", "```py\nSELECT  *\nFROM  frame\nWHERE  col1  IS  NOT  NULL; \n```", "```py\nIn [18]: frame[frame[\"col1\"].notna()]\nOut[18]: \n col1 col2\n0    A    F\n1    B  NaN\n3    C    H\n4    D    I \n```", "```py\nSELECT  sex,  count(*)\nFROM  tips\nGROUP  BY  sex;\n/*\nFemale     87\nMale      157\n*/ \n```", "```py\nIn [19]: tips.groupby(\"sex\").size()\nOut[19]: \nsex\nFemale     87\nMale      157\ndtype: int64 \n```", "```py\nIn [20]: tips.groupby(\"sex\").count()\nOut[20]: \n total_bill  tip  smoker  day  time  size\nsex \nFemale          87   87      87   87    87    87\nMale           157  157     157  157   157   157 \n```", "```py\nIn [21]: tips.groupby(\"sex\")[\"total_bill\"].count()\nOut[21]: \nsex\nFemale     87\nMale      157\nName: total_bill, dtype: int64 \n```", "```py\nSELECT  day,  AVG(tip),  COUNT(*)\nFROM  tips\nGROUP  BY  day;\n/*\nFri   2.734737   19\nSat   2.993103   87\nSun   3.255132   76\nThu  2.771452   62\n*/ \n```", "```py\nIn [22]: tips.groupby(\"day\").agg({\"tip\": \"mean\", \"day\": \"size\"})\nOut[22]: \n tip  day\nday \nFri   2.734737   19\nSat   2.993103   87\nSun   3.255132   76\nThur  2.771452   62 \n```", "```py\nSELECT  smoker,  day,  COUNT(*),  AVG(tip)\nFROM  tips\nGROUP  BY  smoker,  day;\n/*\nsmoker day\nNo     Fri      4  2.812500\n Sat     45  3.102889\n Sun     57  3.167895\n Thu    45  2.673778\nYes    Fri     15  2.714000\n Sat     42  2.875476\n Sun     19  3.516842\n Thu    17  3.030000\n*/ \n```", "```py\nIn [23]: tips.groupby([\"smoker\", \"day\"]).agg({\"tip\": [\"size\", \"mean\"]})\nOut[23]: \n tip \n size      mean\nsmoker day \nNo     Fri     4  2.812500\n Sat    45  3.102889\n Sun    57  3.167895\n Thur   45  2.673778\nYes    Fri    15  2.714000\n Sat    42  2.875476\n Sun    19  3.516842\n Thur   17  3.030000 \n```", "```py\nIn [24]: df1 = pd.DataFrame({\"key\": [\"A\", \"B\", \"C\", \"D\"], \"value\": np.random.randn(4)})\n\nIn [25]: df2 = pd.DataFrame({\"key\": [\"B\", \"D\", \"D\", \"E\"], \"value\": np.random.randn(4)}) \n```", "```py\nSELECT  *\nFROM  df1\nINNER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\n# merge performs an INNER JOIN by default\nIn [26]: pd.merge(df1, df2, on=\"key\")\nOut[26]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209 \n```", "```py\nIn [27]: indexed_df2 = df2.set_index(\"key\")\n\nIn [28]: pd.merge(df1, indexed_df2, left_on=\"key\", right_index=True)\nOut[28]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n3   D -1.135632  0.119209 \n```", "```py\nSELECT  *\nFROM  df1\nLEFT  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [29]: pd.merge(df1, df2, on=\"key\", how=\"left\")\nOut[29]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nSELECT  *\nFROM  df1\nRIGHT  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [30]: pd.merge(df1, df2, on=\"key\", how=\"right\")\nOut[30]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n3   E       NaN -1.044236 \n```", "```py\nSELECT  *\nFROM  df1\nFULL  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [31]: pd.merge(df1, df2, on=\"key\", how=\"outer\")\nOut[31]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236 \n```", "```py\nSELECT  *\nFROM  df1\nINNER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\n# merge performs an INNER JOIN by default\nIn [26]: pd.merge(df1, df2, on=\"key\")\nOut[26]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209 \n```", "```py\nIn [27]: indexed_df2 = df2.set_index(\"key\")\n\nIn [28]: pd.merge(df1, indexed_df2, left_on=\"key\", right_index=True)\nOut[28]: \n key   value_x   value_y\n1   B -0.282863  1.212112\n3   D -1.135632 -0.173215\n3   D -1.135632  0.119209 \n```", "```py\nSELECT  *\nFROM  df1\nLEFT  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [29]: pd.merge(df1, df2, on=\"key\", how=\"left\")\nOut[29]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209 \n```", "```py\nSELECT  *\nFROM  df1\nRIGHT  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [30]: pd.merge(df1, df2, on=\"key\", how=\"right\")\nOut[30]: \n key   value_x   value_y\n0   B -0.282863  1.212112\n1   D -1.135632 -0.173215\n2   D -1.135632  0.119209\n3   E       NaN -1.044236 \n```", "```py\nSELECT  *\nFROM  df1\nFULL  OUTER  JOIN  df2\n  ON  df1.key  =  df2.key; \n```", "```py\nIn [31]: pd.merge(df1, df2, on=\"key\", how=\"outer\")\nOut[31]: \n key   value_x   value_y\n0   A  0.469112       NaN\n1   B -0.282863  1.212112\n2   C -1.509059       NaN\n3   D -1.135632 -0.173215\n4   D -1.135632  0.119209\n5   E       NaN -1.044236 \n```", "```py\nIn [32]: df1 = pd.DataFrame(\n ....:    {\"city\": [\"Chicago\", \"San Francisco\", \"New York City\"], \"rank\": range(1, 4)}\n ....: )\n ....: \n\nIn [33]: df2 = pd.DataFrame(\n ....:    {\"city\": [\"Chicago\", \"Boston\", \"Los Angeles\"], \"rank\": [1, 4, 5]}\n ....: )\n ....: \n```", "```py\nSELECT  city,  rank\nFROM  df1\nUNION  ALL\nSELECT  city,  rank\nFROM  df2;\n/*\n city  rank\n Chicago     1\nSan Francisco     2\nNew York City     3\n Chicago     1\n Boston     4\n Los Angeles     5\n*/ \n```", "```py\nIn [34]: pd.concat([df1, df2])\nOut[34]: \n city  rank\n0        Chicago     1\n1  San Francisco     2\n2  New York City     3\n0        Chicago     1\n1         Boston     4\n2    Los Angeles     5 \n```", "```py\nSELECT  city,  rank\nFROM  df1\nUNION\nSELECT  city,  rank\nFROM  df2;\n-- notice that there is only one Chicago record this time\n/*\n city  rank\n Chicago     1\nSan Francisco     2\nNew York City     3\n Boston     4\n Los Angeles     5\n*/ \n```", "```py\nIn [35]: pd.concat([df1, df2]).drop_duplicates()\nOut[35]: \n city  rank\n0        Chicago     1\n1  San Francisco     2\n2  New York City     3\n1         Boston     4\n2    Los Angeles     5 \n```", "```py\nSELECT  *  FROM  tips\nLIMIT  10; \n```", "```py\nIn [36]: tips.head(10)\nOut[36]: \n total_bill   tip     sex smoker  day    time  size\n0       16.99  1.01  Female     No  Sun  Dinner     2\n1       10.34  1.66    Male     No  Sun  Dinner     3\n2       21.01  3.50    Male     No  Sun  Dinner     3\n3       23.68  3.31    Male     No  Sun  Dinner     2\n4       24.59  3.61  Female     No  Sun  Dinner     4\n5       25.29  4.71    Male     No  Sun  Dinner     4\n6        8.77  2.00    Male     No  Sun  Dinner     2\n7       26.88  3.12    Male     No  Sun  Dinner     4\n8       15.04  1.96    Male     No  Sun  Dinner     2\n9       14.78  3.23    Male     No  Sun  Dinner     2 \n```", "```py\n-- MySQL\nSELECT  *  FROM  tips\nORDER  BY  tip  DESC\nLIMIT  10  OFFSET  5; \n```", "```py\nIn [37]: tips.nlargest(10 + 5, columns=\"tip\").tail(10)\nOut[37]: \n total_bill   tip     sex smoker   day    time  size\n183       23.17  6.50    Male    Yes   Sun  Dinner     4\n214       28.17  6.50  Female    Yes   Sat  Dinner     3\n47        32.40  6.00    Male     No   Sun  Dinner     4\n239       29.03  5.92    Male     No   Sat  Dinner     3\n88        24.71  5.85    Male     No  Thur   Lunch     2\n181       23.33  5.65    Male    Yes   Sun  Dinner     2\n44        30.40  5.60    Male     No   Sun  Dinner     4\n52        34.81  5.20  Female     No   Sun  Dinner     4\n85        34.83  5.17  Female     No  Thur   Lunch     4\n211       25.89  5.16    Male    Yes   Sat  Dinner     4 \n```", "```py\n-- Oracle's ROW_NUMBER() analytic function\nSELECT  *  FROM  (\n  SELECT\n  t.*,\n  ROW_NUMBER()  OVER(PARTITION  BY  day  ORDER  BY  total_bill  DESC)  AS  rn\n  FROM  tips  t\n)\nWHERE  rn  <  3\nORDER  BY  day,  rn; \n```", "```py\nIn [38]: (\n ....:    tips.assign(\n ....:        rn=tips.sort_values([\"total_bill\"], ascending=False)\n ....:        .groupby([\"day\"])\n ....:        .cumcount()\n ....:        + 1\n ....:    )\n ....:    .query(\"rn < 3\")\n ....:    .sort_values([\"day\", \"rn\"])\n ....: )\n ....: \nOut[38]: \n total_bill    tip     sex smoker   day    time  size  rn\n95        40.17   4.73    Male    Yes   Fri  Dinner     4   1\n90        28.97   3.00    Male    Yes   Fri  Dinner     2   2\n170       50.81  10.00    Male    Yes   Sat  Dinner     3   1\n212       48.33   9.00    Male     No   Sat  Dinner     4   2\n156       48.17   5.00    Male     No   Sun  Dinner     6   1\n182       45.35   3.50    Male    Yes   Sun  Dinner     3   2\n197       43.11   5.00  Female    Yes  Thur   Lunch     4   1\n142       41.19   5.00    Male     No  Thur   Lunch     5   2 \n```", "```py\nIn [39]: (\n ....:    tips.assign(\n ....:        rnk=tips.groupby([\"day\"])[\"total_bill\"].rank(\n ....:            method=\"first\", ascending=False\n ....:        )\n ....:    )\n ....:    .query(\"rnk < 3\")\n ....:    .sort_values([\"day\", \"rnk\"])\n ....: )\n ....: \nOut[39]: \n total_bill    tip     sex smoker   day    time  size  rnk\n95        40.17   4.73    Male    Yes   Fri  Dinner     4  1.0\n90        28.97   3.00    Male    Yes   Fri  Dinner     2  2.0\n170       50.81  10.00    Male    Yes   Sat  Dinner     3  1.0\n212       48.33   9.00    Male     No   Sat  Dinner     4  2.0\n156       48.17   5.00    Male     No   Sun  Dinner     6  1.0\n182       45.35   3.50    Male    Yes   Sun  Dinner     3  2.0\n197       43.11   5.00  Female    Yes  Thur   Lunch     4  1.0\n142       41.19   5.00    Male     No  Thur   Lunch     5  2.0 \n```", "```py\n-- Oracle's RANK() analytic function\nSELECT  *  FROM  (\n  SELECT\n  t.*,\n  RANK()  OVER(PARTITION  BY  sex  ORDER  BY  tip)  AS  rnk\n  FROM  tips  t\n  WHERE  tip  <  2\n)\nWHERE  rnk  <  3\nORDER  BY  sex,  rnk; \n```", "```py\nIn [40]: (\n ....:    tips[tips[\"tip\"] < 2]\n ....:    .assign(rnk_min=tips.groupby([\"sex\"])[\"tip\"].rank(method=\"min\"))\n ....:    .query(\"rnk_min < 3\")\n ....:    .sort_values([\"sex\", \"rnk_min\"])\n ....: )\n ....: \nOut[40]: \n total_bill   tip     sex smoker  day    time  size  rnk_min\n67         3.07  1.00  Female    Yes  Sat  Dinner     1      1.0\n92         5.75  1.00  Female    Yes  Fri  Dinner     2      1.0\n111        7.25  1.00  Female     No  Sat  Dinner     1      1.0\n236       12.60  1.00    Male    Yes  Sat  Dinner     2      1.0\n237       32.83  1.17    Male    Yes  Sat  Dinner     2      2.0 \n```", "```py\n-- MySQL\nSELECT  *  FROM  tips\nORDER  BY  tip  DESC\nLIMIT  10  OFFSET  5; \n```", "```py\nIn [37]: tips.nlargest(10 + 5, columns=\"tip\").tail(10)\nOut[37]: \n total_bill   tip     sex smoker   day    time  size\n183       23.17  6.50    Male    Yes   Sun  Dinner     4\n214       28.17  6.50  Female    Yes   Sat  Dinner     3\n47        32.40  6.00    Male     No   Sun  Dinner     4\n239       29.03  5.92    Male     No   Sat  Dinner     3\n88        24.71  5.85    Male     No  Thur   Lunch     2\n181       23.33  5.65    Male    Yes   Sun  Dinner     2\n44        30.40  5.60    Male     No   Sun  Dinner     4\n52        34.81  5.20  Female     No   Sun  Dinner     4\n85        34.83  5.17  Female     No  Thur   Lunch     4\n211       25.89  5.16    Male    Yes   Sat  Dinner     4 \n```", "```py\n-- Oracle's ROW_NUMBER() analytic function\nSELECT  *  FROM  (\n  SELECT\n  t.*,\n  ROW_NUMBER()  OVER(PARTITION  BY  day  ORDER  BY  total_bill  DESC)  AS  rn\n  FROM  tips  t\n)\nWHERE  rn  <  3\nORDER  BY  day,  rn; \n```", "```py\nIn [38]: (\n ....:    tips.assign(\n ....:        rn=tips.sort_values([\"total_bill\"], ascending=False)\n ....:        .groupby([\"day\"])\n ....:        .cumcount()\n ....:        + 1\n ....:    )\n ....:    .query(\"rn < 3\")\n ....:    .sort_values([\"day\", \"rn\"])\n ....: )\n ....: \nOut[38]: \n total_bill    tip     sex smoker   day    time  size  rn\n95        40.17   4.73    Male    Yes   Fri  Dinner     4   1\n90        28.97   3.00    Male    Yes   Fri  Dinner     2   2\n170       50.81  10.00    Male    Yes   Sat  Dinner     3   1\n212       48.33   9.00    Male     No   Sat  Dinner     4   2\n156       48.17   5.00    Male     No   Sun  Dinner     6   1\n182       45.35   3.50    Male    Yes   Sun  Dinner     3   2\n197       43.11   5.00  Female    Yes  Thur   Lunch     4   1\n142       41.19   5.00    Male     No  Thur   Lunch     5   2 \n```", "```py\nIn [39]: (\n ....:    tips.assign(\n ....:        rnk=tips.groupby([\"day\"])[\"total_bill\"].rank(\n ....:            method=\"first\", ascending=False\n ....:        )\n ....:    )\n ....:    .query(\"rnk < 3\")\n ....:    .sort_values([\"day\", \"rnk\"])\n ....: )\n ....: \nOut[39]: \n total_bill    tip     sex smoker   day    time  size  rnk\n95        40.17   4.73    Male    Yes   Fri  Dinner     4  1.0\n90        28.97   3.00    Male    Yes   Fri  Dinner     2  2.0\n170       50.81  10.00    Male    Yes   Sat  Dinner     3  1.0\n212       48.33   9.00    Male     No   Sat  Dinner     4  2.0\n156       48.17   5.00    Male     No   Sun  Dinner     6  1.0\n182       45.35   3.50    Male    Yes   Sun  Dinner     3  2.0\n197       43.11   5.00  Female    Yes  Thur   Lunch     4  1.0\n142       41.19   5.00    Male     No  Thur   Lunch     5  2.0 \n```", "```py\n-- Oracle's RANK() analytic function\nSELECT  *  FROM  (\n  SELECT\n  t.*,\n  RANK()  OVER(PARTITION  BY  sex  ORDER  BY  tip)  AS  rnk\n  FROM  tips  t\n  WHERE  tip  <  2\n)\nWHERE  rnk  <  3\nORDER  BY  sex,  rnk; \n```", "```py\nIn [40]: (\n ....:    tips[tips[\"tip\"] < 2]\n ....:    .assign(rnk_min=tips.groupby([\"sex\"])[\"tip\"].rank(method=\"min\"))\n ....:    .query(\"rnk_min < 3\")\n ....:    .sort_values([\"sex\", \"rnk_min\"])\n ....: )\n ....: \nOut[40]: \n total_bill   tip     sex smoker  day    time  size  rnk_min\n67         3.07  1.00  Female    Yes  Sat  Dinner     1      1.0\n92         5.75  1.00  Female    Yes  Fri  Dinner     2      1.0\n111        7.25  1.00  Female     No  Sat  Dinner     1      1.0\n236       12.60  1.00    Male    Yes  Sat  Dinner     2      1.0\n237       32.83  1.17    Male    Yes  Sat  Dinner     2      2.0 \n```", "```py\nUPDATE  tips\nSET  tip  =  tip*2\nWHERE  tip  <  2; \n```", "```py\nIn [41]: tips.loc[tips[\"tip\"] < 2, \"tip\"] *= 2 \n```", "```py\nDELETE  FROM  tips\nWHERE  tip  >  9; \n```", "```py\nIn [42]: tips = tips.loc[tips[\"tip\"] <= 9] \n```"]