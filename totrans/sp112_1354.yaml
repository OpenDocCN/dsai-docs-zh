- en: scipy.stats.boxcox_normmax
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: scipy.stats.boxcox_normmax
- en: Original text：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.boxcox_normmax.html#scipy.stats.boxcox_normmax](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.boxcox_normmax.html#scipy.stats.boxcox_normmax)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.boxcox_normmax.html#scipy.stats.boxcox_normmax](https://docs.scipy.org/doc/scipy-1.12.0/reference/generated/scipy.stats.boxcox_normmax.html#scipy.stats.boxcox_normmax)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compute optimal Box-Cox transform parameter for input data.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算输入数据的最佳 Box-Cox 变换参数。
- en: 'Parameters:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x**array_like'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** array_like'
- en: Input array. All entries must be positive, finite, real numbers.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 输入数组。所有条目必须为正有限实数。
- en: '**brack**2-tuple, optional, default (-2.0, 2.0)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**brack** 2-元组，可选，默认为 (-2.0, 2.0)'
- en: The starting interval for a downhill bracket search for the default *optimize.brent*
    solver. Note that this is in most cases not critical; the final result is allowed
    to be outside this bracket. If *optimizer* is passed, *brack* must be None.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 默认 *optimize.brent* 求解器进行向下斜坡搜索的起始区间。请注意，这在大多数情况下并不重要；最终结果允许在此区间之外。如果传递了 *optimizer*，则
    *brack* 必须为 None。
- en: '**method**str, optional'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**method** str，可选'
- en: 'The method to determine the optimal transform parameter ([`boxcox`](scipy.stats.boxcox.html#scipy.stats.boxcox
    "scipy.stats.boxcox") `lmbda` parameter). Options are:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 确定最佳变换参数（[`boxcox`](scipy.stats.boxcox.html#scipy.stats.boxcox "scipy.stats.boxcox")
    的 `lmbda` 参数）的方法。选项包括：
- en: ‘pearsonr’ (default)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ‘pearsonr’（默认）
- en: Maximizes the Pearson correlation coefficient between `y = boxcox(x)` and the
    expected values for `y` if *x* would be normally-distributed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最大化皮尔逊相关系数，使 `y = boxcox(x)` 与 `y` 的期望值在 *x* 若为正态分布时保持一致。
- en: ‘mle’
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ‘mle’
- en: Maximizes the log-likelihood [`boxcox_llf`](scipy.stats.boxcox_llf.html#scipy.stats.boxcox_llf
    "scipy.stats.boxcox_llf"). This is the method used in [`boxcox`](scipy.stats.boxcox.html#scipy.stats.boxcox
    "scipy.stats.boxcox").
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最大化对数似然 [`boxcox_llf`](scipy.stats.boxcox_llf.html#scipy.stats.boxcox_llf "scipy.stats.boxcox_llf")。这是
    [`boxcox`](scipy.stats.boxcox.html#scipy.stats.boxcox "scipy.stats.boxcox") 中使用的方法。
- en: ‘all’
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ‘all’
- en: Use all optimization methods available, and return all results. Useful to compare
    different methods.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用所有可用的优化方法，并返回所有结果。有助于比较不同的方法。
- en: '**optimizer**callable, optional'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**optimizer** 可调用函数，可选'
- en: '*optimizer* is a callable that accepts one argument:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*optimizer* 是一个接受一个参数的可调用函数：'
- en: funcallable
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: funcallable
- en: The objective function to be minimized. *fun* accepts one argument, the Box-Cox
    transform parameter *lmbda*, and returns the value of the function (e.g., the
    negative log-likelihood) at the provided argument. The job of *optimizer* is to
    find the value of *lmbda* that *minimizes* *fun*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要最小化的目标函数。*fun* 接受一个参数，即 Box-Cox 变换参数 *lmbda*，并返回在提供的参数处函数值（例如，负对数似然）。*optimizer*
    的任务是找到最小化 *fun* 的 *lmbda* 值。
- en: and returns an object, such as an instance of [`scipy.optimize.OptimizeResult`](scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult"), which holds the optimal value of *lmbda* in
    an attribute *x*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 并返回一个对象，如 [`scipy.optimize.OptimizeResult`](scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult
    "scipy.optimize.OptimizeResult") 的实例，其中保存了属性 *x* 的最佳 *lmbda* 值。
- en: See the example below or the documentation of [`scipy.optimize.minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar") for more information.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请参见下面的示例或 [`scipy.optimize.minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar") 的文档。
- en: 'Returns:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**maxlog**float or ndarray'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**maxlog** 浮点数或 ndarray'
- en: The optimal transform parameter found. An array instead of a scalar for `method='all'`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 找到的最佳变换参数。对于 `method='all'`，这是一个数组而不是标量。
- en: See also
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 参见
- en: '[`boxcox`](scipy.stats.boxcox.html#scipy.stats.boxcox "scipy.stats.boxcox"),
    [`boxcox_llf`](scipy.stats.boxcox_llf.html#scipy.stats.boxcox_llf "scipy.stats.boxcox_llf"),
    [`boxcox_normplot`](scipy.stats.boxcox_normplot.html#scipy.stats.boxcox_normplot
    "scipy.stats.boxcox_normplot"), [`scipy.optimize.minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[`boxcox`](scipy.stats.boxcox.html#scipy.stats.boxcox "scipy.stats.boxcox")、[`boxcox_llf`](scipy.stats.boxcox_llf.html#scipy.stats.boxcox_llf
    "scipy.stats.boxcox_llf")、[`boxcox_normplot`](scipy.stats.boxcox_normplot.html#scipy.stats.boxcox_normplot
    "scipy.stats.boxcox_normplot")、[`scipy.optimize.minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar") 的示例'
- en: Examples
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can generate some data and determine the optimal `lmbda` in various ways:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以生成一些数据，并以各种方式确定最佳的 `lmbda`：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![../../_images/scipy-stats-boxcox_normmax-1_00_00.png](../Images/94b0112c630a47b974c67c693040a7d9.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![../../_images/scipy-stats-boxcox_normmax-1_00_00.png](../Images/94b0112c630a47b974c67c693040a7d9.png)'
- en: 'Alternatively, we can define our own *optimizer* function. Suppose we are only
    interested in values of *lmbda* on the interval [6, 7], we want to use [`scipy.optimize.minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar") with `method=''bounded''`, and we want to use
    tighter tolerances when optimizing the log-likelihood function. To do this, we
    define a function that accepts positional argument *fun* and uses [`scipy.optimize.minimize_scalar`](scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar") to minimize *fun* subject to the provided bounds
    and tolerances:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以定义自己的*优化器*函数。假设我们只对区间[6, 7]上的*lmbda*值感兴趣，我们希望使用[`scipy.optimize.minimize_scalar`](https://scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")，设置`method='bounded'`，并且在优化对数似然函数时希望使用更严格的公差。为此，我们定义一个接受位置参数*fun*的函数，并使用[`scipy.optimize.minimize_scalar`](https://scipy.optimize.minimize_scalar.html#scipy.optimize.minimize_scalar
    "scipy.optimize.minimize_scalar")来最小化*fun*，同时满足提供的边界和公差：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
