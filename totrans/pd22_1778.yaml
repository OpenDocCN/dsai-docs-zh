- en: pandas.io.formats.style.Styler.set_properties
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.set_properties.html](https://pandas.pydata.org/docs/reference/api/pandas.io.formats.style.Styler.set_properties.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Set defined CSS-properties to each `<td>` HTML element for the given subset.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**subset**label, array-like, IndexSlice, optional'
  prefs: []
  type: TYPE_NORMAL
- en: A valid 2d input to DataFrame.loc[<subset>], or, in the case of a 1d input or
    single key, to DataFrame.loc[:, <subset>] where the columns are prioritised, to
    limit `data` to *before* applying the function.
  prefs: []
  type: TYPE_NORMAL
- en: '****kwargs**dict'
  prefs: []
  type: TYPE_NORMAL
- en: A dictionary of property, value pairs to be set for each cell.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: Styler
  prefs: []
  type: TYPE_NORMAL
- en: Notes
  prefs: []
  type: TYPE_NORMAL
- en: This is a convenience methods which wraps the [`Styler.map()`](pandas.io.formats.style.Styler.map.html#pandas.io.formats.style.Styler.map
    "pandas.io.formats.style.Styler.map") calling a function returning the CSS-properties
    independently of the data.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: See [Table Visualization](../../user_guide/style.html) user guide for more details.
  prefs: []
  type: TYPE_NORMAL
